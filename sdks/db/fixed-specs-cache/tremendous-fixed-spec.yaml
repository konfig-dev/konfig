publishJson:
  company: Tremendous
  serviceName: false
  sdkName: tremendous-{language}-sdk
  clientName: Tremendous
  metaDescription: >-
    Tremendous is the simplest way to send rewards and payouts around the world.
    We've helped businesses send over 10 million payouts globally. We handle
    everything related to international sending, so you can issue rewards to
    recipients in over 200 countries. And you can give them the gift of choice:
    we offer 1,000 different redemption options. Plus, we're free to use. You
    only spend what you send. And if you or your recipients ever hit a snag, our
    best-in-class customer support team has you covered.


    We're 75 people, fully remote, highly profitable, and self-funded (yes,
    crazy, we know.) Even if you like your job, you'll probably be happier at
    Tremendous. Come work with us!
  apiStatusUrls: inherit
  homepage: www.tremendous.com/
  developerDocumentation: developers.tremendous.com/
  categories:
    - payments
    - finance
    - developer_tools
    - payouts
rawSpecString: |
  openapi: 3.0.2
  info:
    version: '2'
    title: API Endpoints
    description: >-
      Deliver monetary rewards and incentives to employees, customers, survey
      participants, and more through the Tremendous API. For organizational tasks,
      like managing your organization and it's members within Tremendous, please
      see the Tremendous Organizational API.
    termsOfService: https://www.tremendous.com/terms
    contact:
      name: API Support
      email: developers@tremendous.com
  servers:
    - url: https://testflight.tremendous.com/api/v2
      description: Sandbox environment
    - url: https://www.tremendous.com/api/v2
      description: Production environment
  security:
    - BearerApiKey: []
  paths:
    /rewards:
      get:
        summary: List rewards
        description: |
          Retrieve a list of all created rewards
        operationId: list-rewards
        tags:
          - Rewards
        parameters:
          - name: offset
            in: query
            description: >-
              Offsets the returned list by the given number of rewards. The
              returned rewards are ordered (and offsetted) by their creation date
              (DESC).
            required: false
            schema:
              type: integer
            example: 10
        responses:
          '200':
            description: List of existing rewards. Ordered by creation date (DESC).
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    rewards:
                      type: array
                      items:
                        type: object
                        description: >
                          A single reward, sent to a recipient. A reward is always
                          part of an order.


                          Either `products` or `campaign_id` must be specified.
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                            description: Tremendous ID of the reward
                          order_id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                            description: Tremendous ID of the order this reward is part of.
                          created_at:
                            type: string
                            format: date-time
                            description: Date the reward was created
                          value:
                            type: object
                            properties:
                              denomination:
                                type: number
                                format: double
                                description: Amount of the reward
                              currency_code:
                                type: string
                                enum:
                                  - USD
                                  - CAD
                                  - EUR
                                  - AED
                                  - AFN
                                  - ALL
                                  - AMD
                                  - ARS
                                  - AUD
                                  - AZN
                                  - BAM
                                  - BDT
                                  - BGN
                                  - BHD
                                  - BIF
                                  - BND
                                  - BOB
                                  - BRL
                                  - BWP
                                  - BYR
                                  - BZD
                                  - CDF
                                  - CHF
                                  - CLP
                                  - CNY
                                  - COP
                                  - CRC
                                  - CVE
                                  - CZK
                                  - DJF
                                  - DKK
                                  - DOP
                                  - DZD
                                  - EEK
                                  - EGP
                                  - ERN
                                  - ETB
                                  - GBP
                                  - GEL
                                  - GHS
                                  - GNF
                                  - GTQ
                                  - HKD
                                  - HNL
                                  - HRK
                                  - HUF
                                  - IDR
                                  - ILS
                                  - INR
                                  - IQD
                                  - IRR
                                  - ISK
                                  - JMD
                                  - JOD
                                  - JPY
                                  - KES
                                  - KHR
                                  - KRW
                                  - KWD
                                  - KZT
                                  - LBP
                                  - LKR
                                  - LTL
                                  - LVL
                                  - MAD
                                  - MDL
                                  - MGA
                                  - MKD
                                  - MMK
                                  - MOP
                                  - MUR
                                  - MXN
                                  - MYR
                                  - MZN
                                  - NAD
                                  - NGN
                                  - NIO
                                  - NOK
                                  - NPR
                                  - NZD
                                  - OMR
                                  - PAB
                                  - PEN
                                  - PHP
                                  - PKR
                                  - PLN
                                  - PYG
                                  - QAR
                                  - RON
                                  - RSD
                                  - RUB
                                  - RWF
                                  - SAR
                                  - SDG
                                  - SEK
                                  - SGD
                                  - SOS
                                  - SYP
                                  - THB
                                  - TND
                                  - TOP
                                  - TRY
                                  - TTD
                                  - TWD
                                  - TZS
                                  - UAH
                                  - UGX
                                  - UYU
                                  - UZS
                                  - VEF
                                  - VND
                                  - XAF
                                  - XOF
                                  - YER
                                  - ZAR
                                  - ZMK
                                example: USD
                                description: Currency of the reward
                            required:
                              - denomination
                              - currency_code
                            example:
                              denomination: 50
                              currency_code: USD
                          recipient:
                            type: object
                            description: Details of the recipient of the reward
                            properties:
                              name:
                                type: string
                                description: Name of the recipient
                                example: John Doe Jr.
                              email:
                                type: string
                                description: Email address of the recipient
                                example: john.doe@example.com
                              phone:
                                type: string
                                description: >-
                                  Phone number of the recipient. For non-US phone
                                  numbers, specify the country code (prefixed with
                                  +).
                                example: 123-456-7890
                          deliver_at:
                            type: string
                            format: date
                            description: >-
                              Timestamp of reward delivery within the next year.
                              Note that if date-time is provided, the time values
                              will be ignored.
                            pattern: YYYY-MM-DD
                            example: '2023-12-31'
                          custom_fields:
                            type: array
                            items:
                              type: object
                              description: >-
                                Reward custom data for searching, tracking or copy
                                (see [Adding custom fields to
                                orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                              properties:
                                id:
                                  type: string
                                  pattern: '[A-Z0-9]{4,20}'
                                  example: SOMEIDSOMEID
                                  description: Tremendous ID of the custom field
                                value:
                                  type: string
                                  description: Value of the custom field
                                  example: Hufflepuff
                                  nullable: true
                                label:
                                  type: string
                                  description: Label of the custom field
                                  example: harry_potter_house
                          delivery:
                            description: >
                              Details on how the reward is delivered to the
                              recipient.
                            type: object
                            properties:
                              method:
                                description: |
                                  How to deliver the reward to the recipient.

                                  <table>
                                    <thead>
                                      <tr>
                                        <th>Delivery Method</th>
                                        <th>Description</th>
                                      </tr>
                                    </thead>
                                    <tbody>
                                      <tr>
                                        <td><code>EMAIL</code></td>
                                        <td>Deliver the reward to the recipient by email</td>
                                      </tr>
                                      <tr>
                                        <td><code>LINK</code></td>
                                        <td>
                                          <p>Deliver the reward to the recipient via a link.</p>
                                          <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                        </td>
                                      </tr>
                                      <tr>
                                        <td><code>PHONE</code></td>
                                        <td>Deliver the reward to the recipient by SMS</td>
                                      </tr>
                                    </tbody>
                                  </table>
                                type: string
                                enum:
                                  - EMAIL
                                  - LINK
                                  - PHONE
                              status:
                                type: string
                                enum:
                                  - SCHEDULED
                                  - FAILED
                                  - SUCCEEDED
                                  - PENDING
                                description: >
                                  Current status of the delivery of the reward:


                                  * `SCHEDULED` - Reward is scheduled for delivery
                                  and will be delivered soon.

                                  * `FAILED` - Delivery of reward failed (e.g.
                                  email bounced).

                                  * `SUCCEEDED` - Reward was successfully
                                  delivered (email or text message delivered or
                                  reward link opened).

                                  * `PENDING` - Delivery is pending but not yet
                                  scheduled.
                            required:
                              - method
                              - status
                    total_count:
                      type: integer
                      description: The total number of rewards across all pages
                      example: 1
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /rewards/{id}:
      get:
        summary: Retrieve single reward
        description: |
          Retrieve the reward, identified by the given `id` in the URL
        operationId: get-reward
        tags:
          - Rewards
        parameters:
          - name: id
            in: path
            description: ID of the reward that should be retrieved
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: A reward (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - reward
                  properties:
                    reward:
                      type: object
                      description: >
                        A single reward, sent to a recipient. A reward is always
                        part of an order.


                        Either `products` or `campaign_id` must be specified.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the reward
                        order_id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the order this reward is part of.
                        created_at:
                          type: string
                          format: date-time
                          description: Date the reward was created
                        value:
                          type: object
                          properties:
                            denomination:
                              type: number
                              format: double
                              description: Amount of the reward
                            currency_code:
                              type: string
                              enum:
                                - USD
                                - CAD
                                - EUR
                                - AED
                                - AFN
                                - ALL
                                - AMD
                                - ARS
                                - AUD
                                - AZN
                                - BAM
                                - BDT
                                - BGN
                                - BHD
                                - BIF
                                - BND
                                - BOB
                                - BRL
                                - BWP
                                - BYR
                                - BZD
                                - CDF
                                - CHF
                                - CLP
                                - CNY
                                - COP
                                - CRC
                                - CVE
                                - CZK
                                - DJF
                                - DKK
                                - DOP
                                - DZD
                                - EEK
                                - EGP
                                - ERN
                                - ETB
                                - GBP
                                - GEL
                                - GHS
                                - GNF
                                - GTQ
                                - HKD
                                - HNL
                                - HRK
                                - HUF
                                - IDR
                                - ILS
                                - INR
                                - IQD
                                - IRR
                                - ISK
                                - JMD
                                - JOD
                                - JPY
                                - KES
                                - KHR
                                - KRW
                                - KWD
                                - KZT
                                - LBP
                                - LKR
                                - LTL
                                - LVL
                                - MAD
                                - MDL
                                - MGA
                                - MKD
                                - MMK
                                - MOP
                                - MUR
                                - MXN
                                - MYR
                                - MZN
                                - NAD
                                - NGN
                                - NIO
                                - NOK
                                - NPR
                                - NZD
                                - OMR
                                - PAB
                                - PEN
                                - PHP
                                - PKR
                                - PLN
                                - PYG
                                - QAR
                                - RON
                                - RSD
                                - RUB
                                - RWF
                                - SAR
                                - SDG
                                - SEK
                                - SGD
                                - SOS
                                - SYP
                                - THB
                                - TND
                                - TOP
                                - TRY
                                - TTD
                                - TWD
                                - TZS
                                - UAH
                                - UGX
                                - UYU
                                - UZS
                                - VEF
                                - VND
                                - XAF
                                - XOF
                                - YER
                                - ZAR
                                - ZMK
                              example: USD
                              description: Currency of the reward
                          required:
                            - denomination
                            - currency_code
                          example:
                            denomination: 50
                            currency_code: USD
                        recipient:
                          type: object
                          description: Details of the recipient of the reward
                          properties:
                            name:
                              type: string
                              description: Name of the recipient
                              example: John Doe Jr.
                            email:
                              type: string
                              description: Email address of the recipient
                              example: john.doe@example.com
                            phone:
                              type: string
                              description: >-
                                Phone number of the recipient. For non-US phone
                                numbers, specify the country code (prefixed with
                                +).
                              example: 123-456-7890
                        deliver_at:
                          type: string
                          format: date
                          description: >-
                            Timestamp of reward delivery within the next year.
                            Note that if date-time is provided, the time values
                            will be ignored.
                          pattern: YYYY-MM-DD
                          example: '2023-12-31'
                        custom_fields:
                          type: array
                          items:
                            type: object
                            description: >-
                              Reward custom data for searching, tracking or copy
                              (see [Adding custom fields to
                              orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                            properties:
                              id:
                                type: string
                                pattern: '[A-Z0-9]{4,20}'
                                example: SOMEIDSOMEID
                                description: Tremendous ID of the custom field
                              value:
                                type: string
                                description: Value of the custom field
                                example: Hufflepuff
                                nullable: true
                              label:
                                type: string
                                description: Label of the custom field
                                example: harry_potter_house
                        delivery:
                          description: >
                            Details on how the reward is delivered to the
                            recipient.
                          type: object
                          properties:
                            method:
                              description: |
                                How to deliver the reward to the recipient.

                                <table>
                                  <thead>
                                    <tr>
                                      <th>Delivery Method</th>
                                      <th>Description</th>
                                    </tr>
                                  </thead>
                                  <tbody>
                                    <tr>
                                      <td><code>EMAIL</code></td>
                                      <td>Deliver the reward to the recipient by email</td>
                                    </tr>
                                    <tr>
                                      <td><code>LINK</code></td>
                                      <td>
                                        <p>Deliver the reward to the recipient via a link.</p>
                                        <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                      </td>
                                    </tr>
                                    <tr>
                                      <td><code>PHONE</code></td>
                                      <td>Deliver the reward to the recipient by SMS</td>
                                    </tr>
                                  </tbody>
                                </table>
                              type: string
                              enum:
                                - EMAIL
                                - LINK
                                - PHONE
                            status:
                              type: string
                              enum:
                                - SCHEDULED
                                - FAILED
                                - SUCCEEDED
                                - PENDING
                              description: >
                                Current status of the delivery of the reward:


                                * `SCHEDULED` - Reward is scheduled for delivery
                                and will be delivered soon.

                                * `FAILED` - Delivery of reward failed (e.g. email
                                bounced).

                                * `SUCCEEDED` - Reward was successfully delivered
                                (email or text message delivered or reward link
                                opened).

                                * `PENDING` - Delivery is pending but not yet
                                scheduled.
                          required:
                            - method
                            - status
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /rewards/{id}/generate_link:
      post:
        summary: Generate a reward URL
        description: >
          Generate a redemption link for the reward identified by the `id` in the
          URL
        operationId: generate-reward-link
        tags:
          - Rewards
        parameters:
          - name: id
            in: path
            description: ID of the reward
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: A redemption link for a reward
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - reward
                  properties:
                    reward:
                      type: object
                      description: The redemption link for a reward.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the reward
                        link:
                          type: string
                          description: >
                            Link to redeem the reward at. You need to deliver this
                            link to the recipient.
                          example: >-
                            https://testflight.tremendous.com/rewards/payout/ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '403':
            description: >-
              Operation not permitted; only rewards that are of type link support
              this operation
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Unsupported operation for this reward.
                      payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /rewards/{id}/generate_embed_token:
      post:
        summary: Generate a reward token
        description: >
          Generate a temporary reward token identified by the `id` in the URL.

          These tokens are needed to render a reward when using [Tremendous
          Embed](https://github.com/tremendous-rewards/embed/blob/master/docs/documentation.md).

          The token is valid for 24 hours.
        operationId: generate-reward-token
        tags:
          - Rewards
        parameters:
          - name: id
            in: path
            description: ID of the reward
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: A redemption token for a reward
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - reward
                  properties:
                    reward:
                      type: object
                      description: The redemption token for a reward.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the reward
                        token:
                          type: string
                          description: |
                            The token to redeem the reward.
                          example: ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
                        expires_at:
                          type: string
                          format: date-time
                          description: Date the token expires
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /rewards/{id}/resend:
      post:
        summary: Resend reward
        description: >
          Resends a reward, identified by the given `id` in the URL, to its
          recipient.
        operationId: resend-reward
        tags:
          - Rewards
        parameters:
          - name: id
            in: path
            description: ID of the reward that should be resent
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: Reward will be resent.
            content:
              application/json:
                schema:
                  type: object
                example: {}
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '422':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /orders:
      get:
        summary: List orders
        description: |
          Retrieve a list of orders
        operationId: list-orders
        tags:
          - Orders
        parameters:
          - name: offset
            in: query
            description: >-
              Offsets the returned list by the given number of orders. The
              returned orders are ordered (and offsetted) by their creation date
              (DESC).
            required: false
            schema:
              type: integer
            example: 10
          - name: campaign_id
            in: query
            description: Only return results with a matching campaign_id.
            required: false
            schema:
              type: string
            example: IVM0I3WNJJL0
          - name: external_id
            in: query
            description: Only return results with a matching external_id.
            required: false
            schema:
              type: string
            example: 12878
          - name: created_at[gte]
            in: query
            description: >-
              Only return results where the created_at field is greater than or
              equal to the supplied value. The string needs to be an ISO 8601
              datetime.
            required: false
            schema:
              type: string
            example: '2023-07-15T18:12:18Z'
          - name: created_at[lte]
            in: query
            description: >-
              Only return results where the created_at field is less than or equal
              to the supplied value. The string needs to be an ISO 8601 datetime.
            required: false
            schema:
              type: string
            example: '2023-08-01T18:12:18Z'
          - name: limit
            in: query
            description: >-
              Limits the number of orders listed. The maximum value is 100 and the
              default is 10.
            required: false
            schema:
              type: integer
            example: 10
        responses:
          '200':
            description: List of existing orders. Ordered by creation date (DESC).
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - orders
                    - total_count
                  properties:
                    orders:
                      type: array
                      items:
                        type: object
                        description: >-
                          An order wraps around the fulfilment of one or more
                          rewards.
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                            description: Tremendous ID of the order
                          external_id:
                            type: string
                            nullable: true
                            description: >
                              Reference for this order, supplied by the customer.


                              When set, `external_id` makes order idempotent. All
                              requests that use the same `external_id`

                              after the initial order creation, will result in a
                              response that returns the data of the

                              initially created order. The response will have a
                              `201` response code. These responses

                              **fail** to create any further orders.


                              It also allows for retrieving by `external_id`
                              instead of `id` only.
                            example: Your-Individual-Identifier-for-This-Order
                          campaign_id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: IVM0I3WNJJL0
                            nullable: true
                            description: >
                              ID of the campaign in your account, that defines the
                              available products (different gift cards, charity,
                              etc.)

                              that the recipient can choose from.
                          created_at:
                            type: string
                            format: date-time
                            description: Date the order has been created
                          status:
                            type: string
                            description: |
                              Execution status of a given order

                              <table>
                                <thead>
                                  <tr>
                                    <th>
                                      Status
                                    </th>
                                    <th>
                                      Description
                                    </th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr>
                                    <td>
                                      <code>
                                        CANCELED
                                      </code>
                                    </td>
                                    <td>
                                      The order and all of its rewards were canceled.
                                    </td>
                                  </tr>
                                  <tr>
                                    <td>
                                      <code>
                                        CART
                                      </code>
                                    </td>
                                    <td>
                                      The order has been created, but hasn't yet been processed.
                                    </td>
                                  </tr>
                                  <tr>
                                    <td>
                                      <code>
                                        EXECUTED
                                      </code>
                                    </td>
                                    <td>
                                      The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                                    </td>
                                  </tr>
                                  <tr>
                                    <td>
                                      <code>
                                        FAILED
                                      </code>
                                    </td>
                                    <td>
                                      The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                                    </td>
                                  </tr>
                                  <tr>
                                    <td>
                                      <code>
                                        PENDING APPROVAL
                                      </code>
                                    </td>
                                    <td>
                                      The order has been created but needs approval to be executed.
                                    </td>
                                  </tr>
                                  <tr>
                                    <td>
                                      <code>
                                        PENDING INTERNAL PAYMENT APPROVAL
                                      </code>
                                    </td>
                                    <td>
                                      The order has been created but it is under review and requires approval from our team.
                                    </td>
                                  </tr>

                                </tbody>
                              </table>
                            enum:
                              - CANCELED
                              - CART
                              - EXECUTED
                              - FAILED
                              - PENDING APPROVAL
                              - PENDING INTERNAL PAYMENT APPROVAL
                          payment:
                            type: object
                            properties:
                              subtotal:
                                type: number
                                format: double
                                minimum: 0
                                description: Total price of the order before fees (in USD)
                                example: 50
                              total:
                                type: number
                                format: double
                                minimum: 0
                                description: Total price of the order including fees (in USD)
                                example: 52.5
                              fees:
                                type: number
                                format: double
                                minimum: 0
                                description: Fees for the order (in USD)
                                example: 2.5
                              refund:
                                type: object
                                properties:
                                  total:
                                    type: number
                                    format: double
                                    minimum: 0
                                    description: Total amount of the order refunds (in USD)
                                    example: 52.5
                                required:
                                  - total
                                description: >
                                  Breakdown of the order refunds (total amount in
                                  USD, independent from the currency of the
                                  ordered rewards).

                                  Note that this property will only appear for
                                  canceled orders or orders with canceled rewards.
                              channel:
                                type: string
                                description: >-
                                  Name of the channel in which the order was
                                  created
                                enum:
                                  - UI
                                  - API
                                  - EMBED
                                  - DECIPHER
                                  - QUALTRICS
                                  - TYPEFORM
                                  - SURVEY MONKEY
                            description: >-
                              Cost breakdown of the order (cost of rewards +
                              fees). Cost and fees are always denominated in USD,
                              independent from the currency of the ordered
                              rewards.

                              Note that this property will only appear for
                              processed orders (`status` is `EXECUTED`).
                          invoice_id:
                            type: string
                            description: The ID for the invoice associated with this order
                            example: 2E59A82B-0001
                          reward:
                            type: object
                            description: >
                              A single reward, sent to a recipient. A reward is
                              always part of an order.


                              Either `products` or `campaign_id` must be
                              specified.
                            properties:
                              id:
                                type: string
                                pattern: '[A-Z0-9]{4,20}'
                                example: SOMEIDSOMEID
                                description: Tremendous ID of the reward
                              order_id:
                                type: string
                                pattern: '[A-Z0-9]{4,20}'
                                example: SOMEIDSOMEID
                                description: >-
                                  Tremendous ID of the order this reward is part
                                  of.
                              created_at:
                                type: string
                                format: date-time
                                description: Date the reward was created
                              value:
                                type: object
                                properties:
                                  denomination:
                                    type: number
                                    format: double
                                    description: Amount of the reward
                                  currency_code:
                                    type: string
                                    enum:
                                      - USD
                                      - CAD
                                      - EUR
                                      - AED
                                      - AFN
                                      - ALL
                                      - AMD
                                      - ARS
                                      - AUD
                                      - AZN
                                      - BAM
                                      - BDT
                                      - BGN
                                      - BHD
                                      - BIF
                                      - BND
                                      - BOB
                                      - BRL
                                      - BWP
                                      - BYR
                                      - BZD
                                      - CDF
                                      - CHF
                                      - CLP
                                      - CNY
                                      - COP
                                      - CRC
                                      - CVE
                                      - CZK
                                      - DJF
                                      - DKK
                                      - DOP
                                      - DZD
                                      - EEK
                                      - EGP
                                      - ERN
                                      - ETB
                                      - GBP
                                      - GEL
                                      - GHS
                                      - GNF
                                      - GTQ
                                      - HKD
                                      - HNL
                                      - HRK
                                      - HUF
                                      - IDR
                                      - ILS
                                      - INR
                                      - IQD
                                      - IRR
                                      - ISK
                                      - JMD
                                      - JOD
                                      - JPY
                                      - KES
                                      - KHR
                                      - KRW
                                      - KWD
                                      - KZT
                                      - LBP
                                      - LKR
                                      - LTL
                                      - LVL
                                      - MAD
                                      - MDL
                                      - MGA
                                      - MKD
                                      - MMK
                                      - MOP
                                      - MUR
                                      - MXN
                                      - MYR
                                      - MZN
                                      - NAD
                                      - NGN
                                      - NIO
                                      - NOK
                                      - NPR
                                      - NZD
                                      - OMR
                                      - PAB
                                      - PEN
                                      - PHP
                                      - PKR
                                      - PLN
                                      - PYG
                                      - QAR
                                      - RON
                                      - RSD
                                      - RUB
                                      - RWF
                                      - SAR
                                      - SDG
                                      - SEK
                                      - SGD
                                      - SOS
                                      - SYP
                                      - THB
                                      - TND
                                      - TOP
                                      - TRY
                                      - TTD
                                      - TWD
                                      - TZS
                                      - UAH
                                      - UGX
                                      - UYU
                                      - UZS
                                      - VEF
                                      - VND
                                      - XAF
                                      - XOF
                                      - YER
                                      - ZAR
                                      - ZMK
                                    example: USD
                                    description: Currency of the reward
                                required:
                                  - denomination
                                  - currency_code
                                example:
                                  denomination: 50
                                  currency_code: USD
                              recipient:
                                type: object
                                description: Details of the recipient of the reward
                                properties:
                                  name:
                                    type: string
                                    description: Name of the recipient
                                    example: John Doe Jr.
                                  email:
                                    type: string
                                    description: Email address of the recipient
                                    example: john.doe@example.com
                                  phone:
                                    type: string
                                    description: >-
                                      Phone number of the recipient. For non-US
                                      phone numbers, specify the country code
                                      (prefixed with +).
                                    example: 123-456-7890
                              deliver_at:
                                type: string
                                format: date
                                description: >-
                                  Timestamp of reward delivery within the next
                                  year. Note that if date-time is provided, the
                                  time values will be ignored.
                                pattern: YYYY-MM-DD
                                example: '2023-12-31'
                              custom_fields:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    Reward custom data for searching, tracking or
                                    copy (see [Adding custom fields to
                                    orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                                  properties:
                                    id:
                                      type: string
                                      pattern: '[A-Z0-9]{4,20}'
                                      example: SOMEIDSOMEID
                                      description: Tremendous ID of the custom field
                                    value:
                                      type: string
                                      description: Value of the custom field
                                      example: Hufflepuff
                                      nullable: true
                                    label:
                                      type: string
                                      description: Label of the custom field
                                      example: harry_potter_house
                              delivery:
                                description: >
                                  Details on how the reward is delivered to the
                                  recipient.
                                type: object
                                properties:
                                  method:
                                    description: |
                                      How to deliver the reward to the recipient.

                                      <table>
                                        <thead>
                                          <tr>
                                            <th>Delivery Method</th>
                                            <th>Description</th>
                                          </tr>
                                        </thead>
                                        <tbody>
                                          <tr>
                                            <td><code>EMAIL</code></td>
                                            <td>Deliver the reward to the recipient by email</td>
                                          </tr>
                                          <tr>
                                            <td><code>LINK</code></td>
                                            <td>
                                              <p>Deliver the reward to the recipient via a link.</p>
                                              <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                            </td>
                                          </tr>
                                          <tr>
                                            <td><code>PHONE</code></td>
                                            <td>Deliver the reward to the recipient by SMS</td>
                                          </tr>
                                        </tbody>
                                      </table>
                                    type: string
                                    enum:
                                      - EMAIL
                                      - LINK
                                      - PHONE
                                  status:
                                    type: string
                                    enum:
                                      - SCHEDULED
                                      - FAILED
                                      - SUCCEEDED
                                      - PENDING
                                    description: >
                                      Current status of the delivery of the
                                      reward:


                                      * `SCHEDULED` - Reward is scheduled for
                                      delivery and will be delivered soon.

                                      * `FAILED` - Delivery of reward failed (e.g.
                                      email bounced).

                                      * `SUCCEEDED` - Reward was successfully
                                      delivered (email or text message delivered
                                      or reward link opened).

                                      * `PENDING` - Delivery is pending but not
                                      yet scheduled.
                                required:
                                  - method
                                  - status
                        required:
                          - id
                          - created_at
                          - status
                    total_count:
                      type: integer
                      description: The total number of orders across all pages
                      example: 1
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
      post:
        summary: Create order
        description: >
          Every time you want to send out a reward through Tremendous you need to
          create an order for it.


          > 📘 Getting started with your first order

          >

          > Our step-by-step guide walks you through everything you need

          > to send your first gift card through the Tremendous API:

          >

          > <strong><a style="display: block; margin-top: 20px;"
          href="/docs/sending-rewards-intro">Check it out!</a></strong>


          ## Request body


          <div class="object-schema-request-schema">
            <table>
            <thead>
              <tr>
                <th>Property</th>
                <th>Type</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody class="object-schema-table-body">
              <tr class=""><td><div class="property-name">
            <code class="property-name">external_id</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Reference
          for this order, supplied by the customer.</p>


          <p>When set, <code>external_id</code> makes order idempotent. All
          requests that use the same <code>external_id</code>

          after the initial order creation, will result in a response that returns
          the data of the

          initially created order. The response will have a <code>201</code>
          response code. These responses

          <strong>fail</strong> to create any further orders.</p>


          <p>It also allows for retrieving by <code>external_id</code> instead of
          <code>id</code> only.</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">payment</code>
          </div>

          </td><td><span class="property-type">object</span></td><td></td></tr> 
          <tr>
              <td colspan="3">
                <details>
                  <summary>Show object properties</summary>
                  <table>
            <thead>
              <tr>
                <th>Property</th>
                <th>Type</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody class="object-schema-table-body">
              <tr class=""><td><div class="property-name">
            <code class="property-name">funding_source_id</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Tremendous
          ID of the funding source that will be used to pay for the order. Use
          <code>balance</code> to use your Tremendous&#39;s balance.</p>

          </td></tr>
            </tbody>
          </table>


          </tr>


          <tr class=""><td><div class="property-name">
            <code class="property-name">reward</code>
          </div>

          </td><td><span class="property-type">object</span></td><td><p>A single
          reward, sent to a recipient. A reward is always part of an order.</p>


          <p>Either <code>products</code> or <code>campaign_id</code> must be
          specified.</p>

          </td></tr>  <tr>
              <td colspan="3">
                <details>
                  <summary>Show object properties</summary>
                  <table>
            <thead>
              <tr>
                <th>Property</th>
                <th>Type</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody class="object-schema-table-body">
              <tr class="property-conditional-hint-response-only"><td><div class="property-name">
            <code class="property-name">id</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Tremendous
          ID of the reward</p>

          </td></tr>

          <tr class="property-conditional-hint-response-only"><td><div
          class="property-name">
            <code class="property-name">order_id</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Tremendous
          ID of the order this reward is part of.</p>

          </td></tr>

          <tr class="property-conditional-hint-response-only"><td><div
          class="property-name">
            <code class="property-name">created_at</code>
          </div>

          </td><td><span class="property-type">string</span> <span
          class="property-format">date-time</span></td><td><p>Date the reward was
          created</p>

          </td></tr>

          <tr class="property-conditional-hint-request-only"><td><div
          class="property-name">
            <code class="property-name">campaign_id</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>ID of the
          campaign in your account, that defines the available products (different
          gift cards, charity, etc.)

          that the recipient can choose from.</p>

          </td></tr>

          <tr class="property-conditional-hint-request-only"><td><div
          class="property-name">
            <code class="property-name">products</code>
          </div>

          </td><td><span class="property-type">array</span> <span
          class="property-format">string</span></td><td><p>List of IDs of product
          (different gift cards, charity, etc.) that will be available

          to the recipient to choose from.</p>


          <p>Providing a <code>products</code> array will override the products
          made available by the campaign

          specified using the <code>campaign_id</code> property unless the
          <code>products</code> array is empty. It will

          <em>not</em> override other campaign attributes, like the message and
          customization of the look and feel.</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">value</code>
          </div>

          </td><td><span class="property-type">object</span></td><td></td></tr> 
          <tr>
              <td colspan="3">
                <details>
                  <summary>Show object properties</summary>
                  <table>
            <thead>
              <tr>
                <th>Property</th>
                <th>Type</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody class="object-schema-table-body">
              <tr class=""><td><div class="property-name">
            <code class="property-name">denomination</code>
          </div>

          </td><td><span class="property-type">number</span> <span
          class="property-format">double</span></td><td><p>Amount of the
          reward</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">currency_code</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Currency
          of the reward</p>

          </td></tr>
            </tbody>
          </table>


          </tr>


          <tr class=""><td><div class="property-name">
            <code class="property-name">recipient</code>
          </div>

          </td><td><span class="property-type">object</span></td><td><p>Details of
          the recipient of the reward</p>

          </td></tr>  <tr>
              <td colspan="3">
                <details>
                  <summary>Show object properties</summary>
                  <table>
            <thead>
              <tr>
                <th>Property</th>
                <th>Type</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody class="object-schema-table-body">
              <tr class=""><td><div class="property-name">
            <code class="property-name">name</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Name of
          the recipient</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">email</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Email
          address of the recipient</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">phone</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Phone
          number of the recipient. For non-US phone numbers, specify the country
          code (prefixed with +).</p>

          </td></tr>
            </tbody>
          </table>


          </tr>


          <tr class=""><td><div class="property-name">
            <code class="property-name">deliver_at</code>
          </div>

          </td><td><span class="property-type">string</span> <span
          class="property-format">date</span></td><td><p>Timestamp of reward
          delivery within the next year. Note that if date-time is provided, the
          time values will be ignored.</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">custom_fields</code>
          </div>

          </td><td><span class="property-type">array</span></td><td></td></tr> 
          <tr>
              <td colspan="3">
                <details>
                  <summary>Show array item type</summary>
                  <table>
            <thead>
              <tr>
                <th>Property</th>
                <th>Type</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody class="object-schema-table-body">
              <tr class=""><td><div class="property-name">
            <code class="property-name">id</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Tremendous
          ID of the custom field</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">value</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Value of
          the custom field</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">label</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Label of
          the custom field</p>

          </td></tr>
            </tbody>
          </table>


          </tr>


          <tr class=""><td><div class="property-name">
            <code class="property-name">language</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Set this
          to translate the redemption experience for this reward. Pass a 2-letter
          <a
          href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO-639-1
          code</a> for the desired language. Defaults to <code>en</code>.</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">delivery</code>
          </div>

          </td><td><span class="property-type">object</span></td><td><p>Details on
          how the reward is delivered to the recipient.</p>

          </td></tr>  <tr>
              <td colspan="3">
                <details>
                  <summary>Show object properties</summary>
                  <table>
            <thead>
              <tr>
                <th>Property</th>
                <th>Type</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody class="object-schema-table-body">
              <tr class=""><td><div class="property-name">
            <code class="property-name">method</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>How to
          deliver the reward to the recipient.</p>


          <table>
            <thead>
              <tr>
                <th>Delivery Method</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><code>EMAIL</code></td>
                <td>Deliver the reward to the recipient by email</td>
              </tr>
              <tr>
                <td><code>LINK</code></td>
                <td>
                  <p>Deliver the reward to the recipient via a link.</p>
                  <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                </td>
              </tr>
              <tr>
                <td><code>PHONE</code></td>
                <td>Deliver the reward to the recipient by SMS</td>
              </tr>
            </tbody>
          </table>

          </td></tr>
            </tbody>
          </table>


          </tr>

            </tbody>
          </table>


          </tr>

            </tbody>
          </table>


          </div>



          ### Funding sources


          There are different ways to pay for gift cards and rewards on
          Tremendous. Every payment mechanism is called a "funding source".


          You can retrieve a list of all available funding sources by using the
          [Funding sources API
          endpoint](https://tremendous.readme.io/reference/core-funding-source-index).


          The Tremendous API sandbox environment comes with a single funding
          source that allows you to spend up to $5,000 in *fake money* to test the
          API. [Learn more about the sandbox
          environment](https://tremendous.readme.io/reference/sandbox).


          The HTTP status code `200` on the response will be used to indicate
          success.


          After processing successfully the reward gets queued to be delivered to
          it's recipient

          (for delivery method `EMAIL` and `PHONE`). Delivery will happen
          asynchronously, after the response

          has been sent.


          ### Idempotence


          Requests issued with the same external_id are idempotent.


          Submitting an order with an already existing `external_id`, will result
          in a `201` response code.

          In this case the response will return a representation of the already
          existing order in the response body.
        operationId: create-order
        tags:
          - Orders
        requestBody:
          required: true
          description: Order to create
          content:
            application/json:
              schema:
                type: object
                properties:
                  external_id:
                    type: string
                    nullable: true
                    description: >
                      Reference for this order, supplied by the customer.


                      When set, `external_id` makes order idempotent. All requests
                      that use the same `external_id`

                      after the initial order creation, will result in a response
                      that returns the data of the

                      initially created order. The response will have a `201`
                      response code. These responses

                      **fail** to create any further orders.


                      It also allows for retrieving by `external_id` instead of
                      `id` only.
                    example: Your-Individual-Identifier-for-This-Order
                  payment:
                    type: object
                    properties:
                      funding_source_id:
                        type: string
                        description: >-
                          Tremendous ID of the funding source that will be used to
                          pay for the order. Use `balance` to use your
                          Tremendous's balance.
                    required:
                      - funding_source_id
                  reward:
                    type: object
                    description: >
                      A single reward, sent to a recipient. A reward is always
                      part of an order.


                      Either `products` or `campaign_id` must be specified.
                    properties:
                      campaign_id:
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                        nullable: true
                        description: >
                          ID of the campaign in your account, that defines the
                          available products (different gift cards, charity, etc.)

                          that the recipient can choose from.
                      products:
                        type: array
                        description: >
                          List of IDs of product (different gift cards, charity,
                          etc.) that will be available

                          to the recipient to choose from.


                          Providing a `products` array will override the products
                          made available by the campaign

                          specified using the `campaign_id` property unless the
                          `products` array is empty. It will

                          _not_ override other campaign attributes, like the
                          message and customization of the look and feel.
                        items:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        minItems: 1
                      value:
                        type: object
                        properties:
                          denomination:
                            type: number
                            format: double
                            description: Amount of the reward
                          currency_code:
                            type: string
                            enum:
                              - USD
                              - CAD
                              - EUR
                              - AED
                              - AFN
                              - ALL
                              - AMD
                              - ARS
                              - AUD
                              - AZN
                              - BAM
                              - BDT
                              - BGN
                              - BHD
                              - BIF
                              - BND
                              - BOB
                              - BRL
                              - BWP
                              - BYR
                              - BZD
                              - CDF
                              - CHF
                              - CLP
                              - CNY
                              - COP
                              - CRC
                              - CVE
                              - CZK
                              - DJF
                              - DKK
                              - DOP
                              - DZD
                              - EEK
                              - EGP
                              - ERN
                              - ETB
                              - GBP
                              - GEL
                              - GHS
                              - GNF
                              - GTQ
                              - HKD
                              - HNL
                              - HRK
                              - HUF
                              - IDR
                              - ILS
                              - INR
                              - IQD
                              - IRR
                              - ISK
                              - JMD
                              - JOD
                              - JPY
                              - KES
                              - KHR
                              - KRW
                              - KWD
                              - KZT
                              - LBP
                              - LKR
                              - LTL
                              - LVL
                              - MAD
                              - MDL
                              - MGA
                              - MKD
                              - MMK
                              - MOP
                              - MUR
                              - MXN
                              - MYR
                              - MZN
                              - NAD
                              - NGN
                              - NIO
                              - NOK
                              - NPR
                              - NZD
                              - OMR
                              - PAB
                              - PEN
                              - PHP
                              - PKR
                              - PLN
                              - PYG
                              - QAR
                              - RON
                              - RSD
                              - RUB
                              - RWF
                              - SAR
                              - SDG
                              - SEK
                              - SGD
                              - SOS
                              - SYP
                              - THB
                              - TND
                              - TOP
                              - TRY
                              - TTD
                              - TWD
                              - TZS
                              - UAH
                              - UGX
                              - UYU
                              - UZS
                              - VEF
                              - VND
                              - XAF
                              - XOF
                              - YER
                              - ZAR
                              - ZMK
                            example: USD
                            description: Currency of the reward
                        required:
                          - denomination
                          - currency_code
                        example:
                          denomination: 50
                          currency_code: USD
                      recipient:
                        type: object
                        description: Details of the recipient of the reward
                        properties:
                          name:
                            type: string
                            description: Name of the recipient
                            example: John Doe Jr.
                          email:
                            type: string
                            description: Email address of the recipient
                            example: john.doe@example.com
                          phone:
                            type: string
                            description: >-
                              Phone number of the recipient. For non-US phone
                              numbers, specify the country code (prefixed with +).
                            example: 123-456-7890
                      deliver_at:
                        type: string
                        format: date
                        description: >-
                          Timestamp of reward delivery within the next year. Note
                          that if date-time is provided, the time values will be
                          ignored.
                        pattern: YYYY-MM-DD
                        example: '2023-12-31'
                      custom_fields:
                        type: array
                        items:
                          type: object
                          description: >-
                            Reward custom data for searching, tracking or copy
                            (see [Adding custom fields to
                            orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                          properties:
                            id:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                              description: Tremendous ID of the custom field
                            value:
                              type: string
                              description: Value of the custom field
                              example: Hufflepuff
                              nullable: true
                            label:
                              type: string
                              description: Label of the custom field
                              example: harry_potter_house
                      language:
                        type: string
                        description: >
                          Set this to translate the redemption experience for this
                          reward. Pass a 2-letter [ISO-639-1
                          code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)
                          for the desired language. Defaults to `en`.
                        example: de
                      delivery:
                        description: |
                          Details on how the reward is delivered to the recipient.
                        type: object
                        properties:
                          method:
                            description: |
                              How to deliver the reward to the recipient.

                              <table>
                                <thead>
                                  <tr>
                                    <th>Delivery Method</th>
                                    <th>Description</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr>
                                    <td><code>EMAIL</code></td>
                                    <td>Deliver the reward to the recipient by email</td>
                                  </tr>
                                  <tr>
                                    <td><code>LINK</code></td>
                                    <td>
                                      <p>Deliver the reward to the recipient via a link.</p>
                                      <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                    </td>
                                  </tr>
                                  <tr>
                                    <td><code>PHONE</code></td>
                                    <td>Deliver the reward to the recipient by SMS</td>
                                  </tr>
                                </tbody>
                              </table>
                            type: string
                            enum:
                              - EMAIL
                              - LINK
                              - PHONE
                required:
                  - payment
                  - reward
        responses:
          '200':
            description: An order (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - order
                  properties:
                    order:
                      type: object
                      description: >-
                        An order wraps around the fulfilment of one or more
                        rewards.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the order
                        external_id:
                          type: string
                          nullable: true
                          description: >
                            Reference for this order, supplied by the customer.


                            When set, `external_id` makes order idempotent. All
                            requests that use the same `external_id`

                            after the initial order creation, will result in a
                            response that returns the data of the

                            initially created order. The response will have a
                            `201` response code. These responses

                            **fail** to create any further orders.


                            It also allows for retrieving by `external_id` instead
                            of `id` only.
                          example: Your-Individual-Identifier-for-This-Order
                        campaign_id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: IVM0I3WNJJL0
                          nullable: true
                          description: >
                            ID of the campaign in your account, that defines the
                            available products (different gift cards, charity,
                            etc.)

                            that the recipient can choose from.
                        created_at:
                          type: string
                          format: date-time
                          description: Date the order has been created
                        status:
                          type: string
                          description: |
                            Execution status of a given order

                            <table>
                              <thead>
                                <tr>
                                  <th>
                                    Status
                                  </th>
                                  <th>
                                    Description
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td>
                                    <code>
                                      CANCELED
                                    </code>
                                  </td>
                                  <td>
                                    The order and all of its rewards were canceled.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      CART
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created, but hasn't yet been processed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      EXECUTED
                                    </code>
                                  </td>
                                  <td>
                                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      FAILED
                                    </code>
                                  </td>
                                  <td>
                                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but needs approval to be executed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING INTERNAL PAYMENT APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but it is under review and requires approval from our team.
                                  </td>
                                </tr>

                              </tbody>
                            </table>
                          enum:
                            - CANCELED
                            - CART
                            - EXECUTED
                            - FAILED
                            - PENDING APPROVAL
                            - PENDING INTERNAL PAYMENT APPROVAL
                        payment:
                          type: object
                          properties:
                            subtotal:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order before fees (in USD)
                              example: 50
                            total:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order including fees (in USD)
                              example: 52.5
                            fees:
                              type: number
                              format: double
                              minimum: 0
                              description: Fees for the order (in USD)
                              example: 2.5
                            refund:
                              type: object
                              properties:
                                total:
                                  type: number
                                  format: double
                                  minimum: 0
                                  description: Total amount of the order refunds (in USD)
                                  example: 52.5
                              required:
                                - total
                              description: >
                                Breakdown of the order refunds (total amount in
                                USD, independent from the currency of the ordered
                                rewards).

                                Note that this property will only appear for
                                canceled orders or orders with canceled rewards.
                            channel:
                              type: string
                              description: Name of the channel in which the order was created
                              enum:
                                - UI
                                - API
                                - EMBED
                                - DECIPHER
                                - QUALTRICS
                                - TYPEFORM
                                - SURVEY MONKEY
                          description: >-
                            Cost breakdown of the order (cost of rewards + fees).
                            Cost and fees are always denominated in USD,
                            independent from the currency of the ordered rewards.

                            Note that this property will only appear for processed
                            orders (`status` is `EXECUTED`).
                        invoice_id:
                          type: string
                          description: The ID for the invoice associated with this order
                          example: 2E59A82B-0001
                        rewards:
                          type: array
                          minItems: 1
                          items:
                            type: object
                            description: >
                              A single reward, sent to a recipient. A reward is
                              always part of an order.


                              Either `products` or `campaign_id` must be
                              specified.
                            properties:
                              id:
                                type: string
                                pattern: '[A-Z0-9]{4,20}'
                                example: SOMEIDSOMEID
                                description: Tremendous ID of the reward
                              order_id:
                                type: string
                                pattern: '[A-Z0-9]{4,20}'
                                example: SOMEIDSOMEID
                                description: >-
                                  Tremendous ID of the order this reward is part
                                  of.
                              created_at:
                                type: string
                                format: date-time
                                description: Date the reward was created
                              value:
                                type: object
                                properties:
                                  denomination:
                                    type: number
                                    format: double
                                    description: Amount of the reward
                                  currency_code:
                                    type: string
                                    enum:
                                      - USD
                                      - CAD
                                      - EUR
                                      - AED
                                      - AFN
                                      - ALL
                                      - AMD
                                      - ARS
                                      - AUD
                                      - AZN
                                      - BAM
                                      - BDT
                                      - BGN
                                      - BHD
                                      - BIF
                                      - BND
                                      - BOB
                                      - BRL
                                      - BWP
                                      - BYR
                                      - BZD
                                      - CDF
                                      - CHF
                                      - CLP
                                      - CNY
                                      - COP
                                      - CRC
                                      - CVE
                                      - CZK
                                      - DJF
                                      - DKK
                                      - DOP
                                      - DZD
                                      - EEK
                                      - EGP
                                      - ERN
                                      - ETB
                                      - GBP
                                      - GEL
                                      - GHS
                                      - GNF
                                      - GTQ
                                      - HKD
                                      - HNL
                                      - HRK
                                      - HUF
                                      - IDR
                                      - ILS
                                      - INR
                                      - IQD
                                      - IRR
                                      - ISK
                                      - JMD
                                      - JOD
                                      - JPY
                                      - KES
                                      - KHR
                                      - KRW
                                      - KWD
                                      - KZT
                                      - LBP
                                      - LKR
                                      - LTL
                                      - LVL
                                      - MAD
                                      - MDL
                                      - MGA
                                      - MKD
                                      - MMK
                                      - MOP
                                      - MUR
                                      - MXN
                                      - MYR
                                      - MZN
                                      - NAD
                                      - NGN
                                      - NIO
                                      - NOK
                                      - NPR
                                      - NZD
                                      - OMR
                                      - PAB
                                      - PEN
                                      - PHP
                                      - PKR
                                      - PLN
                                      - PYG
                                      - QAR
                                      - RON
                                      - RSD
                                      - RUB
                                      - RWF
                                      - SAR
                                      - SDG
                                      - SEK
                                      - SGD
                                      - SOS
                                      - SYP
                                      - THB
                                      - TND
                                      - TOP
                                      - TRY
                                      - TTD
                                      - TWD
                                      - TZS
                                      - UAH
                                      - UGX
                                      - UYU
                                      - UZS
                                      - VEF
                                      - VND
                                      - XAF
                                      - XOF
                                      - YER
                                      - ZAR
                                      - ZMK
                                    example: USD
                                    description: Currency of the reward
                                required:
                                  - denomination
                                  - currency_code
                                example:
                                  denomination: 50
                                  currency_code: USD
                              recipient:
                                type: object
                                description: Details of the recipient of the reward
                                properties:
                                  name:
                                    type: string
                                    description: Name of the recipient
                                    example: John Doe Jr.
                                  email:
                                    type: string
                                    description: Email address of the recipient
                                    example: john.doe@example.com
                                  phone:
                                    type: string
                                    description: >-
                                      Phone number of the recipient. For non-US
                                      phone numbers, specify the country code
                                      (prefixed with +).
                                    example: 123-456-7890
                              deliver_at:
                                type: string
                                format: date
                                description: >-
                                  Timestamp of reward delivery within the next
                                  year. Note that if date-time is provided, the
                                  time values will be ignored.
                                pattern: YYYY-MM-DD
                                example: '2023-12-31'
                              custom_fields:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    Reward custom data for searching, tracking or
                                    copy (see [Adding custom fields to
                                    orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                                  properties:
                                    id:
                                      type: string
                                      pattern: '[A-Z0-9]{4,20}'
                                      example: SOMEIDSOMEID
                                      description: Tremendous ID of the custom field
                                    value:
                                      type: string
                                      description: Value of the custom field
                                      example: Hufflepuff
                                      nullable: true
                                    label:
                                      type: string
                                      description: Label of the custom field
                                      example: harry_potter_house
                              delivery:
                                type: object
                                description: >
                                  Details on how the reward is delivered to the
                                  recipient.
                                properties:
                                  method:
                                    description: |
                                      How to deliver the reward to the recipient.

                                      <table>
                                        <thead>
                                          <tr>
                                            <th>Delivery Method</th>
                                            <th>Description</th>
                                          </tr>
                                        </thead>
                                        <tbody>
                                          <tr>
                                            <td><code>EMAIL</code></td>
                                            <td>Deliver the reward to the recipient by email</td>
                                          </tr>
                                          <tr>
                                            <td><code>LINK</code></td>
                                            <td>
                                              <p>Deliver the reward to the recipient via a link.</p>
                                              <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                            </td>
                                          </tr>
                                          <tr>
                                            <td><code>PHONE</code></td>
                                            <td>Deliver the reward to the recipient by SMS</td>
                                          </tr>
                                        </tbody>
                                      </table>
                                    type: string
                                    enum:
                                      - EMAIL
                                      - LINK
                                      - PHONE
                                  status:
                                    type: string
                                    enum:
                                      - SCHEDULED
                                      - FAILED
                                      - SUCCEEDED
                                      - PENDING
                                    description: >
                                      Current status of the delivery of the
                                      reward:


                                      * `SCHEDULED` - Reward is scheduled for
                                      delivery and will be delivered soon.

                                      * `FAILED` - Delivery of reward failed (e.g.
                                      email bounced).

                                      * `SUCCEEDED` - Reward was successfully
                                      delivered (email or text message delivered
                                      or reward link opened).

                                      * `PENDING` - Delivery is pending but not
                                      yet scheduled.
                                  link:
                                    type: string
                                    description: >
                                      Link to redeem the reward at. You need to
                                      deliver this link to the recipient.


                                      Only available for rewards for which the
                                      `method` for delivery is set to `LINK`.
                                    example: >-
                                      https://testflight.tremendous.com/rewards/payout/z67jic92r
                                required:
                                  - method
                                  - status
                      required:
                        - id
                        - created_at
                        - status
          '201':
            description: An order (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - order
                  properties:
                    order:
                      type: object
                      description: >-
                        An order wraps around the fulfilment of one or more
                        rewards.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the order
                        external_id:
                          type: string
                          nullable: true
                          description: >
                            Reference for this order, supplied by the customer.


                            When set, `external_id` makes order idempotent. All
                            requests that use the same `external_id`

                            after the initial order creation, will result in a
                            response that returns the data of the

                            initially created order. The response will have a
                            `201` response code. These responses

                            **fail** to create any further orders.


                            It also allows for retrieving by `external_id` instead
                            of `id` only.
                          example: Your-Individual-Identifier-for-This-Order
                        campaign_id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: IVM0I3WNJJL0
                          nullable: true
                          description: >
                            ID of the campaign in your account, that defines the
                            available products (different gift cards, charity,
                            etc.)

                            that the recipient can choose from.
                        created_at:
                          type: string
                          format: date-time
                          description: Date the order has been created
                        status:
                          type: string
                          description: |
                            Execution status of a given order

                            <table>
                              <thead>
                                <tr>
                                  <th>
                                    Status
                                  </th>
                                  <th>
                                    Description
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td>
                                    <code>
                                      CANCELED
                                    </code>
                                  </td>
                                  <td>
                                    The order and all of its rewards were canceled.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      CART
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created, but hasn't yet been processed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      EXECUTED
                                    </code>
                                  </td>
                                  <td>
                                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      FAILED
                                    </code>
                                  </td>
                                  <td>
                                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but needs approval to be executed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING INTERNAL PAYMENT APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but it is under review and requires approval from our team.
                                  </td>
                                </tr>

                              </tbody>
                            </table>
                          enum:
                            - CANCELED
                            - CART
                            - EXECUTED
                            - FAILED
                            - PENDING APPROVAL
                            - PENDING INTERNAL PAYMENT APPROVAL
                        payment:
                          type: object
                          properties:
                            subtotal:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order before fees (in USD)
                              example: 50
                            total:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order including fees (in USD)
                              example: 52.5
                            fees:
                              type: number
                              format: double
                              minimum: 0
                              description: Fees for the order (in USD)
                              example: 2.5
                            refund:
                              type: object
                              properties:
                                total:
                                  type: number
                                  format: double
                                  minimum: 0
                                  description: Total amount of the order refunds (in USD)
                                  example: 52.5
                              required:
                                - total
                              description: >
                                Breakdown of the order refunds (total amount in
                                USD, independent from the currency of the ordered
                                rewards).

                                Note that this property will only appear for
                                canceled orders or orders with canceled rewards.
                            channel:
                              type: string
                              description: Name of the channel in which the order was created
                              enum:
                                - UI
                                - API
                                - EMBED
                                - DECIPHER
                                - QUALTRICS
                                - TYPEFORM
                                - SURVEY MONKEY
                          description: >-
                            Cost breakdown of the order (cost of rewards + fees).
                            Cost and fees are always denominated in USD,
                            independent from the currency of the ordered rewards.

                            Note that this property will only appear for processed
                            orders (`status` is `EXECUTED`).
                        invoice_id:
                          type: string
                          description: The ID for the invoice associated with this order
                          example: 2E59A82B-0001
                        reward:
                          type: object
                          description: >
                            A single reward, sent to a recipient. A reward is
                            always part of an order.


                            Either `products` or `campaign_id` must be specified.
                          properties:
                            id:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                              description: Tremendous ID of the reward
                            order_id:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                              description: Tremendous ID of the order this reward is part of.
                            created_at:
                              type: string
                              format: date-time
                              description: Date the reward was created
                            value:
                              type: object
                              properties:
                                denomination:
                                  type: number
                                  format: double
                                  description: Amount of the reward
                                currency_code:
                                  type: string
                                  enum:
                                    - USD
                                    - CAD
                                    - EUR
                                    - AED
                                    - AFN
                                    - ALL
                                    - AMD
                                    - ARS
                                    - AUD
                                    - AZN
                                    - BAM
                                    - BDT
                                    - BGN
                                    - BHD
                                    - BIF
                                    - BND
                                    - BOB
                                    - BRL
                                    - BWP
                                    - BYR
                                    - BZD
                                    - CDF
                                    - CHF
                                    - CLP
                                    - CNY
                                    - COP
                                    - CRC
                                    - CVE
                                    - CZK
                                    - DJF
                                    - DKK
                                    - DOP
                                    - DZD
                                    - EEK
                                    - EGP
                                    - ERN
                                    - ETB
                                    - GBP
                                    - GEL
                                    - GHS
                                    - GNF
                                    - GTQ
                                    - HKD
                                    - HNL
                                    - HRK
                                    - HUF
                                    - IDR
                                    - ILS
                                    - INR
                                    - IQD
                                    - IRR
                                    - ISK
                                    - JMD
                                    - JOD
                                    - JPY
                                    - KES
                                    - KHR
                                    - KRW
                                    - KWD
                                    - KZT
                                    - LBP
                                    - LKR
                                    - LTL
                                    - LVL
                                    - MAD
                                    - MDL
                                    - MGA
                                    - MKD
                                    - MMK
                                    - MOP
                                    - MUR
                                    - MXN
                                    - MYR
                                    - MZN
                                    - NAD
                                    - NGN
                                    - NIO
                                    - NOK
                                    - NPR
                                    - NZD
                                    - OMR
                                    - PAB
                                    - PEN
                                    - PHP
                                    - PKR
                                    - PLN
                                    - PYG
                                    - QAR
                                    - RON
                                    - RSD
                                    - RUB
                                    - RWF
                                    - SAR
                                    - SDG
                                    - SEK
                                    - SGD
                                    - SOS
                                    - SYP
                                    - THB
                                    - TND
                                    - TOP
                                    - TRY
                                    - TTD
                                    - TWD
                                    - TZS
                                    - UAH
                                    - UGX
                                    - UYU
                                    - UZS
                                    - VEF
                                    - VND
                                    - XAF
                                    - XOF
                                    - YER
                                    - ZAR
                                    - ZMK
                                  example: USD
                                  description: Currency of the reward
                              required:
                                - denomination
                                - currency_code
                              example:
                                denomination: 50
                                currency_code: USD
                            recipient:
                              type: object
                              description: Details of the recipient of the reward
                              properties:
                                name:
                                  type: string
                                  description: Name of the recipient
                                  example: John Doe Jr.
                                email:
                                  type: string
                                  description: Email address of the recipient
                                  example: john.doe@example.com
                                phone:
                                  type: string
                                  description: >-
                                    Phone number of the recipient. For non-US
                                    phone numbers, specify the country code
                                    (prefixed with +).
                                  example: 123-456-7890
                            deliver_at:
                              type: string
                              format: date
                              description: >-
                                Timestamp of reward delivery within the next year.
                                Note that if date-time is provided, the time
                                values will be ignored.
                              pattern: YYYY-MM-DD
                              example: '2023-12-31'
                            custom_fields:
                              type: array
                              items:
                                type: object
                                description: >-
                                  Reward custom data for searching, tracking or
                                  copy (see [Adding custom fields to
                                  orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                                properties:
                                  id:
                                    type: string
                                    pattern: '[A-Z0-9]{4,20}'
                                    example: SOMEIDSOMEID
                                    description: Tremendous ID of the custom field
                                  value:
                                    type: string
                                    description: Value of the custom field
                                    example: Hufflepuff
                                    nullable: true
                                  label:
                                    type: string
                                    description: Label of the custom field
                                    example: harry_potter_house
                            delivery:
                              description: >
                                Details on how the reward is delivered to the
                                recipient.
                              type: object
                              properties:
                                method:
                                  description: |
                                    How to deliver the reward to the recipient.

                                    <table>
                                      <thead>
                                        <tr>
                                          <th>Delivery Method</th>
                                          <th>Description</th>
                                        </tr>
                                      </thead>
                                      <tbody>
                                        <tr>
                                          <td><code>EMAIL</code></td>
                                          <td>Deliver the reward to the recipient by email</td>
                                        </tr>
                                        <tr>
                                          <td><code>LINK</code></td>
                                          <td>
                                            <p>Deliver the reward to the recipient via a link.</p>
                                            <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                          </td>
                                        </tr>
                                        <tr>
                                          <td><code>PHONE</code></td>
                                          <td>Deliver the reward to the recipient by SMS</td>
                                        </tr>
                                      </tbody>
                                    </table>
                                  type: string
                                  enum:
                                    - EMAIL
                                    - LINK
                                    - PHONE
                                status:
                                  type: string
                                  enum:
                                    - SCHEDULED
                                    - FAILED
                                    - SUCCEEDED
                                    - PENDING
                                  description: >
                                    Current status of the delivery of the reward:


                                    * `SCHEDULED` - Reward is scheduled for
                                    delivery and will be delivered soon.

                                    * `FAILED` - Delivery of reward failed (e.g.
                                    email bounced).

                                    * `SUCCEEDED` - Reward was successfully
                                    delivered (email or text message delivered or
                                    reward link opened).

                                    * `PENDING` - Delivery is pending but not yet
                                    scheduled.
                              required:
                                - method
                                - status
                      required:
                        - id
                        - created_at
                        - status
          '202':
            description: An order (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - order
                  properties:
                    order:
                      type: object
                      description: >-
                        An order wraps around the fulfilment of one or more
                        rewards.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the order
                        external_id:
                          type: string
                          nullable: true
                          description: >
                            Reference for this order, supplied by the customer.


                            When set, `external_id` makes order idempotent. All
                            requests that use the same `external_id`

                            after the initial order creation, will result in a
                            response that returns the data of the

                            initially created order. The response will have a
                            `201` response code. These responses

                            **fail** to create any further orders.


                            It also allows for retrieving by `external_id` instead
                            of `id` only.
                          example: Your-Individual-Identifier-for-This-Order
                        campaign_id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: IVM0I3WNJJL0
                          nullable: true
                          description: >
                            ID of the campaign in your account, that defines the
                            available products (different gift cards, charity,
                            etc.)

                            that the recipient can choose from.
                        created_at:
                          type: string
                          format: date-time
                          description: Date the order has been created
                        status:
                          type: string
                          description: |
                            Execution status of a given order

                            <table>
                              <thead>
                                <tr>
                                  <th>
                                    Status
                                  </th>
                                  <th>
                                    Description
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td>
                                    <code>
                                      CANCELED
                                    </code>
                                  </td>
                                  <td>
                                    The order and all of its rewards were canceled.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      CART
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created, but hasn't yet been processed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      EXECUTED
                                    </code>
                                  </td>
                                  <td>
                                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      FAILED
                                    </code>
                                  </td>
                                  <td>
                                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but needs approval to be executed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING INTERNAL PAYMENT APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but it is under review and requires approval from our team.
                                  </td>
                                </tr>

                              </tbody>
                            </table>
                          enum:
                            - CANCELED
                            - CART
                            - EXECUTED
                            - FAILED
                            - PENDING APPROVAL
                            - PENDING INTERNAL PAYMENT APPROVAL
                        payment:
                          type: object
                          properties:
                            subtotal:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order before fees (in USD)
                              example: 50
                            total:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order including fees (in USD)
                              example: 52.5
                            fees:
                              type: number
                              format: double
                              minimum: 0
                              description: Fees for the order (in USD)
                              example: 2.5
                            refund:
                              type: object
                              properties:
                                total:
                                  type: number
                                  format: double
                                  minimum: 0
                                  description: Total amount of the order refunds (in USD)
                                  example: 52.5
                              required:
                                - total
                              description: >
                                Breakdown of the order refunds (total amount in
                                USD, independent from the currency of the ordered
                                rewards).

                                Note that this property will only appear for
                                canceled orders or orders with canceled rewards.
                            channel:
                              type: string
                              description: Name of the channel in which the order was created
                              enum:
                                - UI
                                - API
                                - EMBED
                                - DECIPHER
                                - QUALTRICS
                                - TYPEFORM
                                - SURVEY MONKEY
                          description: >-
                            Cost breakdown of the order (cost of rewards + fees).
                            Cost and fees are always denominated in USD,
                            independent from the currency of the ordered rewards.

                            Note that this property will only appear for processed
                            orders (`status` is `EXECUTED`).
                        invoice_id:
                          type: string
                          description: The ID for the invoice associated with this order
                          example: 2E59A82B-0001
                        rewards:
                          type: array
                          minItems: 1
                          items:
                            type: object
                            description: >
                              A single reward, sent to a recipient. A reward is
                              always part of an order.


                              Either `products` or `campaign_id` must be
                              specified.
                            properties:
                              id:
                                type: string
                                pattern: '[A-Z0-9]{4,20}'
                                example: SOMEIDSOMEID
                                description: Tremendous ID of the reward
                              order_id:
                                type: string
                                pattern: '[A-Z0-9]{4,20}'
                                example: SOMEIDSOMEID
                                description: >-
                                  Tremendous ID of the order this reward is part
                                  of.
                              created_at:
                                type: string
                                format: date-time
                                description: Date the reward was created
                              value:
                                type: object
                                properties:
                                  denomination:
                                    type: number
                                    format: double
                                    description: Amount of the reward
                                  currency_code:
                                    type: string
                                    enum:
                                      - USD
                                      - CAD
                                      - EUR
                                      - AED
                                      - AFN
                                      - ALL
                                      - AMD
                                      - ARS
                                      - AUD
                                      - AZN
                                      - BAM
                                      - BDT
                                      - BGN
                                      - BHD
                                      - BIF
                                      - BND
                                      - BOB
                                      - BRL
                                      - BWP
                                      - BYR
                                      - BZD
                                      - CDF
                                      - CHF
                                      - CLP
                                      - CNY
                                      - COP
                                      - CRC
                                      - CVE
                                      - CZK
                                      - DJF
                                      - DKK
                                      - DOP
                                      - DZD
                                      - EEK
                                      - EGP
                                      - ERN
                                      - ETB
                                      - GBP
                                      - GEL
                                      - GHS
                                      - GNF
                                      - GTQ
                                      - HKD
                                      - HNL
                                      - HRK
                                      - HUF
                                      - IDR
                                      - ILS
                                      - INR
                                      - IQD
                                      - IRR
                                      - ISK
                                      - JMD
                                      - JOD
                                      - JPY
                                      - KES
                                      - KHR
                                      - KRW
                                      - KWD
                                      - KZT
                                      - LBP
                                      - LKR
                                      - LTL
                                      - LVL
                                      - MAD
                                      - MDL
                                      - MGA
                                      - MKD
                                      - MMK
                                      - MOP
                                      - MUR
                                      - MXN
                                      - MYR
                                      - MZN
                                      - NAD
                                      - NGN
                                      - NIO
                                      - NOK
                                      - NPR
                                      - NZD
                                      - OMR
                                      - PAB
                                      - PEN
                                      - PHP
                                      - PKR
                                      - PLN
                                      - PYG
                                      - QAR
                                      - RON
                                      - RSD
                                      - RUB
                                      - RWF
                                      - SAR
                                      - SDG
                                      - SEK
                                      - SGD
                                      - SOS
                                      - SYP
                                      - THB
                                      - TND
                                      - TOP
                                      - TRY
                                      - TTD
                                      - TWD
                                      - TZS
                                      - UAH
                                      - UGX
                                      - UYU
                                      - UZS
                                      - VEF
                                      - VND
                                      - XAF
                                      - XOF
                                      - YER
                                      - ZAR
                                      - ZMK
                                    example: USD
                                    description: Currency of the reward
                                required:
                                  - denomination
                                  - currency_code
                                example:
                                  denomination: 50
                                  currency_code: USD
                              recipient:
                                type: object
                                description: Details of the recipient of the reward
                                properties:
                                  name:
                                    type: string
                                    description: Name of the recipient
                                    example: John Doe Jr.
                                  email:
                                    type: string
                                    description: Email address of the recipient
                                    example: john.doe@example.com
                                  phone:
                                    type: string
                                    description: >-
                                      Phone number of the recipient. For non-US
                                      phone numbers, specify the country code
                                      (prefixed with +).
                                    example: 123-456-7890
                              deliver_at:
                                type: string
                                format: date
                                description: >-
                                  Timestamp of reward delivery within the next
                                  year. Note that if date-time is provided, the
                                  time values will be ignored.
                                pattern: YYYY-MM-DD
                                example: '2023-12-31'
                              custom_fields:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    Reward custom data for searching, tracking or
                                    copy (see [Adding custom fields to
                                    orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                                  properties:
                                    id:
                                      type: string
                                      pattern: '[A-Z0-9]{4,20}'
                                      example: SOMEIDSOMEID
                                      description: Tremendous ID of the custom field
                                    value:
                                      type: string
                                      description: Value of the custom field
                                      example: Hufflepuff
                                      nullable: true
                                    label:
                                      type: string
                                      description: Label of the custom field
                                      example: harry_potter_house
                              delivery:
                                type: object
                                description: >
                                  Details on how the reward is delivered to the
                                  recipient.
                                properties:
                                  method:
                                    description: |
                                      How to deliver the reward to the recipient.

                                      <table>
                                        <thead>
                                          <tr>
                                            <th>Delivery Method</th>
                                            <th>Description</th>
                                          </tr>
                                        </thead>
                                        <tbody>
                                          <tr>
                                            <td><code>EMAIL</code></td>
                                            <td>Deliver the reward to the recipient by email</td>
                                          </tr>
                                          <tr>
                                            <td><code>LINK</code></td>
                                            <td>
                                              <p>Deliver the reward to the recipient via a link.</p>
                                              <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                            </td>
                                          </tr>
                                          <tr>
                                            <td><code>PHONE</code></td>
                                            <td>Deliver the reward to the recipient by SMS</td>
                                          </tr>
                                        </tbody>
                                      </table>
                                    type: string
                                    enum:
                                      - EMAIL
                                      - LINK
                                      - PHONE
                                  status:
                                    type: string
                                    enum:
                                      - SCHEDULED
                                      - FAILED
                                      - SUCCEEDED
                                      - PENDING
                                    description: >
                                      Current status of the delivery of the
                                      reward:


                                      * `SCHEDULED` - Reward is scheduled for
                                      delivery and will be delivered soon.

                                      * `FAILED` - Delivery of reward failed (e.g.
                                      email bounced).

                                      * `SUCCEEDED` - Reward was successfully
                                      delivered (email or text message delivered
                                      or reward link opened).

                                      * `PENDING` - Delivery is pending but not
                                      yet scheduled.
                                  link:
                                    type: string
                                    description: >
                                      Link to redeem the reward at. You need to
                                      deliver this link to the recipient.


                                      Only available for rewards for which the
                                      `method` for delivery is set to `LINK`.
                                    example: >-
                                      https://testflight.tremendous.com/rewards/payout/z67jic92r
                                required:
                                  - method
                                  - status
                      required:
                        - id
                        - created_at
                        - status
          '400':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '402':
            description: >-
              Not enough funds to carry out the request. Please top-up your
              account
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: >-
                      Not enough funds to carry out this operation. Fund your
                      balance to proceed.
                    payload: {}
          '422':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /orders/{id}:
      get:
        summary: Retrieve order
        description: |
          Retrieve the order, identified by the given `id` in the URL
        operationId: get-order
        tags:
          - Orders
        parameters:
          - name: id
            in: path
            description: >
              ID of the order that should be retrieved. In case the order has an
              `external_id` reference supplied by the

              customer on creation, it's possible to use it instead.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: An order (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - order
                  properties:
                    order:
                      type: object
                      description: >-
                        An order wraps around the fulfilment of one or more
                        rewards.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the order
                        external_id:
                          type: string
                          nullable: true
                          description: >
                            Reference for this order, supplied by the customer.


                            When set, `external_id` makes order idempotent. All
                            requests that use the same `external_id`

                            after the initial order creation, will result in a
                            response that returns the data of the

                            initially created order. The response will have a
                            `201` response code. These responses

                            **fail** to create any further orders.


                            It also allows for retrieving by `external_id` instead
                            of `id` only.
                          example: Your-Individual-Identifier-for-This-Order
                        campaign_id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: IVM0I3WNJJL0
                          nullable: true
                          description: >
                            ID of the campaign in your account, that defines the
                            available products (different gift cards, charity,
                            etc.)

                            that the recipient can choose from.
                        created_at:
                          type: string
                          format: date-time
                          description: Date the order has been created
                        status:
                          type: string
                          description: |
                            Execution status of a given order

                            <table>
                              <thead>
                                <tr>
                                  <th>
                                    Status
                                  </th>
                                  <th>
                                    Description
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td>
                                    <code>
                                      CANCELED
                                    </code>
                                  </td>
                                  <td>
                                    The order and all of its rewards were canceled.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      CART
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created, but hasn't yet been processed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      EXECUTED
                                    </code>
                                  </td>
                                  <td>
                                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      FAILED
                                    </code>
                                  </td>
                                  <td>
                                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but needs approval to be executed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING INTERNAL PAYMENT APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but it is under review and requires approval from our team.
                                  </td>
                                </tr>

                              </tbody>
                            </table>
                          enum:
                            - CANCELED
                            - CART
                            - EXECUTED
                            - FAILED
                            - PENDING APPROVAL
                            - PENDING INTERNAL PAYMENT APPROVAL
                        payment:
                          type: object
                          properties:
                            subtotal:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order before fees (in USD)
                              example: 50
                            total:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order including fees (in USD)
                              example: 52.5
                            fees:
                              type: number
                              format: double
                              minimum: 0
                              description: Fees for the order (in USD)
                              example: 2.5
                            refund:
                              type: object
                              properties:
                                total:
                                  type: number
                                  format: double
                                  minimum: 0
                                  description: Total amount of the order refunds (in USD)
                                  example: 52.5
                              required:
                                - total
                              description: >
                                Breakdown of the order refunds (total amount in
                                USD, independent from the currency of the ordered
                                rewards).

                                Note that this property will only appear for
                                canceled orders or orders with canceled rewards.
                            channel:
                              type: string
                              description: Name of the channel in which the order was created
                              enum:
                                - UI
                                - API
                                - EMBED
                                - DECIPHER
                                - QUALTRICS
                                - TYPEFORM
                                - SURVEY MONKEY
                          description: >-
                            Cost breakdown of the order (cost of rewards + fees).
                            Cost and fees are always denominated in USD,
                            independent from the currency of the ordered rewards.

                            Note that this property will only appear for processed
                            orders (`status` is `EXECUTED`).
                        invoice_id:
                          type: string
                          description: The ID for the invoice associated with this order
                          example: 2E59A82B-0001
                        reward:
                          type: object
                          description: >
                            A single reward, sent to a recipient. A reward is
                            always part of an order.


                            Either `products` or `campaign_id` must be specified.
                          properties:
                            id:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                              description: Tremendous ID of the reward
                            order_id:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                              description: Tremendous ID of the order this reward is part of.
                            created_at:
                              type: string
                              format: date-time
                              description: Date the reward was created
                            value:
                              type: object
                              properties:
                                denomination:
                                  type: number
                                  format: double
                                  description: Amount of the reward
                                currency_code:
                                  type: string
                                  enum:
                                    - USD
                                    - CAD
                                    - EUR
                                    - AED
                                    - AFN
                                    - ALL
                                    - AMD
                                    - ARS
                                    - AUD
                                    - AZN
                                    - BAM
                                    - BDT
                                    - BGN
                                    - BHD
                                    - BIF
                                    - BND
                                    - BOB
                                    - BRL
                                    - BWP
                                    - BYR
                                    - BZD
                                    - CDF
                                    - CHF
                                    - CLP
                                    - CNY
                                    - COP
                                    - CRC
                                    - CVE
                                    - CZK
                                    - DJF
                                    - DKK
                                    - DOP
                                    - DZD
                                    - EEK
                                    - EGP
                                    - ERN
                                    - ETB
                                    - GBP
                                    - GEL
                                    - GHS
                                    - GNF
                                    - GTQ
                                    - HKD
                                    - HNL
                                    - HRK
                                    - HUF
                                    - IDR
                                    - ILS
                                    - INR
                                    - IQD
                                    - IRR
                                    - ISK
                                    - JMD
                                    - JOD
                                    - JPY
                                    - KES
                                    - KHR
                                    - KRW
                                    - KWD
                                    - KZT
                                    - LBP
                                    - LKR
                                    - LTL
                                    - LVL
                                    - MAD
                                    - MDL
                                    - MGA
                                    - MKD
                                    - MMK
                                    - MOP
                                    - MUR
                                    - MXN
                                    - MYR
                                    - MZN
                                    - NAD
                                    - NGN
                                    - NIO
                                    - NOK
                                    - NPR
                                    - NZD
                                    - OMR
                                    - PAB
                                    - PEN
                                    - PHP
                                    - PKR
                                    - PLN
                                    - PYG
                                    - QAR
                                    - RON
                                    - RSD
                                    - RUB
                                    - RWF
                                    - SAR
                                    - SDG
                                    - SEK
                                    - SGD
                                    - SOS
                                    - SYP
                                    - THB
                                    - TND
                                    - TOP
                                    - TRY
                                    - TTD
                                    - TWD
                                    - TZS
                                    - UAH
                                    - UGX
                                    - UYU
                                    - UZS
                                    - VEF
                                    - VND
                                    - XAF
                                    - XOF
                                    - YER
                                    - ZAR
                                    - ZMK
                                  example: USD
                                  description: Currency of the reward
                              required:
                                - denomination
                                - currency_code
                              example:
                                denomination: 50
                                currency_code: USD
                            recipient:
                              type: object
                              description: Details of the recipient of the reward
                              properties:
                                name:
                                  type: string
                                  description: Name of the recipient
                                  example: John Doe Jr.
                                email:
                                  type: string
                                  description: Email address of the recipient
                                  example: john.doe@example.com
                                phone:
                                  type: string
                                  description: >-
                                    Phone number of the recipient. For non-US
                                    phone numbers, specify the country code
                                    (prefixed with +).
                                  example: 123-456-7890
                            deliver_at:
                              type: string
                              format: date
                              description: >-
                                Timestamp of reward delivery within the next year.
                                Note that if date-time is provided, the time
                                values will be ignored.
                              pattern: YYYY-MM-DD
                              example: '2023-12-31'
                            custom_fields:
                              type: array
                              items:
                                type: object
                                description: >-
                                  Reward custom data for searching, tracking or
                                  copy (see [Adding custom fields to
                                  orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                                properties:
                                  id:
                                    type: string
                                    pattern: '[A-Z0-9]{4,20}'
                                    example: SOMEIDSOMEID
                                    description: Tremendous ID of the custom field
                                  value:
                                    type: string
                                    description: Value of the custom field
                                    example: Hufflepuff
                                    nullable: true
                                  label:
                                    type: string
                                    description: Label of the custom field
                                    example: harry_potter_house
                            delivery:
                              description: >
                                Details on how the reward is delivered to the
                                recipient.
                              type: object
                              properties:
                                method:
                                  description: |
                                    How to deliver the reward to the recipient.

                                    <table>
                                      <thead>
                                        <tr>
                                          <th>Delivery Method</th>
                                          <th>Description</th>
                                        </tr>
                                      </thead>
                                      <tbody>
                                        <tr>
                                          <td><code>EMAIL</code></td>
                                          <td>Deliver the reward to the recipient by email</td>
                                        </tr>
                                        <tr>
                                          <td><code>LINK</code></td>
                                          <td>
                                            <p>Deliver the reward to the recipient via a link.</p>
                                            <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                          </td>
                                        </tr>
                                        <tr>
                                          <td><code>PHONE</code></td>
                                          <td>Deliver the reward to the recipient by SMS</td>
                                        </tr>
                                      </tbody>
                                    </table>
                                  type: string
                                  enum:
                                    - EMAIL
                                    - LINK
                                    - PHONE
                                status:
                                  type: string
                                  enum:
                                    - SCHEDULED
                                    - FAILED
                                    - SUCCEEDED
                                    - PENDING
                                  description: >
                                    Current status of the delivery of the reward:


                                    * `SCHEDULED` - Reward is scheduled for
                                    delivery and will be delivered soon.

                                    * `FAILED` - Delivery of reward failed (e.g.
                                    email bounced).

                                    * `SUCCEEDED` - Reward was successfully
                                    delivered (email or text message delivered or
                                    reward link opened).

                                    * `PENDING` - Delivery is pending but not yet
                                    scheduled.
                              required:
                                - method
                                - status
                      required:
                        - id
                        - created_at
                        - status
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /order_approvals/{id}/approve:
      post:
        summary: Approve order
        description: >
          Approves an order that is pending review, identified by the given `id`
          in the URL.


          Approvals is a feature that requires orders to be approved by an
          organization admin

          before they are sent out. To enable approvals for your organization,
          please enable

          'Allow approvals via API' via the organization''s 'Order Approvals'
          settings from the Tremendous dashboard.
        operationId: approve-order
        tags:
          - Orders
        parameters:
          - name: id
            in: path
            description: >-
              ID of the order that should be approved. In case the order has an
              `external_id` reference supplied by the customer on creation, it's
              possible to use it instead.
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: An order (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - order
                  properties:
                    order:
                      type: object
                      description: >-
                        An order wraps around the fulfilment of one or more
                        rewards.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the order
                        external_id:
                          type: string
                          nullable: true
                          description: >
                            Reference for this order, supplied by the customer.


                            When set, `external_id` makes order idempotent. All
                            requests that use the same `external_id`

                            after the initial order creation, will result in a
                            response that returns the data of the

                            initially created order. The response will have a
                            `201` response code. These responses

                            **fail** to create any further orders.


                            It also allows for retrieving by `external_id` instead
                            of `id` only.
                          example: Your-Individual-Identifier-for-This-Order
                        campaign_id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: IVM0I3WNJJL0
                          nullable: true
                          description: >
                            ID of the campaign in your account, that defines the
                            available products (different gift cards, charity,
                            etc.)

                            that the recipient can choose from.
                        created_at:
                          type: string
                          format: date-time
                          description: Date the order has been created
                        status:
                          type: string
                          description: |
                            Execution status of a given order

                            <table>
                              <thead>
                                <tr>
                                  <th>
                                    Status
                                  </th>
                                  <th>
                                    Description
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td>
                                    <code>
                                      CANCELED
                                    </code>
                                  </td>
                                  <td>
                                    The order and all of its rewards were canceled.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      CART
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created, but hasn't yet been processed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      EXECUTED
                                    </code>
                                  </td>
                                  <td>
                                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      FAILED
                                    </code>
                                  </td>
                                  <td>
                                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but needs approval to be executed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING INTERNAL PAYMENT APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but it is under review and requires approval from our team.
                                  </td>
                                </tr>

                              </tbody>
                            </table>
                          enum:
                            - CANCELED
                            - CART
                            - EXECUTED
                            - FAILED
                            - PENDING APPROVAL
                            - PENDING INTERNAL PAYMENT APPROVAL
                        payment:
                          type: object
                          properties:
                            subtotal:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order before fees (in USD)
                              example: 50
                            total:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order including fees (in USD)
                              example: 52.5
                            fees:
                              type: number
                              format: double
                              minimum: 0
                              description: Fees for the order (in USD)
                              example: 2.5
                            refund:
                              type: object
                              properties:
                                total:
                                  type: number
                                  format: double
                                  minimum: 0
                                  description: Total amount of the order refunds (in USD)
                                  example: 52.5
                              required:
                                - total
                              description: >
                                Breakdown of the order refunds (total amount in
                                USD, independent from the currency of the ordered
                                rewards).

                                Note that this property will only appear for
                                canceled orders or orders with canceled rewards.
                            channel:
                              type: string
                              description: Name of the channel in which the order was created
                              enum:
                                - UI
                                - API
                                - EMBED
                                - DECIPHER
                                - QUALTRICS
                                - TYPEFORM
                                - SURVEY MONKEY
                          description: >-
                            Cost breakdown of the order (cost of rewards + fees).
                            Cost and fees are always denominated in USD,
                            independent from the currency of the ordered rewards.

                            Note that this property will only appear for processed
                            orders (`status` is `EXECUTED`).
                        invoice_id:
                          type: string
                          description: The ID for the invoice associated with this order
                          example: 2E59A82B-0001
                        reward:
                          type: object
                          description: >
                            A single reward, sent to a recipient. A reward is
                            always part of an order.


                            Either `products` or `campaign_id` must be specified.
                          properties:
                            id:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                              description: Tremendous ID of the reward
                            order_id:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                              description: Tremendous ID of the order this reward is part of.
                            created_at:
                              type: string
                              format: date-time
                              description: Date the reward was created
                            value:
                              type: object
                              properties:
                                denomination:
                                  type: number
                                  format: double
                                  description: Amount of the reward
                                currency_code:
                                  type: string
                                  enum:
                                    - USD
                                    - CAD
                                    - EUR
                                    - AED
                                    - AFN
                                    - ALL
                                    - AMD
                                    - ARS
                                    - AUD
                                    - AZN
                                    - BAM
                                    - BDT
                                    - BGN
                                    - BHD
                                    - BIF
                                    - BND
                                    - BOB
                                    - BRL
                                    - BWP
                                    - BYR
                                    - BZD
                                    - CDF
                                    - CHF
                                    - CLP
                                    - CNY
                                    - COP
                                    - CRC
                                    - CVE
                                    - CZK
                                    - DJF
                                    - DKK
                                    - DOP
                                    - DZD
                                    - EEK
                                    - EGP
                                    - ERN
                                    - ETB
                                    - GBP
                                    - GEL
                                    - GHS
                                    - GNF
                                    - GTQ
                                    - HKD
                                    - HNL
                                    - HRK
                                    - HUF
                                    - IDR
                                    - ILS
                                    - INR
                                    - IQD
                                    - IRR
                                    - ISK
                                    - JMD
                                    - JOD
                                    - JPY
                                    - KES
                                    - KHR
                                    - KRW
                                    - KWD
                                    - KZT
                                    - LBP
                                    - LKR
                                    - LTL
                                    - LVL
                                    - MAD
                                    - MDL
                                    - MGA
                                    - MKD
                                    - MMK
                                    - MOP
                                    - MUR
                                    - MXN
                                    - MYR
                                    - MZN
                                    - NAD
                                    - NGN
                                    - NIO
                                    - NOK
                                    - NPR
                                    - NZD
                                    - OMR
                                    - PAB
                                    - PEN
                                    - PHP
                                    - PKR
                                    - PLN
                                    - PYG
                                    - QAR
                                    - RON
                                    - RSD
                                    - RUB
                                    - RWF
                                    - SAR
                                    - SDG
                                    - SEK
                                    - SGD
                                    - SOS
                                    - SYP
                                    - THB
                                    - TND
                                    - TOP
                                    - TRY
                                    - TTD
                                    - TWD
                                    - TZS
                                    - UAH
                                    - UGX
                                    - UYU
                                    - UZS
                                    - VEF
                                    - VND
                                    - XAF
                                    - XOF
                                    - YER
                                    - ZAR
                                    - ZMK
                                  example: USD
                                  description: Currency of the reward
                              required:
                                - denomination
                                - currency_code
                              example:
                                denomination: 50
                                currency_code: USD
                            recipient:
                              type: object
                              description: Details of the recipient of the reward
                              properties:
                                name:
                                  type: string
                                  description: Name of the recipient
                                  example: John Doe Jr.
                                email:
                                  type: string
                                  description: Email address of the recipient
                                  example: john.doe@example.com
                                phone:
                                  type: string
                                  description: >-
                                    Phone number of the recipient. For non-US
                                    phone numbers, specify the country code
                                    (prefixed with +).
                                  example: 123-456-7890
                            deliver_at:
                              type: string
                              format: date
                              description: >-
                                Timestamp of reward delivery within the next year.
                                Note that if date-time is provided, the time
                                values will be ignored.
                              pattern: YYYY-MM-DD
                              example: '2023-12-31'
                            custom_fields:
                              type: array
                              items:
                                type: object
                                description: >-
                                  Reward custom data for searching, tracking or
                                  copy (see [Adding custom fields to
                                  orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                                properties:
                                  id:
                                    type: string
                                    pattern: '[A-Z0-9]{4,20}'
                                    example: SOMEIDSOMEID
                                    description: Tremendous ID of the custom field
                                  value:
                                    type: string
                                    description: Value of the custom field
                                    example: Hufflepuff
                                    nullable: true
                                  label:
                                    type: string
                                    description: Label of the custom field
                                    example: harry_potter_house
                            delivery:
                              description: >
                                Details on how the reward is delivered to the
                                recipient.
                              type: object
                              properties:
                                method:
                                  description: |
                                    How to deliver the reward to the recipient.

                                    <table>
                                      <thead>
                                        <tr>
                                          <th>Delivery Method</th>
                                          <th>Description</th>
                                        </tr>
                                      </thead>
                                      <tbody>
                                        <tr>
                                          <td><code>EMAIL</code></td>
                                          <td>Deliver the reward to the recipient by email</td>
                                        </tr>
                                        <tr>
                                          <td><code>LINK</code></td>
                                          <td>
                                            <p>Deliver the reward to the recipient via a link.</p>
                                            <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                          </td>
                                        </tr>
                                        <tr>
                                          <td><code>PHONE</code></td>
                                          <td>Deliver the reward to the recipient by SMS</td>
                                        </tr>
                                      </tbody>
                                    </table>
                                  type: string
                                  enum:
                                    - EMAIL
                                    - LINK
                                    - PHONE
                                status:
                                  type: string
                                  enum:
                                    - SCHEDULED
                                    - FAILED
                                    - SUCCEEDED
                                    - PENDING
                                  description: >
                                    Current status of the delivery of the reward:


                                    * `SCHEDULED` - Reward is scheduled for
                                    delivery and will be delivered soon.

                                    * `FAILED` - Delivery of reward failed (e.g.
                                    email bounced).

                                    * `SUCCEEDED` - Reward was successfully
                                    delivered (email or text message delivered or
                                    reward link opened).

                                    * `PENDING` - Delivery is pending but not yet
                                    scheduled.
                              required:
                                - method
                                - status
                      required:
                        - id
                        - created_at
                        - status
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '402':
            description: >-
              Not enough funds in your account. Please send another approval
              request after you have deposited sufficient funds into your balance.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: >-
                      Not enough funds to carry out this operation. Fund your
                      balance to proceed.
                    payload: {}
          '403':
            description: >-
              API approvals are not enabled. Enable 'Allow approvals via API' in
              the organization's settings on the Tremendous dashboard.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Unsupported operation for this reward.
                      payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '422':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /order_approvals/{id}/reject:
      post:
        summary: Reject order
        description: >
          Rejects an order that is pending review, identified by the given `id` in
          the URL.


          Approvals is a feature that requires orders to be approved by an
          organization admin

          before they are sent out. To enable approvals for your organization,
          please enable

          'Allow approvals via API' via the organization''s 'Order Approvals'
          settings from the Tremendous dashboard.
        operationId: reject-order
        tags:
          - Orders
        parameters:
          - name: id
            in: path
            description: >-
              ID of the order that should be rejected. In case the order has an
              `external_id` reference supplied by the customer on creation, it's
              possible to use it instead.
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: An order (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - order
                  properties:
                    order:
                      type: object
                      description: >-
                        An order wraps around the fulfilment of one or more
                        rewards.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the order
                        external_id:
                          type: string
                          nullable: true
                          description: >
                            Reference for this order, supplied by the customer.


                            When set, `external_id` makes order idempotent. All
                            requests that use the same `external_id`

                            after the initial order creation, will result in a
                            response that returns the data of the

                            initially created order. The response will have a
                            `201` response code. These responses

                            **fail** to create any further orders.


                            It also allows for retrieving by `external_id` instead
                            of `id` only.
                          example: Your-Individual-Identifier-for-This-Order
                        campaign_id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: IVM0I3WNJJL0
                          nullable: true
                          description: >
                            ID of the campaign in your account, that defines the
                            available products (different gift cards, charity,
                            etc.)

                            that the recipient can choose from.
                        created_at:
                          type: string
                          format: date-time
                          description: Date the order has been created
                        status:
                          type: string
                          description: |
                            Execution status of a given order

                            <table>
                              <thead>
                                <tr>
                                  <th>
                                    Status
                                  </th>
                                  <th>
                                    Description
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td>
                                    <code>
                                      CANCELED
                                    </code>
                                  </td>
                                  <td>
                                    The order and all of its rewards were canceled.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      CART
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created, but hasn't yet been processed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      EXECUTED
                                    </code>
                                  </td>
                                  <td>
                                    The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      FAILED
                                    </code>
                                  </td>
                                  <td>
                                    The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but needs approval to be executed.
                                  </td>
                                </tr>
                                <tr>
                                  <td>
                                    <code>
                                      PENDING INTERNAL PAYMENT APPROVAL
                                    </code>
                                  </td>
                                  <td>
                                    The order has been created but it is under review and requires approval from our team.
                                  </td>
                                </tr>

                              </tbody>
                            </table>
                          enum:
                            - CANCELED
                            - CART
                            - EXECUTED
                            - FAILED
                            - PENDING APPROVAL
                            - PENDING INTERNAL PAYMENT APPROVAL
                        payment:
                          type: object
                          properties:
                            subtotal:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order before fees (in USD)
                              example: 50
                            total:
                              type: number
                              format: double
                              minimum: 0
                              description: Total price of the order including fees (in USD)
                              example: 52.5
                            fees:
                              type: number
                              format: double
                              minimum: 0
                              description: Fees for the order (in USD)
                              example: 2.5
                            refund:
                              type: object
                              properties:
                                total:
                                  type: number
                                  format: double
                                  minimum: 0
                                  description: Total amount of the order refunds (in USD)
                                  example: 52.5
                              required:
                                - total
                              description: >
                                Breakdown of the order refunds (total amount in
                                USD, independent from the currency of the ordered
                                rewards).

                                Note that this property will only appear for
                                canceled orders or orders with canceled rewards.
                            channel:
                              type: string
                              description: Name of the channel in which the order was created
                              enum:
                                - UI
                                - API
                                - EMBED
                                - DECIPHER
                                - QUALTRICS
                                - TYPEFORM
                                - SURVEY MONKEY
                          description: >-
                            Cost breakdown of the order (cost of rewards + fees).
                            Cost and fees are always denominated in USD,
                            independent from the currency of the ordered rewards.

                            Note that this property will only appear for processed
                            orders (`status` is `EXECUTED`).
                        invoice_id:
                          type: string
                          description: The ID for the invoice associated with this order
                          example: 2E59A82B-0001
                        reward:
                          type: object
                          description: >
                            A single reward, sent to a recipient. A reward is
                            always part of an order.


                            Either `products` or `campaign_id` must be specified.
                          properties:
                            id:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                              description: Tremendous ID of the reward
                            order_id:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                              description: Tremendous ID of the order this reward is part of.
                            created_at:
                              type: string
                              format: date-time
                              description: Date the reward was created
                            value:
                              type: object
                              properties:
                                denomination:
                                  type: number
                                  format: double
                                  description: Amount of the reward
                                currency_code:
                                  type: string
                                  enum:
                                    - USD
                                    - CAD
                                    - EUR
                                    - AED
                                    - AFN
                                    - ALL
                                    - AMD
                                    - ARS
                                    - AUD
                                    - AZN
                                    - BAM
                                    - BDT
                                    - BGN
                                    - BHD
                                    - BIF
                                    - BND
                                    - BOB
                                    - BRL
                                    - BWP
                                    - BYR
                                    - BZD
                                    - CDF
                                    - CHF
                                    - CLP
                                    - CNY
                                    - COP
                                    - CRC
                                    - CVE
                                    - CZK
                                    - DJF
                                    - DKK
                                    - DOP
                                    - DZD
                                    - EEK
                                    - EGP
                                    - ERN
                                    - ETB
                                    - GBP
                                    - GEL
                                    - GHS
                                    - GNF
                                    - GTQ
                                    - HKD
                                    - HNL
                                    - HRK
                                    - HUF
                                    - IDR
                                    - ILS
                                    - INR
                                    - IQD
                                    - IRR
                                    - ISK
                                    - JMD
                                    - JOD
                                    - JPY
                                    - KES
                                    - KHR
                                    - KRW
                                    - KWD
                                    - KZT
                                    - LBP
                                    - LKR
                                    - LTL
                                    - LVL
                                    - MAD
                                    - MDL
                                    - MGA
                                    - MKD
                                    - MMK
                                    - MOP
                                    - MUR
                                    - MXN
                                    - MYR
                                    - MZN
                                    - NAD
                                    - NGN
                                    - NIO
                                    - NOK
                                    - NPR
                                    - NZD
                                    - OMR
                                    - PAB
                                    - PEN
                                    - PHP
                                    - PKR
                                    - PLN
                                    - PYG
                                    - QAR
                                    - RON
                                    - RSD
                                    - RUB
                                    - RWF
                                    - SAR
                                    - SDG
                                    - SEK
                                    - SGD
                                    - SOS
                                    - SYP
                                    - THB
                                    - TND
                                    - TOP
                                    - TRY
                                    - TTD
                                    - TWD
                                    - TZS
                                    - UAH
                                    - UGX
                                    - UYU
                                    - UZS
                                    - VEF
                                    - VND
                                    - XAF
                                    - XOF
                                    - YER
                                    - ZAR
                                    - ZMK
                                  example: USD
                                  description: Currency of the reward
                              required:
                                - denomination
                                - currency_code
                              example:
                                denomination: 50
                                currency_code: USD
                            recipient:
                              type: object
                              description: Details of the recipient of the reward
                              properties:
                                name:
                                  type: string
                                  description: Name of the recipient
                                  example: John Doe Jr.
                                email:
                                  type: string
                                  description: Email address of the recipient
                                  example: john.doe@example.com
                                phone:
                                  type: string
                                  description: >-
                                    Phone number of the recipient. For non-US
                                    phone numbers, specify the country code
                                    (prefixed with +).
                                  example: 123-456-7890
                            deliver_at:
                              type: string
                              format: date
                              description: >-
                                Timestamp of reward delivery within the next year.
                                Note that if date-time is provided, the time
                                values will be ignored.
                              pattern: YYYY-MM-DD
                              example: '2023-12-31'
                            custom_fields:
                              type: array
                              items:
                                type: object
                                description: >-
                                  Reward custom data for searching, tracking or
                                  copy (see [Adding custom fields to
                                  orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                                properties:
                                  id:
                                    type: string
                                    pattern: '[A-Z0-9]{4,20}'
                                    example: SOMEIDSOMEID
                                    description: Tremendous ID of the custom field
                                  value:
                                    type: string
                                    description: Value of the custom field
                                    example: Hufflepuff
                                    nullable: true
                                  label:
                                    type: string
                                    description: Label of the custom field
                                    example: harry_potter_house
                            delivery:
                              description: >
                                Details on how the reward is delivered to the
                                recipient.
                              type: object
                              properties:
                                method:
                                  description: |
                                    How to deliver the reward to the recipient.

                                    <table>
                                      <thead>
                                        <tr>
                                          <th>Delivery Method</th>
                                          <th>Description</th>
                                        </tr>
                                      </thead>
                                      <tbody>
                                        <tr>
                                          <td><code>EMAIL</code></td>
                                          <td>Deliver the reward to the recipient by email</td>
                                        </tr>
                                        <tr>
                                          <td><code>LINK</code></td>
                                          <td>
                                            <p>Deliver the reward to the recipient via a link.</p>
                                            <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                          </td>
                                        </tr>
                                        <tr>
                                          <td><code>PHONE</code></td>
                                          <td>Deliver the reward to the recipient by SMS</td>
                                        </tr>
                                      </tbody>
                                    </table>
                                  type: string
                                  enum:
                                    - EMAIL
                                    - LINK
                                    - PHONE
                                status:
                                  type: string
                                  enum:
                                    - SCHEDULED
                                    - FAILED
                                    - SUCCEEDED
                                    - PENDING
                                  description: >
                                    Current status of the delivery of the reward:


                                    * `SCHEDULED` - Reward is scheduled for
                                    delivery and will be delivered soon.

                                    * `FAILED` - Delivery of reward failed (e.g.
                                    email bounced).

                                    * `SUCCEEDED` - Reward was successfully
                                    delivered (email or text message delivered or
                                    reward link opened).

                                    * `PENDING` - Delivery is pending but not yet
                                    scheduled.
                              required:
                                - method
                                - status
                      required:
                        - id
                        - created_at
                        - status
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '403':
            description: >-
              API approvals are not enabled for this organization. Enable "Allow
              approvals via API" via the organization's order approval settings
              from the Tremendous dashboard.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Unsupported operation for this reward.
                      payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '422':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /products:
      get:
        summary: List products
        description: |
          Retrieve a list of available products
        operationId: list-products
        tags:
          - Products
        parameters:
          - name: country
            in: query
            description: >-
              Comma-separated list of [Alpha-2 country
              codes](https://www.iban.com/country-codes), used to only retrieve
              products available in the provided countries
            required: false
            schema:
              type: string
            example: US,UK
          - name: currency
            in: query
            description: >-
              Comma-separated list of [currency
              codes](https://www.iban.com/currency-codes), used to only retrieve
              products available in the provided currencies
            schema:
              type: string
            example: USD,EUR
        responses:
          '200':
            description: List of available products.
            content:
              application/json:
                schema:
                  type: object
                  title: ListProductsResponse
                  required:
                    - products
                  properties:
                    products:
                      type: array
                      items:
                        type: object
                        description: >
                          A product represents one way to payout a reward to it's
                          recipient. Think:


                          * Amazon.com gift card (ID: `OKMHM2X2OHYV`)

                          * Donations to Save the Children (ID: `ESRNAD533W5A`)

                          * Virtual Visa debit card (ID: `Q24BD9EZ332JT`)


                          each of which is one specific product on Tremendous.


                          > 📘 All available products

                          >

                          > See this [list](https://www.tremendous.com/catalog)


                          Products can be limited in their availability to
                          recipients by


                          * geography (field `countries`)

                          * currency (field `currencies`)

                          * amount of the reward (field `skus`)
                            * e.g. adidas gift cards accept any amount between 5 and 200 USD.

                          See the description of each respective parameter for
                          further details.
                        required:
                          - id
                          - name
                          - description
                          - category
                          - disclosure
                          - currency_codes
                          - countries
                          - images
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          name:
                            type: string
                            description: Name of the product
                          description:
                            type: string
                            description: >-
                              Detailed description of the product. Mostly used for
                              products with a `category` of `charities`.
                          category:
                            type: string
                            description: |
                              The category of this product

                              <table>
                                <thead>
                                  <tr>
                                    <th>Category</th>
                                    <th>Description</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr>
                                    <td><code>ach</code></td>
                                    <td>Bank transfer to the recipient</td>
                                  </tr>
                                  <tr>
                                    <td><code>charity</code></td>
                                    <td>Donations to a charity</td>
                                  </tr>
                                  <tr>
                                    <td><code>merchant_card</code></td>
                                    <td>A gift card for a certain merchant (e.g. Amazon)</td>
                                  </tr>
                                  <tr>
                                    <td><code>paypal</code></td>
                                    <td>Payout via PayPal</td>
                                  </tr>
                                  <tr>
                                    <td><code>venmo</code></td>
                                    <td>Payout via Venmo</td>
                                  </tr>
                                  <tr>
                                    <td><code>visa_card</code></td>
                                    <td>Payout in form of a Visa debit card</td>
                                  </tr>
                                </tbody>
                              </table>
                            enum:
                              - ach
                              - charity
                              - merchant_card
                              - paypal
                              - venmo
                              - visa_card
                            example: charities
                          disclosure:
                            type: string
                            description: >-
                              Legal disclosures for this product. Can be in HTML
                              format.
                            example: >-
                              <ul><li><p>This card may not be exchanged for
                              cash.</p></li><li><p>…</p></li></ul>
                          skus:
                            type: array
                            description: >
                              Products may are restricted in their usage based on
                              the amount of the reward. The `skus` array defines
                              bands of denominations in which this product may be
                              used for payouts.
                            items:
                              type: object
                              required:
                                - min
                                - max
                              properties:
                                min:
                                  type: number
                                  description: >-
                                    Minimal denomination that this product
                                    supports (in the product's currency)
                                  minimum: 0
                                  example: 20
                                max:
                                  type: number
                                  description: >-
                                    Maximum denomination that this product
                                    supports (in the product's currency)
                                  minimum: 0
                                  example: 100
                              example:
                                - min: 20
                                  max: 100
                              minItems: 0
                          currency_codes:
                            type: array
                            description: Available currencies for this product
                            minItems: 1
                            items:
                              type: string
                              enum:
                                - USD
                                - CAD
                                - EUR
                                - AED
                                - AFN
                                - ALL
                                - AMD
                                - ARS
                                - AUD
                                - AZN
                                - BAM
                                - BDT
                                - BGN
                                - BHD
                                - BIF
                                - BND
                                - BOB
                                - BRL
                                - BWP
                                - BYR
                                - BZD
                                - CDF
                                - CHF
                                - CLP
                                - CNY
                                - COP
                                - CRC
                                - CVE
                                - CZK
                                - DJF
                                - DKK
                                - DOP
                                - DZD
                                - EEK
                                - EGP
                                - ERN
                                - ETB
                                - GBP
                                - GEL
                                - GHS
                                - GNF
                                - GTQ
                                - HKD
                                - HNL
                                - HRK
                                - HUF
                                - IDR
                                - ILS
                                - INR
                                - IQD
                                - IRR
                                - ISK
                                - JMD
                                - JOD
                                - JPY
                                - KES
                                - KHR
                                - KRW
                                - KWD
                                - KZT
                                - LBP
                                - LKR
                                - LTL
                                - LVL
                                - MAD
                                - MDL
                                - MGA
                                - MKD
                                - MMK
                                - MOP
                                - MUR
                                - MXN
                                - MYR
                                - MZN
                                - NAD
                                - NGN
                                - NIO
                                - NOK
                                - NPR
                                - NZD
                                - OMR
                                - PAB
                                - PEN
                                - PHP
                                - PKR
                                - PLN
                                - PYG
                                - QAR
                                - RON
                                - RSD
                                - RUB
                                - RWF
                                - SAR
                                - SDG
                                - SEK
                                - SGD
                                - SOS
                                - SYP
                                - THB
                                - TND
                                - TOP
                                - TRY
                                - TTD
                                - TWD
                                - TZS
                                - UAH
                                - UGX
                                - UYU
                                - UZS
                                - VEF
                                - VND
                                - XAF
                                - XOF
                                - YER
                                - ZAR
                                - ZMK
                              example: USD
                          countries:
                            type: array
                            description: >-
                              List of countries in which this product is available
                              to recipients.
                            items:
                              type: object
                              required:
                                - abbr
                              properties:
                                abbr:
                                  type: string
                                  description: ISO 3166 country code
                                  example: US
                            minItems: 1
                            example:
                              - abbr: US
                          images:
                            type: array
                            description: >-
                              List of product images associated with this product
                              (e.g. logos or images of the gift cards)
                            items:
                              type: object
                              properties:
                                src:
                                  type: string
                                  description: URL to this image
                                  format: uri
                                type:
                                  type: string
                                  description: Type of image
                                  enum:
                                    - card
                                    - logo
                              required:
                                - src
                                - type
                            minItems: 0
                            example:
                              - src: https://example.com/some-logo.jpg
                                type: logo
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /products/{id}:
      get:
        summary: Retrieve product
        description: |
          Retrieve a product, identified by the given `id` in the URL
        operationId: get-product
        tags:
          - Products
        parameters:
          - name: id
            in: path
            description: ID of the product that should be retrieved
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: Requested product
            content:
              application/json:
                schema:
                  type: object
                  title: GetProductResponse
                  required:
                    - product
                  properties:
                    product:
                      type: object
                      description: >
                        A product represents one way to payout a reward to it's
                        recipient. Think:


                        * Amazon.com gift card (ID: `OKMHM2X2OHYV`)

                        * Donations to Save the Children (ID: `ESRNAD533W5A`)

                        * Virtual Visa debit card (ID: `Q24BD9EZ332JT`)


                        each of which is one specific product on Tremendous.


                        > 📘 All available products

                        >

                        > See this [list](https://www.tremendous.com/catalog)


                        Products can be limited in their availability to
                        recipients by


                        * geography (field `countries`)

                        * currency (field `currencies`)

                        * amount of the reward (field `skus`)
                          * e.g. adidas gift cards accept any amount between 5 and 200 USD.

                        See the description of each respective parameter for
                        further details.
                      required:
                        - id
                        - name
                        - description
                        - category
                        - disclosure
                        - currency_codes
                        - countries
                        - images
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        name:
                          type: string
                          description: Name of the product
                        description:
                          type: string
                          description: >-
                            Detailed description of the product. Mostly used for
                            products with a `category` of `charities`.
                        category:
                          type: string
                          description: |
                            The category of this product

                            <table>
                              <thead>
                                <tr>
                                  <th>Category</th>
                                  <th>Description</th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td><code>ach</code></td>
                                  <td>Bank transfer to the recipient</td>
                                </tr>
                                <tr>
                                  <td><code>charity</code></td>
                                  <td>Donations to a charity</td>
                                </tr>
                                <tr>
                                  <td><code>merchant_card</code></td>
                                  <td>A gift card for a certain merchant (e.g. Amazon)</td>
                                </tr>
                                <tr>
                                  <td><code>paypal</code></td>
                                  <td>Payout via PayPal</td>
                                </tr>
                                <tr>
                                  <td><code>venmo</code></td>
                                  <td>Payout via Venmo</td>
                                </tr>
                                <tr>
                                  <td><code>visa_card</code></td>
                                  <td>Payout in form of a Visa debit card</td>
                                </tr>
                              </tbody>
                            </table>
                          enum:
                            - ach
                            - charity
                            - merchant_card
                            - paypal
                            - venmo
                            - visa_card
                          example: charities
                        disclosure:
                          type: string
                          description: >-
                            Legal disclosures for this product. Can be in HTML
                            format.
                          example: >-
                            <ul><li><p>This card may not be exchanged for
                            cash.</p></li><li><p>…</p></li></ul>
                        skus:
                          type: array
                          description: >
                            Products may are restricted in their usage based on
                            the amount of the reward. The `skus` array defines
                            bands of denominations in which this product may be
                            used for payouts.
                          items:
                            type: object
                            required:
                              - min
                              - max
                            properties:
                              min:
                                type: number
                                description: >-
                                  Minimal denomination that this product supports
                                  (in the product's currency)
                                minimum: 0
                                example: 20
                              max:
                                type: number
                                description: >-
                                  Maximum denomination that this product supports
                                  (in the product's currency)
                                minimum: 0
                                example: 100
                            example:
                              - min: 20
                                max: 100
                            minItems: 0
                        currency_codes:
                          type: array
                          description: Available currencies for this product
                          minItems: 1
                          items:
                            type: string
                            enum:
                              - USD
                              - CAD
                              - EUR
                              - AED
                              - AFN
                              - ALL
                              - AMD
                              - ARS
                              - AUD
                              - AZN
                              - BAM
                              - BDT
                              - BGN
                              - BHD
                              - BIF
                              - BND
                              - BOB
                              - BRL
                              - BWP
                              - BYR
                              - BZD
                              - CDF
                              - CHF
                              - CLP
                              - CNY
                              - COP
                              - CRC
                              - CVE
                              - CZK
                              - DJF
                              - DKK
                              - DOP
                              - DZD
                              - EEK
                              - EGP
                              - ERN
                              - ETB
                              - GBP
                              - GEL
                              - GHS
                              - GNF
                              - GTQ
                              - HKD
                              - HNL
                              - HRK
                              - HUF
                              - IDR
                              - ILS
                              - INR
                              - IQD
                              - IRR
                              - ISK
                              - JMD
                              - JOD
                              - JPY
                              - KES
                              - KHR
                              - KRW
                              - KWD
                              - KZT
                              - LBP
                              - LKR
                              - LTL
                              - LVL
                              - MAD
                              - MDL
                              - MGA
                              - MKD
                              - MMK
                              - MOP
                              - MUR
                              - MXN
                              - MYR
                              - MZN
                              - NAD
                              - NGN
                              - NIO
                              - NOK
                              - NPR
                              - NZD
                              - OMR
                              - PAB
                              - PEN
                              - PHP
                              - PKR
                              - PLN
                              - PYG
                              - QAR
                              - RON
                              - RSD
                              - RUB
                              - RWF
                              - SAR
                              - SDG
                              - SEK
                              - SGD
                              - SOS
                              - SYP
                              - THB
                              - TND
                              - TOP
                              - TRY
                              - TTD
                              - TWD
                              - TZS
                              - UAH
                              - UGX
                              - UYU
                              - UZS
                              - VEF
                              - VND
                              - XAF
                              - XOF
                              - YER
                              - ZAR
                              - ZMK
                            example: USD
                        countries:
                          type: array
                          description: >-
                            List of countries in which this product is available
                            to recipients.
                          items:
                            type: object
                            required:
                              - abbr
                            properties:
                              abbr:
                                type: string
                                description: ISO 3166 country code
                                example: US
                          minItems: 1
                          example:
                            - abbr: US
                        images:
                          type: array
                          description: >-
                            List of product images associated with this product
                            (e.g. logos or images of the gift cards)
                          items:
                            type: object
                            properties:
                              src:
                                type: string
                                description: URL to this image
                                format: uri
                              type:
                                type: string
                                description: Type of image
                                enum:
                                  - card
                                  - logo
                            required:
                              - src
                              - type
                          minItems: 0
                          example:
                            - src: https://example.com/some-logo.jpg
                              type: logo
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /campaigns:
      get:
        summary: List campaigns
        description: |
          Retrieve a list of all campaigns created in your account
        operationId: list-campaigns
        tags:
          - Campaigns
        responses:
          '200':
            description: List of all campaigns in your organization's account.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - campaigns
                  properties:
                    campaigns:
                      type: array
                      items:
                        type: object
                        description: >
                          With a campaign you can define the look & feel of how
                          rewards are sent out.

                          It also lets you set the available products (different
                          gift cards, charity, etc.)

                          recipients can choose from.


                          > Note: Campaigns must be created from the Tremendous
                          dashboard.

                          >

                          > • [Production Dashboard](https://app.tremendous.com)

                          > • [Sandbox
                          Dashboard](https://app.testflight.tremendous.com/)
                        required:
                          - id
                          - name
                          - description
                          - products
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          name:
                            description: Name of the campaign
                            type: string
                            example: My Default Campaign
                          description:
                            description: Description of the campaign
                            type: string
                            example: A campaign I use as the default in Tremendous"
                            nullable: true
                          products:
                            type: array
                            description: >
                              List of IDs of products (different gift cards,
                              charity, etc.) that are available in this campaign.
                            items:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                            example:
                              - P3MR06THYM8R
                              - EFMULTF26PMR
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /campaigns/{id}:
      get:
        summary: Retrieve campaign
        description: |
          Retrieve a campaign, identified by the given `id` in the URL
        operationId: get-campaign
        tags:
          - Campaigns
        parameters:
          - name: id
            in: path
            description: ID of the campaign that should be retrieved
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: Requested campaign
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - campaign
                  properties:
                    campaign:
                      type: object
                      description: >
                        With a campaign you can define the look & feel of how
                        rewards are sent out.

                        It also lets you set the available products (different
                        gift cards, charity, etc.)

                        recipients can choose from.


                        > Note: Campaigns must be created from the Tremendous
                        dashboard.

                        >

                        > • [Production Dashboard](https://app.tremendous.com)

                        > • [Sandbox
                        Dashboard](https://app.testflight.tremendous.com/)
                      required:
                        - id
                        - name
                        - description
                        - products
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        name:
                          description: Name of the campaign
                          type: string
                          example: My Default Campaign
                        description:
                          description: Description of the campaign
                          type: string
                          example: A campaign I use as the default in Tremendous"
                          nullable: true
                        products:
                          type: array
                          description: >
                            List of IDs of products (different gift cards,
                            charity, etc.) that are available in this campaign.
                          items:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          example:
                            - P3MR06THYM8R
                            - EFMULTF26PMR
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /funding_sources:
      get:
        summary: List funding sources
        description: >
          Retrieve a list of all funding sources available for ordering through
          the API in your organization's account.
        operationId: list-funding-sources
        tags:
          - Funding sources
        responses:
          '200':
            description: >-
              List of all funding sources available in your organization's
              account.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - funding_sources
                  properties:
                    funding_sources:
                      type: array
                      items:
                        type: object
                        description: ''
                        required:
                          - id
                          - method
                          - meta
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          method:
                            type: string
                            description: >
                              You can pay for rewards using different payment
                              methods on Tremendous:


                              <table>
                                <thead>
                                  <tr>
                                    <th>Payment Method</th>
                                    <th>Description</th>
                                    </tr>
                                </thead>
                                <tbody>
                                  <tr>
                                    <td><code>balance</code></td>
                                    <td>Pre-funded balance in your Tremendous account to draw funds from to send rewards to recipients.</td>
                                  </tr>
                                  <tr>
                                    <td><code>bank_account</code></td>
                                    <td>Bank account to draw funds from to send rewards to recipients.</td>
                                  </tr>
                                  <tr>
                                    <td><code>credit_card</code></td>
                                    <td>Credit card to draw funds from to send rewards to recipients.</td>
                                  </tr>
                                  <tr>
                                    <td><code>invoice</code></td>
                                    <td>Send rewards to recipients and pay by invoice.</td>
                                  </tr>

                                </tbody>
                              </table>
                            enum:
                              - balance
                              - bank_account
                              - credit_card
                              - invoice
                            example: balance
                          type:
                            type: string
                            description: >
                              **Only available when `method` is set to
                              `invoice`.**
                            enum:
                              - COMMERCIAL
                              - PRO_FORMA
                              - PREFUNDING_ONLY
                            example: COMMERCIAL
                          meta:
                            type: object
                            properties:
                              available_cents:
                                type: integer
                                description: >
                                  **Only available when `method` is set to
                                  `balance`.**


                                  Available amount for this funding source (in
                                  Cents USD)
                                example: 50000
                              pending_cents:
                                type: integer
                                description: >
                                  **Only available when `method` is set to
                                  `balance`.**


                                  Funds that are already registered on your
                                  Tremendous account but which have not yet been
                                  deposited in your account (e.g. unpaid invoices)
                                  (in Cents USD).
                                example: 25000
                              accountholder_name:
                                type: string
                                description: >
                                  **Only available when `method` is set to
                                  `bank_account` or `credit_card`.**


                                  Name of the holder of the bank account or
                                  credit_card
                                example: Jane Doe
                              account_type:
                                type: string
                                description: >
                                  **Only available when `method` is set to
                                  `bank_account`.**


                                  Is this a checking or savings account
                                enum:
                                  - checking
                                  - savings
                                example: checking
                              bank_name:
                                type: string
                                description: >
                                  **Only available when `method` is set to
                                  `bank_account`.**


                                  Name of the bank
                                example: Bank of Fancyland
                                nullable: true
                              account_number_mask:
                                type: string
                                description: >
                                  **Only available when `method` is set to
                                  `bank_account`.**


                                  Last 4 digits of the account number
                                pattern: '[0-9]{4}'
                                example: '1234'
                              account_routing_mask:
                                type: string
                                description: >
                                  **Only available when `method` is set to
                                  `bank_account`.**


                                  Last 4 digits of the routing number
                                pattern: '[0-9]{4}'
                                example: '5678'
                              refundable:
                                type: boolean
                                description: >
                                  **Only available when `method` is set to
                                  `bank_account`.**


                                  Can refunds be deposited to this bank account
                                example: false
                              network:
                                type: string
                                description: >
                                  **Only available when `method` is set to
                                  `credit_card`.**


                                  Network of the credit card
                                enum:
                                  - MasterCard
                                  - Amex
                                  - JCB
                                  - Diner's Club
                                  - visa
                                  - discover
                                  - laser
                                  - elo
                                  - maestro
                                  - solo
                                example: Amex
                              last4:
                                type: string
                                description: >
                                  **Only available when `method` is set to
                                  `credit_card`.**


                                  Last 4 digits of the credit card number
                                pattern: '[0-9]{4}'
                                example: '1234'
                              expired:
                                type: boolean
                                description: >
                                  **Only available when `method` is set to
                                  `credit_card`.**


                                  Is this credit card expired
                                example: false
                              last_payment_failed_at:
                                type: string
                                format: date-time
                                nullable: true
                                description: >
                                  **Only available when `method` is set to
                                  `bank_account` or `credit_card`.**


                                  Point in time when the last order failed using
                                  this bank account or credit card as a funding
                                  source.
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /funding_sources/{id}:
      get:
        summary: Retrieve funding source
        description: |
          Retrieve a funding source, identified by the given `id` in the URL
        operationId: get-funding-source
        tags:
          - Funding sources
        parameters:
          - name: id
            in: path
            description: ID of the funding source that should be retrieved
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: Requested funding source
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - funding_source
                  properties:
                    funding_source:
                      type: object
                      description: ''
                      required:
                        - id
                        - method
                        - meta
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        method:
                          type: string
                          description: >
                            You can pay for rewards using different payment
                            methods on Tremendous:


                            <table>
                              <thead>
                                <tr>
                                  <th>Payment Method</th>
                                  <th>Description</th>
                                  </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td><code>balance</code></td>
                                  <td>Pre-funded balance in your Tremendous account to draw funds from to send rewards to recipients.</td>
                                </tr>
                                <tr>
                                  <td><code>bank_account</code></td>
                                  <td>Bank account to draw funds from to send rewards to recipients.</td>
                                </tr>
                                <tr>
                                  <td><code>credit_card</code></td>
                                  <td>Credit card to draw funds from to send rewards to recipients.</td>
                                </tr>
                                <tr>
                                  <td><code>invoice</code></td>
                                  <td>Send rewards to recipients and pay by invoice.</td>
                                </tr>

                              </tbody>
                            </table>
                          enum:
                            - balance
                            - bank_account
                            - credit_card
                            - invoice
                          example: balance
                        type:
                          type: string
                          description: |
                            **Only available when `method` is set to `invoice`.**
                          enum:
                            - COMMERCIAL
                            - PRO_FORMA
                            - PREFUNDING_ONLY
                          example: COMMERCIAL
                        meta:
                          type: object
                          properties:
                            available_cents:
                              type: integer
                              description: >
                                **Only available when `method` is set to
                                `balance`.**


                                Available amount for this funding source (in Cents
                                USD)
                              example: 50000
                            pending_cents:
                              type: integer
                              description: >
                                **Only available when `method` is set to
                                `balance`.**


                                Funds that are already registered on your
                                Tremendous account but which have not yet been
                                deposited in your account (e.g. unpaid invoices)
                                (in Cents USD).
                              example: 25000
                            accountholder_name:
                              type: string
                              description: >
                                **Only available when `method` is set to
                                `bank_account` or `credit_card`.**


                                Name of the holder of the bank account or
                                credit_card
                              example: Jane Doe
                            account_type:
                              type: string
                              description: >
                                **Only available when `method` is set to
                                `bank_account`.**


                                Is this a checking or savings account
                              enum:
                                - checking
                                - savings
                              example: checking
                            bank_name:
                              type: string
                              description: >
                                **Only available when `method` is set to
                                `bank_account`.**


                                Name of the bank
                              example: Bank of Fancyland
                              nullable: true
                            account_number_mask:
                              type: string
                              description: >
                                **Only available when `method` is set to
                                `bank_account`.**


                                Last 4 digits of the account number
                              pattern: '[0-9]{4}'
                              example: '1234'
                            account_routing_mask:
                              type: string
                              description: >
                                **Only available when `method` is set to
                                `bank_account`.**


                                Last 4 digits of the routing number
                              pattern: '[0-9]{4}'
                              example: '5678'
                            refundable:
                              type: boolean
                              description: >
                                **Only available when `method` is set to
                                `bank_account`.**


                                Can refunds be deposited to this bank account
                              example: false
                            network:
                              type: string
                              description: >
                                **Only available when `method` is set to
                                `credit_card`.**


                                Network of the credit card
                              enum:
                                - MasterCard
                                - Amex
                                - JCB
                                - Diner's Club
                                - visa
                                - discover
                                - laser
                                - elo
                                - maestro
                                - solo
                              example: Amex
                            last4:
                              type: string
                              description: >
                                **Only available when `method` is set to
                                `credit_card`.**


                                Last 4 digits of the credit card number
                              pattern: '[0-9]{4}'
                              example: '1234'
                            expired:
                              type: boolean
                              description: >
                                **Only available when `method` is set to
                                `credit_card`.**


                                Is this credit card expired
                              example: false
                            last_payment_failed_at:
                              type: string
                              format: date-time
                              nullable: true
                              description: >
                                **Only available when `method` is set to
                                `bank_account` or `credit_card`.**


                                Point in time when the last order failed using
                                this bank account or credit card as a funding
                                source.
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /invoices:
      get:
        summary: List invoices
        description: |
          Fetch a list of all invoices on your account.

          > 🚧 Deleted invoices are omitted
          >
          > The response does not include any previously deleted invoices.
        operationId: list-invoices
        tags:
          - Invoices
        parameters:
          - name: offset
            in: query
            description: >-
              Offsets the returned list by the given number of invoices. The
              returned invoices are ordered (and offsetted) by their creation date
              (DESC).
            required: false
            schema:
              type: integer
            example: 10
          - name: limit
            in: query
            description: >-
              Limits the number of invoices listed. The maximum and default value
              is 10.
            required: false
            schema:
              type: integer
            example: 10
        responses:
          '200':
            description: List of all invoices in state `PAID` or `OPEN`
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - invoices
                    - total_count
                  properties:
                    invoices:
                      type: array
                      items:
                        type: object
                        description: >
                          Invoices are instruments to fund your Tremendous
                          account's balance.


                          Invoices can be created by your organization
                          programatically.

                          Once we receive your payment, the invoice is marked as
                          `PAID` and we add

                          the respective funds to your account's balance.
                        required:
                          - id
                          - amount
                          - status
                          - created_at
                          - paid_at
                        properties:
                          id:
                            type: string
                            description: The invoice number
                            example: PPS-26873
                          po_number:
                            type: string
                            description: >-
                              Reference to the purchase order number within your
                              organization
                            nullable: true
                            example: 123-PO-EE
                          amount:
                            type: number
                            format: double
                            description: Amount of the invoice in USD
                            example: 50.35
                          status:
                            type: string
                            description: |
                              Status of this invoice

                              <table>
                                <thead>
                                  <tr>
                                    <th>Status</th>
                                    <th>Description</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <tr>
                                    <td><code>DELETED</code></td>
                                    <td>Invoice has been deleted by your organization</td>
                                  </tr>
                                  <tr>
                                    <td><code>PAID</code></td>
                                    <td>Invoice has been paid by your organization</td>
                                  </tr>
                                  <tr>
                                    <td><code>OPEN</code></td>
                                    <td>Invoice has been created by your organization but has not been paid, yet</td>
                                  </tr>
                                </tbody>
                              </table>
                            enum:
                              - DELETED
                              - PAID
                              - OPEN
                              - MARKED_AS_PAID
                            example: PAID
                          orders:
                            type: array
                            description: >-
                              List of orders related to the invoice (it doesn't
                              apply to prefunding)
                            items:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                            example:
                              - ABC123456789
                              - DEF123456789
                          rewards:
                            type: array
                            description: >-
                              List of rewards related to the invoice (it doesn't
                              apply to prefunding)
                            items:
                              type: string
                              pattern: '[A-Z0-9]{4,20}'
                              example: SOMEIDSOMEID
                            example:
                              - ABC123456789
                              - DEF123456789
                          created_at:
                            type: string
                            format: date
                            description: |
                              Timestamp of when the invoice has been created.
                          paid_at:
                            type: string
                            format: date
                            nullable: true
                            description: |
                              Timestamp of when the invoice has been paid.
                    total_count:
                      type: integer
                      description: The total number of invoices across all pages
                      example: 1
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
      post:
        summary: Create invoice
        description: >+
          Creating an invoice is the way for your organization to fund your
          account's balance.


          1. Create an invoice

          2. Pay the invoice

          3. Funds get added to your account's balance


          ## Request body


          <div class="object-schema-request-schema">
            <table>
            <thead>
              <tr>
                <th>Property</th>
                <th>Type</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody class="object-schema-table-body">
              <tr class=""><td><div class="property-name">
            <code class="property-name">po_number</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>Reference
          to the purchase order number within your organization</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">amount</code>
          </div>

          </td><td><span class="property-type">number</span> <span
          class="property-format">double</span></td><td><p>Amount of the invoice
          in USD</p>

          </td></tr>

          <tr class=""><td><div class="property-name">
            <code class="property-name">memo</code>
          </div>

          </td><td><span class="property-type">string</span></td><td><p>A note to
          be included in the invoice. This is for your internal use and will not
          be visible to the recipient.</p>

          </td></tr>
            </tbody>
          </table>


          </div>

        operationId: create-invoice
        tags:
          - Invoices
        requestBody:
          required: true
          description: Invoice details
          content:
            application/json:
              schema:
                type: object
                properties:
                  po_number:
                    type: string
                    description: >-
                      Reference to the purchase order number within your
                      organization
                    nullable: true
                    example: 123-PO-EE
                  amount:
                    type: number
                    format: double
                    description: Amount of the invoice in USD
                    example: 50.35
                  memo:
                    type: string
                    nullable: true
                    description: >
                      A note to be included in the invoice. This is for your
                      internal use and will not be visible to the recipient.
                required:
                  - amount
        responses:
          '200':
            description: An invoice (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - invoice
                  properties:
                    invoice:
                      type: object
                      description: >
                        Invoices are instruments to fund your Tremendous account's
                        balance.


                        Invoices can be created by your organization
                        programatically.

                        Once we receive your payment, the invoice is marked as
                        `PAID` and we add

                        the respective funds to your account's balance.
                      required:
                        - id
                        - amount
                        - status
                        - created_at
                        - paid_at
                      properties:
                        id:
                          type: string
                          description: The invoice number
                          example: PPS-26873
                        po_number:
                          type: string
                          description: >-
                            Reference to the purchase order number within your
                            organization
                          nullable: true
                          example: 123-PO-EE
                        amount:
                          type: number
                          format: double
                          description: Amount of the invoice in USD
                          example: 50.35
                        status:
                          type: string
                          description: |
                            Status of this invoice

                            <table>
                              <thead>
                                <tr>
                                  <th>Status</th>
                                  <th>Description</th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td><code>DELETED</code></td>
                                  <td>Invoice has been deleted by your organization</td>
                                </tr>
                                <tr>
                                  <td><code>PAID</code></td>
                                  <td>Invoice has been paid by your organization</td>
                                </tr>
                                <tr>
                                  <td><code>OPEN</code></td>
                                  <td>Invoice has been created by your organization but has not been paid, yet</td>
                                </tr>
                              </tbody>
                            </table>
                          enum:
                            - DELETED
                            - PAID
                            - OPEN
                            - MARKED_AS_PAID
                          example: PAID
                        orders:
                          type: array
                          description: >-
                            List of orders related to the invoice (it doesn't
                            apply to prefunding)
                          items:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          example:
                            - ABC123456789
                            - DEF123456789
                        rewards:
                          type: array
                          description: >-
                            List of rewards related to the invoice (it doesn't
                            apply to prefunding)
                          items:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          example:
                            - ABC123456789
                            - DEF123456789
                        created_at:
                          type: string
                          format: date
                          description: |
                            Timestamp of when the invoice has been created.
                        paid_at:
                          type: string
                          format: date
                          nullable: true
                          description: |
                            Timestamp of when the invoice has been paid.
          '400':
            description: The invoice couldn't be created
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /invoices/{id}:
      get:
        summary: Retrieve invoice
        description: |
          Retrieve an invoice, identified by the given `id` in the URL

          > 📘 Deleted Invoices
          >
          > This endpoint can be used to retrieve details on deleted invoices
          > that the list of invoices omits.
        operationId: get-invoice
        tags:
          - Invoices
        parameters:
          - name: id
            in: path
            description: ID of the invoice that should be retrieved
            required: true
            schema:
              type: string
              description: The invoice number
              example: PPS-26873
        responses:
          '200':
            description: An invoice (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - invoice
                  properties:
                    invoice:
                      type: object
                      description: >
                        Invoices are instruments to fund your Tremendous account's
                        balance.


                        Invoices can be created by your organization
                        programatically.

                        Once we receive your payment, the invoice is marked as
                        `PAID` and we add

                        the respective funds to your account's balance.
                      required:
                        - id
                        - amount
                        - status
                        - created_at
                        - paid_at
                      properties:
                        id:
                          type: string
                          description: The invoice number
                          example: PPS-26873
                        po_number:
                          type: string
                          description: >-
                            Reference to the purchase order number within your
                            organization
                          nullable: true
                          example: 123-PO-EE
                        amount:
                          type: number
                          format: double
                          description: Amount of the invoice in USD
                          example: 50.35
                        status:
                          type: string
                          description: |
                            Status of this invoice

                            <table>
                              <thead>
                                <tr>
                                  <th>Status</th>
                                  <th>Description</th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td><code>DELETED</code></td>
                                  <td>Invoice has been deleted by your organization</td>
                                </tr>
                                <tr>
                                  <td><code>PAID</code></td>
                                  <td>Invoice has been paid by your organization</td>
                                </tr>
                                <tr>
                                  <td><code>OPEN</code></td>
                                  <td>Invoice has been created by your organization but has not been paid, yet</td>
                                </tr>
                              </tbody>
                            </table>
                          enum:
                            - DELETED
                            - PAID
                            - OPEN
                            - MARKED_AS_PAID
                          example: PAID
                        orders:
                          type: array
                          description: >-
                            List of orders related to the invoice (it doesn't
                            apply to prefunding)
                          items:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          example:
                            - ABC123456789
                            - DEF123456789
                        rewards:
                          type: array
                          description: >-
                            List of rewards related to the invoice (it doesn't
                            apply to prefunding)
                          items:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          example:
                            - ABC123456789
                            - DEF123456789
                        created_at:
                          type: string
                          format: date
                          description: |
                            Timestamp of when the invoice has been created.
                        paid_at:
                          type: string
                          format: date
                          nullable: true
                          description: |
                            Timestamp of when the invoice has been paid.
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
      delete:
        summary: Delete invoice
        description: >
          Removes an invoice. This has no further consequences but is a rather
          cosmetic operation.
        operationId: delete-invoices
        tags:
          - Invoices
        parameters:
          - name: id
            in: path
            description: ID of the invoice that should be retrieved
            required: true
            schema:
              type: string
              description: The invoice number
              example: PPS-26873
        responses:
          '200':
            description: An invoice (to be overwritten in specific reponses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - invoice
                  properties:
                    invoice:
                      type: object
                      description: >
                        Invoices are instruments to fund your Tremendous account's
                        balance.


                        Invoices can be created by your organization
                        programatically.

                        Once we receive your payment, the invoice is marked as
                        `PAID` and we add

                        the respective funds to your account's balance.
                      required:
                        - id
                        - amount
                        - status
                        - created_at
                        - paid_at
                      properties:
                        id:
                          type: string
                          description: The invoice number
                          example: PPS-26873
                        po_number:
                          type: string
                          description: >-
                            Reference to the purchase order number within your
                            organization
                          nullable: true
                          example: 123-PO-EE
                        amount:
                          type: number
                          format: double
                          description: Amount of the invoice in USD
                          example: 50.35
                        status:
                          type: string
                          description: |
                            Status of this invoice

                            <table>
                              <thead>
                                <tr>
                                  <th>Status</th>
                                  <th>Description</th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td><code>DELETED</code></td>
                                  <td>Invoice has been deleted by your organization</td>
                                </tr>
                                <tr>
                                  <td><code>PAID</code></td>
                                  <td>Invoice has been paid by your organization</td>
                                </tr>
                                <tr>
                                  <td><code>OPEN</code></td>
                                  <td>Invoice has been created by your organization but has not been paid, yet</td>
                                </tr>
                              </tbody>
                            </table>
                          enum:
                            - DELETED
                            - PAID
                            - OPEN
                            - MARKED_AS_PAID
                          example: PAID
                        orders:
                          type: array
                          description: >-
                            List of orders related to the invoice (it doesn't
                            apply to prefunding)
                          items:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          example:
                            - ABC123456789
                            - DEF123456789
                        rewards:
                          type: array
                          description: >-
                            List of rewards related to the invoice (it doesn't
                            apply to prefunding)
                          items:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          example:
                            - ABC123456789
                            - DEF123456789
                        created_at:
                          type: string
                          format: date
                          description: |
                            Timestamp of when the invoice has been created.
                        paid_at:
                          type: string
                          format: date
                          nullable: true
                          description: |
                            Timestamp of when the invoice has been paid.
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /invoices/{id}/pdf:
      get:
        summary: Retrieve invoice as PDF
        description: |
          Generates a PDF version for an invoice
        operationId: download-invoice-pdf
        tags:
          - Invoices
        parameters:
          - name: id
            in: path
            description: ID of the Invoice for that the PDF should be generated
            required: true
            schema:
              type: string
              description: The invoice number
              example: PPS-26873
        responses:
          '200':
            description: PDF for the specified Invoice
            headers:
              Content-Disposition:
                schema:
                  type: string
                  example: attachment; filename="Tremendous_Invoice_ABC-12345.pdf"
            content:
              application/pdf:
                schema:
                  description: The PDF binary data
                  type: string
                  format: binary
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /invoices/{id}/csv:
      get:
        summary: Retrieve invoice as CSV
        description: >
          Generates a CSV version for an invoice listing the associated rewards
          and orders
        operationId: download-invoice-csv
        tags:
          - Invoices
        parameters:
          - name: id
            in: path
            description: ID of the Invoice for that the CSV should be generated
            required: true
            schema:
              type: string
              description: The invoice number
              example: PPS-26873
        responses:
          '200':
            description: CSV for the specified Invoice
            headers:
              Content-Disposition:
                schema:
                  type: string
                  example: attachment; filename="Invoice_ABC-12345_gift_details.csv"
            content:
              text/csv:
                schema:
                  description: The CSV text file
                  type: string
                  format: text
          '400':
            description: >-
              The invoice can't be exported to CSV because it isn't associated
              with any rewards
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /balance_transactions:
      get:
        summary: List balance transactions
        description: |
          Fetch a list of all balance transactions on your account.
        operationId: list-balance-transactions
        tags:
          - Balance transactions
        parameters:
          - name: offset
            in: query
            description: >-
              Offsets the returned list by the given number of transactions. The
              returned transactions are ordered (and offsetted) by their creation
              date (DESC).
            required: false
            schema:
              type: integer
            example: 10
          - name: limit
            in: query
            description: Limits the number of transactions listed. The default value is 10.
            required: false
            schema:
              type: integer
            example: 10
          - name: created_at[gte]
            in: query
            description: >-
              Only return results where the created_at field is greater than or
              equal to the supplied value. The string needs to be an ISO 8601
              datetime.
            required: false
            schema:
              type: string
            example: '2023-07-15T18:00:00Z'
          - name: created_at[lte]
            in: query
            description: >-
              Only return results where the created_at field is less than or equal
              to the supplied value. The string needs to be an ISO 8601 datetime.
            required: false
            schema:
              type: string
            example: '2023-08-01T18:00:00Z'
        responses:
          '200':
            description: List of all transactions on this account
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    invoices:
                      type: array
                      items:
                        type: object
                        description: >
                          A balance transaction represents a specific movement or
                          change in an account's balance.
                        properties:
                          created_at:
                            type: string
                            format: date
                            description: Date that the transaction was created
                          amount:
                            type: number
                            format: double
                            description: Amount of the transaction in USD
                            example: 50.35
                          balance:
                            type: number
                            format: double
                            description: >-
                              The updated total after the transaction. Note that
                              this running balance may be delayed and contain
                              `null`.
                            example: 92.48
                          action:
                            type: string
                            description: The action that was performed
                            example: Deposit
                          description:
                            type: string
                            description: A brief description of the transaction
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '422':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /organizations:
      get:
        summary: List organizations
        description: >
          The returned list only includes the organization to which the API key
          belongs to, that is used for the request.
        operationId: list-organizations
        tags:
          - Organizations
        responses:
          '200':
            description: List of all organizations
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    organizations:
                      type: array
                      items:
                        type: object
                        description: >
                          Organizations are a way to separate different parts of
                          your business within the same Tremendous account.

                          Your root Tremendous account is an organization itself
                          and can have multiple sub-organizations.


                          You can assign users in your Tremendous team as members
                          to any organization. Users can be members of multiple

                          organizations at once.


                          Each organizations can have it's own API key.
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          name:
                            type: string
                            description: Name of the organization
                            example: ACME Inc.
                          website:
                            type: string
                            format: uri
                            description: URL of the website of that organization
                            example: https://www.example.com/some-org
                          status:
                            type: string
                            enum:
                              - PENDING
                              - APPROVED
                              - REJECTED
                            description: >-
                              Status of the organization. Organizations need to be
                              approved to be able to use them to send out rewards.
                            example: APPROVED
                          created_at:
                            type: string
                            format: date
                            description: >
                              Timestamp of when the organization has been created.


                              *This field is only returned when creating an
                              organization.* It is not returned anymore when
                              retrieving or listing organizations.
                            example: '2021-08-02'
                        required:
                          - name
                          - website
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
      post:
        summary: Create organization
        description: >
          Organizations are a way to separate different parts of your business
          within the same Tremendous account.


          You can assign users in your Tremendous team as members to any
          organization. Users can be members of multiple organizations at once.


          API keys belong to a single organization. The API key used in a request
          determines on behalf of which organization the request is carried out.


          **Important note:** When creating an organization, you are required to
          either pass `with_api_key` or `copy_settings[user]` in the request body
          as `true`. This ensures that your new Organization can either be
          accessed via the API or the Dashboard.
        operationId: create-organization
        tags:
          - Organizations
        requestBody:
          required: true
          description: Organization details
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the organization
                    example: ACME Inc.
                  website:
                    type: string
                    format: uri
                    description: URL of the website of that organization
                    example: https://www.example.com/some-org
                  with_api_key:
                    type: boolean
                    description: >-
                      Default value is `false`. Set to true to also generate an
                      API key associated to the new organization.
                    example: true
                  copy_settings:
                    type: object
                    description: >-
                      A list of the settings that you wish to copy over to the new
                      organization.
                    properties:
                      campaigns:
                        type: boolean
                        description: >-
                          Copy over the campaigns from the current organization to
                          the new organization. Defaults to `false`.
                        default: false
                        example: false
                      custom_fields:
                        type: boolean
                        description: >-
                          Copy over the custom fields from the current
                          organization to the new organization. Defaults to
                          `false`.
                        default: false
                        example: false
                      order_approvals:
                        type: boolean
                        description: >-
                          Copy over the order approvals settings from the current
                          organization to the new organization. Defaults to
                          `false`.
                        default: false
                        example: false
                      payment_methods:
                        type: boolean
                        description: >-
                          Copy over the payment methods from the current
                          organization to the new organization. Defaults to
                          `false`.
                        default: false
                        example: false
                      security_settings:
                        type: boolean
                        description: >-
                          Copy over the security settings from the current
                          organization to the new organization. Defaults to
                          `true`.
                        default: true
                        example: true
                      users:
                        type: boolean
                        description: >-
                          Copy over the users from the current organization to the
                          new organization. Defaults to `false`.
                        default: false
                        example: false
                      fraud_prevention:
                        type: boolean
                        description: >-
                          Copy over the fraud prevention settings and rules from
                          the current organization to the new organization.
                          Defaults to `false`.
                        default: false
                        example: false
                  phone:
                    type: string
                    description: >-
                      Phone number of the organization. For non-US phone numbers,
                      specify the country code (prefixed with +).
                    example: 123-456-7890
                required:
                  - name
                  - website
        responses:
          '200':
            description: The created organization
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    organization:
                      type: object
                      description: >
                        Organizations are a way to separate different parts of
                        your business within the same Tremendous account.

                        Your root Tremendous account is an organization itself and
                        can have multiple sub-organizations.


                        You can assign users in your Tremendous team as members to
                        any organization. Users can be members of multiple

                        organizations at once.


                        Each organizations can have it's own API key.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        name:
                          type: string
                          description: Name of the organization
                          example: ACME Inc.
                        website:
                          type: string
                          format: uri
                          description: URL of the website of that organization
                          example: https://www.example.com/some-org
                        status:
                          type: string
                          enum:
                            - PENDING
                            - APPROVED
                            - REJECTED
                          description: >-
                            Status of the organization. Organizations need to be
                            approved to be able to use them to send out rewards.
                          example: APPROVED
                        created_at:
                          type: string
                          format: date
                          description: >
                            Timestamp of when the organization has been created.


                            *This field is only returned when creating an
                            organization.* It is not returned anymore when
                            retrieving or listing organizations.
                          example: '2021-08-02'
                        api_key:
                          type: string
                          description: >
                            The API key for the created organization.

                            This property is only returned when `with_api_key` is
                            set to `true`.
                      required:
                        - name
                        - website
          '400':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /organizations/{id}:
      get:
        summary: Retrieve organization
        operationId: get-organization
        tags:
          - Organizations
        parameters:
          - name: id
            in: path
            description: ID of the organization to retrieve
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: An organization (to be overwritten in specific responses)
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    organization:
                      type: object
                      description: >
                        Organizations are a way to separate different parts of
                        your business within the same Tremendous account.

                        Your root Tremendous account is an organization itself and
                        can have multiple sub-organizations.


                        You can assign users in your Tremendous team as members to
                        any organization. Users can be members of multiple

                        organizations at once.


                        Each organizations can have it's own API key.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        name:
                          type: string
                          description: Name of the organization
                          example: ACME Inc.
                        website:
                          type: string
                          format: uri
                          description: URL of the website of that organization
                          example: https://www.example.com/some-org
                        status:
                          type: string
                          enum:
                            - PENDING
                            - APPROVED
                            - REJECTED
                          description: >-
                            Status of the organization. Organizations need to be
                            approved to be able to use them to send out rewards.
                          example: APPROVED
                        created_at:
                          type: string
                          format: date
                          description: >
                            Timestamp of when the organization has been created.


                            *This field is only returned when creating an
                            organization.* It is not returned anymore when
                            retrieving or listing organizations.
                          example: '2021-08-02'
                      required:
                        - name
                        - website
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /organizations/create_api_key:
      post:
        summary: Create API key
        description: >
          Creates a new API key. The API key used to make the request will remain
          active.


          Created API keys are generated randomly and returned in the response.
          **You cannot retrieve them again.**
        operationId: create-api-key
        tags:
          - Organizations
        responses:
          '200':
            description: The created API key
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    api_key:
                      type: string
                      description: The new API key
                      example: >-
                        TEST_02feed72c2f6ab8dadc7f6156d1106828aabf81e5c4d38ea94d62817717ea261
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /members:
      get:
        operationId: list-members
        summary: List members
        description: >
          To list members of a sub-organization [create an API key for that
          organization](https://developers.tremendous.com/) first,
          then use the new API key in the list members request.
        tags:
          - Members
        responses:
          '200':
            description: List of all members
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - members
                  properties:
                    members:
                      type: array
                      items:
                        type: object
                        description: >
                          Each organization has one or more users that can access
                          and manage that organization. These users are called
                          members.


                          Members can take actions via the Tremendous web
                          dashboard directly.


                          These actions include adding funding sources to the
                          organization, creating Campaigns, and more.
                        required:
                          - id
                          - name
                          - email
                          - role
                          - status
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          email:
                            type: string
                            description: Email address of the member
                            format: email
                            example: jane@example.com
                          name:
                            type: string
                            description: Full name of the member
                            example: Jane Doe
                            nullable: true
                          role:
                            type: string
                            enum:
                              - MEMBER
                              - ADMIN
                              - DELETED
                            description: |
                              Role of the member within the organization.

                              <table>
                                <thead>
                                  <tr>
                                    <th>Role</th>
                                    <th>Description</th>
                                  </tr>
                                </thead>
                                  <tr>
                                    <td><code>MEMBER</code></td>
                                    <td>Limited permissions. Can view their own reward and order histories only.</td>
                                  </tr>
                                  <tr>
                                    <td><code>ADMIN</code></td>
                                    <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                                  </tr>
                                  <tr>
                                    <td><code>DELETED</code></td>
                                    <td>No longer a member of this organization.</td>
                                  </tr>
                                <tbody>
                                </tbody>
                              </table>
                          status:
                            type: string
                            description: >
                              Current status of the member's account.


                              When creating a member it starts out in the status
                              `INVITED`. As soon as that member open the
                              invitation link and registers an account, the status
                              switches to `REGISTERED`.
                            enum:
                              - REGISTERED
                              - INVITED
                            example: INVITED
                          created_at:
                            type: string
                            format: date-time
                            description: >
                              Timestamp when this member was created.


                              The `created_at` timestamp is **NOT** returned when
                              retrieving a member (but is part of the response
                              when listing or creating members).
                            example: '2021-08-02T11:05:59Z'
                          last_login_at:
                            type: string
                            format: date-time
                            description: >
                              Timestamp when this member most recently logged into
                              the dashboard of the organization associated with
                              this API key.
                            example: '2021-08-02T11:05:59Z'
                            nullable: true
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
      post:
        summary: Create member
        operationId: create-member
        description: >
          Each organization has one or more users that can access and manage that
          organization. These users are called members.


          Members can take actions via the Tremendous web dashboard directly.
          These actions include adding funding sources to the organization,
          creating Campaigns, and more.


          ### Permissions


          Members can have one of two roles that determine their permissions
          within the organization:


          1. `MEMBER`: Limited permissions. Can view their own reward and order
          histories only.

          2. `ADMIN`: Update organization settings, invite other members to the
          organization, and view all member order and reward histories within
          their organization.


          To create members of a sub-organizations [create an API key for that
          organization](https://developers.tremendous.com/) first,
          then use the new API key in the create member request.


          ### Inviting new members


          After creating a member, an automatic invite is sent to the email
          address. If the user is not registered yet, that person will then need
          to sign up for a Tremendous account.


          > ❗️ Automatic invitations are not available in the sandbox

          >

          > You must manually use the returned `invite_url` field in the payload
          instead.
        tags:
          - Members
        requestBody:
          required: true
          description: Member details
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: Email address of the member
                    format: email
                    example: jane@example.com
                  name:
                    type: string
                    description: Full name of the member
                    example: Jane Doe
                  role:
                    type: string
                    enum:
                      - MEMBER
                      - ADMIN
                    description: |
                      Role of the member within the organization.

                      <table>
                        <thead>
                          <tr>
                            <th>Role</th>
                            <th>Description</th>
                          </tr>
                        </thead>
                          <tr>
                            <td><code>MEMBER</code></td>
                            <td>Limited permissions. Can view their own reward and order histories only.</td>
                          </tr>
                          <tr>
                            <td><code>ADMIN</code></td>
                            <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                          </tr>
                        <tbody>
                      </table>
                    example: MEMBER
                required:
                  - email
                  - name
                  - role
        responses:
          '200':
            description: A member (to be overwritten in specific responses)
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - member
                  properties:
                    member:
                      type: object
                      description: >
                        Each organization has one or more users that can access
                        and manage that organization. These users are called
                        members.


                        Members can take actions via the Tremendous web dashboard
                        directly.


                        These actions include adding funding sources to the
                        organization, creating Campaigns, and more.
                      required:
                        - id
                        - name
                        - email
                        - role
                        - status
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        email:
                          type: string
                          description: Email address of the member
                          format: email
                          example: jane@example.com
                        name:
                          type: string
                          description: Full name of the member
                          example: Jane Doe
                          nullable: true
                        role:
                          type: string
                          enum:
                            - MEMBER
                            - ADMIN
                            - DELETED
                          description: |
                            Role of the member within the organization.

                            <table>
                              <thead>
                                <tr>
                                  <th>Role</th>
                                  <th>Description</th>
                                </tr>
                              </thead>
                                <tr>
                                  <td><code>MEMBER</code></td>
                                  <td>Limited permissions. Can view their own reward and order histories only.</td>
                                </tr>
                                <tr>
                                  <td><code>ADMIN</code></td>
                                  <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                                </tr>
                                <tr>
                                  <td><code>DELETED</code></td>
                                  <td>No longer a member of this organization.</td>
                                </tr>
                              <tbody>
                              </tbody>
                            </table>
                        status:
                          type: string
                          description: >
                            Current status of the member's account.


                            When creating a member it starts out in the status
                            `INVITED`. As soon as that member open the invitation
                            link and registers an account, the status switches to
                            `REGISTERED`.
                          enum:
                            - REGISTERED
                            - INVITED
                          example: INVITED
                        created_at:
                          type: string
                          format: date-time
                          description: >
                            Timestamp when this member was created.


                            The `created_at` timestamp is **NOT** returned when
                            retrieving a member (but is part of the response when
                            listing or creating members).
                          example: '2021-08-02T11:05:59Z'
                        last_login_at:
                          type: string
                          format: date-time
                          description: >
                            Timestamp when this member most recently logged into
                            the dashboard of the organization associated with this
                            API key.
                          example: '2021-08-02T11:05:59Z'
                          nullable: true
          '400':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /members/{id}:
      get:
        summary: Retrieve member
        operationId: get-member
        tags:
          - Members
        parameters:
          - name: id
            in: path
            description: ID of the member to retrieve
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: Details on the retrieved member
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - member
                  properties:
                    member:
                      type: object
                      description: >
                        Each organization has one or more users that can access
                        and manage that organization. These users are called
                        members.


                        Members can take actions via the Tremendous web dashboard
                        directly.


                        These actions include adding funding sources to the
                        organization, creating Campaigns, and more.
                      required:
                        - id
                        - name
                        - email
                        - role
                        - status
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        email:
                          type: string
                          description: Email address of the member
                          format: email
                          example: jane@example.com
                        name:
                          type: string
                          description: Full name of the member
                          example: Jane Doe
                          nullable: true
                        role:
                          type: string
                          enum:
                            - MEMBER
                            - ADMIN
                            - DELETED
                          description: |
                            Role of the member within the organization.

                            <table>
                              <thead>
                                <tr>
                                  <th>Role</th>
                                  <th>Description</th>
                                </tr>
                              </thead>
                                <tr>
                                  <td><code>MEMBER</code></td>
                                  <td>Limited permissions. Can view their own reward and order histories only.</td>
                                </tr>
                                <tr>
                                  <td><code>ADMIN</code></td>
                                  <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                                </tr>
                                <tr>
                                  <td><code>DELETED</code></td>
                                  <td>No longer a member of this organization.</td>
                                </tr>
                              <tbody>
                              </tbody>
                            </table>
                        status:
                          type: string
                          description: >
                            Current status of the member's account.


                            When creating a member it starts out in the status
                            `INVITED`. As soon as that member open the invitation
                            link and registers an account, the status switches to
                            `REGISTERED`.
                          enum:
                            - REGISTERED
                            - INVITED
                          example: INVITED
                        events:
                          type: array
                          description: List of events related to the member.
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                description: Event type
                                enum:
                                  - created
                                  - last_login
                                example: created
                              date_utc:
                                type: string
                                format: date-time
                                description: Timestamp when the event happened
                                example: '2021-08-02T11:05:59Z'
                                nullable: true
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /fields:
      get:
        summary: List fields
        operationId: list-fields
        description: >
          For reporting and analytics purposes, custom fields can be associated
          with rewards generated through the API. Custom fields must be first
          added by members of your admin team through the Tremendous Dashboard.
        tags:
          - Fields
        responses:
          '200':
            description: List of all fields
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    fields:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          label:
                            type: string
                            description: Label of the field
                            example: recipient_name
                          data_type:
                            type: string
                            description: Type of the values of the field
                            example: Text
                          data:
                            type: object
                            additionalProperties: true
                          required:
                            type: boolean
                            description: Is this field required (true) or optional (false)
                            example: true
                          scope:
                            type: string
                            description: Type of objects this field gets associated with
                            example: REWARD
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /webhooks:
      get:
        summary: List webhooks
        operationId: list-webhooks
        tags:
          - Webhooks
        description: >
          Every organization can only have one webhook. This endpoint shows the
          details about that webhook.


          > 📘 Learn more about Webhooks

          >

          > Our guide explains everything you need to know about the Tremendous
          webhooks:

          > [Read it here](https://developers.tremendous.com/)
        responses:
          '200':
            description: List of configured webhooks (never more than 1 webhook)
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    webhooks:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                          url:
                            type: string
                            format: uri
                            description: URL the webhook will make requests to
                            example: https://example.com/webhook
                            nullable: true
                          private_key:
                            type: string
                            description: Private key for the webhook
                            example: jXjdU8dozx571TG6YzL4
                        required:
                          - url
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
      post:
        summary: Create webhook
        operationId: create-webhook
        tags:
          - Webhooks
        description: >+
          Tremendous uses webhooks as a notification system for various events
          that happen in your account.


          > 📘 Learn more about Webhooks

          >

          > Our guide explains everything you need to know about the Tremendous
          webhooks:

          > [Read it here](https://developers.tremendous.com/)


          Every organization can define a single webhook endpoint where we send
          requests to, whenever an event happens.


          This endpoint allows you to setup that endpoint. The URL of the endpoint
          can be changed by making a request to this endpoint again with the new
          URL.


          ## Request body


          <div class="object-schema-request-schema">
            <table>
            <thead>
              <tr>
                <th>Property</th>
                <th>Type</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody class="object-schema-table-body">
              <tr class=""><td><div class="property-name">
            <code class="property-name">url</code>
          </div>

          </td><td><span class="property-type">string</span> <span
          class="property-format">uri</span></td><td><p>URL the webhook will make
          requests to</p>

          </td></tr>
            </tbody>
          </table>


          </div>

        requestBody:
          required: true
          description: Webhook details
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                    description: URL the webhook will make requests to
                    example: https://example.com/webhook
                required:
                  - url
        responses:
          '200':
            description: A webhook (to be overwritten in specific responses)
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    webhook:
                      type: object
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        url:
                          type: string
                          format: uri
                          description: URL the webhook will make requests to
                          example: https://example.com/webhook
                          nullable: true
                        private_key:
                          type: string
                          description: Private key for the webhook
                          example: jXjdU8dozx571TG6YzL4
                      required:
                        - url
          '400':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /webhooks/{id}:
      get:
        summary: Retrieve webhook
        operationId: get-webhook
        tags:
          - Webhooks
        description: >
          > 📘 Learn more about Webhooks

          >

          > Our guide explains everything you need to know about the Tremendous
          webhooks:

          > [Read it here](https://developers.tremendous.com/)
        parameters:
          - name: id
            in: path
            description: ID of the webhook to retrieve
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: A webhook (to be overwritten in specific responses)
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    webhook:
                      type: object
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                        url:
                          type: string
                          format: uri
                          description: URL the webhook will make requests to
                          example: https://example.com/webhook
                          nullable: true
                        private_key:
                          type: string
                          description: Private key for the webhook
                          example: jXjdU8dozx571TG6YzL4
                      required:
                        - url
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /webhooks/{id}/simulate:
      post:
        summary: Test webhook
        operationId: simulate-webhook
        tags:
          - Webhooks
        description: >
          Making a request to this endpoint will cause our system to trigger a
          webhook for the specified event. This can be very useful when testing
          the setup that processes webhooks on your end.


          > 📘 Learn more about Webhooks

          >

          > Our guide explains everything you need to know about the Tremendous
          webhooks:

          > [Read it here](https://developers.tremendous.com/)
        parameters:
          - name: id
            in: path
            description: ID of the webhook to test
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        requestBody:
          required: true
          description: Webhook details
          content:
            application/json:
              schema:
                type: object
                properties:
                  event:
                    type: string
                    description: >-
                      The event to test. See the [List events endpoint
                      reference](https://developers.tremendous.com/) for all
                      available events.
                    example: INVOICES.PAID
                required:
                  - event
        responses:
          '200':
            description: Webhook simulation triggered successfully
            content:
              text/html:
                schema:
                  description: Empty body
                  type: string
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '422':
            description: Validation error of the sent parameters or request body
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: 'Order failed: validation failure'
                      payload:
                        some_field:
                          some_sub_field: Something went wrong with this parameter
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
    /webhooks/{id}/events:
      get:
        summary: List events
        operationId: list-webhook-events
        tags:
          - Webhooks
        description: >
          Lists all event types that can be sent to the configured webhook
          endpoint.


          > 📘 Learn more about Webhooks

          >

          > Our guide explains everything you need to know about the Tremendous
          webhooks:

          > [Read it here](https://developers.tremendous.com/)
        parameters:
          - name: id
            in: path
            description: ID of the webhook to list the events for
            required: true
            schema:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
        responses:
          '200':
            description: List of all possible event types
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    events:
                      type: array
                      items:
                        type: string
                        example: CAMPAIGNS.CREATED
                example:
                  events:
                    - CAMPAIGNS.CREATED
                    - CAMPAIGNS.DELETED
                    - PRODUCTS.ADDED
                    - PRODUCTS.REMOVED
                    - FUNDING_SOURCES.CREATED
                    - FUNDING_SOURCES.DELETED
                    - FUNDING_SOURCES.FUNDED
                    - INVOICES.CREATED
                    - INVOICES.DELETED
                    - INVOICES.PAID
                    - ORGANIZATIONS.CREATED
                    - MEMBERS.CREATED
                    - MEMBERS.DELETED
                    - REWARDS.CANCELED
                    - REWARDS.DELIVERY.SUCCEEDED
                    - REWARDS.DELIVERY.FAILED
                    - ORDERS.CREATED
                    - ORDERS.APPROVED
                    - ORDERS.CANCELED
                    - ORDERS.FAILED
          '401':
            description: Authorization error e.g. due to an invalid or missing API key.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Production Access not available for your account
                    payload: {}
          '404':
            description: No resource could be found for the provided ID
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
          '429':
            description: >-
              Rate limit exceeded, this request was not processed. Future requests
              may not be processed, until your account drops below the rate limit
              threshold, again.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                  example:
                    errors:
                      message: Too many requests
                      payload: {}
          '500':
            description: >-
              The server encountered an unexpected error or couldn't fulfill the
              request in time.
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - errors
                  properties:
                    errors:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                        payload:
                          type: object
                          description: >-
                            Mirrors the request parameters structure, filled only
                            with the (nested) properties that caused an error.
                          example:
                            rewards:
                              catalog: At least one valid product required
                example:
                  errors:
                    message: Something went wrong. We have been notified
  components:
    securitySchemes:
      BearerApiKey:
        type: http
        scheme: bearer
    responses:
      '422':
        description: Request lacks one of the required parameters
        content:
          application/json:
            schema:
              properties:
                error:
                  type: string
                  description: Error message
      ErrorAuthorizationFailed:
        description: Authorization error e.g. due to an invalid or missing API key.
        content:
          application/json:
            schema:
              type: object
              required:
                - errors
              properties:
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error message
                    payload:
                      type: object
                      description: >-
                        Mirrors the request parameters structure, filled only with
                        the (nested) properties that caused an error.
                      example:
                        rewards:
                          catalog: At least one valid product required
            example:
              errors:
                message: Production Access not available for your account
                payload: {}
      ErrorRateLimited:
        description: >-
          Rate limit exceeded, this request was not processed. Future requests may
          not be processed, until your account drops below the rate limit
          threshold, again.
        content:
          application/json:
            schema:
              type: object
              required:
                - errors
              properties:
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error message
                    payload:
                      type: object
                      description: >-
                        Mirrors the request parameters structure, filled only with
                        the (nested) properties that caused an error.
                      example:
                        rewards:
                          catalog: At least one valid product required
              example:
                errors:
                  message: Too many requests
                  payload: {}
      RewardResponse:
        description: A reward (to be overwritten in specific reponses)
        content:
          application/json:
            schema:
              type: object
              required:
                - reward
              properties:
                reward:
                  type: object
                  description: >
                    A single reward, sent to a recipient. A reward is always part
                    of an order.


                    Either `products` or `campaign_id` must be specified.
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      description: Tremendous ID of the reward
                    order_id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      description: Tremendous ID of the order this reward is part of.
                    created_at:
                      type: string
                      format: date-time
                      description: Date the reward was created
                    value:
                      type: object
                      properties:
                        denomination:
                          type: number
                          format: double
                          description: Amount of the reward
                        currency_code:
                          type: string
                          enum:
                            - USD
                            - CAD
                            - EUR
                            - AED
                            - AFN
                            - ALL
                            - AMD
                            - ARS
                            - AUD
                            - AZN
                            - BAM
                            - BDT
                            - BGN
                            - BHD
                            - BIF
                            - BND
                            - BOB
                            - BRL
                            - BWP
                            - BYR
                            - BZD
                            - CDF
                            - CHF
                            - CLP
                            - CNY
                            - COP
                            - CRC
                            - CVE
                            - CZK
                            - DJF
                            - DKK
                            - DOP
                            - DZD
                            - EEK
                            - EGP
                            - ERN
                            - ETB
                            - GBP
                            - GEL
                            - GHS
                            - GNF
                            - GTQ
                            - HKD
                            - HNL
                            - HRK
                            - HUF
                            - IDR
                            - ILS
                            - INR
                            - IQD
                            - IRR
                            - ISK
                            - JMD
                            - JOD
                            - JPY
                            - KES
                            - KHR
                            - KRW
                            - KWD
                            - KZT
                            - LBP
                            - LKR
                            - LTL
                            - LVL
                            - MAD
                            - MDL
                            - MGA
                            - MKD
                            - MMK
                            - MOP
                            - MUR
                            - MXN
                            - MYR
                            - MZN
                            - NAD
                            - NGN
                            - NIO
                            - NOK
                            - NPR
                            - NZD
                            - OMR
                            - PAB
                            - PEN
                            - PHP
                            - PKR
                            - PLN
                            - PYG
                            - QAR
                            - RON
                            - RSD
                            - RUB
                            - RWF
                            - SAR
                            - SDG
                            - SEK
                            - SGD
                            - SOS
                            - SYP
                            - THB
                            - TND
                            - TOP
                            - TRY
                            - TTD
                            - TWD
                            - TZS
                            - UAH
                            - UGX
                            - UYU
                            - UZS
                            - VEF
                            - VND
                            - XAF
                            - XOF
                            - YER
                            - ZAR
                            - ZMK
                          example: USD
                          description: Currency of the reward
                      required:
                        - denomination
                        - currency_code
                      example:
                        denomination: 50
                        currency_code: USD
                    recipient:
                      type: object
                      description: Details of the recipient of the reward
                      properties:
                        name:
                          type: string
                          description: Name of the recipient
                          example: John Doe Jr.
                        email:
                          type: string
                          description: Email address of the recipient
                          example: john.doe@example.com
                        phone:
                          type: string
                          description: >-
                            Phone number of the recipient. For non-US phone
                            numbers, specify the country code (prefixed with +).
                          example: 123-456-7890
                    deliver_at:
                      type: string
                      format: date
                      description: >-
                        Timestamp of reward delivery within the next year. Note
                        that if date-time is provided, the time values will be
                        ignored.
                      pattern: YYYY-MM-DD
                      example: '2023-12-31'
                    custom_fields:
                      type: array
                      items:
                        type: object
                        description: >-
                          Reward custom data for searching, tracking or copy (see
                          [Adding custom fields to
                          orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                            description: Tremendous ID of the custom field
                          value:
                            type: string
                            description: Value of the custom field
                            example: Hufflepuff
                            nullable: true
                          label:
                            type: string
                            description: Label of the custom field
                            example: harry_potter_house
                    delivery:
                      description: |
                        Details on how the reward is delivered to the recipient.
                      type: object
                      properties:
                        method:
                          description: |
                            How to deliver the reward to the recipient.

                            <table>
                              <thead>
                                <tr>
                                  <th>Delivery Method</th>
                                  <th>Description</th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td><code>EMAIL</code></td>
                                  <td>Deliver the reward to the recipient by email</td>
                                </tr>
                                <tr>
                                  <td><code>LINK</code></td>
                                  <td>
                                    <p>Deliver the reward to the recipient via a link.</p>
                                    <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                  </td>
                                </tr>
                                <tr>
                                  <td><code>PHONE</code></td>
                                  <td>Deliver the reward to the recipient by SMS</td>
                                </tr>
                              </tbody>
                            </table>
                          type: string
                          enum:
                            - EMAIL
                            - LINK
                            - PHONE
                        status:
                          type: string
                          enum:
                            - SCHEDULED
                            - FAILED
                            - SUCCEEDED
                            - PENDING
                          description: >
                            Current status of the delivery of the reward:


                            * `SCHEDULED` - Reward is scheduled for delivery and
                            will be delivered soon.

                            * `FAILED` - Delivery of reward failed (e.g. email
                            bounced).

                            * `SUCCEEDED` - Reward was successfully delivered
                            (email or text message delivered or reward link
                            opened).

                            * `PENDING` - Delivery is pending but not yet
                            scheduled.
                      required:
                        - method
                        - status
      ErrorNotFound:
        description: No resource could be found for the provided ID
        content:
          application/json:
            schema:
              type: object
              required:
                - errors
              properties:
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error message
                    payload:
                      type: object
                      description: >-
                        Mirrors the request parameters structure, filled only with
                        the (nested) properties that caused an error.
                      example:
                        rewards:
                          catalog: At least one valid product required
      RewardLinkResponse:
        description: A redemption link for a reward
        content:
          application/json:
            schema:
              type: object
              required:
                - reward
              properties:
                reward:
                  type: object
                  description: The redemption link for a reward.
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      description: Tremendous ID of the reward
                    link:
                      type: string
                      description: >
                        Link to redeem the reward at. You need to deliver this
                        link to the recipient.
                      example: >-
                        https://testflight.tremendous.com/rewards/payout/ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
      ErrorForbidden:
        description: >-
          Operation not permitted; only rewards that are of type link support this
          operation
        content:
          application/json:
            schema:
              type: object
              required:
                - errors
              properties:
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error message
                    payload:
                      type: object
                      description: >-
                        Mirrors the request parameters structure, filled only with
                        the (nested) properties that caused an error.
                      example:
                        rewards:
                          catalog: At least one valid product required
              example:
                errors:
                  message: Unsupported operation for this reward.
                  payload: {}
      RewardTokenResponse:
        description: A redemption token for a reward
        content:
          application/json:
            schema:
              type: object
              required:
                - reward
              properties:
                reward:
                  type: object
                  description: The redemption token for a reward.
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      description: Tremendous ID of the reward
                    token:
                      type: string
                      description: |
                        The token to redeem the reward.
                      example: ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
                    expires_at:
                      type: string
                      format: date-time
                      description: Date the token expires
      RequestSuccess:
        description: The request has succeeded.
        content:
          application/json:
            schema:
              type: object
            example: {}
      ErrorValidationFailed:
        description: Validation error of the sent parameters or request body
        content:
          application/json:
            schema:
              type: object
              required:
                - errors
              properties:
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error message
                    payload:
                      type: object
                      description: >-
                        Mirrors the request parameters structure, filled only with
                        the (nested) properties that caused an error.
                      example:
                        rewards:
                          catalog: At least one valid product required
              example:
                errors:
                  message: 'Order failed: validation failure'
                  payload:
                    some_field:
                      some_sub_field: Something went wrong with this parameter
      OrderResponseWithLink:
        description: An order (to be overwritten in specific reponses)
        content:
          application/json:
            schema:
              type: object
              required:
                - order
              properties:
                order:
                  type: object
                  description: An order wraps around the fulfilment of one or more rewards.
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      description: Tremendous ID of the order
                    external_id:
                      type: string
                      nullable: true
                      description: >
                        Reference for this order, supplied by the customer.


                        When set, `external_id` makes order idempotent. All
                        requests that use the same `external_id`

                        after the initial order creation, will result in a
                        response that returns the data of the

                        initially created order. The response will have a `201`
                        response code. These responses

                        **fail** to create any further orders.


                        It also allows for retrieving by `external_id` instead of
                        `id` only.
                      example: Your-Individual-Identifier-for-This-Order
                    campaign_id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: IVM0I3WNJJL0
                      nullable: true
                      description: >
                        ID of the campaign in your account, that defines the
                        available products (different gift cards, charity, etc.)

                        that the recipient can choose from.
                    created_at:
                      type: string
                      format: date-time
                      description: Date the order has been created
                    status:
                      type: string
                      description: |
                        Execution status of a given order

                        <table>
                          <thead>
                            <tr>
                              <th>
                                Status
                              </th>
                              <th>
                                Description
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td>
                                <code>
                                  CANCELED
                                </code>
                              </td>
                              <td>
                                The order and all of its rewards were canceled.
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  CART
                                </code>
                              </td>
                              <td>
                                The order has been created, but hasn't yet been processed.
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  EXECUTED
                                </code>
                              </td>
                              <td>
                                The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  FAILED
                                </code>
                              </td>
                              <td>
                                The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  PENDING APPROVAL
                                </code>
                              </td>
                              <td>
                                The order has been created but needs approval to be executed.
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  PENDING INTERNAL PAYMENT APPROVAL
                                </code>
                              </td>
                              <td>
                                The order has been created but it is under review and requires approval from our team.
                              </td>
                            </tr>

                          </tbody>
                        </table>
                      enum:
                        - CANCELED
                        - CART
                        - EXECUTED
                        - FAILED
                        - PENDING APPROVAL
                        - PENDING INTERNAL PAYMENT APPROVAL
                    payment:
                      type: object
                      properties:
                        subtotal:
                          type: number
                          format: double
                          minimum: 0
                          description: Total price of the order before fees (in USD)
                          example: 50
                        total:
                          type: number
                          format: double
                          minimum: 0
                          description: Total price of the order including fees (in USD)
                          example: 52.5
                        fees:
                          type: number
                          format: double
                          minimum: 0
                          description: Fees for the order (in USD)
                          example: 2.5
                        refund:
                          type: object
                          properties:
                            total:
                              type: number
                              format: double
                              minimum: 0
                              description: Total amount of the order refunds (in USD)
                              example: 52.5
                          required:
                            - total
                          description: >
                            Breakdown of the order refunds (total amount in USD,
                            independent from the currency of the ordered rewards).

                            Note that this property will only appear for canceled
                            orders or orders with canceled rewards.
                        channel:
                          type: string
                          description: Name of the channel in which the order was created
                          enum:
                            - UI
                            - API
                            - EMBED
                            - DECIPHER
                            - QUALTRICS
                            - TYPEFORM
                            - SURVEY MONKEY
                      description: >-
                        Cost breakdown of the order (cost of rewards + fees). Cost
                        and fees are always denominated in USD, independent from
                        the currency of the ordered rewards.

                        Note that this property will only appear for processed
                        orders (`status` is `EXECUTED`).
                    invoice_id:
                      type: string
                      description: The ID for the invoice associated with this order
                      example: 2E59A82B-0001
                    rewards:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        description: >
                          A single reward, sent to a recipient. A reward is always
                          part of an order.


                          Either `products` or `campaign_id` must be specified.
                        properties:
                          id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                            description: Tremendous ID of the reward
                          order_id:
                            type: string
                            pattern: '[A-Z0-9]{4,20}'
                            example: SOMEIDSOMEID
                            description: Tremendous ID of the order this reward is part of.
                          created_at:
                            type: string
                            format: date-time
                            description: Date the reward was created
                          value:
                            type: object
                            properties:
                              denomination:
                                type: number
                                format: double
                                description: Amount of the reward
                              currency_code:
                                type: string
                                enum:
                                  - USD
                                  - CAD
                                  - EUR
                                  - AED
                                  - AFN
                                  - ALL
                                  - AMD
                                  - ARS
                                  - AUD
                                  - AZN
                                  - BAM
                                  - BDT
                                  - BGN
                                  - BHD
                                  - BIF
                                  - BND
                                  - BOB
                                  - BRL
                                  - BWP
                                  - BYR
                                  - BZD
                                  - CDF
                                  - CHF
                                  - CLP
                                  - CNY
                                  - COP
                                  - CRC
                                  - CVE
                                  - CZK
                                  - DJF
                                  - DKK
                                  - DOP
                                  - DZD
                                  - EEK
                                  - EGP
                                  - ERN
                                  - ETB
                                  - GBP
                                  - GEL
                                  - GHS
                                  - GNF
                                  - GTQ
                                  - HKD
                                  - HNL
                                  - HRK
                                  - HUF
                                  - IDR
                                  - ILS
                                  - INR
                                  - IQD
                                  - IRR
                                  - ISK
                                  - JMD
                                  - JOD
                                  - JPY
                                  - KES
                                  - KHR
                                  - KRW
                                  - KWD
                                  - KZT
                                  - LBP
                                  - LKR
                                  - LTL
                                  - LVL
                                  - MAD
                                  - MDL
                                  - MGA
                                  - MKD
                                  - MMK
                                  - MOP
                                  - MUR
                                  - MXN
                                  - MYR
                                  - MZN
                                  - NAD
                                  - NGN
                                  - NIO
                                  - NOK
                                  - NPR
                                  - NZD
                                  - OMR
                                  - PAB
                                  - PEN
                                  - PHP
                                  - PKR
                                  - PLN
                                  - PYG
                                  - QAR
                                  - RON
                                  - RSD
                                  - RUB
                                  - RWF
                                  - SAR
                                  - SDG
                                  - SEK
                                  - SGD
                                  - SOS
                                  - SYP
                                  - THB
                                  - TND
                                  - TOP
                                  - TRY
                                  - TTD
                                  - TWD
                                  - TZS
                                  - UAH
                                  - UGX
                                  - UYU
                                  - UZS
                                  - VEF
                                  - VND
                                  - XAF
                                  - XOF
                                  - YER
                                  - ZAR
                                  - ZMK
                                example: USD
                                description: Currency of the reward
                            required:
                              - denomination
                              - currency_code
                            example:
                              denomination: 50
                              currency_code: USD
                          recipient:
                            type: object
                            description: Details of the recipient of the reward
                            properties:
                              name:
                                type: string
                                description: Name of the recipient
                                example: John Doe Jr.
                              email:
                                type: string
                                description: Email address of the recipient
                                example: john.doe@example.com
                              phone:
                                type: string
                                description: >-
                                  Phone number of the recipient. For non-US phone
                                  numbers, specify the country code (prefixed with
                                  +).
                                example: 123-456-7890
                          deliver_at:
                            type: string
                            format: date
                            description: >-
                              Timestamp of reward delivery within the next year.
                              Note that if date-time is provided, the time values
                              will be ignored.
                            pattern: YYYY-MM-DD
                            example: '2023-12-31'
                          custom_fields:
                            type: array
                            items:
                              type: object
                              description: >-
                                Reward custom data for searching, tracking or copy
                                (see [Adding custom fields to
                                orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                              properties:
                                id:
                                  type: string
                                  pattern: '[A-Z0-9]{4,20}'
                                  example: SOMEIDSOMEID
                                  description: Tremendous ID of the custom field
                                value:
                                  type: string
                                  description: Value of the custom field
                                  example: Hufflepuff
                                  nullable: true
                                label:
                                  type: string
                                  description: Label of the custom field
                                  example: harry_potter_house
                          delivery:
                            type: object
                            description: >
                              Details on how the reward is delivered to the
                              recipient.
                            properties:
                              method:
                                description: |
                                  How to deliver the reward to the recipient.

                                  <table>
                                    <thead>
                                      <tr>
                                        <th>Delivery Method</th>
                                        <th>Description</th>
                                      </tr>
                                    </thead>
                                    <tbody>
                                      <tr>
                                        <td><code>EMAIL</code></td>
                                        <td>Deliver the reward to the recipient by email</td>
                                      </tr>
                                      <tr>
                                        <td><code>LINK</code></td>
                                        <td>
                                          <p>Deliver the reward to the recipient via a link.</p>
                                          <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                        </td>
                                      </tr>
                                      <tr>
                                        <td><code>PHONE</code></td>
                                        <td>Deliver the reward to the recipient by SMS</td>
                                      </tr>
                                    </tbody>
                                  </table>
                                type: string
                                enum:
                                  - EMAIL
                                  - LINK
                                  - PHONE
                              status:
                                type: string
                                enum:
                                  - SCHEDULED
                                  - FAILED
                                  - SUCCEEDED
                                  - PENDING
                                description: >
                                  Current status of the delivery of the reward:


                                  * `SCHEDULED` - Reward is scheduled for delivery
                                  and will be delivered soon.

                                  * `FAILED` - Delivery of reward failed (e.g.
                                  email bounced).

                                  * `SUCCEEDED` - Reward was successfully
                                  delivered (email or text message delivered or
                                  reward link opened).

                                  * `PENDING` - Delivery is pending but not yet
                                  scheduled.
                              link:
                                type: string
                                description: >
                                  Link to redeem the reward at. You need to
                                  deliver this link to the recipient.


                                  Only available for rewards for which the
                                  `method` for delivery is set to `LINK`.
                                example: >-
                                  https://testflight.tremendous.com/rewards/payout/z67jic92r
                            required:
                              - method
                              - status
                  required:
                    - id
                    - created_at
                    - status
      OrderResponseWithoutLink:
        description: An order (to be overwritten in specific reponses)
        content:
          application/json:
            schema:
              type: object
              required:
                - order
              properties:
                order:
                  type: object
                  description: An order wraps around the fulfilment of one or more rewards.
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      description: Tremendous ID of the order
                    external_id:
                      type: string
                      nullable: true
                      description: >
                        Reference for this order, supplied by the customer.


                        When set, `external_id` makes order idempotent. All
                        requests that use the same `external_id`

                        after the initial order creation, will result in a
                        response that returns the data of the

                        initially created order. The response will have a `201`
                        response code. These responses

                        **fail** to create any further orders.


                        It also allows for retrieving by `external_id` instead of
                        `id` only.
                      example: Your-Individual-Identifier-for-This-Order
                    campaign_id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: IVM0I3WNJJL0
                      nullable: true
                      description: >
                        ID of the campaign in your account, that defines the
                        available products (different gift cards, charity, etc.)

                        that the recipient can choose from.
                    created_at:
                      type: string
                      format: date-time
                      description: Date the order has been created
                    status:
                      type: string
                      description: |
                        Execution status of a given order

                        <table>
                          <thead>
                            <tr>
                              <th>
                                Status
                              </th>
                              <th>
                                Description
                              </th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td>
                                <code>
                                  CANCELED
                                </code>
                              </td>
                              <td>
                                The order and all of its rewards were canceled.
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  CART
                                </code>
                              </td>
                              <td>
                                The order has been created, but hasn't yet been processed.
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  EXECUTED
                                </code>
                              </td>
                              <td>
                                The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  FAILED
                                </code>
                              </td>
                              <td>
                                The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  PENDING APPROVAL
                                </code>
                              </td>
                              <td>
                                The order has been created but needs approval to be executed.
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <code>
                                  PENDING INTERNAL PAYMENT APPROVAL
                                </code>
                              </td>
                              <td>
                                The order has been created but it is under review and requires approval from our team.
                              </td>
                            </tr>

                          </tbody>
                        </table>
                      enum:
                        - CANCELED
                        - CART
                        - EXECUTED
                        - FAILED
                        - PENDING APPROVAL
                        - PENDING INTERNAL PAYMENT APPROVAL
                    payment:
                      type: object
                      properties:
                        subtotal:
                          type: number
                          format: double
                          minimum: 0
                          description: Total price of the order before fees (in USD)
                          example: 50
                        total:
                          type: number
                          format: double
                          minimum: 0
                          description: Total price of the order including fees (in USD)
                          example: 52.5
                        fees:
                          type: number
                          format: double
                          minimum: 0
                          description: Fees for the order (in USD)
                          example: 2.5
                        refund:
                          type: object
                          properties:
                            total:
                              type: number
                              format: double
                              minimum: 0
                              description: Total amount of the order refunds (in USD)
                              example: 52.5
                          required:
                            - total
                          description: >
                            Breakdown of the order refunds (total amount in USD,
                            independent from the currency of the ordered rewards).

                            Note that this property will only appear for canceled
                            orders or orders with canceled rewards.
                        channel:
                          type: string
                          description: Name of the channel in which the order was created
                          enum:
                            - UI
                            - API
                            - EMBED
                            - DECIPHER
                            - QUALTRICS
                            - TYPEFORM
                            - SURVEY MONKEY
                      description: >-
                        Cost breakdown of the order (cost of rewards + fees). Cost
                        and fees are always denominated in USD, independent from
                        the currency of the ordered rewards.

                        Note that this property will only appear for processed
                        orders (`status` is `EXECUTED`).
                    invoice_id:
                      type: string
                      description: The ID for the invoice associated with this order
                      example: 2E59A82B-0001
                    reward:
                      type: object
                      description: >
                        A single reward, sent to a recipient. A reward is always
                        part of an order.


                        Either `products` or `campaign_id` must be specified.
                      properties:
                        id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the reward
                        order_id:
                          type: string
                          pattern: '[A-Z0-9]{4,20}'
                          example: SOMEIDSOMEID
                          description: Tremendous ID of the order this reward is part of.
                        created_at:
                          type: string
                          format: date-time
                          description: Date the reward was created
                        value:
                          type: object
                          properties:
                            denomination:
                              type: number
                              format: double
                              description: Amount of the reward
                            currency_code:
                              type: string
                              enum:
                                - USD
                                - CAD
                                - EUR
                                - AED
                                - AFN
                                - ALL
                                - AMD
                                - ARS
                                - AUD
                                - AZN
                                - BAM
                                - BDT
                                - BGN
                                - BHD
                                - BIF
                                - BND
                                - BOB
                                - BRL
                                - BWP
                                - BYR
                                - BZD
                                - CDF
                                - CHF
                                - CLP
                                - CNY
                                - COP
                                - CRC
                                - CVE
                                - CZK
                                - DJF
                                - DKK
                                - DOP
                                - DZD
                                - EEK
                                - EGP
                                - ERN
                                - ETB
                                - GBP
                                - GEL
                                - GHS
                                - GNF
                                - GTQ
                                - HKD
                                - HNL
                                - HRK
                                - HUF
                                - IDR
                                - ILS
                                - INR
                                - IQD
                                - IRR
                                - ISK
                                - JMD
                                - JOD
                                - JPY
                                - KES
                                - KHR
                                - KRW
                                - KWD
                                - KZT
                                - LBP
                                - LKR
                                - LTL
                                - LVL
                                - MAD
                                - MDL
                                - MGA
                                - MKD
                                - MMK
                                - MOP
                                - MUR
                                - MXN
                                - MYR
                                - MZN
                                - NAD
                                - NGN
                                - NIO
                                - NOK
                                - NPR
                                - NZD
                                - OMR
                                - PAB
                                - PEN
                                - PHP
                                - PKR
                                - PLN
                                - PYG
                                - QAR
                                - RON
                                - RSD
                                - RUB
                                - RWF
                                - SAR
                                - SDG
                                - SEK
                                - SGD
                                - SOS
                                - SYP
                                - THB
                                - TND
                                - TOP
                                - TRY
                                - TTD
                                - TWD
                                - TZS
                                - UAH
                                - UGX
                                - UYU
                                - UZS
                                - VEF
                                - VND
                                - XAF
                                - XOF
                                - YER
                                - ZAR
                                - ZMK
                              example: USD
                              description: Currency of the reward
                          required:
                            - denomination
                            - currency_code
                          example:
                            denomination: 50
                            currency_code: USD
                        recipient:
                          type: object
                          description: Details of the recipient of the reward
                          properties:
                            name:
                              type: string
                              description: Name of the recipient
                              example: John Doe Jr.
                            email:
                              type: string
                              description: Email address of the recipient
                              example: john.doe@example.com
                            phone:
                              type: string
                              description: >-
                                Phone number of the recipient. For non-US phone
                                numbers, specify the country code (prefixed with
                                +).
                              example: 123-456-7890
                        deliver_at:
                          type: string
                          format: date
                          description: >-
                            Timestamp of reward delivery within the next year.
                            Note that if date-time is provided, the time values
                            will be ignored.
                          pattern: YYYY-MM-DD
                          example: '2023-12-31'
                        custom_fields:
                          type: array
                          items:
                            type: object
                            description: >-
                              Reward custom data for searching, tracking or copy
                              (see [Adding custom fields to
                              orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                            properties:
                              id:
                                type: string
                                pattern: '[A-Z0-9]{4,20}'
                                example: SOMEIDSOMEID
                                description: Tremendous ID of the custom field
                              value:
                                type: string
                                description: Value of the custom field
                                example: Hufflepuff
                                nullable: true
                              label:
                                type: string
                                description: Label of the custom field
                                example: harry_potter_house
                        delivery:
                          description: >
                            Details on how the reward is delivered to the
                            recipient.
                          type: object
                          properties:
                            method:
                              description: |
                                How to deliver the reward to the recipient.

                                <table>
                                  <thead>
                                    <tr>
                                      <th>Delivery Method</th>
                                      <th>Description</th>
                                    </tr>
                                  </thead>
                                  <tbody>
                                    <tr>
                                      <td><code>EMAIL</code></td>
                                      <td>Deliver the reward to the recipient by email</td>
                                    </tr>
                                    <tr>
                                      <td><code>LINK</code></td>
                                      <td>
                                        <p>Deliver the reward to the recipient via a link.</p>
                                        <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                                      </td>
                                    </tr>
                                    <tr>
                                      <td><code>PHONE</code></td>
                                      <td>Deliver the reward to the recipient by SMS</td>
                                    </tr>
                                  </tbody>
                                </table>
                              type: string
                              enum:
                                - EMAIL
                                - LINK
                                - PHONE
                            status:
                              type: string
                              enum:
                                - SCHEDULED
                                - FAILED
                                - SUCCEEDED
                                - PENDING
                              description: >
                                Current status of the delivery of the reward:


                                * `SCHEDULED` - Reward is scheduled for delivery
                                and will be delivered soon.

                                * `FAILED` - Delivery of reward failed (e.g. email
                                bounced).

                                * `SUCCEEDED` - Reward was successfully delivered
                                (email or text message delivered or reward link
                                opened).

                                * `PENDING` - Delivery is pending but not yet
                                scheduled.
                          required:
                            - method
                            - status
                  required:
                    - id
                    - created_at
                    - status
      ErrorPaymentRequired:
        description: Not enough funds to carry out the request. Please top-up your account
        content:
          application/json:
            schema:
              type: object
              required:
                - errors
              properties:
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error message
                    payload:
                      type: object
                      description: >-
                        Mirrors the request parameters structure, filled only with
                        the (nested) properties that caused an error.
                      example:
                        rewards:
                          catalog: At least one valid product required
            example:
              errors:
                message: >-
                  Not enough funds to carry out this operation. Fund your balance
                  to proceed.
                payload: {}
      InvoiceResponse:
        description: An invoice (to be overwritten in specific reponses)
        content:
          application/json:
            schema:
              type: object
              required:
                - invoice
              properties:
                invoice:
                  type: object
                  description: >
                    Invoices are instruments to fund your Tremendous account's
                    balance.


                    Invoices can be created by your organization programatically.

                    Once we receive your payment, the invoice is marked as `PAID`
                    and we add

                    the respective funds to your account's balance.
                  required:
                    - id
                    - amount
                    - status
                    - created_at
                    - paid_at
                  properties:
                    id:
                      type: string
                      description: The invoice number
                      example: PPS-26873
                    po_number:
                      type: string
                      description: >-
                        Reference to the purchase order number within your
                        organization
                      nullable: true
                      example: 123-PO-EE
                    amount:
                      type: number
                      format: double
                      description: Amount of the invoice in USD
                      example: 50.35
                    status:
                      type: string
                      description: |
                        Status of this invoice

                        <table>
                          <thead>
                            <tr>
                              <th>Status</th>
                              <th>Description</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><code>DELETED</code></td>
                              <td>Invoice has been deleted by your organization</td>
                            </tr>
                            <tr>
                              <td><code>PAID</code></td>
                              <td>Invoice has been paid by your organization</td>
                            </tr>
                            <tr>
                              <td><code>OPEN</code></td>
                              <td>Invoice has been created by your organization but has not been paid, yet</td>
                            </tr>
                          </tbody>
                        </table>
                      enum:
                        - DELETED
                        - PAID
                        - OPEN
                        - MARKED_AS_PAID
                      example: PAID
                    orders:
                      type: array
                      description: >-
                        List of orders related to the invoice (it doesn't apply to
                        prefunding)
                      items:
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                      example:
                        - ABC123456789
                        - DEF123456789
                    rewards:
                      type: array
                      description: >-
                        List of rewards related to the invoice (it doesn't apply
                        to prefunding)
                      items:
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                      example:
                        - ABC123456789
                        - DEF123456789
                    created_at:
                      type: string
                      format: date
                      description: |
                        Timestamp of when the invoice has been created.
                    paid_at:
                      type: string
                      format: date
                      nullable: true
                      description: |
                        Timestamp of when the invoice has been paid.
      CreateOrganizationResponse:
        description: The created organization
        content:
          application/json:
            schema:
              type: object
              properties:
                organization:
                  type: object
                  description: >
                    Organizations are a way to separate different parts of your
                    business within the same Tremendous account.

                    Your root Tremendous account is an organization itself and can
                    have multiple sub-organizations.


                    You can assign users in your Tremendous team as members to any
                    organization. Users can be members of multiple

                    organizations at once.


                    Each organizations can have it's own API key.
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                    name:
                      type: string
                      description: Name of the organization
                      example: ACME Inc.
                    website:
                      type: string
                      format: uri
                      description: URL of the website of that organization
                      example: https://www.example.com/some-org
                    status:
                      type: string
                      enum:
                        - PENDING
                        - APPROVED
                        - REJECTED
                      description: >-
                        Status of the organization. Organizations need to be
                        approved to be able to use them to send out rewards.
                      example: APPROVED
                    created_at:
                      type: string
                      format: date
                      description: >
                        Timestamp of when the organization has been created.


                        *This field is only returned when creating an
                        organization.* It is not returned anymore when retrieving
                        or listing organizations.
                      example: '2021-08-02'
                    api_key:
                      type: string
                      description: >
                        The API key for the created organization.

                        This property is only returned when `with_api_key` is set
                        to `true`.
                  required:
                    - name
                    - website
      OrganizationResponse:
        description: An organization (to be overwritten in specific responses)
        content:
          application/json:
            schema:
              type: object
              properties:
                organization:
                  type: object
                  description: >
                    Organizations are a way to separate different parts of your
                    business within the same Tremendous account.

                    Your root Tremendous account is an organization itself and can
                    have multiple sub-organizations.


                    You can assign users in your Tremendous team as members to any
                    organization. Users can be members of multiple

                    organizations at once.


                    Each organizations can have it's own API key.
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                    name:
                      type: string
                      description: Name of the organization
                      example: ACME Inc.
                    website:
                      type: string
                      format: uri
                      description: URL of the website of that organization
                      example: https://www.example.com/some-org
                    status:
                      type: string
                      enum:
                        - PENDING
                        - APPROVED
                        - REJECTED
                      description: >-
                        Status of the organization. Organizations need to be
                        approved to be able to use them to send out rewards.
                      example: APPROVED
                    created_at:
                      type: string
                      format: date
                      description: >
                        Timestamp of when the organization has been created.


                        *This field is only returned when creating an
                        organization.* It is not returned anymore when retrieving
                        or listing organizations.
                      example: '2021-08-02'
                  required:
                    - name
                    - website
      MemberWithoutEventsResponse:
        description: A member (to be overwritten in specific responses)
        content:
          application/json:
            schema:
              type: object
              required:
                - member
              properties:
                member:
                  type: object
                  description: >
                    Each organization has one or more users that can access and
                    manage that organization. These users are called members.


                    Members can take actions via the Tremendous web dashboard
                    directly.


                    These actions include adding funding sources to the
                    organization, creating Campaigns, and more.
                  required:
                    - id
                    - name
                    - email
                    - role
                    - status
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                    email:
                      type: string
                      description: Email address of the member
                      format: email
                      example: jane@example.com
                    name:
                      type: string
                      description: Full name of the member
                      example: Jane Doe
                      nullable: true
                    role:
                      type: string
                      enum:
                        - MEMBER
                        - ADMIN
                        - DELETED
                      description: |
                        Role of the member within the organization.

                        <table>
                          <thead>
                            <tr>
                              <th>Role</th>
                              <th>Description</th>
                            </tr>
                          </thead>
                            <tr>
                              <td><code>MEMBER</code></td>
                              <td>Limited permissions. Can view their own reward and order histories only.</td>
                            </tr>
                            <tr>
                              <td><code>ADMIN</code></td>
                              <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                            </tr>
                            <tr>
                              <td><code>DELETED</code></td>
                              <td>No longer a member of this organization.</td>
                            </tr>
                          <tbody>
                          </tbody>
                        </table>
                    status:
                      type: string
                      description: >
                        Current status of the member's account.


                        When creating a member it starts out in the status
                        `INVITED`. As soon as that member open the invitation link
                        and registers an account, the status switches to
                        `REGISTERED`.
                      enum:
                        - REGISTERED
                        - INVITED
                      example: INVITED
                    created_at:
                      type: string
                      format: date-time
                      description: >
                        Timestamp when this member was created.


                        The `created_at` timestamp is **NOT** returned when
                        retrieving a member (but is part of the response when
                        listing or creating members).
                      example: '2021-08-02T11:05:59Z'
                    last_login_at:
                      type: string
                      format: date-time
                      description: >
                        Timestamp when this member most recently logged into the
                        dashboard of the organization associated with this API
                        key.
                      example: '2021-08-02T11:05:59Z'
                      nullable: true
      WebhookResponse:
        description: A webhook (to be overwritten in specific responses)
        content:
          application/json:
            schema:
              type: object
              properties:
                webhook:
                  type: object
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                    url:
                      type: string
                      format: uri
                      description: URL the webhook will make requests to
                      example: https://example.com/webhook
                      nullable: true
                    private_key:
                      type: string
                      description: Private key for the webhook
                      example: jXjdU8dozx571TG6YzL4
                  required:
                    - url
      UnexpectedError:
        description: >-
          The server encountered an unexpected error or couldn't fulfill the
          request in time.
        content:
          application/json:
            schema:
              type: object
              required:
                - errors
              properties:
                errors:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Error message
                    payload:
                      type: object
                      description: >-
                        Mirrors the request parameters structure, filled only with
                        the (nested) properties that caused an error.
                      example:
                        rewards:
                          catalog: At least one valid product required
            example:
              errors:
                message: Something went wrong. We have been notified
    schemas:
      TremendousId:
        type: string
        pattern: '[A-Z0-9]{4,20}'
        example: SOMEIDSOMEID
        readOnly: true
      NullableTremendousId:
        type: string
        pattern: '[A-Z0-9]{4,20}'
        example: SOMEIDSOMEID
        readOnly: true
        nullable: true
      CurrencyCodes:
        type: string
        enum:
          - USD
          - CAD
          - EUR
          - AED
          - AFN
          - ALL
          - AMD
          - ARS
          - AUD
          - AZN
          - BAM
          - BDT
          - BGN
          - BHD
          - BIF
          - BND
          - BOB
          - BRL
          - BWP
          - BYR
          - BZD
          - CDF
          - CHF
          - CLP
          - CNY
          - COP
          - CRC
          - CVE
          - CZK
          - DJF
          - DKK
          - DOP
          - DZD
          - EEK
          - EGP
          - ERN
          - ETB
          - GBP
          - GEL
          - GHS
          - GNF
          - GTQ
          - HKD
          - HNL
          - HRK
          - HUF
          - IDR
          - ILS
          - INR
          - IQD
          - IRR
          - ISK
          - JMD
          - JOD
          - JPY
          - KES
          - KHR
          - KRW
          - KWD
          - KZT
          - LBP
          - LKR
          - LTL
          - LVL
          - MAD
          - MDL
          - MGA
          - MKD
          - MMK
          - MOP
          - MUR
          - MXN
          - MYR
          - MZN
          - NAD
          - NGN
          - NIO
          - NOK
          - NPR
          - NZD
          - OMR
          - PAB
          - PEN
          - PHP
          - PKR
          - PLN
          - PYG
          - QAR
          - RON
          - RSD
          - RUB
          - RWF
          - SAR
          - SDG
          - SEK
          - SGD
          - SOS
          - SYP
          - THB
          - TND
          - TOP
          - TRY
          - TTD
          - TWD
          - TZS
          - UAH
          - UGX
          - UYU
          - UZS
          - VEF
          - VND
          - XAF
          - XOF
          - YER
          - ZAR
          - ZMK
        example: USD
      RewardValue:
        type: object
        properties:
          denomination:
            type: number
            format: double
            description: Amount of the reward
          currency_code:
            type: string
            enum:
              - USD
              - CAD
              - EUR
              - AED
              - AFN
              - ALL
              - AMD
              - ARS
              - AUD
              - AZN
              - BAM
              - BDT
              - BGN
              - BHD
              - BIF
              - BND
              - BOB
              - BRL
              - BWP
              - BYR
              - BZD
              - CDF
              - CHF
              - CLP
              - CNY
              - COP
              - CRC
              - CVE
              - CZK
              - DJF
              - DKK
              - DOP
              - DZD
              - EEK
              - EGP
              - ERN
              - ETB
              - GBP
              - GEL
              - GHS
              - GNF
              - GTQ
              - HKD
              - HNL
              - HRK
              - HUF
              - IDR
              - ILS
              - INR
              - IQD
              - IRR
              - ISK
              - JMD
              - JOD
              - JPY
              - KES
              - KHR
              - KRW
              - KWD
              - KZT
              - LBP
              - LKR
              - LTL
              - LVL
              - MAD
              - MDL
              - MGA
              - MKD
              - MMK
              - MOP
              - MUR
              - MXN
              - MYR
              - MZN
              - NAD
              - NGN
              - NIO
              - NOK
              - NPR
              - NZD
              - OMR
              - PAB
              - PEN
              - PHP
              - PKR
              - PLN
              - PYG
              - QAR
              - RON
              - RSD
              - RUB
              - RWF
              - SAR
              - SDG
              - SEK
              - SGD
              - SOS
              - SYP
              - THB
              - TND
              - TOP
              - TRY
              - TTD
              - TWD
              - TZS
              - UAH
              - UGX
              - UYU
              - UZS
              - VEF
              - VND
              - XAF
              - XOF
              - YER
              - ZAR
              - ZMK
            example: USD
            description: Currency of the reward
        required:
          - denomination
          - currency_code
        example:
          denomination: 50
          currency_code: USD
      Recipient:
        type: object
        description: Details of the recipient of the reward
        properties:
          name:
            type: string
            description: Name of the recipient
            example: John Doe Jr.
          email:
            type: string
            description: Email address of the recipient
            example: john.doe@example.com
          phone:
            type: string
            description: >-
              Phone number of the recipient. For non-US phone numbers, specify the
              country code (prefixed with +).
            example: 123-456-7890
      CustomField:
        type: object
        description: >-
          Reward custom data for searching, tracking or copy (see [Adding custom
          fields to
          orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            description: Tremendous ID of the custom field
          value:
            type: string
            description: Value of the custom field
            example: Hufflepuff
            readOnly: false
            nullable: true
          label:
            type: string
            description: Label of the custom field
            example: harry_potter_house
            readOnly: false
      RewardBase:
        type: object
        description: >
          A single reward, sent to a recipient. A reward is always part of an
          order.


          Either `products` or `campaign_id` must be specified.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the reward
          order_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the order this reward is part of.
          created_at:
            type: string
            format: date-time
            description: Date the reward was created
            readOnly: true
          campaign_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            nullable: true
            description: >
              ID of the campaign in your account, that defines the available
              products (different gift cards, charity, etc.)

              that the recipient can choose from.
            writeOnly: true
          products:
            type: array
            writeOnly: true
            description: >
              List of IDs of product (different gift cards, charity, etc.) that
              will be available

              to the recipient to choose from.


              Providing a `products` array will override the products made
              available by the campaign

              specified using the `campaign_id` property unless the `products`
              array is empty. It will

              _not_ override other campaign attributes, like the message and
              customization of the look and feel.
            items:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: false
              writeOnly: true
            minItems: 1
          value:
            type: object
            properties:
              denomination:
                type: number
                format: double
                description: Amount of the reward
              currency_code:
                type: string
                enum:
                  - USD
                  - CAD
                  - EUR
                  - AED
                  - AFN
                  - ALL
                  - AMD
                  - ARS
                  - AUD
                  - AZN
                  - BAM
                  - BDT
                  - BGN
                  - BHD
                  - BIF
                  - BND
                  - BOB
                  - BRL
                  - BWP
                  - BYR
                  - BZD
                  - CDF
                  - CHF
                  - CLP
                  - CNY
                  - COP
                  - CRC
                  - CVE
                  - CZK
                  - DJF
                  - DKK
                  - DOP
                  - DZD
                  - EEK
                  - EGP
                  - ERN
                  - ETB
                  - GBP
                  - GEL
                  - GHS
                  - GNF
                  - GTQ
                  - HKD
                  - HNL
                  - HRK
                  - HUF
                  - IDR
                  - ILS
                  - INR
                  - IQD
                  - IRR
                  - ISK
                  - JMD
                  - JOD
                  - JPY
                  - KES
                  - KHR
                  - KRW
                  - KWD
                  - KZT
                  - LBP
                  - LKR
                  - LTL
                  - LVL
                  - MAD
                  - MDL
                  - MGA
                  - MKD
                  - MMK
                  - MOP
                  - MUR
                  - MXN
                  - MYR
                  - MZN
                  - NAD
                  - NGN
                  - NIO
                  - NOK
                  - NPR
                  - NZD
                  - OMR
                  - PAB
                  - PEN
                  - PHP
                  - PKR
                  - PLN
                  - PYG
                  - QAR
                  - RON
                  - RSD
                  - RUB
                  - RWF
                  - SAR
                  - SDG
                  - SEK
                  - SGD
                  - SOS
                  - SYP
                  - THB
                  - TND
                  - TOP
                  - TRY
                  - TTD
                  - TWD
                  - TZS
                  - UAH
                  - UGX
                  - UYU
                  - UZS
                  - VEF
                  - VND
                  - XAF
                  - XOF
                  - YER
                  - ZAR
                  - ZMK
                example: USD
                description: Currency of the reward
            required:
              - denomination
              - currency_code
            example:
              denomination: 50
              currency_code: USD
          recipient:
            type: object
            description: Details of the recipient of the reward
            properties:
              name:
                type: string
                description: Name of the recipient
                example: John Doe Jr.
              email:
                type: string
                description: Email address of the recipient
                example: john.doe@example.com
              phone:
                type: string
                description: >-
                  Phone number of the recipient. For non-US phone numbers, specify
                  the country code (prefixed with +).
                example: 123-456-7890
          deliver_at:
            type: string
            format: date
            description: >-
              Timestamp of reward delivery within the next year. Note that if
              date-time is provided, the time values will be ignored.
            pattern: YYYY-MM-DD
            example: '2023-12-31'
          custom_fields:
            type: array
            items:
              type: object
              description: >-
                Reward custom data for searching, tracking or copy (see [Adding
                custom fields to
                orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
              properties:
                id:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  description: Tremendous ID of the custom field
                value:
                  type: string
                  description: Value of the custom field
                  example: Hufflepuff
                  readOnly: false
                  nullable: true
                label:
                  type: string
                  description: Label of the custom field
                  example: harry_potter_house
                  readOnly: false
      DeliveryMethod:
        description: |
          How to deliver the reward to the recipient.

          <table>
            <thead>
              <tr>
                <th>Delivery Method</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><code>EMAIL</code></td>
                <td>Deliver the reward to the recipient by email</td>
              </tr>
              <tr>
                <td><code>LINK</code></td>
                <td>
                  <p>Deliver the reward to the recipient via a link.</p>
                  <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                </td>
              </tr>
              <tr>
                <td><code>PHONE</code></td>
                <td>Deliver the reward to the recipient by SMS</td>
              </tr>
            </tbody>
          </table>
        type: string
        enum:
          - EMAIL
          - LINK
          - PHONE
      DeliveryStatus:
        type: string
        enum:
          - SCHEDULED
          - FAILED
          - SUCCEEDED
          - PENDING
        description: >
          Current status of the delivery of the reward:


          * `SCHEDULED` - Reward is scheduled for delivery and will be delivered
          soon.

          * `FAILED` - Delivery of reward failed (e.g. email bounced).

          * `SUCCEEDED` - Reward was successfully delivered (email or text message
          delivered or reward link opened).

          * `PENDING` - Delivery is pending but not yet scheduled.
        readOnly: true
      DeliveryDetails:
        description: |
          Details on how the reward is delivered to the recipient.
        type: object
        properties:
          method:
            description: |
              How to deliver the reward to the recipient.

              <table>
                <thead>
                  <tr>
                    <th>Delivery Method</th>
                    <th>Description</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><code>EMAIL</code></td>
                    <td>Deliver the reward to the recipient by email</td>
                  </tr>
                  <tr>
                    <td><code>LINK</code></td>
                    <td>
                      <p>Deliver the reward to the recipient via a link.</p>
                      <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                    </td>
                  </tr>
                  <tr>
                    <td><code>PHONE</code></td>
                    <td>Deliver the reward to the recipient by SMS</td>
                  </tr>
                </tbody>
              </table>
            type: string
            enum:
              - EMAIL
              - LINK
              - PHONE
          status:
            type: string
            enum:
              - SCHEDULED
              - FAILED
              - SUCCEEDED
              - PENDING
            description: >
              Current status of the delivery of the reward:


              * `SCHEDULED` - Reward is scheduled for delivery and will be
              delivered soon.

              * `FAILED` - Delivery of reward failed (e.g. email bounced).

              * `SUCCEEDED` - Reward was successfully delivered (email or text
              message delivered or reward link opened).

              * `PENDING` - Delivery is pending but not yet scheduled.
            readOnly: true
        required:
          - method
          - status
      RewardWithoutLink:
        type: object
        description: >
          A single reward, sent to a recipient. A reward is always part of an
          order.


          Either `products` or `campaign_id` must be specified.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the reward
          order_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the order this reward is part of.
          created_at:
            type: string
            format: date-time
            description: Date the reward was created
            readOnly: true
          campaign_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            nullable: true
            description: >
              ID of the campaign in your account, that defines the available
              products (different gift cards, charity, etc.)

              that the recipient can choose from.
            writeOnly: true
          products:
            type: array
            writeOnly: true
            description: >
              List of IDs of product (different gift cards, charity, etc.) that
              will be available

              to the recipient to choose from.


              Providing a `products` array will override the products made
              available by the campaign

              specified using the `campaign_id` property unless the `products`
              array is empty. It will

              _not_ override other campaign attributes, like the message and
              customization of the look and feel.
            items:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: false
              writeOnly: true
            minItems: 1
          value:
            type: object
            properties:
              denomination:
                type: number
                format: double
                description: Amount of the reward
              currency_code:
                type: string
                enum:
                  - USD
                  - CAD
                  - EUR
                  - AED
                  - AFN
                  - ALL
                  - AMD
                  - ARS
                  - AUD
                  - AZN
                  - BAM
                  - BDT
                  - BGN
                  - BHD
                  - BIF
                  - BND
                  - BOB
                  - BRL
                  - BWP
                  - BYR
                  - BZD
                  - CDF
                  - CHF
                  - CLP
                  - CNY
                  - COP
                  - CRC
                  - CVE
                  - CZK
                  - DJF
                  - DKK
                  - DOP
                  - DZD
                  - EEK
                  - EGP
                  - ERN
                  - ETB
                  - GBP
                  - GEL
                  - GHS
                  - GNF
                  - GTQ
                  - HKD
                  - HNL
                  - HRK
                  - HUF
                  - IDR
                  - ILS
                  - INR
                  - IQD
                  - IRR
                  - ISK
                  - JMD
                  - JOD
                  - JPY
                  - KES
                  - KHR
                  - KRW
                  - KWD
                  - KZT
                  - LBP
                  - LKR
                  - LTL
                  - LVL
                  - MAD
                  - MDL
                  - MGA
                  - MKD
                  - MMK
                  - MOP
                  - MUR
                  - MXN
                  - MYR
                  - MZN
                  - NAD
                  - NGN
                  - NIO
                  - NOK
                  - NPR
                  - NZD
                  - OMR
                  - PAB
                  - PEN
                  - PHP
                  - PKR
                  - PLN
                  - PYG
                  - QAR
                  - RON
                  - RSD
                  - RUB
                  - RWF
                  - SAR
                  - SDG
                  - SEK
                  - SGD
                  - SOS
                  - SYP
                  - THB
                  - TND
                  - TOP
                  - TRY
                  - TTD
                  - TWD
                  - TZS
                  - UAH
                  - UGX
                  - UYU
                  - UZS
                  - VEF
                  - VND
                  - XAF
                  - XOF
                  - YER
                  - ZAR
                  - ZMK
                example: USD
                description: Currency of the reward
            required:
              - denomination
              - currency_code
            example:
              denomination: 50
              currency_code: USD
          recipient:
            type: object
            description: Details of the recipient of the reward
            properties:
              name:
                type: string
                description: Name of the recipient
                example: John Doe Jr.
              email:
                type: string
                description: Email address of the recipient
                example: john.doe@example.com
              phone:
                type: string
                description: >-
                  Phone number of the recipient. For non-US phone numbers, specify
                  the country code (prefixed with +).
                example: 123-456-7890
          deliver_at:
            type: string
            format: date
            description: >-
              Timestamp of reward delivery within the next year. Note that if
              date-time is provided, the time values will be ignored.
            pattern: YYYY-MM-DD
            example: '2023-12-31'
          custom_fields:
            type: array
            items:
              type: object
              description: >-
                Reward custom data for searching, tracking or copy (see [Adding
                custom fields to
                orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
              properties:
                id:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  description: Tremendous ID of the custom field
                value:
                  type: string
                  description: Value of the custom field
                  example: Hufflepuff
                  readOnly: false
                  nullable: true
                label:
                  type: string
                  description: Label of the custom field
                  example: harry_potter_house
                  readOnly: false
          delivery:
            description: |
              Details on how the reward is delivered to the recipient.
            type: object
            properties:
              method:
                description: |
                  How to deliver the reward to the recipient.

                  <table>
                    <thead>
                      <tr>
                        <th>Delivery Method</th>
                        <th>Description</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td><code>EMAIL</code></td>
                        <td>Deliver the reward to the recipient by email</td>
                      </tr>
                      <tr>
                        <td><code>LINK</code></td>
                        <td>
                          <p>Deliver the reward to the recipient via a link.</p>
                          <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                        </td>
                      </tr>
                      <tr>
                        <td><code>PHONE</code></td>
                        <td>Deliver the reward to the recipient by SMS</td>
                      </tr>
                    </tbody>
                  </table>
                type: string
                enum:
                  - EMAIL
                  - LINK
                  - PHONE
              status:
                type: string
                enum:
                  - SCHEDULED
                  - FAILED
                  - SUCCEEDED
                  - PENDING
                description: >
                  Current status of the delivery of the reward:


                  * `SCHEDULED` - Reward is scheduled for delivery and will be
                  delivered soon.

                  * `FAILED` - Delivery of reward failed (e.g. email bounced).

                  * `SUCCEEDED` - Reward was successfully delivered (email or text
                  message delivered or reward link opened).

                  * `PENDING` - Delivery is pending but not yet scheduled.
                readOnly: true
            required:
              - method
              - status
      ErrorModel:
        type: object
        required:
          - errors
        properties:
          errors:
            type: object
            properties:
              message:
                type: string
                description: Error message
              payload:
                type: object
                description: >-
                  Mirrors the request parameters structure, filled only with the
                  (nested) properties that caused an error.
                example:
                  rewards:
                    catalog: At least one valid product required
      RewardLink:
        type: object
        description: The redemption link for a reward.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the reward
          link:
            type: string
            description: >
              Link to redeem the reward at. You need to deliver this link to the
              recipient.
            example: >-
              https://testflight.tremendous.com/rewards/payout/ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
            readOnly: true
      RewardToken:
        type: object
        description: The redemption token for a reward.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the reward
          token:
            type: string
            description: |
              The token to redeem the reward.
            example: ve0jrwn6q--ba1eoadem8ayukldsygyrlbikascdgsh
            readOnly: true
          expires_at:
            type: string
            format: date-time
            description: Date the token expires
            readOnly: true
      OrderStatus:
        type: string
        description: |
          Execution status of a given order

          <table>
            <thead>
              <tr>
                <th>
                  Status
                </th>
                <th>
                  Description
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  <code>
                    CANCELED
                  </code>
                </td>
                <td>
                  The order and all of its rewards were canceled.
                </td>
              </tr>
              <tr>
                <td>
                  <code>
                    CART
                  </code>
                </td>
                <td>
                  The order has been created, but hasn't yet been processed.
                </td>
              </tr>
              <tr>
                <td>
                  <code>
                    EXECUTED
                  </code>
                </td>
                <td>
                  The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                </td>
              </tr>
              <tr>
                <td>
                  <code>
                    FAILED
                  </code>
                </td>
                <td>
                  The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                </td>
              </tr>
              <tr>
                <td>
                  <code>
                    PENDING APPROVAL
                  </code>
                </td>
                <td>
                  The order has been created but needs approval to be executed.
                </td>
              </tr>
              <tr>
                <td>
                  <code>
                    PENDING INTERNAL PAYMENT APPROVAL
                  </code>
                </td>
                <td>
                  The order has been created but it is under review and requires approval from our team.
                </td>
              </tr>

            </tbody>
          </table>
        enum:
          - CANCELED
          - CART
          - EXECUTED
          - FAILED
          - PENDING APPROVAL
          - PENDING INTERNAL PAYMENT APPROVAL
      RefundDetails:
        type: object
        properties:
          total:
            type: number
            format: double
            minimum: 0
            readOnly: true
            description: Total amount of the order refunds (in USD)
            example: 52.5
        required:
          - total
      PaymentDetails:
        type: object
        properties:
          subtotal:
            type: number
            format: double
            minimum: 0
            readOnly: true
            description: Total price of the order before fees (in USD)
            example: 50
          total:
            type: number
            format: double
            minimum: 0
            readOnly: true
            description: Total price of the order including fees (in USD)
            example: 52.5
          fees:
            type: number
            format: double
            minimum: 0
            readOnly: true
            description: Fees for the order (in USD)
            example: 2.5
          refund:
            type: object
            properties:
              total:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Total amount of the order refunds (in USD)
                example: 52.5
            required:
              - total
            description: >
              Breakdown of the order refunds (total amount in USD, independent
              from the currency of the ordered rewards).

              Note that this property will only appear for canceled orders or
              orders with canceled rewards.
          channel:
            type: string
            description: Name of the channel in which the order was created
            enum:
              - UI
              - API
              - EMBED
              - DECIPHER
              - QUALTRICS
              - TYPEFORM
              - SURVEY MONKEY
      OrderBase:
        type: object
        description: An order wraps around the fulfilment of one or more rewards.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the order
          external_id:
            type: string
            nullable: true
            description: >
              Reference for this order, supplied by the customer.


              When set, `external_id` makes order idempotent. All requests that
              use the same `external_id`

              after the initial order creation, will result in a response that
              returns the data of the

              initially created order. The response will have a `201` response
              code. These responses

              **fail** to create any further orders.


              It also allows for retrieving by `external_id` instead of `id` only.
            example: Your-Individual-Identifier-for-This-Order
          campaign_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: IVM0I3WNJJL0
            readOnly: true
            nullable: true
            description: >
              ID of the campaign in your account, that defines the available
              products (different gift cards, charity, etc.)

              that the recipient can choose from.
          created_at:
            type: string
            format: date-time
            description: Date the order has been created
            readOnly: true
          status:
            type: string
            description: |
              Execution status of a given order

              <table>
                <thead>
                  <tr>
                    <th>
                      Status
                    </th>
                    <th>
                      Description
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>
                      <code>
                        CANCELED
                      </code>
                    </td>
                    <td>
                      The order and all of its rewards were canceled.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        CART
                      </code>
                    </td>
                    <td>
                      The order has been created, but hasn't yet been processed.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        EXECUTED
                      </code>
                    </td>
                    <td>
                      The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        FAILED
                      </code>
                    </td>
                    <td>
                      The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        PENDING APPROVAL
                      </code>
                    </td>
                    <td>
                      The order has been created but needs approval to be executed.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        PENDING INTERNAL PAYMENT APPROVAL
                      </code>
                    </td>
                    <td>
                      The order has been created but it is under review and requires approval from our team.
                    </td>
                  </tr>

                </tbody>
              </table>
            enum:
              - CANCELED
              - CART
              - EXECUTED
              - FAILED
              - PENDING APPROVAL
              - PENDING INTERNAL PAYMENT APPROVAL
            readOnly: true
          payment:
            type: object
            properties:
              subtotal:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Total price of the order before fees (in USD)
                example: 50
              total:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Total price of the order including fees (in USD)
                example: 52.5
              fees:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Fees for the order (in USD)
                example: 2.5
              refund:
                type: object
                properties:
                  total:
                    type: number
                    format: double
                    minimum: 0
                    readOnly: true
                    description: Total amount of the order refunds (in USD)
                    example: 52.5
                required:
                  - total
                description: >
                  Breakdown of the order refunds (total amount in USD, independent
                  from the currency of the ordered rewards).

                  Note that this property will only appear for canceled orders or
                  orders with canceled rewards.
              channel:
                type: string
                description: Name of the channel in which the order was created
                enum:
                  - UI
                  - API
                  - EMBED
                  - DECIPHER
                  - QUALTRICS
                  - TYPEFORM
                  - SURVEY MONKEY
            description: >-
              Cost breakdown of the order (cost of rewards + fees). Cost and fees
              are always denominated in USD, independent from the currency of the
              ordered rewards.

              Note that this property will only appear for processed orders
              (`status` is `EXECUTED`).
          invoice_id:
            type: string
            description: The ID for the invoice associated with this order
            readOnly: true
            example: 2E59A82B-0001
        required:
          - id
          - created_at
          - status
      OrderWithoutLink:
        type: object
        description: An order wraps around the fulfilment of one or more rewards.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the order
          external_id:
            type: string
            nullable: true
            description: >
              Reference for this order, supplied by the customer.


              When set, `external_id` makes order idempotent. All requests that
              use the same `external_id`

              after the initial order creation, will result in a response that
              returns the data of the

              initially created order. The response will have a `201` response
              code. These responses

              **fail** to create any further orders.


              It also allows for retrieving by `external_id` instead of `id` only.
            example: Your-Individual-Identifier-for-This-Order
          campaign_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: IVM0I3WNJJL0
            readOnly: true
            nullable: true
            description: >
              ID of the campaign in your account, that defines the available
              products (different gift cards, charity, etc.)

              that the recipient can choose from.
          created_at:
            type: string
            format: date-time
            description: Date the order has been created
            readOnly: true
          status:
            type: string
            description: |
              Execution status of a given order

              <table>
                <thead>
                  <tr>
                    <th>
                      Status
                    </th>
                    <th>
                      Description
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>
                      <code>
                        CANCELED
                      </code>
                    </td>
                    <td>
                      The order and all of its rewards were canceled.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        CART
                      </code>
                    </td>
                    <td>
                      The order has been created, but hasn't yet been processed.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        EXECUTED
                      </code>
                    </td>
                    <td>
                      The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        FAILED
                      </code>
                    </td>
                    <td>
                      The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        PENDING APPROVAL
                      </code>
                    </td>
                    <td>
                      The order has been created but needs approval to be executed.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        PENDING INTERNAL PAYMENT APPROVAL
                      </code>
                    </td>
                    <td>
                      The order has been created but it is under review and requires approval from our team.
                    </td>
                  </tr>

                </tbody>
              </table>
            enum:
              - CANCELED
              - CART
              - EXECUTED
              - FAILED
              - PENDING APPROVAL
              - PENDING INTERNAL PAYMENT APPROVAL
            readOnly: true
          payment:
            type: object
            properties:
              subtotal:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Total price of the order before fees (in USD)
                example: 50
              total:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Total price of the order including fees (in USD)
                example: 52.5
              fees:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Fees for the order (in USD)
                example: 2.5
              refund:
                type: object
                properties:
                  total:
                    type: number
                    format: double
                    minimum: 0
                    readOnly: true
                    description: Total amount of the order refunds (in USD)
                    example: 52.5
                required:
                  - total
                description: >
                  Breakdown of the order refunds (total amount in USD, independent
                  from the currency of the ordered rewards).

                  Note that this property will only appear for canceled orders or
                  orders with canceled rewards.
              channel:
                type: string
                description: Name of the channel in which the order was created
                enum:
                  - UI
                  - API
                  - EMBED
                  - DECIPHER
                  - QUALTRICS
                  - TYPEFORM
                  - SURVEY MONKEY
            description: >-
              Cost breakdown of the order (cost of rewards + fees). Cost and fees
              are always denominated in USD, independent from the currency of the
              ordered rewards.

              Note that this property will only appear for processed orders
              (`status` is `EXECUTED`).
          invoice_id:
            type: string
            description: The ID for the invoice associated with this order
            readOnly: true
            example: 2E59A82B-0001
          reward:
            type: object
            description: >
              A single reward, sent to a recipient. A reward is always part of an
              order.


              Either `products` or `campaign_id` must be specified.
            properties:
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: true
                description: Tremendous ID of the reward
              order_id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: true
                description: Tremendous ID of the order this reward is part of.
              created_at:
                type: string
                format: date-time
                description: Date the reward was created
                readOnly: true
              campaign_id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
                nullable: true
                description: >
                  ID of the campaign in your account, that defines the available
                  products (different gift cards, charity, etc.)

                  that the recipient can choose from.
                writeOnly: true
              products:
                type: array
                writeOnly: true
                description: >
                  List of IDs of product (different gift cards, charity, etc.)
                  that will be available

                  to the recipient to choose from.


                  Providing a `products` array will override the products made
                  available by the campaign

                  specified using the `campaign_id` property unless the `products`
                  array is empty. It will

                  _not_ override other campaign attributes, like the message and
                  customization of the look and feel.
                items:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  writeOnly: true
                minItems: 1
              value:
                type: object
                properties:
                  denomination:
                    type: number
                    format: double
                    description: Amount of the reward
                  currency_code:
                    type: string
                    enum:
                      - USD
                      - CAD
                      - EUR
                      - AED
                      - AFN
                      - ALL
                      - AMD
                      - ARS
                      - AUD
                      - AZN
                      - BAM
                      - BDT
                      - BGN
                      - BHD
                      - BIF
                      - BND
                      - BOB
                      - BRL
                      - BWP
                      - BYR
                      - BZD
                      - CDF
                      - CHF
                      - CLP
                      - CNY
                      - COP
                      - CRC
                      - CVE
                      - CZK
                      - DJF
                      - DKK
                      - DOP
                      - DZD
                      - EEK
                      - EGP
                      - ERN
                      - ETB
                      - GBP
                      - GEL
                      - GHS
                      - GNF
                      - GTQ
                      - HKD
                      - HNL
                      - HRK
                      - HUF
                      - IDR
                      - ILS
                      - INR
                      - IQD
                      - IRR
                      - ISK
                      - JMD
                      - JOD
                      - JPY
                      - KES
                      - KHR
                      - KRW
                      - KWD
                      - KZT
                      - LBP
                      - LKR
                      - LTL
                      - LVL
                      - MAD
                      - MDL
                      - MGA
                      - MKD
                      - MMK
                      - MOP
                      - MUR
                      - MXN
                      - MYR
                      - MZN
                      - NAD
                      - NGN
                      - NIO
                      - NOK
                      - NPR
                      - NZD
                      - OMR
                      - PAB
                      - PEN
                      - PHP
                      - PKR
                      - PLN
                      - PYG
                      - QAR
                      - RON
                      - RSD
                      - RUB
                      - RWF
                      - SAR
                      - SDG
                      - SEK
                      - SGD
                      - SOS
                      - SYP
                      - THB
                      - TND
                      - TOP
                      - TRY
                      - TTD
                      - TWD
                      - TZS
                      - UAH
                      - UGX
                      - UYU
                      - UZS
                      - VEF
                      - VND
                      - XAF
                      - XOF
                      - YER
                      - ZAR
                      - ZMK
                    example: USD
                    description: Currency of the reward
                required:
                  - denomination
                  - currency_code
                example:
                  denomination: 50
                  currency_code: USD
              recipient:
                type: object
                description: Details of the recipient of the reward
                properties:
                  name:
                    type: string
                    description: Name of the recipient
                    example: John Doe Jr.
                  email:
                    type: string
                    description: Email address of the recipient
                    example: john.doe@example.com
                  phone:
                    type: string
                    description: >-
                      Phone number of the recipient. For non-US phone numbers,
                      specify the country code (prefixed with +).
                    example: 123-456-7890
              deliver_at:
                type: string
                format: date
                description: >-
                  Timestamp of reward delivery within the next year. Note that if
                  date-time is provided, the time values will be ignored.
                pattern: YYYY-MM-DD
                example: '2023-12-31'
              custom_fields:
                type: array
                items:
                  type: object
                  description: >-
                    Reward custom data for searching, tracking or copy (see
                    [Adding custom fields to
                    orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      readOnly: false
                      description: Tremendous ID of the custom field
                    value:
                      type: string
                      description: Value of the custom field
                      example: Hufflepuff
                      readOnly: false
                      nullable: true
                    label:
                      type: string
                      description: Label of the custom field
                      example: harry_potter_house
                      readOnly: false
              delivery:
                description: |
                  Details on how the reward is delivered to the recipient.
                type: object
                properties:
                  method:
                    description: |
                      How to deliver the reward to the recipient.

                      <table>
                        <thead>
                          <tr>
                            <th>Delivery Method</th>
                            <th>Description</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><code>EMAIL</code></td>
                            <td>Deliver the reward to the recipient by email</td>
                          </tr>
                          <tr>
                            <td><code>LINK</code></td>
                            <td>
                              <p>Deliver the reward to the recipient via a link.</p>
                              <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                            </td>
                          </tr>
                          <tr>
                            <td><code>PHONE</code></td>
                            <td>Deliver the reward to the recipient by SMS</td>
                          </tr>
                        </tbody>
                      </table>
                    type: string
                    enum:
                      - EMAIL
                      - LINK
                      - PHONE
                  status:
                    type: string
                    enum:
                      - SCHEDULED
                      - FAILED
                      - SUCCEEDED
                      - PENDING
                    description: >
                      Current status of the delivery of the reward:


                      * `SCHEDULED` - Reward is scheduled for delivery and will be
                      delivered soon.

                      * `FAILED` - Delivery of reward failed (e.g. email bounced).

                      * `SUCCEEDED` - Reward was successfully delivered (email or
                      text message delivered or reward link opened).

                      * `PENDING` - Delivery is pending but not yet scheduled.
                    readOnly: true
                required:
                  - method
                  - status
        required:
          - id
          - created_at
          - status
      RewardForOrderCreate:
        type: object
        description: >
          A single reward, sent to a recipient. A reward is always part of an
          order.


          Either `products` or `campaign_id` must be specified.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the reward
          order_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the order this reward is part of.
          created_at:
            type: string
            format: date-time
            description: Date the reward was created
            readOnly: true
          campaign_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            nullable: true
            description: >
              ID of the campaign in your account, that defines the available
              products (different gift cards, charity, etc.)

              that the recipient can choose from.
            writeOnly: true
          products:
            type: array
            writeOnly: true
            description: >
              List of IDs of product (different gift cards, charity, etc.) that
              will be available

              to the recipient to choose from.


              Providing a `products` array will override the products made
              available by the campaign

              specified using the `campaign_id` property unless the `products`
              array is empty. It will

              _not_ override other campaign attributes, like the message and
              customization of the look and feel.
            items:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: false
              writeOnly: true
            minItems: 1
          value:
            type: object
            properties:
              denomination:
                type: number
                format: double
                description: Amount of the reward
              currency_code:
                type: string
                enum:
                  - USD
                  - CAD
                  - EUR
                  - AED
                  - AFN
                  - ALL
                  - AMD
                  - ARS
                  - AUD
                  - AZN
                  - BAM
                  - BDT
                  - BGN
                  - BHD
                  - BIF
                  - BND
                  - BOB
                  - BRL
                  - BWP
                  - BYR
                  - BZD
                  - CDF
                  - CHF
                  - CLP
                  - CNY
                  - COP
                  - CRC
                  - CVE
                  - CZK
                  - DJF
                  - DKK
                  - DOP
                  - DZD
                  - EEK
                  - EGP
                  - ERN
                  - ETB
                  - GBP
                  - GEL
                  - GHS
                  - GNF
                  - GTQ
                  - HKD
                  - HNL
                  - HRK
                  - HUF
                  - IDR
                  - ILS
                  - INR
                  - IQD
                  - IRR
                  - ISK
                  - JMD
                  - JOD
                  - JPY
                  - KES
                  - KHR
                  - KRW
                  - KWD
                  - KZT
                  - LBP
                  - LKR
                  - LTL
                  - LVL
                  - MAD
                  - MDL
                  - MGA
                  - MKD
                  - MMK
                  - MOP
                  - MUR
                  - MXN
                  - MYR
                  - MZN
                  - NAD
                  - NGN
                  - NIO
                  - NOK
                  - NPR
                  - NZD
                  - OMR
                  - PAB
                  - PEN
                  - PHP
                  - PKR
                  - PLN
                  - PYG
                  - QAR
                  - RON
                  - RSD
                  - RUB
                  - RWF
                  - SAR
                  - SDG
                  - SEK
                  - SGD
                  - SOS
                  - SYP
                  - THB
                  - TND
                  - TOP
                  - TRY
                  - TTD
                  - TWD
                  - TZS
                  - UAH
                  - UGX
                  - UYU
                  - UZS
                  - VEF
                  - VND
                  - XAF
                  - XOF
                  - YER
                  - ZAR
                  - ZMK
                example: USD
                description: Currency of the reward
            required:
              - denomination
              - currency_code
            example:
              denomination: 50
              currency_code: USD
          recipient:
            type: object
            description: Details of the recipient of the reward
            properties:
              name:
                type: string
                description: Name of the recipient
                example: John Doe Jr.
              email:
                type: string
                description: Email address of the recipient
                example: john.doe@example.com
              phone:
                type: string
                description: >-
                  Phone number of the recipient. For non-US phone numbers, specify
                  the country code (prefixed with +).
                example: 123-456-7890
          deliver_at:
            type: string
            format: date
            description: >-
              Timestamp of reward delivery within the next year. Note that if
              date-time is provided, the time values will be ignored.
            pattern: YYYY-MM-DD
            example: '2023-12-31'
          custom_fields:
            type: array
            items:
              type: object
              description: >-
                Reward custom data for searching, tracking or copy (see [Adding
                custom fields to
                orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
              properties:
                id:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  description: Tremendous ID of the custom field
                value:
                  type: string
                  description: Value of the custom field
                  example: Hufflepuff
                  readOnly: false
                  nullable: true
                label:
                  type: string
                  description: Label of the custom field
                  example: harry_potter_house
                  readOnly: false
          language:
            type: string
            description: >
              Set this to translate the redemption experience for this reward.
              Pass a 2-letter [ISO-639-1
              code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) for the
              desired language. Defaults to `en`.
            example: de
          delivery:
            description: |
              Details on how the reward is delivered to the recipient.
            type: object
            properties:
              method:
                description: |
                  How to deliver the reward to the recipient.

                  <table>
                    <thead>
                      <tr>
                        <th>Delivery Method</th>
                        <th>Description</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td><code>EMAIL</code></td>
                        <td>Deliver the reward to the recipient by email</td>
                      </tr>
                      <tr>
                        <td><code>LINK</code></td>
                        <td>
                          <p>Deliver the reward to the recipient via a link.</p>
                          <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                        </td>
                      </tr>
                      <tr>
                        <td><code>PHONE</code></td>
                        <td>Deliver the reward to the recipient by SMS</td>
                      </tr>
                    </tbody>
                  </table>
                type: string
                enum:
                  - EMAIL
                  - LINK
                  - PHONE
      OrderForCreate:
        type: object
        properties:
          external_id:
            type: string
            nullable: true
            description: >
              Reference for this order, supplied by the customer.


              When set, `external_id` makes order idempotent. All requests that
              use the same `external_id`

              after the initial order creation, will result in a response that
              returns the data of the

              initially created order. The response will have a `201` response
              code. These responses

              **fail** to create any further orders.


              It also allows for retrieving by `external_id` instead of `id` only.
            example: Your-Individual-Identifier-for-This-Order
          payment:
            type: object
            properties:
              funding_source_id:
                type: string
                description: >-
                  Tremendous ID of the funding source that will be used to pay for
                  the order. Use `balance` to use your Tremendous's balance.
            required:
              - funding_source_id
          reward:
            type: object
            description: >
              A single reward, sent to a recipient. A reward is always part of an
              order.


              Either `products` or `campaign_id` must be specified.
            properties:
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: true
                description: Tremendous ID of the reward
              order_id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: true
                description: Tremendous ID of the order this reward is part of.
              created_at:
                type: string
                format: date-time
                description: Date the reward was created
                readOnly: true
              campaign_id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
                nullable: true
                description: >
                  ID of the campaign in your account, that defines the available
                  products (different gift cards, charity, etc.)

                  that the recipient can choose from.
                writeOnly: true
              products:
                type: array
                writeOnly: true
                description: >
                  List of IDs of product (different gift cards, charity, etc.)
                  that will be available

                  to the recipient to choose from.


                  Providing a `products` array will override the products made
                  available by the campaign

                  specified using the `campaign_id` property unless the `products`
                  array is empty. It will

                  _not_ override other campaign attributes, like the message and
                  customization of the look and feel.
                items:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  writeOnly: true
                minItems: 1
              value:
                type: object
                properties:
                  denomination:
                    type: number
                    format: double
                    description: Amount of the reward
                  currency_code:
                    type: string
                    enum:
                      - USD
                      - CAD
                      - EUR
                      - AED
                      - AFN
                      - ALL
                      - AMD
                      - ARS
                      - AUD
                      - AZN
                      - BAM
                      - BDT
                      - BGN
                      - BHD
                      - BIF
                      - BND
                      - BOB
                      - BRL
                      - BWP
                      - BYR
                      - BZD
                      - CDF
                      - CHF
                      - CLP
                      - CNY
                      - COP
                      - CRC
                      - CVE
                      - CZK
                      - DJF
                      - DKK
                      - DOP
                      - DZD
                      - EEK
                      - EGP
                      - ERN
                      - ETB
                      - GBP
                      - GEL
                      - GHS
                      - GNF
                      - GTQ
                      - HKD
                      - HNL
                      - HRK
                      - HUF
                      - IDR
                      - ILS
                      - INR
                      - IQD
                      - IRR
                      - ISK
                      - JMD
                      - JOD
                      - JPY
                      - KES
                      - KHR
                      - KRW
                      - KWD
                      - KZT
                      - LBP
                      - LKR
                      - LTL
                      - LVL
                      - MAD
                      - MDL
                      - MGA
                      - MKD
                      - MMK
                      - MOP
                      - MUR
                      - MXN
                      - MYR
                      - MZN
                      - NAD
                      - NGN
                      - NIO
                      - NOK
                      - NPR
                      - NZD
                      - OMR
                      - PAB
                      - PEN
                      - PHP
                      - PKR
                      - PLN
                      - PYG
                      - QAR
                      - RON
                      - RSD
                      - RUB
                      - RWF
                      - SAR
                      - SDG
                      - SEK
                      - SGD
                      - SOS
                      - SYP
                      - THB
                      - TND
                      - TOP
                      - TRY
                      - TTD
                      - TWD
                      - TZS
                      - UAH
                      - UGX
                      - UYU
                      - UZS
                      - VEF
                      - VND
                      - XAF
                      - XOF
                      - YER
                      - ZAR
                      - ZMK
                    example: USD
                    description: Currency of the reward
                required:
                  - denomination
                  - currency_code
                example:
                  denomination: 50
                  currency_code: USD
              recipient:
                type: object
                description: Details of the recipient of the reward
                properties:
                  name:
                    type: string
                    description: Name of the recipient
                    example: John Doe Jr.
                  email:
                    type: string
                    description: Email address of the recipient
                    example: john.doe@example.com
                  phone:
                    type: string
                    description: >-
                      Phone number of the recipient. For non-US phone numbers,
                      specify the country code (prefixed with +).
                    example: 123-456-7890
              deliver_at:
                type: string
                format: date
                description: >-
                  Timestamp of reward delivery within the next year. Note that if
                  date-time is provided, the time values will be ignored.
                pattern: YYYY-MM-DD
                example: '2023-12-31'
              custom_fields:
                type: array
                items:
                  type: object
                  description: >-
                    Reward custom data for searching, tracking or copy (see
                    [Adding custom fields to
                    orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      readOnly: false
                      description: Tremendous ID of the custom field
                    value:
                      type: string
                      description: Value of the custom field
                      example: Hufflepuff
                      readOnly: false
                      nullable: true
                    label:
                      type: string
                      description: Label of the custom field
                      example: harry_potter_house
                      readOnly: false
              language:
                type: string
                description: >
                  Set this to translate the redemption experience for this reward.
                  Pass a 2-letter [ISO-639-1
                  code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) for
                  the desired language. Defaults to `en`.
                example: de
              delivery:
                description: |
                  Details on how the reward is delivered to the recipient.
                type: object
                properties:
                  method:
                    description: |
                      How to deliver the reward to the recipient.

                      <table>
                        <thead>
                          <tr>
                            <th>Delivery Method</th>
                            <th>Description</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><code>EMAIL</code></td>
                            <td>Deliver the reward to the recipient by email</td>
                          </tr>
                          <tr>
                            <td><code>LINK</code></td>
                            <td>
                              <p>Deliver the reward to the recipient via a link.</p>
                              <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                            </td>
                          </tr>
                          <tr>
                            <td><code>PHONE</code></td>
                            <td>Deliver the reward to the recipient by SMS</td>
                          </tr>
                        </tbody>
                      </table>
                    type: string
                    enum:
                      - EMAIL
                      - LINK
                      - PHONE
        required:
          - payment
          - reward
      DeliveryDetailsWithLink:
        type: object
        description: |
          Details on how the reward is delivered to the recipient.
        properties:
          method:
            description: |
              How to deliver the reward to the recipient.

              <table>
                <thead>
                  <tr>
                    <th>Delivery Method</th>
                    <th>Description</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><code>EMAIL</code></td>
                    <td>Deliver the reward to the recipient by email</td>
                  </tr>
                  <tr>
                    <td><code>LINK</code></td>
                    <td>
                      <p>Deliver the reward to the recipient via a link.</p>
                      <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                    </td>
                  </tr>
                  <tr>
                    <td><code>PHONE</code></td>
                    <td>Deliver the reward to the recipient by SMS</td>
                  </tr>
                </tbody>
              </table>
            type: string
            enum:
              - EMAIL
              - LINK
              - PHONE
          status:
            type: string
            enum:
              - SCHEDULED
              - FAILED
              - SUCCEEDED
              - PENDING
            description: >
              Current status of the delivery of the reward:


              * `SCHEDULED` - Reward is scheduled for delivery and will be
              delivered soon.

              * `FAILED` - Delivery of reward failed (e.g. email bounced).

              * `SUCCEEDED` - Reward was successfully delivered (email or text
              message delivered or reward link opened).

              * `PENDING` - Delivery is pending but not yet scheduled.
            readOnly: true
          link:
            type: string
            description: >
              Link to redeem the reward at. You need to deliver this link to the
              recipient.


              Only available for rewards for which the `method` for delivery is
              set to `LINK`.
            example: https://testflight.tremendous.com/rewards/payout/z67jic92r
            readOnly: true
        required:
          - method
          - status
      RewardWithLink:
        type: object
        description: >
          A single reward, sent to a recipient. A reward is always part of an
          order.


          Either `products` or `campaign_id` must be specified.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the reward
          order_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the order this reward is part of.
          created_at:
            type: string
            format: date-time
            description: Date the reward was created
            readOnly: true
          campaign_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            nullable: true
            description: >
              ID of the campaign in your account, that defines the available
              products (different gift cards, charity, etc.)

              that the recipient can choose from.
            writeOnly: true
          products:
            type: array
            writeOnly: true
            description: >
              List of IDs of product (different gift cards, charity, etc.) that
              will be available

              to the recipient to choose from.


              Providing a `products` array will override the products made
              available by the campaign

              specified using the `campaign_id` property unless the `products`
              array is empty. It will

              _not_ override other campaign attributes, like the message and
              customization of the look and feel.
            items:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: false
              writeOnly: true
            minItems: 1
          value:
            type: object
            properties:
              denomination:
                type: number
                format: double
                description: Amount of the reward
              currency_code:
                type: string
                enum:
                  - USD
                  - CAD
                  - EUR
                  - AED
                  - AFN
                  - ALL
                  - AMD
                  - ARS
                  - AUD
                  - AZN
                  - BAM
                  - BDT
                  - BGN
                  - BHD
                  - BIF
                  - BND
                  - BOB
                  - BRL
                  - BWP
                  - BYR
                  - BZD
                  - CDF
                  - CHF
                  - CLP
                  - CNY
                  - COP
                  - CRC
                  - CVE
                  - CZK
                  - DJF
                  - DKK
                  - DOP
                  - DZD
                  - EEK
                  - EGP
                  - ERN
                  - ETB
                  - GBP
                  - GEL
                  - GHS
                  - GNF
                  - GTQ
                  - HKD
                  - HNL
                  - HRK
                  - HUF
                  - IDR
                  - ILS
                  - INR
                  - IQD
                  - IRR
                  - ISK
                  - JMD
                  - JOD
                  - JPY
                  - KES
                  - KHR
                  - KRW
                  - KWD
                  - KZT
                  - LBP
                  - LKR
                  - LTL
                  - LVL
                  - MAD
                  - MDL
                  - MGA
                  - MKD
                  - MMK
                  - MOP
                  - MUR
                  - MXN
                  - MYR
                  - MZN
                  - NAD
                  - NGN
                  - NIO
                  - NOK
                  - NPR
                  - NZD
                  - OMR
                  - PAB
                  - PEN
                  - PHP
                  - PKR
                  - PLN
                  - PYG
                  - QAR
                  - RON
                  - RSD
                  - RUB
                  - RWF
                  - SAR
                  - SDG
                  - SEK
                  - SGD
                  - SOS
                  - SYP
                  - THB
                  - TND
                  - TOP
                  - TRY
                  - TTD
                  - TWD
                  - TZS
                  - UAH
                  - UGX
                  - UYU
                  - UZS
                  - VEF
                  - VND
                  - XAF
                  - XOF
                  - YER
                  - ZAR
                  - ZMK
                example: USD
                description: Currency of the reward
            required:
              - denomination
              - currency_code
            example:
              denomination: 50
              currency_code: USD
          recipient:
            type: object
            description: Details of the recipient of the reward
            properties:
              name:
                type: string
                description: Name of the recipient
                example: John Doe Jr.
              email:
                type: string
                description: Email address of the recipient
                example: john.doe@example.com
              phone:
                type: string
                description: >-
                  Phone number of the recipient. For non-US phone numbers, specify
                  the country code (prefixed with +).
                example: 123-456-7890
          deliver_at:
            type: string
            format: date
            description: >-
              Timestamp of reward delivery within the next year. Note that if
              date-time is provided, the time values will be ignored.
            pattern: YYYY-MM-DD
            example: '2023-12-31'
          custom_fields:
            type: array
            items:
              type: object
              description: >-
                Reward custom data for searching, tracking or copy (see [Adding
                custom fields to
                orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
              properties:
                id:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  description: Tremendous ID of the custom field
                value:
                  type: string
                  description: Value of the custom field
                  example: Hufflepuff
                  readOnly: false
                  nullable: true
                label:
                  type: string
                  description: Label of the custom field
                  example: harry_potter_house
                  readOnly: false
          delivery:
            type: object
            description: |
              Details on how the reward is delivered to the recipient.
            properties:
              method:
                description: |
                  How to deliver the reward to the recipient.

                  <table>
                    <thead>
                      <tr>
                        <th>Delivery Method</th>
                        <th>Description</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td><code>EMAIL</code></td>
                        <td>Deliver the reward to the recipient by email</td>
                      </tr>
                      <tr>
                        <td><code>LINK</code></td>
                        <td>
                          <p>Deliver the reward to the recipient via a link.</p>
                          <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                        </td>
                      </tr>
                      <tr>
                        <td><code>PHONE</code></td>
                        <td>Deliver the reward to the recipient by SMS</td>
                      </tr>
                    </tbody>
                  </table>
                type: string
                enum:
                  - EMAIL
                  - LINK
                  - PHONE
              status:
                type: string
                enum:
                  - SCHEDULED
                  - FAILED
                  - SUCCEEDED
                  - PENDING
                description: >
                  Current status of the delivery of the reward:


                  * `SCHEDULED` - Reward is scheduled for delivery and will be
                  delivered soon.

                  * `FAILED` - Delivery of reward failed (e.g. email bounced).

                  * `SUCCEEDED` - Reward was successfully delivered (email or text
                  message delivered or reward link opened).

                  * `PENDING` - Delivery is pending but not yet scheduled.
                readOnly: true
              link:
                type: string
                description: >
                  Link to redeem the reward at. You need to deliver this link to
                  the recipient.


                  Only available for rewards for which the `method` for delivery
                  is set to `LINK`.
                example: https://testflight.tremendous.com/rewards/payout/z67jic92r
                readOnly: true
            required:
              - method
              - status
      OrderWithLink:
        type: object
        description: An order wraps around the fulfilment of one or more rewards.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the order
          external_id:
            type: string
            nullable: true
            description: >
              Reference for this order, supplied by the customer.


              When set, `external_id` makes order idempotent. All requests that
              use the same `external_id`

              after the initial order creation, will result in a response that
              returns the data of the

              initially created order. The response will have a `201` response
              code. These responses

              **fail** to create any further orders.


              It also allows for retrieving by `external_id` instead of `id` only.
            example: Your-Individual-Identifier-for-This-Order
          campaign_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: IVM0I3WNJJL0
            readOnly: true
            nullable: true
            description: >
              ID of the campaign in your account, that defines the available
              products (different gift cards, charity, etc.)

              that the recipient can choose from.
          created_at:
            type: string
            format: date-time
            description: Date the order has been created
            readOnly: true
          status:
            type: string
            description: |
              Execution status of a given order

              <table>
                <thead>
                  <tr>
                    <th>
                      Status
                    </th>
                    <th>
                      Description
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>
                      <code>
                        CANCELED
                      </code>
                    </td>
                    <td>
                      The order and all of its rewards were canceled.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        CART
                      </code>
                    </td>
                    <td>
                      The order has been created, but hasn't yet been processed.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        EXECUTED
                      </code>
                    </td>
                    <td>
                      The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        FAILED
                      </code>
                    </td>
                    <td>
                      The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        PENDING APPROVAL
                      </code>
                    </td>
                    <td>
                      The order has been created but needs approval to be executed.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        PENDING INTERNAL PAYMENT APPROVAL
                      </code>
                    </td>
                    <td>
                      The order has been created but it is under review and requires approval from our team.
                    </td>
                  </tr>

                </tbody>
              </table>
            enum:
              - CANCELED
              - CART
              - EXECUTED
              - FAILED
              - PENDING APPROVAL
              - PENDING INTERNAL PAYMENT APPROVAL
            readOnly: true
          payment:
            type: object
            properties:
              subtotal:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Total price of the order before fees (in USD)
                example: 50
              total:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Total price of the order including fees (in USD)
                example: 52.5
              fees:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Fees for the order (in USD)
                example: 2.5
              refund:
                type: object
                properties:
                  total:
                    type: number
                    format: double
                    minimum: 0
                    readOnly: true
                    description: Total amount of the order refunds (in USD)
                    example: 52.5
                required:
                  - total
                description: >
                  Breakdown of the order refunds (total amount in USD, independent
                  from the currency of the ordered rewards).

                  Note that this property will only appear for canceled orders or
                  orders with canceled rewards.
              channel:
                type: string
                description: Name of the channel in which the order was created
                enum:
                  - UI
                  - API
                  - EMBED
                  - DECIPHER
                  - QUALTRICS
                  - TYPEFORM
                  - SURVEY MONKEY
            description: >-
              Cost breakdown of the order (cost of rewards + fees). Cost and fees
              are always denominated in USD, independent from the currency of the
              ordered rewards.

              Note that this property will only appear for processed orders
              (`status` is `EXECUTED`).
          invoice_id:
            type: string
            description: The ID for the invoice associated with this order
            readOnly: true
            example: 2E59A82B-0001
          rewards:
            type: array
            minItems: 1
            items:
              type: object
              description: >
                A single reward, sent to a recipient. A reward is always part of
                an order.


                Either `products` or `campaign_id` must be specified.
              properties:
                id:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: true
                  description: Tremendous ID of the reward
                order_id:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: true
                  description: Tremendous ID of the order this reward is part of.
                created_at:
                  type: string
                  format: date-time
                  description: Date the reward was created
                  readOnly: true
                campaign_id:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  nullable: true
                  description: >
                    ID of the campaign in your account, that defines the available
                    products (different gift cards, charity, etc.)

                    that the recipient can choose from.
                  writeOnly: true
                products:
                  type: array
                  writeOnly: true
                  description: >
                    List of IDs of product (different gift cards, charity, etc.)
                    that will be available

                    to the recipient to choose from.


                    Providing a `products` array will override the products made
                    available by the campaign

                    specified using the `campaign_id` property unless the
                    `products` array is empty. It will

                    _not_ override other campaign attributes, like the message and
                    customization of the look and feel.
                  items:
                    type: string
                    pattern: '[A-Z0-9]{4,20}'
                    example: SOMEIDSOMEID
                    readOnly: false
                    writeOnly: true
                  minItems: 1
                value:
                  type: object
                  properties:
                    denomination:
                      type: number
                      format: double
                      description: Amount of the reward
                    currency_code:
                      type: string
                      enum:
                        - USD
                        - CAD
                        - EUR
                        - AED
                        - AFN
                        - ALL
                        - AMD
                        - ARS
                        - AUD
                        - AZN
                        - BAM
                        - BDT
                        - BGN
                        - BHD
                        - BIF
                        - BND
                        - BOB
                        - BRL
                        - BWP
                        - BYR
                        - BZD
                        - CDF
                        - CHF
                        - CLP
                        - CNY
                        - COP
                        - CRC
                        - CVE
                        - CZK
                        - DJF
                        - DKK
                        - DOP
                        - DZD
                        - EEK
                        - EGP
                        - ERN
                        - ETB
                        - GBP
                        - GEL
                        - GHS
                        - GNF
                        - GTQ
                        - HKD
                        - HNL
                        - HRK
                        - HUF
                        - IDR
                        - ILS
                        - INR
                        - IQD
                        - IRR
                        - ISK
                        - JMD
                        - JOD
                        - JPY
                        - KES
                        - KHR
                        - KRW
                        - KWD
                        - KZT
                        - LBP
                        - LKR
                        - LTL
                        - LVL
                        - MAD
                        - MDL
                        - MGA
                        - MKD
                        - MMK
                        - MOP
                        - MUR
                        - MXN
                        - MYR
                        - MZN
                        - NAD
                        - NGN
                        - NIO
                        - NOK
                        - NPR
                        - NZD
                        - OMR
                        - PAB
                        - PEN
                        - PHP
                        - PKR
                        - PLN
                        - PYG
                        - QAR
                        - RON
                        - RSD
                        - RUB
                        - RWF
                        - SAR
                        - SDG
                        - SEK
                        - SGD
                        - SOS
                        - SYP
                        - THB
                        - TND
                        - TOP
                        - TRY
                        - TTD
                        - TWD
                        - TZS
                        - UAH
                        - UGX
                        - UYU
                        - UZS
                        - VEF
                        - VND
                        - XAF
                        - XOF
                        - YER
                        - ZAR
                        - ZMK
                      example: USD
                      description: Currency of the reward
                  required:
                    - denomination
                    - currency_code
                  example:
                    denomination: 50
                    currency_code: USD
                recipient:
                  type: object
                  description: Details of the recipient of the reward
                  properties:
                    name:
                      type: string
                      description: Name of the recipient
                      example: John Doe Jr.
                    email:
                      type: string
                      description: Email address of the recipient
                      example: john.doe@example.com
                    phone:
                      type: string
                      description: >-
                        Phone number of the recipient. For non-US phone numbers,
                        specify the country code (prefixed with +).
                      example: 123-456-7890
                deliver_at:
                  type: string
                  format: date
                  description: >-
                    Timestamp of reward delivery within the next year. Note that
                    if date-time is provided, the time values will be ignored.
                  pattern: YYYY-MM-DD
                  example: '2023-12-31'
                custom_fields:
                  type: array
                  items:
                    type: object
                    description: >-
                      Reward custom data for searching, tracking or copy (see
                      [Adding custom fields to
                      orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                    properties:
                      id:
                        type: string
                        pattern: '[A-Z0-9]{4,20}'
                        example: SOMEIDSOMEID
                        readOnly: false
                        description: Tremendous ID of the custom field
                      value:
                        type: string
                        description: Value of the custom field
                        example: Hufflepuff
                        readOnly: false
                        nullable: true
                      label:
                        type: string
                        description: Label of the custom field
                        example: harry_potter_house
                        readOnly: false
                delivery:
                  type: object
                  description: |
                    Details on how the reward is delivered to the recipient.
                  properties:
                    method:
                      description: |
                        How to deliver the reward to the recipient.

                        <table>
                          <thead>
                            <tr>
                              <th>Delivery Method</th>
                              <th>Description</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                              <td><code>EMAIL</code></td>
                              <td>Deliver the reward to the recipient by email</td>
                            </tr>
                            <tr>
                              <td><code>LINK</code></td>
                              <td>
                                <p>Deliver the reward to the recipient via a link.</p>
                                <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                              </td>
                            </tr>
                            <tr>
                              <td><code>PHONE</code></td>
                              <td>Deliver the reward to the recipient by SMS</td>
                            </tr>
                          </tbody>
                        </table>
                      type: string
                      enum:
                        - EMAIL
                        - LINK
                        - PHONE
                    status:
                      type: string
                      enum:
                        - SCHEDULED
                        - FAILED
                        - SUCCEEDED
                        - PENDING
                      description: >
                        Current status of the delivery of the reward:


                        * `SCHEDULED` - Reward is scheduled for delivery and will
                        be delivered soon.

                        * `FAILED` - Delivery of reward failed (e.g. email
                        bounced).

                        * `SUCCEEDED` - Reward was successfully delivered (email
                        or text message delivered or reward link opened).

                        * `PENDING` - Delivery is pending but not yet scheduled.
                      readOnly: true
                    link:
                      type: string
                      description: >
                        Link to redeem the reward at. You need to deliver this
                        link to the recipient.


                        Only available for rewards for which the `method` for
                        delivery is set to `LINK`.
                      example: https://testflight.tremendous.com/rewards/payout/z67jic92r
                      readOnly: true
                  required:
                    - method
                    - status
        required:
          - id
          - created_at
          - status
      Product:
        type: object
        description: >
          A product represents one way to payout a reward to it's recipient.
          Think:


          * Amazon.com gift card (ID: `OKMHM2X2OHYV`)

          * Donations to Save the Children (ID: `ESRNAD533W5A`)

          * Virtual Visa debit card (ID: `Q24BD9EZ332JT`)


          each of which is one specific product on Tremendous.


          > 📘 All available products

          >

          > See this [list](https://www.tremendous.com/catalog)


          Products can be limited in their availability to recipients by


          * geography (field `countries`)

          * currency (field `currencies`)

          * amount of the reward (field `skus`)
            * e.g. adidas gift cards accept any amount between 5 and 200 USD.

          See the description of each respective parameter for further details.
        required:
          - id
          - name
          - description
          - category
          - disclosure
          - currency_codes
          - countries
          - images
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          name:
            type: string
            description: Name of the product
          description:
            type: string
            description: >-
              Detailed description of the product. Mostly used for products with a
              `category` of `charities`.
          category:
            type: string
            description: |
              The category of this product

              <table>
                <thead>
                  <tr>
                    <th>Category</th>
                    <th>Description</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><code>ach</code></td>
                    <td>Bank transfer to the recipient</td>
                  </tr>
                  <tr>
                    <td><code>charity</code></td>
                    <td>Donations to a charity</td>
                  </tr>
                  <tr>
                    <td><code>merchant_card</code></td>
                    <td>A gift card for a certain merchant (e.g. Amazon)</td>
                  </tr>
                  <tr>
                    <td><code>paypal</code></td>
                    <td>Payout via PayPal</td>
                  </tr>
                  <tr>
                    <td><code>venmo</code></td>
                    <td>Payout via Venmo</td>
                  </tr>
                  <tr>
                    <td><code>visa_card</code></td>
                    <td>Payout in form of a Visa debit card</td>
                  </tr>
                </tbody>
              </table>
            enum:
              - ach
              - charity
              - merchant_card
              - paypal
              - venmo
              - visa_card
            example: charities
          disclosure:
            type: string
            description: Legal disclosures for this product. Can be in HTML format.
            example: >-
              <ul><li><p>This card may not be exchanged for
              cash.</p></li><li><p>…</p></li></ul>
          skus:
            type: array
            description: >
              Products may are restricted in their usage based on the amount of
              the reward. The `skus` array defines bands of denominations in which
              this product may be used for payouts.
            items:
              type: object
              required:
                - min
                - max
              properties:
                min:
                  type: number
                  description: >-
                    Minimal denomination that this product supports (in the
                    product's currency)
                  minimum: 0
                  example: 20
                max:
                  type: number
                  description: >-
                    Maximum denomination that this product supports (in the
                    product's currency)
                  minimum: 0
                  example: 100
              example:
                - min: 20
                  max: 100
              minItems: 0
          currency_codes:
            type: array
            description: Available currencies for this product
            minItems: 1
            items:
              type: string
              enum:
                - USD
                - CAD
                - EUR
                - AED
                - AFN
                - ALL
                - AMD
                - ARS
                - AUD
                - AZN
                - BAM
                - BDT
                - BGN
                - BHD
                - BIF
                - BND
                - BOB
                - BRL
                - BWP
                - BYR
                - BZD
                - CDF
                - CHF
                - CLP
                - CNY
                - COP
                - CRC
                - CVE
                - CZK
                - DJF
                - DKK
                - DOP
                - DZD
                - EEK
                - EGP
                - ERN
                - ETB
                - GBP
                - GEL
                - GHS
                - GNF
                - GTQ
                - HKD
                - HNL
                - HRK
                - HUF
                - IDR
                - ILS
                - INR
                - IQD
                - IRR
                - ISK
                - JMD
                - JOD
                - JPY
                - KES
                - KHR
                - KRW
                - KWD
                - KZT
                - LBP
                - LKR
                - LTL
                - LVL
                - MAD
                - MDL
                - MGA
                - MKD
                - MMK
                - MOP
                - MUR
                - MXN
                - MYR
                - MZN
                - NAD
                - NGN
                - NIO
                - NOK
                - NPR
                - NZD
                - OMR
                - PAB
                - PEN
                - PHP
                - PKR
                - PLN
                - PYG
                - QAR
                - RON
                - RSD
                - RUB
                - RWF
                - SAR
                - SDG
                - SEK
                - SGD
                - SOS
                - SYP
                - THB
                - TND
                - TOP
                - TRY
                - TTD
                - TWD
                - TZS
                - UAH
                - UGX
                - UYU
                - UZS
                - VEF
                - VND
                - XAF
                - XOF
                - YER
                - ZAR
                - ZMK
              example: USD
          countries:
            type: array
            description: List of countries in which this product is available to recipients.
            items:
              type: object
              required:
                - abbr
              properties:
                abbr:
                  type: string
                  description: ISO 3166 country code
                  example: US
            minItems: 1
            example:
              - abbr: US
          images:
            type: array
            description: >-
              List of product images associated with this product (e.g. logos or
              images of the gift cards)
            items:
              type: object
              properties:
                src:
                  type: string
                  description: URL to this image
                  format: uri
                type:
                  type: string
                  description: Type of image
                  enum:
                    - card
                    - logo
              required:
                - src
                - type
            minItems: 0
            example:
              - src: https://example.com/some-logo.jpg
                type: logo
      Campaign:
        type: object
        description: >
          With a campaign you can define the look & feel of how rewards are sent
          out.

          It also lets you set the available products (different gift cards,
          charity, etc.)

          recipients can choose from.


          > Note: Campaigns must be created from the Tremendous dashboard.

          >

          > • [Production Dashboard](https://app.tremendous.com)

          > • [Sandbox Dashboard](https://app.testflight.tremendous.com/)
        required:
          - id
          - name
          - description
          - products
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          name:
            description: Name of the campaign
            type: string
            example: My Default Campaign
          description:
            description: Description of the campaign
            type: string
            example: A campaign I use as the default in Tremendous"
            nullable: true
          products:
            type: array
            description: >
              List of IDs of products (different gift cards, charity, etc.) that
              are available in this campaign.
            items:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: true
            example:
              - P3MR06THYM8R
              - EFMULTF26PMR
      FundingSource:
        type: object
        description: ''
        required:
          - id
          - method
          - meta
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          method:
            type: string
            description: >
              You can pay for rewards using different payment methods on
              Tremendous:


              <table>
                <thead>
                  <tr>
                    <th>Payment Method</th>
                    <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><code>balance</code></td>
                    <td>Pre-funded balance in your Tremendous account to draw funds from to send rewards to recipients.</td>
                  </tr>
                  <tr>
                    <td><code>bank_account</code></td>
                    <td>Bank account to draw funds from to send rewards to recipients.</td>
                  </tr>
                  <tr>
                    <td><code>credit_card</code></td>
                    <td>Credit card to draw funds from to send rewards to recipients.</td>
                  </tr>
                  <tr>
                    <td><code>invoice</code></td>
                    <td>Send rewards to recipients and pay by invoice.</td>
                  </tr>

                </tbody>
              </table>
            enum:
              - balance
              - bank_account
              - credit_card
              - invoice
            example: balance
          type:
            type: string
            description: |
              **Only available when `method` is set to `invoice`.**
            enum:
              - COMMERCIAL
              - PRO_FORMA
              - PREFUNDING_ONLY
            example: COMMERCIAL
          meta:
            type: object
            properties:
              available_cents:
                type: integer
                description: |
                  **Only available when `method` is set to `balance`.**

                  Available amount for this funding source (in Cents USD)
                example: 50000
              pending_cents:
                type: integer
                description: >
                  **Only available when `method` is set to `balance`.**


                  Funds that are already registered on your Tremendous account but
                  which have not yet been deposited in your account (e.g. unpaid
                  invoices) (in Cents USD).
                example: 25000
              accountholder_name:
                type: string
                description: >
                  **Only available when `method` is set to `bank_account` or
                  `credit_card`.**


                  Name of the holder of the bank account or credit_card
                example: Jane Doe
              account_type:
                type: string
                description: |
                  **Only available when `method` is set to `bank_account`.**

                  Is this a checking or savings account
                enum:
                  - checking
                  - savings
                example: checking
              bank_name:
                type: string
                description: |
                  **Only available when `method` is set to `bank_account`.**

                  Name of the bank
                example: Bank of Fancyland
                nullable: true
              account_number_mask:
                type: string
                description: |
                  **Only available when `method` is set to `bank_account`.**

                  Last 4 digits of the account number
                pattern: '[0-9]{4}'
                example: '1234'
              account_routing_mask:
                type: string
                description: |
                  **Only available when `method` is set to `bank_account`.**

                  Last 4 digits of the routing number
                pattern: '[0-9]{4}'
                example: '5678'
              refundable:
                type: boolean
                description: |
                  **Only available when `method` is set to `bank_account`.**

                  Can refunds be deposited to this bank account
                example: false
              network:
                type: string
                description: |
                  **Only available when `method` is set to `credit_card`.**

                  Network of the credit card
                enum:
                  - MasterCard
                  - Amex
                  - JCB
                  - Diner's Club
                  - visa
                  - discover
                  - laser
                  - elo
                  - maestro
                  - solo
                example: Amex
              last4:
                type: string
                description: |
                  **Only available when `method` is set to `credit_card`.**

                  Last 4 digits of the credit card number
                pattern: '[0-9]{4}'
                example: '1234'
              expired:
                type: boolean
                description: |
                  **Only available when `method` is set to `credit_card`.**

                  Is this credit card expired
                example: false
              last_payment_failed_at:
                type: string
                format: date-time
                nullable: true
                description: >
                  **Only available when `method` is set to `bank_account` or
                  `credit_card`.**


                  Point in time when the last order failed using this bank account
                  or credit card as a funding source.
      Invoice:
        type: object
        description: |
          Invoices are instruments to fund your Tremendous account's balance.

          Invoices can be created by your organization programatically.
          Once we receive your payment, the invoice is marked as `PAID` and we add
          the respective funds to your account's balance.
        required:
          - id
          - amount
          - status
          - created_at
          - paid_at
        properties:
          id:
            type: string
            description: The invoice number
            example: PPS-26873
          po_number:
            type: string
            description: Reference to the purchase order number within your organization
            nullable: true
            example: 123-PO-EE
          amount:
            type: number
            format: double
            description: Amount of the invoice in USD
            example: 50.35
          status:
            type: string
            description: |
              Status of this invoice

              <table>
                <thead>
                  <tr>
                    <th>Status</th>
                    <th>Description</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td><code>DELETED</code></td>
                    <td>Invoice has been deleted by your organization</td>
                  </tr>
                  <tr>
                    <td><code>PAID</code></td>
                    <td>Invoice has been paid by your organization</td>
                  </tr>
                  <tr>
                    <td><code>OPEN</code></td>
                    <td>Invoice has been created by your organization but has not been paid, yet</td>
                  </tr>
                </tbody>
              </table>
            enum:
              - DELETED
              - PAID
              - OPEN
              - MARKED_AS_PAID
            example: PAID
          orders:
            type: array
            description: >-
              List of orders related to the invoice (it doesn't apply to
              prefunding)
            items:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: true
            example:
              - ABC123456789
              - DEF123456789
          rewards:
            type: array
            description: >-
              List of rewards related to the invoice (it doesn't apply to
              prefunding)
            items:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: true
            example:
              - ABC123456789
              - DEF123456789
          created_at:
            type: string
            format: date
            description: |
              Timestamp of when the invoice has been created.
          paid_at:
            type: string
            format: date
            nullable: true
            description: |
              Timestamp of when the invoice has been paid.
      CreateInvoice:
        type: object
        properties:
          po_number:
            type: string
            description: Reference to the purchase order number within your organization
            nullable: true
            example: 123-PO-EE
          amount:
            type: number
            format: double
            description: Amount of the invoice in USD
            example: 50.35
          memo:
            type: string
            nullable: true
            description: >
              A note to be included in the invoice. This is for your internal use
              and will not be visible to the recipient.
        required:
          - amount
      BalanceTransaction:
        type: object
        description: >
          A balance transaction represents a specific movement or change in an
          account's balance.
        properties:
          created_at:
            type: string
            format: date
            description: Date that the transaction was created
          amount:
            type: number
            format: double
            description: Amount of the transaction in USD
            example: 50.35
          balance:
            type: number
            format: double
            description: >-
              The updated total after the transaction. Note that this running
              balance may be delayed and contain `null`.
            example: 92.48
          action:
            type: string
            description: The action that was performed
            example: Deposit
          description:
            type: string
            description: A brief description of the transaction
      Organization:
        type: object
        description: >
          Organizations are a way to separate different parts of your business
          within the same Tremendous account.

          Your root Tremendous account is an organization itself and can have
          multiple sub-organizations.


          You can assign users in your Tremendous team as members to any
          organization. Users can be members of multiple

          organizations at once.


          Each organizations can have it's own API key.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          name:
            type: string
            description: Name of the organization
            example: ACME Inc.
          website:
            type: string
            format: uri
            description: URL of the website of that organization
            example: https://www.example.com/some-org
          status:
            type: string
            enum:
              - PENDING
              - APPROVED
              - REJECTED
            description: >-
              Status of the organization. Organizations need to be approved to be
              able to use them to send out rewards.
            readOnly: true
            example: APPROVED
          created_at:
            type: string
            format: date
            readOnly: true
            description: >
              Timestamp of when the organization has been created.


              *This field is only returned when creating an organization.* It is
              not returned anymore when retrieving or listing organizations.
            example: '2021-08-02'
        required:
          - name
          - website
      CreateOrganization:
        type: object
        properties:
          name:
            type: string
            description: Name of the organization
            example: ACME Inc.
          website:
            type: string
            format: uri
            description: URL of the website of that organization
            example: https://www.example.com/some-org
          with_api_key:
            type: boolean
            description: >-
              Default value is `false`. Set to true to also generate an API key
              associated to the new organization.
            example: true
          copy_settings:
            type: object
            description: >-
              A list of the settings that you wish to copy over to the new
              organization.
            properties:
              campaigns:
                type: boolean
                description: >-
                  Copy over the campaigns from the current organization to the new
                  organization. Defaults to `false`.
                default: false
                example: false
              custom_fields:
                type: boolean
                description: >-
                  Copy over the custom fields from the current organization to the
                  new organization. Defaults to `false`.
                default: false
                example: false
              order_approvals:
                type: boolean
                description: >-
                  Copy over the order approvals settings from the current
                  organization to the new organization. Defaults to `false`.
                default: false
                example: false
              payment_methods:
                type: boolean
                description: >-
                  Copy over the payment methods from the current organization to
                  the new organization. Defaults to `false`.
                default: false
                example: false
              security_settings:
                type: boolean
                description: >-
                  Copy over the security settings from the current organization to
                  the new organization. Defaults to `true`.
                default: true
                example: true
              users:
                type: boolean
                description: >-
                  Copy over the users from the current organization to the new
                  organization. Defaults to `false`.
                default: false
                example: false
              fraud_prevention:
                type: boolean
                description: >-
                  Copy over the fraud prevention settings and rules from the
                  current organization to the new organization. Defaults to
                  `false`.
                default: false
                example: false
          phone:
            type: string
            description: >-
              Phone number of the organization. For non-US phone numbers, specify
              the country code (prefixed with +).
            example: 123-456-7890
        required:
          - name
          - website
      MemberBase:
        type: object
        description: >
          Each organization has one or more users that can access and manage that
          organization. These users are called members.


          Members can take actions via the Tremendous web dashboard directly.


          These actions include adding funding sources to the organization,
          creating Campaigns, and more.
        required:
          - id
          - name
          - email
          - role
          - status
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          email:
            type: string
            description: Email address of the member
            format: email
            example: jane@example.com
          name:
            type: string
            description: Full name of the member
            example: Jane Doe
            nullable: true
          role:
            type: string
            enum:
              - MEMBER
              - ADMIN
              - DELETED
            description: |
              Role of the member within the organization.

              <table>
                <thead>
                  <tr>
                    <th>Role</th>
                    <th>Description</th>
                  </tr>
                </thead>
                  <tr>
                    <td><code>MEMBER</code></td>
                    <td>Limited permissions. Can view their own reward and order histories only.</td>
                  </tr>
                  <tr>
                    <td><code>ADMIN</code></td>
                    <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                  </tr>
                  <tr>
                    <td><code>DELETED</code></td>
                    <td>No longer a member of this organization.</td>
                  </tr>
                <tbody>
                </tbody>
              </table>
          status:
            type: string
            description: >
              Current status of the member's account.


              When creating a member it starts out in the status `INVITED`. As
              soon as that member open the invitation link and registers an
              account, the status switches to `REGISTERED`.
            enum:
              - REGISTERED
              - INVITED
            example: INVITED
            readOnly: true
      MemberWithoutEvents:
        type: object
        description: >
          Each organization has one or more users that can access and manage that
          organization. These users are called members.


          Members can take actions via the Tremendous web dashboard directly.


          These actions include adding funding sources to the organization,
          creating Campaigns, and more.
        required:
          - id
          - name
          - email
          - role
          - status
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          email:
            type: string
            description: Email address of the member
            format: email
            example: jane@example.com
          name:
            type: string
            description: Full name of the member
            example: Jane Doe
            nullable: true
          role:
            type: string
            enum:
              - MEMBER
              - ADMIN
              - DELETED
            description: |
              Role of the member within the organization.

              <table>
                <thead>
                  <tr>
                    <th>Role</th>
                    <th>Description</th>
                  </tr>
                </thead>
                  <tr>
                    <td><code>MEMBER</code></td>
                    <td>Limited permissions. Can view their own reward and order histories only.</td>
                  </tr>
                  <tr>
                    <td><code>ADMIN</code></td>
                    <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                  </tr>
                  <tr>
                    <td><code>DELETED</code></td>
                    <td>No longer a member of this organization.</td>
                  </tr>
                <tbody>
                </tbody>
              </table>
          status:
            type: string
            description: >
              Current status of the member's account.


              When creating a member it starts out in the status `INVITED`. As
              soon as that member open the invitation link and registers an
              account, the status switches to `REGISTERED`.
            enum:
              - REGISTERED
              - INVITED
            example: INVITED
            readOnly: true
          created_at:
            type: string
            format: date-time
            description: >
              Timestamp when this member was created.


              The `created_at` timestamp is **NOT** returned when retrieving a
              member (but is part of the response when listing or creating
              members).
            readOnly: true
            example: '2021-08-02T11:05:59Z'
          last_login_at:
            type: string
            format: date-time
            description: >
              Timestamp when this member most recently logged into the dashboard
              of the organization associated with this API key.
            readOnly: true
            example: '2021-08-02T11:05:59Z'
            nullable: true
      CreateMember:
        type: object
        properties:
          email:
            type: string
            description: Email address of the member
            format: email
            example: jane@example.com
          name:
            type: string
            description: Full name of the member
            example: Jane Doe
          role:
            type: string
            enum:
              - MEMBER
              - ADMIN
            description: |
              Role of the member within the organization.

              <table>
                <thead>
                  <tr>
                    <th>Role</th>
                    <th>Description</th>
                  </tr>
                </thead>
                  <tr>
                    <td><code>MEMBER</code></td>
                    <td>Limited permissions. Can view their own reward and order histories only.</td>
                  </tr>
                  <tr>
                    <td><code>ADMIN</code></td>
                    <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                  </tr>
                <tbody>
              </table>
            example: MEMBER
        required:
          - email
          - name
          - role
      MemberWithEvents:
        type: object
        description: >
          Each organization has one or more users that can access and manage that
          organization. These users are called members.


          Members can take actions via the Tremendous web dashboard directly.


          These actions include adding funding sources to the organization,
          creating Campaigns, and more.
        required:
          - id
          - name
          - email
          - role
          - status
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          email:
            type: string
            description: Email address of the member
            format: email
            example: jane@example.com
          name:
            type: string
            description: Full name of the member
            example: Jane Doe
            nullable: true
          role:
            type: string
            enum:
              - MEMBER
              - ADMIN
              - DELETED
            description: |
              Role of the member within the organization.

              <table>
                <thead>
                  <tr>
                    <th>Role</th>
                    <th>Description</th>
                  </tr>
                </thead>
                  <tr>
                    <td><code>MEMBER</code></td>
                    <td>Limited permissions. Can view their own reward and order histories only.</td>
                  </tr>
                  <tr>
                    <td><code>ADMIN</code></td>
                    <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                  </tr>
                  <tr>
                    <td><code>DELETED</code></td>
                    <td>No longer a member of this organization.</td>
                  </tr>
                <tbody>
                </tbody>
              </table>
          status:
            type: string
            description: >
              Current status of the member's account.


              When creating a member it starts out in the status `INVITED`. As
              soon as that member open the invitation link and registers an
              account, the status switches to `REGISTERED`.
            enum:
              - REGISTERED
              - INVITED
            example: INVITED
            readOnly: true
          events:
            type: array
            description: List of events related to the member.
            items:
              type: object
              properties:
                type:
                  type: string
                  description: Event type
                  enum:
                    - created
                    - last_login
                  example: created
                date_utc:
                  type: string
                  format: date-time
                  description: Timestamp when the event happened
                  example: '2021-08-02T11:05:59Z'
                  nullable: true
            readOnly: true
      Field:
        type: object
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          label:
            type: string
            description: Label of the field
            example: recipient_name
          data_type:
            type: string
            description: Type of the values of the field
            example: Text
          data:
            type: object
            additionalProperties: true
          required:
            type: boolean
            description: Is this field required (true) or optional (false)
            example: true
          scope:
            type: string
            description: Type of objects this field gets associated with
            example: REWARD
      Webhook:
        type: object
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          url:
            type: string
            format: uri
            description: URL the webhook will make requests to
            example: https://example.com/webhook
            nullable: true
          private_key:
            type: string
            description: Private key for the webhook
            readOnly: true
            example: jXjdU8dozx571TG6YzL4
        required:
          - url
      WebhookPost:
        type: object
        properties:
          url:
            type: string
            format: uri
            description: URL the webhook will make requests to
            example: https://example.com/webhook
        required:
          - url
      Reward:
        type: object
        description: >
          A single reward, sent to a recipient. A reward is always part of an
          order.


          Either `products` or `campaign_id` must be specified.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the reward
          order_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the order this reward is part of.
          created_at:
            type: string
            format: date-time
            description: Date the reward was created
            readOnly: true
          campaign_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: false
            nullable: true
            description: >
              ID of the campaign in your account, that defines the available
              products (different gift cards, charity, etc.)

              that the recipient can choose from.
            writeOnly: true
          products:
            type: array
            writeOnly: true
            description: >
              List of IDs of product (different gift cards, charity, etc.) that
              will be available

              to the recipient to choose from.


              Providing a `products` array will override the products made
              available by the campaign

              specified using the `campaign_id` property unless the `products`
              array is empty. It will

              _not_ override other campaign attributes, like the message and
              customization of the look and feel.
            items:
              type: string
              pattern: '[A-Z0-9]{4,20}'
              example: SOMEIDSOMEID
              readOnly: false
              writeOnly: true
            minItems: 1
          value:
            type: object
            properties:
              denomination:
                type: number
                format: double
                description: Amount of the reward
              currency_code:
                type: string
                enum:
                  - USD
                  - CAD
                  - EUR
                  - AED
                  - AFN
                  - ALL
                  - AMD
                  - ARS
                  - AUD
                  - AZN
                  - BAM
                  - BDT
                  - BGN
                  - BHD
                  - BIF
                  - BND
                  - BOB
                  - BRL
                  - BWP
                  - BYR
                  - BZD
                  - CDF
                  - CHF
                  - CLP
                  - CNY
                  - COP
                  - CRC
                  - CVE
                  - CZK
                  - DJF
                  - DKK
                  - DOP
                  - DZD
                  - EEK
                  - EGP
                  - ERN
                  - ETB
                  - GBP
                  - GEL
                  - GHS
                  - GNF
                  - GTQ
                  - HKD
                  - HNL
                  - HRK
                  - HUF
                  - IDR
                  - ILS
                  - INR
                  - IQD
                  - IRR
                  - ISK
                  - JMD
                  - JOD
                  - JPY
                  - KES
                  - KHR
                  - KRW
                  - KWD
                  - KZT
                  - LBP
                  - LKR
                  - LTL
                  - LVL
                  - MAD
                  - MDL
                  - MGA
                  - MKD
                  - MMK
                  - MOP
                  - MUR
                  - MXN
                  - MYR
                  - MZN
                  - NAD
                  - NGN
                  - NIO
                  - NOK
                  - NPR
                  - NZD
                  - OMR
                  - PAB
                  - PEN
                  - PHP
                  - PKR
                  - PLN
                  - PYG
                  - QAR
                  - RON
                  - RSD
                  - RUB
                  - RWF
                  - SAR
                  - SDG
                  - SEK
                  - SGD
                  - SOS
                  - SYP
                  - THB
                  - TND
                  - TOP
                  - TRY
                  - TTD
                  - TWD
                  - TZS
                  - UAH
                  - UGX
                  - UYU
                  - UZS
                  - VEF
                  - VND
                  - XAF
                  - XOF
                  - YER
                  - ZAR
                  - ZMK
                example: USD
                description: Currency of the reward
            required:
              - denomination
              - currency_code
            example:
              denomination: 50
              currency_code: USD
          recipient:
            type: object
            description: Details of the recipient of the reward
            properties:
              name:
                type: string
                description: Name of the recipient
                example: John Doe Jr.
              email:
                type: string
                description: Email address of the recipient
                example: john.doe@example.com
              phone:
                type: string
                description: >-
                  Phone number of the recipient. For non-US phone numbers, specify
                  the country code (prefixed with +).
                example: 123-456-7890
          deliver_at:
            type: string
            format: date
            description: >-
              Timestamp of reward delivery within the next year. Note that if
              date-time is provided, the time values will be ignored.
            pattern: YYYY-MM-DD
            example: '2023-12-31'
          custom_fields:
            type: array
            items:
              type: object
              description: >-
                Reward custom data for searching, tracking or copy (see [Adding
                custom fields to
                orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
              properties:
                id:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  description: Tremendous ID of the custom field
                value:
                  type: string
                  description: Value of the custom field
                  example: Hufflepuff
                  readOnly: false
                  nullable: true
                label:
                  type: string
                  description: Label of the custom field
                  example: harry_potter_house
                  readOnly: false
          delivery:
            description: |
              Details on how the reward is delivered to the recipient.
            type: object
            properties:
              method:
                description: |
                  How to deliver the reward to the recipient.

                  <table>
                    <thead>
                      <tr>
                        <th>Delivery Method</th>
                        <th>Description</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td><code>EMAIL</code></td>
                        <td>Deliver the reward to the recipient by email</td>
                      </tr>
                      <tr>
                        <td><code>LINK</code></td>
                        <td>
                          <p>Deliver the reward to the recipient via a link.</p>
                          <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                        </td>
                      </tr>
                      <tr>
                        <td><code>PHONE</code></td>
                        <td>Deliver the reward to the recipient by SMS</td>
                      </tr>
                    </tbody>
                  </table>
                type: string
                enum:
                  - EMAIL
                  - LINK
                  - PHONE
              status:
                type: string
                enum:
                  - SCHEDULED
                  - FAILED
                  - SUCCEEDED
                  - PENDING
                description: >
                  Current status of the delivery of the reward:


                  * `SCHEDULED` - Reward is scheduled for delivery and will be
                  delivered soon.

                  * `FAILED` - Delivery of reward failed (e.g. email bounced).

                  * `SUCCEEDED` - Reward was successfully delivered (email or text
                  message delivered or reward link opened).

                  * `PENDING` - Delivery is pending but not yet scheduled.
                readOnly: true
            required:
              - method
              - status
      Order:
        type: object
        description: An order wraps around the fulfilment of one or more rewards.
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
            description: Tremendous ID of the order
          external_id:
            type: string
            nullable: true
            description: >
              Reference for this order, supplied by the customer.


              When set, `external_id` makes order idempotent. All requests that
              use the same `external_id`

              after the initial order creation, will result in a response that
              returns the data of the

              initially created order. The response will have a `201` response
              code. These responses

              **fail** to create any further orders.


              It also allows for retrieving by `external_id` instead of `id` only.
            example: Your-Individual-Identifier-for-This-Order
          campaign_id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: IVM0I3WNJJL0
            readOnly: true
            nullable: true
            description: >
              ID of the campaign in your account, that defines the available
              products (different gift cards, charity, etc.)

              that the recipient can choose from.
          created_at:
            type: string
            format: date-time
            description: Date the order has been created
            readOnly: true
          status:
            type: string
            description: |
              Execution status of a given order

              <table>
                <thead>
                  <tr>
                    <th>
                      Status
                    </th>
                    <th>
                      Description
                    </th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>
                      <code>
                        CANCELED
                      </code>
                    </td>
                    <td>
                      The order and all of its rewards were canceled.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        CART
                      </code>
                    </td>
                    <td>
                      The order has been created, but hasn't yet been processed.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        EXECUTED
                      </code>
                    </td>
                    <td>
                      The order has been executed. Payment has been handled and rewards are being delivered (if applicable).
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        FAILED
                      </code>
                    </td>
                    <td>
                      The order could not be processed due to an error. E.g. due to insufficient funds in the account.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        PENDING APPROVAL
                      </code>
                    </td>
                    <td>
                      The order has been created but needs approval to be executed.
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <code>
                        PENDING INTERNAL PAYMENT APPROVAL
                      </code>
                    </td>
                    <td>
                      The order has been created but it is under review and requires approval from our team.
                    </td>
                  </tr>

                </tbody>
              </table>
            enum:
              - CANCELED
              - CART
              - EXECUTED
              - FAILED
              - PENDING APPROVAL
              - PENDING INTERNAL PAYMENT APPROVAL
            readOnly: true
          payment:
            type: object
            properties:
              subtotal:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Total price of the order before fees (in USD)
                example: 50
              total:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Total price of the order including fees (in USD)
                example: 52.5
              fees:
                type: number
                format: double
                minimum: 0
                readOnly: true
                description: Fees for the order (in USD)
                example: 2.5
              refund:
                type: object
                properties:
                  total:
                    type: number
                    format: double
                    minimum: 0
                    readOnly: true
                    description: Total amount of the order refunds (in USD)
                    example: 52.5
                required:
                  - total
                description: >
                  Breakdown of the order refunds (total amount in USD, independent
                  from the currency of the ordered rewards).

                  Note that this property will only appear for canceled orders or
                  orders with canceled rewards.
              channel:
                type: string
                description: Name of the channel in which the order was created
                enum:
                  - UI
                  - API
                  - EMBED
                  - DECIPHER
                  - QUALTRICS
                  - TYPEFORM
                  - SURVEY MONKEY
            description: >-
              Cost breakdown of the order (cost of rewards + fees). Cost and fees
              are always denominated in USD, independent from the currency of the
              ordered rewards.

              Note that this property will only appear for processed orders
              (`status` is `EXECUTED`).
          invoice_id:
            type: string
            description: The ID for the invoice associated with this order
            readOnly: true
            example: 2E59A82B-0001
          reward:
            type: object
            description: >
              A single reward, sent to a recipient. A reward is always part of an
              order.


              Either `products` or `campaign_id` must be specified.
            properties:
              id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: true
                description: Tremendous ID of the reward
              order_id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: true
                description: Tremendous ID of the order this reward is part of.
              created_at:
                type: string
                format: date-time
                description: Date the reward was created
                readOnly: true
              campaign_id:
                type: string
                pattern: '[A-Z0-9]{4,20}'
                example: SOMEIDSOMEID
                readOnly: false
                nullable: true
                description: >
                  ID of the campaign in your account, that defines the available
                  products (different gift cards, charity, etc.)

                  that the recipient can choose from.
                writeOnly: true
              products:
                type: array
                writeOnly: true
                description: >
                  List of IDs of product (different gift cards, charity, etc.)
                  that will be available

                  to the recipient to choose from.


                  Providing a `products` array will override the products made
                  available by the campaign

                  specified using the `campaign_id` property unless the `products`
                  array is empty. It will

                  _not_ override other campaign attributes, like the message and
                  customization of the look and feel.
                items:
                  type: string
                  pattern: '[A-Z0-9]{4,20}'
                  example: SOMEIDSOMEID
                  readOnly: false
                  writeOnly: true
                minItems: 1
              value:
                type: object
                properties:
                  denomination:
                    type: number
                    format: double
                    description: Amount of the reward
                  currency_code:
                    type: string
                    enum:
                      - USD
                      - CAD
                      - EUR
                      - AED
                      - AFN
                      - ALL
                      - AMD
                      - ARS
                      - AUD
                      - AZN
                      - BAM
                      - BDT
                      - BGN
                      - BHD
                      - BIF
                      - BND
                      - BOB
                      - BRL
                      - BWP
                      - BYR
                      - BZD
                      - CDF
                      - CHF
                      - CLP
                      - CNY
                      - COP
                      - CRC
                      - CVE
                      - CZK
                      - DJF
                      - DKK
                      - DOP
                      - DZD
                      - EEK
                      - EGP
                      - ERN
                      - ETB
                      - GBP
                      - GEL
                      - GHS
                      - GNF
                      - GTQ
                      - HKD
                      - HNL
                      - HRK
                      - HUF
                      - IDR
                      - ILS
                      - INR
                      - IQD
                      - IRR
                      - ISK
                      - JMD
                      - JOD
                      - JPY
                      - KES
                      - KHR
                      - KRW
                      - KWD
                      - KZT
                      - LBP
                      - LKR
                      - LTL
                      - LVL
                      - MAD
                      - MDL
                      - MGA
                      - MKD
                      - MMK
                      - MOP
                      - MUR
                      - MXN
                      - MYR
                      - MZN
                      - NAD
                      - NGN
                      - NIO
                      - NOK
                      - NPR
                      - NZD
                      - OMR
                      - PAB
                      - PEN
                      - PHP
                      - PKR
                      - PLN
                      - PYG
                      - QAR
                      - RON
                      - RSD
                      - RUB
                      - RWF
                      - SAR
                      - SDG
                      - SEK
                      - SGD
                      - SOS
                      - SYP
                      - THB
                      - TND
                      - TOP
                      - TRY
                      - TTD
                      - TWD
                      - TZS
                      - UAH
                      - UGX
                      - UYU
                      - UZS
                      - VEF
                      - VND
                      - XAF
                      - XOF
                      - YER
                      - ZAR
                      - ZMK
                    example: USD
                    description: Currency of the reward
                required:
                  - denomination
                  - currency_code
                example:
                  denomination: 50
                  currency_code: USD
              recipient:
                type: object
                description: Details of the recipient of the reward
                properties:
                  name:
                    type: string
                    description: Name of the recipient
                    example: John Doe Jr.
                  email:
                    type: string
                    description: Email address of the recipient
                    example: john.doe@example.com
                  phone:
                    type: string
                    description: >-
                      Phone number of the recipient. For non-US phone numbers,
                      specify the country code (prefixed with +).
                    example: 123-456-7890
              deliver_at:
                type: string
                format: date
                description: >-
                  Timestamp of reward delivery within the next year. Note that if
                  date-time is provided, the time values will be ignored.
                pattern: YYYY-MM-DD
                example: '2023-12-31'
              custom_fields:
                type: array
                items:
                  type: object
                  description: >-
                    Reward custom data for searching, tracking or copy (see
                    [Adding custom fields to
                    orders](https://developers.tremendous.com/reference/using-custom-fields-to-add-custom-data-to-rewards).)
                  properties:
                    id:
                      type: string
                      pattern: '[A-Z0-9]{4,20}'
                      example: SOMEIDSOMEID
                      readOnly: false
                      description: Tremendous ID of the custom field
                    value:
                      type: string
                      description: Value of the custom field
                      example: Hufflepuff
                      readOnly: false
                      nullable: true
                    label:
                      type: string
                      description: Label of the custom field
                      example: harry_potter_house
                      readOnly: false
              delivery:
                description: |
                  Details on how the reward is delivered to the recipient.
                type: object
                properties:
                  method:
                    description: |
                      How to deliver the reward to the recipient.

                      <table>
                        <thead>
                          <tr>
                            <th>Delivery Method</th>
                            <th>Description</th>
                          </tr>
                        </thead>
                        <tbody>
                          <tr>
                            <td><code>EMAIL</code></td>
                            <td>Deliver the reward to the recipient by email</td>
                          </tr>
                          <tr>
                            <td><code>LINK</code></td>
                            <td>
                              <p>Deliver the reward to the recipient via a link.</p>
                              <p>The link can be retrieved on a successfully ordered reward via the <code>/rewards</code> or <code>/rewards/{id}</code> endpoint. That link must then be  delivered to the recipient out-of-band.</p>
                            </td>
                          </tr>
                          <tr>
                            <td><code>PHONE</code></td>
                            <td>Deliver the reward to the recipient by SMS</td>
                          </tr>
                        </tbody>
                      </table>
                    type: string
                    enum:
                      - EMAIL
                      - LINK
                      - PHONE
                  status:
                    type: string
                    enum:
                      - SCHEDULED
                      - FAILED
                      - SUCCEEDED
                      - PENDING
                    description: >
                      Current status of the delivery of the reward:


                      * `SCHEDULED` - Reward is scheduled for delivery and will be
                      delivered soon.

                      * `FAILED` - Delivery of reward failed (e.g. email bounced).

                      * `SUCCEEDED` - Reward was successfully delivered (email or
                      text message delivered or reward link opened).

                      * `PENDING` - Delivery is pending but not yet scheduled.
                    readOnly: true
                required:
                  - method
                  - status
        required:
          - id
          - created_at
          - status
      Member:
        type: object
        description: >
          Each organization has one or more users that can access and manage that
          organization. These users are called members.


          Members can take actions via the Tremendous web dashboard directly.


          These actions include adding funding sources to the organization,
          creating Campaigns, and more.
        required:
          - id
          - name
          - email
          - role
          - status
        properties:
          id:
            type: string
            pattern: '[A-Z0-9]{4,20}'
            example: SOMEIDSOMEID
            readOnly: true
          email:
            type: string
            description: Email address of the member
            format: email
            example: jane@example.com
          name:
            type: string
            description: Full name of the member
            example: Jane Doe
            nullable: true
          role:
            type: string
            enum:
              - MEMBER
              - ADMIN
              - DELETED
            description: |
              Role of the member within the organization.

              <table>
                <thead>
                  <tr>
                    <th>Role</th>
                    <th>Description</th>
                  </tr>
                </thead>
                  <tr>
                    <td><code>MEMBER</code></td>
                    <td>Limited permissions. Can view their own reward and order histories only.</td>
                  </tr>
                  <tr>
                    <td><code>ADMIN</code></td>
                    <td>Update organization settings, invite other members to the organization, and view all member order and reward histories within their organization.</td>
                  </tr>
                  <tr>
                    <td><code>DELETED</code></td>
                    <td>No longer a member of this organization.</td>
                  </tr>
                <tbody>
                </tbody>
              </table>
          status:
            type: string
            description: >
              Current status of the member's account.


              When creating a member it starts out in the status `INVITED`. As
              soon as that member open the invitation link and registers an
              account, the status switches to `REGISTERED`.
            enum:
              - REGISTERED
              - INVITED
            example: INVITED
            readOnly: true
          created_at:
            type: string
            format: date-time
            description: >
              Timestamp when this member was created.


              The `created_at` timestamp is **NOT** returned when retrieving a
              member (but is part of the response when listing or creating
              members).
            readOnly: true
            example: '2021-08-02T11:05:59Z'
          last_login_at:
            type: string
            format: date-time
            description: >
              Timestamp when this member most recently logged into the dashboard
              of the organization associated with this API key.
            readOnly: true
            example: '2021-08-02T11:05:59Z'
            nullable: true
  x-readme:
    explorer-enabled: true
    proxy-enabled: true
  _id: 60b952c39da2e5004ad1cd3c
konfigCliVersion: 1.38.37
