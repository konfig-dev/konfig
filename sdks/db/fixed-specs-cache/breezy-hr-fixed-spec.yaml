publishJson:
  company: Breezy HR
  serviceName: false
  sdkName: breezy-hr-{language}-sdk
  clientName: BreezyHr
  metaDescription: >-
    We specialize in sourcing high quality pilots to meet the needs of 135
    operators. Our team of highly skilled pilots and aviation experts seamlessly
    integrates with your operation to quickly provide you with world-class pilot
    candidates from our extensive network. All candidates are fully vetted and
    evaluated by Hire Up prior to being recommended to you.
  apiStatusUrls: inherit
  homepage: breezy.hr
  developerDocumentation: developer.breezy.hr/reference/overview
  categories:
    - talent_acquisition_analytics
    - recruiting
rawSpecString: |
  openapi: 3.1.0
  info:
    title: API Settings
    version: '3'
  servers:
    - url: https://api.breezy.hr
  components:
    securitySchemes:
      sec0:
        type: apiKey
        name: Authorization
        in: header
        x-default: 0000000-0000-0000-0000-00000000001
  security:
    - sec0: []
  paths:
    /v3/signin:
      post:
        summary: /signin
        description: >-
          Retrieve an access token. Use the access_token as part of the
          Authorization header.
        operationId: signin
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - email
                  - password
                properties:
                  email:
                    type: string
                    description: Email address of user
                  password:
                    type: string
                    description: Password of user
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "access_token": "00000000-0000-0000-0000-000000000000",
                          "user": { User }
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Email Address:
                    value: |-
                      {
                          "error": {
                              "type": "signinEmailError",
                              "message": "email is null or empty"
                          }
                      }
                  Missing Password:
                    value: |-
                      {
                          "error": {
                              "type": "signinPasswordError",
                              "message": "password is null or empty"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Email Address
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: signinEmailError
                            message:
                              type: string
                              example: email is null or empty
                    - title: Missing Password
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: signinPasswordError
                            message:
                              type: string
                              example: password is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Signin Failure:
                    value: |-
                      {
                          "error": {
                              "type": "signinFailure",
                              "message": "email or password incorrect."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: signinFailure
                        message:
                          type: string
                          example: email or password incorrect.
          '500':
            description: '500'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "accessTokenCreationError",
                              "message": "There was an error creating Access Token."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: accessTokenCreationError
                        message:
                          type: string
                          example: There was an error creating Access Token.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: |-
                curl -H "Content-Type: application/json" \
                  -X POST \
                  -d '{"email":"user@emailaddress.com","password":"hunter2"}' \
                  https://api.breezy.hr/v3/signin
          samples-languages:
            - curl
    /v3/signout:
      get:
        summary: /signout
        description: This endpoint invalidates an access token.
        operationId: signout
        responses:
          '204':
            description: '204'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/signout
          samples-languages:
            - curl
    /v3/user:
      get:
        summary: /user
        description: Retrieve the authenticated user or another user by id
        operationId: user
        parameters:
          - name: user_id
            in: query
            description: user id to lookup (if blank look up by auth token)
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: '{ User }'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  User Not Found:
                    value: |-
                      {
                          "error": {
                              "type": "userNotFound",
                              "message": "user not found."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: userNotFound
                        message:
                          type: string
                          example: user not found.
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getUserError",
                              "message": "there was an unknown error getting user."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getUserError
                        message:
                          type: string
                          example: there was an unknown error getting user.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/user
          samples-languages:
            - curl
    /v3/user/details:
      get:
        summary: /user/details
        description: >-
          Retrieve the details for the configurations of each company the
          authenticated user belongs to.
        operationId: user-details
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[ \n\t\"<company_id>\": {\n\t\t\"company\": { Company },\n    \"messaging\": {\n\t\t\t\"questionnaire_template\": {\n        \"type\": String,\n        \"body\": String\n\t\t\t},\n      \"subject_template\": {\n        \"type\": String\n        \"body\": String\n      }\n\t\t},\n    \"reasons\": {\n    \t\"disposition\": [\n        {\n          \"name\": String,\n          \"_id\": String\n        }, . . .               \n      ],\n    \t\"creation_date\": Date,\n    \t\"updated_date\": Date\n    },\n    \"questionnaires\": [           \n    \t{ Questionnaire },\n      ...            \n    ],\n    \"pipelines\": {\n      \"<pipeline_id>\": { Pipeline },\n      ...           \n    },\n    \"interview_guides\": [\n      { Interview Guide },\n      ...\n    ],\n    \"templates\": [\n      { Template },\n      ...        \n    ],\n    \"tasks\": [\n      { Task },\n      ...        \n    ],\n    \"scorecards\": [\n      { Scorecard },\n      ... \n    ],\n    \"user_settings\": {\n      \"webcal_uri\": String \n    },\n    \"positions\": {\n      \"<position_id>\": { Position },\n      ...\n    },\n    \"members\": [\n      { User },\n      ...\n    ]\n  },\n\t...\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  User Not Found:
                    value: |-
                      {
                          "error": {
                              "type": "userNotFound",
                              "message": "user not found."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: userNotFound
                        message:
                          type: string
                          example: user not found.
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getUserCompaniesDetailError",
                              "message": "there was an unknown error getting user company details."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getUserCompaniesDetailError
                        message:
                          type: string
                          example: >-
                            there was an unknown error getting user company
                            details.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/user/details
          samples-languages:
            - curl
    /v3/company/{company_id}:
      get:
        summary: /company/:id/
        description: >-
          Retrieve the company information associated with authenticated user and
          company id
        operationId: company
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      { 
                        Company Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCompanyError",
                              "message": "there was an unknown error getting company."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCompanyError
                        message:
                          type: string
                          example: there was an unknown error getting company.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000
          samples-languages:
            - curl
    /v3/company/{company_id}/custom-attributes/candidate:
      get:
        summary: /company/:id/custom-attributes/candidate
        description: Retrieve all of the candidate specific custom attributes
        operationId: company-custom-attributes-candidate
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n  {\n  \t\"id\": String,\n\t\t\"name\": String,\n\t\t\"secure\": Boolean\n  },\n  ...\n],"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCustomAttributesError",
                              "message": "there was an unknown error getting custom attributes."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCustomAttributesError
                        message:
                          type: string
                          example: there was an unknown error getting custom attributes.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/custom-attributes/candidate
          samples-languages:
            - curl
    /v3/company/{company_id}/custom-attributes/position:
      get:
        summary: /company/:id/custom-attributes/position
        description: Retrieve all of the position specific custom attributes
        operationId: company-custom-attributes-position
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n  {\n  \t\"id\": String,\n\t\t\"name\": String,\n\t\t\"secure\": Boolean\n  },\n  ...\n],"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCustomAttributesError",
                              "message": "there was an unknown error getting custom attributes."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCustomAttributesError
                        message:
                          type: string
                          example: there was an unknown error getting custom attributes.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/custom-attributes/position
          samples-languages:
            - curl
    /v3/company/{company_id}/pipeline/{pipeline_id}:
      get:
        summary: /company/:id/pipeline/:id
        description: Retrieve pipeline stages by pipeline id
        operationId: company-pipeline
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
          - name: pipeline_id
            in: path
            description: pipeline id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [ // all stages on pipeline
                        {
                          "id": "applied",
                          "name": "Applied",
                          "icon": "user",
                          "action_count": 0,
                          "actions": {},
                          "type": "type",
                          "action": "action"
                        } . . .
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getPipelineError",
                              "message": "there was an unknown error getting pipeline."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getPipelineError
                        message:
                          type: string
                          example: there was an unknown error getting pipeline.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/pipeline/000000000000
          samples-languages:
            - curl
    /v3/company/{company_id}/pipelines:
      get:
        summary: /company/:id/pipelines
        description: Retrieve all of the company pipelines
        operationId: company-pipelines
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n\t\"<pipeline_id>\": {\n    Pipeline Object\n  },\n  ...\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getPipelinesError",
                              "message": "there was an unknown error getting pipelines."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getPipelinesError
                        message:
                          type: string
                          example: there was an unknown error getting pipelines.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/pipelines
          samples-languages:
            - curl
    /v3/company/{company_id}/questionnaire/{questionnaire_id}:
      get:
        summary: /company/:id/questionnaire/:id
        description: Retrieve questionnaire by id
        operationId: company-questionnaire
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: questionnaire_id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      { 
                        Questionnaire Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getTemplateError",
                              "message": "there was an unknown error getting questionnaire."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getTemplateError
                        message:
                          type: string
                          example: there was an unknown error getting questionnaire.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/questionnaire/000000000000
          samples-languages:
            - curl
    /v3/company/{company_id}/questionnaires:
      get:
        summary: /company/:id/questionnaires
        description: Retrieve all of the company questionnaires
        operationId: company-questionnaires
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        { Questionnaire Object },
                        ...
                      ],
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getTemplateError",
                              "message": "there was an unknown error getting questionnaires."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getTemplateError
                        message:
                          type: string
                          example: there was an unknown error getting questionnaires.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/questionnaires
          samples-languages:
            - curl
    /v3/company/{company_id}/template/{template_id}:
      get:
        summary: /company/:id/template/:id
        description: Retrieve email template by id
        operationId: company-template
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
          - name: template_id
            in: path
            description: template id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      { 
                        Template Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getTemplateError",
                              "message": "there was an unknown error getting template."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getTemplateError
                        message:
                          type: string
                          example: there was an unknown error getting template.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/template/000000000000
          samples-languages:
            - curl
    /v3/company/{company_id}/templates:
      get:
        summary: /company/:id/templates
        description: Retrieve all of the company email templates
        operationId: company-templates
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        { Template Object },
                        ...
                      ],
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getTemplateError",
                              "message": "there was an unknown error getting template."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getTemplateError
                        message:
                          type: string
                          example: there was an unknown error getting template.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/templates
          samples-languages:
            - curl
    /v3/companies:
      get:
        summary: /companies
        description: Retrieve the companies associated with the authenticated user
        operationId: companies
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n\t{ Company Object},\n  ...\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCompaniesError",
                              "message": "there was an unknown error getting companies."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCompaniesError
                        message:
                          type: string
                          example: there was an unknown error getting companies.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/companies
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}:
      get:
        summary: ./position/:id
        description: Retrieve details for given position id
        operationId: company-position
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            description: position id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      { 
                        Position Object      
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getPositionError",
                              "message": "there was an unknown error getting position."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getPositionError
                        message:
                          type: string
                          example: there was an unknown error getting position.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000
          samples-languages:
            - curl
      put:
        summary: ./position/:id
        description: Update details for given position
        operationId: company-position-update
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  type:
                    type: string
                    description: fullTime | partTime | contract | temporary | other
                  location:
                    type: object
                    properties: {}
                  department:
                    type: string
                  requisition_id:
                    type: string
                  category:
                    type: string
                    description: >-
                      software | design | product | sysadmin | devops | finance |
                      custserv | sales | marketing | pr | design-not-interactive |
                      hr | management | operations | other
                  experience:
                    type: string
                    description: >-
                      na | internship | entry-level | associate | mid-level |
                      senior-level | executive
                  education:
                    type: string
                    description: >-
                      unspecified | high-school | certification | vocational |
                      associate-degree | bachelor-degree | masters-degree |
                      doctorate | professional | some-college | vocational-diploma
                      | vocational-degree | some-high-school
                  custom_attributes:
                    type: array
                    description: >-
                      { name: String, value: String, secure: Boolean } - secure
                      determines if the value should be encrypted at rest
                  pipeline_id:
                    type: string
                  scorecard_id:
                    type: string
                  questionnaire_id:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         Position Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Missing Required Field:
                    value: |-
                      {
                          "error": {
                              "type": "addPosition<Field>Missing",
                              "message": "<field> is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "addPositionFieldInvalid",
                              "message": "<field>  must be one of the following values: <values>"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - title: Missing Required Field
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: addPosition<Field>Missing
                            message:
                              type: string
                              example: <field> is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: addPositionFieldInvalid
                            message:
                              type: string
                              example: >-
                                <field>  must be one of the following values:
                                <values>
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "updatePositionError",
                              "message": "there was an unknown error updating position."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: updatePositionError
                        message:
                          type: string
                          example: there was an unknown error updating position.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "PUT /v3/company/000000000000/position/000000000000 HTTP/1.1\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n  \"name\": \"New Job\",\n  \"type\": \"fullTime\",\n  \"description\": \"This is the job description\",\n  \"location\": {\n\t\t\"country\": \"US\",\n\t\t\"state\": \"FL\",\n\t\t\"city\": \"Jacksonville\",\n\t\t\"is_remote\": false\n  },\n  \"education\":\"high-school\",\n  \"category\": \"sysadmin\",\n  \"experience\": \"internship\",\n  \"custom_attributes\": [\n  \t{\n    \t\"name\": \"Max Salary\",\n      \"value\": \"1000000\",\n      \"secure\": true\n    }\n  ],\n  \"pipeline_id\": \"000000000000\", \n  \"scorecard_id\": \"000000000000\", \n  \"questionnaire_id\": \"000000000000\",\n  \"tags\": [\"technical\", \"junior\"]\n}"
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{ "name": "New
                Job", "type": "fullTime", "description": "This is the job
                description", "location": { "country": "US", "state": "FL",
                "city": "Jacksonville", "is_remote": false },
                "education":"high-school", "category": "sysadmin", "experience":
                "internship","custom_attributes": [ { "name": "Max Salary",
                "value": "1000000", "secure": true }], "pipeline_id":
                "000000000000", "scorecard_id": "000000000000",
                "questionnaire_id": "000000000000","tags": ["technical", "junior"]
                }'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000

          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/state:
      put:
        summary: ./position/:id/state
        description: Update details for given position
        operationId: company-position-state-update
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - state
                properties:
                  state:
                    type: string
                    description: published | draft | closed | archived
        responses:
          '204':
            description: '204'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Missing Required Field:
                    value: |-
                      {
                          "error": {
                              "type": "addPosition<Field>Missing",
                              "message": "<field> is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "addPositionFieldInvalid",
                              "message": "<field>  must be one of the following values: <values>"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - title: Missing Required Field
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: addPosition<Field>Missing
                            message:
                              type: string
                              example: <field> is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: addPositionFieldInvalid
                            message:
                              type: string
                              example: >-
                                <field>  must be one of the following values:
                                <values>
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "updatePositionError",
                              "message": "there was an unknown error updating position."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: updatePositionError
                        message:
                          type: string
                          example: there was an unknown error updating position.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: |-
                PUT /v3/company/000000000000/position/000000000000/state HTTP/1.1
                Host: api.breezy.hr
                Authorization: 00000000-0000-0000-0000-000000000000
                Content-Type: application/json

                {
                  "state": "closed"  
                }
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{ "state":
                "closed" }'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/state

          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/stream:
      get:
        summary: ./position/:id/stream
        description: Retrieve the last 30 activity stream events for the given position
        operationId: company-position-stream
        parameters:
          - name: company_id
            in: path
            description: company
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            description: position id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "_id": String,            
                          "type": String,
                          "stream_id": String,
                          "object": {}, //the notification object specific to the notificationType above
                          "timestamp": Date
                        },
                        ...
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                        "error": "No access token found"
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: No access token found
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/stream
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/team:
      get:
        summary: ./position/:id/team
        description: Retrieve user objects of all position team members
        operationId: company-position-team
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            description: position id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n   {\n      \"_id\": String,\n      \"email_address\": String,\n      \"name\": String,\n      \"username\": String,\n      \"initial\": Char(1),\n      \"creation_date\": Date,\n      \"verified_email\": Boolean,\n      \"tz_offset\": String,\n      \"signature\": {\n        \"enabled\": Boolean,\n        \"body\": String\n      },\n      \"updated_date\": Date,\n      \"user_role\": {\n\t\t\t\t\"id\": \"member | hiring_manager\",\n\t\t\t\t\"name\": \"Hiring Team Member | Hiring Manager\"\n\t\t\t}\n   }\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getPositionTeamError",
                              "message": "there was an unknown error getting position team."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getPositionTeamError
                        message:
                          type: string
                          example: there was an unknown error getting position team.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/team
          samples-languages:
            - curl
    /v3/company/{company_id}/positions:
      get:
        summary: ./positions
        description: Retrieve all positions for given company in given state (status)
        operationId: company-positions
        parameters:
          - name: state
            in: query
            description: >-
              Specify an optional position state filter. e.g. draft, archived,
              published, closed, pending
            schema:
              type: string
              default: published
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n\t{ Position Object },\n  ...\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getPositionsError",
                              "message": "there was an unknown error getting positions."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getPositionsError
                        message:
                          type: string
                          example: there was an unknown error getting positions.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/positions?state=published
          samples-languages:
            - curl
      post:
        summary: ./positions
        description: Create a new position
        operationId: company-positions-add
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - description
                  - type
                  - location
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  type:
                    type: string
                    description: fullTime | partTime | contract | temporary | other
                  location:
                    type: object
                    properties: {}
                  department:
                    type: string
                  requisition_id:
                    type: string
                  category:
                    type: string
                    description: >-
                      software | design | product | sysadmin | devops | finance |
                      custserv | sales | marketing | pr | design-not-interactive |
                      hr | management | operations | other
                  experience:
                    type: string
                    description: >-
                      na | internship | entry-level | associate | mid-level |
                      senior-level | executive
                  education:
                    type: string
                    description: >-
                      unspecified | high-school | certification | vocational |
                      associate-degree | bachelor-degree | masters-degree |
                      doctorate | professional | some-college | vocational-diploma
                      | vocational-degree | some-high-school
                  custom_attributes:
                    type: array
                    description: >-
                      { name: String, value: String, secure: Boolean } - secure
                      determines if the value should be encrypted at rest
                  pipeline_id:
                    type: string
                    default: default
                  scorecard_id:
                    type: string
                  questionnaire_id:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         Position Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Missing Required Field:
                    value: |-
                      {
                          "error": {
                              "type": "addPosition<Field>Missing",
                              "message": "<field> is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "addPositionFieldInvalid",
                              "message": "<field>  must be one of the following values: <values>"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - title: Missing Required Field
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: addPosition<Field>Missing
                            message:
                              type: string
                              example: <field> is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: addPositionFieldInvalid
                            message:
                              type: string
                              example: >-
                                <field>  must be one of the following values:
                                <values>
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "addPositionError",
                              "message": "there was an unknown error creating position."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: addPositionError
                        message:
                          type: string
                          example: there was an unknown error creating position.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "POST /v3/company/000000000000/positions HTTP/1.1\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n  \"name\": \"New Job\",\n  \"type\": \"fullTime\",\n  \"description\": \"This is the job description\",\n  \"location\": {\n\t\t\"country\": \"US\",\n\t\t\"state\": \"FL\",\n\t\t\"city\": \"Jacksonville\",\n\t\t\"is_remote\": false\n  },\n  \"education\":\"high-school\",\n  \"category\": \"sysadmin\",\n  \"experience\": \"internship\",\n  \"custom_attributes\": [\n  \t{\n    \t\"name\": \"Max Salary\",\n      \"value\": \"1000000\",\n      \"secure\": true\n    }\n  ],\n  \"pipeline_id\": \"000000000000\",\n  \"scorecard_id\": \"000000000000\",\n  \"questionnaire_id\": \"000000000000\",\n  \"tags\": [\"technical\", \"junior\"]\n}"
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X POST -d '{ "name": "New
                Job", "type": "fullTime", "description": "This is the job
                description", "location": { "country": "US", "state": "FL",
                "city": "Jacksonville", "is_remote": false },
                "education":"high-school", "category": "sysadmin", "experience":
                "internship","custom_attributes": [ { "name": "Max Salary",
                "value": "1000000", "secure": true }], "pipeline_id":
                "000000000000", "scorecard_id": "000000000000",
                "questionnaire_id": "000000000000", "tags": ["technical",
                "junior"] }'
                https://api.breezy.hr/v3/company/000000000000/positions

          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/custom-fields:
      get:
        summary: ./position/:id/custom-fields
        description: ''
        operationId: positionidcustom-fields
        parameters:
          - name: company_id
            in: path
            description: company id
            schema:
              type: string
            required: true
          - name: position_id
            in: path
            description: position id
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n\tPosition Custom Field Object\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getPositionCustomFieldsError",
                              "message": "there was an unknown error getting position custom fields."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getPositionCustomFieldsError
                        message:
                          type: string
                          example: >-
                            there was an unknown error getting position custom
                            fields.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/custom-fields
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/custom-fields/{custom_field_id}:
      put:
        summary: ./position/:id/custom-fields/:id
        description: ''
        operationId: positionidcustom-fieldsid
        parameters:
          - name: company_id
            in: path
            description: company id
            schema:
              type: string
            required: true
          - name: position_id
            in: path
            description: position id
            schema:
              type: string
            required: true
          - name: custom_field_id
            in: path
            description: custom field id
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n\tPosition Custom Field Object\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "updatePositionCustomFieldsError",
                              "message": "there was an unknown error updating position fields."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: updatePositionCustomFieldsError
                        message:
                          type: string
                          example: there was an unknown error updating position fields.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "PUT /v3/company/000000000000/position/000000000000/custom-fields/000000000000\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n\t\"value\": \"new value\"\n}"
            - language: curl
              code: >
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{ "value": "new
                value"}'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/custom-fields/000000000000
          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}:
      get:
        summary: ./candidate/:id
        description: Retrieve candidate by id for given position
        operationId: company-position-candidate
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            description: position id
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            description: candidate id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\tCandidate Object\n}"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCandidateErrror",
                              "message": "there was an unknown error getting candidate."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCandidateErrror
                        message:
                          type: string
                          example: there was an unknown error getting candidate.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000
          samples-languages:
            - curl
      put:
        summary: ./candidate/:id
        description: Updates a candidate on a position
        operationId: company-position-candidate-update
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  email_address:
                    type: string
                  phone_number:
                    type: string
                  summary:
                    type: string
                  source:
                    type: string
                    description: custom source to attribute to the incoming candidate
                    default: Breezy API
                  tags:
                    type: array
                    items:
                      type: string
                  headline:
                    type: string
                  address:
                    type: string
                  social_profiles:
                    type: object
                    description: >-
                      valid properties ( facebook | linkedin | twitter | dribbble
                      | instagram | behance | angellist | flickr | github |
                      youtube | google-plus | skype | globe )
                    properties: {}
                  cover_letter:
                    type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         Candidate Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "updateCandidateError",
                              "message": "there was an unknown error updating candidate."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: updateCandidateError
                        message:
                          type: string
                          example: there was an unknown error updating candidate.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "PUT /v3/company/000000000000/position/000000000000/candidate/000000000000 HTTP/1.1\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n  \"name\": \"New Candidate\",\n  \"email_address\": \"candidate@emailaddress.com\",\n  \"phone_number\": \"123-456-7890\",\n  \"summary\": \"I will be a good candidate for any job you have!\",\n  \"tags\": [\"technical\", \"junior\"],\n  \"source\": \"LinkedIn\",\n  \"headline\": \"This is the candidate headline\",\n  \"address\": \"1234 Mockingbird Lane\\nTopeka, KS 12345\",\n  \"social_profiles\": {\n  \t\"facebook\": \"https://link.to/facebook\",\n    \"github\": \"https://link.to/github\"\n  },\n  \"cover_letter\": \"Please consider me\"\n}"
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{ "name": "New
                Candidate", "email_address": "candidate@emailaddress.com",
                "phone_number": "123-456-7890", "summary": "I will be a good
                candidate for any job you have!", "tags": ["technical", "junior"],
                "source": "LinkedIn", "headline": "This is the candidate
                headline", "address": "1234 Mockingbird Lane\nTopeka, KS 12345",
                "social_profiles": { "facebook": "https://link.to/facebook",
                "github": "https://link.to/github" }, "cover_letter": "Please
                consider me"}'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000

          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/assessments:
      get:
        summary: ./candidate/:id/assessments
        description: Retrieve all 3rd party assessments candidate has taken
        operationId: company-position-candidate-assessments
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            description: position id
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            description: candidate id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\tAssessment Object\n}"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCandidateAssessmentsErrror",
                              "message": "there was an unknown error getting candidate assessments"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCandidateAssessmentsErrror
                        message:
                          type: string
                          example: >-
                            there was an unknown error getting candidate
                            assessments
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/assessments
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/background-checks:
      get:
        summary: ./candidate/:id/background-checks
        description: Retrieve all 3rd party background checks for candidate
        operationId: company-position-candidate-background-checks
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            description: position id
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            description: candidate id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\tBackground Check Object\n}"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCandidateAssessmentsErrror",
                              "message": "there was an unknown error getting candidate background checks"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCandidateAssessmentsErrror
                        message:
                          type: string
                          example: >-
                            there was an unknown error getting candidate
                            background checks
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/background-checks
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/conversation:
      get:
        summary: ./candidate/:id/conversation
        description: Retrieve candidate conversation stream
        operationId: company-position-candidate-conversation
        parameters:
          - name: company_id
            in: path
            description: company _id
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            description: position id
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            description: candidate id
            required: true
            schema:
              type: string
          - name: include_delayed
            in: query
            description: >-
              1 to include any messages that are currently queued for delayed
              delivery
            schema:
              type: integer
              format: int32
              default: 0
          - name: skip
            in: query
            description: Number of records to skip for paging
            schema:
              type: integer
              format: int32
              default: 0
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n  {\n    \"_id\": String,\n    \"type\": \"messageToCandidatePosted | messageFromCandidatePosted\",\n    \"object\": {\n      \"body\": String,\n      \"subject\": Subject,\n      \"attachments\": [\n        {\n      \t\t\"status\": String,\n        \t\"file_name\": String,\n        \t\"url\": String,\n        \t\"content_type\": String\n        },\n        ...\n      ],      \n      \"candidate_id\": String,\n      \"company_id\": String,\n      \"position_id\": String,\n      \"acting_user\": { Candidate | User}\n    },\n    \"timestamp\": Date\n  }\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getConversationError",
                              "message": "there was an unknown error getting candidate conversation."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getConversationError
                        message:
                          type: string
                          example: >-
                            there was an unknown error getting candidate
                            conversation.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/conversation?include_delayed=1&skip=50
          samples-languages:
            - curl
      post:
        summary: ./candidate/:id/conversation
        description: Adds a new conversation message for the candidate
        operationId: company-position-candidate-conversation-add
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: string
                    description: the content of the conversation to add
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n  \"_id\": String,\n  \"type\": \"messageToCandidatePosted\",\n  \"object\": {\n    \"body\": String,\n    \"subject\": Subject,\n    \"attachments\": [\n      {\n        \"status\": String,\n        \"file_name\": String,\n        \"url\": String,\n        \"content_type\": String\n      },\n      ...\n    ],      \n\t\t\"candidate_id\": String,\n\t\t\"company_id\": String,\n\t\t\"position_id\": String,\n\t\t\"acting_user\": { Candidate | User}\n\t},\n\t\"timestamp\": Date\n}"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "postConversationMissingBody",
                              "message": "body is null or empty"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: postConversationMissingBody
                            message:
                              type: string
                              example: body is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "postMessageError",
                              "message": "there was an unknown error posting message."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: postMessageError
                        message:
                          type: string
                          example: there was an unknown error posting message.
        deprecated: false
        x-readme:
          code-samples:
            - language: html
              code: >-
                POST
                /v3/company/000000000000/position/000000000000/candidate/000000000000/conversation
                HTTP/1.1

                Host: api.breezy.hr

                Authorization: 00000000-0000-0000-0000-000000000000

                Content-Type: application/json


                {
                  "body": "Hi there! This is a test message!"
                }
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X POST -d '{ "body": "Hi
                there! This is a test message!" }'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/conversation

          samples-languages:
            - html
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/custom-attribute:
      put:
        summary: ./candidate/:id/custom-attribute
        description: Adds a custom-attribute to a candidate
        operationId: company-position-candidate-custom-attribute-update
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    type: string
                  value:
                    type: string
                  secure:
                    type: boolean
                    description: Does this value need to be encrypted at rest?
                    default: false
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         Candidate Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "updateCandidateError",
                              "message": "there was an unknown error updating candidate."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: updateCandidateError
                        message:
                          type: string
                          example: there was an unknown error updating candidate.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "PUT /v3/company/000000000000/position/000000000000/candidate/000000000000/custom-attribute HTTP/1.1\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n\t\"name\": \"Desired Salary\",\n\t\"value\": \"100000\"\n\t\"secure\": true\n}"
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{"name": "Desired
                Salary","value": "100000""secure": true}'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/custom-attribute

          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/documents:
      get:
        summary: ./candidate/:id/documents
        description: Retrieve candidate documents by id for given position
        operationId: company-position-candidate-documents
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n\t{\n\t\t\"_id\": String,\n\t\t\"company_id\": String,\n\t\t\"position_id\": String,        \n\t\t\"candidate_id\": String,\n\t\t\"acting_user\": { User | Candidate},\n\t\t\"file_name\": String,\n\t\t\"file_url\": String,\n\t\t\"file_size\": Integer,\n\t\t\"creation_date\": Date\n\t},\n  ...\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getDocumentsError",
                              "message": "there was an unknown error getting documents."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getDocumentsError
                        message:
                          type: string
                          example: there was an unknown error getting documents.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/documents
          samples-languages:
            - curl
      post:
        summary: ./candidate/:id/documents
        description: Adds a new document for the candidate
        operationId: candidate-documents-add
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "_id": String,
                        "company_id": String,
                        "position_id": String,        
                        "candidate_id": String,
                        "acting_user": { User },
                        "file_name": String,
                        "file_url": String,
                        "file_size": Integer,
                        "creation_date": Date
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "addDocumentError",
                              "message": "there was an unknown error saving document."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: addDocumentError
                        message:
                          type: string
                          example: there was an unknown error saving document.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -X POST -H "Authorization:
                00000000-0000-0000-0000-000000000000" -F'data=@/path/to/file'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/documents
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/education:
      put:
        summary: ./candidate/:id/education
        description: Adds an education entry to a candidate
        operationId: company-position-candidate-update-education
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - school_name
                properties:
                  school_name:
                    type: string
                  field_of_study:
                    type: string
                  start_year:
                    type: integer
                    format: int32
                  end_year:
                    type: integer
                    format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         Candidate Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "updateCandidateError",
                              "message": "there was an unknown error updating candidate."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: updateCandidateError
                        message:
                          type: string
                          example: there was an unknown error updating candidate.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "PUT /v3/company/000000000000/position/000000000000/candidate/000000000000/education HTTP/1.1\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n\t\"school_name\": \"Widget School\",\n\t\"field_of_study\": \"Widget Making\",\n\t\"start_year\": 2017,\n\t\"end_year\": 11\n}"
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{"school_name":
                "Widget School","field_of_study": "Widget Making","start_year":
                2017,"end_year": 11}'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/education

          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/meta:
      get:
        summary: ./candidate/:id/meta
        description: Retrieve candidate meta data by id for given position
        operationId: company-position-candidate-meta
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n  \"tasks\": [], //any tasks for this candidate,\n  \"background_checks\": [], //any background check information\n  \"notepad\": [], //authenticated user's notes\n  \"team_notepad\": [], //team notes user has access to see\n  \"assessments\": [], //any external assessment information\n  \"stream\": [], //discussion stream\n  \"schedule\": [], //any scheduled meetings with candidate\n \t\"documents\": [], //any documents attached to candidate\n  \"questionnaires\": [], //any questionnaires sent to the candidate\n  \"conversation\": [], //email conversation thread\n  \"references\": [], //any references added to candidate\n  \"scorecards\": [] //any scorecards filled out for candidate\n}"
                schema:
                  type: object
                  properties:
                    tasks:
                      type: array
                    background_checks:
                      type: array
                    notepad:
                      type: array
                    team_notepad:
                      type: array
                    assessments:
                      type: array
                    stream:
                      type: array
                    schedule:
                      type: array
                    documents:
                      type: array
                    questionnaires:
                      type: array
                    conversation:
                      type: array
                    references:
                      type: array
                    scorecards:
                      type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCandidateMetadataError",
                              "message": "there was an unknown error getting candidate metadata."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCandidateMetadataError
                        message:
                          type: string
                          example: there was an unknown error getting candidate metadata.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/meta
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/move:
      post:
        summary: ./candidate/:id/move
        description: Moves a candidate from one position to another
        operationId: company-position-candidate-move
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - target_position_id
                  - target_stage_id
                properties:
                  target_position_id:
                    type: string
                  target_stage_id:
                    type: string
                  stage_actions_enabled:
                    type: boolean
                    description: >-
                      Execute stage actions on the target position / stage if they
                      are configured
                    default: false
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: '{ Candidate Object }'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "moveCandidateMissingPosition",
                              "message": "target_position_id is null or empty"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: moveCandidateMissingStage
                            message:
                              type: string
                              example: target_stage_id is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: moveCandidateMissingPosition
                            message:
                              type: string
                              example: target_position_id is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "moveCandidateUserNotAuthorized",
                              "message": "user does not have proper access to target position"
                          }
                      }
                schema:
                  oneOf:
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: invalidAccessToken
                            message:
                              type: string
                              example: access token is invalid
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: moveCandidateUserNotAuthorized
                            message:
                              type: string
                              example: >-
                                user does not have proper access to target
                                position
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "moveCandidatePositionNotFound",
                              "message": "target position not found"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: moveCandidatePositionNotFound
                        message:
                          type: string
                          example: target position not found
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "postMessageError",
                              "message": "there was an unknown error posting message."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: postMessageError
                        message:
                          type: string
                          example: there was an unknown error posting message.
        deprecated: false
        x-readme:
          code-samples:
            - language: html
              code: "POST /v3/company/000000000000/position/000000000000/candidate/000000000000/move HTTP/1.1\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n\t\"target_position_id\": \"000000000000\",\n\t\"target_stage_id\": \"applied\",\n  \"stage_actions_enabled\": false\n}"
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X POST -d
                '{"target_position_id": "000000000000","target_stage_id":
                "applied", "stage_actions_enabled": false }'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/move

          samples-languages:
            - html
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/questionnaire/{candidate_questionnaire_id}:
      post:
        summary: ./candidate/:id/questionnaire/:id
        description: Save candidate responses to a questionnaire
        operationId: company-position-candidate-questionnaire-update
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_questionnaire_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - questions
                properties:
                  questions:
                    type: array
        responses:
          '204':
            description: '204'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "updateCandidateQuestionnaireUnkownError",
                              "message": "there was an unknown error responding to canididate questionnaire."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: updateCandidateQuestionnaireUnkownError
                        message:
                          type: string
                          example: >-
                            there was an unknown error responding to canididate
                            questionnaire.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "POST /v3/company/000000000000/position/000000000000/candidate/000000000000/questionnaire/000000000000 HTTP/1.1\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n\t\"questions\": [\n\t\t{\n\t\t\t\"_id\": \"000000000000\",  //question_id\n\t\t\t\"response\": \"Option Value\"  // syntax for multiplechoice/dropdown type questions\n\t\t},\n\t\t{\n\t\t\t\"_id\": \"000000000000\", //question_id\n\t\t\t\"response\": \"This is the text response\" //syntax for paragraph/text type questions\n\t\t},\n\t\t{\n\t\t\t\"_id\": \"000000000000\", //question_id\n\t\t\t\"responses\": [\"Option Value 1\", \"Option Value 2\"] //syntax for checkboxes type questions - note the key is responses, not response\n\t\t}\n\t\t\n\t]\n}"
            - language: curl
              code: "curl -H \"Content-Type: application/json\" -H \"Authorization: 00000000-0000-0000-0000-000000000000\" -X POST -d '{\"questions\": [{\"_id\": \"000000000000\",\"response\": \"Option Value\"},{\"_id\": \"000000000000\",\"response\": \"This is the text response\"},{\"_id\": \"000000000000\", \"responses\": [\"Option Value 1\", \"Option Value 2\"]\t}]}' https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/questionnaire/000000000000\n\n"
          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/questionnaires:
      get:
        summary: ./candidate/:id/questionnaires
        description: Retrieve candidate questionnaires
        operationId: company-position-candidate-questionnaires
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        { CandidateQuestionnaire Object},
                        ...
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getQuestionnairesError",
                              "message": "there was an unknown error getting candidate questionnaires."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getQuestionnairesError
                        message:
                          type: string
                          example: >-
                            there was an unknown error getting candidate
                            questionnaires.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/questionnaires
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/resume:
      post:
        summary: ./candidate/:id/resume
        description: Attach a resume file to an existing candidate
        operationId: company-position-candidate-resume-add
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    description: must be sent as `form-data` with the field name `file`
                    format: binary
        responses:
          '204':
            description: '204'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "uploadResumeError",
                              "message": "There was an error saving resume."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: uploadResumeError
                        message:
                          type: string
                          example: There was an error saving resume.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -X POST -H "Authorization:
                00000000-0000-0000-0000-000000000000" -F'data=@/path/to/file'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/resume
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/scorecard:
      put:
        summary: ./candidate/:id/scorecard
        description: Update candidate scorecard for user
        operationId: company-position-candidate-scorecard-update
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - score
                properties:
                  score:
                    type: string
                    description: The score code (very_poor, poor, neutral, good, very_good)
                  note:
                    type: string
                    description: Note to add with the score.
        responses:
          '204':
            description: '204'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "addCandidateScorecardScoreInvalid",
                              "message": "'<value>' is not an allowable score. Allowed properties are: very_poor,poor,neutral,good,very_good"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: addCandidateScorecardMissingScore
                            message:
                              type: string
                              example: score is required
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: addCandidateScorecardScoreInvalid
                            message:
                              type: string
                              example: >-
                                '<value>' is not an allowable score. Allowed
                                properties are:
                                very_poor,poor,neutral,good,very_good
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "setCandidateStatusError",
                              "message": "there was an unknown error setting candidate stage."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: setCandidateStatusError
                        message:
                          type: string
                          example: there was an unknown error setting candidate stage.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: >-
                PUT
                /v3/company/000000000000/position/000000000000/candidate/000000000000/scorecard
                HTTP/1.1

                Host: api.breezy.hr

                Authorization: 00000000-0000-0000-0000-000000000000

                Content-Type: application/json


                {
                  "score": "very_good",
                  "note": "I really love this candidate for this position"
                }
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{ "stage_id":
                "000000000000" }'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/stage
          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/send-questionnaire:
      post:
        summary: ./candidate/:id/send-questionnaire
        description: Create a new questionnaire for a candidate
        operationId: company-position-candidate-send-questionnaire
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
          - name: questionnaire_id
            in: query
            required: true
            schema:
              type: string
          - name: email_candidate
            in: query
            description: >-
              should the result of this action send an email to the candidate to
              complete questionnaire
            schema:
              type: boolean
              default: false
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      { 
                        CandidateQuestionnaire Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "sendQuestionnaireMissingId",
                              "message": "questionnaire_id is null or empty"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: sendQuestionnaireMissingId
                            message:
                              type: string
                              example: questionnaire_id is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getQuestionnairesError",
                              "message": "there was an unknown error getting candidate questionnaires."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getQuestionnairesError
                        message:
                          type: string
                          example: >-
                            there was an unknown error getting candidate
                            questionnaires.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/send-questionnaire?questionnaire_id=000000000000
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/stage:
      put:
        summary: ./candidate/:id/stage
        description: Move candidate to specified stage
        operationId: company-position-candidate-stage-update
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  stage_id:
                    type: string
                    description: >-
                      The ID of the Pipeline stage to put the candidate in (hired,
                      disqualified, offer, feedback, interviewing, applied)
        responses:
          '204':
            description: '204'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "setCandidateStatusMissingStageId",
                              "message": "stage_id is null or empty"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: setCandidateStatusMissingStageId
                            message:
                              type: string
                              example: stage_id is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "setCandidateStatusError",
                              "message": "there was an unknown error setting candidate stage."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: setCandidateStatusError
                        message:
                          type: string
                          example: there was an unknown error setting candidate stage.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: >-
                PUT
                /v3/company/000000000000/position/000000000000/candidate/000000000000/stage
                HTTP/1.1

                Host: api.breezy.hr

                Authorization: 00000000-0000-0000-0000-000000000000

                Content-Type: application/json


                {
                  "stage_id": "000000000000"  
                }
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{ "stage_id":
                "000000000000" }'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/stage
          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/stream:
      get:
        summary: ./candidate/:id/stream
        description: >-
          Retrieve last 50 candidate discussion stream events by candidate id for
          given position
        operationId: company-position-candidate-stream
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "_id": String,
                          "type": "string",
                          "stream_id": String,
                          "object": {}, //stream object specific to type
                          "timestamp": Date
                        },
                        ...
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getStreamError",
                              "message": "there was an unknown error getting candidate stream."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getStreamError
                        message:
                          type: string
                          example: there was an unknown error getting candidate stream.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/stream
          samples-languages:
            - curl
      post:
        summary: ./candidate/:id/stream
        description: Adds a note to a candidate's discussion stream
        operationId: company-position-candidate-stream-add
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: string
                    description: the content of the note to add
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "_id": String,
                        "type": "companyNotePosted",
                        "stream_id": String,
                        "object": {}, //stream object specific to type
                        "timestamp": Date
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "postNoteMissingBody",
                              "message": "body is null or empty"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: postNoteMissingBody
                            message:
                              type: string
                              example: body is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "postNoteError",
                              "message": "there was an unknown error posting message."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: postNoteError
                        message:
                          type: string
                          example: there was an unknown error posting message.
        deprecated: false
        x-readme:
          code-samples:
            - language: html
              code: >-
                POST
                /v3/company/000000000000/position/000000000000/candidate/000000000000/stream
                HTTP/1.1

                Host: api.breezy.hr

                Authorization: 00000000-0000-0000-0000-000000000000

                Content-Type: application/json


                {
                  "body": "Hi there! This is a test message!"
                }
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X POST -d '{ "body": "Hi
                there! This is a test message!" }'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/stream

          samples-languages:
            - html
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/work-history:
      put:
        summary: ./candidate/:id/work-history
        description: Adds a work history entry to a candidate
        operationId: company-position-candidate-update-work-history
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: candidate_id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - company_name
                properties:
                  company_name:
                    type: string
                  title:
                    type: string
                  summary:
                    type: string
                  start_month:
                    type: integer
                    format: int32
                  start_year:
                    type: integer
                    format: int32
                  end_month:
                    type: integer
                    format: int32
                  end_year:
                    type: integer
                    format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         Candidate Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "updateCandidateError",
                              "message": "there was an unknown error updating candidate."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: updateCandidateError
                        message:
                          type: string
                          example: there was an unknown error updating candidate.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "PUT /v3/company/000000000000/position/000000000000/candidate/000000000000/work-history HTTP/1.1\nHost: app.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n\t\"company_name\": \"Widget Corp\",\n\t\"title\": \"Widget Maker\",\n\t\"summary\": \"I made all the widgets\",\n\t\"start_month\": 1,\n\t\"start_year\": 2015,\n\t\"end_month\": 10,\n\t\"end_year\": 2017\n}"
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{"company_name":
                "Widget Corp","title": "Widget Maker","summary": "I made all the
                widgets","start_month": 1,"start_year": 2015,"end_month":
                10,"end_year": 2017 }'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/work-history

          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/candidates:
      get:
        summary: ./candidates
        description: >-
          Retrieve candidates for given position with an abbreviated candidate
          object
        operationId: company-position-candidates
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: page_size
            in: query
            description: 'Add this parameter to force paging of results (max: 50)'
            schema:
              type: integer
              format: int32
          - name: page
            in: query
            description: >-
              If page size is passed, this determines which page of data will be
              returned
            schema:
              type: integer
              format: int32
              default: 1
          - name: sort
            in: query
            description: >-
              Determines the sort order of the data returned. Can be (created |
              updated)
            schema:
              type: string
              default: updated
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n  {\n    \"_id\": String,\n    \"meta_id\": String,\n    \"creation_date\": Date,\n    \"email_address\": String,\n    \"headline\": String,\n    \"initial\": Char(1),\n    \"name\": String,\n    \"origin\": \"applied | sourced | recruiter | referral\",\n    \"phone_number\": String,\n    \"profile_photo_url\": String,\n    \"resume\": {\n      \"file_name\": String,\n      \"url\": String,\n      \"pdf_url\": String\n\t\t},\n    \"source\": {\n      \"id\": String,\n      \"name\": String,\n      \"type\": String\n    },\n    \"stage\": {\n      \"id\": String,\n      \"name\": String,\n      \"type\": {\n        \"id\": String,\n        \"name\": String,\n        \"icon\": String\n      }\n    },\n    \"tags\": [String,...],\n    \"updated_date\": Date\n\t},\n\t...\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCandidatesError",
                              "message": "there was an unknown error getting candidates."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCandidatesError
                        message:
                          type: string
                          example: there was an unknown error getting candidates.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidates?page_size=10&page=1&sort=created
          samples-languages:
            - curl
      post:
        summary: ./candidates
        description: Add a new candidate to a position
        operationId: company-position-candidates-add
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: stage_actions_enabled
            in: query
            description: >-
              When origin is "sourced", should stage actions be executed (defaults
              to false). This is always true when origin is "applied"
            schema:
              type: boolean
              default: false
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                  email_address:
                    type: string
                    description: '*required when origin is "applied"'
                  phone_number:
                    type: string
                  address:
                    type: string
                  summary:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
                  origin:
                    type: string
                    description: >-
                      ( sourced | applied ) -> will indicate in Breezy if the
                      candidate should be marked as sourced or applied
                    default: sourced
                  source:
                    type: string
                    description: custom source to attribute to the incoming candidate
                    default: Breezy API
                  work_history:
                    type: array
                  education:
                    type: array
                  social_profiles:
                    type: object
                    description: >-
                      valid properties ( facebook | linkedin | twitter | dribbble
                      | instagram | behance | angellist | flickr | github |
                      youtube | google-plus | skype | globe )
                    properties: {}
                  custom_attributes:
                    type: array
                    description: >-
                      { name: String, value: String, secure: Boolean } - secure
                      determines if the value should be encrypted at rest
                  cover_letter:
                    type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         Candidate Object
                      }
          '202':
            description: '202'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "partialCandidateCreated",
                              "message": "This candidate was created successfully without all required fields set on application form. Candidate has been emailed to complete missing required fields and will be available in Breezy upon completion."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: partialCandidateCreated
                        message:
                          type: string
                          example: >-
                            This candidate was created successfully without all
                            required fields set on application form. Candidate has
                            been emailed to complete missing required fields and
                            will be available in Breezy upon completion.
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Missing Name:
                    value: |-
                      {
                          "error": {
                              "type": "addCandidateMissingName",
                              "message": "name is null or empty"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - title: Missing Name
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: addCandidateMissingName
                            message:
                              type: string
                              example: name is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "addCandidateError",
                              "message": "there was an unknown error creating candidate."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: addCandidateError
                        message:
                          type: string
                          example: there was an unknown error creating candidate.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "POST /v3/company/000000000000/position/000000000000/candidates HTTP/1.1\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n  \"name\": \"New Candidate\",\n  \"email_address\": \"candidate@emailaddress.com\",\n  \"phone_number\": \"123-456-7890\",\n  \"summary\": \"I will be a good candidate for any job you have!\",\n  \"tags\": [\"technical\", \"junior\"],\n  \"source\": \"LinkedIn\",\n  \"origin\": \"applied\",\n  \"address\": \"1234 Mockingbird Lane\\nTopeka KS, 12345\",\n  \"work_history\": [\n  \t{\n    \t\"company_name\": \"Widget Corp\",\n      \"title\": \"Widget Maker\",\n      \"summary\": \"I made all the widgets\",\n      \"start_month\": 1,\n      \"start_year\": 2015,\n      \"end_month\": 10,\n      \"end_year\": 2017\n    }\n  ],\n  \"education\": [\n  \t{\n    \t\"school_name\": \"Widget School\",\n      \"field_of_study\": \"Widget Making\",\n      \"start_year\": 2017,\n      \"end_year\": 11\n    }\n  ],\n  \"social_profiles\": {\n  \t\"facebook\": \"https://link.to/facebook\",\n    \"github\": \"https://link.to/github\"\n  },\n  \"custom_attributes\": [\n  \t{\n    \tname: \"Desired Salary\",\n      value: \"1000000\",\n      secure: true\n    }\n  ],\n  \"cover_letter\": \"Please consider me\"\n}"
            - language: curl
              code: >+
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X POST -d '{ "name": "New
                Candidate", "email_address": "candidate@emailaddress.com",
                "phone_number": "123-456-7890", "summary": "I will be a good
                candidate for any job you have!", "tags": ["technical", "junior"],
                "source": "LinkedIn","origin": "applied", "address": "1234
                Mockingbird Lane\nTopeka KS, 12345", "work_history":
                [{"company_name": "Widget Corp","title": "Widget Maker","summary":
                "I made all the widgets","start_month": 1,"start_year":
                2015,"end_month": 10,"end_year": 2017}],"education":
                [{"school_name": "Widget School","field_of_study": "Widget
                Making","start_year": 2017,"end_year": 11}], "social_profiles": {
                "facebook": "https://link.to/facebook", "github":
                "https://link.to/github"},"custom_attributes": [ { name: "Desired
                Salary", value: "1000000", secure: true }],"cover_letter": "Please
                consider me" }'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidates

          samples-languages:
            - http
            - curl
    /v3/company/{company_id}/position/{position_id}/candidates/resume:
      post:
        summary: ./candidates/resume
        description: Upload and parse a resume file to create a new candidate
        operationId: company-position-candidates-resume-add
        parameters:
          - name: company_id
            in: path
            required: true
            schema:
              type: string
          - name: position_id
            in: path
            required: true
            schema:
              type: string
          - name: stage_id
            in: query
            description: id of pipeline stage to put new candidate in
            schema:
              type: string
              default: applied
          - name: stage_actions_enabled
            in: query
            description: >-
              execute stage actions configured on stage candidate is being created
              in
            schema:
              type: boolean
              default: false
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    description: must be sent as `form-data` with the field name of `file`
                    format: binary
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         Candidate Object
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "addCandidateByResumeDuplicate",
                              "message": "this candidate already exists on this position."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: addCandidateByResumeDuplicate
                        message:
                          type: string
                          example: this candidate already exists on this position.
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "addCandidateByResumeError",
                              "message": "there was an unknown error adding candidate by resume."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: addCandidateByResumeError
                        message:
                          type: string
                          example: there was an unknown error adding candidate by resume.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >
                curl -X POST -H "Authorization:
                00000000-0000-0000-0000-000000000000" -F'data=@/path/to/file'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidates/resume?stage_id=applied&stage_actions_enabled=true
          samples-languages:
            - curl
    /v3/company/{company_id}/candidates/search:
      get:
        summary: ./candidates/search
        description: Retrieve all candidates with entered email address
        operationId: company-candidates-search
        parameters:
          - name: company_id
            in: path
            description: company id
            required: true
            schema:
              type: string
          - name: email_address
            in: query
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[{\n  _id: String,\n  name: String,\n\tposition: { Position Object }\n}]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "searchCompanyCandidatesMissingEmail",
                              "message": "email_address is null or empty"
                          }
                      }
                schema:
                  oneOf:
                    - title: Missing Access Token
                      type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: missingAccessToken
                            message:
                              type: string
                              example: access token is null or empty
                    - type: object
                      properties:
                        error:
                          type: object
                          properties:
                            type:
                              type: string
                              example: searchCompanyCandidatesMissingEmail
                            message:
                              type: string
                              example: email_address is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "searchCompanyCandidatesError",
                              "message": "there was an unknown error getting candidate."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: searchCompanyCandidatesError
                        message:
                          type: string
                          example: there was an unknown error getting candidate.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/candidates/search?email_address=this@that.com
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/custom-fields:
      get:
        summary: ./candidate/:id/custom-fields
        description: ''
        operationId: candidateidcustom-fields
        parameters:
          - name: company_id
            in: path
            description: company id
            schema:
              type: string
            required: true
          - name: position_id
            in: path
            description: position id
            schema:
              type: string
            required: true
          - name: candidate_id
            in: path
            description: candidate id
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        Candidate Custom Field Object
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "getCandidateCustomFieldsError",
                              "message": "there was an unknown error getting candidate custom fields."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: getCandidateCustomFieldsError
                        message:
                          type: string
                          example: >-
                            there was an unknown error getting candidate custom
                            fields.
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000"
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/custom-fields
          samples-languages:
            - curl
    /v3/company/{company_id}/position/{position_id}/candidate/{candidate_id}/custom-fields/{custom_field_id}:
      put:
        summary: ./candidate/:id/custom-fields/:id
        description: ''
        operationId: candidateidcustom-fieldsid
        parameters:
          - name: company_id
            in: path
            description: company id
            schema:
              type: string
            required: true
          - name: position_id
            in: path
            description: position id
            schema:
              type: string
            required: true
          - name: candidate_id
            in: path
            description: candidate id
            schema:
              type: string
            required: true
          - name: custom_field_id
            in: path
            description: custom field id
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        Candidate Custom Field Object
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Missing Access Token:
                    value: |-
                      {
                          "error": {
                              "type": "missingAccessToken",
                              "message": "access token is null or empty"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: missingAccessToken
                        message:
                          type: string
                          example: access token is null or empty
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "invalidAccessToken",
                              "message": "access token is invalid"
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: invalidAccessToken
                        message:
                          type: string
                          example: access token is invalid
          '500':
            description: '500'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "error": {
                              "type": "updateCandidateCustomFieldsError",
                              "message": "there was an unknown error updating candidate fields."
                          }
                      }
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        type:
                          type: string
                          example: updateCandidateCustomFieldsError
                        message:
                          type: string
                          example: there was an unknown error updating candidate fields.
        deprecated: false
        x-readme:
          code-samples:
            - language: http
              code: "PUT /v3/company/000000000000/position/000000000000/candidate/000000000000/custom-fields/000000000000\nHost: api.breezy.hr\nAuthorization: 00000000-0000-0000-0000-000000000000\nContent-Type: application/json\n\n{\n\t\"value\": \"new value\"\n}"
            - language: curl
              code: >
                curl -H "Content-Type: application/json" -H "Authorization:
                00000000-0000-0000-0000-000000000000" -X PUT -d '{ "value": "new
                value"}'
                https://api.breezy.hr/v3/company/000000000000/position/000000000000/candidate/000000000000/custom-fields/000000000000
          samples-languages:
            - http
            - curl
  x-readme:
    headers: []
    explorer-enabled: true
    proxy-enabled: true
  x-readme-fauxas: true
  _id: 63053e6d9807941f67a926d7:60f86d7494f1a400728ff55d
konfigCliVersion: 1.38.37
