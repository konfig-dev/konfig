publishJson:
  company: ClayHR
  serviceName: false
  sdkName: clay-hr-{language}-sdk
  clientName: ClayHr
  metaDescription: >-
    Gartner Cool Vendor for Human Capital Management, ClayHR is the AI powered
    HCM system for fast growing mid-sized enterprises.


    With an open API, rich data integrations and highly configurable platform,

    BizMerlinHR enables you to hire the best candidates, easily onboard your
    employees, guide their performance and train and retaining your best talent.


    ClayHR was launched in 2013, and has customers spanning multiple industries
    across North America, South America, Europe, Africa and Asia Pacific.


    Completely cloud based application available via your favorite web browsers
    and native iOS and Android mobile apps. 100+ integrations with JIRA,
    Salesforce, FreshBooks, QuickBooks, Slack and others.
  apiStatusUrls:
    - https://clayhr.readme.io/
  homepage: clayhr.com
  developerDocumentation: clayhr.readme.io/
  categories:
    - hr
    - human_resources
    - hr_reporting
    - hr_analytics
    - employee_onboarding
    - performance_reviews
    - timesheets_leave_tracking
    - attendance_management
    - hr_automation
rawSpecString: |
  openapi: 3.0.0
  info:
    description: API Documentation
    version: '1.0'
    title: Expense Reports
    termsOfService: https://www.bizmerlin.com/terms-of-service/
    contact: {}
  tags:
    - name: Swagger Shift
      description: List of APIs for Shifts
  paths:
    /api/token:
      get:
        summary: Get Access Token for Authentication
        description: Get Access Token for Authentication using x-api-key and userId.
        operationId: get-customer-configurations-from-public-customer-model
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "accessToken": "String"
                      }
                schema:
                  type: object
                  properties:
                    accessToken:
                      type: string
                      example: String
          '403':
            description: Forbidden
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "forbidden"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: forbidden
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/announcement/create:
      post:
        tags:
          - Announcement
        summary: Create Announcement
        description: ' '
        operationId: createAnnouncementUsingPOST
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
              minLength: 3
              maxLength: 20
              example: ''
          - name: title
            in: query
            required: true
            description: Title of the announcement.
            schema:
              type: string
              example: Travel Policies
          - name: description
            in: query
            description: Description of the announcement.
            required: true
            schema:
              type: string
              example: There are some amendments done in policy leave.
          - name: url
            in: query
            description: Any link associated/brief of the announcement.
            required: false
            schema:
              type: string
              example: https://www.google.com
          - name: status
            in: query
            description: >-
              Status of Announcement. Choose between ["A", "D", "I"]. Defaults to
              "A". 
               A - Active, D - In Draft, I - Archive
            required: false
            schema:
              type: string
              example: A
              enum:
                - A
                - D
                - I
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "annId": "int",
                        "message": "Announcement Created Successfully.
                      "
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                      "message": "Error while Authenticating User."
                      }
          '409':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                      "message": "Failure"
                      }
        deprecated: false
    /api/announcement/{annId}:
      get:
        tags:
          - Announcement
        summary: Retrieve Announcement
        description: ''
        operationId: EditAnnouncementUsingGET
        parameters:
          - name: annId
            in: path
            description: The ID of the announcement.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
              example: ''
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "locationIdList": "object",
                              "announcementModel": {
                                  "annId": "int",
                                  "title": "string",
                                  "desciption": "string",
                                  "url": "string",
                                  "status": "string",
                                  "cid": "int",
                                  "createts": "int",
                                  "userModel": {
                                      "cid": "int",
                                      "empId": "string",
                                      "userId": "int",
                                      "position": "string",
                                      "firstName": "string",
                                      "shortName": "string",
                                      "lastName": "string",
                                      "workerTypeModel": {
                                          "wtid": "int",
                                          "cid": "int",
                                          "code": "string",
                                          "description": "string",
                                          "createuserid": "string"
                                      },
                                      "displayFullName": "string",
                                      "userStartDate": "string",
                                      "email": "string",
                                      "cellPhone": "int",
                                      "userName": "string",
                                      "departmentModel": {
                                          "departmentId": "int",
                                          "name": "string",
                                          "description": "string",
                                          "deptHead": "int",
                                          "cid": "int",
                                          "departmentCode": "int",
                                          "departmentLabel": "string",
                                          "parentDepartmentId": "int",
                                          "parentDepartmentName": "string",
                                          "deptHeadName": "string",
                                          "noOfEmployees": "int",
                                          "userModel": {
                                              "userId": "int",
                                              "firstName": "string",
                                              "lastName": "string",
                                              "name": "string",
                                              "phone": "int",
                                              "email": "string",
                                              "status": "string",
                                              "shortName": "string",
                                              "gender": "string",
                                              "jobTitle": "string",
                                              "departmentId": "int",
                                              "department": "string",
                                              "profileId": "int",
                                              "profileName": "string",
                                              "timezone": "string",
                                              "userStartDate": "string",
                                              "userEndDate": "date",
                                              "cellPhone": "int",
                                              "empId": "string",
                                              "userDateOfBirth": "string",
                                              "allocation": "int",
                                              "userDateFormat": "date",
                                              "star": "int",
                                              "notes": "string",
                                              "im": "int",
                                              "createuserid": "int",
                                              "cid": "int",
                                              "guid": "string",
                                              "hasAccess": "int",
                                              "id": "int"
                                          }
                                      },
                                      "prefixSalutation": "string",
                                      "secondLastName": "string",
                                      "middleName": "string",
                                      "namePronunciation": "string",
                                      "familySuffix": "string",
                                      "status": "string",
                                      "ptoannual": "int",
                                      "ptobalance": "int",
                                      "gender": "string",
                                      "userDateOfBirth": "string",
                                      "phone": "int",
                                      "im": int,
                                      "createts": "int",
                                      "timezone": "string",
                                      "practiceId": "int",
                                      "imageName": "string",
                                      "thumbnail": "string",
                                      "profileId": "int",
                                      "allocation": "int",
                                      "countryId": "int",
                                      "lastupdateuserid": "int",
                                      "lastupdatets": "string",
                                      "userDateFormat": "date",
                                      "hrPortal": "string",
                                      "userDisplayName": "string",
                                      "star": "int",
                                      "timecardPeriodPref": "string",
                                      "languagePreference": "string",
                                      "tosVersion": "string",
                                      "guid": "string",
                                      "jobGrade": "",
                                      "paId": "int",
                                      "calendarId": "int",
                                      "hasAccess": "string",
                                      "notifications": "boolean",
                                      "locationModel": {
                                          "locationId": "int",
                                          "locationName": "string",
                                          "cid": "int",
                                          "locationDescription": "string",
                                          "locationType": "string",
                                          "address": "string",
                                          "lattitude": "string",
                                          "longitude": "string",
                                          "locationUID": "string",
                                          "status": "string",
                                          "workingDays": "string",
                                          "locationCode": "int",
                                          "locationLabel": "string",
                                          "parentLocationId": "string",
                                          "createuserid": "int",
                                          "addressModelList": [
                                              {
                                                  "addressId": "int",
                                                  "addressLine1": "string",
                                                  "addressLine2": "string",
                                                  "city": "string",
                                                  "currentStatus": "string",
                                                  "state": "int",
                                                  "zipCode": "int",
                                                  "createts": "int",,
                                                  "cid": "int",
                                                  "userId": "string",
                                                  "candidateId": "string",
                                                  "addressType": "string",
                                                  "locationId": "int",
                                                  "contactId": "string",
                                                  "countryId": int,
                                                  "countryModel": {
                                                      "countryId": "int"
                                                      "countryName": "string",
                                                      "iso2": "string"
                                                  },
                                                  "status": "string",
                                                  "verificationStatus": "string",
                                                  "custId": "string",
                                                  "mapUrl": "string",
                                                  "createUserId": "string",
                                                  "extAppUID": "string",
                                                  "countryid": "int"
                                              }
                                          ]
                                      },
                                      "practiceModel": {
                                          "practiceId": "int",
                                          "name": "string",
                                          "description": "string",
                                          "practiceHead": "int",
                                          "userModel": {
                                              "userId":"int",
                                              "firstName": "string",
                                              "lastName": "string",
                                              "name": "string",
                                              "phone": "int",
                                              "email": "string",
                                              "status": "string",
                                              "shortName": "string",
                                              "thumbnail": "string",
                                              "gender": "string",
                                              "jobTitle": "string",
                                              "departmentId": "int",
                                              "locationId": "int",
                                              "department": "string",
                                              "location": "string",
                                              "profileId": "int",
                                              "timezone": "string",
                                              "userStartDate": "string",
                                              "cellPhone": "int",
                                              "empId": "string",
                                              "userDateOfBirth": "string",
                                              "allocation": "int",
                                              "userDateFormat": "date",
                                              "star": "int",
                                              "imageName": "string",
                                              "notes": "string",
                                              "im": "int",
                                              "createuserid": "int",
                                              "countryId": "int",
                                              "cid": "int",
                                              "guid": "string",
                                              "hasAccess": "int",
                                              "calendarId": "int",
                                              "id": "int"
                                          },
                                          "createts": "int",
                                          "cid": "int",
                                      },
                                      "calendarModel": {
                                          "calendarId": "int",
                                          "name": "string",
                                          "colorCode": "string",
                                          "cid": "int",
                                          "createUserId": "int",
                                          "createts": "int",
                                          "createUserViewModel": "string"
                                      },
                                      "isView": "boolean",
                                      "view": "string"
                                  },
                                  "locationModel": "string",
                                  "departmentModel": "string",
                                  "annType": "string",
                                  "expirationDate": "string",
                                  "attachmentModel": "string",
                                  "notificationPopup": "int"
                              },
                              "departmentIdList": [
                                  "object"
                              ]
                          }
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Failure"
                      }
          '409':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                      "message": "Failure"
                      }
        deprecated: false
    /api/announcement/edit:
      put:
        tags:
          - Announcement
        summary: Update Announcement
        description: ''
        operationId: EditAnnouncementUsingPUT
        parameters:
          - name: annId
            in: query
            description: The ID of the announcement.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: title
            in: query
            description: Title of the announcement.
            required: true
            schema:
              type: string
          - name: desciption
            in: query
            description: Description of the announcement.
            required: true
            schema:
              type: string
              example: ''
          - name: url
            in: query
            description: Link associated with the announcement.
            required: false
            schema:
              type: string
              example: ''
          - name: status
            in: query
            description: >-
              Status of Announcement. Choose between ["A", "D", "I"]. Defaults to
              "A". 
               A - Active, D - In Draft, I - Archive
            required: true
            schema:
              type: string
              example: A
              enum:
                - A
                - D
                - I
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
              example: ''
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Announcement Edit Successfully."
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Failure"
                      }
          '409':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                      "message": "Failure"
                      }
        deprecated: false
    /api/attachment/list/{annId}:
      get:
        tags:
          - Announcement
        summary: Retrieve Announcement Attachments
        description: ''
        operationId: showDocumentLibraryInMobileUsingGET
        parameters:
          - name: annId
            in: path
            description: The ID of the announcement.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
              example: ''
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [
                          {
                            "attachid": "int",
                            "atchType": "string",
                            "fileExtn": "string",
                            "s3id": "int",
                            "filename": "int",
                            "authkey": "string",
                            "projectid": "int",
                            "cid": "int",
                            "createuserid": "int",
                            "size": "int",
                            "candidateid": "int",
                            "positionid": "string",
                            "ruleid": "int",
                            "comments": "string",
                            "createts": "int",
                            "userid": "int",
                            "attachUserModel": "object",
                            "userModel": {
                              "cid": "int",
                              "empId": "string",
                              "userId": "int",
                              "position": "string",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartDate": "date",
                              "email": "string",
                              "cellPhone": "int",
                              "userName": "string",
                              "userProfileModel": {
                                "cid": "int",
                                "profileId": "int",
                                "profileName": "string",
                                "profileDescription": "string",
                                "orgId": "int",
                                "profileResponsibilities": "string",
                                "profileRequirements": "string",
                                "salaryBandMin": "double",
                                "salaryBandMax": "double",
                                "salaryBandCurrency": "string",
                                "managerProfileId": "int",
                                "managerProfileName": "string",
                                "customFieldValueModelList": "object",
                                "numberofUsers": "int",
                                "createuserid": "int",
                                "status": "string",
                                "careerPathwayModelList": "object",
                                "objectType": "string",
                                "objectName": "string",
                                "objectid": "int"
                              },
                              "departmentModel": {
                                "departmentId": "int",
                                "name": "string",
                                "description": "string",
                                "deptHead": "int",
                                "cid": "int",
                                "departmentCode": "int",
                                "departmentLabel": "string",
                                "parentDepartmentId": "int",
                                "parentDepartmentName": "string",
                                "deptHeadName": "string",
                                "noOfEmployees": "int",
                                "userModel": "object"
                              },
                              "prefixSalutation": "string",
                              "secondLastName": "string",
                              "middleName": "string",
                              "namePronunciation": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "ptoannual": "int",
                              "ptobalance": "int",
                              "gender": "string",
                              "phone": "int",
                              "im": "int",
                              "createts": "int",
                              "timezone": "string",
                              "practiceId": "int",
                              "imageName": "string",
                              "thumbnail": "string",
                              "profileId": "int",
                              "allocation": "int",
                              "lastupdateuserid": "int",
                              "lastupdatets": "date",
                              "userDateFormat": "date",
                              "hrPortal": "string",
                              "userDisplayName": "string",
                              "star": "int",
                              "timecardPeriodPref": "string",
                              "languagePreference": "string",
                              "tosVersion": "string",
                              "guid": "string",
                              "jobGrade": "string",
                              "hasAccess": "boolean",
                              "notifications": "boolean",
                              "isView": "boolean",
                              "view": "string"
                            },
                            "projectModel": "object",
                            "objectType": "int",
                            "documentType": "string",
                            "signStatus": "string",
                            "signatureId": "int",
                            "taskId": "int",
                            "goalid": "int",
                            "assetid": "int",
                            "expenseid": "int",
                            "expenseItemId": "int",
                            "appraisalItemResponseId": "int",
                            "appraisalAssignmentId": "int",
                            "payStubId": "int",
                            "signingDate": "date",
                            "signatureRequestId": "int",
                            "folder": "string",
                            "folderId": "int",
                            "attachmentFolderModel": "object",
                            "topic": "string",
                            "annId": "int",
                            "timecardid": "int",
                            "customerId": "int",
                            "leaveid": "int",
                            "ticketId": "int",
                            "trainingId": "int",
                            "access": "string",
                            "userGroupModel": "object",
                            "objectAccessModelList": "object",
                            "documentContent": "string",
                            "documnetIssueDate": "date",
                            "documentExpiryDate": "date",
                            "dLIssueDate": "date",
                            "dLExpiryDate": "date",
                            "signNowTemplateId": "int",
                            "signNowDocId": "int",
                            "stateCountryModel": "object",
                            "userAccess": "string",
                            "language": "string",
                            "obtype": "string",
                            "multiSigning": "int",
                            "isPdfFiller": "int",
                            "skilluserId": "int",
                            "appraisalid": "int",
                            "status": "string",
                            "candidateAccess": "boolean",
                            "category": "string",
                            "secondSignerName": "string",
                            "global": "boolean",
                            "resume": "boolean"
                          }
                        ],
                        "message": "success"
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Failure"
                      }
          '409':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                      "message": "Failure"
                      }
        deprecated: false
    /:
      get:
        tags:
          - Candidates
        summary: Retrieve candidates
        description: ''
        operationId: retrieve-candidates
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [ 
                          {
                            "recruitId": "int",
                            "name": "string",
                            "referrerId": "int",
                            "referrer": "string",
                            "recruiter": "string",
                            "score": "int",
                            "updatedOn": "int",
                            "status": "string",
                            "notes": "string",
                            "dateOfBirth": "int",
                            "joiningDate": "int",
                            "cid": "int",
                            "email": "string",
                            "phone": "int",
                            "createts": "int",
                            "templateId": "int",
                            "recruiterUserId": "int",
                            "workflowId": "int",
                            "statusid": "int",
                            "workflowModel": "model",
                            "candidateStatusModel": "model",
                            "assessmentModel": "model",
                            "workflowName": "string",
                            "employmentModelList": "string",
                            "educationModelList": "string",
                            "customFieldValueModelList": "string",
                            "addressModelList": "string",
                            "skillModelList": "list",
                            "positionName": "string",
                            "candidatePositionsModelList": [
                              {
                                "candidatePositionsId": "int",
                                "candidateId": "int",
                                "positionid": "int",
                                "positionName": "string",
                                "positionDescription": "string",
                                "responsibilities": "string",
                                "positionDepartmentId": "int",
                                "positionLocationId": "int",
                                "positionProjectId": "int",
                                "positionProfileId": "int",
                                "count": "int",
                                "positioncreatets": "int",
                                "positionStatusOpenClosed": "string",
                                "applicationDueDate": "int",
                                "applicationStatusId": "int",
                                "applicationStatusValue": "int",
                                "sequence": "string",
                                "colorcode": "int",
                                "systemReco": "string",
                                "systemRecoHelp": "string",
                                "candidatePositionCreateTs": "int",
                                "cid": "int",
                                "appliedPositions": "string",
                                "status": "string"
                              }
                            ],
                            "createuserid": "int",
                            "lastupdateuserid": "int",
                            "accessCode": "int",
                            "source": "string",
                            "passwordHash": "string",
                            "acceptance1": "string",
                            "acceptance2": "string",
                            "summaryByCandidate": "string",
                            "systemReco": "string",
                            "systemRecoHelp": "string",
                            "candidateLock": "int",
                            "salaryCurrencyCode": "int",
                            "salaryAmount": "int",
                            "educationStr": "string",
                            "languagePreference": "string",
                            "userId": "int",
                            "verified": "string",
                            "verificationCode": "int",
                            "isInternalCand": "string",
                            "isNewCand": "string",
                            "timezone": "string",
                            "trainingAccess": "string",
                            "customfieldvalue": "string",
                            "cloudSearchSync": "int",
                            "jobBoardAccess": "string",
                            "bgScreeningOrderGuid": "string",
                            "bgScreeningOrderCreateDate": "int",
                            "checkrCandidateId": "int",
                            "positionModel": "model",
                            "certificationModelList": "string",
                            "attachmentModelList": "string"
                          }
                        ],
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          recruitId:
                            type: string
                            example: int
                          name:
                            type: string
                            example: string
                          referrerId:
                            type: string
                            example: int
                          referrer:
                            type: string
                            example: string
                          recruiter:
                            type: string
                            example: string
                          score:
                            type: string
                            example: int
                          updatedOn:
                            type: string
                            example: int
                          status:
                            type: string
                            example: string
                          notes:
                            type: string
                            example: string
                          dateOfBirth:
                            type: string
                            example: int
                          joiningDate:
                            type: string
                            example: int
                          cid:
                            type: string
                            example: int
                          email:
                            type: string
                            example: string
                          phone:
                            type: string
                            example: int
                          createts:
                            type: string
                            example: int
                          templateId:
                            type: string
                            example: int
                          recruiterUserId:
                            type: string
                            example: int
                          workflowId:
                            type: string
                            example: int
                          statusid:
                            type: string
                            example: int
                          workflowModel:
                            type: string
                            example: model
                          candidateStatusModel:
                            type: string
                            example: model
                          assessmentModel:
                            type: string
                            example: model
                          workflowName:
                            type: string
                            example: string
                          employmentModelList:
                            type: string
                            example: string
                          educationModelList:
                            type: string
                            example: string
                          customFieldValueModelList:
                            type: string
                            example: string
                          addressModelList:
                            type: string
                            example: string
                          skillModelList:
                            type: string
                            example: list
                          positionName:
                            type: string
                            example: string
                          candidatePositionsModelList:
                            type: array
                            items:
                              type: object
                              properties:
                                candidatePositionsId:
                                  type: string
                                  example: int
                                candidateId:
                                  type: string
                                  example: int
                                positionid:
                                  type: string
                                  example: int
                                positionName:
                                  type: string
                                  example: string
                                positionDescription:
                                  type: string
                                  example: string
                                responsibilities:
                                  type: string
                                  example: string
                                positionDepartmentId:
                                  type: string
                                  example: int
                                positionLocationId:
                                  type: string
                                  example: int
                                positionProjectId:
                                  type: string
                                  example: int
                                positionProfileId:
                                  type: string
                                  example: int
                                count:
                                  type: string
                                  example: int
                                positioncreatets:
                                  type: string
                                  example: int
                                positionStatusOpenClosed:
                                  type: string
                                  example: string
                                applicationDueDate:
                                  type: string
                                  example: int
                                applicationStatusId:
                                  type: string
                                  example: int
                                applicationStatusValue:
                                  type: string
                                  example: int
                                sequence:
                                  type: string
                                  example: string
                                colorcode:
                                  type: string
                                  example: int
                                systemReco:
                                  type: string
                                  example: string
                                systemRecoHelp:
                                  type: string
                                  example: string
                                candidatePositionCreateTs:
                                  type: string
                                  example: int
                                cid:
                                  type: string
                                  example: int
                                appliedPositions:
                                  type: string
                                  example: string
                                status:
                                  type: string
                                  example: string
                          createuserid:
                            type: string
                            example: int
                          lastupdateuserid:
                            type: string
                            example: int
                          accessCode:
                            type: string
                            example: int
                          source:
                            type: string
                            example: string
                          passwordHash:
                            type: string
                            example: string
                          acceptance1:
                            type: string
                            example: string
                          acceptance2:
                            type: string
                            example: string
                          summaryByCandidate:
                            type: string
                            example: string
                          systemReco:
                            type: string
                            example: string
                          systemRecoHelp:
                            type: string
                            example: string
                          candidateLock:
                            type: string
                            example: int
                          salaryCurrencyCode:
                            type: string
                            example: int
                          salaryAmount:
                            type: string
                            example: int
                          educationStr:
                            type: string
                            example: string
                          languagePreference:
                            type: string
                            example: string
                          userId:
                            type: string
                            example: int
                          verified:
                            type: string
                            example: string
                          verificationCode:
                            type: string
                            example: int
                          isInternalCand:
                            type: string
                            example: string
                          isNewCand:
                            type: string
                            example: string
                          timezone:
                            type: string
                            example: string
                          trainingAccess:
                            type: string
                            example: string
                          customfieldvalue:
                            type: string
                            example: string
                          cloudSearchSync:
                            type: string
                            example: int
                          jobBoardAccess:
                            type: string
                            example: string
                          bgScreeningOrderGuid:
                            type: string
                            example: string
                          bgScreeningOrderCreateDate:
                            type: string
                            example: int
                          checkrCandidateId:
                            type: string
                            example: int
                          positionModel:
                            type: string
                            example: model
                          certificationModelList:
                            type: string
                            example: string
                          attachmentModelList:
                            type: string
                            example: string
                    message:
                      type: string
                      example: successful
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "unauthorized"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: unauthorized
        deprecated: false
      post:
        tags:
          - Candidates
        summary: Create new candidate
        description: ''
        operationId: create-a-new-candidate
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: name
            in: query
            description: Name of the candidate.
            schema:
              type: string
          - name: email
            in: query
            description: Email ID of the candidate.
            schema:
              type: string
          - name: isNewCand
            in: query
            description: Is this new candidate?
            schema:
              type: string
              enum:
                - 'true'
                - 'false'
          - name: phone
            in: query
            description: Phone number of the candidate.
            schema:
              type: integer
              format: int32
          - name: source
            in: query
            description: The source from which the candidate is being created.
            schema:
              type: string
              default: API
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": "int",
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: string
                      example: int
                    message:
                      type: string
                      example: successful
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "unauthorized"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: unauthorized
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Another candidate with the same email address already exists."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Another candidate with the same email address already
                        exists.
        deprecated: false
    /detail/{recruitid}:
      get:
        tags:
          - Candidates
        summary: Retrieve the candidate detail by recruitid
        description: ''
        operationId: retrieve-the-candidate-detail-by-recruitid
        parameters:
          - name: recruitid
            in: path
            description: The ID of the recruiter.
            schema:
              type: integer
              format: int32
            required: true
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": {
                          "recruitId": "int",
                          "name": "string",
                          "referrerId": "int",
                          "referrer": "string",
                          "recruiter": "string",
                          "score": "string",
                          "updatedOn": "int",
                          "status": "string",
                          "notes": "string",
                          "dateOfBirth": "int",
                          "joiningDate": "int",
                          "cid": "int",
                          "email": "string",
                          "phone": "int",
                          "createts": "int",
                          "templateId": "int",
                          "recruiterUserId": "int",
                          "workflowId": "int",
                          "statusid": "int",
                          "workflowModel": "Model",
                          "candidateStatusModel": "Model",
                          "assessmentModel": "Model",
                          "workflowName": "string",
                          "employmentModelList": "ModelList",
                          "educationModelList": "ModelList",
                          "customFieldValueModelList": "ModelList",
                          "addressModelList": "ModelList",
                          "skillModelList": "ModelList",
                          "positionName": "string",
                          "candidatePositionsModelList": "ModelList",
                          "createuserid": "int",
                          "lastupdateuserid": "int",
                          "accessCode": "int",
                          "source": "int",
                          "passwordHash": "string",
                          "acceptance1": "string",
                          "acceptance2": "string",
                          "summaryByCandidate": "string",
                          "systemReco": "string",
                          "systemRecoHelp": "string",
                          "candidateLock": "int",
                          "salaryCurrencyCode": "int",
                          "salaryAmount": "int",
                          "educationStr": "string",
                          "languagePreference": "string",
                          "userId": "int",
                          "verified": "string",
                          "verificationCode": "int",
                          "isInternalCand": "string",
                          "isNewCand": "string",
                          "timezone": "string",
                          "trainingAccess": "string",
                          "customfieldvalue": "string",
                          "cloudSearchSync": "int",
                          "jobBoardAccess": "string",
                          "bgScreeningOrderGuid": "int",
                          "bgScreeningOrderCreateDate": "int",
                          "checkrCandidateId": "int",
                          "positionModel": "Model",
                          "certificationModelList": "ModelList",
                          "attachmentModelList": "ModelList"
                        },
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        recruitId:
                          type: string
                          example: int
                        name:
                          type: string
                          example: string
                        referrerId:
                          type: string
                          example: int
                        referrer:
                          type: string
                          example: string
                        recruiter:
                          type: string
                          example: string
                        score:
                          type: string
                          example: string
                        updatedOn:
                          type: string
                          example: int
                        status:
                          type: string
                          example: string
                        notes:
                          type: string
                          example: string
                        dateOfBirth:
                          type: string
                          example: int
                        joiningDate:
                          type: string
                          example: int
                        cid:
                          type: string
                          example: int
                        email:
                          type: string
                          example: string
                        phone:
                          type: string
                          example: int
                        createts:
                          type: string
                          example: int
                        templateId:
                          type: string
                          example: int
                        recruiterUserId:
                          type: string
                          example: int
                        workflowId:
                          type: string
                          example: int
                        statusid:
                          type: string
                          example: int
                        workflowModel:
                          type: string
                          example: Model
                        candidateStatusModel:
                          type: string
                          example: Model
                        assessmentModel:
                          type: string
                          example: Model
                        workflowName:
                          type: string
                          example: string
                        employmentModelList:
                          type: string
                          example: ModelList
                        educationModelList:
                          type: string
                          example: ModelList
                        customFieldValueModelList:
                          type: string
                          example: ModelList
                        addressModelList:
                          type: string
                          example: ModelList
                        skillModelList:
                          type: string
                          example: ModelList
                        positionName:
                          type: string
                          example: string
                        candidatePositionsModelList:
                          type: string
                          example: ModelList
                        createuserid:
                          type: string
                          example: int
                        lastupdateuserid:
                          type: string
                          example: int
                        accessCode:
                          type: string
                          example: int
                        source:
                          type: string
                          example: int
                        passwordHash:
                          type: string
                          example: string
                        acceptance1:
                          type: string
                          example: string
                        acceptance2:
                          type: string
                          example: string
                        summaryByCandidate:
                          type: string
                          example: string
                        systemReco:
                          type: string
                          example: string
                        systemRecoHelp:
                          type: string
                          example: string
                        candidateLock:
                          type: string
                          example: int
                        salaryCurrencyCode:
                          type: string
                          example: int
                        salaryAmount:
                          type: string
                          example: int
                        educationStr:
                          type: string
                          example: string
                        languagePreference:
                          type: string
                          example: string
                        userId:
                          type: string
                          example: int
                        verified:
                          type: string
                          example: string
                        verificationCode:
                          type: string
                          example: int
                        isInternalCand:
                          type: string
                          example: string
                        isNewCand:
                          type: string
                          example: string
                        timezone:
                          type: string
                          example: string
                        trainingAccess:
                          type: string
                          example: string
                        customfieldvalue:
                          type: string
                          example: string
                        cloudSearchSync:
                          type: string
                          example: int
                        jobBoardAccess:
                          type: string
                          example: string
                        bgScreeningOrderGuid:
                          type: string
                          example: int
                        bgScreeningOrderCreateDate:
                          type: string
                          example: int
                        checkrCandidateId:
                          type: string
                          example: int
                        positionModel:
                          type: string
                          example: Model
                        certificationModelList:
                          type: string
                          example: ModelList
                        attachmentModelList:
                          type: string
                          example: ModelList
                    message:
                      type: string
                      example: successful
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "not found"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: not found
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /list:
      get:
        tags:
          - Candidates
        summary: Retrieve candidates with basic details
        description: ''
        operationId: get-candidates-with-basic-details
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: page
            in: query
            description: Page number.
            schema:
              type: integer
              format: int32
              default: 0
          - name: pageSize
            in: query
            description: Number of candidates per page.
            schema:
              type: integer
              format: int32
              default: 20
          - name: search
            in: query
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [
                          {
                            "recruitId": "int",
                            "name": "string",
                            "email": "string",
                            "phone": "int",
                            "dateOfBirth": "int",
                            "statusid": "int",
                            "referrerId": "int",
                            "createts": "int",
                            "notes": "string",
                            "source": "API",
                            "userid": "int",
                            "recruiterUserId": "int",
                            "summaryByCandidate": "string",
                            "candidateLock": "int",
                            "educationStr": "string",
                            "status": "string",
                            "appliedPositions": "string",
                            "updatedOn": "int",
                            "cid": "int",
                            "tagIds": "int",
                            "statusColor": "string",
                            "appliedPositionIds": "int",
                            "appliedPositionUids": "int",
                            "recruiterThumbnail": "string",
                            "recruiterName": "string",
                            "recruiterGender": "string",
                            "referrerName": "string",
                            "isInternalCand": "string",
                            "applicationStatus": "string",
                            "verified": "string",
                            "positionNameList": "string",
                            "internalCandidate": "string"
                          }
                        ],
                        "message": "successful",
                        "editPermission": true
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          recruitId:
                            type: string
                            example: int
                          name:
                            type: string
                            example: string
                          email:
                            type: string
                            example: string
                          phone:
                            type: string
                            example: int
                          dateOfBirth:
                            type: string
                            example: int
                          statusid:
                            type: string
                            example: int
                          referrerId:
                            type: string
                            example: int
                          createts:
                            type: string
                            example: int
                          notes:
                            type: string
                            example: string
                          source:
                            type: string
                            example: API
                          userid:
                            type: string
                            example: int
                          recruiterUserId:
                            type: string
                            example: int
                          summaryByCandidate:
                            type: string
                            example: string
                          candidateLock:
                            type: string
                            example: int
                          educationStr:
                            type: string
                            example: string
                          status:
                            type: string
                            example: string
                          appliedPositions:
                            type: string
                            example: string
                          updatedOn:
                            type: string
                            example: int
                          cid:
                            type: string
                            example: int
                          tagIds:
                            type: string
                            example: int
                          statusColor:
                            type: string
                            example: string
                          appliedPositionIds:
                            type: string
                            example: int
                          appliedPositionUids:
                            type: string
                            example: int
                          recruiterThumbnail:
                            type: string
                            example: string
                          recruiterName:
                            type: string
                            example: string
                          recruiterGender:
                            type: string
                            example: string
                          referrerName:
                            type: string
                            example: string
                          isInternalCand:
                            type: string
                            example: string
                          applicationStatus:
                            type: string
                            example: string
                          verified:
                            type: string
                            example: string
                          positionNameList:
                            type: string
                            example: string
                          internalCandidate:
                            type: string
                            example: string
                    message:
                      type: string
                      example: successful
                    editPermission:
                      type: boolean
                      example: true
                      default: true
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "not found"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: not found
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /resume/:
      post:
        tags:
          - Candidates
        summary: Create a candidate from pdf resume
        description: ''
        operationId: create-a-candidate-from-pdf-resume
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - file
                properties:
                  file:
                    type: string
                    description: The pdf resume of the candidate.
                    format: binary
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "success"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: success
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "unauthorized"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: unauthorized
        deprecated: false
    /customfield:
      get:
        tags:
          - Custom Fields
        summary: Retrieve Custom Field by ID
        description: Retrieve Custom Field by ID
        operationId: get-custom-field-by-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: customFieldId
            in: query
            description: The ID of the custom field.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                            "customFieldId": "int",
                            "customFieldName": "string",
                            "customFieldType": "string",
                            "objectType": "string",
                            "sequence": "int",
                            "cid": "int",
                            "fieldType": "string",
                            "defaultValue": "string",
                            "cfcode": "string",
                            "cfgroupid": "int",
                            "style": "string",
                            "opValues": "string",
                            "fieldFormula": "string",
                            "customFieldValueModel": "object",
                            "customFieldValueModelList": [
                              {
                                "customFieldValueId": "int",
                                "customFieldId": "int",
                                "customFieldValue": "string",
                                "customFieldObjectId": "int",
                                "cid": "int",
                                "createUserId": "int",
                                "customfieldName": "string"
                              }
                            ],
                            "customFieldGroupModel": {
                              "cfgroupid": "int",
                              "cfgroupname": "string",
                              "cid": "int",
                              "objectType": "string",
                              "access": "string",
                              "layout": "string",
                              "usergroupid": "int",
                              "createts": 1661411259000,
                              "sequence": "int",
                              "hasCustomFields": "boolean"
                            },
                            "objectAccessModel": "object",
                            "access": "string",
                            "userGroupId": "int",
                            "candidateAccess": "string",
                            "userAccess": "string",
                            "managerAccess": "string",
                            "integrationTypeId": "string",
                            "helpText": "string",
                            "createUserId": "int",
                            "createts": 1648203997000,
                            "customFieldStyleModel": "object",
                            "readAccessTypeCode": "int",
                            "readUserGroupId": "int",
                            "mandatory": "int",
                            "masked": "int"
                          },
                          "message": "success"
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        customFieldId:
                          type: string
                          example: int
                        customFieldName:
                          type: string
                          example: String
                        customFieldType:
                          type: string
                          example: String
                        objectType:
                          type: string
                          example: String
                        sequence:
                          type: string
                          example: int
                        cid:
                          type: string
                          example: int
                        fieldType:
                          type: string
                          example: String
                        defaultValue:
                          type: string
                          example: String
                        cfcode:
                          type: string
                          example: String
                        cfgroupid:
                          type: string
                          example: int
                        style:
                          type: string
                          example: String
                        opValues:
                          type: string
                          example: String
                        fieldFormula:
                          type: string
                          example: String
                        customFieldValueModel:
                          type: string
                          example: object
                        customFieldValueModelList:
                          type: array
                          items:
                            type: object
                            properties:
                              customFieldValueId:
                                type: string
                                example: int
                              customFieldId:
                                type: string
                                example: int
                              customFieldValue:
                                type: string
                                example: String
                              customFieldObjectId:
                                type: string
                                example: int
                              cid:
                                type: string
                                example: int
                              createUserId:
                                type: string
                                example: int
                              customfieldName:
                                type: string
                                example: String
                        customFieldGroupModel:
                          type: object
                          properties:
                            cfgroupid:
                              type: string
                              example: int
                            cfgroupname:
                              type: string
                              example: String
                            cid:
                              type: string
                              example: int
                            objectType:
                              type: string
                              example: String
                            access:
                              type: string
                              example: String
                            layout:
                              type: string
                              example: String
                            usergroupid:
                              type: string
                              example: int
                            createts:
                              type: integer
                              example: 1661411259000
                              default: 0
                            sequence:
                              type: string
                              example: int
                            hasCustomFields:
                              type: string
                              example: boolean
                        objectAccessModel:
                          type: string
                          example: object
                        access:
                          type: string
                          example: String
                        userGroupId:
                          type: string
                          example: int
                        candidateAccess:
                          type: string
                          example: String
                        userAccess:
                          type: string
                          example: String
                        managerAccess:
                          type: string
                          example: String
                        integrationTypeId:
                          type: string
                          example: String
                        helpText:
                          type: string
                          example: String
                        createUserId:
                          type: string
                          example: int
                        createts:
                          type: integer
                          example: 1648203997000
                          default: 0
                        customFieldStyleModel:
                          type: string
                          example: object
                        readAccessTypeCode:
                          type: string
                          example: int
                        readUserGroupId:
                          type: string
                          example: int
                        mandatory:
                          type: string
                          example: int
                        masked:
                          type: string
                          example: int
                    message:
                      type: string
                      example: success
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Exception while authenticating user."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Exception while authenticating user.
          '409':
            description: '409'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /customfields:
      get:
        tags:
          - Custom Fields
        summary: Retrieve Custom Fields
        description: Retrieve Custom Fields
        operationId: getcustomfieldsusingget-2
        parameters:
          - name: objectType
            in: query
            description: The object type of custom field.
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n  \"data\": [\n    {\n      \"customFieldId\": \"int\",\n      \"customFieldName\": \"string\",\n      \"customFieldType\": \"string\",\n      \"objectType\": \"string\",\n      \"sequence\": \"int\",\n      \"cid\": \"int\",\n      \"fieldType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"cfcode\": \"string\",\n      \"cfgroupid\": \"int\",\n      \"style\": \"string\",\n      \"opValues\": \"string\",\n      \"fieldFormula\": \"string\",\n      \"customFieldValueModel\": \"object\",\n      \"customFieldValueModelList\": [\n        {\n          \"customFieldValueId\": \"int\",\n          \"customFieldId\": \"int\",\n          \"customFieldValue\": \"string\",\n          \"customFieldObjectId\": \"int\",\n          \"cid\": \"int\",\n          \"createUserId\": \"int\",\n          \"customfieldName\": \"string\"\n        }\n      ],\n      \"customFieldGroupModel\": {\n        \"cfgroupid\": \"int\",\n        \"cfgroupname\": \"string\",\n        \"cid\": \"int\",\n        \"objectType\": \"string\",\n        \"access\": \"string\",\n        \"layout\": \"string\",\n        \"usergroupid\": \"int\",\n        \"createts\": 1661411259000,\n        \"sequence\": \"int\",\n        \"hasCustomFields\": \"boolean\"\n      },\n      \"objectAccessModel\": \"object\",\n      \"access\": \"string\",\n      \"userGroupId\": \"int\",\n      \"candidateAccess\": \"string\",\n      \"userAccess\": \"string\",\n      \"managerAccess\": \"string\",\n      \"integrationTypeId\": \"string\",\n      \"helpText\": \"string\",\n      \"createUserId\": \"int\",\n      \"createts\": 1648203997000,\n      \"customFieldStyleModel\": \"object\",\n      \"readAccessTypeCode\": \"int\",\n      \"readUserGroupId\": \"int\",\n      \"mandatory\": \"int\",\n      \"masked\": \"int\"\n    },\n   \t{\n      \"customFieldId\": \"int\",\n      \"customFieldName\": \"string\",\n      \"customFieldType\": \"string\",\n      \"objectType\": \"string\",\n      \"sequence\": \"int\",\n      \"cid\": \"int\",\n      \"fieldType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"cfcode\": \"string\",\n      \"cfgroupid\": \"int\",\n      \"style\": \"string\",\n      \"opValues\": \"string\",\n      \"fieldFormula\": \"string\",\n      \"customFieldValueModel\": \"object\",\n      \"customFieldValueModelList\": [\n        {\n          \"customFieldValueId\": \"int\",\n          \"customFieldId\": \"int\",\n          \"customFieldValue\": \"string\",\n          \"customFieldObjectId\": \"int\",\n          \"cid\": \"int\",\n          \"createUserId\": \"int\",\n          \"customfieldName\": \"string\"\n        }\n      ],\n      \"customFieldGroupModel\": {\n        \"cfgroupid\": \"int\",\n        \"cfgroupname\": \"string\",\n        \"cid\": \"int\",\n        \"objectType\": \"string\",\n        \"access\": \"string\",\n        \"layout\": \"string\",\n        \"usergroupid\": \"int\",\n        \"createts\": 1661411259000,\n        \"sequence\": \"int\",\n        \"hasCustomFields\": \"boolean\"\n      },\n      \"objectAccessModel\": \"object\",\n      \"access\": \"string\",\n      \"userGroupId\": \"int\",\n      \"candidateAccess\": \"string\",\n      \"userAccess\": \"string\",\n      \"managerAccess\": \"string\",\n      \"integrationTypeId\": \"string\",\n      \"helpText\": \"string\",\n      \"createUserId\": \"int\",\n      \"createts\": 1648203997000,\n      \"customFieldStyleModel\": \"object\",\n      \"readAccessTypeCode\": \"int\",\n      \"readUserGroupId\": \"int\",\n      \"mandatory\": \"int\",\n      \"masked\": \"int\"\n    }\n  ],\n  \"message\": \"success\"\n}"
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          customFieldId:
                            type: string
                            example: int
                          customFieldName:
                            type: string
                            example: String
                          customFieldType:
                            type: string
                            example: String
                          objectType:
                            type: string
                            example: String
                          sequence:
                            type: string
                            example: int
                          cid:
                            type: string
                            example: int
                          fieldType:
                            type: string
                            example: String
                          defaultValue:
                            type: string
                            example: String
                          cfcode:
                            type: string
                            example: String
                          cfgroupid:
                            type: string
                            example: int
                          style:
                            type: string
                            example: String
                          opValues:
                            type: string
                            example: String
                          fieldFormula:
                            type: string
                            example: String
                          customFieldValueModel:
                            type: string
                            example: object
                          customFieldValueModelList:
                            type: array
                            items:
                              type: object
                              properties:
                                customFieldValueId:
                                  type: string
                                  example: int
                                customFieldId:
                                  type: string
                                  example: int
                                customFieldValue:
                                  type: string
                                  example: String
                                customFieldObjectId:
                                  type: string
                                  example: int
                                cid:
                                  type: string
                                  example: int
                                createUserId:
                                  type: string
                                  example: int
                                customfieldName:
                                  type: string
                                  example: String
                          customFieldGroupModel:
                            type: object
                            properties:
                              cfgroupid:
                                type: string
                                example: int
                              cfgroupname:
                                type: string
                                example: String
                              cid:
                                type: string
                                example: int
                              objectType:
                                type: string
                                example: String
                              access:
                                type: string
                                example: String
                              layout:
                                type: string
                                example: String
                              usergroupid:
                                type: string
                                example: int
                              createts:
                                type: integer
                                example: 1661411259000
                                default: 0
                              sequence:
                                type: string
                                example: int
                              hasCustomFields:
                                type: string
                                example: boolean
                          objectAccessModel:
                            type: string
                            example: object
                          access:
                            type: string
                            example: String
                          userGroupId:
                            type: string
                            example: int
                          candidateAccess:
                            type: string
                            example: String
                          userAccess:
                            type: string
                            example: String
                          managerAccess:
                            type: string
                            example: String
                          integrationTypeId:
                            type: string
                            example: String
                          helpText:
                            type: string
                            example: String
                          createUserId:
                            type: string
                            example: int
                          createts:
                            type: integer
                            example: 1648203997000
                            default: 0
                          customFieldStyleModel:
                            type: string
                            example: object
                          readAccessTypeCode:
                            type: string
                            example: int
                          readUserGroupId:
                            type: string
                            example: int
                          mandatory:
                            type: string
                            example: int
                          masked:
                            type: string
                            example: int
                    message:
                      type: string
                      example: success
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Exception while authenticating user."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Exception while authenticating user.
          '409':
            description: '409'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /customfieldvalues:
      get:
        tags:
          - Custom Fields
        summary: Retrieve Custom Field Value
        description: ''
        operationId: retrieve-custom-field-value
        parameters:
          - name: customFieldCode
            in: query
            description: customFieldCode
            schema:
              type: string
          - name: customFieldId
            in: query
            description: customFieldId
            required: true
            schema:
              type: integer
              format: int32
          - name: userId
            in: query
            description: userId
            required: true
            schema:
              type: integer
              format: int32
          - name: userEmail
            in: query
            description: userEmail
            schema:
              type: string
          - name: empId
            in: query
            description: empId
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "customFieldValueId": "int",
                        "customFieldId": "int",
                        "customFieldObjectId": "string",
                        "cid": "int",
                        "createUserId": "int",
                        "customfieldName": "string"
                      }
                schema:
                  type: object
                  properties:
                    customFieldValueId:
                      type: string
                      example: int
                    customFieldId:
                      type: string
                      example: int
                    customFieldObjectId:
                      type: string
                      example: string
                    cid:
                      type: string
                      example: int
                    createUserId:
                      type: string
                      example: int
                    customfieldName:
                      type: string
                      example: string
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Exception while authenticating user."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Exception while authenticating user.
          '409':
            description: '409'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
      post:
        tags:
          - Custom Fields
        summary: Update Custom Field Value
        description: ''
        operationId: updatecustomfieldsusingpost
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: customFieldId
            in: query
            required: true
            schema:
              type: integer
              format: int32
          - name: customFieldCode
            in: query
            schema:
              type: string
          - name: userId
            in: query
            required: true
            schema:
              type: integer
              format: int32
          - name: userEmail
            in: query
            schema:
              type: string
          - name: empId
            in: query
            schema:
              type: string
          - name: value
            in: query
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "string"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: string
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Exception while authenticating user."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Exception while authenticating user.
          '409':
            description: '409'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /customlist:
      get:
        tags:
          - Custom Fields
        summary: Retrieve Custom Lists
        description: ''
        operationId: getcustomlist
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "listId": "int",
                          "customListEntryModel": [
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            }
                          ],
                          "listName": "string",
                          "description": "string",
                          "cid": "int"
                        },
                        {
                          "listId": "int",
                          "customListEntryModel": [
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            },
                            {
                              "entryId": "int",
                              "entryCode": "string",
                              "entryValue": "string",
                              "listId": "int",
                              "cid": "int"
                            }
                          ],
                          "listName": "string",
                          "description": "string",
                          "cid": "int"
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      listId:
                        type: string
                        example: int
                      customListEntryModel:
                        type: array
                        items:
                          type: object
                          properties:
                            entryId:
                              type: string
                              example: int
                            entryCode:
                              type: string
                              example: String
                            entryValue:
                              type: string
                              example: String
                            listId:
                              type: string
                              example: int
                            cid:
                              type: string
                              example: int
                      listName:
                        type: string
                        example: String
                      description:
                        type: string
                        example: String
                      cid:
                        type: string
                        example: int
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Exception while authenticating user."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Exception while authenticating user.
          '409':
            description: '409'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /delete:
      post:
        tags:
          - Dependents
        summary: Delete dependent by contactId
        description: ''
        operationId: delete-dependent-by-contactid
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: contactId
            in: query
            description: Contact ID of Dependent
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "User Contact deleted successfully."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User Contact deleted successfully.
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "User Dependent Contact not found"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User Dependent Contact not found
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /attachment/download:
      get:
        tags:
          - Document Library
        summary: Retrieve document as byte array
        description: ''
        operationId: get-document-as-byte-array
        parameters:
          - name: fileName
            in: query
            description: File ID from the server
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "code": 1,
                          "data": "string",
                          "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    code:
                      type: integer
                      example: 1
                      default: 0
                    data:
                      type: string
                      example: string
                    message:
                      type: string
                      example: successful
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "code": -1,
                          "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    code:
                      type: integer
                      example: -1
                      default: 0
                    message:
                      type: string
                      example: failure
        deprecated: false
    /documentLibrary:
      get:
        tags:
          - Document Library
        summary: Retrieve attachments within document library
        description: ''
        operationId: get-attachments-within-document-library
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "code": 1,
                        "data": [
                          {
                            "attachid": "int",
                            "atchType": "string",
                            "fileExtn": "string",
                            "s3id": "string",
                            "filename": "string",
                            "authkey": "string",
                            "projectid": "int",
                            "cid": "int",
                            "createuserid": "int",
                            "size": "int",
                            "candidateid": "int",
                            "positionid": "int",
                            "ruleid": "int",
                            "comments": "string",
                            "createts": "int",
                            "userid": "int",
                            "attachUserModel": "object",
                            "userModel": "object",
                            "projectModel": "object",
                            "objectType": "string",
                            "documentType": "string",
                            "signStatus": "string",
                            "signatureId": "int",
                            "taskId": "int",
                            "goalid": "int",
                            "assetid": "int",
                            "expenseid": "int",
                            "expenseItemId": "int",
                            "appraisalItemResponseId": "int",
                            "appraisalAssignmentId": "int",
                            "payStubId": "int",
                            "signingDate": "string",
                            "signatureRequestId": "int",
                            "folder": "string",
                            "folderId": "int",
                            "attachmentFolderModel": "object",
                            "topic": "string",
                            "annId": "int",
                            "timecardid": "int",
                            "customerId": "int",
                            "leaveid": "int",
                            "ticketId": "int",
                            "trainingId": "int",
                            "access": "string",
                            "userGroupModel": "object",
                            "objectAccessModelList": "list",
                            "documentContent": "string",
                            "documnetIssueDate": "string",
                            "documentExpiryDate": "string",
                            "dLIssueDate": "string",
                            "dLExpiryDate": "string",
                            "signNowTemplateId": "int",
                            "signNowDocId": "int",
                            "stateCountryModel": "object",
                            "userAccess": "boolean",
                            "licenseId": "int",
                            "educationId": "int",
                            "language": "en",
                            "obtype": "string",
                            "multiSigning": "int",
                            "isPdfFiller": "int",
                            "skilluserId": "int",
                            "appraisalid": "int",
                            "status": "string",
                            "candidateAccess": "boolean",
                            "category": "string",
                            "secondSignerName": "string",
                            "global": "boolean",
                            "resume": "boolean"
                          },
                        ],
                        "message": "success"
                      }
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /currencylist:
      get:
        tags:
          - Expense Reports
        summary: Retrieve currencies
        description: ''
        operationId: get-currencies
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "currencyId": "int",
                                  "currencyCode": "string",
                                  "currencyName": "string",
                                  "cid": "int"
                              },
                              {
                                  "currencyId": "int",
                                  "currencyCode": "string",
                                  "currencyName": "string",
                                  "cid": "int"
                              },
                              {
                                  "currencyId": "int",
                                  "currencyCode": "string",
                                  "currencyName": "string",
                                  "cid": "int"
                              }
                          ],
                          "message": "success"
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          currencyId:
                            type: string
                            example: int
                          currencyCode:
                            type: string
                            example: string
                          currencyName:
                            type: string
                            example: string
                          cid:
                            type: string
                            example: int
                    message:
                      type: string
                      example: success
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              text/plain:
                examples:
                  Result:
                    value: ''
        deprecated: false
    /expensereport:
      post:
        tags:
          - Expense Reports
        summary: Create expense report
        description: ''
        operationId: create-a-new-expense-item
        parameters:
          - name: name
            in: query
            description: Name of the expense report.
            example: Travel expense report.
            required: true
            schema:
              type: string
          - name: amount
            in: query
            description: Amount to be added in expense report.
            example: '300'
            required: true
            schema:
              type: number
              format: double
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: description
            in: query
            description: Description of the expense report.
            example: This expene report is regarding the travelling.
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Expense Report created successfully.",
                          "expenseReportId": "int"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Expense Report created successfully.
                    expenseReportId:
                      type: string
                      example: int
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "You don't have permission to perform this operation."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
      get:
        tags:
          - Expense Reports
        summary: Retrieve the details of expense report
        description: ''
        operationId: get-the-details-of-expense-report
        parameters:
          - name: expenseReportId
            in: query
            description: The ID of the expense report.
            schema:
              type: integer
              format: int32
          - name: guid
            in: query
            description: The unique system generated ID of the user.
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "expenseReportId": "int",
                          "name": "string",
                          "description": "string",
                          "userId": "int",
                          "createUserId": "int",
                          "cid": "int",
                          "projectId": "int",
                          "guid": "string",
                          "amount": "int",
                          "status": "string",
                          "createts": "int",
                          "currencyCode": "string",
                          "submittedts": "int",
                          "comments": "string",
                          "paymentStatus": "string",
                          "paymentMode": "string",
                          "paymentNotes": "string",
                          "paymentDate": "date",
                          "currencyModel": "string",
                          "userViewModel": {
                              "userId": "int",
                              "firstName": "string",
                              "lastName": "string",
                              "name": "string",
                              "phone": "int",
                              "email": "email",
                              "status": "string",
                              "shortName": "string",
                              "jobTitle": "string",
                              "departmentId": "int",
                              "department": "string",
                              "profileId": "int",
                              "profileName": "string",
                              "timezone": "string",
                              "userStartDate": "date",
                              "cellPhone": "int",
                              "empId": "string",
                              "allocation": "int",
                              "userDateFormat": "date",
                              "star": "int",
                              "imageName": "img8409.jpg",
                              "notes": "string",
                              "im": "string",
                              "createuserid": "int",
                              "cid": "int",
                              "guid": "string",
                              "hasAccess": "int"
                          },
                          "expenseItemModelList": [],
                          "timecardApprovalModel": "string,
                          "submittedOn": "date",
                          "approvalFlowId": "int"
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "You don't have permission to perform this operation."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /expensetypes:
      get:
        tags:
          - Expense Reports
        summary: Retrieve expense types
        description: ''
        operationId: get-expense-types
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "expenseTypeId": "int",
                                  "code": "string",
                                  "description": "string",
                                  "cid": "int",
                                  "customfieldvalue": [
                                      {
                                          "customFieldValueId": "int",
                                          "customFieldId": "int",
                                          "customFieldValue": "string",
                                          "customFieldObjectId": "int",
                                          "cid": "int",
                                          "createUserId": "int",
                                          "customfieldName": "int"
                                      },
                                      {
                                          "customFieldValueId": "int",
                                          "customFieldId": "int",
                                          "customFieldValue": "int",
                                          "customFieldObjectId": "int",
                                          "cid": "int",
                                          "createUserId": "int",
                                          "customfieldName": "string"
                                      }
                                    ]
                              }
                            }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              text/plain:
                examples:
                  Result:
                    value: ''
        deprecated: false
    /expensereports:
      get:
        tags:
          - Expense Reports
        summary: Retrieve expense reports by User ID
        description: ''
        operationId: get-expense-reports-by-user-id
        parameters:
          - name: userID
            in: query
            description: The ID of the user whose expense expense report is to be retrieved.
            required: true
            schema:
              type: integer
              format: int32
          - name: guid
            in: query
            description: The unique system generated ID of the user.
            schema:
              type: string
          - name: email
            in: query
            description: Email of the user.
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "expenseReportId": "int",
                                  "name": "string",
                                  "description": "string",
                                  "userId": "int",
                                  "createUserId": "int",
                                  "cid": "int",
                                  "projectId": "int",
                                  "guid": "string",
                                  "amount": "int",
                                  "status": "string",
                                  "createts": "int",
                                  "currencyCode": "string",
                                  "submittedts": "int",
                                  "comments": "string",
                                  "paymentStatus": "string",
                                  "paymentMode": "string",
                                  "paymentNotes": "string",
                                  "paymentDate": "date",
                                  "currencyModel": {
                                      "currencyId": "int",
                                      "currencyCode": "string",
                                      "currencyName": "string",
                                      "cid": "int"
                                  }
                                ]
                              }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              text/plain:
                examples:
                  Result:
                    value: ''
        deprecated: false
    /expensereport/submit/{expenseReportId}:
      post:
        tags:
          - Expense Reports
        summary: Submit expense report
        description: ''
        operationId: submit-an-expense-report
        parameters:
          - name: expenseReportId
            in: path
            description: The ID of the expense report.
            schema:
              type: integer
              format: int32
            required: true
          - name: status
            in: query
            description: Status of the expense report.
            required: true
            schema:
              type: string
              enum:
                - DRFT
                - SUB
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Expense Report submitted successfully.",
                        "expenseReportId": "int"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Expense Report submitted successfully.
                    expenseReportId:
                      type: string
                      example: int
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
        deprecated: false
    /expensereport/delete:
      post:
        tags:
          - Expense Reports
        summary: Delete expense report
        description: ''
        operationId: delete-expense-report
        parameters:
          - name: expenseReportId
            in: query
            description: The ID of the expense report.
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: successful
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /expenseitem:
      post:
        tags:
          - Expense Reports
        summary: Create expense item
        description: ''
        operationId: create-a-new-expense-item-2
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: amount
            in: query
            description: Amount of the expense item.
            required: true
            schema:
              type: number
              format: float
          - name: billable
            in: query
            description: Y for "Yes" and N for "No".
            required: true
            schema:
              type: string
              enum:
                - 'Y'
                - 'N'
          - name: cid
            in: query
            description: The unique ID of the customer.
            required: true
            schema:
              type: integer
              format: int32
          - name: currencyCode
            in: query
            description: Code of the currency.
            required: true
            schema:
              type: string
              enum:
                - $(USD)
                - $(CD)
                - ₹(INR)
          - name: date
            in: query
            description: Date of creating expense item.
            required: true
            schema:
              type: string
              format: date
          - name: expenseItemId
            in: query
            description: The ID of the expense item.
            required: true
            schema:
              type: integer
              format: int32
          - name: expenseType
            in: query
            description: The type of expense.
            required: true
            schema:
              type: string
          - name: expenseTypeId
            in: query
            description: The ID of the expense type.
            required: true
            schema:
              type: integer
              format: int32
          - name: projectId
            in: query
            description: The ID of the project.
            required: true
            schema:
              type: integer
              format: int32
          - name: reimbursible
            in: query
            description: Y for "Yes" and N for "No".
            required: true
            schema:
              type: string
              enum:
                - 'Y'
                - 'N'
          - name: remarks
            in: query
            required: true
            schema:
              type: string
          - name: userId
            in: query
            description: The ID of the user for whom the expense report should be created.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "expenseItemId": "int",
                        "message": "Expense Item created successfully."
                      }
                schema:
                  type: object
                  properties:
                    expenseItemId:
                      type: string
                      example: int
                    message:
                      type: string
                      example: Expense Item created successfully.
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/getdynaforms:
      get:
        tags:
          - Forms
        summary: Retrieve forms
        operationId: getDynaFormsUsingGET
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
              example: ''
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n    \"code\": \"int\",\n    \"data\": [\n        {\n            \"dynamicFormId\": \"int\",\n            \"name\": \"string\",\n            \"dynaFormCode\": \"string\",\n            \"description\": \"string\",\n            \"createUserModel\": \"object\",\n            \"createUserViewModel\": {\n                \"userId\": \"int\",\n                \"firstName\": \"int\",\n                \"lastName\": \"string\",\n                \"name\": \"string\",\n                \"phone\": \"int\",\n                \"email\": \"string\",\n                \"status\": \"string\",\n                \"shortName\": \"string\",\n                \"gender\": \"string\",\n                \"jobTitle\": \"string\",\n                \"departmentId\": \"int\",\n                \"locationId\": \"int\",\n                \"department\": \"string\",\n                \"location\": \"string\",\n                \"profileId\": \"int\",\n                \"profileName\": \"string\",\n                \"timezone\": \"string\",\n                \"userStartDate\": \"date\",\n                \"userEndDate\": \"date\",\n                \"cellPhone\": \"int\",\n                \"empId\": \"string\",\n                \"allocation\": \"int\",\n                \"userDateFormat\": \"date\",\n                \"star\": \"string\",\n                \"notes\": \"string\",\n                \"im\": \"int\",\n                \"createuserid\": \"int\",\n                \"countryId\": \"int\",\n                \"cid\": \"int\",\n                \"guid\": \"string\",\n                \"hasAccess\": \"int\",\n                \"id\": \"int\"\n            },\n            \"createts\": \"int\",\n            \"updatets\": \"int\",\n            \"cid\": \"int\",\n            \"availability\": \"string\",\n            \"status\": \"string\",\n            \"anonymous\": \"int\",\n            \"helpTextStyle\": \"string\",\n            \"mappedEntity\": \"string\",\n            \"userGroupModel\": \"object\",\n            \"secSequence\": \"string\",\n            \"thresholdScore\": \"string\",\n            \"formType\": \"string\",\n            \"dataFlow\": \"string\",\n            \"showCorrect\": \"boolean\",\n            \"listed\": \"int\",\n            \"publicSummary\": \"string\",\n            \"presentationStyle\": \"string\",\n            \"timeLimit\": \"int\",\n            \"attemptLimit\": \"int\",\n            \"layout\": \"string\"\n        }\n\t\t],\n    \"message\": \"string\"\n}"
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
        deprecated: false
    /api/my:
      get:
        tags:
          - Forms
        summary: 'Retrieve completed forms assigned to me  '
        operationId: getDynamicFormsUsingGET
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "code": "int",
                          "data": [
                              {
                                  "assignmentId": "int",
                                  "status": "string",
                                  "createUserModel": "object",
                                  "createUserViewModel": "object",
                                  "assignUserModel": "object",
                                  "assignUserViewModel": {
                                      "userId": "int",
                                      "firstName": "string",
                                      "lastName": "string",
                                      "name": "string",
                                      "phone": "int",
                                      "email": "string",
                                      "status": "string",
                                      "shortName": "string",
                                      "thumbnail": "string",
                                      "gender": "string",
                                      "jobTitle": "string",
                                      "departmentId": "int",
                                      "department": "string",
                                      "profileId": "int",
                                      "profileName": "string",
                                      "timezone": "Asia/Calcutta",
                                      "userStartDate": "date",
                                      "cellPhone": "int",
                                      "empId": "string",
                                      "allocation": "int",
                                      "userDateFormat": "string",
                                      "star": "int",
                                      "imageName": "string",
                                      "notes": "string",
                                      "im": "int",
                                      "createuserid": "int",
                                      "cid": "int",
                                      "guid": "string",
                                      "hasAccess": "int",
                                      "id": "int"
                                  },
                                  "assignCandidateModel": "object",
                                  "assignContactModel": "object",
                                  "dynaFormModel": {
                                      "dynamicFormId": "int",
                                      "name": "string",
                                      "dynaFormCode": "string",
                                      "description": "string",
                                      "createUserModel": "object",
                                      "createUserViewModel": {
                                          "userId": "int",
                                          "firstName": "string",
                                          "lastName": "string",
                                          "name": "string",
                                          "phone": "int",
                                          "email": "string",
                                          "status": "string",
                                          "shortName": "string",
                                          "thumbnail": "string",
                                          "gender": "string",
                                          "jobTitle": "string",
                                          "departmentId": "int",
                                          "department": "string",
                                          "profileId": "int",
                                          "profileName": "string",
                                          "timezone": "string",
                                          "userStartDate": "date",
                                          "cellPhone": "int",
                                          "empId": "string",
                                          "allocation": "int",
                                          "userDateFormat": "date",
                                          "star": "int",
                                          "imageName": "string",
                                          "notes": "",
                                          "im": "int",
                                          "createuserid": "int",
                                          "cid": "int",
                                          "guid": "string",
                                          "hasAccess": "int",
                                          "id": "int"
                                      },
                                      "createts": "int",
                                      "updatets": "int",
                                      "cid": "int",
                                      "availability": "string",
                                      "status": "string",
                                      "anonymous": "int",
                                      "helpTextStyle": "string",
                                      "mappedEntity": "string",
                                      "userGroupModel": "string",
                                      "secSequence": "string",
                                      "thresholdScore": "string",
                                      "formType": "string",
                                      "dataFlow": "string",
                                      "showCorrect": "boolean",
                                      "listed": "int",
                                      "publicSummary": "boolean",
                                      "presentationStyle": "string",
                                      "timeLimit": "int",
                                      "attemptLimit": "int",
                                      "layout": "string"
                                  },
                                  "createts": "int",
                                  "lastupdatets": "int",
                                  "testStartts": "string",
                                  "formSummary": "string",
                                  "testEndts": "date",
                                  "testTimeStatus": "string",
                                  "code": "string",
                                  "cid": "int",
                                  "dueDate": "date",
                                  "assessmentScore": "int",
                                  "graderUserModel": "object",
                                  "dynaFormSectionAssignmentModel": [
                                      {
                                          "dynaFormSectionAssignId": "int",
                                          "cid": "int",
                                          "createts": "int",
                                          "assigneeRole": "string",
                                          "status": "string",
                                          "sectionId": "int",
                                          "userViewModel": {
                                              "userId": "int",
                                              "firstName": "string",
                                              "lastName": "string",
                                              "name": "string",
                                              "phone": "int",
                                              "email": "string",
                                              "status": "string",
                                              "shortName": "string",
                                              "thumbnail": "string",
                                              "gender": "string",
                                              "jobTitle": "string",
                                              "departmentId": "int",
                                              "department": "string",
                                              "profileId": "int",
                                              "profileName": "string",
                                              "timezone": "string",
                                              "userStartDate": "date",
                                              "cellPhone": "int",
                                              "empId": "string",
                                              "allocation": "int",
                                              "userDateFormat": "date",
                                              "star": "int",
                                              "imageName": "string",
                                              "notes": "string",
                                              "im": "int",
                                              "createuserid": "int",
                                              "cid": "int",
                                              "guid": "string",
                                              "hasAccess": "int",
                                              "id": "int"
                                          },
                                          "dynamicFormSectionModel": {
                                              "sectionId": "int",
                                              "name": "string",
                                              "cid": "int",
                                              "hidden": "boolean",
                                              "dynamicFormId": "int",
                                              "sequence": "int",
                                              "createUserId": "int",
                                              "description": "string",
                                              "dynamicFormItemModelList": [
                                                  {
                                                      "dynamicFormItemId": "int",
                                                      "name": "string",
                                                      "sectionId": "int",
                                                      "createUserId": "int",
                                                      "cid": "int",
                                                      "fieldType": "string",
                                                      "optionValues": "string",
                                                      "helpText": "string",
                                                      "createts": "int",
                                                      "dynamicFormId": "int",
                                                      "mappedEntityItem": "string",
                                                      "fieldTypeItem": "string",
                                                      "mandatory": "int",
                                                      "sequence": "int",
                                                      "weightage": "int",
                                                      "expectedValue": "string",
                                                      "correctFeedback": "boolean",
                                                      "incorrectFeedback": "boolean",
                                                      "attachmentModel": "object",
                                                      "prefill": "string",
                                                      "dynaFormItemOptionModelList": [],
                                                      "customListModel": "string",
                                                      "optionRandom": "boolean",
                                                      "numberingStyle": "string"
                                                  }
                                              ],
                                              "assignee": "string",
                                              "userGroupModel": "string",
                                              "attachmentModel": "string",
                                              "assigneeModel": "string",
                                              "sample": "string",
                                              "totalweightage": "int"
                                          },
                                          "userGroupModel": "object",
                                          "completedBy": {
                                              "userId": "int",
                                              "firstName": "string",
                                              "lastName": "string",
                                              "name": "string",
                                              "phone": "string",
                                              "email": "string",
                                              "status": "string",
                                              "shortName": "string",
                                              "thumbnail": "string",
                                              "gender": "string",
                                              "jobTitle": "string",
                                              "departmentId": "int",
                                              "department": "string",
                                              "profileId": "int",
                                              "profileName": "string",
                                              "timezone": "string",
                                              "userStartDate": "date",
                                              "cellPhone": "int",
                                              "empId": "string",
                                              "allocation": "int",
                                              "userDateFormat": "date",
                                              "star": "int",
                                              "imageName": "string",
                                              "notes": "string",
                                              "im": "int",
                                              "createuserid": "int",
                                              "cid": "string",
                                              "guid": "int",
                                              "hasAccess": "int",
                                              "id": "int"
                                          }
                                      }
                                  ],
                                  "testResult": "string",
                                  "allowGrader": "boolean",
                                  "comments": "string",
                                  "trainingModel": "object",
                                  "optedOutForEmail": "string"
                              },
                                  ],
                                  "testResult": "string",
                                  "allowGrader": "boolean",
                                  "comments": "string",
                                  "trainingModel": "object",
                                  "optedOutForEmail": "boolean"
                              }
                          ]
                          "message": "successful"
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
        deprecated: false
    /api/response/{dynamicFormId}:
      get:
        tags:
          - Forms
        summary: 'Retrieve form response '
        operationId: getDynaFormResponseDetailsUsingGET
        parameters:
          - name: assignUserId
            in: query
            description: The ID of User.
            required: false
            schema:
              type: integer
              format: int32
              example: ''
          - name: assignmentId
            in: query
            description: The Assignment ID of the User.
            required: false
            schema:
              type: integer
              format: int32
              example: ''
          - name: dynamicFormId
            in: path
            description: The ID of Form.
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "FormData": {
                              "dynamicFormId": "int",
                              "name": "string",
                              "dynaFormCode": "string",
                              "description": "string",
                              "createUserModel": "object",
                              "createts": "int",
                              "updatets": "int",
                              "cid": "int",
                              "availability": "string",
                              "status": "string",
                              "anonymous": "int",
                              "userGroupId": "string",
                              "secSequence": "string",
                              "sectionModelList": [
                                  {
                                      "sectionId": "int",
                                      "name": "string",
                                      "cid": "int",
                                      "hidden": "boolean",
                                      "dynamicFormId": "int",
                                      "sequence": "int",
                                      "createUserId": "int",
                                      "description": "string",
                                      "dynamicFormItemModelList": [
                                          {
                                              "dynamicFormItemId": "int",
                                              "name": "string",
                                              "sectionId": "int",
                                              "createUserId": "int",
                                              "cid": "int",
                                              "fieldType": "string",
                                              "optionValues": "string",
                                              "helpText": "string",
                                              "createts": "int",
                                              "dynamicFormId": "int",
                                              "mappedEntityItem": "string",
                                              "fieldTypeItem": "string",
                                              "mandatory": "int",
                                              "sequence": "int",
                                              "weightage": "string",
                                              "expectedValue": "string",
                                              "correctFeedback": "boolean",
                                              "incorrectFeedback": "string",
                                              "attachmentModel": "object",
                                              "prefill": "string",
                                              "dynaFormItemOptionModelList":"object",
                                              "customListModel": "object",
                                              "optionRandom": "boolean",
                                              "numberingStyle": "string"
                                          }   
                                      ],
                                      "assignee": "string",
                                      "userGroupModel": "object",
                                      "attachmentModel": "object",
                                      "assigneeModel": "object",
                                      "sample": "string",
                                      "totalweightage": "int"
                                  }
                              ],
                              "thresholdScore": "string",
                              "formType": "string",
                              "dataFlow": "string",
                              "embedCode": "string",
                              "showCorrect": "boolean",
                              "listed": "int",
                              "publicSummary": "boolean",
                              "presentationStyle": "string",
                              "timeLimit": "string",
                              "attemptLimit": "string",
                              "layout": "string",
                              "helpTextStyle": "string",
                              "questionRandom": "boolean",
                              "specificQuestionRandom": "string",
                              "sectionVisibility": "boolean",
                              "mappedEntity": "string"
                          },
                          "code": "int",
                          "message": "string",
                          "Responses": {
                              "int": {
                                  "responseId": "int",
                                  "itemId": "int",
                                  "response": "string",
                                  "createUserId": "int",
                                  "createts": "int",
                                  "assignmentId": "int",
                                  "digitalSignatureModel": "string",
                                  "cid": "int",
                                  "remoteAddr": "int",
                                  "graderResponse": "boolean",
                                  "attachmentModel": "object",
                                  "sentimentCode": "string",
                                  "sentimentScore": "string",
                                  "answerCorrect": "boolean"
                              }
                          }
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
        deprecated: false
    /api/responselist:
      get:
        tags:
          - Forms
        summary: Retrieve form responses
        operationId: getDynaFormsResponseListUsingGET
        parameters:
          - name: dynamicFormId
            in: query
            description: The ID of Form.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "FormData": {
                              "dynamicFormId": "int",
                              "name": "string",
                              "dynaFormCode": "string",
                              "description": "string",
                              "createUserModel": "object",
                              "createts": "int",
                              "updatets": "int",
                              "cid": "int",
                              "availability": "string",
                              "status": "string",
                              "anonymous": "int",
                              "userGroupId": "int",
                              "secSequence": "string",
                              "sectionModelList": [
                                  {
                                      "sectionId": "int",
                                      "name": "string",
                                      "cid": "int",
                                      "hidden": "boolean",
                                      "dynamicFormId": "int",
                                      "sequence": "int",
                                      "createUserId": "int",
                                      "description": "string",
                                      "dynamicFormItemModelList": [
                                          {
                                              "dynamicFormItemId": "int",
                                              "name": "string",
                                              "sectionId": "int",
                                              "createUserId": "int",
                                              "cid": "int",
                                              "fieldType": "string",
                                              "optionValues": "string",
                                              "helpText": "string",
                                              "createts": "int",
                                              "dynamicFormId": "int",
                                              "mappedEntityItem": "string",
                                              "fieldTypeItem": "string",
                                              "mandatory": "int",
                                              "sequence": "int",
                                              "weightage": "string",
                                              "expectedValue": "string",
                                              "correctFeedback": "boolean",
                                              "incorrectFeedback": "boolean",
                                              "attachmentModel": "object",
                                              "prefill": "string",
                                              "dynaFormItemOptionModelList": "object",
                                              "customListModel": "object",
                                              "optionRandom": "boolean",
                                              "numberingStyle": "string"
                                          }
                                      ],
                                      "assignee": "string",
                                      "userGroupModel": "object",
                                      "attachmentModel": "object",
                                      "assigneeModel": "object",
                                      "sample": "string",
                                      "totalweightage": "int"
                                  }
                              ],
                              "thresholdScore": "string",
                              "formType": "string",
                              "dataFlow": "string",
                              "embedCode": "string",
                              "showCorrect": "boolean",
                              "listed": "int",
                              "publicSummary": "string",
                              "presentationStyle": "string",
                              "timeLimit": "string",
                              "attemptLimit": "string",
                              "layout": "string",
                              "helpTextStyle": "string",
                              "questionRandom": "boolean",
                              "specificQuestionRandom": "string",
                              "sectionVisibility": "boolean",
                              "mappedEntity": "string"
                          },
                          "code": "int",
                          "message": "successful",
                          "Responses": {
                              "int": {
                                  "responseId": "int",
                                  "itemId": "int",
                                  "response": "string",
                                  "createUserId": "int",
                                  "createts": "int",
                                  "assignmentId": "int",
                                  "digitalSignatureModel": "string",
                                  "cid": "int",
                                  "remoteAddr": "string",
                                  "graderResponse": "boolean",
                                  "attachmentModel": "object",
                                  "sentimentCode": "string",
                                  "sentimentScore": "string",
                                  "answerCorrect": "boolean"
                              }
                          }
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
        deprecated: false
    /api/saveFormResponse:
      post:
        tags:
          - Forms
        summary: 'Save form repsonse '
        operationId: saveFormResponseUsingPOST
        parameters:
          - name: assignmentId
            in: query
            description: The Assignment ID of the User.
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "code": "int",
                        "message": "Successful"
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
        deprecated: false
    /api/saveItemResponse:
      post:
        tags:
          - Forms
        summary: Save item response
        operationId: saveItemResponseUsingPOST
        parameters:
          - name: assignmentId
            in: query
            description: The Assignment ID of the User.
            required: true
            schema:
              type: integer
              format: int32
          - name: itemId
            in: query
            description: The ID of the form Item.
            required: true
            schema:
              type: integer
              format: int32
          - name: responseValue
            in: query
            description: Response Value to save in Form.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "code": "int",
                        "message": "Successful"
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
        deprecated: false
    /api/view:
      get:
        tags:
          - Forms
        summary: Retrieve form details
        operationId: getDynaFormDetailsUsingGET
        parameters:
          - name: dynamicFormId
            in: query
            description: The ID of Form.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "FormData": {
                              "dynamicFormId": "int",
                              "name": "string",
                              "dynaFormCode": "string",
                              "description": "string",
                              "createUserModel": "object",
                              "createUserViewModel": {
                                  "userId": "int",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "int",
                                  "email": "string",
                                  "status": "string",
                                  "shortName": "string",
                                  "thumbnail": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "department": "string",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "timezone": "string",
                                  "userStartDate": "int",
                                  "cellPhone": "int",
                                  "empId": "string",
                                  "allocation": "int",
                                  "userDateFormat": "string",
                                  "star": "int",
                                  "imageName": "string",
                                  "notes": "string",
                                  "im": "int",
                                  "createuserid": "int",
                                  "cid": "int",
                                  "guid": "string",
                                  "hasAccess": "int",
                                  "id": "int"
                              },
                              "createts": "int",
                              "updatets": "string",
                              "cid": "int",
                              "availability": "string",
                              "status": "string",
                              "anonymous": "int",
                              "helpTextStyle": "string",
                              "mappedEntity": "string",
                              "userGroupModel": "object",
                              "secSequence": "string",
                              "thresholdScore": "int",
                              "formType": "string",
                              "dataFlow": "string",
                              "showCorrect": "boolean",
                              "listed": "int",
                              "publicSummary": "boolean",
                              "presentationStyle": "string",
                              "timeLimit": "int",
                              "attemptLimit": "string",
                              "layout": "string"
                          },
                          "code": "string",
                          "data": [
                              {
                                  "sectionId": "int",
                                  "name": "string",
                                  "cid": "int",
                                  "hidden": "boolean",
                                  "dynamicFormId": "int",
                                  "sequence": "int",
                                  "createUserId": "int",
                                  "description": "string",
                                  "dynamicFormItemModelList": [
                                      {
                                          "dynamicFormItemId": "int",
                                          "name": "string",
                                          "sectionId": "int",
                                          "createUserId": "int",
                                          "cid": "int",
                                          "fieldType": "string",
                                          "optionValues": "string",
                                          "helpText": "string",
                                          "createts": "int",
                                          "dynamicFormId": "int",
                                          "mappedEntityItem": "string",
                                          "fieldTypeItem": "string",
                                          "mandatory": "int",
                                          "sequence": "int",
                                          "weightage": "string",
                                          "expectedValue": "string",
                                          "correctFeedback": "string",
                                          "incorrectFeedback": "string",
                                          "attachmentModel": "object",
                                          "prefill": "string",
                                          "dynaFormItemOptionModelList": [
                      "object"
                      ],
                                          "customListModel": "object",
                                          "optionRandom": "boolean",
                                          "numberingStyle": "string"
                                      }
                                      
                                  ],
                                  "assignee": "string",
                                  "userGroupModel": "object",
                                  "attachmentModel": "object",
                                  "assigneeModel": "object",
                                  "sample": "string",
                                  "totalweightage": "int"
                              }
                          ],
                          "message": "string"
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
        deprecated: false
    /rm/api/feedback/:
      get:
        tags:
          - Feedback
        summary: Retrieve feedback
        description: ''
        operationId: get-all-feedback
        parameters:
          - name: type
            in: query
            description: >-
              Type of feedback to retrieve. 

              Choose between ["all", "my", "team"]. all - All Feedback, my - My
              Feedback, team - Team's feedback
            required: true
            schema:
              type: string
              enum:
                - all
                - my
                - team
              default: all
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                          "message": "Feedback retrieved successfully.",
                          "feedbackList": [
                              {
                                  "feedbackid": "int",
                                  "feedback": "string",
                                  "feedbackDesc": "string",
                                  "assignedUserModel": {
                                      "cid": "int",
                                      "empId": "int",
                                      "userId": "int",
                                      "position": "string",
                                      "firstName": "string",
                                      "shortName": "string",
                                      "lastName": "string",
                                      "displayFullName": "string",
                                      "userStartDate": "date",
                                      "email": "string",
                                      "cellPhone": "string",
                                      "userName": "string",
                                      "departmentModel": {
                                          "departmentId": "int",
                                          "name": "string",
                                          "description": "string",
                                          "deptHead": "int",
                                          "cid": "int",
                                          "departmentCode": "string",
                                          "departmentLabel": "string",
                                          "parentDepartmentId": "int",
                                          "parentDepartmentName": "string",
                                          "deptHeadName": "string",
                                          "noOfEmployees": "int",
                                          "userModel": {
                                              "userId": "int",
                                              "firstName": "string",
                                              "lastName": "string",
                                              "name": "string",
                                              "phone": "string",
                                              "email": "string",
                                              "status": "string",
                                              "shortName": "string",
                                              "gender": "string",
                                              "jobTitle": "string",
                                              "departmentId": "int",
                                              "locationId": "int",
                                              "department": "string",
                                              "location": "string",
                                              "profileId": "int",
                                              "timezone": "string",
                                              "userStartDate": "date",
                                              "userEndDate": "date",
                                              "cellPhone": "string",
                                              "empId": "string",
                                              "allocation": "double",
                                              "userDateFormat": "string",
                                              "star": "int",
                                              "notes": "string",
                                              "im": "string",
                                              "createuserid": "int",
                                              "countryId": "int",
                                              "cid": "int",
                                              "guid": "string",
                                              "hasAccess": "int",
                                              "userNameFormat": "string",
                                              "id": "int"
                                          }
                                      },
                                      "prefixSalutation": "string",
                                      "secondLastName": "string",
                                      "middleName": "string",
                                      "familySuffix": "string",
                                      "status": "string",
                                      "ptoannual": "double",
                                      "ptobalance": "double",
                                      "workerType": "string",
                                      "gender": "string",
                                      "userDateOfBirth": "date",
                                      "phone": "string",
                                      "im": "string",
                                      "createts": "int",
                                      "timezone": "string",
                                      "adpAssociateOID": "string",
                                      "practiceId": "int",
                                      "imageName": "string",
                                      "thumbnail": "string",
                                      "profileId": "int",
                                      "allocation": "double",
                                      "countryId": "int",
                                      "lastupdateuserid": "int",
                                      "lastupdatets": "date",
                                      "userDateFormat": "date",
                                      "hrPortal": "string",
                                      "userDisplayName": "string",
                                      "star": "int",
                                      "timecardPeriodPref": "string",
                                      "tosVersion": "string",
                                      "guid": "string",
                                      "jobGrade": "string",
                                      "paId": "int",
                                      "appMenuId": "int",
                                      "calendarId": "int",
                                      "workingDays": "string",
                                      "hasAccess": "boolean",
                                      "notifications": "boolean",
                                      "locationModel": {
                                          "locationId": "int",
                                          "locationName": "string",
                                          "cid": "int",
                                          "locationDescription": "string",
                                          "locationType": "string",
                                          "address": "string",
                                          "lattitude": "string",
                                          "longitude": "string",
                                          "locationUID": "string",
                                          "status": "string",
                                          "workingDays": "string",
                                          "locationCode": "string",
                                          "locationLabel": "string",
                                          "parentLocationId": "int",
                                          "createuserid": "int",
                                          "addressModelList": [
                                              {
                                                  "addressId": "int",
                                                  "addressLine1": "string",
                                                  "addressLine2": "string",
                                                  "city": "string",
                                                  "currentStatus": "status",
                                                  "state": "string",
                                                  "zipCode": "string",
                                                  "createts": "int",
                                                  "cid": "int",
                                                  "userId": "int",
                                                  "candidateId": "int",
                                                  "addressType": "string",
                                                  "locationId": "int",
                                                  "contactId": "int",
                                                  "countryId": "int",
                                                  "countryModel": {
                                                      "countryId": "int",
                                                      "countryName": "string",
                                                      "iso2": "string"
                                                  },
                                                  "status": "string",
                                                  "verificationStatus": "string",
                                                  "custId": "int",
                                                  "mapUrl": "string",
                                                  "createUserId": "int",
                                                  "extAppUID": "string",
                                                  "countryCode": "string",
                                                  "countryid": "int"
                                              }
                                          ]
                                      },
                                      "practiceModel": {
                                          "practiceId": "int",
                                          "name": "string",
                                          "description": "string",
                                          "practiceHead": "string",
                                          "userModel": "object",
                                          "createts": "object",
                                          "cid": "int"
                                      },
                                      "azureObjectIdentifier": "string",
                                      "isView": "boolean",
                                      "view": "boolean"
                                  },
                                  "cid": "int",
                                  "createts": "int",
                                  "pfSkillList": "object",
                                  "createUserModel": "object",
                                  "assessment": "int",
                                  "status": "string",
                                  "recipientStatus": "string",
                                  "objectType": "string",
                                  "sentimentCode": "string",
                                  "sentimentScore": "string",
                                  "pfBadgeList": "object",
                                  "userName": "string",
                                  "customFieldModelList": "object",
                                  "badgeNames": "object",
                                  "attachmentModelList": "object",
                                  "wallName": "string",
                                  "skillString": "string",
                                  "reactionType": "string",
                                  "id": "int"
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Feedback retrieved successfully.
                    feedbackList:
                      type: array
                      items:
                        type: object
                        properties:
                          feedbackid:
                            type: string
                            example: int
                          feedback:
                            type: string
                            example: string
                          feedbackDesc:
                            type: string
                            example: string
                          assignedUserModel:
                            type: object
                            properties:
                              cid:
                                type: string
                                example: int
                              empId:
                                type: string
                                example: int
                              userId:
                                type: string
                                example: int
                              position:
                                type: string
                                example: string
                              firstName:
                                type: string
                                example: string
                              shortName:
                                type: string
                                example: string
                              lastName:
                                type: string
                                example: string
                              displayFullName:
                                type: string
                                example: string
                              userStartDate:
                                type: string
                                example: date
                              email:
                                type: string
                                example: string
                              cellPhone:
                                type: string
                                example: string
                              userName:
                                type: string
                                example: string
                              departmentModel:
                                type: object
                                properties:
                                  departmentId:
                                    type: string
                                    example: int
                                  name:
                                    type: string
                                    example: string
                                  description:
                                    type: string
                                    example: string
                                  deptHead:
                                    type: string
                                    example: int
                                  cid:
                                    type: string
                                    example: int
                                  departmentCode:
                                    type: string
                                    example: string
                                  departmentLabel:
                                    type: string
                                    example: string
                                  parentDepartmentId:
                                    type: string
                                    example: int
                                  parentDepartmentName:
                                    type: string
                                    example: string
                                  deptHeadName:
                                    type: string
                                    example: string
                                  noOfEmployees:
                                    type: string
                                    example: int
                                  userModel:
                                    type: object
                                    properties:
                                      userId:
                                        type: string
                                        example: int
                                      firstName:
                                        type: string
                                        example: string
                                      lastName:
                                        type: string
                                        example: string
                                      name:
                                        type: string
                                        example: string
                                      phone:
                                        type: string
                                        example: string
                                      email:
                                        type: string
                                        example: string
                                      status:
                                        type: string
                                        example: string
                                      shortName:
                                        type: string
                                        example: string
                                      gender:
                                        type: string
                                        example: string
                                      jobTitle:
                                        type: string
                                        example: string
                                      departmentId:
                                        type: string
                                        example: int
                                      locationId:
                                        type: string
                                        example: int
                                      department:
                                        type: string
                                        example: string
                                      location:
                                        type: string
                                        example: string
                                      profileId:
                                        type: string
                                        example: int
                                      timezone:
                                        type: string
                                        example: string
                                      userStartDate:
                                        type: string
                                        example: date
                                      userEndDate:
                                        type: string
                                        example: date
                                      cellPhone:
                                        type: string
                                        example: string
                                      empId:
                                        type: string
                                        example: string
                                      allocation:
                                        type: string
                                        example: double
                                      userDateFormat:
                                        type: string
                                        example: string
                                      star:
                                        type: string
                                        example: int
                                      notes:
                                        type: string
                                        example: string
                                      im:
                                        type: string
                                        example: string
                                      createuserid:
                                        type: string
                                        example: int
                                      countryId:
                                        type: string
                                        example: int
                                      cid:
                                        type: string
                                        example: int
                                      guid:
                                        type: string
                                        example: string
                                      hasAccess:
                                        type: string
                                        example: int
                                      userNameFormat:
                                        type: string
                                        example: string
                                      id:
                                        type: string
                                        example: int
                              prefixSalutation:
                                type: string
                                example: string
                              secondLastName:
                                type: string
                                example: string
                              middleName:
                                type: string
                                example: string
                              familySuffix:
                                type: string
                                example: string
                              status:
                                type: string
                                example: string
                              ptoannual:
                                type: string
                                example: double
                              ptobalance:
                                type: string
                                example: double
                              workerType:
                                type: string
                                example: string
                              gender:
                                type: string
                                example: string
                              userDateOfBirth:
                                type: string
                                example: date
                              phone:
                                type: string
                                example: string
                              im:
                                type: string
                                example: string
                              createts:
                                type: string
                                example: int
                              timezone:
                                type: string
                                example: string
                              adpAssociateOID:
                                type: string
                                example: string
                              practiceId:
                                type: string
                                example: int
                              imageName:
                                type: string
                                example: string
                              thumbnail:
                                type: string
                                example: string
                              profileId:
                                type: string
                                example: int
                              allocation:
                                type: string
                                example: double
                              countryId:
                                type: string
                                example: int
                              lastupdateuserid:
                                type: string
                                example: int
                              lastupdatets:
                                type: string
                                example: date
                              userDateFormat:
                                type: string
                                example: date
                              hrPortal:
                                type: string
                                example: string
                              userDisplayName:
                                type: string
                                example: string
                              star:
                                type: string
                                example: int
                              timecardPeriodPref:
                                type: string
                                example: string
                              tosVersion:
                                type: string
                                example: string
                              guid:
                                type: string
                                example: string
                              jobGrade:
                                type: string
                                example: string
                              paId:
                                type: string
                                example: int
                              appMenuId:
                                type: string
                                example: int
                              calendarId:
                                type: string
                                example: int
                              workingDays:
                                type: string
                                example: string
                              hasAccess:
                                type: string
                                example: boolean
                              notifications:
                                type: string
                                example: boolean
                              locationModel:
                                type: object
                                properties:
                                  locationId:
                                    type: string
                                    example: int
                                  locationName:
                                    type: string
                                    example: string
                                  cid:
                                    type: string
                                    example: int
                                  locationDescription:
                                    type: string
                                    example: string
                                  locationType:
                                    type: string
                                    example: string
                                  address:
                                    type: string
                                    example: string
                                  lattitude:
                                    type: string
                                    example: string
                                  longitude:
                                    type: string
                                    example: string
                                  locationUID:
                                    type: string
                                    example: string
                                  status:
                                    type: string
                                    example: string
                                  workingDays:
                                    type: string
                                    example: string
                                  locationCode:
                                    type: string
                                    example: string
                                  locationLabel:
                                    type: string
                                    example: string
                                  parentLocationId:
                                    type: string
                                    example: int
                                  createuserid:
                                    type: string
                                    example: int
                                  addressModelList:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        addressId:
                                          type: string
                                          example: int
                                        addressLine1:
                                          type: string
                                          example: string
                                        addressLine2:
                                          type: string
                                          example: string
                                        city:
                                          type: string
                                          example: string
                                        currentStatus:
                                          type: string
                                          example: status
                                        state:
                                          type: string
                                          example: string
                                        zipCode:
                                          type: string
                                          example: string
                                        createts:
                                          type: string
                                          example: int
                                        cid:
                                          type: string
                                          example: int
                                        userId:
                                          type: string
                                          example: int
                                        candidateId:
                                          type: string
                                          example: int
                                        addressType:
                                          type: string
                                          example: string
                                        locationId:
                                          type: string
                                          example: int
                                        contactId:
                                          type: string
                                          example: int
                                        countryId:
                                          type: string
                                          example: int
                                        countryModel:
                                          type: object
                                          properties:
                                            countryId:
                                              type: string
                                              example: int
                                            countryName:
                                              type: string
                                              example: string
                                            iso2:
                                              type: string
                                              example: string
                                        status:
                                          type: string
                                          example: string
                                        verificationStatus:
                                          type: string
                                          example: string
                                        custId:
                                          type: string
                                          example: int
                                        mapUrl:
                                          type: string
                                          example: string
                                        createUserId:
                                          type: string
                                          example: int
                                        extAppUID:
                                          type: string
                                          example: string
                                        countryCode:
                                          type: string
                                          example: string
                                        countryid:
                                          type: string
                                          example: int
                              practiceModel:
                                type: object
                                properties:
                                  practiceId:
                                    type: string
                                    example: int
                                  name:
                                    type: string
                                    example: string
                                  description:
                                    type: string
                                    example: string
                                  practiceHead:
                                    type: string
                                    example: string
                                  userModel:
                                    type: string
                                    example: object
                                  createts:
                                    type: string
                                    example: object
                                  cid:
                                    type: string
                                    example: int
                              azureObjectIdentifier:
                                type: string
                                example: string
                              isView:
                                type: string
                                example: boolean
                              view:
                                type: string
                                example: boolean
                          cid:
                            type: string
                            example: int
                          createts:
                            type: string
                            example: int
                          pfSkillList:
                            type: string
                            example: object
                          createUserModel:
                            type: string
                            example: object
                          assessment:
                            type: string
                            example: int
                          status:
                            type: string
                            example: string
                          recipientStatus:
                            type: string
                            example: string
                          objectType:
                            type: string
                            example: string
                          sentimentCode:
                            type: string
                            example: string
                          sentimentScore:
                            type: string
                            example: string
                          pfBadgeList:
                            type: string
                            example: object
                          userName:
                            type: string
                            example: string
                          customFieldModelList:
                            type: string
                            example: object
                          badgeNames:
                            type: string
                            example: object
                          attachmentModelList:
                            type: string
                            example: object
                          wallName:
                            type: string
                            example: string
                          skillString:
                            type: string
                            example: string
                          reactionType:
                            type: string
                            example: string
                          id:
                            type: string
                            example: int
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Error while retrieving feedback."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while retrieving feedback.
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid.
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Error while retrieving feedback."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while retrieving feedback.
        deprecated: false
    /getgoal/:
      get:
        tags:
          - Goals
        summary: Retrieve Goal
        description: ''
        operationId: retrieve-goal
        parameters:
          - name: x-api-key
            in: header
            description: The API ID of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userId
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: goalid
            in: query
            description: ID to get a goal.
            required: true
            schema:
              type: integer
              format: int32
          - name: reviewUserId
            in: query
            description: The ID of the user who is reviewee.
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "goalId": "int",
                          "summary": "string",
                          "additive": "int",
                          "visibleToDirectReports": "int",
                          "freezeGoal": "int",
                          "isForward": "boolean",
                          "companyGoal": "int",
                          "elapsedTimeRatio": "float",
                          "completionRatio": "float",
                          "progressRatio": "float",
                          "description": "string",
                          "typecode": "string",
                          "status": "string",
                          "state": "string",
                          "predictiveIndex": "string",
                          "objectiveId": "int",
                          "cid": "int",
                          "disposition": "string",
                          "units": "string",
                          "assignedUserModel": {
                              "cid": "int",
                              "empId": "string",
                              "userId": "int",
                              "position": "string",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartdate": "date",
                              "userEnddate": "date",
                              "email": "string",
                              "cellPhone": "string",
                              "userName": "string",
                              "userProfileModel": {
                                  "cid": "int",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "profileDescription": "string",
                                  "orgId": "int",
                                  "profileResponsibilities": "string",
                                  "profileRequirements": "string",
                                  "salaryBandMin": "double",
                                  "salaryBandMax": "double",
                                  "salaryBandCurrency": "double",
                                  "managerProfileId": "int",
                                  "managerProfileName": "string",
                                  "customFieldValueModelList": "object",
                                  "numberofUsers": "int",
                                  "createuserid": "int",
                                  "status": "string",
                                  "careerPathwayModelList": "object",
                                  "objectType": "string",
                                  "objectName": "string",
                                  "objectid": "int"
                              },
                              "departmentModel": {
                                  "departmentId": "int",
                                  "name": "string",
                                  "description": "string",
                                  "deptHead": "int",
                                  "cid": "int",
                                  "departmentCode": "string",
                                  "departmentLabel": "string",
                                  "parentDepartmentId": "int",
                                  "parentDepartmentName": "string",
                                  "deptHeadName": "string",
                                  "noOfEmployees": "int",
                                  "userModel": {
                                      "userId": "int",
                                      "firstName": "string",
                                      "lastName": "string",
                                      "name": "string",
                                      "phone": "string",
                                      "email": "string",
                                      "status": "string",
                                      "shortName": "string",
                                      "thumbnail": "string",
                                      "gender": "string",
                                      "jobTitle": "string",
                                      "departmentId": "int",
                                      "locationId": "int",
                                      "department": "string",
                                      "location": "string",
                                      "profileId": "int",
                                      "timezone": "string",
                                      "userStartdate": "date",
                                      "userEnddate": "date",
                                      "cellPhone": "string",
                                      "empId": "string",
                                      "userdateOfBirth": "date",
                                      "allocation": "double",
                                      "userdateFormat": "string",
                                      "star": "int",
                                      "imageName": "string",
                                      "notes": "string",
                                      "im": "string",
                                      "createuserid": "int",
                                      "countryId": "int",
                                      "cid": "int",
                                      "guid": "string",
                                      "hasAccess": "boolean",
                                      "displayName": "string",
                                      "id": "int"
                                  }
                              },
                              "prefixSalutation": "string",
                              "secondLastName": "string",
                              "middleName": "string",
                              "namePronunciation": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "ptoannual": "float",
                              "ptobalance": "float",
                              "gender": "string",
                              "phone": "string",
                              "im": "string",
                              "createts": 1610359663000,
                              "timezone": "string",
                              "practiceId": "int",
                              "imageName": "string",
                              "thumbnail": "string",
                              "profileId": "int",
                              "allocation": "double",
                              "countryId": "int",
                              "lastupdateuserid": "int",
                              "lastupdatets": "date",
                              "workingDaysSchedule": "string",
                              "userdateFormat": "string",
                              "hrPortal": "string",
                              "userDisplayName": "string",
                              "star": "int",
                              "timecardPeriodPref": "string",
                              "languagePreference": "string",
                              "tosVersion": "string",
                              "guid": "string",
                              "jobGrade": "string",
                              "paId": "int",
                              "workingDays": "string",
                              "hasAccess": "boolean",
                              "notifications": "boolean",
                              "locationModel": {
                                  "locationId": "int",
                                  "locationName": "string",
                                  "cid": "int",
                                  "locationDescription": "string",
                                  "locationType": "string",
                                  "address": "string",
                                  "lattitude": "string",
                                  "longitude": "string",
                                  "locationUID": "string",
                                  "status": "string",
                                  "workingDays": "string",
                                  "locationCode": "string",
                                  "locationLabel": "string",
                                  "parentLocationId": "int",
                                  "createuserid": "int",
                                  "addressModelList": [
                                      {
                                          "addressId": "int",
                                          "addressLine1": "string",
                                          "addressLine2": "string",
                                          "city": "string",
                                          "currentStatus": "string",
                                          "state": "string",
                                          "zipCode": "string",
                                          "createts": 1538742819000,
                                          "cid": "int",
                                          "userId": "int",
                                          "candidateId": "int",
                                          "addressType": "string",
                                          "locationId": "int",
                                          "contactId": "int",
                                          "countryId": "int",
                                          "countryModel": {
                                              "countryId": "int",
                                              "countryName": "string",
                                              "iso2": "string"
                                          },
                                          "status": "string",
                                          "verificationStatus": "string",
                                          "custId": "int",
                                          "mapUrl": "string",
                                          "createUserId": "int",
                                          "extAppUID": "string",
                                          "countryid": "int"
                                      }
                                  ]
                              },
                              "isView": "boolean",
                              "view": "boolean"
                          },
                          "reviewerUserModel": {
                              "cid": "int",
                              "empId": "string",
                              "userId": "int",
                              "position": "string",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartdate": "date",
                              "email": "string",
                              "cellPhone": "string",
                              "userName": "string",
                              "departmentModel": {
                                  "departmentId": "int",
                                  "name": "string",
                                  "description": "string",
                                  "deptHead": "int",
                                  "cid": "int",
                                  "departmentCode": "string",
                                  "departmentLabel": "string",
                                  "parentDepartmentId": "int",
                                  "parentDepartmentName": "string",
                                  "deptHeadName": "string",
                                  "noOfEmployees": "int",
                                  "userModel": {
                                      "userId": "int",
                                      "firstName": "string",
                                      "lastName": "string",
                                      "name": "string",
                                      "phone": "string",
                                      "email": "string",
                                      "status": "string",
                                      "shortName": "string",
                                      "thumbnail": "string",
                                      "gender": "string",
                                      "jobTitle": "string",
                                      "departmentId": "int",
                                      "locationId": "int",
                                      "department": "string",
                                      "location": "string",
                                      "profileId": "int",
                                      "profileName": "string",
                                      "timezone": "string",
                                      "userStartdate": "date",
                                      "userEnddate": "date",
                                      "cellPhone": "string",
                                      "empId": "string",
                                      "userdateOfBirth": "date",
                                      "allocation": "double",
                                      "userdateFormat": "string",
                                      "star": "int",
                                      "imageName": "string",
                                      "notes": "string",
                                      "im": "string",
                                      "createuserid": "int",
                                      "countryId": "int",
                                      "cid": "int",
                                      "guid": "string",
                                      "hasAccess": "boolean",
                                      "displayName": "string",
                                      "id": "int"
                                  }
                              },
                              "prefixSalutation": "string",
                              "middleName": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "ptoannual": "float",
                              "ptobalance": "float",
                              "workerType": "string",
                              "gender": "string",
                              "phone": "string",
                              "im": "string",
                              "createts": 1521203555000,
                              "timezone": "string",
                              "profileId": "int",
                              "allocation": "double",
                              "lastupdateuserid": "int",
                              "lastupdatets": "date",
                              "userdateFormat": "string",
                              "hrPortal": "string",
                              "userDisplayName": "string",
                              "star": "int",
                              "timecardPeriodPref": "string",
                              "tosVersion": "string",
                              "guid": "string",
                              "jobGrade": "string",
                              "calendarId": "int",
                              "workingDays": "string",
                              "hasAccess": "boolean",
                              "notifications": "boolean",
                              "locationModel": {
                                  "locationId": "int",
                                  "locationName": "string",
                                  "cid": "int",
                                  "locationDescription": "string",
                                  "locationType": "string",
                                  "address": "string",
                                  "lattitude": "string",
                                  "longitude": "string",
                                  "locationUID": "string",
                                  "status": "string",
                                  "workingDays": "string",
                                  "locationCode": "string",
                                  "locationLabel": "string",
                                  "parentLocationId": "int",
                                  "createuserid": "int",
                                  "addressModelList": [
                                      {
                                          "addressId": "int",
                                          "addressLine1": "string",
                                          "addressLine2": "string",
                                          "city": "string",
                                          "currentStatus": "string",
                                          "state": "string",
                                          "zipCode": "string",
                                          "createts": 1538742819000,
                                          "cid": "int",
                                          "userId": "int",
                                          "candidateId": "int",
                                          "addressType": "string",
                                          "locationId": "int",
                                          "contactId": "int",
                                          "countryId": "int",
                                          "countryModel": {
                                              "countryId": "int",
                                              "countryName": "string",
                                              "iso2": "string"
                                          },
                                          "status": "string",
                                          "verificationStatus": "string",
                                          "custId": "int",
                                          "mapUrl": "string",
                                          "createUserId": "int",
                                          "extAppUID": "string",
                                          "countryid": "int"
                                      }
                                  ]
                              },
                              "isView": "boolean",
                              "view": "boolean"
                          },
                          "goalCollaborationModel": [
                              {
                                  "collabid": "int",
                                  "goalid": "int",
                                  "userid": "int",
                                  "extuserid": "int",
                                  "cid": "int",
                                  "userModel": {
                                      "cid": "int",
                                      "empId": "string",
                                      "userId": "int",
                                      "firstName": "string",
                                      "shortName": "string",
                                      "lastName": "string",
                                      "displayFullName": "string",
                                      "email": "string",
                                      "userName": "string",
                                      "userProfileModel": {
                                          "cid": "int",
                                          "profileId": "int",
                                          "profileName": "string",
                                          "profileDescription": "string",
                                          "orgId": "int",
                                          "profileResponsibilities": "string",
                                          "profileRequirements": "string",
                                          "salaryBandMin": "double",
                                          "salaryBandMax": "double",
                                          "salaryBandCurrency": "string",
                                          "managerProfileId": "int",
                                          "managerProfileName": "string",
                                          "customFieldValueModelList": "List",
                                          "numberofUsers": "int",
                                          "createuserid": "int",
                                          "status": "string",
                                          "careerPathwayModelList": "List",
                                          "objectType": "string",
                                          "objectName": "string",
                                          "objectid": "int"
                                      },
                                      "status": "string",
                                      "ptoannual": "float",
                                      "ptobalance": "float",
                                      "gender": "string",
                                      "phone": "string",
                                      "createts": 1648276171000,
                                      "timezone": "string",
                                      "profileId": "int",
                                      "allocation": "double",
                                      "lastupdatets": "date",
                                      "userdateFormat": "string",
                                      "hrPortal": "string",
                                      "star": "int",
                                      "timecardPeriodPref": "string",
                                      "languagePreference": "string",
                                      "guid": "string",
                                      "hasAccess": "boolean",
                                      "notifications": "boolean",
                                      "isView": "boolean",
                                      "view": "boolean"
                                  },
                                  "extuserModel": "object"
                              }
                          ],
                          "crediteatets": "int",
                          "commentCrediteatets": "int",
                          "commentDescription": "string",
                          "uname": "string",
                          "hasGoalApprovalPermission": "boolean",
                          "begindate": "date",
                          "goalWeightage": "float",
                          "createuserid": "int",
                          "createts": 1661358176000,
                          "projectModel": {
                              "projectId": "int",
                              "projectName": "string",
                              "projectDesc": "string",
                              "startdate": "date",
                              "enddate": "date",
                              "contactPerson": "int",
                              "account": "int",
                              "accountModel": "object",
                              "userModelList": "List",
                              "status": "string",
                              "createts": 1623395718000,
                              "shortCode": "string",
                              "probability": "int",
                              "contactPersonName": "string",
                              "statusValue": "string",
                              "pgroupid": "int",
                              "puid": "string",
                              "billingType": "string",
                              "timeSheetOpenToAll": "int",
                              "userModel": {
                                  "userId": "int",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "string",
                                  "email": "string",
                                  "status": "string",
                                  "shortName": "string",
                                  "thumbnail": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "locationId": "int",
                                  "department": "string",
                                  "location": "string",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "timezone": "string",
                                  "userStartdate": "date",
                                  "userEnddate": "date",
                                  "cellPhone": "string",
                                  "empId": "string",
                                  "userdateOfBirth": "date",
                                  "allocation": "double",
                                  "userdateFormat": "string",
                                  "star": "int",
                                  "imageName": "string",
                                  "notes": "string",
                                  "im": "string",
                                  "createuserid": "int",
                                  "countryId": "int",
                                  "cid": "int",
                                  "guid": "string",
                                  "hasAccess": "boolean",
                                  "displayName": "string",
                                  "id": "int"
                              },
                              "projectGroupModel": "object",
                              "groupName": "string",
                              "accountName": "string",
                              "pmMail": "string",
                              "locationid": "int",
                              "reportMethod": "string",
                              "industry": "string",
                              "cid": "int",
                              "isAdmin": "boolean",
                              "createuserid": "int",
                              "lastupdateuserid": "int",
                              "admin": "boolean",
                              "projStatus": "string",
                              "projProbability": "int"
                          },
                          "goalTypeModel": {
                              "goalTypeId": "int",
                              "goalTypeName": "string",
                              "goalTypeDescription": "string",
                              "assessmentModel": {
                                  "scoretemplateid": "int",
                                  "cid": "int",
                                  "scoreMin": "float",
                                  "scoreMax": "float",
                                  "scoreMaxValidation": "float",
                                  "scoringInstructions": "string",
                                  "scoreName": "string",
                                  "allowFractional": "int",
                                  "rangeModelList": [
                                      {
                                          "strangeid": "int",
                                          "scoreTempId": "int",
                                          "rangeMin": "float",
                                          "rangeMax": "float",
                                          "interpretation": "string",
                                          "colorCode": "string",
                                          "cid": "int",
                                          "description": "string"
                                      },
                                      {
                                          "strangeid": "int",
                                          "scoreTempId": "int",
                                          "rangeMin": "float",
                                          "rangeMax": "float",
                                          "interpretation": "string",
                                          "colorCode": "string",
                                          "cid": "int",
                                          "description": "string"
                                      }
                                  ],
                                  "visualizationType": "string",
                                  "status": "string"
                              },
                              "createts": 1593877398000,
                              "cid": "int"
                          },
                          "parentGoalId": "int",
                          "id": "int",
                          "createUserId": "int",
                          "lastUpdateUserId": "int",
                          "projectid": "int",
                          "begindate": "date",
                          "targetdate": "date",
                          "initialvalue": "double",
                          "currentvalue": "double",
                          "goalvalue": "double"
                      }
                schema:
                  type: object
                  properties:
                    goalId:
                      type: string
                      example: int
                    summary:
                      type: string
                      example: string
                    additive:
                      type: string
                      example: int
                    visibleToDirectReports:
                      type: string
                      example: int
                    freezeGoal:
                      type: string
                      example: int
                    isForward:
                      type: string
                      example: boolean
                    companyGoal:
                      type: string
                      example: int
                    elapsedTimeRatio:
                      type: string
                      example: float
                    completionRatio:
                      type: string
                      example: float
                    progressRatio:
                      type: string
                      example: float
                    description:
                      type: string
                      example: string
                    typecode:
                      type: string
                      example: string
                    status:
                      type: string
                      example: string
                    state:
                      type: string
                      example: string
                    predictiveIndex:
                      type: string
                      example: string
                    objectiveId:
                      type: string
                      example: int
                    cid:
                      type: string
                      example: int
                    disposition:
                      type: string
                      example: string
                    units:
                      type: string
                      example: string
                    assignedUserModel:
                      type: object
                      properties:
                        cid:
                          type: string
                          example: int
                        empId:
                          type: string
                          example: string
                        userId:
                          type: string
                          example: int
                        position:
                          type: string
                          example: string
                        firstName:
                          type: string
                          example: string
                        shortName:
                          type: string
                          example: string
                        lastName:
                          type: string
                          example: string
                        displayFullName:
                          type: string
                          example: string
                        userStartdate:
                          type: string
                          example: date
                        userEnddate:
                          type: string
                          example: date
                        email:
                          type: string
                          example: string
                        cellPhone:
                          type: string
                          example: string
                        userName:
                          type: string
                          example: string
                        userProfileModel:
                          type: object
                          properties:
                            cid:
                              type: string
                              example: int
                            profileId:
                              type: string
                              example: int
                            profileName:
                              type: string
                              example: string
                            profileDescription:
                              type: string
                              example: string
                            orgId:
                              type: string
                              example: int
                            profileResponsibilities:
                              type: string
                              example: string
                            profileRequirements:
                              type: string
                              example: string
                            salaryBandMin:
                              type: string
                              example: double
                            salaryBandMax:
                              type: string
                              example: double
                            salaryBandCurrency:
                              type: string
                              example: double
                            managerProfileId:
                              type: string
                              example: int
                            managerProfileName:
                              type: string
                              example: string
                            customFieldValueModelList:
                              type: string
                              example: object
                            numberofUsers:
                              type: string
                              example: int
                            createuserid:
                              type: string
                              example: int
                            status:
                              type: string
                              example: string
                            careerPathwayModelList:
                              type: string
                              example: object
                            objectType:
                              type: string
                              example: string
                            objectName:
                              type: string
                              example: string
                            objectid:
                              type: string
                              example: int
                        departmentModel:
                          type: object
                          properties:
                            departmentId:
                              type: string
                              example: int
                            name:
                              type: string
                              example: string
                            description:
                              type: string
                              example: string
                            deptHead:
                              type: string
                              example: int
                            cid:
                              type: string
                              example: int
                            departmentCode:
                              type: string
                              example: string
                            departmentLabel:
                              type: string
                              example: string
                            parentDepartmentId:
                              type: string
                              example: int
                            parentDepartmentName:
                              type: string
                              example: string
                            deptHeadName:
                              type: string
                              example: string
                            noOfEmployees:
                              type: string
                              example: int
                            userModel:
                              type: object
                              properties:
                                userId:
                                  type: string
                                  example: int
                                firstName:
                                  type: string
                                  example: string
                                lastName:
                                  type: string
                                  example: string
                                name:
                                  type: string
                                  example: string
                                phone:
                                  type: string
                                  example: string
                                email:
                                  type: string
                                  example: string
                                status:
                                  type: string
                                  example: string
                                shortName:
                                  type: string
                                  example: string
                                thumbnail:
                                  type: string
                                  example: string
                                gender:
                                  type: string
                                  example: string
                                jobTitle:
                                  type: string
                                  example: string
                                departmentId:
                                  type: string
                                  example: int
                                locationId:
                                  type: string
                                  example: int
                                department:
                                  type: string
                                  example: string
                                location:
                                  type: string
                                  example: string
                                profileId:
                                  type: string
                                  example: int
                                timezone:
                                  type: string
                                  example: string
                                userStartdate:
                                  type: string
                                  example: date
                                userEnddate:
                                  type: string
                                  example: date
                                cellPhone:
                                  type: string
                                  example: string
                                empId:
                                  type: string
                                  example: string
                                userdateOfBirth:
                                  type: string
                                  example: date
                                allocation:
                                  type: string
                                  example: double
                                userdateFormat:
                                  type: string
                                  example: string
                                star:
                                  type: string
                                  example: int
                                imageName:
                                  type: string
                                  example: string
                                notes:
                                  type: string
                                  example: string
                                im:
                                  type: string
                                  example: string
                                createuserid:
                                  type: string
                                  example: int
                                countryId:
                                  type: string
                                  example: int
                                cid:
                                  type: string
                                  example: int
                                guid:
                                  type: string
                                  example: string
                                hasAccess:
                                  type: string
                                  example: boolean
                                displayName:
                                  type: string
                                  example: string
                                id:
                                  type: string
                                  example: int
                        prefixSalutation:
                          type: string
                          example: string
                        secondLastName:
                          type: string
                          example: string
                        middleName:
                          type: string
                          example: string
                        namePronunciation:
                          type: string
                          example: string
                        familySuffix:
                          type: string
                          example: string
                        status:
                          type: string
                          example: string
                        ptoannual:
                          type: string
                          example: float
                        ptobalance:
                          type: string
                          example: float
                        gender:
                          type: string
                          example: string
                        phone:
                          type: string
                          example: string
                        im:
                          type: string
                          example: string
                        createts:
                          type: integer
                          example: 1610359663000
                          default: 0
                        timezone:
                          type: string
                          example: string
                        practiceId:
                          type: string
                          example: int
                        imageName:
                          type: string
                          example: string
                        thumbnail:
                          type: string
                          example: string
                        profileId:
                          type: string
                          example: int
                        allocation:
                          type: string
                          example: double
                        countryId:
                          type: string
                          example: int
                        lastupdateuserid:
                          type: string
                          example: int
                        lastupdatets:
                          type: string
                          example: date
                        workingDaysSchedule:
                          type: string
                          example: string
                        userdateFormat:
                          type: string
                          example: string
                        hrPortal:
                          type: string
                          example: string
                        userDisplayName:
                          type: string
                          example: string
                        star:
                          type: string
                          example: int
                        timecardPeriodPref:
                          type: string
                          example: string
                        languagePreference:
                          type: string
                          example: string
                        tosVersion:
                          type: string
                          example: string
                        guid:
                          type: string
                          example: string
                        jobGrade:
                          type: string
                          example: string
                        paId:
                          type: string
                          example: int
                        workingDays:
                          type: string
                          example: string
                        hasAccess:
                          type: string
                          example: boolean
                        notifications:
                          type: string
                          example: boolean
                        locationModel:
                          type: object
                          properties:
                            locationId:
                              type: string
                              example: int
                            locationName:
                              type: string
                              example: string
                            cid:
                              type: string
                              example: int
                            locationDescription:
                              type: string
                              example: string
                            locationType:
                              type: string
                              example: string
                            address:
                              type: string
                              example: string
                            lattitude:
                              type: string
                              example: string
                            longitude:
                              type: string
                              example: string
                            locationUID:
                              type: string
                              example: string
                            status:
                              type: string
                              example: string
                            workingDays:
                              type: string
                              example: string
                            locationCode:
                              type: string
                              example: string
                            locationLabel:
                              type: string
                              example: string
                            parentLocationId:
                              type: string
                              example: int
                            createuserid:
                              type: string
                              example: int
                            addressModelList:
                              type: array
                              items:
                                type: object
                                properties:
                                  addressId:
                                    type: string
                                    example: int
                                  addressLine1:
                                    type: string
                                    example: string
                                  addressLine2:
                                    type: string
                                    example: string
                                  city:
                                    type: string
                                    example: string
                                  currentStatus:
                                    type: string
                                    example: string
                                  state:
                                    type: string
                                    example: string
                                  zipCode:
                                    type: string
                                    example: string
                                  createts:
                                    type: integer
                                    example: 1538742819000
                                    default: 0
                                  cid:
                                    type: string
                                    example: int
                                  userId:
                                    type: string
                                    example: int
                                  candidateId:
                                    type: string
                                    example: int
                                  addressType:
                                    type: string
                                    example: string
                                  locationId:
                                    type: string
                                    example: int
                                  contactId:
                                    type: string
                                    example: int
                                  countryId:
                                    type: string
                                    example: int
                                  countryModel:
                                    type: object
                                    properties:
                                      countryId:
                                        type: string
                                        example: int
                                      countryName:
                                        type: string
                                        example: string
                                      iso2:
                                        type: string
                                        example: string
                                  status:
                                    type: string
                                    example: string
                                  verificationStatus:
                                    type: string
                                    example: string
                                  custId:
                                    type: string
                                    example: int
                                  mapUrl:
                                    type: string
                                    example: string
                                  createUserId:
                                    type: string
                                    example: int
                                  extAppUID:
                                    type: string
                                    example: string
                                  countryid:
                                    type: string
                                    example: int
                        isView:
                          type: string
                          example: boolean
                        view:
                          type: string
                          example: boolean
                    reviewerUserModel:
                      type: object
                      properties:
                        cid:
                          type: string
                          example: int
                        empId:
                          type: string
                          example: string
                        userId:
                          type: string
                          example: int
                        position:
                          type: string
                          example: string
                        firstName:
                          type: string
                          example: string
                        shortName:
                          type: string
                          example: string
                        lastName:
                          type: string
                          example: string
                        displayFullName:
                          type: string
                          example: string
                        userStartdate:
                          type: string
                          example: date
                        email:
                          type: string
                          example: string
                        cellPhone:
                          type: string
                          example: string
                        userName:
                          type: string
                          example: string
                        departmentModel:
                          type: object
                          properties:
                            departmentId:
                              type: string
                              example: int
                            name:
                              type: string
                              example: string
                            description:
                              type: string
                              example: string
                            deptHead:
                              type: string
                              example: int
                            cid:
                              type: string
                              example: int
                            departmentCode:
                              type: string
                              example: string
                            departmentLabel:
                              type: string
                              example: string
                            parentDepartmentId:
                              type: string
                              example: int
                            parentDepartmentName:
                              type: string
                              example: string
                            deptHeadName:
                              type: string
                              example: string
                            noOfEmployees:
                              type: string
                              example: int
                            userModel:
                              type: object
                              properties:
                                userId:
                                  type: string
                                  example: int
                                firstName:
                                  type: string
                                  example: string
                                lastName:
                                  type: string
                                  example: string
                                name:
                                  type: string
                                  example: string
                                phone:
                                  type: string
                                  example: string
                                email:
                                  type: string
                                  example: string
                                status:
                                  type: string
                                  example: string
                                shortName:
                                  type: string
                                  example: string
                                thumbnail:
                                  type: string
                                  example: string
                                gender:
                                  type: string
                                  example: string
                                jobTitle:
                                  type: string
                                  example: string
                                departmentId:
                                  type: string
                                  example: int
                                locationId:
                                  type: string
                                  example: int
                                department:
                                  type: string
                                  example: string
                                location:
                                  type: string
                                  example: string
                                profileId:
                                  type: string
                                  example: int
                                profileName:
                                  type: string
                                  example: string
                                timezone:
                                  type: string
                                  example: string
                                userStartdate:
                                  type: string
                                  example: date
                                userEnddate:
                                  type: string
                                  example: date
                                cellPhone:
                                  type: string
                                  example: string
                                empId:
                                  type: string
                                  example: string
                                userdateOfBirth:
                                  type: string
                                  example: date
                                allocation:
                                  type: string
                                  example: double
                                userdateFormat:
                                  type: string
                                  example: string
                                star:
                                  type: string
                                  example: int
                                imageName:
                                  type: string
                                  example: string
                                notes:
                                  type: string
                                  example: string
                                im:
                                  type: string
                                  example: string
                                createuserid:
                                  type: string
                                  example: int
                                countryId:
                                  type: string
                                  example: int
                                cid:
                                  type: string
                                  example: int
                                guid:
                                  type: string
                                  example: string
                                hasAccess:
                                  type: string
                                  example: boolean
                                displayName:
                                  type: string
                                  example: string
                                id:
                                  type: string
                                  example: int
                        prefixSalutation:
                          type: string
                          example: string
                        middleName:
                          type: string
                          example: string
                        familySuffix:
                          type: string
                          example: string
                        status:
                          type: string
                          example: string
                        ptoannual:
                          type: string
                          example: float
                        ptobalance:
                          type: string
                          example: float
                        workerType:
                          type: string
                          example: string
                        gender:
                          type: string
                          example: string
                        phone:
                          type: string
                          example: string
                        im:
                          type: string
                          example: string
                        createts:
                          type: integer
                          example: 1521203555000
                          default: 0
                        timezone:
                          type: string
                          example: string
                        profileId:
                          type: string
                          example: int
                        allocation:
                          type: string
                          example: double
                        lastupdateuserid:
                          type: string
                          example: int
                        lastupdatets:
                          type: string
                          example: date
                        userdateFormat:
                          type: string
                          example: string
                        hrPortal:
                          type: string
                          example: string
                        userDisplayName:
                          type: string
                          example: string
                        star:
                          type: string
                          example: int
                        timecardPeriodPref:
                          type: string
                          example: string
                        tosVersion:
                          type: string
                          example: string
                        guid:
                          type: string
                          example: string
                        jobGrade:
                          type: string
                          example: string
                        calendarId:
                          type: string
                          example: int
                        workingDays:
                          type: string
                          example: string
                        hasAccess:
                          type: string
                          example: boolean
                        notifications:
                          type: string
                          example: boolean
                        locationModel:
                          type: object
                          properties:
                            locationId:
                              type: string
                              example: int
                            locationName:
                              type: string
                              example: string
                            cid:
                              type: string
                              example: int
                            locationDescription:
                              type: string
                              example: string
                            locationType:
                              type: string
                              example: string
                            address:
                              type: string
                              example: string
                            lattitude:
                              type: string
                              example: string
                            longitude:
                              type: string
                              example: string
                            locationUID:
                              type: string
                              example: string
                            status:
                              type: string
                              example: string
                            workingDays:
                              type: string
                              example: string
                            locationCode:
                              type: string
                              example: string
                            locationLabel:
                              type: string
                              example: string
                            parentLocationId:
                              type: string
                              example: int
                            createuserid:
                              type: string
                              example: int
                            addressModelList:
                              type: array
                              items:
                                type: object
                                properties:
                                  addressId:
                                    type: string
                                    example: int
                                  addressLine1:
                                    type: string
                                    example: string
                                  addressLine2:
                                    type: string
                                    example: string
                                  city:
                                    type: string
                                    example: string
                                  currentStatus:
                                    type: string
                                    example: string
                                  state:
                                    type: string
                                    example: string
                                  zipCode:
                                    type: string
                                    example: string
                                  createts:
                                    type: integer
                                    example: 1538742819000
                                    default: 0
                                  cid:
                                    type: string
                                    example: int
                                  userId:
                                    type: string
                                    example: int
                                  candidateId:
                                    type: string
                                    example: int
                                  addressType:
                                    type: string
                                    example: string
                                  locationId:
                                    type: string
                                    example: int
                                  contactId:
                                    type: string
                                    example: int
                                  countryId:
                                    type: string
                                    example: int
                                  countryModel:
                                    type: object
                                    properties:
                                      countryId:
                                        type: string
                                        example: int
                                      countryName:
                                        type: string
                                        example: string
                                      iso2:
                                        type: string
                                        example: string
                                  status:
                                    type: string
                                    example: string
                                  verificationStatus:
                                    type: string
                                    example: string
                                  custId:
                                    type: string
                                    example: int
                                  mapUrl:
                                    type: string
                                    example: string
                                  createUserId:
                                    type: string
                                    example: int
                                  extAppUID:
                                    type: string
                                    example: string
                                  countryid:
                                    type: string
                                    example: int
                        isView:
                          type: string
                          example: boolean
                        view:
                          type: string
                          example: boolean
                    goalCollaborationModel:
                      type: array
                      items:
                        type: object
                        properties:
                          collabid:
                            type: string
                            example: int
                          goalid:
                            type: string
                            example: int
                          userid:
                            type: string
                            example: int
                          extuserid:
                            type: string
                            example: int
                          cid:
                            type: string
                            example: int
                          userModel:
                            type: object
                            properties:
                              cid:
                                type: string
                                example: int
                              empId:
                                type: string
                                example: string
                              userId:
                                type: string
                                example: int
                              firstName:
                                type: string
                                example: string
                              shortName:
                                type: string
                                example: string
                              lastName:
                                type: string
                                example: string
                              displayFullName:
                                type: string
                                example: string
                              email:
                                type: string
                                example: string
                              userName:
                                type: string
                                example: string
                              userProfileModel:
                                type: object
                                properties:
                                  cid:
                                    type: string
                                    example: int
                                  profileId:
                                    type: string
                                    example: int
                                  profileName:
                                    type: string
                                    example: string
                                  profileDescription:
                                    type: string
                                    example: string
                                  orgId:
                                    type: string
                                    example: int
                                  profileResponsibilities:
                                    type: string
                                    example: string
                                  profileRequirements:
                                    type: string
                                    example: string
                                  salaryBandMin:
                                    type: string
                                    example: double
                                  salaryBandMax:
                                    type: string
                                    example: double
                                  salaryBandCurrency:
                                    type: string
                                    example: string
                                  managerProfileId:
                                    type: string
                                    example: int
                                  managerProfileName:
                                    type: string
                                    example: string
                                  customFieldValueModelList:
                                    type: string
                                    example: object
                                  numberofUsers:
                                    type: string
                                    example: int
                                  createuserid:
                                    type: string
                                    example: int
                                  status:
                                    type: string
                                    example: string
                                  careerPathwayModelList:
                                    type: string
                                    example: object
                                  objectType:
                                    type: string
                                    example: string
                                  objectName:
                                    type: string
                                    example: string
                                  objectid:
                                    type: string
                                    example: int
                              status:
                                type: string
                                example: string
                              ptoannual:
                                type: string
                                example: float
                              ptobalance:
                                type: string
                                example: float
                              gender:
                                type: string
                                example: string
                              phone:
                                type: string
                                example: string
                              createts:
                                type: integer
                                example: 1648276171000
                                default: 0
                              timezone:
                                type: string
                                example: string
                              profileId:
                                type: string
                                example: int
                              allocation:
                                type: string
                                example: double
                              lastupdatets:
                                type: string
                                example: date
                              userdateFormat:
                                type: string
                                example: string
                              hrPortal:
                                type: string
                                example: string
                              star:
                                type: string
                                example: int
                              timecardPeriodPref:
                                type: string
                                example: string
                              languagePreference:
                                type: string
                                example: string
                              guid:
                                type: string
                                example: string
                              hasAccess:
                                type: string
                                example: boolean
                              notifications:
                                type: string
                                example: boolean
                              isView:
                                type: string
                                example: boolean
                              view:
                                type: string
                                example: boolean
                          extuserModel:
                            type: string
                            example: object
                    crediteatets:
                      type: string
                      example: int
                    commentCrediteatets:
                      type: string
                      example: int
                    commentDescription:
                      type: string
                      example: string
                    uname:
                      type: string
                      example: string
                    hasGoalApprovalPermission:
                      type: string
                      example: boolean
                    begindate:
                      type: string
                      example: date
                    goalWeightage:
                      type: string
                      example: float
                    createuserid:
                      type: string
                      example: int
                    createts:
                      type: integer
                      example: 1661358176000
                      default: 0
                    projectModel:
                      type: object
                      properties:
                        projectId:
                          type: string
                          example: int
                        projectName:
                          type: string
                          example: string
                        projectDesc:
                          type: string
                          example: string
                        startdate:
                          type: string
                          example: date
                        enddate:
                          type: string
                          example: date
                        contactPerson:
                          type: string
                          example: int
                        account:
                          type: string
                          example: int
                        accountModel:
                          type: string
                          example: object
                        userModelList:
                          type: string
                          example: object
                        status:
                          type: string
                          example: string
                        createts:
                          type: integer
                          example: 1623395718000
                          default: 0
                        shortCode:
                          type: string
                          example: string
                        probability:
                          type: string
                          example: int
                        contactPersonName:
                          type: string
                          example: string
                        statusValue:
                          type: string
                          example: string
                        pgroupid:
                          type: string
                          example: int
                        puid:
                          type: string
                          example: string
                        billingType:
                          type: string
                          example: string
                        timeSheetOpenToAll:
                          type: string
                          example: int
                        userModel:
                          type: object
                          properties:
                            userId:
                              type: string
                              example: int
                            firstName:
                              type: string
                              example: string
                            lastName:
                              type: string
                              example: string
                            name:
                              type: string
                              example: string
                            phone:
                              type: string
                              example: string
                            email:
                              type: string
                              example: string
                            status:
                              type: string
                              example: string
                            shortName:
                              type: string
                              example: string
                            thumbnail:
                              type: string
                              example: string
                            gender:
                              type: string
                              example: string
                            jobTitle:
                              type: string
                              example: string
                            departmentId:
                              type: string
                              example: int
                            locationId:
                              type: string
                              example: int
                            department:
                              type: string
                              example: string
                            location:
                              type: string
                              example: string
                            profileId:
                              type: string
                              example: int
                            profileName:
                              type: string
                              example: string
                            timezone:
                              type: string
                              example: string
                            userStartdate:
                              type: string
                              example: date
                            userEnddate:
                              type: string
                              example: date
                            cellPhone:
                              type: string
                              example: string
                            empId:
                              type: string
                              example: string
                            userdateOfBirth:
                              type: string
                              example: date
                            allocation:
                              type: string
                              example: double
                            userdateFormat:
                              type: string
                              example: string
                            star:
                              type: string
                              example: int
                            imageName:
                              type: string
                              example: string
                            notes:
                              type: string
                              example: string
                            im:
                              type: string
                              example: string
                            createuserid:
                              type: string
                              example: int
                            countryId:
                              type: string
                              example: int
                            cid:
                              type: string
                              example: int
                            guid:
                              type: string
                              example: string
                            hasAccess:
                              type: string
                              example: boolean
                            displayName:
                              type: string
                              example: string
                            id:
                              type: string
                              example: int
                        projectGroupModel:
                          type: string
                          example: object
                        groupName:
                          type: string
                          example: string
                        accountName:
                          type: string
                          example: string
                        pmMail:
                          type: string
                          example: string
                        locationid:
                          type: string
                          example: int
                        reportMethod:
                          type: string
                          example: string
                        industry:
                          type: string
                          example: string
                        cid:
                          type: string
                          example: int
                        isAdmin:
                          type: string
                          example: boolean
                        createuserid:
                          type: string
                          example: int
                        lastupdateuserid:
                          type: string
                          example: int
                        admin:
                          type: string
                          example: boolean
                        projStatus:
                          type: string
                          example: string
                        projProbability:
                          type: string
                          example: int
                    goalTypeModel:
                      type: object
                      properties:
                        goalTypeId:
                          type: string
                          example: int
                        goalTypeName:
                          type: string
                          example: string
                        goalTypeDescription:
                          type: string
                          example: string
                        assessmentModel:
                          type: object
                          properties:
                            scoretemplateid:
                              type: string
                              example: int
                            cid:
                              type: string
                              example: int
                            scoreMin:
                              type: string
                              example: float
                            scoreMax:
                              type: string
                              example: float
                            scoreMaxValidation:
                              type: string
                              example: float
                            scoringInstructions:
                              type: string
                              example: string
                            scoreName:
                              type: string
                              example: string
                            allowFractional:
                              type: string
                              example: int
                            rangeModelList:
                              type: array
                              items:
                                type: object
                                properties:
                                  strangeid:
                                    type: string
                                    example: int
                                  scoreTempId:
                                    type: string
                                    example: int
                                  rangeMin:
                                    type: string
                                    example: float
                                  rangeMax:
                                    type: string
                                    example: float
                                  interpretation:
                                    type: string
                                    example: string
                                  colorCode:
                                    type: string
                                    example: string
                                  cid:
                                    type: string
                                    example: int
                                  description:
                                    type: string
                                    example: string
                            visualizationType:
                              type: string
                              example: string
                            status:
                              type: string
                              example: string
                        createts:
                          type: integer
                          example: 1593877398000
                          default: 0
                        cid:
                          type: string
                          example: int
                    parentGoalId:
                      type: string
                      example: int
                    id:
                      type: string
                      example: int
                    createUserId:
                      type: string
                      example: int
                    lastUpdateUserId:
                      type: string
                      example: int
                    projectid:
                      type: string
                      example: int
                    targetdate:
                      type: string
                      example: date
                    initialvalue:
                      type: string
                      example: double
                    currentvalue:
                      type: string
                      example: double
                    goalvalue:
                      type: string
                      example: double
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid.
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Goal not found."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Goal not found.
        deprecated: false
    /goal/:
      get:
        tags:
          - Goals
        summary: Retrieve all goals
        operationId: getGoalsUsingGET
        parameters:
          - name: userid
            in: header
            description: The API ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
      post:
        tags:
          - Goals
        summary: Create new goal
        operationId: createGoalUsingPOST
        parameters:
          - name: additive
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: begindate
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: cid
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: commentCrediteatets
            in: query
            required: false
            schema:
              type: string
          - name: commentDescription
            in: query
            required: false
            schema:
              type: string
          - name: companyGoal
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: completionRatio
            in: query
            required: false
            schema:
              type: number
              format: float
          - name: createUserId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.nanos
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: createts.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: crediteatets
            in: query
            required: false
            schema:
              type: string
              format: date-time
          - name: currentValue
            in: query
            required: false
            schema:
              type: number
              format: float
          - name: description
            in: query
            required: false
            schema:
              type: string
          - name: disposition
            in: query
            required: false
            schema:
              type: string
          - name: elapsedTimeRatio
            in: query
            required: false
            schema:
              type: number
              format: float
          - name: goalId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: goalValue
            in: query
            required: false
            schema:
              type: number
              format: float
          - name: goalWeightage
            in: query
            required: false
            schema:
              type: number
              format: float
          - name: hasGoalApprovalPermission
            in: query
            required: false
            schema:
              type: boolean
          - name: id
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: initialvalue
            in: query
            required: false
            schema:
              type: number
              format: float
          - name: isForward
            in: query
            required: false
            schema:
              type: boolean
          - name: lastUpdateUserId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: objectiveId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: parentGoalId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: progressRatio
            in: query
            required: false
            schema:
              type: number
              format: float
          - name: projectid
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: reviewUserId
            in: query
            description: reviewUserId
            required: false
            schema:
              type: integer
              format: int32
              default: 0
          - name: state
            in: query
            required: false
            schema:
              type: string
          - name: status
            in: query
            required: false
            schema:
              type: string
          - name: summary
            in: query
            required: false
            schema:
              type: string
          - name: targetDate
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: typecode
            in: query
            required: false
            schema:
              type: string
          - name: uname
            in: query
            required: false
            schema:
              type: string
          - name: units
            in: query
            required: false
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: visibleToDirectReports
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API ID of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '201':
            description: Created
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /goal/list:
      get:
        tags:
          - Goals
        summary: Retrieve goals of user
        operationId: getGoalsListUsingGET
        parameters:
          - name: userId
            in: query
            description: The ID of the user whose goals to be retrieved.
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API ID of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Successfully retrieved the goal list."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Successfully retrieved the goal list.
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /deletegoal/:
      delete:
        tags:
          - Goals
        summary: Delete Goal
        description: ''
        operationId: delete-goal
        parameters:
          - name: x-api-key
            in: header
            description: The API ID of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userId
            in: header
            required: true
            schema:
              type: integer
              format: int32
          - name: goalId
            in: query
            description: GoalId to delete a goal
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Success"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Success
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid.
          '403':
            description: '403'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "You do not have the permission to delete this goal."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: You do not have the permission to delete this goal.
          '404':
            description: '404'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Goal not found."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Goal not found.
        deprecated: false
    /invoice/:
      get:
        tags:
          - Invoice
        summary: Retrieve invoices by Project Id
        description: ''
        operationId: get-invoices-by-project-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: projectId
            in: query
            description: The ID of the project
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "invoiceId": "int",
                                  "amount": "int",
                                  "description": "string",
                                  "cid": "int",
                                  "projectid": "int",
                                  "projectModel": {
                                      "projectId": "int",
                                      "projectName": "string",
                                      "projectDesc": "string",
                                      "startDate": "string",
                                      "endDate": "string",
                                      "contactPerson": "int",
                                      "account": "int",
                                      "accountModel": "object",
                                      "userModelList": "object",
                                      "status": "string",
                                      "createts": "int",
                                      "shortCode": "string",
                                      "probability": "int",
                                      "contactPersonName": "string",
                                      "statusValue": "string",
                                      "pgroupid": "int",
                                      "puid": "int",
                                      "billingType": "string",
                                      "timeSheetOpenToAll": "int",
                                      "userModel": {
                                          "userId": "int",
                                          "firstName": "string",
                                          "lastName": "string",
                                          "name": "string",
                                          "phone": "string",
                                          "email": "string",
                                          "status": "string",
                                          "shortName": "string",
                                          "thumbnail": "string",
                                          "gender": "string",
                                          "jobTitle": "string",
                                          "departmentId": "int",
                                          "department": "string",
                                          "profileId": "int",
                                          "profileName": "string",
                                          "timezone": "string",
                                          "userStartDate": "2022-08-29",
                                          "cellPhone": "string",
                                          "empId": "string",
                                          "allocation": "int",
                                          "userDateFormat": "string",
                                          "star": "int",
                                          "imageName": "string",
                                          "notes": "string",
                                          "im": "int",
                                          "createuserid": "int",
                                          "cid": "int",
                                          "guid": "string",
                                          "hasAccess": "int",
                                          "id": "int"
                                      },
                                      "projectGroupModel": "object",
                                      "groupName": "string",
                                      "accountName": "string",
                                      "pmMail": "string",
                                      "locationid": "int",
                                      "reportMethod": "string",
                                      "industry": "string",
                                      "cid": "int",
                                      "isAdmin": "boolean",
                                      "createuserid": "int",
                                      "lastupdateuserid": "int",
                                      "projStatus": "string",
                                      "projProbability": "int",
                                      "admin": "boolean"
                                  },
                                  "status": "string",
                                  "dueDate": "string",
                                  "userModel": {
                                      "cid": "int",
                                      "empId": "string",
                                      "userId": "int",
                                      "position": "string",
                                      "firstName": "string",
                                      "shortName": "string",
                                      "lastName": "string",
                                      "displayFullName": "string",
                                      "userStartDate": "string",
                                      "email": "string",
                                      "cellPhone": "string",
                                      "userName": "string",
                                      "userProfileModel": {
                                          "cid": "int",
                                          "profileId": "int",
                                          "profileName": "string",
                                          "profileDescription": "string",
                                          "orgId": "int",
                                          "profileResponsibilities": "string",
                                          "profileRequirements": "string",
                                          "salaryBandMin": "int",
                                          "salaryBandMax": "int",
                                          "salaryBandCurrency": "string",
                                          "managerProfileId": "int",
                                          "managerProfileName": "int",
                                          "customFieldValueModelList": "object",
                                          "numberofUsers": "int",
                                          "createuserid": "int",
                                          "status": "string",
                                          "careerPathwayModelList": "object",
                                          "objectType": "string",
                                          "objectName": "string",
                                          "objectid": "int"
                                      },
                                      "departmentModel": {
                                          "departmentId": "int",
                                          "name": "string",
                                          "description": "string",
                                          "deptHead": "int",
                                          "cid": "int",
                                          "departmentCode": "string",
                                          "departmentLabel": "string",
                                          "parentDepartmentId": "int",
                                          "parentDepartmentName": "string",
                                          "deptHeadName": "string",
                                          "noOfEmployees": "int",
                                          "userModel": "object"
                                      },
                                      "prefixSalutation": "string",
                                      "secondLastName": "string",
                                      "middleName": "string",
                                      "namePronunciation": "string",
                                      "familySuffix": "string",
                                      "status": "string",
                                      "ptoannual": "int",
                                      "ptobalance": "int",
                                      "gender": "string",
                                      "phone": "string",
                                      "im": "int",
                                      "createts": "int",
                                      "timezone": "string",
                                      "practiceId": "int",
                                      "imageName": "string",
                                      "thumbnail": "string",
                                      "profileId": "int",
                                      "allocation": "int",
                                      "lastupdateuserid": "int",
                                      "lastupdatets": "string",
                                      "userDateFormat": "string",
                                      "hrPortal": "string",
                                      "userDisplayName": "string",
                                      "star": "int",
                                      "timecardPeriodPref": "string",
                                      "languagePreference": "string",
                                      "tosVersion": "string",
                                      "guid": "string",
                                      "jobGrade": "string",
                                      "hasAccess": "boolean",
                                      "notifications": "boolean",
                                      "isView": "boolean",
                                      "view": "boolean"
                                  },
                                  "invoiceLineItemModelList": "object",
                                  "beginDate": "string",
                                  "endDate": "string",
                                  "invoiceDate": "string",
                                  "currencyCode": "string",
                                  "createts": "int",
                                  "summary": "string",
                                  "accountid": "int"
                              }
                          ],
                          "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties: {}
                    message:
                      type: string
                      example: successful
          '401':
            description: '401'
            content:
              text/plain:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/jobprofiles:
      get:
        tags:
          - Job profiles
        summary: Retrieve job profiles
        description: ''
        operationId: get-job-profiles
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: status
            in: query
            description: Status of the job profile A- Active, OPEN- Open, ARCHV- Archive
            required: true
            schema:
              type: string
              enum:
                - OPEN
                - A
                - ARCHV
              default: A
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "cid": "int",
                          "profileId": "int",
                          "profileName": "string",
                          "profileDescription": "string",
                          "orgId": "int",
                          "profileResponsibilities": "string",
                          "profileRequirements": "string",
                          "salaryBandMin": "int",
                          "salaryBandMax": "int",
                          "salaryBandCurrency": "string",
                          "managerProfileId": "int",
                          "managerProfileName": "string",
                          "customFieldValueModelList": "string",
                          "numberofUsers": "int",
                          "createuserid": "int",
                          "status": "string",
                          "careerPathwayModelList": "string",
                          "objectType": "string",
                          "objectName": "string",
                          "objectid": "int"
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      cid:
                        type: string
                        example: int
                      profileId:
                        type: string
                        example: int
                      profileName:
                        type: string
                        example: string
                      profileDescription:
                        type: string
                        example: string
                      orgId:
                        type: string
                        example: int
                      profileResponsibilities:
                        type: string
                        example: string
                      profileRequirements:
                        type: string
                        example: string
                      salaryBandMin:
                        type: string
                        example: int
                      salaryBandMax:
                        type: string
                        example: int
                      salaryBandCurrency:
                        type: string
                        example: string
                      managerProfileId:
                        type: string
                        example: int
                      managerProfileName:
                        type: string
                        example: string
                      customFieldValueModelList:
                        type: string
                        example: string
                      numberofUsers:
                        type: string
                        example: int
                      createuserid:
                        type: string
                        example: int
                      status:
                        type: string
                        example: string
                      careerPathwayModelList:
                        type: string
                        example: string
                      objectType:
                        type: string
                        example: string
                      objectName:
                        type: string
                        example: string
                      objectid:
                        type: string
                        example: int
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
        deprecated: false
    /api/leave/hours/credit:
      get:
        tags:
          - Leaves
        summary: Retrieve remaining hours credit for leave policy
        operationId: getRemainingHoursCreditForLeavePolicyUsingGET
        parameters:
          - name: leaveDate
            in: query
            description: The date of the leave.
            required: true
            schema:
              type: string
              format: date
          - name: leaveId
            in: query
            description: The Id of the leave.
            required: true
            schema:
              type: integer
              format: int32
          - name: leaveUserId
            in: query
            description: The userId for that leave.
            required: true
            schema:
              type: integer
              format: int32
          - name: ptoPolicyId
            in: query
            description: The Id of the ptoPolicy
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Successful."
                      }
          '400':
            description: Bad Request
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Bad Request."
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
        deprecated: false
    /api/leaverequest:
      post:
        tags:
          - Leaves
        summary: Create a new leave.
        operationId: createLeaveRequestUsingPOST
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - date
                $ref: '#/components/schemas/LeaveModel'
          description: leaveModel
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Leave Request is created successfully."
                      }
          '400':
            description: Bad request
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Error while creating leave plan."
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
        deprecated: false
    /api/leaverequests:
      get:
        tags:
          - Leaves
        summary: Retrieve leave requests within a date range
        operationId: getLeaveListUsingGET
        parameters:
          - name: endDate
            in: query
            description: End date of the leave.
            required: true
            schema:
              type: string
              format: date
          - name: leaveUserid
            in: query
            description: The userId for that leave.
            required: false
            schema:
              type: integer
              format: int32
              default: 0
          - name: startDate
            in: query
            description: Start date of the leave.
            required: true
            schema:
              type: string
              format: date
          - name: status
            in: query
            description: |-
              The status of leave. 
               AP: Leave approved 
               WA: Leave is waiting for approval 
               RJ: Leave has been rejected 
               PAP: Leave is in a muti layer approval flow and has been partially approved 
               RCAL:  Leave was approved, taken, computed and then recalled 
            required: false
            schema:
              type: string
              default: AP
              enum:
                - AP
                - WA
                - RJ
                - PAP
                - RCAL
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "cardId": "int",
                          "userModel": {
                            "cid": "int",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartDate": "Date",
                            "email": "string",
                            "cellPhone": "",
                            "userName": "string",
                            "userProfileModel": {
                              "cid": "int",
                              "profileId": "int",
                              "profileName": "string",
                              "profileDescription": "",
                              "profileResponsibilities": "",
                              "profileRequirements": "",
                              "salaryBandMin": "int",
                              "salaryBandMax": "int",
                              "salaryBandCurrency": "",
                              "managerProfileId": null,
                              "managerProfileName": null,
                              "customFieldValueModelList": null,
                              "numberofUsers": null,
                              "createuserid": null,
                              "status": "string",
                              "careerPathwayModelList": null,
                              "objectType": "string",
                              "objectName": "string",
                              "objectid": "int"
                            },
                            "departmentModel": {
                              "departmentId": "int",
                              "name": "string",
                              "description": "string",
                              "deptHead": "int",
                              "cid": "int",
                              "departmentCode": "",
                              "departmentLabel": "string",
                              "parentDepartmentId": null,
                              "parentDepartmentName": null,
                              "deptHeadName": null,
                              "noOfEmployees": "int",
                              "userModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "gender": "string",
                                "jobTitle": "",
                                "departmentId": "int",
                                "locationId": "int",
                                "location": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "Date",
                                "userEndDate": "Date",
                                "cellPhone": "",
                                "empId": "",
                                "allocation": "int",
                                "userDateFormat": "Date",
                                "star": "int",
                                "createuserid": "int",
                                "countryId": "int",
                                "cid": "int",
                                "hasAccess": "int",
                                "userNameFormat": "string",
                                "id": "int"
                              }
                            },
                            "secondLastName": "string",
                            "middleName": "string",
                            "namePronunciation": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "ptobalance": "int",
                            "timezone": "string",
                            "practiceId": "int",
                            "profileId": "int",
                            "allocation": "int",
                            "countryId": "int",
                            "lastupdateuserid": "int",
                            "lastupdatets": "Date",
                            "userDateFormat": "Date",
                            "hrPortal": "string",
                            "userDisplayName": "string",
                            "timecardPeriodPref": "string",
                            "languagePreference": "string",
                            "paId": "int",
                            "appMenuId": "int",
                            "calWeekPref": "string",
                            "locationModel": {
                              "locationId": "int",
                              "locationName": "string",
                              "cid": "int",
                              "locationDescription": "string",
                              "locationType": "string",
                              "address": "string",
                              "locationUID": "int",
                              "status": "string",
                              "workingDays": "int",
                              "locationLabel": "string",
                              "parentLocationId": "int",
                              "createuserid": "int",
                              "addressModelList": [
                                {
                                  "addressId": "int",
                                  "addressLine1": "string",
                                  "addressLine2": "string",
                                  "city": "string",
                                  "state": "string",
                                  "zipCode": "int",
                                  "createts": "int",
                                  "cid": "int",
                                  "userId": "int",
                                  "candidateId": "int",
                                  "addressType": "int",
                                  "locationId": "int",
                                  "contactId": "int",
                                  "countryId": "int",
                                  "countryModel": {
                                    "countryId": "int",
                                    "countryName": "string",
                                  },
                                  "status": "string",
                                  "verificationStatus": "string",
                                  "custId": "int",
                                  "createUserId": "int",
                                  "countryid": "int"
                                }
                              ]
                            },
                            "azureObjectIdentifier": "string",
                            "isView": "boolean",
                            "view": "boolean"
                          },
                          "description": "strin.",
                          "date": "Date",
                          "leaveEndDate": "Date",
                          "status": "string",
                          "cid": "int",
                          "ptoPolicyModel": {
                            "ptoPolicyId": "int",
                            "cid": "int",
                            "effectiveDate": "Date",
                            "expirationDate": "Date",
                            "policyName": "string",
                            "description": "string",
                            "createUserId": "int",
                            "accrualThresholdWeeks": "int",
                            "accrualRateAnnual": "int",
                            "accrualRateHours": "int",
                            "rollOverMax": "int",
                            "applicability": "int",
                            "accrualtype": "string",
                            "accrualTimeSpan": "string",
                            "leaveYearStartDate": "Date",
                            "thresholdUnit": "string",
                            "thresholdQuantity": "int",
                            "allowRequestBeyondBal": "int",
                            "unit": "string",
                            "lastRun": "Date",
                            "nextRunDate": "Date",
                            "daysDefinition": "string",
                            "decimalDigits": "int",
                            "leastCount": "int",
                            "leaveMaxDays": "int",
                            "maxAccrual": "int",
                            "locationId": "int",
                            "orgUnitId": "int",
                            "lastupdateuserid": "int",
                            "policyNameUppercase": "string",
                            "allowToOverrideAccrualRate": true
                          },
                          "totalLeaveHours": "int",
                          "totalLeaveDays": "int",
                          "currentBalance": "int",
                          "balanceDate": "int",
                          "numberOfDays": "int",
                          "customHours": "int",
                          "ptoCalcReportId": "int",
                          "userPtoId": "int",
                          "integrationStatus": "string",
                          "source": "string",
                          "createUserViewModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "email": "string",
                            "status": "string",
                            "shortName": "string",
                            "jobTitle": "string",
                            "departmentId": "int",
                            "locationId": "int",
                            "department": "string",
                            "location": "string",
                            "profileId": "int",
                            "profileName": "string",
                            "timezone": "string",
                            "userStartDate": "Date",
                            "empId": "string",
                            "allocation": "int",
                            "userDateFormat": "Date
                            "createuserid": "int",
                            "countryId": "int",
                            "cid": "int",
                            "userNameFormat": "string",
                            "id": "int"
                          },
                          "approvalFlowId": "int",
                          "reason": "string",
                          "id": "int"
                        }
                      ]
          '400':
            description: Bad Request
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Bad Request."
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
        deprecated: false
    /api/manage/leaves:
      get:
        tags:
          - Leaves
        summary: Retrieve leaves for approval/rejection by filtering on basis of Role
        operationId: getManageLeaveListUsingGET
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [
                          {
                            "cardId": "int",
                            "userModel": {
                              "cid": "int",
                              "empId": "int",
                              "userId": "int",
                              "position": "string",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartDate": "Date",
                              "userEndDate": "Date",
                              "email": "string",
                              "cellPhone": "string",
                              "userName": "string",
                              "userProfileModel": {
                                "cid": "int",
                                "profileId": "int",
                                "profileName": "string",
                                "profileDescription": "string",
                                "orgId": "int",
                                "profileResponsibilities": "string",
                                "profileRequirements": "string",
                                "salaryBandMin": "int",
                                "salaryBandMax": "int",
                                "managerProfileId": "int",
                                "managerProfileName": "string",
                                "numberofUsers": "int",
                                "createuserid": "int",
                                "status": "string",
                                "objectType": "string",
                                "objectName": "string",
                                "objectid": "int"
                              },
                              "departmentModel": {
                                "departmentId": "int",
                                "name": "string",
                                "description": "string",
                                "deptHead": "int",
                                "cid": "int",
                                "departmentCode": "string",
                                "departmentLabel": "string",
                                "parentDepartmentId": "int",
                                "parentDepartmentName": "string",
                                "deptHeadName": "string",
                                "noOfEmployees":"int",
                                "userModel": {
                                  "userId": "int",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "int",
                                  "email": "string",
                                  "status": "stringA",
                                  "shortName": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "locationId": "int",
                                  "department": "string",
                                  "location": "string",
                                  "profileId": "int",
                                  "timezone": "string",
                                  "userStartDate": "Date",
                                  "userEndDate": "Date",
                                  "cellPhone": "int",
                                  "empId": "string",
                                  "userDateOfBirth": "Date",
                                  "allocation": "int",
                                  "notes": "string",
                                  "createuserid": "int",
                                  "countryId": "int",
                                  "cid": "int",
                                  "hasAccess": "boolean",
                                  "id": "int"
                                }
                              },
                              "prefixSalutation": "string",
                              "secondLastName": "string",
                              "middleName": "string",
                              "namePronunciation": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "ptoannual": "int",
                              "ptobalance": "int",
                              "createts": "int",
                              "timezone": "string",
                              "practiceId": "int",
                              "profileId": "int",
                              "allocation": "int",
                              "lastupdateuserid": "int",
                              "lastupdatets": "Date",
                              "userDateFormat": "Date",
                              "hrPortal": "string",
                              "userDisplayName": "string",
                              "timecardPeriodPref": "string",
                              "languagePreference": "string",
                              "userNameFormat": "string",
                              "relativeDate": "date",
                              "paId": "int",
                              "calWeekPref": "boolean",
                              "hasAccess": "boolean",
                              "notifications": "boolean",
                              "locationModel": {
                                "locationId": "int",
                                "locationName": "string",
                                "cid": "int",
                                "locationDescription": "string",
                                "locationType": "string",
                                "address": "string",
                                "locationUID": "int",
                                "status": "string",
                                "workingDays": "int",
                                "locationCode": "string",
                                "locationLabel": "string",
                                "parentLocationId": "int",
                                "createuserid": "int",
                                "addressModelList": [
                                  {
                                    "addressId": "int",
                                    "addressLine1": "string",
                                    "addressLine2": "string",
                                    "city": "string",
                                    "state": "string",
                                    "zipCode": "int",
                                    "createts": "int",
                                    "cid": "int",
                                    "userId": "int",
                                    "candidateId": "int",
                                    "addressType": "string",
                                    "locationId": "int",
                                    "contactId": "int",
                                    "countryId": "int",
                                    "countryModel": {
                                      "countryId": "int",
                                      "countryName": "string",
                                      "iso2": "string"
                                    },
                                    "status": "string",
                                    "verificationStatus": 'string",
                                    "custId": "int",
                                    "createUserId": "int",
                                    "countryCode": "string",
                                    "countryid": "int"
                                  }
                                ]
                              },
                              "azureObjectIdentifier": "string",
                              "isView": "boolean",
                              "view": "boolean"
                            },
                            "description": "string",
                            "date": "Date",
                            "leaveEndDate": "Date",
                            "status": "string",
                            "cid": "int",
                            "ptoPolicyModel": {
                              "ptoPolicyId": "int",
                              "cid": "int",
                              "effectiveDate": "Date",
                              "expirationDate": "Date",
                              "policyName": "string",
                              "description": "string",
                              "leaveType": "string",
                              "createUserId": "int",
                              "createts": "int",
                              "accrualThresholdWeeks": "int",
                              "accrualRateAnnual": "int",
                              "accrualRateHours": "int",
                              "rollOverPercentage": "int",
                              "rollOverMax": "int",
                              "accrualtype": "string",
                              "bonus": "int",
                              "bonusMax": "int",
                              "accrualTimeSpan": "string",
                              "carryoverExpirationUnit": "string",
                              "carryoverExpirationQuantity": "int",
                              "carryoverDate": "Date",
                              "leaveYearStart": "string",
                              "leaveYearStartDate": "Date",
                              "thresholdUnit": "int",
                              "thresholdQuantity": "int",
                              "isAccrued": "boolean",
                              "allowRequestBeyondBal": "boolean",
                              "unit": "string",
                              "lastRun": "Date",
                              "nextRunDate": "Date",
                              "showInCalendar": "boolean",
                              "showInTimesheet": "boolean",
                              "accrualRateAnnualUnit": "int",
                              "accrualRateUnit": "int",
                              "daysDefinition": "string",
                              "ptoPolicyChainModel": {
                                "chainId": "int",
                                "chainName": "string",
                                "chainDesc": "",
                                "createts": "int",
                                "cid": "int",
                                "hasPtoPolicies": "boolean"
                              },
                              "ptoPolicyChainSeqId": "int",
                              "tenureThreshold": "int",
                              "halfDayAllowed": "boolean",
                              "decimalDigits": "int",
                              "leastCount": "int",
                              "leaveMaxDays": "int",
                              "maxAccrual": "int",
                              "locationId": "int",
                              "orgUnitId": "int",
                              "lastupdateuserid": "int",
                              "hasAssignment": "boolean",
                              "applicableToEveryone": "boolean",
                              "policyNameUppercase": "string",
                              "allowToOverrideAccrualRate": "boolean"
                            },
                            "totalLeaveHours": "int",
                            "totalLeaveDays": "int",
                            "currentBalance": "int",
                            "balanceDate": "Date",
                            "userDisplayName": "string",
                            "isAuthorizeToAccess": "boolean",
                            "authorizeToAccess": "boolean"
                          }
                            
                        ],
                        "message": "string"
                      }
          '400':
            description: Bad Request
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Bad Request."
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something went wrong."
                      }
        deprecated: false
    /api/process/leave:
      get:
        tags:
          - Leaves
        summary: Process the leave of a user by leave Id
        operationId: processUserLeaveByIdUsingGET
        parameters:
          - name: leaveId
            in: query
            description: The Id for the leave.
            required: true
            schema:
              type: integer
              format: int32
          - name: status
            in: query
            description: |-
              The status of leave. 
               AP: Leave approved 
               WA: Leave is waiting for approval 
               RJ: Leave has been rejected 
               PAP: Leave is in a muti layer approval flow and has been partially approved 
               RCAL:  Leave was approved, taken, computed and then recalled 
            required: true
            schema:
              type: string
              default: AP
              enum:
                - AP
                - WA
                - RJ
                - PAP
                - RCAL
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Successful."
                      }
          '400':
            description: Bad Request
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Bad Request."
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
        deprecated: false
    /api/userpto/balance/add:
      post:
        tags:
          - Leaves
        summary: Add PTO balance.
        operationId: addUserPTObalancesUsingPOST
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - ptobalances
                properties:
                  ptobalances:
                    type: string
                    description: PTO Balance of user.
          description: ptoBalances
          required: true
        responses:
          '201':
            description: Created
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Userpto balance added successfully."
                      }
          '400':
            description: Bad Request
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Bad Request."
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
        deprecated: false
    /objective/:
      get:
        tags:
          - Objective
        summary: Retrieve objectives
        description: Retrieve objectives by user ID or specific objective by objective ID
        operationId: get-objectives-by-user-id-or-specific-objective-by-objective-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: UserId
            in: query
            description: ID of user
            schema:
              type: string
          - name: objectiveId
            in: query
            description: ID of Objective
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "code": 1,
                        "data": [
                          {
                            "objectiveId": "int",
                            "objective": "string",
                            "type": "string",
                            "objectiveType": "string",
                            "description": "string",
                            "beginDate": "string",
                            "targetDate": "string",
                            "leadUserId": "int",
                            "weightage": "int",
                            "status": "string",
                            "objectiveProgress": "int",
                            "cid": "int",
                            "userViewModel": {
                              "userId": "int",
                              "firstName": "string",
                              "lastName": "string",
                              "name": "string",
                              "phone": "string",
                              "email": "string",
                              "status": "string",
                              "shortName": "string",
                              "thumbnail": "string",
                              "gender": "string",
                              "jobTitle": "string",
                              "departmentId": "int",
                              "department": "string",
                              "profileId": "int",
                              "profileName": "string",
                              "timezone": "string",
                              "userStartDate": "string",
                              "cellPhone": "string",
                              "empId": "string",
                              "userDateOfBirth": "string",
                              "allocation": "int",
                              "userDateFormat": "string",
                              "star": "int",
                              "imageName": "string",
                              "notes": "string",
                              "im": "string",
                              "createuserid": "int",
                              "cid": "int",
                              "guid": "string",
                              "hasAccess":"int",
                              "id": "int"
                            },
                            "keyResultModelList": [
                              {
                                "goalId": "int",
                                "summary": "string",
                                "additive": "int",
                                "visibleToDirectReports": "int",
                                "freezeGoal": "int",
                                "isForward": "boolean",
                                "companyGoal": "string",
                                "elapsedTimeRatio": "string",
                                "completionRatio": "string",
                                "progressRatio": "string",
                                "description": "string",
                                "typecode": "string",
                                "goalsLeastStep": "int",
                                "status": "string",
                                "state": "string",
                                "predictiveIndex": "string",
                                "objectiveId": "int",
                                "cid": "int",
                                "disposition": "string",
                                "units": "string",
                                "assignedUserModel": {
                                  "cid": "int",
                                  "empId": "string",
                                  "userId": "int",
                                  "position": "string",
                                  "firstName": "string",
                                  "shortName": "string",
                                  "lastName": "string",
                                  "displayFullName": "string",
                                  "userStartDate": "string",
                                  "userEndDate": "string",
                                  "email": "string",
                                  "cellPhone": "string",
                                  "userName": "string",
                                  "userProfileModel": {
                                    "cid": "int",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "profileDescription": "string",
                                    "orgId": "int",
                                    "profileResponsibilities": "string",
                                    "profileRequirements": "string",
                                    "salaryBandMin": "int",
                                    "salaryBandMax": "int",
                                    "salaryBandCurrency": "",
                                    "managerProfileId": "int",
                                    "managerProfileName": "string",
                                    "customFieldValueModelList": "object",
                                    "numberofUsers": "int",
                                    "createuserid": "int",
                                    "status": "string",
                                    "careerPathwayModelList": "string",
                                    "objectType": "string",
                                    "objectName": "string",
                                    "objectid": "int"
                                  },
                                  "departmentModel": {
                                    "departmentId": "int",
                                    "name": "string",
                                    "description": "string",
                                    "deptHead": "int",
                                    "cid": "int",
                                    "departmentCode": "int",
                                    "departmentLabel": "string",
                                    "parentDepartmentId": "int",
                                    "parentDepartmentName": "string",
                                    "deptHeadName": "string",
                                    "noOfEmployees": "int",
                                    "userModel": {
                                      "userId": "int",
                                      "firstName": "string",
                                      "lastName": "string",
                                      "name": "string",
                                      "phone": "string",
                                      "email": "string",
                                      "status": "string",
                                      "shortName": "string",
                                      "thumbnail": "string",
                                      "gender": "string",
                                      "jobTitle": "string",
                                      "departmentId": "int",
                                      "locationId": "int",
                                      "department": "string",
                                      "location": "string",
                                      "profileId": "int",
                                      "profileName": "string",
                                      "timezone": "string",
                                      "userStartDate": "string",
                                      "userEndDate": "string",
                                      "cellPhone": "string",
                                      "empId": "string",
                                      "userDateOfBirth": "string",
                                      "allocation": "int",
                                      "userDateFormat": "string",
                                      "star": "int",
                                      "imageName": "string",
                                      "notes": "string",
                                      "im": "string",
                                      "createuserid": "int",
                                      "countryId": "int",
                                      "cid": "int",
                                      "guid": "string",
                                      "hasAccess": "int",
                                      "id": "int"
                                    }
                                  },
                                  "prefixSalutation": "string",
                                  "secondLastName": "string",
                                  "middleName": "string",
                                  "namePronunciation": "string",
                                  "familySuffix": "string",
                                  "status": "string",
                                  "ptoannual": "int",
                                  "ptobalance": "int",
                                  "gender": "string",
                                  "userDateOfBirth": "string",
                                  "phone": "string",
                                  "im": "string",
                                  "createts": "int",
                                  "timezone": "string",
                                  "practiceId": "int",
                                  "imageName": "string",
                                  "thumbnail": "string",
                                  "profileId": "int",
                                  "allocation": "int",
                                  "countryId": "int",
                                  "lastupdateuserid": "int",
                                  "lastupdatets": "string",
                                  "userDateFormat": "string",
                                  "hrPortal": "string",
                                  "userDisplayName": "string",
                                  "star": "int",
                                  "timecardPeriodPref": "string",
                                  "languagePreference": "string",
                                  "relativeDate": "string",
                                  "tosVersion": "string",
                                  "guid": "string",
                                  "jobGrade": "string",
                                  "hasAccess": "boolean",
                                  "primaryColor": "string",
                                  "secondaryColor": "string",
                                  "notifications": "boolean",
                                  "locationModel": {
                                    "locationId": "int",
                                    "locationName": "string",
                                    "cid": "int",
                                    "locationDescription": "string",
                                    "locationType": "string",
                                    "address": "string",
                                    "lattitude": "int",
                                    "longitude": "int",
                                    "locationUID": "string",
                                    "status": "string",
                                    "workingDays": "int",
                                    "locationCode": "int",
                                    "locationLabel": "string",
                                    "parentLocationId": "int",
                                    "createuserid": "int",
                                    "addressModelList": [
                                      {
                                        "addressId": "int",
                                        "addressLine1": "string",
                                        "addressLine2": "string",
                                        "city": "string",
                                        "currentStatus": "string",
                                        "state": "string",
                                        "zipCode": "string",
                                        "createts": "int",
                                        "cid": "int",
                                        "userId": "int",
                                        "candidateId": "int",
                                        "addressType": "string",
                                        "locationId": "int",
                                        "contactId": "int",
                                        "countryId": "int",
                                        "countryModel": {
                                          "countryId": "int",
                                          "countryName": "string",
                                          "iso2": "string"
                                        },
                                        "status": "int",
                                        "verificationStatus": "int",
                                        "custId": "int",
                                        "mapUrl": "string",
                                        "createUserId": "int",
                                        "extAppUID": "int",
                                        "countryCode": "int",
                                        "countryid": "int"
                                      }
                                    ]
                                  },
                                  "isView": "int",
                                  "view": "int"
                                },
                                "reviewerUserModel": {
                                  "cid": "int",
                                  "empId": "string",
                                  "userId": "int",
                                  "position": "string",
                                  "firstName": "string",
                                  "shortName": "string",
                                  "lastName": "string",
                                  "displayFullName": "string",
                                  "userStartDate": "string",
                                  "userEndDate": "string",
                                  "email": "string",
                                  "cellPhone": "string",
                                  "userName": "string",
                                  "userProfileModel": {
                                    "cid": "int",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "profileDescription": "string",
                                    "orgId": "string",
                                    "profileResponsibilities": "string",
                                    "profileRequirements": "string",
                                    "salaryBandMin": "int",
                                    "salaryBandMax": "int",
                                    "salaryBandCurrency": "",
                                    "managerProfileId": "int",
                                    "managerProfileName": "string",
                                    "customFieldValueModelList": "string",
                                    "numberofUsers": "int",
                                    "createuserid": "int",
                                    "status": "string",
                                    "careerPathwayModelList": "string",
                                    "objectType": "string",
                                    "objectName": "string",
                                    "objectid": "int"
                                  },
                                  "departmentModel": {
                                    "departmentId": "int",
                                    "name": "string",
                                    "description": "string",
                                    "deptHead": "int",
                                    "cid": "int",
                                    "departmentCode": "string",
                                    "departmentLabel": "string",
                                    "parentDepartmentId": "int",
                                    "parentDepartmentName": "string",
                                    "deptHeadName": "int",
                                    "noOfEmployees": "int",
                                    "userModel": {
                                      "userId": "int",
                                      "firstName": "string",
                                      "lastName": "string",
                                      "name": "string",
                                      "phone": "string",
                                      "email": "string",
                                      "status": "string",
                                      "shortName": "string",
                                      "thumbnail": "string",
                                      "gender": "string",
                                      "jobTitle": "string",
                                      "departmentId": "int",
                                      "locationId": "int",
                                      "department": "string",
                                      "location": "string",
                                      "profileId": "int",
                                      "profileName": "string",
                                      "timezone": "string",
                                      "userStartDate": "string",
                                      "userEndDate": "string",
                                      "cellPhone": "string",
                                      "empId": "string",
                                      "allocation": "int",
                                      "userDateFormat": "string",
                                      "star": "int",
                                      "imageName": "string",
                                      "notes": "string",
                                      "im": "string",
                                      "createuserid": "int",
                                      "countryId": "int",
                                      "cid": "int",
                                      "guid": "string",
                                      "hasAccess": "int",
                                      "calendarId": "int",
                                      "id": "int"
                                    }
                                  },
                                  "prefixSalutation": "string",
                                  "secondLastName": "string",
                                  "middleName": "pstringal",
                                  "namePronunciation": "string",
                                  "familySuffix": "string",
                                  "status": "string",
                                  "ptoannual": "int",
                                  "ptobalance": "int",
                                  "gender": "string",
                                  "userDateOfBirth": "string",
                                  "phone": "string",
                                  "im": "string",
                                  "createts": "int",
                                  "timezone": "string",
                                  "practiceId": "int",
                                  "imageName": "string",
                                  "thumbnail": "string",
                                  "profileId": "int",
                                  "allocation": "int",
                                  "countryId": "int",
                                  "lastupdateuserid": "int",
                                  "lastupdatets": "string",
                                  "userDateFormat": "string",
                                  "hrPortal": "string",
                                  "userDisplayName": "string",
                                  "star": "int",
                                  "timecardPeriodPref": "string",
                                  "languagePreference": "string",
                                  "relativeDate": "string",
                                  "tosVersion": "string",
                                  "guid": "string",
                                  "jobGrade": "string",
                                  "paId": "int",
                                  "careerPathwayId": "int",
                                  "calendarId": "int",
                                  "hasAccess": "boolean",
                                  "notifications": "boolean",
                                  "locationModel": {
                                    "locationId": "int",
                                    "locationName": "string",
                                    "cid": "int",
                                    "locationDescription": "string",
                                    "locationType": "string",
                                    "address": "string",
                                    "lattitude": "int",
                                    "longitude": "int",
                                    "locationUID": "int",
                                    "status": "string",
                                    "workingDays": "string",
                                    "locationCode": "int",
                                    "locationLabel": "string",
                                    "parentLocationId": "int",
                                    "createuserid": "int",
                                    "addressModelList": [
                                      {
                                        "addressId": "int",
                                        "addressLine1": "string",
                                        "addressLine2": "string",
                                        "city": "ludhiana",
                                        "currentStatus": "string",
                                        "state": "string",
                                        "zipCode": "int",
                                        "createts": "int",
                                        "cid": "int",
                                        "userId": "int",
                                        "candidateId": "int",
                                        "addressType": "string",
                                        "locationId": "int",
                                        "contactId": "int",
                                        "countryId": "int",
                                        "countryModel": {
                                          "countryId": "int",
                                          "countryName": "India",
                                          "iso2": "string"
                                        },
                                        "status": "string",
                                        "verificationStatus": "string",
                                        "custId": "int",
                                        "mapUrl": "string",
                                        "createUserId": "int",
                                        "extAppUID": "int",
                                        "countryCode": "int",
                                        "countryid": "int"
                                      }
                                    ]
                                  },
                                  "practiceModel": {
                                    "practiceId": "int",
                                    "name": "string",
                                    "description": "string",
                                    "practiceHead": "string",
                                    "userModel": {
                                      "userId": "int",
                                      "firstName": "string",
                                      "lastName": "string",
                                      "name": "string",
                                      "phone": "string",
                                      "email": "string",
                                      "status": "string",
                                      "shortName": "string",
                                      "thumbnail": "string",
                                      "gender": "string",
                                      "jobTitle": "string",
                                      "departmentId": "int",
                                      "locationId": "int",
                                      "department": "string",
                                      "location": "string",
                                      "profileId": "int",
                                      "profileName": "string",
                                      "timezone": "string",
                                      "userStartDate": "string",
                                      "userEndDate": "string",
                                      "cellPhone": "string",
                                      "empId": "string",
                                      "userDateOfBirth": "string",
                                      "allocation": "int",
                                      "userDateFormat": "string",
                                      "star": "int",
                                      "imageName": "string",
                                      "notes": "string",
                                      "im": "string",
                                      "createuserid": "int",
                                      "countryId": "int",
                                      "cid": "int",
                                      "guid": "string",
                                      "hasAccess": "int",
                                      "id": "int"
                                    },
                                    "createts": "string",
                                    "cid": "int"
                                  },
                                  "azureObjectIdentifier": "string",
                                  "isView": "boolean",
                                  "view": "boolean"
                                },
                                "goalCollaborationModel": [],
                                "crediteatets": "string",
                                "commentCrediteatets": "string",
                                "commentDescription": "string",
                                "uname": "string",
                                "hasGoalApprovalPermission": "string",
                                "parentGoalName": "string",
                                "beginDate": "string",
                                "goalWeightage": "int",
                                "createuserid": "int",
                                "createts": "int",
                                "projectModel": {
                                  "projectId": "int",
                                  "projectName": "string",
                                  "projectDesc": "string",
                                  "startDate": "string",
                                  "endDate": "string",
                                  "contactPerson": "int",
                                  "account": "string",
                                  "accountModel": "string",
                                  "userModelList": "string",
                                  "status": "string",
                                  "createts": "int",
                                  "shortCode": "string",
                                  "probability": "int",
                                  "contactPersonName": "string",
                                  "statusValue": "string",
                                  "pgroupid": "int",
                                  "puid": "int",
                                  "billingType": "string",
                                  "timeSheetOpenToAll": "int",
                                  "userModel": {
                                    "userId": "int",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "name": "string",
                                    "phone": "string",
                                    "email": "string",
                                    "status": "string",
                                    "shortName": "string",
                                    "thumbnail": "string",
                                    "gender": "string",
                                    "jobTitle": "string",
                                    "departmentId": "int",
                                    "locationId": "int",
                                    "department": "string",
                                    "location": "string",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "timezone": "string",
                                    "userStartDate": "string",
                                    "cellPhone": "string",
                                    "empId": "string",
                                    "allocation": "int",
                                    "userDateFormat": "string",
                                    "star": "int",
                                    "imageName": "string",
                                    "notes": "string",
                                    "im": "int",
                                    "createuserid": "int",
                                    "countryId": "int",
                                    "cid": "int",
                                    "guid": "string",
                                    "careerPathwayId": "int",
                                    "hasAccess": "int",
                                    "calendarId": "int",
                                    "id": "int"
                                  },
                                  "projectGroupModel": "string",
                                  "groupName": "string",
                                  "accountName": "string",
                                  "pmMail": "string",
                                  "locationid": "int",
                                  "reportMethod": "string",
                                  "industry": "string",
                                  "cid": "int",
                                  "isAdmin": "boolean",
                                  "createuserid": "int",
                                  "lastupdateuserid": "int",
                                  "admin": "boolean",
                                  "projStatus": "string",
                                  "projProbability": "int"
                                },
                                "goalTypeModel": "boolean",
                                "parentGoalId": "int",
                                "id": "int",
                                "createUserId": "int",
                                "projectid": "int",
                                "targetdate": "string",
                                "lastUpdateUserId": "int",
                                "begindate": "string",
                                "initialvalue": "int",
                                "currentvalue": "int",
                                "goalvalue": "int"
                              }
                            ]
                          },
                        ],
                        "message": "Successful"
                      }
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/orgrelation/orgRelationsByUser:
      get:
        tags:
          - OrgRelation
        summary: Retrieve all the OrgRelations for the given user.
        description: >-
          Retrieve all the OrgRelations for the given user including Active,
          Archive and Future OrgRelations.
        operationId: getOrgRelationsForUserUsingGET
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: employeeUserId
            in: query
            description: User Id for which org relation will be fetched.
            schema:
              type: integer
              format: int32
          - name: empId
            in: query
            description: Employee Id for which org relation will be fetched.
            schema:
              type: string
          - name: email
            in: query
            description: Email for which org relation will be fetched.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "orgRelationId": "int",
                                  "userId": "int",
                                  "managerUserId": "int",
                                  "managerEmail": "string",
                                  "userEmail": "string",
                                  "relationType": "string",
                                  "startDate": "Date",
                                  "endDate": "Date",
                                  "cid": "int",
                                  "status": "string",
                                  "positionId": "int",
                                  "otherPositionId": "int",
                                  "positionModel": "string",
                                  "otherPositionModel": "string",
                                  "reporteeUserModel": {
                                      "cid": "int",
                                      "empId": "int",
                                      "userId": "int",
                                      "position": "string",
                                      "firstName": "string",
                                      "shortName": "string",
                                      "lastName": "string",
                                      "displayFullName": "string",
                                      "userStartDate": "Date",
                                      "email": "string",
                                      "cellPhone": "int",
                                      "userName": "string",
                                      "userProfileModel": {
                                          "profileId": "int",
                                          "profileName": "string",
                                          "profileDescription": "string",
                                          "orgId": "int",
                                          "profileResponsibilities": "string",
                                          "profileRequirements": "string",
                                          "salaryBandMin": "double",
                                          "salaryBandMax": "double",
                                          "salaryBandCurrency": "int",
                                          "managerProfileId": "int",
                                          "customFieldValueModelList": "object"
                                      },
                                      "departmentModel": {
                                          "departmentId": "int",
                                          "name": "string",
                                          "description": "string",
                                          "deptHead": "string",
                                          "cid": "int",
                                          "departmentCode": "string",
                                          "departmentLabel": "string",
                                          "parentDepartmentId": "int",
                                          "parentDepartmentName": "string",
                                          "deptHeadName": "string",
                                          "noOfEmployees": "int"
                                      },
                                      "prefixSalutation": "string",
                                      "secondLastName": "string",
                                      "middleName": "string",
                                      "namePronunciation": "string",
                                      "familySuffix": "string",
                                      "status": "string",
                                      "notes": "string",
                                      "gender": "string",
                                      "phone": "int",
                                      "im": "int",
                                      "createts": "int",
                                      "allocation": "double",
                                      "countryId": "int",
                                      "userDisplayName": "string",
                                      "star": "int",
                                      "languagePreference": "string",
                                      "jobGrade": "string",
                                      "locationModel": {
                                          "locationId": "int",
                                          "locationName": "string",
                                          "locationDescription": "string",
                                          "locationType": "string",
                                          "address": "string",
                                          "lattitude": "string",
                                          "longitude": "string",
                                          "locationUID": "int",
                                          "status": "string",
                                          "workingDays": "string",
                                          "locationCode": "string",
                                          "locationLabel": "string",
                                          "parentLocationId": "int",
                                          "parentLocationName": "string",
                                          "noOfEmployees": "int"
                                      },
                                      "isView": "boolean"
                                  },
                                  "createts": "int"
                              },
                          ],
                          "message": "string"
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: >-
                      {

                      "message": "Access denied! Either Authorization or x-api-key
                      & userid parameters are not present/valid or you don't have
                      the necessary permissions"

                      }  
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "string"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: string
        deprecated: false
    /api/orgrelation/allactive:
      get:
        tags:
          - OrgRelation
        summary: Retrieve all active OrgRelations
        description: Retrieve all active OrgRelations for entire organization.
        operationId: getOrgRelationsForOrganizationUsingGET
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      "data": [
                              {
                                  "orgRelationId": "int",
                                  "userId": "int",
                                  "managerUserId": "int",
                                  "managerEmail": "string",
                                  "userEmail": "string",
                                  "relationType": "string",
                                  "startDate": "date",
                                  "endDate": "date",
                                  "cid": "int",
                                  "status": "string",
                                  "positionId": "int",
                                  "otherPositionId": "int",
                                  "positionModel": "string",
                                  "otherPositionModel": "string",
                                  "reporteeUserModel": {
                                      "cid": "int",
                                      "empId": "int",
                                      "userId": "int",
                                      "position": "string",
                                      "firstName": "string",
                                      "shortName": "string",
                                      "lastName": "string",
                                      "displayFullName": "string",
                                      "userStartDate": "date",
                                      "email": "string",
                                      "cellPhone": "int",
                                      "userName":"string",
                                      "departmentModel": {
                                          "departmentId": "int",
                                          "name": "string",
                                          "description": "string",
                                          "deptHead": "int",
                                          "cid": "int",
                                          "departmentCode": "string",
                                          "departmentLabel": "string",
                                          "parentDepartmentId": "int",
                                          "parentDepartmentName": "string",
                                          "deptHeadName": "string",
                                          "noOfEmployees": "int"
                                      },
                                      "prefixSalutation": "string",
                                      "middleName": "string",
                                      "namePronunciation": "string",
                                      "familySuffix": "string",
                                      "status": "string",
                                      "notes": "string",
                                      "gender": "string",
                                      "phone": "int",
                                      "im": "string",
                                      "createts": "int",
                                      "imageName": "string",
                                      "thumbnail": "string",
                                      "allocation": "int",
                                      "countryId": "int",
                                      "userDisplayName": "string",
                                      "star": "int",
                                      "languagePreference": "string",
                                      "jobGrade": "string",
                                      "locationModel": {
                                          "locationId": "int",
                                          "locationName": "string",
                                          "locationDescription": "string",
                                          "locationType": "string",
                                          "address": "string",
                                          "lattitude": "string",
                                          "longitude": "string",
                                          "locationUID": "string",
                                          "status": "string",
                                          "workingDays": "string",
                                          "locationCode": "string",
                                          "locationLabel": "string",
                                          "parentLocationId": "int",
                                          "parentLocationName": "string",
                                          "noOfEmployees": "int"
                                      },
                                      "isView": "boolean"
                                  },
                                  "reporterUserModel": "string",
                                  "createts": "int"
                              }
                        ],
                        "message": "string"
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: >-
                      {

                      "message": "Access denied! Either Authorization or x-api-key
                      & userid parameters are not present/valid or you don't have
                      the necessary permissions"

                      } 
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "string"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: string
        deprecated: false
    /api/orgrelation/save:
      get:
        tags:
          - OrgRelation
        summary: Saves the OrgRelation for the User
        description: Saves the OrgRelation for the User.
        operationId: savsOrgRelationForUserUsingGET
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: orgRelationId
            in: query
            description: ID of OrgRelation for which data will be saved.
            required: true
            schema:
              type: integer
              format: int32
          - name: userId
            in: query
            description: user Id to be saved.
            required: true
            schema:
              type: integer
              format: int32
          - name: managerUserId
            in: query
            description: User Id of the manager.
            required: true
            schema:
              type: integer
              format: int32
          - name: managerEmail
            in: query
            description: Email of manager.
            required: true
            schema:
              type: string
          - name: userEmail
            in: query
            description: User's email.
            schema:
              type: string
          - name: otherUserId
            in: query
            description: User Id of the reporter.
            schema:
              type: integer
              format: int32
          - name: relationType
            in: query
            description: Type of relation w.r.t manager.
            schema:
              type: string
          - name: startDate
            in: query
            description: Date of start in that org unit.
            schema:
              type: string
              format: date
          - name: enddate
            in: query
            description: Ending date in that org unit.
            schema:
              type: string
              format: date
          - name: cid
            in: query
            description: Company ID.
            schema:
              type: integer
              format: int32
          - name: status
            in: query
            description: User is active or not active.
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"Reports To added successfully."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Reports To added successfully.
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: >-
                      {

                      "message":"Access denied! Either Authorization or x-api-key
                      & userid parameters are not present/valid or you don't have
                      the necessary permissions"

                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                      "message":"failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/orgunits:
      get:
        tags:
          - Org Units
        summary: Retrieve org units
        description: ''
        operationId: retrieve-org-units
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "departmentId": "int",
                          "name": "string",
                          "description": "string",
                          "deptHead": "string",
                          "cid": "int",
                          "departmentCode": "string",
                          "departmentLabel": "string",
                          "parentDepartmentId": "int",
                          "parentDepartmentName": "string",
                          "deptHeadName": "string",
                          "noOfEmployees": "int",
                          "userModel": "model"
                        }
                      ]
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid.
        deprecated: false
    /api/orgunits/add:
      post:
        tags:
          - Org Units
        summary: Create new org unit
        description: ''
        operationId: create-a-new-org-unit
        parameters:
          - name: name
            in: query
            description: Name of the org unit.
            required: true
            schema:
              type: string
          - name: description
            in: query
            description: Description of the org unit.
            required: true
            schema:
              type: string
          - name: deptHead
            in: query
            description: The ID of the department head.
            schema:
              type: integer
              format: int32
          - name: deptHeadName
            in: query
            description: Name of the department head.
            schema:
              type: string
          - name: departmentCode
            in: query
            description: The code of the department.
            schema:
              type: string
          - name: departmentId
            in: query
            description: The ID of the department.
            schema:
              type: integer
              format: int32
          - name: departmentLabel
            in: query
            description: Label for the department.
            schema:
              type: string
          - name: noOfEmployees
            in: query
            description: Number of employees.
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: parentDepartmentId
            in: query
            description: The ID of the parent department.
            schema:
              type: integer
              format: int32
          - name: parentDepartmentName
            in: query
            description: Name of the parent department.
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: successful
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /paystub:
      get:
        tags:
          - Pay Stubs
        summary: Retrieve my pay stubs
        description: ''
        operationId: get-pay-stubs-by-user-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "code": 1,
                        "data": [
                          {
                            "payStubId": "int",
                            "payrollRunId": "int",
                            "userViewModel": {
                              "userId": "int",
                              "firstName": "string",
                              "lastName": "string",
                              "name": "string",
                              "phone": "string",
                              "email": "string",
                              "status": "string",
                              "shortName": "string",
                              "thumbnail": "string",
                              "gender": "string",
                              "jobTitle": "string",
                              "departmentId": "int",
                              "department": "string",
                              "profileId": "int",
                              "profileName": "string",
                              "timezone": "string",
                              "userStartDate": "string",
                              "cellPhone": "string",
                              "empId": "string",
                              "allocation": "int",
                              "userDateFormat": "string",
                              "star": "int",
                              "imageName": "string",
                              "notes": "string",
                              "im": "int",
                              "createuserid": "int",
                              "cid": "int",
                              "guid": "string",
                              "hasAccess": "int",
                              "id": "int"
                            },
                            "payDate": "string",
                            "totalGrossPay": "int",
                            "taxes": "int",
                            "deductions": "int",
                            "netAmount": "int",
                            "ytdNet": "int",
                            "notes": "string",
                            "memo": "string",
                            "createts": "int",
                            "createUserId": "int",
                            "cid": "int",
                            "currencyCode": "string"
                          }
                        ],
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/user/completeUserDetails:
      post:
        tags:
          - People and Permissions
        summary: Create or Update user
        description: ''
        operationId: creates-or-updates-the-user-1
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: '{"message":"User created successfully."}'
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User created successfully.
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"Please verify the data parameters' format."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Please verify the data parameters' format.
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Illegal accesss.
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"Conflict occured while creating user."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Conflict occured while creating user.
        deprecated: false
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                    description: First name of user.
                  email:
                    type: string
                    description: Mail ID of user.
                  lastName:
                    type: string
                    description: Last name of user.
                  empId:
                    type: string
                    description: Employee ID of the user.
                  gender:
                    type: string
                    description: Gender of the user.
                  guid:
                    type: string
                    description: The unique system generated ID of the user.
                  status:
                    type: string
                    description: >-
                      Status of the user. A - Active, I - Inactive, F - Future
                      Joiner
                    enum:
                      - A
                      - I
                      - F
                  displayFullName:
                    type: string
                    description: Display name of the user.
                  middleName:
                    type: string
                    description: Middle name of user.
                  secondLastName:
                    type: string
                    description: Second Last name of user.
                  shortName:
                    type: string
                    description: Short name of user.
                  namePronunciation:
                    type: string
                    description: Name Pronunciation
                  familySuffix:
                    type: string
                    description: Family Suffix
                  workerType:
                    type: string
                    description: Worker type of the user.
                  userDateOfBirth:
                    type: string
                    description: Birth date of user.
                  phone:
                    type: string
                    description: Phone number of the user.
                  cellPhone:
                    type: string
                    description: Cell phone of the user.
                  position:
                    type: integer
                    format: int32
                    description: Profile ID of the user.
                  departmentID:
                    type: integer
                    format: int32
                    description: Org Unit ID of the user.
                  locationId:
                    type: integer
                    format: int32
                    description: Location ID of the user.
                  locationName:
                    type: string
                    description: Location of user.
                  userStartDate:
                    type: string
                    description: Start Date of user.
                  reportsToEmail:
                    type: array
                    description: Managers detail of user.
                    items:
                      type: string
                  addressList:
                    type: array
                    description: Address detail of user.
                    items:
                      properties:
                        addressLine1:
                          type: string
                        addressLine2:
                          type: string
                        addressType:
                          type: string
                          enum:
                            - Billing
                            - Home
                            - Mailing
                            - Permanent
                            - Physical
                            - Work
                            - Other
                        zipCode:
                          type: string
                        city:
                          type: string
                        state:
                          type: string
                        countryId:
                          type: string
                          description: Country Identifier (should be a number id).
                        extAppUID:
                          type: string
                        countryCode:
                          type: string
                          description: Country ISO2 code.
                      type: object
                  educationList:
                    type: array
                    description: Education detail of user.
                    items:
                      properties:
                        course:
                          type: string
                          description: Name of the course.
                        degree:
                          type: string
                          description: Name of the degree.
                        institution:
                          type: string
                          description: Name of the institution.
                        gpa:
                          type: string
                        state:
                          type: string
                          description: Name of the state.
                        city:
                          type: string
                          description: Name of the city.
                        countryId:
                          type: string
                          description: Country Identifier (should be a number id).
                        countryCode:
                          type: string
                          description: Country ISO2 code.
                        startDate:
                          type: string
                          description: Start Date of the course.
                        endDate:
                          type: string
                          description: End Date of the course.
                        extAppUID:
                          type: string
                      type: object
                  contactList:
                    type: array
                    description: Contact detail of user
                    items:
                      properties:
                        name:
                          type: string
                        lastName:
                          type: string
                        relationToUser:
                          type: string
                          enum:
                            - Spouse
                            - Parent
                            - Child
                            - Other
                        contactType:
                          type: string
                          enum:
                            - DEP
                            - ECON
                            - ACCT
                        gender:
                          type: string
                          enum:
                            - M
                            - F
                            - H
                        taxNumber:
                          type: string
                        dateOfBirth:
                          type: string
                        status:
                          type: string
                          enum:
                            - AP
                            - WA
                        extAppUID:
                          type: string
                      type: object
                  financialList:
                    type: array
                    description: Financial detail of user.
                    items:
                      properties:
                        value:
                          type: number
                          format: float
                        period:
                          type: string
                          description: >-
                            Time period for compensation. HRLY - Hourly, DLY -
                            Daily, WKLY - Weekly, BWKLY - Bi-Weekly, MTHLY -
                            Monthly, BMTH - Bi-Monthly, QTRLY - Quarterly, BYRLY -
                            Bi-Yearly, YRLY - Yearly, ONEF - OneOff
                          enum:
                            - HRLY
                            - DLY
                            - WKLY
                            - BWKLY
                            - BMTH
                            - MTHLY
                            - QTRLY
                            - BYRLY
                            - YRLY
                            - ONEF
                        financialType:
                          type: string
                          enum:
                            - COMP
                        currencyCode:
                          type: string
                        effectivedate:
                          type: string
                        compensationType:
                          type: string
                          description: >-
                            Type of compensation. sal - Salary, pay -
                            Compensation, INCTV - Incentive, SVCR - Severance
                          enum:
                            - sal
                            - pay
                            - bonus
                            - INCTV
                            - SVRC
                            - other
                        status:
                          type: string
                          description: >-
                            Status of compensation. ACTV - Active, ARCHV -
                            Archive, PVNL - Provisional
                          enum:
                            - ACTV
                            - ARCHV
                            - PVNL
                        changeTypeId:
                          type: integer
                          format: int32
                        changeTypeCode:
                          type: string
                        extAppUID:
                          type: string
                      type: object
                  customFieldValues:
                    type: string
                    description: key - cfcode , value - cfvalue
                    format: json
    /api/user/:
      get:
        tags:
          - People and Permissions
        summary: Retrieve user details
        description: ''
        operationId: get-a-user-detail-with-user-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userID
            in: query
            description: ID of user
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "cid": "int",
                        "empId": "string",
                        "userId": "int",
                        "position": "string",
                        "firstName": "string",
                        "shortName": "string",
                        "lastName": "string",
                        "displayFullName": "string",
                        "userStartDate": "date",
                        "email": "string",
                        "cellPhone": "int",
                        "userName": "string",
                        "employmentModelList": [
                          {
                            "empId": "int",
                            "userId": "int",
                            "employerName": "string",
                            "position": "string",
                            "department": "string",
                            "city": "string",
                            "state": "string",
                            "startDate": "date",
                            "endDate": "date",
                            "duties": "string",
                            "recruitid": "int",
                            "countryId": "int",
                            "custAppId": "int",
                            "employmentType": "string",
                            "SOCCode": "int"
                          }
                        ],
                        "contactList": "object",
                        "educationModelList": [
                          {
                            "educationId": "int",
                            "userId": "int",
                            "degree": "string",
                            "degreeType": "string",
                            "institution": "string",
                            "institutionId": "int",
                            "degreeId": "int",
                            "city": "string",
                            "state": "string",
                            "countryId": "int",
                            "startDate": "date",
                            "endDate": "date",
                            "course": "string",
                            "cid": "int",
                            "graduation":"int",
                            "isHighest": "int",
                            "attachmentId": "int",
                            "attachmentModel": "object"
                          }
                        ],
                        "licenseModelList": "object",
                        "supervisorModelList": "object",
                        "awardModelList": "object",
                        "addressModelList": [
                          {
                            "addressId": "int",
                            "addressLine1": "string",
                            "addressLine2": "string",
                            "city": "string",
                            "currentStatus": "string",
                            "state": "string",
                            "zipCode": "string",
                            "cid": "int",
                            "userId": "int",
                            "candidateId": "int",
                            "addressType": "string",
                            "locationId": "int",
                            "countryId": "int",
                            "countryModel": {
                              "countryId": "int",
                              "countryName": "string",
                              "iso2": "string"
                            },
                            "status": "string",
                            "verificationStatus": "string",
                            "custId": "int",
                            "mapUrl": "string"
                          }
                        ],
                        "customTableModelList": "object",
                        "customFieldValueModelList": [
                          {
                            "customFieldValueId": "int",
                            "customFieldId": "int",
                            "customFieldValue": "string",
                            "customFieldObjectId": "int",
                            "cid": "int",
                            "createUserId": "int",
                            "customfieldName": "string"
                          }
                        ],
                        "prefixSalutation": "string",
                        "middleName": "string",
                        "namePronunciation": "string",
                        "familySuffix": "string",
                        "status": "string",
                        "gender": "string",
                        "phone": "int",
                        "im": "int",
                        "createts": "int",
                        "financialModelList": "object",
                        "allocation": "int",
                        "userDisplayName": "string",
                        "star": "int",
                        "languagePreference": "string",
                        "jobGrade": "string",
                        "isView": "boolean"
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/add:
      post:
        tags:
          - People and Permissions
        summary: Create user
        description: ''
        operationId: create-a-new-user
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: firstName
            description: First name of user.
            required: true
            in: query
            schema:
              type: string
          - name: email
            required: true
            description: Mail ID of user.
            in: query
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "string.",
                          "userID": "int"
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/update:
      post:
        tags:
          - People and Permissions
        summary: Update user
        description: ''
        operationId: update-user
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userId
            in: query
            description: ID of the user.
            required: true
            schema:
              type: integer
          - name: guid
            description: The unique system generated ID of the user.
            in: query
            schema:
              type: string
          - name: email
            description: Email address of the user.
            in: query
            schema:
              type: string
          - name: empId
            in: query
            description: |-
              Employee ID of the user. 
               To update the employee ID, you need admin access.
            schema:
              type: string
          - name: firstName
            in: query
            description: First name of the user.
            schema:
              type: string
          - name: middleName
            in: query
            description: Last name of the user.
            schema:
              type: string
          - name: lastName
            in: query
            description: Last name of the user.
            schema:
              type: string
          - name: secondLastName
            in: query
            description: Second last name of the user.
            schema:
              type: string
          - name: displayFullName
            in: query
            description: Display name of the user.
            schema:
              type: string
          - name: cellPhone
            in: query
            description: Cell phone of the user.
            schema:
              type: string
          - name: phone
            in: query
            description: Phone number of the user.
            schema:
              type: string
          - name: familySuffix
            in: query
            description: Family suffix of the user.
            schema:
              type: string
          - name: userDateOfBirth
            in: query
            description: Date of birth of the user.
            schema:
              type: string
              format: date
          - name: jobGrade
            in: query
            description: Job grade of the user.
            schema:
              type: string
          - name: userStartDate
            in: query
            description: Starting date of the user.
            schema:
              type: string
              format: date
          - name: userEndDate
            in: query
            description: End date of the user.
            schema:
              type: string
              format: date
          - name: gender
            in: query
            description: Gender of the user.
            schema:
              type: string
          - name: position
            in: query
            description: Position of the user.
            schema:
              type: string
          - name: profileId
            in: query
            description: Profile ID of the user.
            schema:
              type: string
          - name: shortName
            in: query
            description: Short name of the user.
            schema:
              type: string
          - name: status
            description: Status of the user.
            in: query
            schema:
              enum:
                - A
                - I
                - F
              type: string
          - name: locationName
            in: query
            description: Location of the user.
            schema:
              type: string
          - name: locationId
            description: Location ID of user location.
            in: query
            schema:
              type: string
          - name: notes
            in: query
            description: ''
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/basic:
      get:
        tags:
          - People and Permissions
        summary: Retrieve user basic information
        description: ''
        operationId: get-the-basic-information-of-user
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: email
            description: Email of user
            required: false
            in: query
            schema:
              type: string
          - name: userID
            description: ID of user
            required: true
            in: query
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "userId": "int",
                        "firstName": "string",
                        "lastName": "string",
                        "name": "string",
                        "phone": "int",
                        "email": "string",
                        "status": "string",
                        "shortName": "string",
                        "jobTitle": "string",
                        "profileId": "int",
                        "timezone": "string",
                        "userStartDate": "string",
                        "cellPhone": "int",
                        "empId": "int",
                        "allocation": "int",
                        "userDateFormat": "string",
                        "star": "int",
                        "notes": "string",
                        "im": "int",
                        "createuserid": "int",
                        "cid": "int",
                        "guid": "string",
                        "hasAccess": "int"
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/compensation/:
      get:
        tags:
          - People and Permissions
        summary: Retrieve user financial record
        description: ''
        operationId: get-financial-record-of-user
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: email
            description: Email address of the user.
            required: false
            in: query
            schema:
              type: string
          - name: userID
            description: ID of the user.
            required: true
            in: query
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "cid": "int",
                          "userId": "int",
                          "financialId": "int",
                          "value": "int",
                          "period": "string",
                          "userModel": {
                            "cid": "int",
                            "empId": "string",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "workerTypeModel": {
                              "wtid": "int",
                              "cid": "int",
                              "code": "string",
                              "description": "string",
                              "createuserid": "int"
                            },
                            "displayFullName": "string",
                            "userStartDate": "string",
                            "email": "string",
                            "cellPhone": "int",
                            "userName": "string",
                            "userProfileModel": {
                              "cid": "int",
                              "profileId": "int",
                              "profileName": "string",
                              "profileDescription": "string",
                              "orgId": "int",
                              "profileResponsibilities": "string",
                              "profileRequirements": "string",
                              "salaryBandMin": "string",
                              "salaryBandMax": "string",
                              "salaryBandCurrency": "int",
                              "managerProfileId": "int",
                              "managerProfileName": "string",
                              "customFieldValueModelList": "object",
                              "numberofUsers": "int",
                              "createuserid": "int",
                              "status": "string",
                              "careerPathwayModelList": "object",
                              "objectType": "string",
                              "objectName": "string",
                              "objectid": "int"
                            },
                            "prefixSalutation": "string",
                            "middleName": "string",
                            "namePronunciation": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "ptoannual": "int",
                            "ptobalance": "int",
                            "gender": "string",
                            "userDateOfBirth": "string",
                            "phone": "int",
                            "im": "int",
                            "createts": "int",
                            "timezone": "string",
                            "practiceId": "int",
                            "imageName": "string",
                            "thumbnail": "string",
                            "profileId": "int",
                            "allocation": "int",
                            "countryId": "int",
                            "lastupdateuserid": "int",
                            "lastupdatets": "string",
                            "userDateFormat": "string",
                            "hrPortal": "string",
                            "userDisplayName": "string",
                            "star": "int",
                            "timecardPeriodPref": "string",
                            "languagePreference": "string",
                            "tosVersion": "string",
                            "guid": "string",
                            "jobGrade": "string",
                            "careerPathwayId": "int",
                            "hasAccess": "boolean",
                            "notifications": "boolean",
                            "locationModel": {
                              "locationId": "int",
                              "locationName": "string",
                              "cid": "int",
                              "locationDescription": "string",
                              "locationType": "string",
                              "address": "string",
                              "lattitude": "int",
                              "longitude": "int",
                              "locationUID": "int",
                              "status": "string",
                              "workingDays": "int",
                              "locationCode": "IN",
                              "locationLabel": "string",
                              "parentLocationId": "int",
                              "createuserid": "int",
                              "addressModelList": [
                                {
                                  "addressId": "int",
                                  "addressLine1": "string",
                                  "addressLine2": "string",
                                  "city": "string",
                                  "currentStatus": "string",
                                  "state": "string",
                                  "zipCode": "int",
                                  "createts": "int",
                                  "cid": "int",
                                  "userId": "int",
                                  "candidateId": "int",
                                  "addressType": "string",
                                  "locationId": "int",
                                  "contactId": "int",
                                  "countryId": "int",
                                  "countryModel": {
                                    "countryId": "int",
                                    "countryName": "string",
                                    "iso2": "string"
                                  },
                                  "status": "string",
                                  "verificationStatus": "string",
                                  "custId": "int",
                                  "mapUrl": "string",
                                  "createUserId": "int",
                                  "extAppUID": "int",
                                  "countryCode": "int",
                                  "countryid": "int"
                                }
                              ]
                            },
                            "isView": "boolean",
                            "view": "boolean"
                          },
                          "financialType": "string",
                          "currencyCode": "string",
                          "notes": "string",
                          "AmountType": "string",
                          "amountChange": "int",
                          "percentageChange": "int",
                          "effectivedate": "string",
                          "createUserId": "int",
                          "enddate": "string",
                          "compensationType": "string",
                          "status": "string",
                          "createts": "int",
                          "amountType": "string"
                        }
                      ]
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/compensation/add:
      post:
        tags:
          - People and Permissions
        summary: Create compensation for user
        description: ''
        operationId: create-compensation-for-a-user
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: value
            description: Value of compensation
            required: true
            in: query
            schema:
              type: string
          - name: compensationType
            in: query
            description: |-
              Type of compensation. 
               sal - Salary, pay - , INCTV - Incentive, SVCR - Severance
            required: true
            schema:
              enum:
                - sal
                - pay
                - bonus
                - INCTV
                - SVRC
                - other
              type: string
          - name: userId
            description: ID of user
            in: query
            required: true
            schema:
              type: string
          - name: currencyCode
            in: query
            required: true
            schema:
              type: string
          - name: period
            description: |-
              Time period for compensation. 
               HRLY - Hourly, DLY - Daily, WKLY - Weekly,
               BWKLY - Bi-Weekly, MTHLY - Monthly, BMTH - Bi-Monthly, QTRLY - Quarterly, BYRLY - Bi-Yearly, YRLY - Yearly, 
               ONEF - OneOff
            in: query
            required: true
            schema:
              enum:
                - HRLY
                - DLY
                - WKLY
                - BWKLY
                - MTHLY
                - BMTH
                - QTRLY
                - BYRLY
                - YRLY
                - ONEF
              type: string
          - name: effectivedate
            required: true
            in: query
            schema:
              type: string
          - name: enddate
            in: query
            schema:
              type: string
          - name: status
            description: |-
              Status of compensation. 
               ACTV - Active, ARCHV - Archive, PVNL - Provisional
            required: true
            in: query
            schema:
              enum:
                - ACTV
                - ARCHV
                - PVNL
              type: string
          - name: notes
            in: query
            schema:
              type: string
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "GUID": "string",
                        "message": "string"
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/compensation/update:
      post:
        tags:
          - People and Permissions
        summary: Update financial record of User
        description: ''
        operationId: update-financial-record-of-user
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: guid
            in: query
            required: true
            schema:
              type: string
          - name: value
            in: query
            required: true
            schema:
              type: string
          - name: compensationType
            required: true
            description: |-
              Type of compensation. 
               sal - Salary, pay - , INCTV - Incentive, SVCR - Severance
            in: query
            schema:
              default: sal
              enum:
                - sal
                - pay
                - bonus
                - INCTV
                - SVRC
                - other
              type: string
          - name: userId
            in: query
            required: true
            schema:
              type: string
          - name: currencyCode
            required: true
            in: query
            schema:
              type: string
          - name: period
            required: true
            description: |-
              Time period for compensation. 
               HRLY - Hourly, DLY - Daily, WKLY - Weekly,
               BWKLY - Bi-Weekly, MTHLY - Monthly, BMTH - Bi-Monthly, QTRLY - Quarterly, BYRLY - Bi-Yearly, YRLY - Yearly, 
               ONEF - OneOff
            in: query
            schema:
              default: HRLY
              enum:
                - HRLY
                - DLY
                - WKLY
                - BWKLY
                - MTHLY
                - BMTH
                - QTRLY
                - BYRLY
                - YRLY
                - ONEF
              type: string
          - name: effectivedate
            in: query
            schema:
              type: string
              format: date
              pattern: YYYY-MM-DD
              example: yyyy-mm-dd
          - name: enddate
            in: query
            schema:
              type: string
              format: date
              pattern: YYYY-MM-DD
              example: yyyy-mm-dd
          - name: status
            required: true
            description: |-
              Status of compensation. 
               ACTV - Active, ARCHV - Archive, PVNL - Provisional
            in: query
            schema:
              default: ACTV
              enum:
                - ACTV
                - ARCHV
                - PVNL
              type: string
          - name: notes
            in: query
            schema:
              type: string
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "GUID": "string",
                        "message": "string."
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/list:
      get:
        tags:
          - People and Permissions
        summary: Retrieve a user or list of users
        description: ''
        operationId: get-a-user-or-list-of-users
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: name
            in: query
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "userId": "int",
                          "firstName": "string",
                          "lastName": "string",
                          "name": "string",
                          "phone": "int",
                          "email": "string",
                          "status": "string",
                          "shortName": "string",
                          "thumbnail": "string",
                          "gender": "string",
                          "jobTitle": "string",
                          "departmentId": "int",
                          "department": "string",
                          "profileId": "int",
                          "profileName": "string",
                          "timezone": "string",
                          "userStartDate": "string",
                          "cellPhone": "int",
                          "empId": "string",
                          "allocation": "int",
                          "userDateFormat": "string",
                          "star": "int",
                          "imageName": "string",
                          "notes": "string",
                          "im": "int",
                          "createuserid": "int",
                          "cid": "int",
                          "guid": "string",
                          "hasAccess": "int",
                          "id": "int"
                       }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/permissions:
      get:
        tags:
          - People and Permissions
        summary: Retrieve user permissions and menu configurations
        description: ''
        operationId: get-user-permissions-and-menu-configurations
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": {
                          "userGroupFunctionsList": [
                            "string"
                          ],
                          "appMenuModel": {
                            "appMenuId": "int",
                            "cid": "int",
                            "name": "string",
                            "defaultAppMenu": "boolean",
                            "lastUpdateUserId": "int",
                            "lastUpdateTimestamp": "int",
                            "menuPeople": "boolean",
                            "menuPeopleDirectory": "boolean",
                            "menuPeopleOrgChart": "boolean",
                            "menuPeopleAnnouncements": "boolean",
                            "menuPeopleDocLib": "boolean",
                            "menuPeopleOnboarding": "boolean",
                            "menuPeopleCalendar": "boolean",
                            "menuPeopleMyLeaves": "boolean",
                            "menuPeopleManageLeaves": "boolean",
                            "menuPeopleMyTimeCards": "boolean",
                            "menuPeopleManageTimeCards": "boolean",
                            "menuPeopleAssets": "boolean",
                            "menuPeopleOrgValues": "boolean",
                            "menuPeopleExpenseReports": "boolean",
                            "menuPerformance": "boolean",
                            "menuGoals": "boolean",
                            "menuGoalsNewGoal": "boolean",
                            "menuGoalsMyGoals": "boolean",
                            "menuGoalsMyArchivedGoals": "boolean",
                            "menuGoalsIReview": "boolean",
                            "menuGoalsICollaborateOn": "boolean",
                            "menuGoalsAllGoals": "boolean",
                            "menuGoalsCompanyGoals": "boolean",
                            "menuFeedback": "boolean",
                            "menuMyFeedback": "boolean",
                            "menuFeedbackMyTeamFeedback": "boolean",
                            "menuFeedbackAllFeedback": "boolean",
                            "menuFeedbackCompanyWall": "boolean",
                            "menuFeedbackAwards": "boolean",
                            "menuFeedbackAwardCategories": "boolean",
                            "menuFeedbackPerformanceReviewDashboard": "boolean",
                            "menuFeedbackAllPerformanceReviews": "boolean",
                            "menuFeedbackMyAssignments": "boolean",
                            "menuFeedbackPerformanceReviewTemplates": "boolean",
                            "menuFeedbackMyWall": "boolean",
                            "menuFeedbackMyPerformanceReviews": "boolean",
                            "menuFeedbackPerformanceAccelerationInterventions": "boolean",
                            "menuSkills": "boolean",
                            "menuSkillsSkillSummary": "boolean",
                            "menuSkillsSkills": "boolean",
                            "menuSkillsSkillTypes": "boolean",
                            "menuSkillsSkillMatrix": "boolean",
                            "menuSkillsTrainings": "boolean",
                            "menuSkillsMyTrainings": "boolean",
                            "menuAllocations": "boolean",
                            "menuAllocationsAccounts": "boolean",
                            "menuAllocationsProjects": "boolean",
                            "menuAllocationsUtilizationSummary": "boolean",
                            "menuAllocationsUserProjectAllocation": "boolean",
                            "menuAllocationsUnderutilizedUsers": "boolean",
                            "menuAllocationsOvercommittedUsers": "boolean",
                            "menuAllocationsAllocationForecastByUser": "boolean",
                            "menuAllocationsAllocationForecastByProject": "boolean",
                            "menuAllocationsUserForecasting": "boolean",
                            "menuAllocationsActivityLog": "boolean",
                            "menuHiring": "boolean",
                            "menuHiringDashboard": "boolean",
                            "menuHiringJobBoard": "boolean",
                            "menuHiringPositions": "boolean",
                            "menuHiringCandidates": "boolean",
                            "menuHiringResumeSearch": "boolean",
                            "menuHiringHiringTasks": "boolean",
                            "menuHiringOfferLetters": "boolean",
                            "menuHiringMyPendingApprovals": "boolean",
                            "menuHiringMyAssignments": "boolean",
                            "menuAnalytics": "boolean",
                            "menuAnalyticsReports": "boolean",
                            "menuAnalyticsDashboards": "boolean",
                            "menuOKR": "boolean",
                            "menuAllocationsRosterManagement": "boolean",
                            "menuAllocationsMyRoster": "boolean",
                            "menuOKRObjectives": "boolean"
                          }
                        },
                        "message": "string"
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/update/status:
      get:
        tags:
          - People and Permissions
        summary: Retrieve user financial status
        description: ''
        operationId: get-the-financial-status-of-a-user
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                       "code" : "int", "message": "string"
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/uploadpicture:
      post:
        tags:
          - People and Permissions
        summary: Upload user profile
        description: ' '
        operationId: upload-user-profile-picture
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                required:
                  - file
                  - userid
                properties:
                  file:
                    type: string
                    description: Upload the profile picture here.
                    format: binary
                  userid:
                    type: string
                    description: The ID of the user whose profile picture has to be updated.
        responses:
          '201':
            description: '201'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "imageName": "string",
                        "data": "You successfully uploaded file.",
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    imageName:
                      type: string
                      example: string
                    data:
                      type: string
                      example: You successfully uploaded file.
                    message:
                      type: string
                      example: successful
          '403':
            description: '403'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      { 
                       "message:" "Unauthorized" 
                       }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/users:
      get:
        tags:
          - People and Permissions
        summary: Retrieve all users details
        description: ''
        operationId: get-users-with-all-details
        parameters:
          - name: name
            in: query
            description: Name of the user.
            schema:
              type: string
          - name: page
            in: query
            description: Page number.
            schema:
              type: integer
              format: int32
              default: 1
          - name: pageSize
            in: query
            description: Number of users per page.
            schema:
              type: integer
              format: int32
              default: 20
          - name: search
            in: query
            schema:
              type: string
          - name: startDateBefore
            in: query
            description: The date before the assigned Start Date.
            schema:
              type: string
              format: date
          - name: startDateAfter
            in: query
            description: The date after the assigned Start Date.
            schema:
              type: string
              format: date
          - name: endDateBefore
            in: query
            description: The date before the assigned End Date.
            schema:
              type: string
              format: date
          - name: endDateAfter
            in: query
            description: The date after the assigned End Date.
            schema:
              type: string
              format: date
          - name: status
            in: query
            description: |-
              Status of the user. 
                A- Active User 
               I- Inactive User 
               F- Future Joiner 
            schema:
              type: string
              default: A
              enum:
                - A
                - I
                - F
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "cid": "int",
                          "userId": "int",
                          "firstName": "string",
                          "shortName": "string",
                          "lastName": "string",
                          "displayFullName": "string",
                          "userStartDate": "date",
                          "email": "string",
                          "cellPhone": "int",
                          "userName": "string",
                          "employmentModelList": "string",
                          "educationModelList": "string",
                          "licenseModelList": "int",
                          "supervisorModelList": [
                            {
                              "userId": "int",
                              "firstName": "string",
                              "empId": "int",
                              "lastName": "string",
                              "middleName": "string",
                              "email": "string",
                              "displayFullName": "string",
                              "userStartDate": "date",
                              "locationId": "int",
                              "departmentID": "int"
                            }
                          ],
                          "awardModelList": "string",
                          "addressModelList": "string",
                          "customFieldValueModelList": "string",
                          "status": "string",
                          "gender": "string",
                          "phone": "int",
                          "createts":"int",
                          "financialModelList":"string",
                          "allocation": "int",
                          "userDisplayName": "string",
                          "star": "int",
                          "isView": "string"
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      cid:
                        type: string
                        example: int
                      userId:
                        type: string
                        example: int
                      firstName:
                        type: string
                        example: string
                      shortName:
                        type: string
                        example: string
                      lastName:
                        type: string
                        example: string
                      displayFullName:
                        type: string
                        example: string
                      userStartDate:
                        type: string
                        example: date
                      email:
                        type: string
                        example: string
                      cellPhone:
                        type: string
                        example: int
                      userName:
                        type: string
                        example: string
                      employmentModelList:
                        type: string
                        example: string
                      educationModelList:
                        type: string
                        example: string
                      licenseModelList:
                        type: string
                        example: int
                      supervisorModelList:
                        type: array
                        items:
                          type: object
                          properties:
                            userId:
                              type: string
                              example: int
                            firstName:
                              type: string
                              example: string
                            empId:
                              type: string
                              description: 'The unique identity of the employee. '
                              example: int
                            lastName:
                              type: string
                              example: string
                            middleName:
                              type: string
                              example: string
                            email:
                              type: string
                              example: string
                            displayFullName:
                              type: string
                              example: string
                            userStartDate:
                              type: string
                              example: date
                            locationId:
                              type: string
                              example: int
                            departmentID:
                              type: string
                              example: int
                      awardModelList:
                        type: string
                        example: string
                      addressModelList:
                        type: string
                        example: string
                      customFieldValueModelList:
                        type: string
                        example: string
                      status:
                        type: string
                        example: string
                      gender:
                        type: string
                        example: string
                      phone:
                        type: string
                        example: int
                      createts:
                        type: string
                        example: int
                      financialModelList:
                        type: string
                        example: string
                      allocation:
                        type: string
                        example: int
                      userDisplayName:
                        type: string
                        example: string
                      star:
                        type: string
                        example: int
                      isView:
                        type: string
                        example: string
          '204':
            description: '204'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "No Content."
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/users/basic:
      get:
        tags:
          - People and Permissions
        summary: Retrieve basic user details
        description: ''
        operationId: get-users-with-basic-details
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: name
            in: query
            description: Name of the user.
            schema:
              type: string
          - name: page
            in: query
            description: Page number.
            schema:
              type: integer
              format: int32
              default: 1
          - name: pageSize
            in: query
            description: Number of users per page.
            schema:
              type: integer
              format: int32
              default: 20
          - name: search
            in: query
            schema:
              type: string
          - name: startDateBefore
            in: query
            description: The date before the assigned Start Date.
            schema:
              type: string
              format: date
          - name: startDateAfter
            in: query
            description: The date after the assigned Start Date.
            schema:
              type: string
              format: date
          - name: endDateBefore
            in: query
            description: The date before the assigned End Date.
            schema:
              type: string
              format: date
          - name: endDateAfter
            in: query
            description: The date after the assigned End Date.
            schema:
              type: string
              format: date
          - name: status
            in: query
            description: |-
              Status of the user. 
                A- Active User 
               I- Inactive User 
               F- Future Joiner 
            schema:
              type: string
              default: A
              enum:
                - A
                - I
                - F
        responses:
          '200':
            description: '200'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "userId": "int",
                          "firstName": "string",
                          "lastName": "string",
                          "name": "string",
                          "phone": "int",
                          "email": "string",
                          "status": "string",
                          "shortName": "string",
                          "timezone": "string",
                          "userStartDate": "date",
                          "cellPhone": "int",
                          "allocation": "int",
                          "userDateFormat": "date",
                          "star": "int",
                          "createuserid": "int",
                          "cid": "int",
                          "guid": "string",
                          "hasAccess": "int"
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: int
                      firstName:
                        type: string
                        example: string
                      lastName:
                        type: string
                        example: string
                      name:
                        type: string
                        example: string
                      phone:
                        type: string
                        example: int
                      email:
                        type: string
                        example: string
                      status:
                        type: string
                        example: string
                      shortName:
                        type: string
                        example: string
                      timezone:
                        type: string
                        example: string
                      userStartDate:
                        type: string
                        example: date
                      cellPhone:
                        type: string
                        example: int
                      allocation:
                        type: string
                        example: int
                      userDateFormat:
                        type: string
                        example: date
                      star:
                        type: string
                        example: int
                      createuserid:
                        type: string
                        example: int
                      cid:
                        type: string
                        example: int
                      guid:
                        type: string
                        example: string
                      hasAccess:
                        type: string
                        example: int
          '204':
            description: '204'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "No Content."
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /resource/:
      get:
        tags:
          - People and Permissions
        summary: Retrieve users
        description: ''
        operationId: get-resources
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: name
            in: query
            description: Name of the user.
            schema:
              type: string
          - name: page
            in: query
            description: Page number.
            schema:
              type: integer
              format: int32
              default: 1
          - name: pageSize
            in: query
            description: Number of users per page.
            schema:
              type: integer
              format: int32
              default: 20
          - name: sortBy
            in: query
            schema:
              type: string
          - name: sortOrder
            in: query
            description: |-
              Order to sort the users. 
               asc- Ascending Order 
               desc- Descending Order 
            schema:
              type: string
              default: asc
              enum:
                - asc
                - desc
          - name: status
            in: query
            description: |-
              Status of the user. 
                A- Active User 
               I- Inactive User 
               F- Future Joiner 
            schema:
              type: string
              default: A
              enum:
                - A
                - I
                - F
        responses:
          '200':
            description: '200'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "code": "int",
                        "data": [
                          {
                            "resourceId": "int",
                            "name": "string",
                            "position": "string",
                            "assignments": "string",
                            "allocation": "int",
                            "startDate": "int",
                            "endDate": "int",
                            "workerType": "string",
                            "location": "string",
                            "timeZone": "string",
                            "notes": "string",
                            "emailAddress": "string",
                            "phone": "int",
                            "im": "string",
                            "dateOfBirth": "int",
                            "gender": "string",
                            "imageName": "string",
                            "customFieldList": "string",
                            "department": "string",
                            "departmentLabel": "string",
                            "profileName": "string",
                            "userReporterList": {
                              "149109": "string"
                            },
                            "empId": "string"
                          }
                        ],
                        "message": "Successful"
                      }
                schema:
                  type: object
                  properties:
                    code:
                      type: string
                      example: int
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          resourceId:
                            type: string
                            example: int
                          name:
                            type: string
                            example: string
                          position:
                            type: string
                            example: string
                          assignments:
                            type: string
                            example: string
                          allocation:
                            type: string
                            example: int
                          startDate:
                            type: string
                            example: int
                          endDate:
                            type: string
                            example: int
                          workerType:
                            type: string
                            example: string
                          location:
                            type: string
                            example: string
                          timeZone:
                            type: string
                            example: string
                          notes:
                            type: string
                            example: string
                          emailAddress:
                            type: string
                            example: string
                          phone:
                            type: string
                            example: int
                          im:
                            type: string
                            example: string
                          dateOfBirth:
                            type: string
                            example: int
                          gender:
                            type: string
                            example: string
                          imageName:
                            type: string
                            example: string
                          customFieldList:
                            type: string
                            example: string
                          department:
                            type: string
                            example: string
                          departmentLabel:
                            type: string
                            example: string
                          profileName:
                            type: string
                            example: string
                          userReporterList:
                            type: object
                            properties:
                              '149109':
                                type: string
                                example: string
                          empId:
                            type: string
                            description: 'The unique identity of the employee. '
                            example: string
                    message:
                      type: string
                      example: Successful
          '409':
            description: '409'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/address/save:
      post:
        tags:
          - People and Permissions
        summary: Save User Address
        description: ''
        operationId: save-user-addresses
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userID
            in: query
            required: true
            description: The ID of the user.
            schema:
              type: integer
              format: int32
          - name: empId
            in: query
            description: 'The unique identity of the employee. '
            schema:
              type: string
          - name: email
            in: query
            description: Email address of the user.
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  RAW_BODY:
                    type: array
                    items:
                      properties:
                        addressLine1:
                          type: string
                        addressLine2:
                          type: string
                        addressType:
                          type: string
                        zipCode:
                          type: string
                          default: '121121'
                        city:
                          type: string
                        countryId:
                          type: string
                          description: Country Idenifier (should be a number id).
                        state:
                          type: string
                      type: object
        responses:
          '201':
            description: '201'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Address details saved successfully."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Address details saved successfully.
          '401':
            description: '401'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Please fill the correct details"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/education/save:
      post:
        tags:
          - People and Permissions
        summary: Save User Education
        description: ''
        operationId: save-user-educations
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userID
            in: query
            required: true
            description: The ID of the user.
            schema:
              type: integer
              format: int32
          - name: empId
            in: query
            description: 'The unique identity of the employee. '
            schema:
              type: string
          - name: email
            in: query
            description: Email address of the user.
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  RAW_BODY:
                    type: array
                    items:
                      properties:
                        course:
                          description: Name of the course.
                          type: string
                          example: Business Administration and Management
                        degree:
                          type: string
                          description: Name of the degree.
                          format: string
                          example: Bachelor of Liberal Arts (A.L.B.)
                        institution:
                          type: string
                          description: Name of the institution.
                          example: Harvard University
                        gpa:
                          type: string
                          example: '98.5'
                        state:
                          type: string
                          description: Name of the state.
                          example: Massachusetts
                        city:
                          type: string
                          description: Name of the city.
                          example: Cambridge
                        countryId:
                          type: integer
                          format: int32
                          example: ' '
                          description: Country Idenifier (should be a number id).
                        startDate:
                          type: string
                          description: Start Date of the course.
                          format: date
                        endDate:
                          type: string
                          description: End Date of the course.
                          format: date
                      type: object
        responses:
          '201':
            description: '201'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Education details saved successfully."
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Please fill the correct details"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/employment/save:
      post:
        tags:
          - People and Permissions
        summary: Save User Employment
        description: ''
        operationId: save-user-employments
        parameters:
          - name: userID
            in: query
            required: true
            description: The ID of the user.
            schema:
              type: integer
              format: int32
          - name: empId
            in: query
            description: 'The unique identity of the employee. '
            schema:
              type: string
          - name: email
            in: query
            description: Email address of the user.
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  RAW_BODY:
                    type: array
                    items:
                      properties:
                        employerName:
                          type: string
                          description: Name of the employer.
                        position:
                          type: string
                          description: Position of the employer.
                        department:
                          type: string
                          description: Department of the employer.
                        state:
                          type: string
                          description: State of the employer.
                        startDate:
                          type: string
                          format: date
                          description: Start Date of the employment.
                        endDate:
                          type: string
                          format: date
                          description: End Date of the employment.
                        city:
                          type: string
                          description: City of the employer.
                        countryId:
                          type: string
                          description: Country Idenifier (should be a number id).
                      type: object
        responses:
          '201':
            description: '201'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Employment details saved successfully."
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Please fill the correct details"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/orgrelation/add:
      post:
        tags:
          - People and Permissions
        summary: Add reports to
        description: ''
        operationId: org-relation-api
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userID
            in: query
            required: true
            description: The ID of the user.
            schema:
              type: integer
              format: int32
          - name: empId
            in: query
            description: 'The unique identity of the employee. '
            schema:
              type: string
          - name: email
            in: query
            description: Email address of the user.
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  Add Objects:
                    type: array
                    items:
                      properties:
                        adpAssociateOID:
                          type: string
                        managerId:
                          type: integer
                          format: int32
                        relationType:
                          type: string
                        startDate:
                          type: string
                          format: date
                        endDate:
                          type: string
                          format: date
                      type: object
        responses:
          '201':
            description: '201'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Reports To added successfully."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Reports To added successfully.
          '401':
            description: '401'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Please fill the correct details"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/saveCustomFieldValues:
      post:
        tags:
          - People and Permissions
        summary: Save Custom Field values
        description: Save Custom Field values
        operationId: saveCustomFieldValues
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: string
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userID
            in: query
            description: The ID of the user
            required: true
            schema:
              type: number
          - name: empId
            in: query
            description: The unique identity of the employee.
            required: false
            schema:
              type: string
          - name: guid
            in: query
            description: The unique system generated ID of the user.
            required: false
            schema:
              type: string
          - name: email
            in: query
            description: Email address of the user.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Custom Field details saved successfully."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Custom Field details saved successfully.
          '201':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '400':
            description: '400'
            content:
              '*/*':
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
        requestBody:
          $ref: '#/components/requestBodies/arrayCustomFields'
    /api/user/address/delete:
      post:
        tags:
          - People and Permissions
        summary: Delete User Address
        description: ''
        operationId: delete-user-address
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: addressId
            in: query
            description: The unique ID of the address.
            required: true
            schema:
              type: string
        responses:
          '201':
            description: '201'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "User Address deleted successfully."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User Address deleted successfully.
          '401':
            description: '401'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Please fill the correct details"
                      }
                schema:
                  type: object
                  properties: {}
          '404':
            description: '404'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "User employment details not found."
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/user/employment/delete:
      post:
        tags:
          - People and Permissions
        summary: Deletes User Employment
        description: ''
        operationId: deletes-user-employment-details
        parameters:
          - name: empid
            in: query
            description: 'The unique identity of the employee. '
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '201':
            description: '201'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "User Employment deleted successfully."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User Employment deleted successfully.
          '401':
            description: '401'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Please fill the correct details."
                      }
                schema:
                  type: object
                  properties: {}
          '404':
            description: '404'
            content:
              '*/*':
                examples:
                  Result:
                    value: |-
                      {
                        "message": "User employment details not found."
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /user/education/delete:
      post:
        tags:
          - People and Permissions
        summary: Delete User Education
        description: ''
        operationId: delete-user-education
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: educationId
            in: query
            description: Education ID the user
            required: true
            schema:
              type: string
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "string"
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"Unauthorized\"\n}"
                schema:
                  type: object
                  properties: {}
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "User address not found."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "failure"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /appraisal/user:
      get:
        tags:
          - Performance Review
        summary: Retrieve Performance Reviews
        description: ''
        operationId: get-performance-reviews-for-a-given-user
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: string
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "code": 1,
                        "data": [
                          {
                            "appraisalId": "int",
                            "appraisalName": "string",
                            "description": "string",
                            "userModel": {
                              "cid": "int",
                              "userId": "int",
                              "position": "string",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartDate": "string",
                              "email": "string",
                              "cellPhone": "string",
                              "userName": "string",
                              "userProfileModel": {
                                "cid": "int",
                                "profileId": "int",
                                "profileName": "string",
                                "profileDescription": "string",
                                "orgId": "int",
                                "profileResponsibilities": "string",
                                "profileRequirements": "string",
                                "salaryBandMin": "int",
                                "salaryBandMax": "int",
                                "salaryBandCurrency": "string",
                                "managerProfileId": "int",
                                "managerProfileName": "string",
                                "customFieldValueModelList": "object",
                                "numberofUsers": "int",
                                "createuserid": "int",
                                "status": "string",
                                "careerPathwayModelList": "object",
                                "objectType": "string",
                                "objectName": "string",
                                "objectid": "int"
                              },
                              "departmentModel": {
                                "departmentId": "int",
                                "name": "string",
                                "description": "string",
                                "deptHead": "int",
                                "cid": "int",
                                "departmentCode": "string",
                                "departmentLabel": "string",
                                "parentDepartmentId": "int",
                                "parentDepartmentName": "string",
                                "deptHeadName": "string",
                                "noOfEmployees": "int",
                                "userModel": "object"
                              },
                              "prefixSalutation": "string",
                              "secondLastName": "string",
                              "middleName": "string",
                              "namePronunciation": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "ptoannual":"int",
                              "ptobalance": "int",
                              "gender": "string",
                              "phone": "string",
                              "im": "int",
                              "createts": "int",
                              "timezone": "string",
                              "practiceId": "int",
                              "imageName": "string",
                              "thumbnail": "string",
                              "profileId": "int",
                              "allocation": "int",
                              "lastupdateuserid": "int",
                              "lastupdatets": "string",
                              "userDateFormat": "string",
                              "hrPortal": "string",
                              "userDisplayName": "string",
                              "star": "int",
                              "timecardPeriodPref": "string",
                              "languagePreference": "string",
                              "tosVersion": "string",
                              "guid": "string",
                              "jobGrade": "string",
                              "hasAccess": "boolean",
                              "primaryColor": "string",
                              "secondaryColor": "string",
                              "notifications": "boolean",
                              "isView": "boolean",
                              "view": "boolean"
                            },
                            "startDate": "string",
                            "endDate": "string",
                            "managerId": "int",
                            "managerUserModel": "object",
                            "statusCode": "string",
                            "cid": "int",
                            "appraisalType": "string",
                            "userId": "int",
                            "candidatePositionId": "int",
                            "reviewMode": "string",
                            "workflowId": "int",
                            "finalComment": "string",
                            "createUserId": "int",
                            "createUserModel": {
                              "cid": "int",
                              "empId": "int",
                              "userId": "int",
                              "position": "string",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartDate": "string",
                              "userEndDate": "string",
                              "email": "string",
                              "cellPhone": "string",
                              "userName": "string",
                              "userProfileModel": {
                                "cid": "int",
                                "profileId": "int",
                                "profileName": "string",
                                "profileDescription": "string",
                                "orgId": "int",
                                "profileResponsibilities": "string",
                                "profileRequirements": "string",
                                "salaryBandMin": "int",
                                "salaryBandMax": "int",
                                "salaryBandCurrency": "string",
                                "managerProfileId": "string",
                                "managerProfileName": "string",
                                "customFieldValueModelList": "string",
                                "numberofUsers": "int",
                                "createuserid": "int",
                                "status": "string",
                                "careerPathwayModelList": "object",
                                "objectType": "string",
                                "objectName": "string",
                                "objectid": "int"
                              },
                              "departmentModel": {
                                "departmentId": "int",
                                "name": "string",
                                "description": "string",
                                "deptHead": "int",
                                "cid": "int",
                                "departmentCode": "string",
                                "departmentLabel": "string",
                                "parentDepartmentId": "int",
                                "parentDepartmentName": "string",
                                "deptHeadName": "string",
                                "noOfEmployees":"int",
                                "userModel": {
                                  "userId": "string",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "string",
                                  "email": "string",
                                  "status": "string",
                                  "shortName": "string",
                                  "thumbnail": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "locationId": "int",
                                  "department": "string",
                                  "location": "string",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "timezone": "string",
                                  "userStartDate": "string",
                                  "userEndDate": "string",
                                  "cellPhone": "int",
                                  "empId": "string",
                                  "allocation": "int",
                                  "userDateFormat": "string",
                                  "star": "int",
                                  "imageName": "string",
                                  "notes": "string",
                                  "im": "int",
                                  "createuserid": "int",
                                  "countryId": "int",
                                  "cid": "int",
                                  "guid": "string",
                                  "hasAccess": "int",
                                  "calendarId": "int",
                                  "id": "int"
                                }
                              },
                              "prefixSalutation": "string",
                              "secondLastName": "string",
                              "middleName": "string",
                              "namePronunciation": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "ptoannual": "int",
                              "ptobalance": "int",
                              "gender": "string",
                              "userDateOfBirth": "string",
                              "phone": "string",
                              "im": "int",
                              "createts": "int",
                              "timezone": "string",
                              "practiceId": "int",
                              "imageName": "string",
                              "thumbnail": "string",
                              "profileId": "int",
                              "allocation": "int",
                              "countryId": "int",
                              "lastupdateuserid": "int",
                              "lastupdatets": "string",
                              "userDateFormat": "string",
                              "hrPortal": "string",
                              "userDisplayName": "string",
                              "star": "int",
                              "timecardPeriodPref": "string",
                              "languagePreference": "string",
                              "relativeDate": "string",
                              "tosVersion": "string",
                              "guid": "string",
                              "jobGrade": "string",
                              "paId": "int",
                              "careerPathwayId": "int",
                              "calendarId": "int",
                              "hasAccess": "boolean",
                              "notifications": "boolean",
                              "locationModel": {
                                "locationId": "int",
                                "locationName": "string",
                                "cid": "int",
                                "locationDescription": "string",
                                "locationType": "string",
                                "address": "string",
                                "lattitude": "int",
                                "longitude": "int",
                                "locationUID": "int",
                                "status": "string",
                                "workingDays": "int",
                                "locationCode": "int",
                                "locationLabel": "string",
                                "parentLocationId": "int",
                                "createuserid": "int",
                                "addressModelList": [
                                  {
                                    "addressId": "int",
                                    "addressLine1": "string",
                                    "addressLine2": "string",
                                    "city": "string",
                                    "currentStatus": "string",
                                    "state": "string",
                                    "zipCode": "int",
                                    "createts": "int",
                                    "cid": "int",
                                    "userId": "int",
                                    "candidateId": "int",
                                    "addressType": "string",
                                    "locationId": "int",
                                    "contactId": "int",
                                    "countryId": "int",
                                    "countryModel": {
                                      "countryId": "int",
                                      "countryName": "string",
                                      "iso2": "string"
                                    },
                                    "status": "string",
                                    "verificationStatus": "string",
                                    "custId": "int",
                                    "mapUrl": "string",
                                    "createUserId": "int",
                                    "extAppUID": "int",
                                    "countryCode": "int",
                                    "countryid": "int"
                                  }
                                ]
                              },
                              "practiceModel": {
                                "practiceId": "int",
                                "name": "string",
                                "description": "string",
                                "practiceHead": "int",
                                "userModel": {
                                  "userId": "int",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "string",
                                  "email": "string",
                                  "status": "string",
                                  "shortName": "string",
                                  "thumbnail": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "locationId": "int",
                                  "department": "string",
                                  "location": "string",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "timezone": "string",
                                  "userStartDate": "string",
                                  "cellPhone": "string",
                                  "empId": "string",
                                  "allocation": "int",
                                  "userDateFormat": "string",
                                  "star": "int",
                                  "imageName": "string",
                                  "notes": "string",
                                  "im":"string",
                                  "createuserid": "int",
                                  "countryId": "int",
                                  "cid": "int",
                                  "guid": "string",
                                  "hasAccess": "int",
                                  "calendarId": "int",
                                  "userNameFormat": "string",
                                  "id": "int"
                                },
                                "createts": "int",
                                "cid": "int"
                              },
                              "calendarModel": {
                                "calendarId": "int",
                                "name": "string",
                                "colorCode": "string",
                                "cid": "int",
                                "createUserId": "int",
                                "createts": "int",
                                "createUserViewModel": {
                                  "userId": "int",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "string",
                                  "email": "string",
                                  "status": "string",
                                  "shortName": "string",
                                  "thumbnail": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "locationId": "int",
                                  "department": "string",
                                  "location": "string",
                                  "profileId": "int",
                                  "timezone": "string",
                                  "userStartDate": "string",
                                  "cellPhone": "string",
                                  "empId": "string",
                                  "userDateOfBirth": "string",
                                  "allocation": "int",
                                  "userDateFormat": "string",
                                  "star": "int",
                                  "imageName": "string",
                                  "notes": "string",
                                  "im": "string",
                                  "createuserid": "int",
                                  "countryId": "int",
                                  "cid": "int",
                                  "guid": "string",
                                  "hasAccess":"int",
                                  "userNameFormat": "string",
                                  "id": "int"
                                }
                              },
                              "azureObjectIdentifier": "string",
                              "isView": "boolean",
                              "view": "boolean"
                            },
                            "finalValue": "string",
                            "obtype": "string",
                            "createts": "string",
                            "status": "string",
                            "preFinalValue": "int",
                            "preFinalComment": "string",
                            "finalValueStr": "string",
                            "preFinalValueStr": "string",
                            "showFinalValue": "int",
                            "showWeightedTotal": "string",
                            "userViewModel": {
                              "userId": "int",
                              "firstName": "string",
                              "lastName": "string",
                              "name": "string",
                              "phone": "string",
                              "email": "string",
                              "status": "string",
                              "shortName": "string",
                              "thumbnail": "string",
                              "gender": "string",
                              "jobTitle": "string",
                              "departmentId": "int",
                              "department": "string",
                              "profileId": "int",
                              "profileName": "string",
                              "timezone": "string",
                              "userStartDate": "string",
                              "cellPhone": "int",
                              "allocation": "int",
                              "userDateFormat": "string",
                              "star": "int",
                              "imageName": "string",
                              "notes": "string",
                              "im": "int",
                              "createuserid": "int",
                              "cid": "int",
                              "guid": "string",
                              "hasAccess": "int",
                              "id": "int"
                            },
                            "scoreTemplateId": "int",
                            "scoreTemplateModel": {
                              "scoretemplateid": "int",
                              "cid": "int",
                              "scoreMin": "int",
                              "scoreMax": "int",
                              "scoreMaxValidation": "string",
                              "scoringInstructions": "string",
                              "scoreName": "string",
                              "allowFractional": "int",
                              "rangeModelList": [
                                {
                                  "strangeid": "int",
                                  "scoreTempId": "int",
                                  "rangeMin": "int",
                                  "rangeMax": "int",
                                  "interpretation": "string",
                                  "colorCode": "string",
                                  "cid": "int",
                                  "description": "string"
                                }
                              ],
                              "visualizationType": "string",
                              "status": "string"
                            },
                            "saveForLater": "string",
                            "completionDate": "string",
                            "appraisalGroupId": "int",
                            "dynaFormId": "int",
                            "formAssignmentUrl": "string",
                            "signatureFlowLibraryId": "int",
                            "appraisalTemplateId": "int",
                            "isLocked": "int"
                          },  
                        ],
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties: {}
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "The requested resource is not available."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /appraisal/template/list:
      get:
        tags:
          - Performance Review
        summary: Retrieve Performance Review Templates
        description: ''
        operationId: get-performance-review-templates
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: string
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [
                          {
                            "appraisalTemplateId": "int",
                            "name": "string",
                            "description": "string",
                            "userId": "int",
                            "startDate": "string",
                            "endDate": "string",
                            "cid": "int",
                            "managerId": "int",
                            "appraisalType": "string",
                            "obType": "string",
                            "createUserId": "int",
                            "contributorId": "int",
                            "scoreTemplateId": "int",
                            "signatureFlowLibraryId": "int",
                            "status": "string",
                            "processTemplateId": "int"
                          }
                        ],
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties: {}
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "The requested resource is not available."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /appraisal/add:
      post:
        tags:
          - Performance Review
        summary: Create Performance Review
        description: ''
        operationId: create-a-new-performance-review
        parameters:
          - name: userId
            in: query
            description: The ID of the user.
            required: true
            schema:
              type: integer
              format: int32
          - name: templateId
            in: query
            description: The ID of the performance review template.
            required: true
            schema:
              type: integer
              format: int32
          - name: StartDate
            in: query
            description: Start Date of the performance review.
            schema:
              type: string
              format: date
              example: '2022-10-02'
          - name: EndDate
            in: query
            description: End Date of the performance review.
            schema:
              type: string
              format: date
              example: '2022-10-02'
          - name: AppraisalType
            in: query
            description: Review Period
            schema:
              type: string
              default: Annual
              enum:
                - Annual
                - Mid-Year
                - Quarterly
                - Probation
                - Other
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "appraisalId": "int",
                          "message": "Performance review created successfully."
                      }
                schema:
                  type: object
                  properties:
                    appraisalId:
                      type: string
                      example: int
                    message:
                      type: string
                      example: Performance review created successfully.
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Please verify the data parameters' format."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /appraisal/getCompletedReviews:
      get:
        tags:
          - Performance Review
        summary: Retrieve Completed Performance Reviews
        description: ''
        operationId: get-completed-performance-reviews-based-on-user-id
        parameters:
          - name: targetUserId
            in: query
            description: The ID of the user.
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "appraisalId": "int",
                                  "appraisalName": "string",
                                  "description": "string",
                                  "userModel": {
                                      "cid": "int",
                                      "empId": "string",
                                      "userId": "int",
                                      "position": "string",
                                      "firstName": "string",
                                      "shortName": "string",
                                      "lastName": "string",
                                      "displayFullName": "string",
                                      "userStartDate": "int",
                                      "userEndDate": "int",
                                      "email": "string",
                                      "cellPhone": "int",
                                      "userName": "string",
                                      "userProfileModel": {
                                          "cid": "int",
                                          "profileId": "int",
                                          "profileName": "string",
                                          "profileDescription": "string",
                                          "orgId": "int",
                                          "profileResponsibilities": "string",
                                          "profileRequirements": "string",
                                          "salaryBandMin": "int",
                                          "salaryBandMax": "int",
                                          "salaryBandCurrency": "int",
                                          "managerProfileId": "int",
                                          "managerProfileName": "string",
                                          "customFieldValueModelList": "string",
                                          "numberofUsers": "int",
                                          "createuserid": "int",
                                          "status": "string",
                                          "careerPathwayModelList": "string",
                                          "objectType": "string",
                                          "objectName": "string",
                                          "objectid": "int"
                                      },
                                      "departmentModel": {
                                          "departmentId": "int",
                                          "name": "string",
                                          "description": "string",
                                          "deptHead": "int",
                                          "cid": "int",
                                          "departmentCode": "int",
                                          "departmentLabel": "string",
                                          "parentDepartmentId": "int",
                                          "parentDepartmentName": "string",
                                          "deptHeadName": "string",
                                          "noOfEmployees": "int",
                                          "userModel": {
                                              "userId": "int",
                                              "firstName": "string",
                                              "lastName": "string",
                                              "name": "string",
                                              "phone": "int",
                                              "email": "string",
                                              "status": "string",
                                              "shortName": "string",
                                              "gender": "string",
                                              "jobTitle": "string",
                                              "locationId": "int",
                                              "location": "string",
                                              "profileId": "int",
                                              "profileName": "string",
                                              "timezone": "string",
                                              "userStartDate": "int",
                                              "userEndDate": "int",
                                              "cellPhone": "int",
                                              "empId": "string",
                                              "userDateOfBirth": "int",
                                              "allocation": "int",
                                              "userDateFormat": "int",
                                              "star": "int",
                                              "notes": "string",
                                              "im": "string",
                                              "createuserid": "int",
                                              "countryId": "int",
                                              "cid": "int",
                                              "guid": "string",
                                              "hasAccess": "int",
                                              "id": "int"
                                          }
                                      },
                                      "prefixSalutation": "string",
                                      "secondLastName": "string",
                                      "middleName": "string",
                                      "namePronunciation": "string",
                                      "familySuffix": "string",
                                      "status": "string",
                                      "ptoannual": "int",
                                      "ptobalance": "int",
                                      "gender": "string",
                                      "phone": "int",
                                      "im": "string",
                                      "createts": "int",
                                      "timezone": "string",
                                      "practiceId": "int",
                                      "imageName": "string",
                                      "thumbnail": "string",
                                      "profileId": "int",
                                      "allocation": "int",
                                      "countryId": "int",
                                      "lastupdateuserid": "int",
                                      "lastupdatets": "int",
                                      "userDateFormat": "int",
                                      "hrPortal": "string",
                                      "userDisplayName": "string",
                                      "star": "int",
                                      "timecardPeriodPref": "string",
                                      "languagePreference": "string",
                                      "tosVersion": "string",
                                      "guid": "string",
                                      "jobGrade": "string",
                                      "paId": "int",
                                      "appMenuId": "int",
                                      "workingDays": "int",
                                      "hasAccess": "string",
                                      "notifications": "string",
                                      "locationModel": {
                                          "locationId": "int",
                                          "locationName": "string",
                                          "cid": "int",
                                          "locationDescription": "string",
                                          "locationType": "string",
                                          "address": "string",
                                          "lattitude": "int",
                                          "longitude": "int",
                                          "locationUID": "int",
                                          "status": "string",
                                          "workingDays": "int",
                                          "locationCode": "int",
                                          "locationLabel": "string",
                                          "parentLocationId": "int",
                                          "createuserid": "int",
                                          "addressModelList": [
                                              {
                                                  "addressId": "int",
                                                  "addressLine1": "string",
                                                  "addressLine2": "string",
                                                  "city": "string",
                                                  "currentStatus": "string",
                                                  "state": "string",
                                                  "zipCode": "int",
                                                  "createts": "int",
                                                  "cid": "int",
                                                  "userId": "int",
                                                  "candidateId": "int",
                                                  "addressType": "string",
                                                  "locationId": "int",
                                                  "contactId": "int",
                                                  "countryId": "int",
                                                  "countryModel": {
                                                      "countryId": "int",
                                                      "countryName": "string",
                                                      "iso2": "string"
                                                  },
                                                  "status": "string",
                                                  "verificationStatus": "string",
                                                  "custId": "int",
                                                  "mapUrl": "",
                                                  "createUserId": "int",
                                                  "extAppUID": "int",
                                                  "countryCode": "int",
                                                  "countryid": "int"
                                              }
                                          ]
                                      },
                                      "azureObjectIdentifier": "string",
                                      "isView": "string",
                                      "view": "string"
                                  },
                                  "startDate": "int",
                                  "endDate": "int",
                                  "managerId": "int",
                                  "managerUserModel": "string",
                                  "statusCode": "string",
                                  "cid": "int",
                                  "appraisalType": "string",
                                  "userId": "int",
                                  "candidatePositionId": "int",
                                  "reviewMode": "string",
                                  "workflowId": "int",
                                  "finalComment": "string",
                                  "createUserId": "int",
                                  "createUserModel": {
                                      "cid": "int",
                                      "empId": "string",
                                      "userId": "int",
                                      "position": "string",
                                      "firstName": "string",
                                      "shortName": "string",
                                      "lastName": "string",
                                      "workerTypeModel": {
                                          "wtid": "int",
                                          "cid": "int",
                                          "code": "string",
                                          "description": "string",
                                          "createuserid": "int"
                                      },
                                      "displayFullName": "string",
                                      "userStartDate": "int",
                                      "email": "string",
                                      "cellPhone": "int",
                                      "userName": "string",
                                      "userProfileModel": {
                                          "cid": "int",
                                          "profileId": "int",
                                          "profileName": "string",
                                          "profileDescription": "string",
                                          "orgId": "int",
                                          "profileResponsibilities": "string",
                                          "profileRequirements": "string",
                                          "salaryBandMin": "int",
                                          "salaryBandMax": "int",
                                          "salaryBandCurrency": "int",
                                          "managerProfileId": "int",
                                          "managerProfileName": "string",
                                          "customFieldValueModelList": "string",
                                          "numberofUsers": "int",
                                          "createuserid": "int",
                                          "status": "string",
                                          "careerPathwayModelList": "string",
                                          "objectType": "string",
                                          "objectName": "string",
                                          "objectid": "int"
                                      },
                                      "prefixSalutation": "string",
                                      "secondLastName": "string",
                                      "middleName": "string",
                                      "namePronunciation": "string",
                                      "familySuffix": "string",
                                      "status": "string",
                                      "ptoannual": "int",
                                      "ptobalance": "int",
                                      "gender": "string",
                                      "phone": "int",
                                      "im": "string",
                                      "createts": "int",
                                      "timezone": "string",
                                      "practiceId": "int",
                                      "imageName": "string",
                                      "thumbnail": "string",
                                      "profileId": "int",
                                      "allocation": "int",
                                      "lastupdateuserid": "int",
                                      "lastupdatets": "int",
                                      "workingDaysSchedule": "string",
                                      "userDateFormat": "int",
                                      "hrPortal": "string",
                                      "userDisplayName": "string",
                                      "star": "int",
                                      "timecardPeriodPref": "string",
                                      "languagePreference": "string",
                                      "tosVersion": "string",
                                      "guid": "string",
                                      "jobGrade": "string",
                                      "paId": "int",
                                      "careerPathwayId": "int",
                                      "calendarId": "int",
                                      "workingDays": "int",
                                      "hasAccess": "string",
                                      "notifications": "string",
                                      "calendarModel": {
                                          "calendarId": "int",
                                          "name": "string",
                                          "colorCode": "string",
                                          "cid": "int",
                                          "createUserId": "int",
                                          "createts": "int",
                                          "createUserViewModel": {
                                              "userId": "int",
                                              "firstName": "string",
                                              "lastName": "string",
                                              "name": "string",
                                              "phone": "int",
                                              "email": "string",
                                              "status": "string",
                                              "shortName": "string",
                                              "thumbnail": "string",
                                              "gender": "string",
                                              "jobTitle": "string",
                                              "departmentId": "int",
                                              "locationId": "int",
                                              "department": "string",
                                              "location": "string",
                                              "profileId": "int",
                                              "profileName": "string",
                                              "timezone": "string",
                                              "userStartDate": "int",
                                              "cellPhone": "int",
                                              "empId": "int",
                                              "allocation": "int",
                                              "userDateFormat": "int",
                                              "star": "int",
                                              "imageName": "string",
                                              "notes": "string",
                                              "im": "string",
                                              "countryId": "int",
                                              "cid": "int",
                                              "guid": "string",
                                              "hasAccess": "int",
                                              "calendarId": "int",
                                              "id": "int"
                                          }
                                      },
                                      "isView": "string",
                                      "view": "string"
                                  },
                                  "finalValue": "int",
                                  "obtype": "string",
                                  "createts": "int",
                                  "status": "string",
                                  "preFinalValue": "int",
                                  "preFinalComment": "string",
                                  "finalValueStr": "string",
                                  "preFinalValueStr": "string",
                                  "showFinalValue": "int",
                                  "showWeightedTotal": "int",
                                  "userViewModel": {
                                      "userId": "int",
                                      "firstName": "string",
                                      "lastName": "string",
                                      "name": "string",
                                      "phone": "int",
                                      "email": "string",
                                      "status": "string",
                                      "shortName": "string",
                                      "thumbnail": "string",
                                      "gender": "string",
                                      "jobTitle": "string",
                                      "departmentId": "int",
                                      "locationId": "int",
                                      "department": "string",
                                      "location": "string",
                                      "profileId": "int",
                                      "profileName": "string",
                                      "timezone": "string",
                                      "userStartDate": "int",
                                      "userEndDate": "int",
                                      "cellPhone": "int",
                                      "empId": "string",
                                      "allocation": "int",
                                      "userDateFormat": "int",
                                      "star": "int",
                                      "imageName": "string",
                                      "notes": "string",
                                      "im": "string",
                                      "createuserid": "int",
                                      "countryId": "int",
                                      "cid": "int",
                                      "guid": "string",
                                      "hasAccess": "int",
                                      "id": "int"
                                  },
                                  "scoreTemplateId": "int",
                                  "scoreTemplateModel": {
                                      "scoretemplateid": "int",
                                      "cid": "int",
                                      "scoreMin": "int",
                                      "scoreMax": "int",
                                      "scoreMaxValidation": "int",
                                      "scoringInstructions": "string",
                                      "scoreName": "string",
                                      "allowFractional": "int",
                                      "rangeModelList": [
                                          {
                                              "strangeid": "int",
                                              "scoreTempId": "int",
                                              "rangeMin": "int",
                                              "rangeMax": "int",
                                              "interpretation": "string",
                                              "colorCode": "string",
                                              "cid": "int",
                                              "description": "string"
                                          },
                                          {
                                              "strangeid": "int",
                                              "scoreTempId": "int",
                                              "rangeMin": "int",
                                              "rangeMax": "int",
                                              "interpretation": "string",
                                              "colorCode": "string",
                                              "cid": "int",
                                              "description": "string"
                                          },
                                          {
                                              "strangeid": "int",
                                              "scoreTempId": "int",
                                              "rangeMin": "int",
                                              "rangeMax": "int",
                                              "interpretation": "string",
                                              "colorCode": "string",
                                              "cid": "int",
                                              "description": "string"
                                          }
                                      ],
                                      "visualizationType": "string",
                                      "status": "string"
                                  },
                                  "saveForLater": "string",
                                  "completionDate": "int",
                                  "appraisalGroupId": "int",
                                  "dynaFormId": "int",
                                  "formAssignmentUrl": "string",
                                  "signatureFlowLibraryId": "int",
                                  "appraisalTemplateId": "int",
                                  "isLocked": "int"
                              }
                          ],
                          "message": "success"
                      }
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /appraisal/bulkLaunch:
      post:
        tags:
          - Performance Review
        summary: Launch Performance Reviews In Bulk
        description: ''
        operationId: launch-performance-reviews-in-bulk
        parameters:
          - name: templateId
            in: query
            schema:
              type: string
          - name: reviewType
            in: query
            schema:
              type: string
          - name: startDate
            in: query
            schema:
              type: string
          - name: endDate
            in: query
            schema:
              type: string
          - name: importGoals
            in: query
            schema:
              type: string
          - name: importJobProfileSkills
            in: query
            schema:
              type: string
          - name: importSkills
            in: query
            schema:
              type: string
          - name: userIdList
            in: query
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Please verify the data parameters' format."
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /appraisal/assignment:
      get:
        tags:
          - Performance Review Assignment
        summary: Retrieve Performance Review Assignments
        description: ''
        operationId: get-performance-review-assignments-for-a-user.
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: string
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "code": 1,
                        "data": [
                          {
                            "assignmentId": "int",
                            "appraisalId": "int",
                            "reviewerId": "int",
                            "externalReviewerId": "string",
                            "typeCode": "string",
                            "asgnStatusCode": "string",
                            "comments": "string",
                            "dueDate": "string",
                            "cid": "int",
                            "totalScore": "string",
                            "scoreTemplateId": "int",
                            "scoreTemplateModel": {
                              "scoretemplateid": "int",
                              "cid": "int",
                              "scoreMin": "int",
                              "scoreMax": "int",
                              "scoreMaxValidation": "string",
                              "scoringInstructions": "string",
                              "scoreName": "string",
                              "allowFractional": "int",
                              "rangeModelList": [
                                {
                                  "strangeid": "int",
                                  "scoreTempId": "int",
                                  "rangeMin": "int",
                                  "rangeMax": "int",
                                  "interpretation": "string",
                                  "colorCode": "string",
                                  "cid": "int",
                                  "description": "string"
                                }
                              ],
                              "visualizationType": "string",
                              "status": "string"
                            },
                            "code": "int",
                            "completedts": "int",
                            "userModel": {
                              "cid": "int",
                              "userId": "int",
                              "position": "string",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartDate": "string",
                              "email": "string",
                              "cellPhone": "string",
                              "userName": "string",
                              "userProfileModel": {
                                "cid": "int",
                                "profileId": "int",
                                "profileName": "string",
                                "profileDescription": "string",
                                "orgId": "int",
                                "profileResponsibilities": "string",
                                "profileRequirements": "string",
                                "salaryBandMin": "int",
                                "salaryBandMax": "int",
                                "salaryBandCurrency": "",
                                "managerProfileId": "int",
                                "managerProfileName": "string",
                                "customFieldValueModelList": "object",
                                "numberofUsers": "string",
                                "createuserid": "object",
                                "status": "string",
                                "careerPathwayModelList": "object",
                                "objectType": "string",
                                "objectName": "string",
                                "objectid": "int"
                              },
                              "departmentModel": {
                                "departmentId": "inr",
                                "name": "string",
                                "description": "string",
                                "deptHead": "int",
                                "cid": "int",
                                "departmentCode": "int",
                                "departmentLabel": "string",
                                "parentDepartmentId": "object",
                                "parentDepartmentName": "string",
                                "deptHeadName": "string",
                                "noOfEmployees": "int",
                                "userModel": "object"
                              },
                              "prefixSalutation": "string",
                              "secondLastName": "string",
                              "middleName": "string",
                              "namePronunciation": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "ptoannual": "int",
                              "ptobalance": "int",
                              "gender": "string",
                              "phone": "string",
                              "im": "string",
                              "createts": "int",
                              "timezone": "string",
                              "practiceId": "int",
                              "imageName": "string",
                              "thumbnail": "string",
                              "profileId": "int",
                              "allocation": "int",
                              "lastupdateuserid": "int",
                              "lastupdatets": "string",,
                              "userDateFormat": "string",
                              "hrPortal": "string",
                              "userDisplayName": "string",
                              "star": "int",
                              "timecardPeriodPref": "string",
                              "languagePreference": "string",
                              "tosVersion": "string",
                              "guid": "string",
                              "jobGrade": "string",
                              "hasAccess": "boolean",
                              "primaryColor": "string",
                              "secondaryColor": "string",
                              "notifications": "boolean",
                              "isView": "boolean",
                              "view": "boolean"
                            },
                            "externalUserModel": "object",
                            "reviewVisibility": "string",
                            "showReviewer": "boolean",
                            "userVisibility": "boolean",
                            "managerOnlyVisibility": "boolean",
                            "notified": "boolean",
                            "notificationDate": "string",
                            "weightage": "int",
                            "appraisalModel": {
                              "appraisalId": "int",
                              "appraisalName": "string",
                              "description": "string",
                              "userModel": {
                                "cid": "int",
                                "empId": "int",
                                "userId": "int",
                                "position": "int",
                                "firstName": "string",
                                "shortName": "string",
                                "lastName": "string",
                                "displayFullName": "string",
                                "email": "string",
                                "cellPhone": "string",
                                "userName": "string",
                                "prefixSalutation": "string",
                                "secondLastName": "string",
                                "middleName": "string",
                                "namePronunciation": "string",
                                "familySuffix": "string",
                                "status": "string",
                                "ptoannual": "int",
                                "ptobalance": "int",
                                "gender": "string",
                                "phone": "string",
                                "im": "int",
                                "createts": "int",
                                "timezone": "string",
                                "practiceId": "int",
                                "profileId": "int",
                                "allocation": "int",
                                "lastupdateuserid": "int",
                                "lastupdatets": "string",
                                "userDateFormat": "string",
                                "hrPortal": "string",
                                "userDisplayName": "string",
                                "star": "int",
                                "timecardPeriodPref": "string",
                                "languagePreference": "string",
                                "tosVersion": "string",
                                "guid": "string",
                                "jobGrade": "string",
                                "hasAccess": "boolean",
                                "notifications": "boolean",
                                "isView": "boolean",
                                "view": "boolean"
                              },
                              "startDate": "string",
                              "endDate": "string",
                              "managerId": "int",
                              "managerUserModel": "object",
                              "statusCode": "string",
                              "cid": "int",
                              "appraisalType": "string",
                              "userId": "int",
                              "candidatePositionId": "int",
                              "reviewMode": "object",
                              "workflowId": "int",
                              "finalComment": "string",
                              "createUserId": "int",
                              "createUserModel": {
                                "cid": "int",
                                "userId": "int",
                                "position": "string",
                                "firstName": "string",
                                "shortName": "string",
                                "lastName": "string",
                                "displayFullName": "string",
                                "userStartDate": "string",
                                "email": "string",
                                "cellPhone": "string",
                                "userName": "string",
                                "userProfileModel": {
                                  "cid": "int",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "profileDescription": "string",
                                  "orgId": "int",
                                  "profileResponsibilities": "string",
                                  "profileRequirements": "string",
                                  "salaryBandMin": "int",
                                  "salaryBandMax": "int",
                                  "salaryBandCurrency": "string",
                                  "managerProfileId": "int",
                                  "managerProfileName": "string",
                                  "customFieldValueModelList": "object",
                                  "numberofUsers": "int",
                                  "createuserid": "int",
                                  "status": "string",
                                  "careerPathwayModelList": "object",
                                  "objectType": "string",
                                  "objectName": "string",
                                  "objectid": "int"
                                },
                                "departmentModel": {
                                  "departmentId": "int",
                                  "name": "string",
                                  "description": "string",
                                  "deptHead": "int",
                                  "cid": "int",
                                  "departmentCode": "int",
                                  "departmentLabel": "string",
                                  "parentDepartmentId": "int",
                                  "parentDepartmentName": "string",
                                  "deptHeadName": "string",
                                  "noOfEmployees": "int",
                                  "userModel": "object"
                                },
                                "prefixSalutation": "string",
                                "secondLastName": "string",
                                "middleName": "string",
                                "namePronunciation": "string",
                                "familySuffix": "string",
                                "status": "string",
                                "ptoannual": "int",
                                "ptobalance": "int",
                                "gender": "string",
                                "phone": "string",
                                "im": "string",
                                "createts": "int",
                                "timezone": "string",
                                "practiceId": "int",
                                "imageName": "string",
                                "thumbnail": "string",
                                "profileId": "int",
                                "allocation": "int",
                                "lastupdateuserid": "int",
                                "lastupdatets": "string",
                                "userDateFormat": "string",
                                "hrPortal": "string",
                                "userDisplayName": "string",
                                "star": "int",
                                "timecardPeriodPref": "string",
                                "languagePreference": "string",
                                "tosVersion": "string",
                                "guid": "string",
                                "jobGrade": "string",
                                "hasAccess": "boolean",
                                "primaryColor": "string",
                                "secondaryColor": "string",
                                "notifications": "boolean",
                                "isView": "boolean",
                                "view": "boolean"
                              },
                              "finalValue": "string",
                              "obtype": "string",
                              "createts": "string",
                              "status": "string",
                              "preFinalValue": "string",
                              "preFinalComment": "string",
                              "finalValueStr": "string",
                              "preFinalValueStr": "string",
                              "showFinalValue": "boolean",
                              "showWeightedTotal": "string",
                              "userViewModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "string",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "profileId": "int",
                                "timezone": "string",
                                "cellPhone": "string",
                                "empId": "int",
                                "allocation": "int",
                                "userDateFormat": "string",
                                "star": "int",
                                "notes": "string",
                                "im": "int",
                                "createuserid": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "id": "int"
                              },
                              "scoreTemplateId": "int",
                              "scoreTemplateModel": {
                                "scoretemplateid": "int",
                                "cid": "int",
                                "scoreMin": "int",
                                "scoreMax": "int",
                                "scoreMaxValidation": "string",
                                "scoringInstructions": "string",
                                "scoreName": "string",
                                "allowFractional": "int",
                                "rangeModelList": [
                                  {
                                    "strangeid": "int",
                                    "scoreTempId": "int",
                                    "rangeMin": "int",
                                    "rangeMax": "int",
                                    "interpretation": "string",
                                    "colorCode": "string",
                                    "cid": "int",
                                    "description": "string"
                                  }
                                ],
                                "visualizationType": "string",
                                "status": "string"
                              },
                              "saveForLater": "string",
                              "completionDate": "string",
                              "appraisalGroupId": "int",
                              "dynaFormId": "int",
                              "formAssignmentUrl": "string",
                              "signatureFlowLibraryId": "int",
                              "appraisalTemplateId": "int",
                              "isLocked": "int"
                            },
                            "createts": "string",
                            "createDirectReports": "boolean"
                          }
                        ],
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties: {}
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "The requested resource is not available."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /position/save:
      post:
        tags:
          - Positions
        summary: Save Position
        description: ''
        operationId: save-position
        parameters:
          - name: name
            in: query
            description: Name of Position
            required: true
            schema:
              type: string
          - name: description
            in: query
            description: Description of Position
            schema:
              type: string
          - name: count
            in: query
            description: Number of openings
            required: true
            schema:
              type: integer
              format: int32
              default: '1'
          - name: status
            in: query
            description: Status of Position
            required: true
            schema:
              type: string
              enum:
                - OPEN
                - HOLD
              default: OPEN
          - name: accessLevel
            description: |-
              Access level of Position 
               'pvt' - Private, 'ijp' - Publish Internally, 'pub' - Public
            in: query
            required: true
            schema:
              type: string
              enum:
                - pvt
                - ijp
                - pub
              default: pvt
          - name: requirements
            in: query
            description: Requirements of Position
            schema:
              type: string
          - name: responsibilities
            in: query
            description: Responsibilities of Position
            schema:
              type: string
          - name: dateOpen
            in: query
            description: Date of Opening
            required: true
            schema:
              type: string
          - name: dateClose
            in: query
            description: Date of Closing
            required: true
            schema:
              type: string
          - name: positionUID
            description: Unique Identity of Position
            required: true
            in: query
            schema:
              type: string
          - name: projectid
            description: Project ID of Position
            in: query
            schema:
              type: integer
              format: int32
          - name: funnelId
            description: Candidate Funnel ID of Position
            required: true
            in: query
            schema:
              type: integer
          - name: approvalFlowId
            description: Position Approval Flow ID of Position
            in: query
            schema:
              type: integer
              format: int32
          - name: locationid
            description: Location ID of Position
            in: query
            schema:
              type: integer
              format: int32
          - name: departmentId
            description: Department ID of Position
            in: query
            schema:
              type: string
          - name: profileid
            description: Profile ID of Position
            in: query
            schema:
              type: integer
              format: int32
          - name: recruiterId
            description: ID of Recruiter
            in: query
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: successful
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
          '404':
            description: '404'
            content:
              text:
                examples:
                  Result:
                    value: Resource Path not found.
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /position/view:
      get:
        tags:
          - Positions
        summary: Retrieve position
        description: ''
        operationId: get-a-position-by-position-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: positionid
            in: query
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": {
                          "positionid": "int",
                          "name": "string",
                          "status": "string",
                          "description": "string",
                          "projectid": "int",
                          "approvalFlowId": "int",
                          "offerApprovalFlowId": "int",
                          "count": "int",
                          "customLocation": "string",
                          "locationid": "int",
                          "positionUID": "string",
                          "createDate": "string",
                          "cid": "int",
                          "accessLevel": "string",
                          "dateClose": "string",
                          "dateOpen": "string",
                          "dateApprove": "string",
                          "datePublish": "string",
                          "dateHold": "string",
                          "profileid": "int",
                          "requirements": "string",
                          "responsibilities": "string",
                          "htmlTemplate": "string",
                          "recruiterId": "int",
                          "recruiterModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "phone": "int",
                            "email": "string",
                            "status": "string",
                            "shortName": "string",
                            "thumbnail": "string",
                            "gender": "string",
                            "jobTitle": "string",
                            "profileId": "int",
                            "profileName": "string",
                            "timezone": "string",
                            "userStartDate": "string",
                            "cellPhone": "string",
                            "empId": "string",
                            "allocation": "int",
                            "userDateFormat": "string",
                            "star": "int",
                            "imageName": "string",
                            "notes": "string",
                            "im": "int",
                            "createuserid": "int",
                            "cid": "int",
                            "guid": "string",
                            "careerPathwayId": "int",
                            "hasAccess": "int",
                            "userNameFormat": "string",
                            "id": "int"
                          },
                          "assessmentTemplateId": "int",
                          "applicationFormId": "int",
                          "dynaFormModel": "object",
                          "departmentId": "int",
                          "departmentModel": {
                            "departmentId": "int",
                            "name": "string",
                            "description": "string",
                            "deptHead": "int",
                            "cid": "int",
                            "departmentCode": "int",
                            "departmentLabel": "string",
                            "parentDepartmentId": "int",
                            "parentDepartmentName": "string",
                            "deptHeadName": "string",
                            "noOfEmployees": "int",
                            "userModel": {
                              "userId": "int",
                              "firstName": "string",
                              "lastName": "string",
                              "name": "string",
                              "phone": "string",
                              "email": "string",
                              "status": "string",
                              "shortName": "string",
                              "gender": "string",
                              "jobTitle": "string",
                              "departmentId": "int",
                              "department": "string",
                              "profileId": "int",
                              "timezone": "string",
                              "userStartDate": "string",
                              "cellPhone": "int",
                              "empId": "string",
                              "allocation": "int",
                              "userDateFormat": "string",
                              "star": "int",
                              "notes": "string",
                              "im": "int",
                              "createuserid": "int",
                              "cid": "int",
                              "guid": "string",
                              "hasAccess": "int",
                              "id": "int"
                            }
                          },
                          "assessmentFormId": "int",
                          "applicationDueDate": "string",
                          "userName": "string",
                          "positionApprovalLevelList": "string",
                          "locationModel": {
                            "locationId": "int",
                            "locationName": "string",
                            "cid": "int",
                            "locationDescription": "string",
                            "locationType": "string",
                            "address": "string",
                            "lattitude": "string",
                            "longitude": "string",
                            "locationUID": "string",
                            "status": "string",
                            "workingDays": "string",
                            "locationCode": "",
                            "locationLabel": "string",
                            "parentLocationId": "int",
                            "createuserid": "int",
                            "addressModelList": [
                              {
                                "addressId": "int",
                                "addressLine1": "string",
                                "addressLine2": "string",
                                "city": "string",
                                "currentStatus": "string",
                                "state": "string",
                                "zipCode": "int",
                                "createts": "int",
                                "cid": "int",
                                "userId": "int",
                                "candidateId": "int",
                                "addressType": "string",
                                "locationId": "int",
                                "contactId": "int",
                                "countryId": "int",
                                "countryModel": {
                                  "countryId": "int",
                                  "countryName": "string",
                                  "iso2": "string"
                                },
                                "status": "string",
                                "verificationStatus": "string",
                                "custId": "int",
                                "mapUrl": "string",
                                "createUserId": "int",
                                "extAppUID": "string",
                                "countryCode": "int",
                                "countryid": "int"
                              }
                            ]
                          },
                          "profileModel": "object",
                          "projectModel": "object",
                          "userViewModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "phone": "string",
                            "email": "string",
                            "status": "string",
                            "shortName": "string",
                            "thumbnail": "string",
                            "gender": "string",
                            "jobTitle": "string",
                            "departmentId": "int",
                            "locationId": "int",
                            "department": "string",
                            "location": "string",
                            "profileId": "int",
                            "profileName": "string",
                            "timezone": "string",
                            "userStartDate": "string",
                            "userEndDate": "string",
                            "cellPhone": "string",
                            "empId": "string",
                            "userDateOfBirth": "string",
                            "allocation": "int",
                            "userDateFormat": "string",
                            "star": "int",
                            "imageName": "string",
                            "notes": "string",
                            "im": "int",
                            "createuserid": "int",
                            "countryId": "int",
                            "cid": "int",
                            "guid": "string",
                            "hasAccess": "int",
                            "calendarId": "int",
                            "id": "int"
                          },
                          "lastUpdateUserViewModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "phone": "string",
                            "email": "string",
                            "status": "string",
                            "shortName": "string",
                            "thumbnail": "string",
                            "gender": "string",
                            "jobTitle": "string",
                            "profileId": "int",
                            "profileName": "string",
                            "timezone": "string",
                            "userStartDate": "string",
                            "cellPhone": "string",
                            "empId": "string",
                            "allocation": "int",
                            "userDateFormat": "string",
                            "star": "int",
                            "imageName": "string",
                            "notes": "string",
                            "im": "int",
                            "createuserid": "int",
                            "cid": "int",
                            "guid": "string",
                            "careerPathwayId": "int",
                            "hasAccess": "int",
                            "userNameFormat": "string",
                            "id": "int"
                          },
                          "candidatePositionModelList": "object",
                          "totalcandidate": "int",
                          "seoUrl": "string",
                          "lastUpdatets": "string",
                          "approvalStatus": "string",
                          "hiringManagerId": "int",
                          "requestApprovalId": "int",
                          "funnelId": "int",
                          "userapprovalList": "object",
                          "isRecommended": "boolean",
                          "category": "string",
                          "currencyId": "int",
                          "currencyModel": "object",
                          "minSalary": "int",
                          "maxSalary": "int",
                          "recommended": "boolean",
                          "id": "int"
                        },
                        "CandidateList": "object",
                        "candidateApplicationFunnelStatusModel": [
                          {
                            "funnelStatusId": "int",
                            "funnelId": "int",
                            "statusName": "string",
                            "sequence": "int",
                            "colorCode": "string",
                            "internalCode": "int",
                            "shareStatus": "string",
                            "cid": "int"
                          }
                        ],
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "not found"
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /position/list:
      get:
        tags:
          - Positions
        summary: Retrieve positions
        description: ''
        operationId: get-positions
        parameters:
          - name: search
            in: query
            description: ''
            schema:
              type: string
          - name: page
            in: query
            description: Page number
            schema:
              type: integer
              format: int32
          - name: pageSize
            in: query
            description: Number of users per page
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [
                          {
                            "positionId": "int",
                            "positionUID": "string",
                            "positionName": "string",
                            "applicantsCount": "int",
                            "hiringFunnelName": "string",
                            "noOfOpenings": "int",
                            "positionDescription": "string",
                            "positionResponsibilities": "string",
                            "positionRequirements": "string",
                            "positionStatus": "string",
                            "publishStatus": "string",
                            "approvalStatus": "string",
                            "positionCreatets": "string",
                            "positionLastUpdatets": "string",
                            "cid": "int"
                          },
                          {
                            "positionId": "int",
                            "positionUID": "string",
                            "positionName": "string",
                            "applicantsCount": "int",
                            "hiringFunnelName": "string",
                            "noOfOpenings": "int",
                            "positionDescription": "string",
                            "positionResponsibilities": "string",
                            "positionRequirements": "string",
                            "positionStatus": "string",
                            "publishStatus": "string",
                            "approvalStatus": "string",
                            "positionCreatets": "string",
                            "positionLastUpdatets": "string",
                            "cid": "int"
                          },
                          {
                            "positionId": "int",
                            "positionUID": "int",
                            "positionName": "string",
                            "applicantsCount": "int",
                            "hiringFunnelName": "string",
                            "noOfOpenings": "int",
                            "positionDescription": "string",
                            "positionResponsibilities": "string",
                            "positionRequirements": "string",
                            "positionStatus": "string",
                            "publishStatus": "string",
                            "approvalStatus": "string",
                            "positionCreatets": "string",
                            "positionLastUpdatets": "string",
                            "cid": "int"
                          }
                        ],
                         "positionApprovalLevelList": [
                          {
                            "approvalId": "int",
                            "levelSequence": "int",
                            "userGroupModel": "object",
                            "relationType": "string",
                            "createUserId": "int",
                            "flowId": "int",
                            "userId": "int",
                            "userViewModel": "object",
                            "cid": "int"
                          },
                          {
                            "approvalId": "int",
                            "levelSequence": "int",
                            "userGroupModel": {
                              "usergroupid": "int",
                              "userViewModel": "object",
                              "usergroupname": "string",
                              "description": "string",
                              "createuserid": "int",
                              "cid": "int",
                              "updatets": "int",
                              "membershipGuidance": "string",
                              "functionid": "int"
                            },
                            "relationType": "string",
                            "createUserId": "int",
                            "flowId": "int",
                            "userId": "int",
                            "userViewModel": "int",
                            "cid": "int"
                          },
                          {
                            "approvalId": "int",
                            "levelSequence": "int",
                            "userGroupModel": {
                              "usergroupid": "int",
                              "userViewModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "string",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "department": "string",
                                "location": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "string",
                                "userEndDate": "string",
                                "cellPhone": "string",
                                "empId": "string",
                                "userDateOfBirth": "string",
                                "allocation": "int",
                                "userDateFormat": "string",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im": "int",
                                "createuserid": "int",
                                "countryId": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "calendarId": "int",
                                "id": "int"
                              },
                              "usergroupname": "string",
                              "description": "string",
                              "createuserid": "int",
                              "cid": "int",
                              "updatets": "int",
                              "membershipGuidance": "string",
                              "functionid": "int"
                            },
                            "relationType": "string",
                            "createUserId": "int",
                            "flowId": "int",
                            "userId": "int",
                            "userViewModel": "object",
                            "cid": "int"
                          }
                       }
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
          '404':
            description: '404'
            content:
              text:
                examples:
                  Result:
                    value: Resource Path not found.
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/projects/allocation/{projectId}:
      get:
        tags:
          - Project
        summary: List Allocations
        description: Returns all user allocations for the project.
        operationId: get-allocations-on-the-basis-of-project-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: projectId
            in: path
            description: The ID of the project.
            schema:
              type: integer
              format: int32
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "allocations": [
                          {
                            "userProjectId": "int",
                            "userReportModel": {
                              "cid": "int",
                              "userId": "int",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartDate": "date",
                              "email": "email",
                              "cellPhone": "string",
                              "userName": "string",
                              "status": "string",
                              "gender": "string",
                              "createts": "long",
                              "allocation": "int",
                              "userDisplayName": "string",
                              "star": "int",
                              "locationModel": {
                                "locationId": "int",
                                "locationName": "string",
                                "locationDescription": "string",
                                "locationType": "string",
                                "address": "string",
                                "lattitude": "double",
                                "longitude": "double",
                                "locationUID": "int",
                                "status": "string",
                                "workingDays": "string",
                                "locationCode": "string",
                                "locationLabel": "string",
                                "parentLocationId": "int"
                              },
                              "isView": "boolean"
                            },
                            "projectModel": {
                              "projectId": "int",
                              "projectName": "string",
                              "projectDesc": "string",
                              "startDate": "date",
                              "endDate": "date",
                              "contactPerson": "int",
                              "account": "int",
                              "status": "string",
                              "createts": "long",
                              "shortCode": "string",
                              "probability": "int",
                              "contactPersonName": "string",
                              "statusValue": "string",
                              "puid": "int",
                              "billingType": "string"
                            },
                            "roleCode": "int",
                            "isAdmin": "int",
                            "allocation": "double",
                            "billableAllocation": "int",
                            "billRate": "int",
                            "billPeriod": "string",
                            "billCurrencyCode": "string",
                            "overtimeCoefficient": "double",
                            "cid": "int",
                            "startDate": "date",
                            "endDate": "date",
                            "createuserid": "int",
                            "status": "string",
                            "approvalFlowModel": {},
                            "userModel": {
                              "cid": "int",
                              "userId": "int",
                              "position": "string",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartDate": "date",
                              "email": "string",
                              "cellPhone": "string",
                              "userName": "string",
                              "prefixSalutation": "string",
                              "middleName": "string",
                              "namePronunciation": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "gender": "string",
                              "phone": "string",
                              "im": "string",
                              "createts": "long",
                              "imageName": "string",
                              "thumbnail": "string",
                              "allocation": "double",
                              "userDisplayName": "string",
                              "star": "int",
                              "languagePreference": "string",
                              "jobGrade": "string",
                              "isView": "boolean"
                            }
                          }
                        ]
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        security: []
    /api/projects/allocation:
      post:
        tags:
          - Project
        summary: Assign Project Allocation
        description: >-
          Assigns the project to the user based on the project ID and user ID and
          returns the userProjectId, which is the ID of the assignment.
        operationId: save-project-allocation-by-project-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - projectId
                  - userId
                properties:
                  projectId:
                    type: integer
                    description: The ID of the project.
                    format: int32
                  userId:
                    type: integer
                    description: The ID of the user to whom the project should be assigned.
                    format: int32
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "userProjectId": "int"
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        security: []
    /api/projects/{projectId}:
      get:
        tags:
          - Project
        summary: Retrieve Project
        description: Retrieve the details of the Project by ID.
        operationId: get-project-details-by-project-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: projectId
            in: path
            description: The ID of the project.
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": {
                          "projectId": "int",
                          "projectName": "string",
                          "projectDesc": "string",
                          "startDate": "date",
                          "endDate": "date",
                          "contactPerson": "int",
                          "account": "int",
                          "status": "string",
                          "createts": "int",
                          "shortCode": "string",
                          "probability": "int",
                          "contactPersonName": "string",
                          "statusValue": "string",
                          "puid": "string",
                          "billingType": "string"
                        }
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "You don't have permission to perform this operation."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
        security: []
    /api/projects:
      get:
        tags:
          - Project
        summary: List Projects
        description: Returns a list of projects.
        operationId: get-projects-list
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "projects": [
                          {
                            "projectId": "int",
                            "projectName": "string",
                            "projectDesc": "string",
                            "startDate": "date",
                            "endDate": "date",
                            "contactPerson": "int",
                            "account": "int",
                            "status": "string",
                            "createts":"int",
                            "shortCode": "string",
                            "probability": "int",
                            "contactPersonName": "string",
                            "statusValue": "string",
                            "puid": "string",
                            "billingType": "string"
                          },
                          {
                            "projectId": "int",
                            "projectName": "string",
                            "projectDesc": "string",
                            "startDate": "date",
                            "endDate": "date",
                            "contactPerson": "int",
                            "account": "int",
                            "status": "string",
                            "createts": "int",
                            "shortCode": "string",
                            "probability": "int",
                            "contactPersonName": "string",
                            "statusValue": "string",
                            "puid": "string",
                            "billingType": "string"
                          }
                        ]
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "You don't have permission to perform this operation."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
        security: []
      post:
        tags:
          - Project
        summary: Create Project
        description: Create a new project.
        operationId: create-a-project
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - projectName
                  - projectDesc
                  - shortCode
                  - startDate
                properties:
                  projectName:
                    type: string
                    description: Name of the project.
                    example: Machine Learning
                  projectDesc:
                    type: string
                    description: Description of the project.
                    example: The project relates to the machine learning services.
                  shortCode:
                    type: string
                    description: A unique short code to identify the project.
                    example: ML_007
                  startDate:
                    type: string
                    description: Start date of the project.
                    format: date
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "projectId": "int"
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "You don't have permission to perform this operation."
                      }
                schema:
                  type: object
                  properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /api/report:
      get:
        tags:
          - Reports
        summary: Get report
        operationId: getReportUsingGET
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: analyticId
            in: query
            description: analyticId
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: userid
            required: false
            schema:
              type: string
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/report/content:
      get:
        tags:
          - Reports
        summary: Get content for report by analytic Id
        operationId: getReportContentUsingGET
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: analyticId
            in: query
            description: analyticId
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: userid
            required: false
            schema:
              type: string
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /report/content:
      get:
        tags:
          - Reports
        summary: Retrieve report content
        description: ''
        operationId: retrieve-content-for-report
        parameters:
          - name: analyticId
            in: query
            description: The ID of the report.
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [
                          {
                            "entityList": [
                              {
                                "Column Name": "string",
                                "Column Name": "string"
                              }
                            ]
                          }
                        ],
                        "message": "success"
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          entityList:
                            type: array
                            items:
                              type: object
                              properties:
                                Account Name:
                                  type: string
                                  example: Saksham's Account
                                Account Description:
                                  type: string
                                  example: Saksham's Account
                    message:
                      type: string
                      example: success
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Error while authenticating user."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while authenticating user.
          '404':
            description: '404'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Error while processing this request."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while processing this request.
          '409':
            description: '409'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Failure
        deprecated: false
    /skill/add:
      post:
        tags:
          - Skills
        summary: Create a new skill
        description: ''
        operationId: create-a-new-skill
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - description
                  - skillCode
                properties:
                  description:
                    type: string
                    description: Description of the skill.
                  skillCode:
                    type: string
                    description: The title of the skill.
                  assessmentModel:
                    type: object
                    required:
                      - scoretemplateid
                    properties:
                      rangeModelList:
                        type: array
                        items:
                          properties:
                            description:
                              type: string
                              description: Description of the range.
                            interpretation:
                              type: string
                            rangeMax:
                              type: number
                              description: Maximum range.
                              default: 0
                              format: float
                            rangeMin:
                              type: number
                              description: Minimum range.
                              default: 0
                              format: float
                            scoreTempId:
                              type: integer
                              description: The ID of the assessment scale.
                              default: 0
                              format: int32
                            strangeid:
                              type: integer
                              default: 0
                              format: int32
                          type: object
                      scoreMax:
                        type: number
                        description: Maximum score of the assessment.
                        format: float
                      scoreMin:
                        type: number
                        description: Minimum score of the assessment.
                        format: float
                      scoreName:
                        type: string
                        description: Name of the score.
                      scoretemplateid:
                        type: integer
                        description: The ID of the assessment scale.
                        format: int32
                      status:
                        type: string
                        description: |-
                          Status of the assessment. 
                           A -Active, ARCHV -Archive
                        default: A
                        enum:
                          - A
                          - ARCHV
                  skillTypeModel:
                    type: object
                    required:
                      - skillTypeId
                    properties:
                      createUserId:
                        type: integer
                        description: The ID of the user who is creating skill.
                        format: int32
                      skillTypeDesc:
                        type: string
                        description: Description of the skill type.
                      skillTypeId:
                        type: integer
                        description: The ID of the assessment scale.
                        format: int32
                      skillTypeName:
                        type: string
                        description: Name of the skill type.
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "Status": "string",
                          "Description": "string",
                          "SkillCode": "string",
                          "SkillTypeModel": {
                              "skillTypeId": "int",
                              "skillTypeName": "string",
                              "skillTypeDesc": "string",
                              "skillViewModelList": "model",
                              "createUserId": "string",
                              "createts": "int",
                              "skillCategoryModel": "model",
                              "cid": "int"
                          },
                          "AssessmentModel": {
                              "scoretemplateid": "int",
                              "cid": "int",
                              "scoreMin": "int",
                              "scoreMax": "int",
                              "scoreMaxValidation": "int",
                              "scoringInstructions": "string",
                              "scoreName": "string",
                              "allowFractional": "int",
                              "rangeModelList": "model",
                              "visualizationType": "string",
                              "status": "string"
                          },
                          "SkillId": "int",
                          "message": "Skill created successfully."
                      }
                schema:
                  type: object
                  properties:
                    Status:
                      type: string
                      example: string
                    Description:
                      type: string
                      example: string
                    SkillCode:
                      type: string
                      example: string
                    SkillTypeModel:
                      type: object
                      properties:
                        skillTypeId:
                          type: string
                          example: int
                        skillTypeName:
                          type: string
                          example: string
                        skillTypeDesc:
                          type: string
                          example: string
                        skillViewModelList:
                          type: string
                          example: model
                        createUserId:
                          type: string
                          example: string
                        createts:
                          type: string
                          example: int
                        skillCategoryModel:
                          type: string
                          example: model
                        cid:
                          type: string
                          example: int
                    AssessmentModel:
                      type: object
                      properties:
                        scoretemplateid:
                          type: string
                          example: int
                        cid:
                          type: string
                          example: int
                        scoreMin:
                          type: string
                          example: int
                        scoreMax:
                          type: string
                          example: int
                        scoreMaxValidation:
                          type: string
                          example: int
                        scoringInstructions:
                          type: string
                          example: string
                        scoreName:
                          type: string
                          example: string
                        allowFractional:
                          type: string
                          example: int
                        rangeModelList:
                          type: string
                          example: model
                        visualizationType:
                          type: string
                          example: string
                        status:
                          type: string
                          example: string
                    SkillId:
                      type: string
                      example: int
                    message:
                      type: string
                      example: Skill created successfully.
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid.
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Error while creating skill from API."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while creating skill from API.
        deprecated: false
    /skills:
      get:
        tags:
          - Skills
        summary: Retrieve skills
        description: ''
        operationId: get-skills-by-cid
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "sequence": "int",
                          "createUserId": "int",
                          "skillCode": "string",
                          "description": "string",
                          "createts": "int",
                          "id": "int",
                          "status": "string"
                        },
                        {
                          "sequence": "int",
                          "createUserId": "int",
                          "skillCode": "string",
                          "description": "string",
                          "createts": "int",
                          "id": "int",
                         "status": "string"
                        },
                          "message": "List of skills fetched successfully."
                      }
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      sequence:
                        type: string
                        example: int
                      createUserId:
                        type: string
                        example: int
                      skillCode:
                        type: string
                        example: string
                      description:
                        type: string
                        example: string
                      createts:
                        type: string
                        example: int
                      id:
                        type: string
                        example: int
                      status:
                        type: string
                        example: string
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid.
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Error while getting skills from API."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while getting skills from API.
        deprecated: false
    /userSkill:
      get:
        tags:
          - Skills
        summary: Retrieve skills assigned to a user
        description: ''
        operationId: get-skills-assigned-to-a-user
        parameters:
          - name: assignedUserID
            in: query
            description: The ID of the user whose skills should be retrieved.
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [                       
                              {
                                  "skillUserId": "int",
                                  "skillId": "int",
                                  "userId": "int",
                                  "level": "int",
                                  "description": "string",
                                  "cid": "int",
                                  "lastUpdateUserModel": "int",
                                  "createUserId": "int",
                                  "status": "string",
                                  "createts": "int",
                                  "performancelevel": "int",
                                  "candidateid": "int",
                                  "weightage": "int",
                                  "targetLevel": "int",
                                  "targetLevelCreatets": "int",
                                  "targetLevelCreateUserId": "int",
                                  "skillCounsellor": "string",
                                  "yearsOfExperience": "int",
                                  "dateOfLastUse": "int",
                                  "skillAcquireDate": "int",
                                  "skillModel": {
                                      "skillId": "int",
                                      "skillCode": "string",
                                      "description": "string",
                                      "cid": "int",
                                      "skillTypeModel": "string",
                                      "assessmentModel": {
                                          "scoretemplateid": "int",
                                          "cid": "int",
                                          "scoreMin": "int",
                                          "scoreMax": "int",
                                          "scoreMaxValidation": "int",
                                          "scoringInstructions": "string",
                                          "scoreName": "string",
                                          "allowFractional":"int",
                                          "rangeModelList": [
                                              {
                                                  "strangeid": "int",
                                                  "scoreTempId": "int",
                                                  "rangeMin": "int",
                                                  "rangeMax": "int",
                                                  "interpretation": "string",
                                                  "colorCode": "string",
                                                  "cid": "int",
                                                  "description": "string"
                                              },
                                              {
                                                  "strangeid": "int",
                                                  "scoreTempId": "int",
                                                  "rangeMin": "int",
                                                  "rangeMax": "int",
                                                  "interpretation": "string",
                                                  "colorCode": "string",
                                                  "cid": "int",
                                                  "description": "string"
                                              }
                                          ],
                                          "visualizationType": "string",
                                          "status": "string"
                                      },
                                      "sequence": "int",
                                      "skillTypeName": "string",
                                      "userSkillLevel": "int",
                                      "status": "string",
                                      "createUserId": "int",
                                      "createts": "int"
                                  }
                              }
                          ],
                          "message": "List of skills fetched successfully."
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          skillUserId:
                            type: string
                            example: int
                          skillId:
                            type: string
                            example: int
                          userId:
                            type: string
                            example: int
                          level:
                            type: string
                            example: int
                          description:
                            type: string
                            example: string
                          cid:
                            type: string
                            example: int
                          lastUpdateUserModel:
                            type: string
                            example: int
                          createUserId:
                            type: string
                            example: int
                          status:
                            type: string
                            example: string
                          createts:
                            type: string
                            example: int
                          performancelevel:
                            type: string
                            example: int
                          candidateid:
                            type: string
                            example: int
                          weightage:
                            type: string
                            example: int
                          targetLevel:
                            type: string
                            example: int
                          targetLevelCreatets:
                            type: string
                            example: int
                          targetLevelCreateUserId:
                            type: string
                            example: int
                          skillCounsellor:
                            type: string
                            example: string
                          yearsOfExperience:
                            type: string
                            example: int
                          dateOfLastUse:
                            type: string
                            example: int
                          skillAcquireDate:
                            type: string
                            example: int
                          skillModel:
                            type: object
                            properties:
                              skillId:
                                type: string
                                example: int
                              skillCode:
                                type: string
                                example: string
                              description:
                                type: string
                                example: string
                              cid:
                                type: string
                                example: int
                              skillTypeModel:
                                type: string
                                example: string
                              assessmentModel:
                                type: object
                                properties:
                                  scoretemplateid:
                                    type: string
                                    example: int
                                  cid:
                                    type: string
                                    example: int
                                  scoreMin:
                                    type: string
                                    example: int
                                  scoreMax:
                                    type: string
                                    example: int
                                  scoreMaxValidation:
                                    type: string
                                    example: int
                                  scoringInstructions:
                                    type: string
                                    example: string
                                  scoreName:
                                    type: string
                                    example: string
                                  allowFractional:
                                    type: string
                                    example: int
                                  rangeModelList:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        strangeid:
                                          type: string
                                          example: int
                                        scoreTempId:
                                          type: string
                                          example: int
                                        rangeMin:
                                          type: string
                                          example: int
                                        rangeMax:
                                          type: string
                                          example: int
                                        interpretation:
                                          type: string
                                          example: string
                                        colorCode:
                                          type: string
                                          example: string
                                        cid:
                                          type: string
                                          example: int
                                        description:
                                          type: string
                                          example: string
                                  visualizationType:
                                    type: string
                                    example: string
                                  status:
                                    type: string
                                    example: string
                              sequence:
                                type: string
                                example: int
                              skillTypeName:
                                type: string
                                example: string
                              userSkillLevel:
                                type: string
                                example: int
                              status:
                                type: string
                                example: string
                              createUserId:
                                type: string
                                example: int
                              createts:
                                type: string
                                example: int
                    message:
                      type: string
                      example: List of skills fetched successfully.
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid.
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Error while getting skills assigned to a user from API."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while getting skills assigned to a user from API.
        deprecated: false
    /api/survey/allresponses:
      get:
        summary: Retrieve all the Responses of the Survey
        description: This page will help you get started with Surveys.
        operationId: getting-started-with-your-api
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: SurveyId
            in: query
            description: The ID of the survey.
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {}{
                          "success": 200,
                          "Responses": [
                              {
                                  "responseId": "Integer",
                                  "itemId":  "Integer",
                                  "response": "String",
                                  "createUserId":  "Integer",
                                  "createts":  "Timestamp",
                                  "assignmentId":  "Integer",
                                  "digitalSignatureModel": "Object",
                                  "cid":  "Integer",
                                  "remoteAddr": "String",
                                  "graderResponse": "Boolean",
                                  "attachmentModel": "Object",
                                  "sentimentCode": "String",
                                  "sentimentScore": "JSON",
                                  "answerCorrect": "Boolean",
                                  "userId": "Integer"
                              }
                          ]
                      }
          '401':
            description: '401'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Exception while authenticating user."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Exception while authenticating user.
          '403':
            description: '403'
            content:
              text/plain:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "User doesn't have permission to view the responses of the survey."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        User doesn't have permission to view the responses of the
                        survey.
        deprecated: false
    /api/survey/item/save:
      post:
        tags:
          - Survey
        summary: Create the item's response for a survey
        operationId: saveItemResponseUsingPOST
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: assignmentId
            in: query
            description: assignmentId
            required: true
            schema:
              type: integer
              format: int32
          - name: itemId
            in: query
            description: itemId
            required: true
            schema:
              type: integer
              format: int32
          - name: responseValue
            in: query
            description: responseValue
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: userid
            required: false
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '201':
            description: Created
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/survey/list:
      get:
        tags:
          - Survey
        summary: Get a list of surveys
        operationId: getDynamicFormsUsingGET
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: userid
            in: header
            description: userid
            required: false
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/survey/save:
      post:
        tags:
          - Survey
        summary: Create a survey response by assignment id
        operationId: saveFormResponseUsingPOST
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: assignmentId
            in: query
            description: assignmentId
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: userid
            required: false
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '201':
            description: Created
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/survey/view:
      get:
        tags:
          - Survey
        summary: Get the details of a survey form by form id
        operationId: getDynaFormDetailsUsingGET
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: dynamicFormId
            in: query
            description: dynamicFormId
            required: false
            schema:
              type: integer
              format: int32
              default: 0
          - name: userid
            in: header
            description: userid
            required: false
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties:
                    type: object
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/user/timecard:
      get:
        tags:
          - Timecards
        summary: Retrieve timecard details by User ID.
        operationId: getUserTimecardDetailsUsingGET
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: userID
            in: query
            description: User ID of the user.
            required: true
            schema:
              type: integer
              format: int32
          - name: email
            in: query
            description: email of the user.
            required: false
            schema:
              type: string
          - name: guid
            in: query
            description: Graphical user ID.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
              application/json:
                examples:
                  Result:
                    value: |2-
                          {
                              "cardId": "int",
                              "userModel": {
                                  "cid": "int",
                                  "empId": "string",
                                  "userId": "int",
                                  "position": "string",
                                  "firstName": "string",
                                  "shortName": "string",
                                  "lastName": "string",
                                  "displayFullName": "string",
                                  "userStartDate": "date",
                                  "email": "string",
                                  "cellPhone": "string",
                                  "userName": "string",
                                  "userProfileModel": {
                                      "cid": "int",
                                      "profileId": "int",
                                      "profileName": "string",
                                      "profileDescription": "string",
                                      "orgId": "int",
                                      "profileResponsibilities": "",
                                      "profileRequirements": "string",
                                      "salaryBandMin": "double",
                                      "salaryBandMax": "double",
                                      "salaryBandCurrency": "string",
                                      "managerProfileId": "int",
                                      "managerProfileName": "string",
                                      "customFieldValueModelList": "",
                                      "numberofUsers": "int",
                                      "createuserid": "int",
                                      "status": "string",
                                      "careerPathwayModelList": "",
                                      "objectType": "string",
                                      "objectName": "string",
                                      "objectid": "int",
                                  },
                                  "prefixSalutation": "string",
                                  "secondLastName": "string",
                                  "middleName": "string",
                                  "namePronunciation": "string",
                                  "familySuffix": "string",
                                  "status": "string",
                                  "notes": "string",
                                  "ptoannual": "float",
                                  "ptobalance": "float",
                                  "gender": "string",
                                  "phone": "string",
                                  "im": "string",
                                  "createts": "",
                                  "timezone": "string",
                                  "practiceId": "int",
                                  "profileId": "int",
                                  "allocation": "double",
                                  "lastupdateuserid":"int",
                                  "lastupdatets": "date",
                                  "userDateFormat": "date",
                                  "hrPortal": "string",
                                  "userDisplayName": "string",
                                  "star": "int",
                                  "timecardPeriodPref": "string",
                                  "languagePreference": "string",
                                  "tosVersion": "string",
                                  "guid": "string",
                                  "jobGrade": "string",
                                  "paId": "int",
                                  "hasAccess": "boolean",
                                  "notifications": "boolean",
                                  "timesheetReminders": "boolean",
                                  "firstSatWorking": "boolean",
                                  "secondSatWorking": "boolean",
                                  "isView": "boolean",
                                  "view": "boolean",
                              },
                              "description": "string",
                              "startDateTime": "time",
                              "endDateTime": "time",
                              "projectId": "int",
                              "caseNum": "string",
                              "clockedOutsideGeofence": "int",
                              "elapsedTime": "time",
                              "chargeType": "string",
                              "ptoComputed": "string",
                              "caseURL": "string",
                              "status": "string",
                              "cid": "int",
                              "createts": "",
                              "date": "date",
                              "amount": "double",
                              "numberOfDays": "int",
                              "customHours": "string",
                              "paymentDate": "date",
                              "sumOfElapsedTime": "string",
                              "createUserID": "int",
                              "usedTime": "long",
                              "projectModel": {
                                  "projectId": "int",
                                  "projectName": "string",
                                  "projectDesc": "string",
                                  "startDate": "date",
                                  "endDate": "date",
                                  "contactPerson": "int",
                                  "account": "int",
                                  "accountModel": "",
                                  "userModelList": "",
                                  "status": "string",
                                  "createts": "",
                                  "shortCode": "string",
                                  "probability": "int",
                                  "contactPersonName": "string",
                                  "statusValue": "string",
                                  "pgroupid": "int",
                                  "puid": "string",
                                  "billingType": "string",
                                  "currencyId": "int",
                                  "currencyModel": "",
                                  "fixedAmount": "double",
                                  "timeSheetOpenToAll": "int",
                                  "userModel": "",
                                  "projectGroupModel": {
                                      "pgroupid": "int",
                                      "groupName": "string",
                                      "groupDesc": "string",
                                      "cid": "int",
                                  },
                                  "groupName": "string",
                                  "accountName": "string",
                                  "pmMail": "string",
                                  "locationid": "int",
                                  "locationModel": "",
                                  "reportMethod": "string",
                                  "industry": "string",
                                  "cid": "int",
                                  "isAdmin": "boolean",
                                  "customFieldValueModelList": "",
                                  "billinCategoryModels": "",
                                  "createuserid": "int",
                                  "lastupdateuserid": "int",
                                  "admin": "boolean",
                                  "projProbability": "int",
                                  "projStatus": "string",
                              },
                              "createUserModel": {
                                  "userId": "int",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "long",
                                  "email": "string",
                                  "status": "string",
                                  "shortName": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "timezone": "string",
                                  "userStartDate": "date",
                                  "cellPhone": "string",
                                  "empId": "int",
                                  "allocation": "double",
                                  "userDateFormat": "date",
                                  "star": "int",
                                  "notes": "string",
                                  "im": "string",
                                  "createuserid": "int",
                                  "cid": "int",
                                  "guid": "string",
                                  "hasAccess": "boolean",
                                  "id": "int"
                              },
                              "source": "string",
                              "projectManager": "string",
                              "timezone": "string",
                              "categoryCode": "string",
                              "notes": "string",
                              "billable": "string",
                              "activity": "string",
                              "invoiceId": "int",
                              "approvalRejectionReason": "string",
                              "timesheetId": "int",
                              "timecardApprovalFlowModel": "",
                              "activityTypeModel": "",
                              "startDateTimeStr": "string",
                              "endDateTimeStr": "string",
                              "modValue": "int",
                              "minutes": "int",
                              "timecardApprovalModel": "",
                              "clockInLongitude": "double",
                              "clockInLatitude": "double",
                              "clockOutLongitude": "double",
                              "clockOutLatitude": "double",
                              "aerialDistance": "double",
                              "projectAreaId": "int",
                              "projectAreaModel": "",
                              "rawStartDateTime": "time",
                              "rawEndDateTime": "time",
                              "worklogId": "int",
                              "id": "int"
                          }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '403':
            description: Forbidden
          '404':
            description: Not Found
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: ''
        deprecated: false
        description: >-
          Retrieve timecard details based on User ID with Add Time Cards For Other
          permission.
    /api/user/timecards:
      get:
        tags:
          - Timecards
        summary: Retrieve timecard basic details by User ID.
        operationId: getTimecardForUserUsingGET
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: userID
            in: query
            description: User ID of the user.
            required: true
            schema:
              type: integer
              format: int32
          - name: email
            in: query
            description: email of the user.
            required: false
            schema:
              type: string
          - name: guid
            in: query
            description: Graphical user ID.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
              application/json:
                examples:
                  Result:
                    value: |2-
                          {
                              "createUserID": "int",
                              "startDateTime": "time",
                              "cardId": "int",
                              "description": "string",
                              "createts": "",
                              "id": "int",
                              "endDateTime": "time",
                              "projectId": "int",
                              "elapsedTime": "time",
                              "cid": "int"
                          }
                schema:
                  type: object
                  properties:
                    createUserID:
                      type: string
                      example: int
                    startDateTime:
                      type: string
                      example: time
                    cardId:
                      type: string
                      example: int
                    description:
                      type: string
                      example: string
                    createts:
                      type: string
                      example: ''
                    id:
                      type: string
                      example: int
                    endDateTime:
                      type: string
                      example: time
                    projectId:
                      type: string
                      example: int
                    elapsedTime:
                      type: string
                      example: time
                    cid:
                      type: string
                      example: int
          '400':
            description: Bad Request
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '403':
            description: Forbidden
          '404':
            description: Not Found
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: ''
        deprecated: false
        description: >-
          Retrieve timecard basic details based on User ID with Add Time Cards For
          Other permission.
    /timecard/:
      get:
        tags:
          - Timecards
        summary: Get timecards by user id.
        operationId: getTimecardUsingGET
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: true
            schema:
              type: string
          - name: type
            in: query
            description: type
            required: false
            schema:
              type: string
              default: leave
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /timecard/addtimecard/:
      post:
        tags:
          - Timecards
        summary: Create a new timecard.
        operationId: addTimecardUsingPOST
        parameters:
          - name: createts.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.nanos
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: createts.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: customHours
            in: query
            required: false
            schema:
              type: string
          - name: date
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: description
            in: query
            required: false
            schema:
              type: string
          - name: elapsedTime.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: elapsedTime.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.nanos
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: endDateTime.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTimeStr
            in: query
            required: false
            schema:
              type: string
          - name: id
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: invoiceId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: notes
            in: query
            required: false
            schema:
              type: string
          - name: numberOfDays
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: paymentDate
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: projectId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: projectManager
            in: query
            required: false
            schema:
              type: string
          - name: projectModel.account
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: timesheetId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: timezone
            in: query
            required: false
            schema:
              type: string
          - name: usedTime
            in: query
            required: false
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '201':
            description: Created
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /timecard/clock/out:
      get:
        tags:
          - Timecards
        summary: Clock Out
        operationId: clockOutUsingGET
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /timecard/clockin/:
      post:
        tags:
          - Timecards
        summary: Create a past timecard.
        operationId: clockInoldUsingPOST
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: true
            schema:
              type: string
          - name: activity
            in: query
            required: false
            schema:
              type: string
          - name: amount
            in: query
            required: false
            schema:
              type: number
              format: double
          - name: approvalRejectionReason
            in: query
            required: false
            schema:
              type: string
          - name: billable
            in: query
            required: false
            schema:
              type: string
          - name: cardId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: caseNum
            in: query
            required: false
            schema:
              type: string
          - name: caseURL
            in: query
            required: false
            schema:
              type: string
          - name: categoryCode
            in: query
            required: false
            schema:
              type: string
          - name: chargeType
            in: query
            required: false
            schema:
              type: string
          - name: cid
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createUserID
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.nanos
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: createts.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: customHours
            in: query
            required: false
            schema:
              type: string
          - name: date
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: description
            in: query
            required: false
            schema:
              type: string
          - name: elapsedTime.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: elapsedTime.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: elapsedTime.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.nanos
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: endDateTime.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTime.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: endDateTimeStr
            in: query
            required: false
            schema:
              type: string
          - name: id
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: invoiceId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: notes
            in: query
            required: false
            schema:
              type: string
          - name: numberOfDays
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: paymentDate
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: projectId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: projectManager
            in: query
            required: false
            schema:
              type: string
          - name: projectModel.account
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: ptoComputed
            in: query
            required: false
            schema:
              type: string
          - name: source
            in: query
            required: false
            schema:
              type: string
          - name: startDateTime.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: startDateTime.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: startDateTime.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: startDateTime.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: startDateTime.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: startDateTime.nanos
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: startDateTime.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: startDateTime.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: startDateTime.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: startDateTime.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: startDateTimeStr
            in: query
            required: false
            schema:
              type: string
          - name: status
            in: query
            required: false
            schema:
              type: string
          - name: sumOfElapsedTime
            in: query
            required: false
            schema:
              type: string
          - name: timesheetId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: timezone
            in: query
            required: false
            schema:
              type: string
          - name: usedTime
            in: query
            required: false
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '201':
            description: Created
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /verify/device:
      get:
        tags:
          - Timecards
        summary: Device verification with DeviceUUID.
        operationId: isDeviceRegisterForKioskUsingGET
        parameters:
          - name: deviceUUID
            in: query
            description: deviceUUID
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /verify/tvc:
      get:
        tags:
          - Timecards
        summary: TVC code for clockin with QR Code using cid.
        operationId: getTVCforDeviceUsingGET
        parameters:
          - name: cid
            in: query
            description: cid
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /verify/user:
      get:
        tags:
          - Timecards
        summary: User verification with userid.
        operationId: userVerificationForClockAppUsingGET
        parameters:
          - name: adpAssociateOID
            in: query
            required: false
            schema:
              type: string
          - name: allocation
            in: query
            required: false
            schema:
              type: number
              format: double
          - name: appleUserIdentifier
            in: query
            required: false
            schema:
              type: string
          - name: assignments
            in: query
            required: false
            schema:
              type: string
          - name: authToken
            in: query
            required: false
            schema:
              type: string
          - name: calWeekPref
            in: query
            required: false
            schema:
              type: string
          - name: calendarId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: candidateId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: careerPathwayId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: cellPhone
            in: query
            required: false
            schema:
              type: string
          - name: cid
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: countryId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.nanos
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: createts.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createuserid
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: thumbnail
            in: query
            required: false
            schema:
              type: string
          - name: timecardPeriodPref
            in: query
            required: false
            schema:
              type: string
          - name: timezone
            in: query
            required: false
            schema:
              type: string
          - name: tosVersion
            in: query
            required: false
            schema:
              type: string
          - name: userCountry
            in: query
            required: false
            schema:
              type: string
          - name: userDateFormat
            in: query
            required: false
            schema:
              type: string
          - name: userDateOfBirth
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: userDisplayName
            in: query
            required: false
            schema:
              type: string
          - name: userEndDate
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: userId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: userName
            in: query
            required: false
            schema:
              type: string
          - name: userNameFormat
            in: query
            required: false
            schema:
              type: string
          - name: userType
            in: query
            required: false
            schema:
              type: string
          - name: view
            in: query
            required: false
            schema:
              type: boolean
          - name: workerType
            in: query
            required: false
            schema:
              type: string
          - name: workingDays
            in: query
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /register:
      post:
        tags:
          - Timecards
        summary: Register device for ClockIn with AssetModel.
        operationId: registerClockAppDeviceUsingPOST
        parameters:
          - name: accessories
            in: query
            required: false
            schema:
              type: string
          - name: acknowledge
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: assetID
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: assetno
            in: query
            required: false
            schema:
              type: string
          - name: assetstatus
            in: query
            required: false
            schema:
              type: string
          - name: assettype
            in: query
            required: false
            schema:
              type: string
          - name: purchaseDate
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: selfAssign
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: serialno
            in: query
            required: false
            schema:
              type: string
          - name: service
            in: query
            required: false
            schema:
              type: string
          - name: source
            in: query
            required: false
            schema:
              type: string
          - name: specs
            in: query
            required: false
            schema:
              type: string
          - name: supplier
            in: query
            required: false
            schema:
              type: string
          - name: useStatusCode
            in: query
            required: false
            schema:
              type: string
          - name: userDomain
            in: query
            required: false
            schema:
              type: string
          - name: userID
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: userMail
            in: query
            required: false
            schema:
              type: string
          - name: userPassword
            in: query
            required: false
            schema:
              type: string
          - name: uuid
            in: query
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Iterable'
          '201':
            description: Created
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/timecards/details/{timecardId}:
      get:
        tags:
          - Timecards
        summary: Retrieve timecard details based on timecard ID.
        description: >-
          Retrieve timecard details based on timecard ID with Add Time Cards For
          Other permission.
        operationId: getTimecardDEtailsByTimecardIdUsingGet
        parameters:
          - name: timecardId
            in: path
            description: Timecard ID of the timecard.
            required: true
            schema:
              type: integer
              format: int32
          - name: flatcustomfields
            in: query
            required: false
            schema:
              type: boolean
              default: false
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |2-
                          {
                              "cardId": "int",
                              "userModel": {
                                  "cid": "int",
                                  "empId": "string",
                                  "userId": "int",
                                  "position": "string",
                                  "firstName": "string",
                                  "shortName": "string",
                                  "lastName": "string",
                                  "displayFullName": "string",
                                  "userStartDate": "date",
                                  "email": "string",
                                  "cellPhone": "string",
                                  "userName": "string",
                                  "userProfileModel": {
                                      "cid": "int",
                                      "profileId": "int",
                                      "profileName": "string",
                                      "profileDescription": "string",
                                      "orgId": "int",
                                      "profileResponsibilities": "",
                                      "profileRequirements": "string",
                                      "salaryBandMin": "double",
                                      "salaryBandMax": "double",
                                      "salaryBandCurrency": "string",
                                      "managerProfileId": "int",
                                      "managerProfileName": "string",
                                      "customFieldValueModelList": "",
                                      "numberofUsers": "int",
                                      "createuserid": "int",
                                      "status": "string",
                                      "careerPathwayModelList": "",
                                      "objectType": "string",
                                      "objectName": "string",
                                      "objectid": "int",
                                  },
                                  "prefixSalutation": "string",
                                  "secondLastName": "string",
                                  "middleName": "string",
                                  "namePronunciation": "string",
                                  "familySuffix": "string",
                                  "status": "string",
                                  "notes": "string",
                                  "ptoannual": "float",
                                  "ptobalance": "float",
                                  "gender": "string",
                                  "phone": "string",
                                  "im": "string",
                                  "createts": "",
                                  "timezone": "string",
                                  "practiceId": "int",
                                  "profileId": "int",
                                  "allocation": "double",
                                  "lastupdateuserid":"int",
                                  "lastupdatets": "date",
                                  "userDateFormat": "date",
                                  "hrPortal": "string",
                                  "userDisplayName": "string",
                                  "star": "int",
                                  "timecardPeriodPref": "string",
                                  "languagePreference": "string",
                                  "tosVersion": "string",
                                  "guid": "string",
                                  "jobGrade": "string",
                                  "paId": "int",
                                  "hasAccess": "boolean",
                                  "notifications": "boolean",
                                  "timesheetReminders": "boolean",
                                  "firstSatWorking": "boolean",
                                  "secondSatWorking": "boolean",
                                  "isView": "boolean",
                                  "view": "boolean",
                              },
                              "description": "string",
                              "startDateTime": "time",
                              "endDateTime": "time",
                              "projectId": "int",
                              "caseNum": "string",
                              "clockedOutsideGeofence": "int",
                              "elapsedTime": "time",
                              "chargeType": "string",
                              "ptoComputed": "string",
                              "caseURL": "string",
                              "status": "string",
                              "cid": "int",
                              "createts": "",
                              "date": "date",
                              "amount": "double",
                              "numberOfDays": "int",
                              "customHours": "string",
                              "paymentDate": "date",
                              "sumOfElapsedTime": "string",
                              "createUserID": "int",
                              "usedTime": "long",
                              "projectModel": {
                                  "projectId": "int",
                                  "projectName": "string",
                                  "projectDesc": "string",
                                  "startDate": "date",
                                  "endDate": "date",
                                  "contactPerson": "int",
                                  "account": "int",
                                  "accountModel": "",
                                  "userModelList": "",
                                  "status": "string",
                                  "createts": "",
                                  "shortCode": "string",
                                  "probability": "int",
                                  "contactPersonName": "string",
                                  "statusValue": "string",
                                  "pgroupid": "int",
                                  "puid": "string",
                                  "billingType": "string",
                                  "currencyId": "int",
                                  "currencyModel": "",
                                  "fixedAmount": "double",
                                  "timeSheetOpenToAll": "int",
                                  "userModel": "",
                                  "projectGroupModel": {
                                      "pgroupid": "int",
                                      "groupName": "string",
                                      "groupDesc": "string",
                                      "cid": "int",
                                  },
                                  "groupName": "string",
                                  "accountName": "string",
                                  "pmMail": "string",
                                  "locationid": "int",
                                  "locationModel": "",
                                  "reportMethod": "string",
                                  "industry": "string",
                                  "cid": "int",
                                  "isAdmin": "boolean",
                                  "customFieldValueModelList": "",
                                  "billinCategoryModels": "",
                                  "createuserid": "int",
                                  "lastupdateuserid": "int",
                                  "admin": "boolean",
                                  "projProbability": "int",
                                  "projStatus": "string",
                              },
                              "createUserModel": {
                                  "userId": "int",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "long",
                                  "email": "string",
                                  "status": "string",
                                  "shortName": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "timezone": "string",
                                  "userStartDate": "date",
                                  "cellPhone": "string",
                                  "empId": "int",
                                  "allocation": "double",
                                  "userDateFormat": "date",
                                  "star": "int",
                                  "notes": "string",
                                  "im": "string",
                                  "createuserid": "int",
                                  "cid": "int",
                                  "guid": "string",
                                  "hasAccess": "boolean",
                                  "id": "int"
                              },
                              "source": "string",
                              "projectManager": "string",
                              "timezone": "string",
                              "categoryCode": "string",
                              "notes": "string",
                              "billable": "string",
                              "activity": "string",
                              "invoiceId": "int",
                              "approvalRejectionReason": "string",
                              "timesheetId": "int",
                              "timecardApprovalFlowModel": "",
                              "activityTypeModel": "",
                              "startDateTimeStr": "string",
                              "endDateTimeStr": "string",
                              "modValue": "int",
                              "minutes": "int",
                              "timecardApprovalModel": "",
                              "clockInLongitude": "double",
                              "clockInLatitude": "double",
                              "clockOutLongitude": "double",
                              "clockOutLatitude": "double",
                              "aerialDistance": "double",
                              "projectAreaId": "int",
                              "projectAreaModel": "",
                              "rawStartDateTime": "time",
                              "rawEndDateTime": "time",
                              "worklogId": "int",
                              "id": "int"
                          }
          '403':
            description: Forbidden
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "User doesn't have persmission to fetch timecard details."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User doesn't have persmission to fetch timecard details.
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Timecard details not found"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Timecard details not found
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Error while fetching timecard details"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while fetching timecard details
        deprecated: false
    /api/timecards:
      get:
        tags:
          - Timesheets
        operationId: getTimecardsUsingGET
        summary: Retrieve timecards by Timesheet ID.
        description: Retrieve a list of timecards.
        parameters:
          - name: startDate
            in: query
            description: Start date of the timesheet.
            required: true
            schema:
              type: string
              format: date
              example: ''
          - name: endDate
            in: query
            description: End date of the timesheet.
            required: true
            schema:
              type: string
              format: date
              example: ''
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
              example: ''
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "timesheetId": "int",
                          "isClockedIn": "boolean",
                          "data": [
                              {
                                  "cardId": "int",
                                  "userModel": {
                                      "cid": "int",
                                      "empId": "string",
                                      "userId": "int",
                                      "position": "string",
                                      "firstName": "string",
                                      "shortName": "string",
                                      "lastName": "string",
                                      "displayFullName": "string",
                                      "userStartDate": "Date",
                                      "email": "string",
                                      "cellPhone": "long",
                                  },
                                  "clockInLongitude":"double",
                                  "clockInLatitude": "double",
                                  "clockOutLongitude": "double",
                                  "clockOutLatitude": "double",
                              }
                          ],
                          "message": "successful"
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."

                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"failure."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure.
        deprecated: false
    /api/timesheet/activitytype/list:
      get:
        tags:
          - Timesheets
        summary: Retrieve list of activity types based on cid.
        description: Retrieve list of activity types based on cid.
        operationId: getActivityTypeListUsingGET
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
              example: ''
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "activityId": "int",
                                  "activityType": "string",
                                  "description": "string",
                                  "status": "string",
                                  "cid": "int",
                                  "createts": "int"
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          activityId:
                            type: string
                            example: int
                          activityType:
                            type: string
                            example: string
                          description:
                            type: string
                            example: string
                          status:
                            type: string
                            example: string
                          cid:
                            type: string
                            example: int
                          createts:
                            type: string
                            example: ''
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."

                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"failure."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure.
        deprecated: false
    /api/timesheet/allocations/list:
      get:
        tags:
          - Timesheets
        summary: Retrieve my active allocations.
        description: Retrieve list of active allocations of user.
        operationId: getAllocationsListUsingGET
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
              example: ''
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
              example: ''
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "projectId": "int",
                                  "projectName": "string",
                                  "projectDesc": "string",
                                  "startDate": "date",
                                  "endDate": "date",
                                  "contactPerson": "long",
                                  "account": "long",
                                  "status": "string",
                                  "createts": "int",
                                  "shortCode": "string",
                                  "probability": "int",
                                  "contactPersonName": "string",
                                  "statusValue": "string",
                                  "puid": "string",
                                  "billingType": "string",
                                  "timeSheetOpenToAll": "int",
                                  "projectGroupModel": "string",
                                  "locationModel": "string",
                                  "customFieldValueModelList": "object",
                                  "billinCategoryModels": "string"
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          projectId:
                            type: string
                            example: int
                          projectName:
                            type: string
                            example: string
                          projectDesc:
                            type: string
                            example: string
                          startDate:
                            type: string
                            example: date
                          endDate:
                            type: string
                            example: date
                          contactPerson:
                            type: string
                            example: long
                          account:
                            type: string
                            example: long
                          status:
                            type: string
                            example: string
                          createts:
                            type: string
                            example: ''
                          shortCode:
                            type: string
                            example: string
                          probability:
                            type: string
                            example: int
                          contactPersonName:
                            type: string
                            example: string
                          statusValue:
                            type: string
                            example: string
                          puid:
                            type: string
                            example: string
                          billingType:
                            type: string
                            example: ''
                          timeSheetOpenToAll:
                            type: string
                            example: int
                          projectGroupModel:
                            type: string
                            example: ''
                          locationModel:
                            type: string
                            example: ''
                          customFieldValueModelList:
                            type: string
                            example: ''
                          billinCategoryModels:
                            type: string
                            example: ''
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                      "message":"failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/timesheet/clockin:
      post:
        tags:
          - Timesheets
        summary: Clock in.
        description: Allows to clock in.
        operationId: clockInUsingPOST
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: proceedOutsideGeoFence
            in: query
            description: To clockin outside geofence
            schema:
              type: integer
              format: int32
              default: 0
          - name: description
            in: query
            description: Description of timecard.
            schema:
              type: string
          - name: projectId
            in: query
            description: Project ID of project.
            schema:
              type: integer
              format: int32
          - name: projectManager
            in: query
            description: Project Manager corresponding user.
            schema:
              type: string
          - name: categoryCode
            in: query
            description: Category of timecard. Choose between ["Regular", "Overtime"].
            schema:
              type: string
              example: RG
              enum:
                - RG
                - OT
          - name: notes
            in: query
            description: Notes.
            schema:
              type: string
          - name: billable
            in: query
            description: >-
              Billable or non- billable timecard. Select 'Y' for billable and 'N'
              for non-billable
            schema:
              type: string
              example: 'Y'
              enum:
                - 'Y'
                - 'N'
          - name: activity
            in: query
            description: Activity type of timecard.
            schema:
              type: string
          - name: approvalRejectionReason
            in: query
            description: Reason for approval rejection.
            schema:
              type: string
          - name: clockInLongitude
            in: query
            description: Longitude value while clocking in.
            schema:
              type: number
              format: double
          - name: clockInLatitude
            in: query
            description: Latitude value while clocking in.
            schema:
              type: number
              format: double
          - name: clockOutLongitude
            in: query
            description: Longitude value while clocking out.
            schema:
              type: number
              format: double
          - name: clockOutLatitude
            in: query
            description: Latitude value while clocking out.
            schema:
              type: number
              format: double
          - name: projectAreaId
            in: query
            description: Project area ID of project area.
            schema:
              type: integer
              format: int32
        responses:
          '201':
            description: Created
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "timesheetId": "int",
                          "timecardId": "int",
                          "startTime": "time",
                          "message": "string"
                      }
                schema:
                  type: object
                  properties:
                    timesheetId:
                      type: string
                      example: int
                    timecardId:
                      type: string
                      example: int
                    startTime:
                      type: string
                      example: time
                    message:
                      type: string
                      example: string
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '403':
            description: Forbidden
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"Clock in from mobile app is not allowed."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Clock in from mobile app is not allowed.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure.
        deprecated: false
    /api/timesheet/clockout:
      post:
        tags:
          - Timesheets
        summary: Clock out.
        description: Allows user to clock out.
        operationId: clockOutUsingPOST
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: proceedOutsideGeoFence
            in: query
            description: clock out outside geofence
            schema:
              type: integer
              format: int32
              default: 0
          - name: description
            in: query
            description: Description of timecard.
            schema:
              type: string
          - name: projectId
            in: query
            description: Project ID of project.
            schema:
              type: integer
              format: int32
          - name: projectManager
            in: query
            description: Project Manager corresponding user.
            schema:
              type: string
          - name: categoryCode
            in: query
            description: Category of timecard. Choose between ["Regular", "Overtime"].
            schema:
              type: string
              example: RG
              enum:
                - RG
                - OT
          - name: notes
            in: query
            description: Notes.
            schema:
              type: string
          - name: billable
            in: query
            description: >-
              Billable or non- billable timecard. Select 'Y' for billable and 'N'
              for non-billable
            schema:
              type: string
              example: 'Y'
              enum:
                - 'Y'
                - 'N'
          - name: activity
            in: query
            description: Activity type of timecard.
            schema:
              type: string
          - name: approvalRejectionReason
            in: query
            description: Reason for approval rejection.
            schema:
              type: string
          - name: clockInLongitude
            in: query
            description: Longitude value while clocking in.
            schema:
              type: number
              format: double
          - name: clockInLatitude
            in: query
            description: Latitude value while clocking in.
            schema:
              type: number
              format: double
          - name: clockOutLongitude
            in: query
            description: Longitude value while clocking out.
            schema:
              type: number
              format: double
          - name: clockOutLatitude
            in: query
            description: Latitude value while clocking out.
            schema:
              type: number
              format: double
          - name: projectAreaId
            in: query
            description: Project area ID of project area.
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "startTime": "time",
                          "endTime": "time",
                          "message": "string",
                          "elapsedTime": "time"
                      }
                schema:
                  type: object
                  properties:
                    startTime:
                      type: string
                      example: time
                    endTime:
                      type: string
                      example: time
                    message:
                      type: string
                      example: string
                    elapsedTime:
                      type: string
                      example: time
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"failure."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure.
        deprecated: false
    /api/timesheet/delete:
      post:
        tags:
          - Timesheets
        summary: Delete a timesheet.
        description: Deletes a timesheet by Timesheet ID.
        operationId: deleteTimesheetUsingPOST
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: timesheetId
            in: query
            description: Timesheet ID of timesheet.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: successful
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"failure."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure.
        deprecated: false
    /api/timesheet/preferences/list:
      get:
        tags:
          - Timesheets
        summary: Retrieve my timesheet preferences.
        description: Retrieve list of timesheet preferences based in cid.
        operationId: getTimesheetPreferencesUsingGET
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "timesheetStartDay": "int",
                          "billablePrefValue": "string",
                          "futureTcPrefValue": "string",
                          "endDate": "date",
                          "projectAreaPrefValue": "string",
                          "complianceMsg": "string",
                          "activityTypePrefValue": "string",
                          "mobileAppClockInPrefValue": "string",
                          "allocatedProjectPrefValue": "string",
                          "addEditTcPrefValue": "string",
                          "backdatedTcReasonPrefValue": "string",
                          "timesheetPeriod": "string",
                          "categoryPrefValue": "string",
                          "startTimeEndTimeRequired": "string",
                          "workingHrsPerDay": "int",
                          "kioskAppClockInPrefValue": "string",
                          "qrCodeClockInPrefValue": "string",
                          "tcApprovalReasonPrefValue": "string",
                          "clockInOutsideGeofencePreferenceValue": "string",
                          "startDate": "date",
                          "tcRejectionReasonPrefValue": "string"
                      }
                schema:
                  type: object
                  properties:
                    timesheetStartDay:
                      type: string
                      example: int
                    billablePrefValue:
                      type: string
                      example: string
                    futureTcPrefValue:
                      type: string
                      example: string
                    endDate:
                      type: string
                      example: date
                    projectAreaPrefValue:
                      type: string
                      example: string
                    complianceMsg:
                      type: string
                      example: string
                    activityTypePrefValue:
                      type: string
                      example: string
                    mobileAppClockInPrefValue:
                      type: string
                      example: string
                    allocatedProjectPrefValue:
                      type: string
                      example: string
                    addEditTcPrefValue:
                      type: string
                      example: string
                    backdatedTcReasonPrefValue:
                      type: string
                      example: string
                    timesheetPeriod:
                      type: string
                      example: string
                    categoryPrefValue:
                      type: string
                      example: string
                    startTimeEndTimeRequired:
                      type: string
                      example: string
                    workingHrsPerDay:
                      type: string
                      example: int
                    kioskAppClockInPrefValue:
                      type: string
                      example: string
                    qrCodeClockInPrefValue:
                      type: string
                      example: string
                    tcApprovalReasonPrefValue:
                      type: string
                      example: string
                    clockInOutsideGeofencePreferenceValue:
                      type: string
                      example: string
                    startDate:
                      type: string
                      example: date
                    tcRejectionReasonPrefValue:
                      type: string
                      example: string
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"failure."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure.
        deprecated: false
    /api/timesheet/save:
      post:
        tags:
          - Timesheets
        summary: Create/Update a timesheet.
        description: Creates a new timesheet and update existing timesheet.
        operationId: saveTimesheetUsingPOST
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: date
            in: query
            description: Timesheet date.
            required: true
            schema:
              type: string
              format: date
          - name: projectId
            in: query
            description: Project ID of project.
            required: true
            schema:
              type: integer
              format: int32
          - name: elapsedTime
            in: query
            description: Elapsed Time of timecard.
            required: true
            schema:
              type: string
              format: date-time
          - name: cardId
            in: query
            description: Timecard Id of timecard.
            schema:
              type: integer
              format: int32
          - name: description
            in: query
            description: Description of timecard.
            schema:
              type: string
          - name: clockedOutsideGeofence
            in: query
            description: Clocked in or clocked out outside geofence.
            schema:
              type: integer
              format: int32
          - name: projectManager
            in: query
            description: Project Manager corresponding user.
            schema:
              type: string
          - name: categoryCode
            in: query
            description: Category of timecard. Choose between ["Regular", "Overtime"].
            schema:
              type: string
              example: RG
              enum:
                - RG
                - OT
          - name: notes
            in: query
            description: Notes.
            schema:
              type: string
          - name: billable
            in: query
            description: >-
              Billable or non- billable timecard. Select 'Y' for billable and 'N'
              for non-billable
            schema:
              type: string
              example: 'Y'
              enum:
                - 'Y'
                - 'N'
          - name: activity
            in: query
            description: Activity type of timecard.
            schema:
              type: string
          - name: approvalRejectionReason
            in: query
            description: Reason for approval rejection.
            schema:
              type: string
          - name: clockInLongitude
            in: query
            description: Longitude value while clocking in.
            schema:
              type: number
              format: double
          - name: clockInLatitude
            in: query
            description: Latitude value while clocking in.
            schema:
              type: number
              format: double
          - name: clockOutLongitude
            in: query
            description: Longitude value while clocking out.
            schema:
              type: number
              format: double
          - name: clockOutLatitude
            in: query
            description: Latitude value while clocking out.
            schema:
              type: number
              format: double
          - name: projectAreaId
            in: query
            description: Project area ID of project area.
            schema:
              type: integer
              format: int32
        responses:
          '201':
            description: Created
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "timesheetId": "int",
                          "timecardId": "int",
                         "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    timesheetId:
                      type: string
                      example: int
                    timecardId:
                      type: string
                      example: int
                    message:
                      type: string
                      example: successful
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '403':
            description: Forbidden
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Cannot create timecard when timesheet is submitted/approved."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Cannot create timecard when timesheet is
                        submitted/approved.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/timesheet/update:
      post:
        tags:
          - Timesheets
        summary: Update timesheet status by Timesheet ID.
        description: >-
          Update the timesheet status (submit, approve, reject) corresponding to
          supplied Timesheet ID.
        operationId: updateTimesheetUsingPOST
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: timesheetId
            in: query
            description: Timesheet ID of the timesheet.
            required: true
            schema:
              type: integer
              format: int32
          - name: status
            in: query
            description: >-
              Status of timecard. Choose between ["PD-Pending for Approval",
              "PAP-Partially Approved", "AP-Fully Approved","NEW-New
              Timesheet","RJ-Rejected"].
            required: true
            schema:
              type: string
              example: AP
              enum:
                - PD
                - PAP
                - AP
                - NEW
                - RJ
          - name: comments
            in: query
            description: Comments
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: successful
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/timesheets:
      get:
        tags:
          - Timesheets
        summary: Retrieve timesheets by User ID.
        description: Retrieve a list of timesheets.
        operationId: getTimesheetsUsingGET
        parameters:
          - name: userID
            in: query
            description: The ID of the user to retrieve timesheets.
            required: false
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: startDate
            in: query
            description: Start date of the timesheet.
            required: false
            schema:
              type: string
          - name: endDate
            in: query
            description: End date of the timesheet.
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  OK:
                    value: |2-
                       {
                          "data": [
                              {
                                  "timesheetId": "int",
                                  "startDate": "Date",
                                  "endDate": "Date",
                                  "status": "string",
                                  "userName": "string",
                                  "userId": "int",
                                  "email": "string",
                                  "empId": "string",
                                  "gender": "string",
                                  "orgUnit": "string",
                                  "departmentId": "int",
                                  "locationId": "int",
                                  "locationName": "string",
                                  "userStatus": "string",
                                  "approvalFlowId": "int",
                                  "cardsCount": "int",
                                  "totalTime": "long",
                                  "leaveHours": "long",
                                  "holidayHours": "long",
                                  "cid": "int",
                              }
                          ],
                          "message": "successful"
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                         "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/timesheet/approvals/list:
      get:
        tags:
          - Timesheets
        summary: Retrieve timesheet approvals.
        description: Retrieve list of timesheet approvals on the basis of permission.
        operationId: retrieve-a-list-of-timesheet-approvals-on-the-basis-of-permission
        parameters:
          - name: startDate
            in: query
            description: Start date of the timesheet.
            required: true
            schema:
              type: string
          - name: endDate
            in: query
            description: End date of the timesheet.
            required: true
            schema:
              type: string
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": [
                          {
                            "timesheetId": "int",
                            "startDate": "date",
                            "endDate": "date",
                            "status": "string",
                            "userName": "string",
                            "userId": "int",
                            "email": "string",
                            "empId": "long",
                            "gender": "string",
                            "orgUnit": "string",
                            "departmentId": "int",
                            "locationId": "int",
                            "locationName": "string",
                            "userStatus": "string",
                            "approvalFlowId": "int",
                            "cardsCount": "int",
                            "totalTime": "long",
                            "leaveHours": "long",
                            "holidayHours": "long",
                            "cid": "int"
                          }
                        ],
                        "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties:
                          timesheetId:
                            type: string
                            example: int
                          startDate:
                            type: string
                            example: date
                          endDate:
                            type: string
                            example: date
                          status:
                            type: string
                            example: string
                          userName:
                            type: string
                            example: string
                          userId:
                            type: string
                            example: int
                          email:
                            type: string
                            example: string
                          empId:
                            type: string
                            example: long
                          gender:
                            type: string
                            example: string
                          orgUnit:
                            type: string
                            example: string
                          departmentId:
                            type: string
                            example: int
                          locationId:
                            type: string
                            example: int
                          locationName:
                            type: string
                            example: string
                          userStatus:
                            type: string
                            example: string
                          approvalFlowId:
                            type: string
                            example: int
                          cardsCount:
                            type: string
                            example: int
                          totalTime:
                            type: string
                            example: long
                          leaveHours:
                            type: string
                            example: long
                          holidayHours:
                            type: string
                            example: long
                          cid:
                            type: string
                            example: int
                    message:
                      type: string
                      example: successful
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/timesheet:
      get:
        tags:
          - Timesheets
        summary: Retrieve a timesheet by timesheet ID.
        description: Retrieve a timesheet by timesheet ID.
        operationId: retrieve-timesheet-by-timesheet-id
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: timesheetId
            in: query
            description: Tmesheet ID of timesheet.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": {
                              "timesheetId": "int",
                              "tcStartDate": "date",
                              "tcEndDate": "date",
                              "userId": "int",
                              "createUserId": "int",
                              "status": "string",
                              "comments": "string",
                              "approvalFlowId": "int",
                              "cid": "int",
                              "createts": "int",
                              "totalTime": "time",
                              "cardsCount": "int",
                              "ptoComputed": "long",
                              "leaveHours":  "long",
                              "holidayHours": "long",
                              "overtimeHours":  "long",
                              "userViewModel": {
                                  "userId": "int",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "long",
                                  "email": "string",
                                  "status": "string",
                                  "shortName": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "locationId": "int",
                                  "department": "string",
                                  "location": "string",
                                  "profileId": "int",
                              "timecardApprovalFlowModel": {
                                  "flowId": "int",
                                  "flowName": "string",
                                  "description": "string",
                                  "countryId": "string",
                                  "locationId": "int",
                                  "departmentId": "int",
                                  "cid": "int"
                              }
                          }
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\":\"Error while getting timesheet.\"\n}"
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while getting timesheet.
        deprecated: false
    /api/timesheets/details/{timeSheetId}:
      get:
        tags:
          - Timesheets
        summary: Retrieve timesheet details by Timesheet ID.
        description: Retrieve timesheet details by Timesheet ID.
        operationId: retrieve-timesheet-details-with-timesheet-id
        parameters:
          - name: timeSheetId
            in: path
            description: Timesheet ID of timesheet.
            schema:
              type: integer
              format: int32
            required: true
          - name: flatcustomfields
            in: query
            required: false
            schema:
              type: boolean
              default: 0
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "data": {
                          "timesheetId": "int",
                          "tcStartDate": "date",
                          "tcEndDate": "date",
                          "userId": "int",
                          "createUserId": "long",
                          "status": "string",
                          "comments": "string",
                          "approvalFlowId": "int",
                          "cid": "int",
                          "createts": "int",
                          "totalTime": "long",
                          "cardsCount": "int",
                          "leaveHours": "long",
                          "holidayHours": "long",
                          "overtimeHours": "long",
                          "timecardApprovalFlowModel": {},
                          "customFieldValueModelList": [],
                          "timesheetAuditModelList": [
                            {
                              "timesheetAuditId": "int",
                              "timesheetId": "int",
                              "comments": "string",
                              "createUserId": "long",
                              "status": "string",
                              "cid": "int",
                              "approvalLevel": "string",
                              "relationType": "string",
                              "createts": "int"
                            },
                            {
                              "timesheetAuditId": "int",
                              "timesheetId": "int",
                              "comments": "string",
                              "createUserId": "long",
                              "status": "string",
                              "cid": "int",
                              "approvalLevel": "int",
                              "relationType": "string",
                              "createts": "int"
                            }
                          ]
                      }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '403':
            description: Forbidden
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message":"User doesn't have persmission to fetch timesheet details."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User doesn't have persmission to fetch timesheet details.
          '404':
            description: Not Found
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Timesheet details not found"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Timesheet details not found
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\":\"Error while fetching timesheet details.\"\n}"
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while fetching timesheet details.
        deprecated: false
    /api/training/content:
      get:
        tags:
          - Trainings
        summary: Retrieve training content by training ID
        operationId: getTrainingContentUsingGET
        parameters:
          - name: trainingId
            in: query
            description: trainingId
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: userid
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/training/status/update:
      post:
        tags:
          - Trainings
        summary: Update training status for user
        operationId: updateUserTrainingStatusUsingPOST
        parameters:
          - name: status
            in: query
            description: Status of the user training.
            required: true
            schema:
              type: string
          - name: userTrainingId
            in: query
            description: The ID of the user training.
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: The ID of the user.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "message": "string",
                       }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Error while updating the user training status."
                      }
        deprecated: false
    /api/training/talentlms/sync:
      get:
        tags:
          - Trainings
        summary: Sync with talent LMS
        operationId: syncWithTalentLMSUsingGET
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: redirectUrl
            in: header
            description: redirectUrl
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                   "createdTrainingCount": "int",
                                  "existingTrainings": "int",
                                  "userTrainingCount": "int",
                                  "userTrainingUpdateCount": "int",
                                  "statusCode": "string,
                        }
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Failed to sync with TalentLMS."
                      }
        deprecated: false
    /api/trainings:
      get:
        tags:
          - Trainings
        summary: Retrieve trainings by user ID
        operationId: getTrainingsUsingGET
        parameters:
          - name: userid
            in: header
            description: userid
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /ptopolicies:
      get:
        tags:
          - User PTO Policies
        summary: Retrieve list of PTO policies
        description: ''
        operationId: get-list-of-pto-policies
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "ptoPolicyId": "int",
                                  "cid": "int",
                                  "effectiveDate": "string",
                                  "expirationDate": "string",
                                  "policyName": "string",
                                  "description": "string",
                                  "policycondition": "string",
                                  "leaveType": "string",
                                  "createUserId": "int",
                                  "createts": "int",
                                  "accrualThresholdWeeks": "int",
                                  "accrualRateAnnual": "int",
                                  "accrualRateHours": "string",
                                  "icon": "string",
                                  "rollOverPercentage": "int",
                                  "rollOverMax": "int",
                                  "applicability": "int",
                                  "accrualtype": "string",
                                  "bonus": "string",
                                  "bonusMax": "string",
                                  "accrualTime": "int",
                                  "accrualTimeSpan": "string",
                                  "carryoverExpirationUnit": "string",
                                  "carryoverExpirationQuantity": "int",
                                  "carryoverDate": "string",
                                  "leaveYearStart": "string",
                                  "leaveYearStartDate": "string",
                                  "thresholdUnit": "string",
                                  "thresholdQuantity": "int",
                                  "isAccrued": "string",
                                  "prorated": "int",
                                  "paid": "int",
                                  "allowRequestBeyondBal": "int",
                                  "unit": "string",
                                  "lastRun": "string",
                                  "nextRunDate": "string",
                                  "showInCalendar": "int",
                                  "documentUploadMandatory": "int",
                                  "showInTimesheet": "int",
                                  "customIcon": "string",
                                  "accrualRateAnnualUnit": "int",
                                  "accrualRateUnit": "int",
                                  "allowAccrualRateOverride": "int",
                                  "daysDefinition": "string",
                                  "ptoPolicyApprovalFlowModel": "object",
                                  "ptoPolicyChainModel": {
                                      "chainId": "int",
                                      "chainName": "string",
                                      "chainDesc": "string",
                                      "createts": "int",
                                      "cid": "int",
                                      "hasPtoPolicies": "boolean"
                                  },
                                  "ptoPolicyChainSeqId": "int",
                                  "tenureThreshold": "int",
                                  "halfDayAllowed": "int",
                                  "customHandler": "string",
                                  "decimalDigits": "int",
                                  "leastCount": "int",
                                  "leaveMaxDays": "int",
                                  "maxAccrual": "int",
                                  "locationId": "int",
                                  "orgUnitId": "int",
                                  "lastupdateuserid": "int",
                                  "hasAssignment": "boolean",
                                  "applicableToEveryone": "boolean",
                                  "policyNameUppercase": "string",
                                  "allowToOverrideAccrualRate": "boolean"
                              },
                              {
                                  "ptoPolicyId": "int",
                                  "cid": "int",
                                  "effectiveDate": "string",
                                  "expirationDate": "string",
                                  "policyName": "string",
                                  "description": "string",
                                  "policycondition": "string",
                                  "leaveType": "string",
                                  "createUserId": "int",
                                  "createts": "int",
                                  "accrualThresholdWeeks": "int",
                                  "accrualRateAnnual": "int",
                                  "accrualRateHours": "string",
                                  "icon": "string",
                                  "rollOverPercentage": "int",
                                  "rollOverMax": "int",
                                  "applicability": "int",
                                  "accrualtype": "string",
                                  "bonus": "string",
                                  "bonusMax": "string",
                                  "accrualTime": "int",
                                  "accrualTimeSpan": "string",
                                  "carryoverExpirationUnit": "string",
                                  "carryoverExpirationQuantity": "int",
                                  "carryoverDate": "string",
                                  "leaveYearStart": "string",
                                  "leaveYearStartDate": "string",
                                  "thresholdUnit": "string",
                                  "thresholdQuantity": "int",
                                  "isAccrued": "string",
                                  "prorated": "int",
                                  "paid": "int",
                                  "allowRequestBeyondBal": "int",
                                  "unit": "string",
                                  "lastRun": "string",
                                  "nextRunDate": "string",
                                  "showInCalendar": "int",
                                  "documentUploadMandatory": "int",
                                  "showInTimesheet": "int",
                                  "customIcon": "string",
                                  "accrualRateAnnualUnit": "int",
                                  "accrualRateUnit": "int",
                                  "allowAccrualRateOverride": "int",
                                  "daysDefinition": "string",
                                  "ptoPolicyApprovalFlowModel": "object",
                                  "ptoPolicyChainModel": {
                                      "chainId": "int",
                                      "chainName": "string",
                                      "chainDesc": "string",
                                      "createts": "int",
                                      "cid": "int",
                                      "hasPtoPolicies": "boolean"
                                  },
                                  "ptoPolicyChainSeqId": "int",
                                  "tenureThreshold": "int",
                                  "halfDayAllowed": "int",
                                  "customHandler": "string",
                                  "decimalDigits": "int",
                                  "leastCount": "int",
                                  "leaveMaxDays": "int",
                                  "maxAccrual": "int",
                                  "locationId": "int",
                                  "orgUnitId": "int",
                                  "lastupdateuserid": "int",
                                  "hasAssignment": "boolean",
                                  "applicableToEveryone": "boolean",
                                  "policyNameUppercase": "string",
                                  "allowToOverrideAccrualRate": "boolean"
                              }
                          ]
                      }
                schema:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        properties: {}
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "failure"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /v3/user/pto:
      get:
        tags:
          - User PTO Policies
        summary: Retrieve your PTO Policies
        description: ''
        operationId: get-details-of-a-pto-policy-by-user-id
        parameters:
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "code": 1,
                          "data": [
                              {
                                  "userPtoId": "int",
                                  "userId": "int",
                                  "ptoPolicyModel": {
                                      "ptoPolicyId": "int",
                                      "cid": "int",
                                      "effectiveDate": "string",
                                      "expirationDate": "string",
                                      "policyName": "string",
                                      "description": "string",
                                      "policycondition": "string",
                                      "leaveType": "string",
                                      "createUserId": "int",
                                      "createts": "int",
                                      "accrualThresholdWeeks": "int",
                                      "accrualRateAnnual": "int",
                                      "accrualRateHours": "string",
                                      "icon": "string",
                                      "rollOverPercentage": "int",
                                      "rollOverMax": "int",
                                      "applicability": "int",
                                      "accrualtype": "string",
                                      "bonus": "string",
                                      "bonusMax": "string",
                                      "accrualTime": "int",
                                      "accrualTimeSpan": "string",
                                      "carryoverExpirationUnit": "string",
                                      "carryoverExpirationQuantity": "int",
                                      "carryoverDate": "string",
                                      "leaveYearStart": "string",
                                      "leaveYearStartDate": "string",
                                      "thresholdUnit": "string",
                                      "thresholdQuantity": "int",
                                      "isAccrued": "string",
                                      "prorated": "int",
                                      "paid": "int",
                                      "allowRequestBeyondBal": "int",
                                      "unit": "string",
                                      "lastRun": "string",
                                      "nextRunDate": "string",
                                      "showInCalendar": "int",
                                      "documentUploadMandatory": "int",
                                      "showInTimesheet": "int",
                                      "customIcon": "string",
                                      "accrualRateAnnualUnit": "int",
                                      "accrualRateUnit": "int",
                                      "allowAccrualRateOverride": "int",
                                      "daysDefinition": "string",
                                      "ptoPolicyApprovalFlowModel": "object",
                                      "ptoPolicyChainModel": {
                                          "chainId": "int",
                                          "chainName": "string",
                                          "chainDesc": "string",
                                          "createts": "int",
                                          "cid": "int",
                                          "hasPtoPolicies": "boolean"
                                      },
                                      "ptoPolicyChainSeqId": "int",
                                      "tenureThreshold": "int",
                                      "halfDayAllowed": "int",
                                      "customHandler": "string",
                                      "decimalDigits": "int",
                                      "leastCount": "string",
                                      "leaveMaxDays": "int",
                                      "maxAccrual": "int",
                                      "locationId": "int",
                                      "orgUnitId": "int",
                                      "lastupdateuserid": "int",
                                      "hasAssignment": "boolean",
                                      "applicableToEveryone": "boolean",
                                      "policyNameUppercase": "string",
                                      "allowToOverrideAccrualRate": "boolean"
                                  },
                                  "balance": "int",
                                  "balanceDate": "string",
                                  "calculationNotes": "string",
                                  "cid": "int",
                                  "createts": "int",
                                  "lastUpdatets": "int",
                                  "status": "string",
                                  "credit": "int",
                                  "debit": "int",
                                  "carryover": "string",
                                  "carryoverExpDate": "string",
                                  "noteKey": "string",
                                  "prevUserPtoId": "int",
                                  "createUserModel": "object",
                                  "leaveModelList": "object",
                                  "userPTOHours": {
                                      "ptoPolicyID": "int",
                                      "used": "0.0",
                                      "planned": "0.0",
                                      "pending": "0.0",
                                      "credit": "string",
                                      "usedCarryoverHours": "int",
                                      "usedCarryoverDays": "int"
                                  },
                                  "farthestLeaveDate": "string"
                              }
                          ],
                          "message": "successful"
                      }
                schema:
                  type: object
                  properties:
                    code:
                      type: integer
                      example: 1
                      default: 0
                    data:
                      type: array
                      items:
                        type: object
                        properties: {}
                    message:
                      type: string
                      example: successful
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
        deprecated: false
    /api/v3/userworkflow/assign/{workflowId}:
      post:
        summary: Assign Workflow to User
        description: This page will help you get started with Assign Workflow to User.
        operationId: assignworkflowtouser
        parameters:
          - name: workflowId
            in: path
            description: The ID of the workflow.
            schema:
              type: integer
              format: int32
            required: true
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: assigneeUserId
            in: query
            description: The ID of Workflow Assignee.
            required: true
            schema:
              type: integer
              format: int32
          - name: coordinatorUserId
            in: query
            description: The ID of Workflow Coordinator.
            required: true
            schema:
              type: integer
              format: int32
          - name: comment
            in: query
            description: Comment of the workflow.
            schema:
              type: string
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: '{"message": "Workflow assigned successfully"}'
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Workflow assigned successfully
          '401':
            description: '401'
            content:
              application/json:
                examples:
                  Result:
                    value: '{"message": "Please fill the correct details"}'
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Please fill the correct details
          '403':
            description: '403'
            content:
              application/json:
                examples:
                  Result:
                    value: >-
                      {"message": "User doesn't have permission to assign
                      workflow."}
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User doesn't have permission to assign workflow.
          '404':
            description: '404'
            content:
              application/json:
                examples:
                  Result:
                    value: '{"message": "Not Found"}'
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Not Found
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: '{"message": "Error while assigning workflow"}'
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while assigning workflow
        deprecated: false
        security: []
    /api/v3/userworkflows:
      get:
        tags:
          - Workflows
        summary: Get workflows by user id.
        operationId: getUserWorflowsFromAPIUsingGET
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: userid
            in: header
            description: userid
            required: false
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/v3/userworkflows/{userworkflowid}:
      get:
        tags:
          - Workflows
        summary: Get tasks by userworkflowid.
        operationId: getUserWorflowTasksFromAPIUsingGET
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: userid
            in: header
            description: userid
            required: false
            schema:
              type: integer
              format: int32
          - name: userworkflowid
            in: path
            description: userworkflowid
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/v3/task/add:
      post:
        tags:
          - Workflows
        summary: Create a new task.
        operationId: addTaskUsingPOST
        parameters:
          - name: userid
            in: header
            description: userid
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/arrayTaskModel'
                type: object
                required:
                  - title
                  - assignedUserId
                properties:
                  title:
                    type: string
                    description: Title of the task
                  description:
                    type: string
                    description: Description of the task
                  assignedUserId:
                    type: integer
                    description: The ID of user to whom the task is to be assigned.
                    format: int32
                  dueDate:
                    type: string
                    description: Due date of the task
          description: task object to create a new task
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Iterable'
                  type: object
                  properties:
                    message:
                      type: string
                      example: Task created successfully.
                    TaskModel:
                      type: object
                      properties:
                        taskId:
                          type: string
                          example: int
                        taskUID:
                          type: string
                          example: int
                        title:
                          type: string
                          example: string
                        description:
                          type: string
                          example: string
                        statusCode:
                          type: string
                          example: string
                        assignedUserId:
                          type: string
                          example: int
                        createUserId:
                          type: string
                          example: int
                        projectId:
                          type: string
                          example: int
                        userModel:
                          type: string
                          example: object
                        lastEdit:
                          type: string
                          example: string
                        createts:
                          type: string
                          example: date
                        launchts:
                          type: string
                          example: timestamp
                        dueDate:
                          type: string
                          example: date
                        availabilityDate:
                          type: string
                          example: date
                        phasename:
                          type: string
                          example: string
                        type:
                          type: string
                          example: string
                        appraisalId:
                          type: string
                          example: int
                        assgnUserModel:
                          type: string
                          example: object
                        userGroupModel:
                          type: string
                          example: object
                        recruitId:
                          type: string
                          example: int
                        taskAvailableStatus:
                          type: string
                          example: string
                        userId:
                          type: string
                          example: int
                        systemTask:
                          type: string
                          example: int
                        userWorkflowModel:
                          type: string
                          example: object
                        workflowStepId:
                          type: string
                          example: int
                        workflowStepModel:
                          type: string
                          example: object
                        transitionName:
                          type: string
                          example: string
                        assgnCandModel:
                          type: string
                          example: object
                        releventAttachmentModel:
                          type: string
                          example: object
                        releventUserWorkflowModel:
                          type: string
                          example: object
                        releventAppraisalModel:
                          type: string
                          example: object
                        ci:
                          type: string
                          example: int
                        relatedDynamicFormAssignmentModel:
                          type: string
                          example: object
                        releventUserTrainingModel:
                          type: string
                          example: object
                        workflowParameterAssignmentModel:
                          type: string
                          example: object
                examples:
                  Result:
                    value: |-
                      {

                          "message": "Task created successfully.",
                          "TaskModel": {
                              "taskId": "int",
                              "taskUID": "int",
                              "title": "string",
                              "description": "string",
                              "statusCode": "string",
                              "assignedUserId": "int",
                              "createUserId": "int",
                              "projectId": "int",
                              "userModel": "object",
                              "lastEdit": "string",
                              "createts": "date",
                              "launchts": "timestamp",
                              "dueDate": "date",
                              "availabilityDate": "date",
                              "phasename": "string",
                              "type": "string",
                              "appraisalId": "int",
                              "assgnUserModel": "object",
                              "userGroupModel": "object",
                              "recruitId": "int",
                              "taskAvailableStatus": "string",
                              "userId": "int",
                              "systemTask": "int",
                              "userWorkflowModel": "object",
                              "workflowStepId": "int",
                              "workflowStepModel": "object",
                              "transitionName": "string",
                              "assgnCandModel": "object",
                              "releventAttachmentModel": "object",
                              "releventUserWorkflowModel": "object",
                              "releventAppraisalModel": "object",
                              "ci": "int",
                              "relatedDynamicFormAssignmentModel": "object",
                              "releventUserTrainingModel": "object",
                              "workflowParameterAssignmentModel": "object"
                          }
                      }
          '201':
            description: Created
          '400':
            description: '400'
            content:
              text/plain:
                examples:
                  Result:
                    value: "{\n\t\"message : \"Please verify the data parameters' format.\"\n}"
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid.
          '403':
            description: Forbidden
          '404':
            description: Not Found
          '409':
            description: '409'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                       "message" :"Error while creating task."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Error while creating task.
        deprecated: false
        description: ''
    /api/v3/task/update/status:
      post:
        tags:
          - Workflows
        summary: Update status workflow task.
        operationId: updateTaskStatusFromAPIUsingPOST
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: appraisalId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: assignedUserId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: ci
            in: query
            required: false
            schema:
              type: boolean
          - name: cid
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createUserId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: createts
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: description
            in: query
            required: false
            schema:
              type: string
          - name: dueDate
            in: query
            required: false
            schema:
              type: string
              format: date
          - name: lastEdit
            in: query
            required: false
            schema:
              type: string
          - name: launchts.date
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: launchts.day
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: launchts.hours
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: launchts.minutes
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: launchts.month
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: launchts.nanos
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: launchts.seconds
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: launchts.time
            in: query
            required: false
            schema:
              type: integer
              format: int64
          - name: launchts.timezoneOffset
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: launchts.year
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: phasename
            in: query
            required: false
            schema:
              type: string
          - name: projectId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: recruitId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: statusCode
            in: query
            required: false
            schema:
              type: string
          - name: systemTask
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: taskId
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: taskUID
            in: query
            required: false
            schema:
              type: integer
              format: int32
          - name: title
            in: query
            required: false
            schema:
              type: string
          - name: transitionName
            in: query
            required: false
            schema:
              type: string
          - name: type
            in: query
            required: false
            schema:
              type: string
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Iterable'
          '201':
            description: Created
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/v3/task/{taskid}:
      get:
        tags:
          - Workflows
        summary: Get the details of a workflow task by task id.
        operationId: getTaskDetailsFromAPIUsingGET
        parameters:
          - name: Authorization
            in: header
            description: Authorization
            required: false
            schema:
              type: string
          - name: taskid
            in: path
            description: taskid
            required: true
            schema:
              type: integer
              format: int32
          - name: userid
            in: header
            description: userid
            required: false
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/v3/tasks:
      get:
        tags:
          - Workflows
        summary: Get tasks by user id.
        operationId: getTasksForUserUsingGET
        parameters:
          - name: userid
            in: header
            description: userid
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/workflows:
      get:
        tags:
          - Workflows
        summary: Get workflows.
        operationId: getWorkflowListUsingGET
        parameters:
          - name: status
            in: query
            description: status
            required: false
            schema:
              type: string
              default: A
          - name: userid
            in: header
            description: userid
            required: true
            schema:
              type: string
              default: '0'
          - name: x-api-key
            in: header
            description: x-api-key
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
    /api/test:
      get:
        tags:
          - Test
        operationId: getTestUsingGET
        summary: Retrieve test
        description: ''
        parameters:
          - name: x-api-key
            in: header
            description: The API key of the user to authenticate.
            required: true
            schema:
              type: string
          - name: userid
            in: header
            description: The ID of the user to authenticate.
            required: true
            schema:
              type: integer
              format: int32
          - name: status
            in: query
            description: >-
              The status of test - Choose between ["A-Active", "ARCHV-Archive",
              "DRAFT-Draft"].
            required: true
            schema:
              type: string
              default: A
              enum:
                - A
                - ARCHV
                - DRAFT
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n            \"dynamicFormId\": \"int\",\n            \"name\": \"string\",\n            \"dynaFormCode\": \"string\",\n            \"description\": \"string\",\n            \"createUserModel\": {\n                \"cid\": \"int\",\n                \"empId\": \"string\",\n                \"userId\": \"int\",\n                \"position\": \"string\",\n                \"firstName\": \"string\",\n                \"shortName\": \"string\",\n                \"lastName\": \"string\",\n                \"workerTypeModel\": {\n                    \"wtid\": \"int\",\n                    \"cid\": \"int\",\n                    \"code\": \"string\",\n                    \"description\": \"string\",\n                    \"createuserid\": \"int\"\n                },\n                \"displayFullName\": \"string\",\n                \"userStartDate\": \"date\",\n                \"email\": \"string\",\n                \"cellPhone\": \"string\",\n                \"userName\": \"string\",\n                \"departmentModel\": {\n                    \"departmentId\": \"int\",\n                    \"name\": \"string\",\n                    \"description\": \"string\",\n                    \"deptHead\": \"int\",\n                    \"cid\": \"int\",\n                    \"departmentCode\": \"string\",\n                    \"departmentLabel\": \"string\",\n                    \"parentDepartmentId\": \"int\",\n                    \"parentDepartmentName\": \"string\",\n                    \"deptHeadName\": \"string\",\n                    \"noOfEmployees\": \"int\",\n                    \"userModel\": \"object\"\n                },\n                \"prefixSalutation\": \"string\",\n                \"secondLastName\": \"string\",\n                \"middleName\": \"string\",\n                \"familySuffix\": \"string\",\n                \"status\": \"string\",\n                \"notes\": \"string\",\n                \"ptoannual\": \"float\",\n                \"ptobalance\": \"float\",\n                \"gender\": \"string\",\n                \"userDateOfBirth\": \"date\",\n                \"phone\": \"string\",\n                \"im\": \"string\",\n                \"createts\": \"timestamp\",\n                \"timezone\": \"string\",\n                \"imageName\": \"string\",\n                \"thumbnail\": \"string\",\n                \"profileId\": \"int\",\n                \"allocation\": \"double\",\n                \"countryId\": \"int\",\n                \"lastupdateuserid\": \"int\",\n                \"lastupdatets\": \"int\",\n                \"userDateFormat\": \"string\",\n                \"hrPortal\": \"string\",\n                \"userDisplayName\": \"string\",\n                \"star\": \"int\",\n                \"timecardPeriodPref\": \"string\",\n                \"languagePreference\": \"string\",\n                \"tosVersion\": \"string\",\n                \"guid\": \"string\",\n                \"jobGrade\": \"string\",\n                \"paId\": \"int\",\n                \"hasAccess\": \"boolean\",\n                \"notifications\": \"boolean\",\n                \"timesheetReminders\": \"boolean\",\n                \"firstSatWorking\": \"boolean\",\n                \"secondSatWorking\": \"boolean\",\n                \"locationModel\": {\n                    \"locationId\": \"int\",\n                    \"locationName\": \"string\",\n                    \"cid\": \"int\",\n                    \"locationDescription\": \"string\",\n                    \"locationType\": \"string\",\n                    \"address\": \"string\",\n                    \"lattitude\": \"string\",\n                    \"longitude\": \"string\",\n                    \"locationUID\": \"string\",\n                    \"status\": \"string\",\n                    \"workingDays\": \"string\",\n                    \"locationCode\": \"string\",\n                    \"locationLabel\": \"string\",\n                    \"parentLocationId\": \"int\",\n                    \"createuserid\": \"int\",\n                    \"parentLocationName\": \"string\",\n                    \"noOfEmployees\": \"int\",\n                    \"addressModelList\": [\n                        {\n                            \"addressId\": \"int\",\n                            \"addressLine1\": \"string\",\n                            \"addressLine2\": \"string\",\n                            \"city\": \"string\",\n                            \"currentStatus\": \"string\",\n                            \"state\": \"string\",\n                            \"zipCode\": \"string\",\n                            \"createts\": \"timestamp\",\n                            \"cid\": \"int\",\n                            \"userId\": \"int\",\n                            \"candidateId\": \"int\",\n                            \"addressType\": \"string\",\n                            \"locationId\": \"int\",\n                            \"contactId\": \"int\",\n                            \"countryId\": \"int\",\n                            \"countryModel\": {\n                                \"countryId\": \"int\",\n                                \"countryName\": \"string\",\n                                \"iso2\": \"string\",\n                            },\n                            \"status\": \"string\",\n                            \"verificationStatus\": \"string\",\n                            \"custId\": \"int\",\n                            \"mapUrl\": \"string\",\n                            \"createUserId\": \"int\",\n                            \"extAppUID\": \"string\",\n                            \"countryCode\": \"string\",\n                            \"countryid\": \"int\"\n                        }\n                    ]\n                },\n                \"isView\": \"boolean\",\n                \"view\": \"boolean\"\n            },\n            \"formVisibility\": \"boolean\",\n            \"createts\": \"int\",\n            \"updatets\": \"int\",\n            \"cid\": \"int\",\n            \"availability\": \"string\",\n            \"status\": \"string\",\n            \"anonymous\": \"int\",\n            \"userGroupId\": \"int\",\n            \"secSequence\": \"string\",\n            \"sectionModelList\": [\n                {\n                    \"sectionId\": \"int\",\n                    \"name\": \"string\",\n                    \"cid\": \"int\",\n                    \"hidden\": \"boolean\",\n                    \"dynamicFormId\": \"int\",\n                    \"sequence\": \"int\",\n                    \"createUserId\": \"int\",\n                    \"description\": \"string\",\n                    \"dynamicFormItemModelList\": [\n                        {\n                            \"dynamicFormItemId\": \"int\",\n                            \"name\": \"string\",\n                            \"sectionId\": \"int\",\n                            \"createUserId\": \"int\",\n                            \"cid\": \"int\",\n                            \"fieldType\": \"string\",\n                            \"optionValues\": \"string\",\n                            \"helpText\": \"string\",\n                            \"createts\": \"int\",\n                            \"dynamicFormId\": \"int\",\n                            \"dynaFormFlow\": \"string\",\n                            \"mappedEntityItem\": \"string\",\n                            \"fieldTypeItem\": \"string\",\n                            \"mandatory\": \"int\",\n                            \"sequence\": \"int\",\n                            \"weightage\": \"double\",\n                            \"expectedValue\": \"string\",\n                            \"correctFeedback\": \"string\",\n                            \"incorrectFeedback\": \"string\",\n                            \"attachmentModel\": \"object\",\n                            \"prefill\": \"string\",\n                            \"dynaFormItemOptionModelList\": [\n                                {\n                                    \"optionId\": \"int\",\n                                    \"dynaFormItemId\": \"int\",\n                                    \"optionValue\": \"string\",\n                                    \"cid\": \"int\",\n                                    \"createts\": \"int\",\n                                    \"isCorrect\": \"boolean\"\n                                }\n                            ],\n                            \"customListModel\": \"object\",\n                            \"optionRandom\": \"boolean\",\n                            \"numberingStyle\": \"string\"\n                        }\n                      ],\n                    \"assignee\": \"string\",\n                    \"userGroupModel\": \"object\",\n                    \"reporting\": \"string\",\n                    \"departmentId\": \"int\",\n                    \"locationId\": \"int\",\n                    \"attachmentModel\": \"object\",\n                    \"assigneeModel\": \"object\",\n                    \"sample\": \"boolean\",\n                    \"totalweightage\": \"double\"\n                }\n            ],\n            \"thresholdScore\": \"double\",\n            \"formType\": \"string\",\n            \"dataFlow\": \"string\",\n            \"embedCode\": \"string\",\n            \"showCorrect\": \"boolean\",\n            \"listed\": \"int\",\n            \"publicSummary\": \"boolean\",\n            \"presentationStyle\": \"string\",\n            \"timeLimit\": \"int\",\n            \"attemptLimit\": \"string\",\n            \"layout\": \"string\",\n            \"helpTextStyle\": \"string\",\n            \"questionRandom\": \"boolean\",\n            \"specificQuestionRandom\": \"int\",\n            \"sectionVisibility\": \"boolean\",\n            \"mappedEntity\": \"string\",\n            \"automation\": \"boolean\"\n      }\n  ],\n  \"message\": \"successful\"\n}\n        \n\t\t"
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: >-
                        Access denied! Either Authorization or x-api-key & userid
                        parameters are not present/valid or you don't have the
                        necessary permissions.
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n\t\"message\": \"failure\"\n}"
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: failure
        deprecated: false
    /api/shifts:
      get:
        tags:
          - Shifts
        summary: Get Shifts
        operationId: getShiftsUsingGET
        parameters:
          - name: userid
            in: header
            description: userid
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: true
            schema:
              type: string
          - name: projectId
            in: query
            description: projectId
            required: false
            schema:
              type: integer
              format: int32
          - name: userId
            in: query
            description: userId
            required: false
            schema:
              type: integer
              format: int32
          - name: startDate
            in: query
            description: startDate
            required: false
            schema:
              type: string
          - name: endDate
            in: query
            description: endDate
            required: false
            schema:
              type: string
          - name: status
            in: query
            description: status
            required: false
            schema:
              type: string
        responses:
          '200':
            description: OK
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "data": [
                              {
                                  "shiftitemId": "int",
                                  "createuserid": "int",
                                  "cid": "int",
                                  "createts": "long",
                                  "shiftStartTime": "Time",
                                  "shiftEndTime": "Time",
                                  "shiftDate": "date",
                                  "userprojectid":  "int",
                                  "dayofweek":  "int",
                                  "shiftId":  "int",
                                  "status": "string",
                                  "approvalFlowModel": {},
                                  "userProjectModel": {
                                      "userProjectId":  "int",
                                      "userReportModel": {},
                                      "projectModel": {
                                          "projectId":  "int",
                                          "projectName": "string",
                                          "projectDesc": "string",
                                          "startDate": "date",
                                          "endDate":  "date",
                                          "contactPerson":  "int",
                                          "account":  "int",
                                          "status": "string",
                                          "createts":  "long",
                                          "shortCode": "string",
                                          "probability":  "int",
                                          "contactPersonName":  "string",
                                          "statusValue":  "string",
                                          "puid": "string",
                                          "billingType": "string",
                                          "timeSheetOpenToAll": "int"
                                      },
                                      "roleCode":  "int",
                                      "isAdmin":  "int",
                                      "allocation":  "double",
                                      "billableAllocation":  "double",
                                      "billRate":  "int",
                                      "billPeriod": "string",
                                      "billCurrencyCode": "string",
                                      "overtimeCoefficient":  "double",
                                      "cid":  "int",
                                      "startDate": "date",
                                      "endDate":  "date",
                                      "createuserid":  "int",
                                      "status": "string",
                                      "approvalFlowModel": {},
                                      "userModel": {
                                          "cid":  "int",
                                          "empId": "string",
                                          "userId":  "int",
                                          "position": "string",
                                          "firstName": "string",
                                          "shortName": "string",
                                          "lastName": "string",
                                          "workerTypeModel": {
                                              "wtid":  "int",
                                              "code": "string",
                                              "description": "string"
                                          },
                                          "displayFullName": "string",
                                          "userStartDate": "date",
                                          "email": "string",
                                          "cellPhone": "string",
                                          "userName": "string",
                                          "userProfileModel": {
                                              "profileId":  "int",
                                              "profileName": "string",
                                              "profileDescription": "string",
                                              "orgId":  "int",
                                              "profileResponsibilities": "string",
                                              "profileRequirements": "string",
                                              "salaryBandMin":  "double",
                                              "salaryBandMax":  "double",
                                              "salaryBandCurrency": "string",
                                              "managerProfileId":  "int",
                                              "customFieldValueModelList": null
                                          },
                                          "departmentModel": {
                                              "departmentId":  "int",
                                              "name": "string",
                                              "description": "string",
                                              "deptHead":  "int",
                                              "cid":  "int",
                                              "departmentCode": "string",
                                              "departmentLabel": "string",
                                              "parentDepartmentId":  "int",
                                              "parentDepartmentName":  "string",
                                              "deptHeadName":  "string",
                                              "noOfEmployees":  "int"
                                          },
                                          "prefixSalutation": "string",
                                          "secondLastName": "string",
                                          "middleName": "string",
                                          "namePronunciation": "string",
                                          "familySuffix": "string",
                                          "status": "string",
                                          "gender": "string",
                                          "phone": "string",
                                          "im": "string" "",
                                          "createts":  "long",
                                          "allocation":  "int",
                                          "countryId":  "int",
                                          "userDisplayName": "string",
                                          "star": "int",
                                          "languagePreference": "string",
                                          "userNameFormat": "string",
                                          "jobGrade": "string",
                                          "locationModel": {
                                              "locationId": "int",
                                              "locationName": "string",
                                              "locationDescription": "string",
                                              "locationType": "string",
                                              "address": "string",
                                              "lattitude": "string",
                                              "longitude": "string",
                                              "locationUID": "string",
                                              "status": "string",
                                              "workingDays": "string",
                                              "locationCode": "string",
                                              "locationLabel": "string",
                                              "parentLocationId":"int"
                                          },
                                          "calendarModel": {},
                                          "isView":"boolean" 
                                      }
                                  }
                              },
                      }
                schema:
                  $ref: '#/components/schemas/Iterable'
          '201':
            description: Created
          '401':
            description: Unauthorized
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "You don't have permission to perform this operation."
                      }
          '403':
            description: Forbidden
          '404':
            description: Not Found
          '409':
            description: Conflict
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Something Went Wrong!"
                      }
        deprecated: false
    /api/shifts/save:
      post:
        tags:
          - Shifts
        summary: Save Shift
        operationId: saveShiftUsingPOST
        parameters:
          - name: userid
            in: header
            description: userid
            required: true
            schema:
              type: integer
              format: int32
          - name: x-api-key
            in: header
            description: x-api-key
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: string
          description: shiftBody
          required: true
        responses:
          '200':
            description: OK
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/Iterable'
          '201':
            description: Created
          '401':
            description: Unauthorized
          '403':
            description: Forbidden
          '404':
            description: Not Found
        deprecated: false
  servers:
    - url: https://acmecompany.bizmerlin.net/rm/api
  components:
    schemas:
      Iterable:
        type: object
        title: Iterable
      AccountModel:
        type: object
        properties:
          accountCreateUserModel:
            $ref: '#/components/schemas/UserViewModel'
          accountDescription:
            type: string
          accountId:
            type: integer
            format: int32
          accountName:
            type: string
          accountOwnerModel:
            $ref: '#/components/schemas/ContactModel'
          cid:
            type: integer
            format: int32
          id:
            type: integer
            format: int32
        title: AccountModel
      AddressModel:
        type: object
        properties:
          addressId:
            type: integer
            format: int32
          addressLine1:
            type: string
          addressLine2:
            type: string
          addressType:
            type: string
          candidateId:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          city:
            type: string
          contactId:
            type: integer
            format: int32
          countryId:
            type: integer
            format: int32
          countryModel:
            $ref: '#/components/schemas/CountryModel'
          countryid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          currentStatus:
            type: string
          custId:
            type: integer
            format: int32
          locationId:
            type: integer
            format: int32
          mapUrl:
            type: string
          state:
            type: string
          status:
            type: string
          userId:
            type: integer
            format: int32
          verificationStatus:
            type: string
          zipCode:
            type: string
        title: AddressModel
      AssessmentModel:
        type: object
        properties:
          allowFractional:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          rangeModelList:
            type: array
            items:
              $ref: '#/components/schemas/AssessmentRangeModel'
          scoreMax:
            type: number
            format: float
          scoreMaxValidation:
            type: number
            format: float
          scoreMin:
            type: number
            format: float
          scoreName:
            type: string
          scoretemplateid:
            type: integer
            format: int32
          scoringInstructions:
            type: string
          status:
            type: string
          visualizationType:
            type: string
        title: AssessmentModel
      AssessmentRangeModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          colorCode:
            type: string
          description:
            type: string
          interpretation:
            type: string
          rangeMax:
            type: number
            format: float
          rangeMin:
            type: number
            format: float
          scoreTempId:
            type: integer
            format: int32
          strangeid:
            type: integer
            format: int32
        title: AssessmentRangeModel
      AttachmentFolderModel:
        type: object
        properties:
          atchFolderId:
            type: integer
            format: int32
          atchFolderName:
            type: string
          cid:
            type: integer
            format: int32
          createuserid:
            type: integer
            format: int32
          usedCount:
            type: integer
            format: int32
        title: AttachmentFolderModel
      AttachmentModel:
        type: object
        properties:
          access:
            type: string
          annId:
            type: integer
            format: int32
          appraisalAssignmentId:
            type: integer
            format: int32
          appraisalItemResponseId:
            type: integer
            format: int32
          appraisalid:
            type: integer
            format: int32
          assetid:
            type: integer
            format: int32
          atchType:
            type: string
          attachUserModel:
            $ref: '#/components/schemas/UserModel'
          attachid:
            type: integer
            format: int32
          attachmentFolderModel:
            $ref: '#/components/schemas/AttachmentFolderModel'
          authkey:
            type: string
          candidateAccess:
            type: boolean
          candidateid:
            type: integer
            format: int32
          category:
            type: string
          cid:
            type: integer
            format: int32
          comments:
            type: string
          createts:
            type: string
            format: date-time
          createuserid:
            type: integer
            format: int32
          customerId:
            type: integer
            format: int32
          dLExpiryDate:
            type: string
          dLIssueDate:
            type: string
          documentContent:
            type: string
          documentExpiryDate:
            type: string
            format: date-time
          documentType:
            type: string
          documnetIssueDate:
            type: string
            format: date-time
          expenseItemId:
            type: integer
            format: int32
          expenseid:
            type: integer
            format: int32
          fileExtn:
            type: string
          filename:
            type: string
          folder:
            type: string
          folder_id:
            type: integer
            format: int32
          global:
            type: boolean
          goalid:
            type: integer
            format: int32
          language:
            type: string
          leaveid:
            type: integer
            format: int32
          multiSigning:
            type: integer
            format: int32
          objectAccessModelList:
            type: array
            items:
              $ref: '#/components/schemas/ObjectAccessModel'
          objectType:
            type: string
          obtype:
            type: string
          payStubId:
            type: integer
            format: int32
          positionid:
            type: integer
            format: int32
          projectModel:
            $ref: '#/components/schemas/ProjectModel'
          projectid:
            type: integer
            format: int32
          resume:
            type: boolean
          ruleid:
            type: integer
            format: int32
          s3id:
            type: string
          signNowDocId:
            type: string
          signNowTemplateId:
            type: string
          signStatus:
            type: string
          signatureId:
            type: string
          signatureRequestId:
            type: string
          signingDate:
            type: string
            format: date-time
          size:
            type: integer
            format: int32
          skilluserId:
            type: integer
            format: int32
          stateCountryModel:
            $ref: '#/components/schemas/StateCountryModel'
          status:
            type: string
          taskId:
            type: integer
            format: int32
          ticketId:
            type: integer
            format: int32
          timecardid:
            type: integer
            format: int32
          topic:
            type: string
          trainingId:
            type: integer
            format: int32
          userAccess:
            type: integer
            format: int32
          userGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
          userModel:
            $ref: '#/components/schemas/UserModel'
          userid:
            type: integer
            format: int32
        title: AttachmentModel
      AwardModel:
        type: object
        properties:
          appraisalId:
            type: integer
            format: int32
          attribution:
            type: string
          awardDate:
            type: string
            format: date
          awardId:
            type: integer
            format: int64
          awardTypeModel:
            $ref: '#/components/schemas/AwardTypeModel'
          cid:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          currencyModel:
            $ref: '#/components/schemas/CurrencyModel'
          feedbackId:
            type: integer
            format: int32
          finAccountCode:
            type: string
          finAmount:
            type: number
            format: double
          finCurrencyCode:
            type: string
          finPaymentDate:
            type: string
            format: date
          finPaymentStatus:
            type: string
          nonMonetaryCompensation:
            type: string
          notes:
            type: string
          userViewModel:
            $ref: '#/components/schemas/UserViewModel'
        title: AwardModel
      AwardTypeModel:
        type: object
        properties:
          amount:
            type: number
            format: double
          amountType:
            type: string
          awardTypeId:
            type: integer
            format: int64
          budget:
            type: number
            format: double
          cid:
            type: integer
            format: int32
          code:
            type: string
          createUserId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          currencyCode:
            type: string
          currencyModel:
            $ref: '#/components/schemas/CurrencyModel'
          departmentModel:
            $ref: '#/components/schemas/DepartmentModel'
          description:
            type: string
          locationModel:
            $ref: '#/components/schemas/LocationModel'
          managerUserViewModel:
            $ref: '#/components/schemas/UserViewModel'
        title: AwardTypeModel
      BankAccountModel:
        type: object
        properties:
          accountCode:
            type: string
          accountNumber:
            type: string
          accountType:
            type: string
          bankAccountId:
            type: integer
            format: int32
          bankCountryId:
            type: integer
            format: int32
          branchCode:
            type: string
          branchName:
            type: string
          cid:
            type: integer
            format: int32
          countryId:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          name:
            type: string
          ownerType:
            type: string
          paymentEmail:
            type: string
          routingNumber:
            type: string
          status:
            type: string
          swiftCode:
            type: string
          userId:
            type: integer
            format: int32
        title: BankAccountModel
      CandidateApplicationsModel:
        type: object
        properties:
          applicationDueDate:
            type: string
            format: date-time
          applicationStatusId:
            type: integer
            format: int32
          applicationStatusValue:
            type: string
          appliedPositions:
            type: string
          candidateId:
            type: integer
            format: int32
          candidatePositionCreateTs:
            $ref: '#/components/schemas/Timestamp'
          candidatePositionsId:
            type: integer
            format: int64
          cid:
            type: integer
            format: int32
          colorcode:
            type: string
          count:
            type: integer
            format: int32
          positionDepartmentId:
            type: integer
            format: int32
          positionDescription:
            type: string
          positionLocationId:
            type: integer
            format: int32
          positionName:
            type: string
          positionProfileId:
            type: integer
            format: int32
          positionProjectId:
            type: integer
            format: int32
          positionStatusOpenClosed:
            type: string
          positioncreatets:
            $ref: '#/components/schemas/Timestamp'
          positionid:
            type: integer
            format: int32
          responsibilities:
            type: string
          sequence:
            type: integer
            format: int32
          status:
            type: string
          systemReco:
            type: string
          systemRecoHelp:
            type: string
        title: CandidateApplicationsModel
      CandidateModel:
        type: object
        properties:
          acceptance1:
            type: boolean
          acceptance2:
            type: boolean
          accessCode:
            type: string
          addressModelList:
            type: array
            items:
              $ref: '#/components/schemas/AddressModel'
          assessmentModel:
            $ref: '#/components/schemas/AssessmentModel'
          attachmentModelList:
            type: array
            items:
              $ref: '#/components/schemas/AttachmentModel'
          candidateLock:
            type: integer
            format: int32
          candidatePositionsModelList:
            type: array
            items:
              $ref: '#/components/schemas/CandidateApplicationsModel'
          candidateStatusModel:
            $ref: '#/components/schemas/CandidateStatusModel'
          certificationModelList:
            type: array
            items:
              $ref: '#/components/schemas/CertificationModel'
          cid:
            type: integer
            format: int32
          cloudSearchSync:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          createuserid:
            type: integer
            format: int32
          customFieldValueModelList:
            type: array
            items:
              $ref: '#/components/schemas/CustomFieldValueModel'
          customfieldvalue:
            type: array
            items:
              $ref: '#/components/schemas/CustomFieldValueModel'
          dateOfBirth:
            type: string
            format: date
          educationModelList:
            type: array
            items:
              $ref: '#/components/schemas/EducationModel'
          educationStr:
            type: string
          email:
            type: string
          employmentModelList:
            type: array
            items:
              $ref: '#/components/schemas/EmploymentModel'
          isInternalCand:
            type: boolean
          isNewCand:
            type: boolean
          languagePreference:
            type: string
          lastupdateuserid:
            type: integer
            format: int32
          name:
            type: string
          notes:
            type: string
          passwordHash:
            type: string
          phone:
            type: string
          positionModel:
            $ref: '#/components/schemas/PositionModel'
          positionName:
            type: string
          recruitId:
            type: integer
            format: int32
          recruiter:
            type: string
          recruiterUserId:
            type: integer
            format: int32
          referrer:
            type: string
          referrerId:
            type: integer
            format: int32
          salaryAmount:
            type: integer
            format: int32
          salaryCurrencyCode:
            type: string
          score:
            type: number
            format: double
          skillModelList:
            type: array
            items:
              $ref: '#/components/schemas/SkillUserModel'
          source:
            type: string
          status:
            type: string
          statusid:
            type: integer
            format: int32
          summaryByCandidate:
            type: string
          systemReco:
            type: string
          systemRecoHelp:
            type: string
          templateId:
            type: integer
            format: int32
          timezone:
            type: string
          trainingAccess:
            type: boolean
          updatedOn:
            $ref: '#/components/schemas/Timestamp'
          userId:
            type: integer
            format: int32
          verificationCode:
            type: integer
            format: int32
          verified:
            type: string
          workflowId:
            type: integer
            format: int32
          workflowModel:
            $ref: '#/components/schemas/WorkflowModel'
          workflowName:
            type: string
        title: CandidateModel
      CandidateStatusModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          colorCode:
            type: string
          internalCode:
            type: string
          noOfCandidates:
            type: string
          sequence:
            type: integer
            format: int32
          shareStatus:
            type: string
          statusId:
            type: integer
            format: int32
          statusValue:
            type: string
          totalCandidates:
            type: string
        title: CandidateStatusModel
      CertificationModel:
        type: object
        properties:
          CertificationNumber:
            type: string
          authority:
            type: string
          candidateId:
            type: integer
            format: int32
          certificationId:
            type: integer
            format: int64
          certificationNumber:
            type: string
          cid:
            type: integer
            format: int32
          comments:
            type: string
          createUserId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          expireDate:
            type: string
            format: date
          issueDate:
            type: string
            format: date
          issueState:
            type: string
          type:
            type: string
          userId:
            type: integer
            format: int32
          validState:
            type: string
        title: CertificationModel
      ContactModel:
        type: object
        properties:
          addressModelList:
            type: array
            items:
              $ref: '#/components/schemas/AddressModel'
          candidateId:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          contactType:
            type: string
          contactid:
            type: integer
            format: int32
          createuserid:
            type: integer
            format: int32
          dateOfBirth:
            type: string
            format: date
          email1:
            type: string
          gender:
            type: string
          lastName:
            type: string
          name:
            type: string
          notes:
            type: string
          otherRelationToUser:
            type: string
          phone1:
            type: string
          phone1type:
            type: string
          phone2:
            type: string
          phone2type:
            type: string
          phone3:
            type: string
          phone3type:
            type: string
          relationToUser:
            type: string
          status:
            type: string
          taxNumber:
            type: string
          userId:
            type: integer
            format: int32
        title: ContactModel
      CountryModel:
        type: object
        properties:
          countryId:
            type: integer
            format: int32
          countryName:
            type: string
          iso2:
            type: string
        title: CountryModel
      CurrencyModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          currencyCode:
            type: string
          currencyId:
            type: integer
            format: int32
          currencyName:
            type: string
        title: CurrencyModel
      CustomFieldGroupModel:
        type: object
        properties:
          access:
            type: string
          cfgroupid:
            type: integer
            format: int32
          cfgroupname:
            type: string
          cid:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          hasCustomFields:
            type: boolean
          layout:
            type: string
          objectType:
            type: string
          sequence:
            type: integer
            format: int32
          usergroupid:
            type: integer
            format: int32
        title: CustomFieldGroupModel
      CustomFieldModel:
        type: object
        properties:
          access:
            type: string
          candidateAccess:
            type: string
          cfcode:
            type: string
          cfgroupid:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          customFieldGroupModel:
            $ref: '#/components/schemas/CustomFieldGroupModel'
          customFieldId:
            type: integer
            format: int32
          customFieldName:
            type: string
          customFieldStyleModel:
            $ref: '#/components/schemas/CustomFieldStyleModel'
          customFieldType:
            type: string
          customFieldValueModel:
            $ref: '#/components/schemas/CustomFieldValueModel'
          customFieldValueModelList:
            type: array
            items:
              $ref: '#/components/schemas/CustomFieldValueModel'
          defaultValue:
            type: string
          fieldType:
            type: string
          helpText:
            type: string
          integrationTypeId:
            type: integer
            format: int32
          mandatory:
            type: integer
            format: int32
          masked:
            type: integer
            format: int32
          objectAccessModel:
            type: array
            items:
              $ref: '#/components/schemas/ObjectAccessModel'
          objectType:
            type: string
          opValues:
            type: string
          readAccessTypeCode:
            type: string
          readUserGroupId:
            type: integer
            format: int32
          sequence:
            type: integer
            format: int32
          style:
            type: string
          userAccess:
            type: string
          userGroupId:
            type: integer
            format: int32
        title: CustomFieldModel
      CustomFieldStyleModel:
        type: object
        properties:
          bold:
            type: string
          color:
            type: string
          italic:
            type: string
        title: CustomFieldStyleModel
      CustomFieldValueModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          customFieldId:
            type: integer
            format: int32
          customFieldObjectId:
            type: integer
            format: int32
          customFieldValue:
            type: string
          customFieldValueId:
            type: integer
            format: int32
          customfieldName:
            type: string
        title: CustomFieldValueModel
      CustomTableColumnModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          columnCode:
            type: string
          columnHeader:
            type: string
          columnType:
            type: string
          createts:
            $ref: '#/components/schemas/Timestamp'
          ctColumnId:
            type: integer
            format: int32
          customFieldStyleModel:
            $ref: '#/components/schemas/CustomFieldStyleModel'
          customTableId:
            type: integer
            format: int32
          fieldType:
            type: string
          helpText:
            type: string
          mandatory:
            type: integer
            format: int32
          masked:
            type: integer
            format: int32
          optionValues:
            type: string
          sequence:
            type: integer
            format: int32
          style:
            type: string
        title: CustomTableColumnModel
      CustomTableColumnValueModel:
        type: object
        properties:
          candidateId:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          colType:
            type: string
          colValue:
            type: string
          createUserId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          ctColumnModel:
            $ref: '#/components/schemas/CustomTableColumnModel'
          ctValueId:
            type: integer
            format: int32
          ctcValueId:
            type: integer
            format: int32
          ctcolumnid:
            type: integer
            format: int32
          customTableId:
            type: integer
            format: int32
          userid:
            type: integer
            format: int32
          value:
            type: string
        title: CustomTableColumnValueModel
      CustomTableModel:
        type: object
        properties:
          candidateAccess:
            type: string
          cid:
            type: integer
            format: int32
          createUserModel:
            $ref: '#/components/schemas/UserModel'
          createts:
            $ref: '#/components/schemas/Timestamp'
          ctColumnList:
            type: array
            items:
              $ref: '#/components/schemas/CustomTableColumnModel'
          ctValueList:
            type: array
            items:
              $ref: '#/components/schemas/CustomTableValueModel'
          customTableId:
            type: integer
            format: int32
          helpText:
            type: string
          objectType:
            type: string
          readAccess:
            type: string
          readUserGroupId:
            type: integer
            format: int32
          readUserGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
          sequence:
            type: integer
            format: int32
          tableName:
            type: string
          userAccess:
            type: string
          writeAccess:
            type: string
          writeUserGroupId:
            type: integer
            format: int32
          writeUserGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
        title: CustomTableModel
      CustomTableValueModel:
        type: object
        properties:
          candidateId:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          ctColumnValueList:
            type: array
            items:
              $ref: '#/components/schemas/CustomTableColumnValueModel'
          ctValueId:
            type: integer
            format: int32
          customTableId:
            type: integer
            format: int32
          userId:
            type: integer
            format: int32
          userModel:
            $ref: '#/components/schemas/UserViewModel'
        title: CustomTableValueModel
      DepartmentModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          departmentCode:
            type: string
          departmentId:
            type: integer
            format: int32
          departmentLabel:
            type: string
          deptHead:
            type: integer
            format: int32
          deptHeadName:
            type: string
          description:
            type: string
          name:
            type: string
          noOfEmployees:
            type: integer
            format: int32
          parentDepartmentId:
            type: integer
            format: int32
          parentDepartmentName:
            type: string
          userModel:
            $ref: '#/components/schemas/UserViewModel'
        title: DepartmentModel
      DynaFormSlimModel:
        type: object
        properties:
          anonymous:
            type: integer
            format: int32
          attemptLimit:
            type: string
          availability:
            type: string
          cid:
            type: integer
            format: int32
          createUserModel:
            $ref: '#/components/schemas/UserModel'
          createUserViewModel:
            $ref: '#/components/schemas/UserViewModel'
          createts:
            $ref: '#/components/schemas/Timestamp'
          dataFlow:
            type: string
          description:
            type: string
          dynaFormCode:
            type: string
          dynamicFormId:
            type: integer
            format: int32
          formType:
            type: string
          layout:
            type: string
          mappedEntity:
            type: string
          name:
            type: string
          presentationStyle:
            type: string
          publicSummary:
            type: boolean
          secSequence:
            type: string
          showCorrect:
            type: boolean
          status:
            type: string
          thresholdScore:
            type: number
            format: double
          timeLimit:
            type: integer
            format: int32
          updatets:
            $ref: '#/components/schemas/Timestamp'
          userGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
        title: DynaFormSlimModel
      EducationModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          city:
            type: string
          countryId:
            type: integer
            format: int32
          course:
            type: string
          createts:
            $ref: '#/components/schemas/Timestamp'
          degree:
            type: string
          degreeId:
            type: integer
            format: int32
          degreeType:
            type: string
          educationId:
            type: integer
            format: int32
          endDate:
            type: string
            format: date
          expirationDate:
            type: string
            format: date
          gpa:
            type: string
          graduation:
            type: integer
            format: int32
          institution:
            type: string
          institutionId:
            type: integer
            format: int32
          isHighest:
            type: integer
            format: int32
          profileid:
            type: integer
            format: int32
          recruitid:
            type: integer
            format: int32
          startDate:
            type: string
            format: date
          state:
            type: string
          userId:
            type: integer
            format: int32
        title: EducationModel
      EmploymentModel:
        type: object
        properties:
          SOCCode:
            type: string
          cid:
            type: integer
            format: int32
          city:
            type: string
          countryId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          custAppId:
            type: integer
            format: int32
          customFieldModelList:
            type: array
            items:
              $ref: '#/components/schemas/CustomFieldModel'
          department:
            type: string
          duties:
            type: string
          empId:
            type: integer
            format: int32
          employerName:
            type: string
          employerTypeBus:
            type: string
          employmentType:
            type: string
          endDate:
            type: string
            format: date
          naicscode:
            type: string
          position:
            type: string
          recruitid:
            type: integer
            format: int32
          soccode:
            type: string
          startDate:
            type: string
            format: date
          state:
            type: string
          userId:
            type: integer
            format: int32
        title: EmploymentModel
      FinancialModel:
        type: object
        properties:
          AmountType:
            type: string
          amountChange:
            type: number
            format: double
          amountType:
            type: string
          cid:
            type: integer
            format: int32
          compensationType:
            type: string
          createUserId:
            type: integer
            format: int32
          currencyCode:
            type: string
          customFieldModelList:
            type: array
            items:
              $ref: '#/components/schemas/CustomFieldModel'
          effectivedate:
            type: string
            format: date
          enddate:
            type: string
            format: date
          financialId:
            type: integer
            format: int32
          financialType:
            type: string
          fincode:
            type: string
          guid:
            type: string
          notes:
            type: string
          period:
            type: string
          projectId:
            type: integer
            format: int32
          status:
            type: string
          userId:
            type: integer
            format: int32
          value:
            type: number
            format: double
        title: FinancialModel
      HRCalendarModel:
        type: object
        properties:
          calendarId:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          colorCode:
            type: string
          createUserId:
            type: integer
            format: int32
          createUserViewModel:
            $ref: '#/components/schemas/UserViewModel'
          createts:
            $ref: '#/components/schemas/Timestamp'
          name:
            type: string
        title: HRCalendarModel
      LeaveModel:
        type: object
        required:
          - date
        properties:
          createUserViewModel:
            $ref: '#/components/schemas/UserViewModel'
          date:
            type: string
            description: Date of the leave.
            format: date
          description:
            type: string
            description: Description for the leave.
          endDateMeridiem:
            type: string
          meridiem:
            type: string
          numberOfDays:
            type: integer
            description: Number of days for which leave is requested.
            format: int32
          ptoPolicyModel:
            $ref: '#/components/schemas/PtoPolicyModel'
          totalLeaveDays:
            type: number
            description: Total days of leave.
            format: double
          totalLeaveHours:
            type: number
            description: Total hours of leave.
            format: double
          userModel:
            $ref: '#/components/schemas/UserModel'
        title: LeaveModel
      LocationModel:
        type: object
        properties:
          address:
            type: string
          addressModelList:
            type: array
            items:
              $ref: '#/components/schemas/AddressModel'
          cid:
            type: integer
            format: int32
          createuserid:
            type: integer
            format: int32
          lattitude:
            type: string
          locationCode:
            type: string
          locationDescription:
            type: string
          locationId:
            type: integer
            format: int32
          locationLabel:
            type: string
          locationName:
            type: string
          locationType:
            type: string
          locationUID:
            type: string
          longitude:
            type: string
          parentLocationId:
            type: integer
            format: int32
          status:
            type: string
          workingDays:
            type: string
        title: LocationModel
      ObjectAccessModel:
        type: object
        properties:
          accessCode:
            type: string
          atchfolderid:
            type: integer
            format: int32
          atchid:
            type: integer
            format: int32
          cfid:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          createTimestamp:
            $ref: '#/components/schemas/Timestamp'
          createUserId:
            type: integer
            format: int32
          departmentId:
            type: integer
            format: int32
          departmentModel:
            $ref: '#/components/schemas/DepartmentModel'
          locationId:
            type: integer
            format: int32
          locationModel:
            $ref: '#/components/schemas/LocationModel'
          objectAccessId:
            type: integer
            format: int32
          obtype:
            type: string
          userGroupId:
            type: integer
            format: int32
          userGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
          userViewModel:
            $ref: '#/components/schemas/UserViewModel'
          userid:
            type: integer
            format: int32
        title: ObjectAccessModel
      PositionApprovalLevelModel:
        type: object
        properties:
          approvalId:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          flowId:
            type: integer
            format: int32
          levelSequence:
            type: integer
            format: int32
          relationType:
            type: string
          userGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
        title: PositionApprovalLevelModel
      PositionModel:
        type: object
        properties:
          accessLevel:
            type: string
          applicationDueDate:
            type: string
            format: date
          applicationFormId:
            type: integer
            format: int32
          approvalFlowId:
            type: integer
            format: int32
          approvalStatus:
            type: string
          assessmentFormId:
            type: integer
            format: int32
          assessmentTemplateId:
            type: integer
            format: int32
          candidatePositionModelList:
            type: array
            items:
              $ref: '#/components/schemas/CandidateApplicationsModel'
          cid:
            type: integer
            format: int32
          count:
            type: integer
            format: int32
          createDate:
            type: string
            format: date
          createUserId:
            type: integer
            format: int32
          customLocation:
            type: string
          dateClose:
            type: string
            format: date
          departmentId:
            type: integer
            format: int32
          description:
            type: string
          funnelId:
            type: integer
            format: int64
          hiringManagerId:
            type: integer
            format: int32
          htmlTemplate:
            type: string
          isRecommended:
            type: boolean
          lastUpdatets:
            type: string
            format: date
          lastupdateuserid:
            type: integer
            format: int32
          locationModel:
            $ref: '#/components/schemas/LocationModel'
          locationid:
            type: integer
            format: int32
          name:
            type: string
          positionApprovalLevelList:
            type: array
            items:
              $ref: '#/components/schemas/PositionApprovalLevelModel'
          positionUID:
            type: string
          positionid:
            type: integer
            format: int32
          profileModel:
            $ref: '#/components/schemas/UserProfileModel'
          profileid:
            type: integer
            format: int32
          projectModel:
            $ref: '#/components/schemas/ProjectModel'
          projectid:
            type: integer
            format: int32
          recommended:
            type: boolean
          recruiterId:
            type: integer
            format: int32
          recruiterModel:
            $ref: '#/components/schemas/UserViewModel'
          requestApprovalId:
            type: integer
            format: int32
          requirements:
            type: string
          responsibilities:
            type: string
          seoUrl:
            type: string
          status:
            type: string
          totalcandidate:
            type: integer
            format: int32
          userName:
            type: string
          userViewModel:
            $ref: '#/components/schemas/UserViewModel'
          userapprovalList:
            type: array
            items:
              $ref: '#/components/schemas/UserPositionApprovalModel'
          id:
            type: integer
            format: int32
        title: PositionModel
      ProjectGroupModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          groupDesc:
            type: string
          groupName:
            type: string
          pgroupid:
            type: integer
            format: int32
        title: ProjectGroupModel
      ProjectModel:
        type: object
        properties:
          Probability:
            type: integer
            format: int32
          account:
            type: integer
            format: int32
          accountModel:
            $ref: '#/components/schemas/AccountModel'
          accountName:
            type: string
          billing_type:
            type: string
          cid:
            type: integer
            format: int32
          contactPerson:
            type: integer
            format: int32
          contactPersonName:
            type: string
          createts:
            $ref: '#/components/schemas/Timestamp'
          createuserid:
            type: integer
            format: int32
          endDate:
            type: string
            format: date
          groupName:
            type: string
          industry:
            type: string
          lastupdateuserid:
            type: integer
            format: int32
          locationid:
            type: integer
            format: int32
          pgroupid:
            type: integer
            format: int32
          pmMail:
            type: string
          probability:
            type: integer
            format: int32
          projProbability:
            type: integer
            format: int32
          projStatus:
            type: string
          projectDesc:
            type: string
          projectGroupModel:
            $ref: '#/components/schemas/ProjectGroupModel'
          projectId:
            type: integer
            format: int32
          projectName:
            type: string
          puid:
            type: string
          reportMethod:
            type: string
          shortCode:
            type: string
          startDate:
            type: string
            format: date
          status:
            type: string
          statusValue:
            type: string
          userModel:
            $ref: '#/components/schemas/UserViewModel'
          userModelList:
            type: array
            items:
              $ref: '#/components/schemas/UserModel'
        title: ProjectModel
      PtoPolicyApprovalFlowModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          description:
            type: string
          flowId:
            type: integer
            format: int32
          flowName:
            type: string
          ptoPolicyApprovalModelList:
            type: array
            items:
              $ref: '#/components/schemas/PtoPolicyApprovalModel'
          ptoPolicyList:
            type: array
            items:
              type: string
        title: PtoPolicyApprovalFlowModel
      PtoPolicyApprovalModel:
        type: object
        properties:
          approvalId:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          flowId:
            type: integer
            format: int32
          levelSequence:
            type: integer
            format: int32
          relationType:
            type: string
          skippable:
            type: integer
            format: int32
          userGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
        title: PtoPolicyApprovalModel
      PtoPolicyChainModel:
        type: object
        properties:
          chainDesc:
            type: string
          chainId:
            type: integer
            format: int32
          chainName:
            type: string
          cid:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          hasPtoPolicies:
            type: boolean
        title: PtoPolicyChainModel
      PtoPolicyModel:
        type: object
        required:
          - ptoPolicyId
        properties:
          accrualRateAnnual:
            type: number
            format: float
          accrualRateAnnualUnit:
            type: number
            format: double
          accrualRateHours:
            type: number
            format: float
          accrualRateUnit:
            type: number
            format: double
          accrualThresholdWeeks:
            type: integer
            format: int32
          accrualTime:
            type: integer
            format: int32
          accrualTimeSpan:
            type: string
          accrualtype:
            type: string
          allowAccrualRateOverride:
            type: integer
            format: int32
          allowRequestBeyondBal:
            type: integer
            format: int32
          applicability:
            type: integer
            format: int32
          bonus:
            type: number
            format: float
          bonusMax:
            type: number
            format: float
          carryoverDate:
            type: string
            format: date
          carryoverExpirationQuantity:
            type: integer
            format: int32
          carryoverExpirationUnit:
            type: string
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          customIcon:
            type: string
          daysDefinition:
            type: string
          description:
            type: string
          effectiveDate:
            type: string
            format: date
          expirationDate:
            type: string
            format: date
          halfDayAllowed:
            type: integer
            format: int32
          hasAssignment:
            type: boolean
          icon:
            type: string
          isAccrued:
            type: string
          lastRun:
            type: string
            format: date
          leaveType:
            type: string
          leaveYearStart:
            type: string
          leaveYearStartDate:
            type: string
            format: date
          nextRunDate:
            type: string
            format: date
          paid:
            type: integer
            format: int32
          policyName:
            type: string
          policycondition:
            type: string
          prorated:
            type: integer
            format: int32
          ptoPolicyApprovalFlowModel:
            $ref: '#/components/schemas/PtoPolicyApprovalFlowModel'
          ptoPolicyChainModel:
            $ref: '#/components/schemas/PtoPolicyChainModel'
          ptoPolicyChainSeqId:
            type: integer
            format: int32
          ptoPolicyId:
            type: integer
            format: int32
          rollOverMax:
            type: number
            format: double
          rollOverPercentage:
            type: number
            format: double
          showInCalendar:
            type: integer
            format: int32
          tenureThreshold:
            type: number
            format: float
          thresholdQuantity:
            type: integer
            format: int32
          thresholdUnit:
            type: string
          unit:
            type: string
        title: PtoPolicyModel
      SkillModel:
        type: object
        properties:
          assessmentModel:
            $ref: '#/components/schemas/AssessmentModel'
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          createts:
            type: string
            format: date
          description:
            type: string
          sequence:
            type: integer
            format: int32
          skillCode:
            type: string
          skillId:
            type: integer
            format: int32
          skillTypeModel:
            $ref: '#/components/schemas/SkillTypeModel'
          skillTypeName:
            type: string
          status:
            type: string
          userSkillLevel:
            type: number
            format: float
        title: SkillModel
      SkillTypeModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          createts:
            type: string
            format: date
          skillTypeDesc:
            type: string
          skillTypeId:
            type: integer
            format: int32
          skillTypeName:
            type: string
          skillViewModelList:
            type: array
            items:
              $ref: '#/components/schemas/SkillViewModel'
        title: SkillTypeModel
      SkillUserModel:
        type: object
        properties:
          candidateid:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          dateOfLastUse:
            type: string
            format: date
          description:
            type: string
          lastUpdateUserModel:
            $ref: '#/components/schemas/UserModel'
          level:
            type: number
            format: float
          performancelevel:
            type: number
            format: float
          skillAcquireDate:
            type: string
            format: date
          skillCounsellor:
            type: boolean
          skillId:
            type: integer
            format: int32
          skillModel:
            $ref: '#/components/schemas/SkillModel'
          skillUserId:
            type: integer
            format: int32
          status:
            type: string
          targetLevel:
            type: number
            format: float
          targetLevelCreateUserId:
            type: integer
            format: int32
          targetLevelCreatets:
            $ref: '#/components/schemas/Timestamp'
          userId:
            type: integer
            format: int32
          weightage:
            type: number
            format: float
          yearsOfExperience:
            type: integer
            format: int32
        title: SkillUserModel
      SkillViewModel:
        type: object
        properties:
          average:
            type: number
            format: double
          cid:
            type: integer
            format: int32
          description:
            type: string
          scoreMax:
            type: number
            format: double
          scoreName:
            type: string
          scoreTemplateId:
            type: integer
            format: int32
          skillCode:
            type: string
          skillId:
            type: integer
            format: int32
          skillTypeId:
            type: integer
            format: int32
          skillTypeName:
            type: string
          socreMin:
            type: number
            format: double
          status:
            type: string
          userCount:
            type: integer
            format: int32
        title: SkillViewModel
      StateCountryModel:
        type: object
        properties:
          countryId:
            type: integer
            format: int32
          stateCode:
            type: string
          stateId:
            type: integer
            format: int32
          stateName:
            type: string
        title: StateCountryModel
      Timestamp:
        type: object
        properties:
          date:
            type: integer
            format: int32
          hours:
            type: integer
            format: int32
          minutes:
            type: integer
            format: int32
          month:
            type: integer
            format: int32
          nanos:
            type: integer
            format: int32
          seconds:
            type: integer
            format: int32
          time:
            type: integer
            format: int64
          year:
            type: integer
            format: int32
          day:
            type: integer
            format: int32
          timezoneOffset:
            type: integer
            format: int32
        title: Timestamp
      TrainingModel:
        type: object
        properties:
          approvalStatus:
            type: string
          assignedUsersCount:
            type: integer
            format: int32
          attachmentId:
            type: integer
            format: int32
          chargeType:
            type: string
          cid:
            type: integer
            format: int32
          city:
            type: string
          contentMandatory:
            type: integer
            format: int32
          contentURL:
            type: string
          country:
            type: string
          courseName:
            type: string
          createts:
            $ref: '#/components/schemas/Timestamp'
          currencyCode:
            type: string
          description:
            type: string
          dynaFormSlimModel:
            $ref: '#/components/schemas/DynaFormSlimModel'
          endDate:
            type: string
            format: date
          externalSource:
            type: string
          externalTrainingId:
            type: integer
            format: int32
          guid:
            type: string
          hasCertificate:
            type: integer
            format: int32
          hours:
            type: number
            format: double
          institution:
            type: string
          institutionUrl:
            type: string
          isAssignedToCandidate:
            type: integer
            format: int32
          isAssignedToUser:
            type: integer
            format: int32
          isUserAssigned:
            type: boolean
          isactive:
            type: integer
            format: int32
          parentTrainingId:
            type: integer
            format: int32
          price:
            type: number
            format: double
          rating:
            type: number
            format: double
          selfAssign:
            type: integer
            format: int32
          startDate:
            type: string
            format: date
          state:
            type: string
          status:
            type: string
          studyCourse:
            type: string
          thumbnail:
            type: string
          trainingId:
            type: integer
            format: int32
          updateSkillLevel:
            type: integer
            format: int32
          url:
            type: string
          userAssigned:
            type: boolean
          videoUrl:
            type: string
        title: TrainingModel
      UserGroupModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          createuserid:
            type: integer
            format: int32
          description:
            type: string
          functionid:
            type: integer
            format: int32
          membershipGuidance:
            type: string
          updatets:
            $ref: '#/components/schemas/Timestamp'
          usergroupid:
            type: integer
            format: int32
          usergroupname:
            type: string
        title: UserGroupModel
      UserModel:
        type: object
        required:
          - userId
        properties:
          addressModelList:
            type: array
            items:
              $ref: '#/components/schemas/AddressModel'
          adpAssociateOID:
            type: string
          allocation:
            type: number
            format: double
          appleUserIdentifier:
            type: string
          assignments:
            type: string
          awardModelList:
            type: array
            items:
              $ref: '#/components/schemas/AwardModel'
          bankAccountModel:
            $ref: '#/components/schemas/BankAccountModel'
          calWeekPref:
            type: string
          calendarId:
            type: integer
            format: int32
          calendarModel:
            $ref: '#/components/schemas/HRCalendarModel'
          candidateId:
            type: integer
            format: int32
          careerPathwayId:
            type: integer
            format: int32
          cellPhone:
            type: string
          cid:
            type: integer
            format: int32
          countryId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          customFieldValueModelList:
            type: array
            items:
              $ref: '#/components/schemas/CustomFieldValueModel'
          customTableModelList:
            type: array
            items:
              $ref: '#/components/schemas/CustomTableModel'
          departmentModel:
            $ref: '#/components/schemas/DepartmentModel'
          departmentName:
            type: string
          displayFullName:
            type: string
          educationModelList:
            type: array
            items:
              $ref: '#/components/schemas/EducationModel'
          email:
            type: string
          empId:
            type: string
          employmentModelList:
            type: array
            items:
              $ref: '#/components/schemas/EmploymentModel'
          familySuffix:
            type: string
          financialModelList:
            type: array
            items:
              $ref: '#/components/schemas/FinancialModel'
          firstName:
            type: string
          gender:
            type: string
          guid:
            type: string
          hasAccess:
            type: boolean
          hrPortal:
            type: string
          im:
            type: string
          imageName:
            type: string
          isView:
            type: boolean
          jobGrade:
            type: string
          languagePreference:
            type: string
          lastName:
            type: string
          lastUpdateUsername:
            type: string
          lastupdatets:
            type: string
            format: date
          lastupdateuserid:
            type: integer
            format: int32
          licenseModelList:
            type: array
            items:
              $ref: '#/components/schemas/CertificationModel'
          locationModel:
            $ref: '#/components/schemas/LocationModel'
          mfaPreference:
            type: boolean
          mfaSecretKey:
            type: string
          middleName:
            type: string
          namePronunciation:
            type: string
          notifications:
            type: boolean
          paId:
            type: integer
            format: int32
          phone:
            type: string
          position:
            type: string
          prefixSalutation:
            type: string
          profileId:
            type: integer
            format: int32
          profileName:
            type: string
          projectModel:
            $ref: '#/components/schemas/ProjectModel'
          projectModelList:
            type: array
            items:
              $ref: '#/components/schemas/ProjectModel'
          ptoannual:
            type: number
            format: float
          ptobalance:
            type: number
            format: float
          qboPref:
            type: integer
            format: int32
          relativeDate:
            type: string
          reportsToListMap:
            type: object
            additionalProperties:
              type: string
          secondLastName:
            type: string
          shortName:
            type: string
          skillUserModelList:
            type: array
            items:
              $ref: '#/components/schemas/SkillUserModel'
          star:
            type: integer
            format: int32
          status:
            type: string
          stripeId:
            type: string
          supervisorModelList:
            type: array
            items:
              $ref: '#/components/schemas/UserThinModel'
          thumbnail:
            type: string
          timecardPeriodPref:
            type: string
          timezone:
            type: string
          tosVersion:
            type: string
          userCountry:
            type: string
          userDateFormat:
            type: string
          userDateOfBirth:
            type: string
            format: date
          userDisplayName:
            type: string
          userEndDate:
            type: string
            format: date
          userId:
            type: integer
            format: int32
          userNameFormat:
            type: string
          userProfileModel:
            $ref: '#/components/schemas/UserProfileModel'
          userStartDate:
            type: string
            format: date
          userTrainingModelList:
            type: array
            items:
              $ref: '#/components/schemas/UserTrainingModel'
          userType:
            type: string
          view:
            type: boolean
          workerType:
            type: string
          workerTypeModel:
            $ref: '#/components/schemas/WorkerTypeModel'
          workingDays:
            type: string
          userName:
            type: string
        title: UserModel
      UserPositionApprovalModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          positionId:
            type: integer
            format: int32
          position_approval_id:
            type: integer
            format: int32
          status:
            type: string
          userId:
            type: integer
            format: int32
          userViewModel:
            $ref: '#/components/schemas/UserViewModel'
        title: UserPositionApprovalModel
      UserProfileModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          createuserid:
            type: integer
            format: int32
          customFieldValueModelList:
            type: array
            items:
              $ref: '#/components/schemas/CustomFieldValueModel'
          managerProfileId:
            type: integer
            format: int32
          managerProfileName:
            type: string
          orgId:
            type: integer
            format: int32
          profileDescription:
            type: string
          profileId:
            type: integer
            format: int32
          profileName:
            type: string
          profileRequirements:
            type: string
          profileResponsibilities:
            type: string
          salaryBandCurrency:
            type: string
          salaryBandMax:
            type: number
            format: double
          salaryBandMin:
            type: number
            format: double
          objectName:
            type: string
          objectType:
            type: string
          objectid:
            type: integer
            format: int32
        title: UserProfileModel
      UserThinModel:
        type: object
        properties:
          adpAssociateOID:
            type: string
          careerPathwayId:
            type: integer
            format: int32
          cellPhone:
            type: string
          cid:
            type: integer
            format: int32
          countryId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          departmentID:
            type: integer
            format: int32
          displayFullName:
            type: string
          email:
            type: string
          empId:
            type: string
          familySuffix:
            type: string
          firstName:
            type: string
          gender:
            type: string
          guid:
            type: string
          hrPortal:
            type: string
          im:
            type: string
          imageName:
            type: string
          jobGrade:
            type: string
          languagePreference:
            type: string
          lastName:
            type: string
          lastupdatets:
            type: string
            format: date
          lastupdateuserid:
            type: integer
            format: int32
          locationId:
            type: integer
            format: int32
          middleName:
            type: string
          paId:
            type: integer
            format: int32
          passcode:
            type: string
          phone:
            type: string
          position:
            type: string
          prefixSalutation:
            type: string
          profileId:
            type: integer
            format: int32
          ptoannual:
            type: number
            format: float
          ptobalance:
            type: number
            format: float
          relativeDate:
            type: string
          secondLastName:
            type: string
          shortName:
            type: string
          star:
            type: integer
            format: int32
          status:
            type: string
          stripeId:
            type: string
          thumbnail:
            type: string
          timecardPeriodPref:
            type: string
          timezone:
            type: string
          tosVersion:
            type: string
          userDateFormat:
            type: string
          userDisplayName:
            type: string
          userId:
            type: integer
            format: int32
          userNameFormat:
            type: string
          userStartDate:
            type: string
            format: date
          userType:
            type: string
          workerType:
            type: string
          workerTypeModel:
            $ref: '#/components/schemas/WorkerTypeModel'
          userName:
            type: string
        title: UserThinModel
      UserTrainingModel:
        type: object
        properties:
          assessmentScore:
            type: number
            format: double
          assignedByUserId:
            type: integer
            format: int32
          candidateModel:
            $ref: '#/components/schemas/CandidateModel'
          candidateid:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          completionts:
            $ref: '#/components/schemas/Timestamp'
          coordinatorName:
            type: string
          createts:
            $ref: '#/components/schemas/Timestamp'
          dueDate:
            type: string
            format: date
          dynaFormAssignmentId:
            type: integer
            format: int32
          status:
            type: string
          testResult:
            type: string
          trainingCoordinator:
            type: integer
            format: int32
          trainingId:
            type: integer
            format: int32
          trainingModel:
            $ref: '#/components/schemas/TrainingModel'
          traininguserId:
            type: integer
            format: int32
          userModel:
            $ref: '#/components/schemas/UserViewModel'
          userid:
            type: integer
            format: int32
        title: UserTrainingModel
      UserViewModel:
        type: object
        properties:
          adpAssociateOID:
            type: string
          allocation:
            type: number
            format: double
          careerPathwayId:
            type: integer
            format: int32
          cellPhone:
            type: string
          cid:
            type: integer
            format: int32
          countryId:
            type: integer
            format: int32
          createuserid:
            type: integer
            format: int32
          department:
            type: string
          departmentId:
            type: integer
            format: int32
          email:
            type: string
          empId:
            type: string
          firstName:
            type: string
          gender:
            type: string
          guid:
            type: string
          hasAccess:
            type: integer
            format: int32
          im:
            type: string
          imageName:
            type: string
          jobTitle:
            type: string
          lastName:
            type: string
          location:
            type: string
          locationId:
            type: integer
            format: int32
          name:
            type: string
          notes:
            type: string
          phone:
            type: string
          profileId:
            type: integer
            format: int32
          profileName:
            type: string
          shortName:
            type: string
          star:
            type: integer
            format: int32
          status:
            type: string
          thumbnail:
            type: string
          timezone:
            type: string
          userDateFormat:
            type: string
          userDateOfBirth:
            type: string
            format: date
          userEndDate:
            type: string
            format: date
          userId:
            type: integer
            format: int32
          userStartDate:
            type: string
            format: date
          userType:
            type: string
          workerType:
            type: string
          id:
            type: integer
            format: int32
        title: UserViewModel
      WorkerTypeModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          code:
            type: string
          createuserid:
            type: integer
            format: int32
          description:
            type: string
          wtid:
            type: integer
            format: int32
        title: WorkerTypeModel
      WorkflowModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          createUser:
            type: integer
            format: int32
          createUserModel:
            $ref: '#/components/schemas/UserViewModel'
          createts:
            $ref: '#/components/schemas/Timestamp'
          description:
            type: string
          duration:
            type: string
          objectType:
            type: string
          shortcut:
            type: boolean
          status:
            type: string
          visibility:
            type: string
          workflowId:
            type: integer
            format: int32
          workflowName:
            type: string
          workflowType:
            type: string
        title: WorkflowModel
      arrayCustomFields:
        type: object
        items: {}
      CustomFields:
        type: object
        title: ''
        properties:
          customField1:
            type: string
          customField2:
            type: string
          customField3:
            type: string
      AppraisalModel:
        type: object
        properties:
          appraisalId:
            type: integer
            format: int32
          appraisalName:
            type: string
          appraisalType:
            type: string
          candidatePositionId:
            type: integer
            format: int64
          cid:
            type: integer
            format: int32
          completionDate:
            type: string
            format: date
          createUserId:
            type: integer
            format: int32
          createUserModel:
            $ref: '#/components/schemas/UserModel'
          createts:
            type: string
            format: date
          description:
            type: string
          endDate:
            type: string
            format: date
          finalComment:
            type: string
          finalValue:
            type: number
            format: double
          finalValueStr:
            type: string
          managerId:
            type: integer
            format: int32
          managerUserModel:
            $ref: '#/components/schemas/UserModel'
          obtype:
            type: string
          preFinalComment:
            type: string
          preFinalValue:
            type: number
            format: double
          preFinalValueStr:
            type: string
          reviewMode:
            type: string
          saveForLater:
            type: integer
            format: int32
          scoreTemplateId:
            type: integer
            format: int32
          scoreTemplateModel:
            $ref: '#/components/schemas/AssessmentModel'
          showFinalValue:
            type: integer
            format: int32
          showWeightedTotal:
            type: integer
            format: int32
          startDate:
            type: string
            format: date
          status:
            type: string
          statusCode:
            type: string
          userId:
            type: integer
            format: int32
          userModel:
            $ref: '#/components/schemas/UserModel'
          userViewModel:
            $ref: '#/components/schemas/UserViewModel'
          workflowId:
            type: integer
            format: int32
        title: AppraisalModel
      CustomListEntryModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          entryCode:
            type: string
          entryId:
            type: integer
            format: int32
          entryValue:
            type: string
          listId:
            type: integer
            format: int32
        title: CustomListEntryModel
      CustomListModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          customListEntryModel:
            type: array
            items:
              $ref: '#/components/schemas/CustomListEntryModel'
          description:
            type: string
          listId:
            type: integer
            format: int32
          listName:
            type: string
        title: CustomListModel
      DynaFormItemOptionModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          dynaFormItemId:
            type: integer
            format: int32
          optionId:
            type: integer
            format: int32
          optionValue:
            type: string
        title: DynaFormItemOptionModel
      DynaFormSectionAssignmentModel:
        type: object
        properties:
          assigneeRole:
            type: string
          cid:
            type: integer
            format: int32
          completedBy:
            $ref: '#/components/schemas/UserViewModel'
          createts:
            $ref: '#/components/schemas/Timestamp'
          dynaFormSectionAssignId:
            type: integer
            format: int32
          dynamicFormAssignmentModel:
            $ref: '#/components/schemas/DynamicFormAssignmentModel'
          dynamicFormSectionModel:
            $ref: '#/components/schemas/DynamicFormSectionModel'
          status:
            type: string
          userGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
          userViewModel:
            $ref: '#/components/schemas/UserViewModel'
        title: DynaFormSectionAssignmentModel
      DynamicFormAssignmentModel:
        type: object
        properties:
          allowGrader:
            type: boolean
          assessmentScore:
            type: number
            format: double
          assignCandidateModel:
            $ref: '#/components/schemas/CandidateModel'
          assignUserModel:
            $ref: '#/components/schemas/UserModel'
          assignUserViewModel:
            $ref: '#/components/schemas/UserViewModel'
          assignmentId:
            type: integer
            format: int32
          cid:
            type: integer
            format: int32
          createUserModel:
            $ref: '#/components/schemas/UserModel'
          createUserViewModel:
            $ref: '#/components/schemas/UserViewModel'
          createts:
            $ref: '#/components/schemas/Timestamp'
          dueDate:
            type: string
            format: date
          dynaFormModel:
            $ref: '#/components/schemas/DynaFormSlimModel'
          dynaFormSectionAssignmentModel:
            type: array
            items:
              $ref: '#/components/schemas/DynaFormSectionAssignmentModel'
          formSummary:
            type: string
          graderUserModel:
            $ref: '#/components/schemas/UserModel'
          lastupdatets:
            $ref: '#/components/schemas/Timestamp'
          optedOutForEmail:
            type: boolean
          status:
            type: string
          testEndts:
            $ref: '#/components/schemas/Timestamp'
          testResult:
            type: string
          testStartts:
            $ref: '#/components/schemas/Timestamp'
          testTimeStatus:
            type: string
        title: DynamicFormAssignmentModel
      DynamicFormItemModel:
        type: object
        properties:
          attachmentModel:
            $ref: '#/components/schemas/AttachmentModel'
          cid:
            type: integer
            format: int32
          correctFeedback:
            type: string
          createUserId:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          customListModel:
            $ref: '#/components/schemas/CustomListModel'
          dynaFormItemOptionModelList:
            type: array
            items:
              $ref: '#/components/schemas/DynaFormItemOptionModel'
          dynamicFormId:
            type: integer
            format: int32
          dynamicFormItemId:
            type: integer
            format: int32
          expectedValue:
            type: string
          fieldType:
            type: string
          fieldTypeItem:
            type: string
          helpText:
            type: string
          incorrectFeedback:
            type: string
          mandatory:
            type: integer
            format: int32
          mappedEntityItem:
            type: string
          name:
            type: string
          numberingStyle:
            type: string
          optionRandom:
            type: boolean
          optionValues:
            type: string
          sectionId:
            type: integer
            format: int32
          sequence:
            type: integer
            format: int32
          weightage:
            type: number
            format: double
        title: DynamicFormItemModel
      DynamicFormSectionModel:
        type: object
        properties:
          assignee:
            type: string
          assigneeModel:
            $ref: '#/components/schemas/UserModel'
          attachmentModel:
            $ref: '#/components/schemas/AttachmentModel'
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          description:
            type: string
          dynamicFormId:
            type: integer
            format: int32
          dynamicFormItemModelList:
            type: array
            items:
              $ref: '#/components/schemas/DynamicFormItemModel'
          hidden:
            type: boolean
          name:
            type: string
          sectionId:
            type: integer
            format: int32
          sequence:
            type: integer
            format: int32
          totalweightage:
            type: number
            format: double
          userGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
        title: DynamicFormSectionModel
      MailTemplateModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          communicationType:
            type: string
          createUserModel:
            $ref: '#/components/schemas/UserModel'
          createts:
            $ref: '#/components/schemas/Timestamp'
          footerAdditionalInfo:
            type: string
          footerCompanyAddress:
            type: boolean
          footerCompanyLogo:
            type: boolean
          footerContentAlignmnet:
            type: string
          headerAdditionalInfo:
            type: string
          headerCompanyAddress:
            type: boolean
          headerCompanyLogo:
            type: boolean
          headerContentAlignment:
            type: string
          lastupdatets:
            $ref: '#/components/schemas/Timestamp'
          message:
            type: string
          object:
            type: string
          subject:
            type: string
          systemUsage:
            type: string
          templateId:
            type: integer
            format: int32
          title:
            type: string
        title: MailTemplateModel
      PositionStatusModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          defaultStatus:
            type: boolean
          internalStatus:
            type: string
          statusId:
            type: integer
            format: int32
          statusName:
            type: string
        title: PositionStatusModel
      arrayTaskModel:
        type: object
        items:
          $ref: '#/components/schemas/TaskModel'
      TaskModel:
        type: object
        properties:
          appraisalId:
            type: integer
            format: int32
          assgnCandModel:
            $ref: '#/components/schemas/CandidateModel'
          assgnUserModel:
            $ref: '#/components/schemas/UserModel'
          assignedUserId:
            type: integer
            format: int32
          ci:
            type: boolean
          createUserId:
            type: integer
            format: int32
          createts:
            type: string
            format: date
          description:
            type: string
          dueDate:
            type: string
            format: date
          lastEdit:
            type: string
          launchts:
            $ref: '#/components/schemas/Timestamp'
          phasename:
            type: string
          projectId:
            type: integer
            format: int32
          recruitId:
            type: integer
            format: int32
          relatedDynamicFormAssignmentModel:
            $ref: '#/components/schemas/DynamicFormAssignmentModel'
          releventAppraisalModel:
            $ref: '#/components/schemas/AppraisalModel'
          releventAttachmentModel:
            $ref: '#/components/schemas/AttachmentModel'
          releventUserTrainingModel:
            $ref: '#/components/schemas/UserTrainingModel'
          statusCode:
            type: string
          systemTask:
            type: integer
            format: int32
          taskId:
            type: integer
            format: int32
          taskUID:
            type: integer
            format: int32
          title:
            type: string
          transitionName:
            type: string
          type:
            type: string
          userGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
          userId:
            type: integer
            format: int32
          userModel:
            $ref: '#/components/schemas/UserModel'
          userWorkflowModel:
            $ref: '#/components/schemas/UserWorkflowModel'
          workflowParameterAssignmentModel:
            $ref: '#/components/schemas/WorkflowParameterAssignmentModel'
          workflowStepId:
            type: integer
            format: int64
          workflowStepModel:
            $ref: '#/components/schemas/WorkflowStepModel'
        title: TaskModel
      UserWorkflowModel:
        type: object
        properties:
          assignCandidateModel:
            $ref: '#/components/schemas/CandidateModel'
          assignPositionModel:
            $ref: '#/components/schemas/PositionModel'
          assignUserModel:
            $ref: '#/components/schemas/UserModel'
          cid:
            type: integer
            format: int32
          coordinatorUserViewModel:
            $ref: '#/components/schemas/UserViewModel'
          createTS:
            $ref: '#/components/schemas/Timestamp'
          createUserModel:
            $ref: '#/components/schemas/UserModel'
          launchStatus:
            type: string
          launchts:
            $ref: '#/components/schemas/Timestamp'
          optedOutForEmail:
            type: boolean
          statusCode:
            type: string
          userWorkflowId:
            type: integer
            format: int32
          workflowModel:
            $ref: '#/components/schemas/WorkflowModel'
          workflowProgress:
            type: number
            format: float
          workflowStatus:
            type: string
        title: UserWorkflowModel
      WorkflowParameterAssignmentModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          paramName:
            type: string
          paramValue:
            type: string
          parameterModel:
            $ref: '#/components/schemas/WorkflowParameterModel'
          userWorkflowid:
            type: integer
            format: int32
          waParamId:
            type: integer
            format: int32
          workflowArgId:
            type: integer
            format: int32
        title: WorkflowParameterAssignmentModel
      WorkflowParameterModel:
        type: object
        properties:
          cid:
            type: integer
            format: int32
          createts:
            $ref: '#/components/schemas/Timestamp'
          paramName:
            type: string
          paramType:
            type: string
          workflowArgId:
            type: integer
            format: int32
          workflowId:
            type: integer
            format: int32
        title: WorkflowParameterModel
      WorkflowStepModel:
        type: object
        properties:
          appraisalModel:
            $ref: '#/components/schemas/AppraisalModel'
          assignee:
            type: string
          assigneeModel:
            $ref: '#/components/schemas/UserModel'
          attachmentModel:
            $ref: '#/components/schemas/AttachmentModel'
          cid:
            type: integer
            format: int32
          createUserId:
            type: integer
            format: int32
          dependentStepId:
            type: integer
            format: int32
          dependentStepModel:
            $ref: '#/components/schemas/WorkflowStepModel'
          dueDate:
            type: string
          dynamicFormModel:
            $ref: '#/components/schemas/DynaFormSlimModel'
          fieldToChange:
            type: string
          fromPositionStatusModel:
            $ref: '#/components/schemas/PositionStatusModel'
          mailTemplateModel:
            $ref: '#/components/schemas/MailTemplateModel'
          phaseId:
            type: integer
            format: int64
          relativeTo:
            type: string
          reqApproval:
            type: boolean
          sequence:
            type: integer
            format: int32
          stepDesc:
            type: string
          stepId:
            type: integer
            format: int64
          stepName:
            type: string
          stepType:
            type: string
          toPositionStatusModel:
            $ref: '#/components/schemas/PositionStatusModel'
          trainingModel:
            $ref: '#/components/schemas/TrainingModel'
          transitionName:
            type: string
          userGroupModel:
            $ref: '#/components/schemas/UserGroupModel'
          workflowParameterModel:
            $ref: '#/components/schemas/WorkflowParameterModel'
        title: WorkflowStepModel
    links: {}
    callbacks: {}
    securitySchemes:
      sec0:
        type: apiKey
        in: header
        name: x-api-key
      sec1:
        type: apiKey
        in: header
        name: userid
    requestBodies:
      arrayCustomFields:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/arrayCustomFields'
        description: Custom fields
  x-readme:
    explorer-enabled: true
    proxy-enabled: true
    samples-enabled: true
    headers: []
  security:
    - {}
  _id: 635ba2d0654eb600ab476cbe
konfigCliVersion: 1.38.37
