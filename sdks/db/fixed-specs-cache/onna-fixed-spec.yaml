publishJson:
  company: Onna
  serviceName: false
  sdkName: onna-{language}-sdk
  clientName: Onna
  metaDescription: >-
    Onna enables enterprises to quickly gain business value from their
    unstructured data. Onna's Data Management Platform provides a central
    workflow that spans across today's workplace applications like Slack, Google
    Workspace, Microsoft 365, and more, producing a unified set of actionable
    data. By connecting and unifying disparate data sources, legal and IT teams
    enhance key use cases like eDiscovery, internal investigations, and
    information governance. With teams across North America and Europe, Onna
    supports some of the world's leading companies, including Dropbox,
    Electronic Arts, Lyft, Carvana, and NewsCorp.

    For more information, please visit us at www.onna.com.
  apiStatusUrls: inherit
  homepage: onna.com/
  developerDocumentation: dev.onna.com/api/
  categories:
    - data_management
    - processing
    - data_integration
    - unstructured_data
rawSpecString: |
  components:
    schemas:
      Body_login_oauth_token_post:
        properties:
          client_id:
            description: Unique client ID, generated in the Platform API app.
            title: Client ID
            type: string
          client_secret:
            description: Unique client secret, generated in the Platform API app.
            title: Client Secret
            type: string
          grant_type:
            default: client_credentials
            description: Use the default value.
            title: Grant Type
            type: string
        title: Body_login_oauth_token_post
        type: object
      CreateCustomFieldRequestBody:
        additionalProperties: false
        example:
          name: My custom field
          required: false
          type: keyword
        properties:
          description:
            description: Description
            title: Description
            type: string
          name:
            description: Name
            title: Name
            type: string
          required:
            description: Required
            title: Required
            type: boolean
          type:
            description: Type
            title: Type
            type: string
        required:
          - name
          - type
          - description
          - required
        title: CreateCustomFieldRequestBody
        type: object
      CreateCustomFieldResponseBody:
        example:
          onna_id: cf-my-custom-field-b20696ae9
        properties:
          onna_id:
            description: Alphanumeric unique identifier of the custom field.
            title: Onna Id
            type: string
        required:
          - onna_id
        title: CreateCustomFieldResponseBody
        type: object
      CreateFileBody:
        additionalProperties: false
        example:
          onna_parent_id: da72de92fef04c6a9cc5cfe018fa9cd6
        properties:
          comment:
            description: Comment type of file.
            title: Comment
            type: string
          creation_date:
            description: Date when file was created.
            format: date-time
            title: Creation Date
            type: string
          creator:
            description: User that created the file.
            title: Creator
            type: string
          deleter:
            description: User that deleted the file.
            title: Deleter
            type: string
          deletion_date:
            description: Date when file was deleted.
            format: date-time
            title: Deletion Date
            type: string
          description:
            description: File description.
            title: Description
            type: string
          name:
            description: File name.
            title: Name
            type: string
          onna_parent_id:
            description: The ID of the parent Workspace or Folder.
            title: Parent ID
            type: string
          path:
            description: Path to file, at the origin.
            title: Path
            type: string
          ref:
            description: The Reference Number or ID for the file at the origin.
            title: Reference
            type: string
          share_url:
            description: Link or invite to share file (at origin).
            title: Share URL
            type: string
          status:
            description: 'File status: Deleted, Archived, etc.'
            title: Status
            type: string
          tags:
            description: List of tags associated to the file in the origin.
            items:
              type: string
            maxItems: 1000
            title: Tags
            type: array
          type:
            description: Type of file.
            title: Type
            type: string
          update_date:
            description: Date when the file was last updated.
            format: date-time
            title: Update Date
            type: string
          updater:
            description: The last user to update the file.
            title: Updater
            type: string
          url:
            description: A Unique Resource Locator for the file at the origin.
            title: URL
            type: string
          version:
            description: Version.
            title: Version
            type: string
        required:
          - onna_parent_id
          - ref
          - url
        title: CreateFileBody
        type: object
      CreateFileResponse:
        additionalProperties: false
        properties:
          onna_id:
            description: The ID for the Onna resource.
            title: Onna ID
            type: string
        required:
          - onna_id
        title: CreateFileResponse
        type: object
      CreateFolderRequestBody:
        additionalProperties: false
        example:
          name: My folder
          onna_parent_id: b7c6f55fa54c4a3e821e825bd6262c0f
        properties:
          name:
            description: Display name of the Folder.
            title: Name
            type: string
          onna_parent_id:
            description: The ID of the parent Workspace or Folder.
            title: Parent ID
            type: string
        required:
          - name
          - onna_parent_id
        title: CreateFolderRequestBody
        type: object
      CreateFolderResponseBody:
        additionalProperties: false
        example:
          onna_id: 8a8ead66ba6f4862b922a911dd67c439
        properties:
          onna_id:
            description: Unique identifier for the Folder.
            title: Onna ID
            type: string
        required:
          - onna_id
        title: CreateFolderResponseBody
        type: object
      CreateTicketBody:
        additionalProperties: false
        example:
          name: CS0001401
          onna_parent_id: da72de92fef04c6a9cc5cfe018fa9cd6
          ref: f352dc9387632300d6b0a7da0acb0b60
          url: >-
            https://instance.servicenow.com/api/sn_customerservice/case/f352dc9387632300d6b0a7da0acb0b60
        properties:
          assignee_group:
            description: Assignee group.
            title: Assignee Group
            type: string
          assignees:
            description: List of users assigned to the ticket.
            items:
              type: string
            maxItems: 1000
            title: Assignees
            type: array
          author:
            description: The user that created the ticket.
            title: Author
            type: string
          category:
            description: Category.
            title: Category
            type: string
          comments:
            description: List of messages associated to the ticket.
            items:
              $ref: '#/components/schemas/TicketMessage'
            maxItems: 5000
            title: Comments
            type: array
          creation_date:
            description: Date when the ticket was created.
            format: date-time
            title: Creation Date
            type: string
          description:
            description: Description.
            title: Description
            type: string
          followers:
            description: List of users following the ticket.
            items:
              type: string
            maxItems: 1000
            title: Followers
            type: array
          name:
            description: Title.
            title: Name
            type: string
          onna_parent_id:
            description: The ID of the parent Folder.
            title: Parent ID
            type: string
          priority:
            description: 'Priority: `high`, `medium`, `low`, etc.'
            title: Priority
            type: string
          reactions:
            description: List of reactions.
            items:
              type: string
            maxItems: 1000
            title: Reactions
            type: array
          ref:
            description: The Reference Number or ID for the ticket at the origin.
            title: Reference
            type: string
          requester:
            description: The user that requested the ticket.
            title: Requester
            type: string
          severity:
            description: 'Severity: `high`, `medium`, `low`, etc.'
            title: Severity
            type: string
          status:
            description: 'Ticket status: `open`, `closed`, `archived`, etc.'
            title: Status
            type: string
          subcategory:
            description: Subcategory.
            title: Subcategory
            type: string
          tags:
            description: List of tags associated to the ticket in the origin.
            items:
              type: string
            maxItems: 1000
            title: Tags
            type: array
          type:
            description: Type of ticket.
            title: Type
            type: string
          update_date:
            description: Date when the ticket was last updated.
            format: date-time
            title: Update Date
            type: string
          updater:
            description: The last user to update the ticket.
            title: Updater
            type: string
          url:
            description: A Unique Resource Locator for the ticket at the origin.
            title: URL
            type: string
        required:
          - onna_parent_id
          - ref
          - url
          - name
        title: CreateTicketBody
        type: object
      CreateTicketResponse:
        additionalProperties: false
        properties:
          onna_id:
            description: The ID for the Onna resource.
            title: Onna ID
            type: string
        required:
          - onna_id
        title: CreateTicketResponse
        type: object
      CreateWorkspaceRequestBody:
        additionalProperties: false
        example:
          description: My personal workspace
          name: My workspace
          tags:
            - project-x
            - feature
        properties:
          description:
            description: Short description of the workspace.
            title: Description
            type: string
          name:
            description: Display name of the workspace.
            title: Name
            type: string
          tags:
            description: >-
              Labels attached to the workspace for the purpose of identification
              or to give meta information.
            items:
              type: string
            maxItems: 10000
            title: Tags
            type: array
        required:
          - name
        title: CreateWorkspaceRequestBody
        type: object
      CreateWorkspaceResponseBody:
        example:
          onna_id: ws6f0c5339de42f9964e6afe9bf20469
        properties:
          onna_id:
            description: Alphanumeric unique identifier of the workspace.
            title: Onna ID
            type: string
        required:
          - onna_id
        title: CreateWorkspaceResponseBody
        type: object
      CurrentUser:
        additionalProperties: false
        example:
          account_id: foo
          id: test.user@onna.com
          name: Test
          surname: User
        properties:
          account_id:
            description: The ID of the account to which the user is associated.
            title: Account ID
            type: string
          id:
            description: >-
              Unique identifier of the current user. For most users this will be
              the same as the email.
            title: ID
            type: string
          name:
            description: Name of the authenticated user.
            title: Name
            type: string
          surname:
            description: Surname of the authenticated user.
            title: Surname
            type: string
        required:
          - id
          - account_id
          - name
        title: CurrentUser
        type: object
      CustomFieldPageResponseBody:
        example:
          items:
            - name: My custom field
              onna_id: cf-my-custom-field-b20696ae9
              required: false
              type: keyword
              usage_count: 0
        properties:
          cursor:
            description: The parameter to get the next page.
            title: Cursor
            type: string
          items:
            description: List of results.
            items:
              $ref: '#/components/schemas/CustomFieldResponseBody'
            title: Items
            type: array
        required:
          - items
        title: CustomFieldPageResponseBody
        type: object
      CustomFieldResponseBody:
        additionalProperties: false
        example:
          name: My custom field
          onna_id: cf-my-custom-field-b20696ae9
          required: false
          type: keyword
          usage_count: 0
        properties:
          description:
            description: Description
            title: Description
            type: string
          name:
            description: Name
            title: Name
            type: string
          onna_id:
            description: Alphanumeric unique identifier of the custom field.
            title: Onna Id
            type: string
          required:
            description: Required
            title: Required
            type: boolean
          type:
            description: Type
            title: Type
            type: string
          usage_count:
            description: Usage count
            title: Usage Count
            type: integer
        required:
          - name
          - type
          - description
          - required
          - onna_id
          - usage_count
        title: CustomFieldResponseBody
        type: object
      EnableWorkspaceCustomFieldRequestBody:
        example:
          onna_id: cf-b20696ae9
        properties:
          onna_id:
            description: Alphanumeric unique identifier of the workspace.
            title: Onna ID
            type: string
        required:
          - onna_id
        title: EnableWorkspaceCustomFieldRequestBody
        type: object
      HTTPValidationError:
        properties:
          detail:
            items:
              $ref: '#/components/schemas/ValidationError'
            title: Detail
            type: array
        title: HTTPValidationError
        type: object
      HealthResponseBody:
        additionalProperties: false
        example:
          release_id: 1.0.0
          status: pass
          version: v1
        properties:
          release_id:
            description: Service version.
            title: Release Id
            type: string
          status:
            description: Result of the status check as 'pass' or 'fail'.
            title: Status
            type: string
          version:
            description: API version.
            title: Version
            type: string
        required:
          - status
          - version
          - release_id
        title: HealthResponseBody
        type: object
      JsonApiErrors401:
        additionalProperties: false
        description: 'JSON:API "error object": https://jsonapi.org/format/#errors'
        example:
          errors:
            - code: XX401_unauthorized
              id: 1bd5c180-d2c5-4bfb-9444-a3a19dd9926b
              status: '401'
        properties:
          code:
            description: An application-specific error code, expressed as a string value.
            title: Code
            type: string
          detail:
            description: >-
              A human-readable explanation specific to this occurrence of the
              problem.
            title: Detail
            type: string
          id:
            description: A unique identifier for this particular occurrence of the problem.
            title: ID
            type: string
          links:
            description: Leads to further details about this occurrence of the problem.
            title: Links
            type: object
          source:
            description: An object containing references to the source of the error.
            title: Source
            type: object
          status:
            description: >-
              The HTTP status code applicable to this problem, expressed as a
              string value.
            title: Status
            type: string
          title:
            description: >-
              A short, human-readable summary of the problem that SHOULD NOT
              change from occurrence to occurrence of the problem.
            title: Title
            type: string
        required:
          - status
          - code
        title: JsonApiErrors401
        type: object
      JsonApiErrors403:
        additionalProperties: false
        description: 'JSON:API "error object": https://jsonapi.org/format/#errors'
        example:
          errors:
            - code: XX403_forbidden
              id: 1bd5c180-d2c5-4bfb-9444-a3a19dd9926b
              status: '403'
        properties:
          code:
            description: An application-specific error code, expressed as a string value.
            title: Code
            type: string
          detail:
            description: >-
              A human-readable explanation specific to this occurrence of the
              problem.
            title: Detail
            type: string
          id:
            description: A unique identifier for this particular occurrence of the problem.
            title: ID
            type: string
          links:
            description: Leads to further details about this occurrence of the problem.
            title: Links
            type: object
          source:
            description: An object containing references to the source of the error.
            title: Source
            type: object
          status:
            description: >-
              The HTTP status code applicable to this problem, expressed as a
              string value.
            title: Status
            type: string
          title:
            description: >-
              A short, human-readable summary of the problem that SHOULD NOT
              change from occurrence to occurrence of the problem.
            title: Title
            type: string
        required:
          - status
          - code
        title: JsonApiErrors403
        type: object
      JsonApiErrors404:
        additionalProperties: false
        description: 'JSON:API "error object": https://jsonapi.org/format/#errors'
        example:
          errors:
            - code: XX404_not_found
              id: 1bd5c180-d2c5-4bfb-9444-a3a19dd9926b
              status: '404'
        properties:
          code:
            description: An application-specific error code, expressed as a string value.
            title: Code
            type: string
          detail:
            description: >-
              A human-readable explanation specific to this occurrence of the
              problem.
            title: Detail
            type: string
          id:
            description: A unique identifier for this particular occurrence of the problem.
            title: ID
            type: string
          links:
            description: Leads to further details about this occurrence of the problem.
            title: Links
            type: object
          source:
            description: An object containing references to the source of the error.
            title: Source
            type: object
          status:
            description: >-
              The HTTP status code applicable to this problem, expressed as a
              string value.
            title: Status
            type: string
          title:
            description: >-
              A short, human-readable summary of the problem that SHOULD NOT
              change from occurrence to occurrence of the problem.
            title: Title
            type: string
        required:
          - status
          - code
        title: JsonApiErrors404
        type: object
      JsonApiErrors405:
        additionalProperties: false
        description: 'JSON:API "error object": https://jsonapi.org/format/#errors'
        example:
          errors:
            - code: XX405_method_not_allowed
              id: 1bd5c180-d2c5-4bfb-9444-a3a19dd9926b
              status: '405'
        properties:
          code:
            description: An application-specific error code, expressed as a string value.
            title: Code
            type: string
          detail:
            description: >-
              A human-readable explanation specific to this occurrence of the
              problem.
            title: Detail
            type: string
          id:
            description: A unique identifier for this particular occurrence of the problem.
            title: ID
            type: string
          links:
            description: Leads to further details about this occurrence of the problem.
            title: Links
            type: object
          source:
            description: An object containing references to the source of the error.
            title: Source
            type: object
          status:
            description: >-
              The HTTP status code applicable to this problem, expressed as a
              string value.
            title: Status
            type: string
          title:
            description: >-
              A short, human-readable summary of the problem that SHOULD NOT
              change from occurrence to occurrence of the problem.
            title: Title
            type: string
        required:
          - status
          - code
        title: JsonApiErrors405
        type: object
      JsonApiErrors412:
        additionalProperties: false
        description: 'JSON:API "error object": https://jsonapi.org/format/#errors'
        example:
          errors:
            - code: XX412_precondition_failed
              id: 1bd5c180-d2c5-4bfb-9444-a3a19dd9926b
              status: '412'
        properties:
          code:
            description: An application-specific error code, expressed as a string value.
            title: Code
            type: string
          detail:
            description: >-
              A human-readable explanation specific to this occurrence of the
              problem.
            title: Detail
            type: string
          id:
            description: A unique identifier for this particular occurrence of the problem.
            title: ID
            type: string
          links:
            description: Leads to further details about this occurrence of the problem.
            title: Links
            type: object
          source:
            description: An object containing references to the source of the error.
            title: Source
            type: object
          status:
            description: >-
              The HTTP status code applicable to this problem, expressed as a
              string value.
            title: Status
            type: string
          title:
            description: >-
              A short, human-readable summary of the problem that SHOULD NOT
              change from occurrence to occurrence of the problem.
            title: Title
            type: string
        required:
          - status
          - code
        title: JsonApiErrors412
        type: object
      JsonApiErrors422:
        additionalProperties: false
        description: 'JSON:API "error object": https://jsonapi.org/format/#errors'
        example:
          errors:
            - code: XX422_unprocessable_entity
              id: 1bd5c180-d2c5-4bfb-9444-a3a19dd9926b
              status: '422'
        properties:
          code:
            description: An application-specific error code, expressed as a string value.
            title: Code
            type: string
          detail:
            description: >-
              A human-readable explanation specific to this occurrence of the
              problem.
            title: Detail
            type: string
          id:
            description: A unique identifier for this particular occurrence of the problem.
            title: ID
            type: string
          links:
            description: Leads to further details about this occurrence of the problem.
            title: Links
            type: object
          source:
            description: An object containing references to the source of the error.
            title: Source
            type: object
          status:
            description: >-
              The HTTP status code applicable to this problem, expressed as a
              string value.
            title: Status
            type: string
          title:
            description: >-
              A short, human-readable summary of the problem that SHOULD NOT
              change from occurrence to occurrence of the problem.
            title: Title
            type: string
        required:
          - status
          - code
        title: JsonApiErrors422
        type: object
      JsonApiErrors500:
        additionalProperties: false
        description: 'JSON:API "error object": https://jsonapi.org/format/#errors'
        example:
          errors:
            - code: XX500_internal_server_error
              id: 1bd5c180-d2c5-4bfb-9444-a3a19dd9926b
              status: '500'
        properties:
          code:
            description: An application-specific error code, expressed as a string value.
            title: Code
            type: string
          detail:
            description: >-
              A human-readable explanation specific to this occurrence of the
              problem.
            title: Detail
            type: string
          id:
            description: A unique identifier for this particular occurrence of the problem.
            title: ID
            type: string
          links:
            description: Leads to further details about this occurrence of the problem.
            title: Links
            type: object
          source:
            description: An object containing references to the source of the error.
            title: Source
            type: object
          status:
            description: >-
              The HTTP status code applicable to this problem, expressed as a
              string value.
            title: Status
            type: string
          title:
            description: >-
              A short, human-readable summary of the problem that SHOULD NOT
              change from occurrence to occurrence of the problem.
            title: Title
            type: string
        required:
          - status
          - code
        title: JsonApiErrors500
        type: object
      OauthTokenResponse:
        example:
          access_token: <BEARER_TOKEN>
          expires_in: 3599
          token_type: bearer
        properties:
          access_token:
            title: Access Token
            type: string
          expires_in:
            default: 0
            title: Expires In
            type: integer
          token_type:
            title: Token Type
            type: string
        required:
          - access_token
          - token_type
        title: OauthTokenResponse
        type: object
      PageItemResponseBody:
        properties:
          name:
            default: ''
            description: Item name.
            title: Name
            type: string
          onna_id:
            description: Item identifier.
            title: Onna Id
            type: string
        required:
          - onna_id
        title: PageItemResponseBody
        type: object
      PageResponseBody:
        properties:
          cursor:
            description: The parameter to get the next page.
            title: Cursor
            type: string
          items:
            description: List of results.
            items:
              $ref: '#/components/schemas/PageItemResponseBody'
            title: Items
            type: array
        required:
          - items
        title: PageResponseBody
        type: object
      ReadFileResponse:
        additionalProperties: false
        example:
          onna_parent_id: da72de92fef04c6a9cc5cfe018fa9cd6
        properties:
          comment:
            description: Comment type of file.
            title: Comment
            type: string
          creation_date:
            description: Date when file was created.
            format: date-time
            title: Creation Date
            type: string
          creator:
            description: User that created the file.
            title: Creator
            type: string
          deleter:
            description: User that deleted the file.
            title: Deleter
            type: string
          deletion_date:
            description: Date when file was deleted.
            format: date-time
            title: Deletion Date
            type: string
          description:
            description: File description.
            title: Description
            type: string
          extension:
            description: File extension.
            title: Extension
            type: string
          filename:
            description: File name.
            title: Filename
            type: string
          md5:
            description: MD5 hash.
            title: Md5
            type: string
          mime_type:
            description: MIME type of file.
            title: Mime Type
            type: string
          name:
            description: File name.
            title: Name
            type: string
          onna_id:
            description: The ID for the Onna resource.
            title: Onna ID
            type: string
          onna_parent_id:
            description: The ID of the parent Workspace or Folder.
            title: Parent ID
            type: string
          onna_url:
            description: The URL for the Onna resource.
            title: Onna URL
            type: string
          path:
            description: Path to file, at the origin.
            title: Path
            type: string
          ref:
            description: The Reference Number or ID for the file at the origin.
            title: Reference
            type: string
          share_url:
            description: Link or invite to share file (at origin).
            title: Share URL
            type: string
          size:
            description: Binary size.
            title: Size
            type: integer
          status:
            description: 'File status: Deleted, Archived, etc.'
            title: Status
            type: string
          tags:
            description: List of tags associated to the file in the origin.
            items:
              type: string
            maxItems: 1000
            title: Tags
            type: array
          type:
            description: Type of file.
            title: Type
            type: string
          update_date:
            description: Date when the file was last updated.
            format: date-time
            title: Update Date
            type: string
          updater:
            description: The last user to update the file.
            title: Updater
            type: string
          url:
            description: A Unique Resource Locator for the file at the origin.
            title: URL
            type: string
          version:
            description: Version.
            title: Version
            type: string
        required:
          - onna_parent_id
          - ref
          - url
          - onna_id
          - onna_url
        title: ReadFileResponse
        type: object
      ReadFolderResponseBody:
        additionalProperties: false
        example:
          name: My folder
          onna_id: fd9f0c5339de42f9964e6afe9bf20259
        properties:
          name:
            description: Display name of the Folder.
            title: Name
            type: string
          onna_id:
            description: Unique identifier for the Folder.
            title: Onna ID
            type: string
        required:
          - onna_id
          - name
        title: ReadFolderResponseBody
        type: object
      ReadTicketResponse:
        additionalProperties: false
        example:
          name: CS0001401
          onna_parent_id: da72de92fef04c6a9cc5cfe018fa9cd6
          ref: f352dc9387632300d6b0a7da0acb0b60
          url: >-
            https://instance.servicenow.com/api/sn_customerservice/case/f352dc9387632300d6b0a7da0acb0b60
        properties:
          assignee_group:
            description: Assignee group.
            title: Assignee Group
            type: string
          assignees:
            description: List of users assigned to the ticket.
            items:
              type: string
            maxItems: 1000
            title: Assignees
            type: array
          author:
            description: The user that created the ticket.
            title: Author
            type: string
          category:
            description: Category.
            title: Category
            type: string
          comments:
            description: List of messages associated to the ticket.
            items:
              $ref: '#/components/schemas/TicketMessage'
            maxItems: 5000
            title: Comments
            type: array
          creation_date:
            description: Date when the ticket was created.
            format: date-time
            title: Creation Date
            type: string
          description:
            description: Description.
            title: Description
            type: string
          followers:
            description: List of users following the ticket.
            items:
              type: string
            maxItems: 1000
            title: Followers
            type: array
          name:
            description: Title.
            title: Name
            type: string
          onna_id:
            description: The ID for the Onna resource.
            title: Onna ID
            type: string
          onna_parent_id:
            description: The ID of the parent Folder.
            title: Parent ID
            type: string
          onna_url:
            description: The URL for the Onna resource.
            title: Onna URL
            type: string
          priority:
            description: 'Priority: `high`, `medium`, `low`, etc.'
            title: Priority
            type: string
          reactions:
            description: List of reactions.
            items:
              type: string
            maxItems: 1000
            title: Reactions
            type: array
          ref:
            description: The Reference Number or ID for the ticket at the origin.
            title: Reference
            type: string
          requester:
            description: The user that requested the ticket.
            title: Requester
            type: string
          severity:
            description: 'Severity: `high`, `medium`, `low`, etc.'
            title: Severity
            type: string
          status:
            description: 'Ticket status: `open`, `closed`, `archived`, etc.'
            title: Status
            type: string
          subcategory:
            description: Subcategory.
            title: Subcategory
            type: string
          tags:
            description: List of tags associated to the ticket in the origin.
            items:
              type: string
            maxItems: 1000
            title: Tags
            type: array
          type:
            description: Type of ticket.
            title: Type
            type: string
          update_date:
            description: Date when the ticket was last updated.
            format: date-time
            title: Update Date
            type: string
          updater:
            description: The last user to update the ticket.
            title: Updater
            type: string
          url:
            description: A Unique Resource Locator for the ticket at the origin.
            title: URL
            type: string
        required:
          - onna_parent_id
          - ref
          - url
          - name
          - onna_id
          - onna_url
        title: ReadTicketResponse
        type: object
      TicketMessage:
        additionalProperties: false
        properties:
          author:
            title: Author
            type: string
          creation_date:
            format: date-time
            title: Creation Date
            type: string
          text:
            title: Text
            type: string
        required:
          - author
          - creation_date
          - text
        title: TicketMessage
        type: object
      UpdateFolderRequestBody:
        additionalProperties: false
        example:
          name: My updated folder name
        properties:
          name:
            description: Display name of the Folder.
            title: Name
            type: string
        required:
          - name
        title: UpdateFolderRequestBody
        type: object
      UpdateWorkspaceCustomValueRequestBody:
        example:
          value: My custom field value
        properties:
          value:
            description: Custom field value
            title: Value
            type: string
        required:
          - value
        title: UpdateWorkspaceCustomValueRequestBody
        type: object
      UpdateWorkspaceRequestBody:
        additionalProperties: false
        example:
          description: My personal workspace
          name: My workspace
          tags:
            - project-x
            - feature
        properties:
          description:
            description: Short description of the workspace.
            title: Description
            type: string
          name:
            description: Display name of the workspace.
            title: Name
            type: string
          tags:
            description: >-
              Labels attached to the workspace for the purpose of identification
              or to give meta information.
            items:
              type: string
            maxItems: 10000
            title: Tags
            type: array
        title: UpdateWorkspaceRequestBody
        type: object
      ValidationError:
        properties:
          loc:
            items:
              type: string
            title: Location
            type: array
          msg:
            title: Message
            type: string
          type:
            title: Error Type
            type: string
        required:
          - loc
          - msg
          - type
        title: ValidationError
        type: object
      WorkspaceCustomValueResponseBody:
        example:
          onna_id: cf-b20696ae9
          value: My custom field value
        properties:
          onna_id:
            description: Alphanumeric unique identifier of the workspace.
            title: Onna ID
            type: string
          value:
            description: Custom field value
            title: Value
        required:
          - onna_id
        title: WorkspaceCustomValueResponseBody
        type: object
      WorkspaceResponseBody:
        example:
          description: My personal workspace
          name: My workspace
          onna_id: ws6f0c5339de42f9964e6afe9bf20469
          tags:
            - project-x
            - feature
        properties:
          creation_datetime:
            description: >-
              The date and time when the workspace was created. The format follows
              the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard,
              with up to microsecond precision.
            format: date-time
            title: Creation Datetime
            type: string
          description:
            default: ''
            description: Short description of the workspace.
            title: Description
            type: string
          modification_datetime:
            description: >-
              The date and time when the workspace was last updated. The format
              follows the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
              standard, with up to  microsecond precision. Updates include editing
              metadata, sharing, and tagging the workspace.
            format: date-time
            title: Modification Datetime
            type: string
          name:
            description: Display name of the workspace.
            title: Name
            type: string
          onna_id:
            description: Alphanumeric unique identifier of the workspace.
            title: Onna ID
            type: string
          tags:
            default: []
            description: >-
              Labels attached to the workspace for the purpose of identification
              or to give meta information.
            items:
              type: string
            maxItems: 10000
            title: Tags
            type: array
        required:
          - onna_id
          - name
        title: WorkspaceResponseBody
        type: object
    securitySchemes:
      OAuth2:
        description: >-
          The API uses API keys to [authenticate
          requests](https://dev.onna.com/get-started/authentication).
        flows:
          clientCredentials:
            scopes: {}
            tokenUrl: https://api.onna.com/v1/oauth/token
        type: oauth2
  info:
    contact:
      name: Onna Help
      url: https://dev.onna.com/help
    description: >-
      # Introduction


      ![Onna](https://onna.com/wp-content/uploads/2022/02/graphic-solutions-kip-kd.png
      "Diagram showing how Onna connects to various applications")


      The Onna Platform API enables you to programmatically upload your data into
      our Knowledge Integration Platform.

      This unlocks the possibility to have all your data in one place

      and turn it into knowledge—even data we don't support directly with one of
      [our connectors](https://onna.com/connectors/ "List of available
      connectors").


      ## Key concepts


      Before starting to use the API, we recommend to become familiar with some
      key concepts.

      For more information on the key concepts, see [API
      basics](https://dev.onna.com/fundamentals/api-basics "Documentation about
      API basics").


      ## Requirements


      To use this API, you must have an active account on an [Enterprise
      Plan](https://onna.com/pricing/ "Onna pricing page")

      and have the [Developer role
      assigned](https://dev.onna.com/get-started/authentication#assign-developer-role
      "Sections on how to assign a developer role").


      For more information, see
      [Requirements](https://dev.onna.com/fundamentals/api-basics#requirements
      "Section about requirements").


      ## Security


      This API requires that all requests are made using
      [HTTPS](https://en.wikipedia.org/wiki/HTTPS "Wikipedia entry for HTTPS")

      and must be [authenticated with a valid
      token](https://dev.onna.com/get-started/authentication "Article about
      authentication").


      ## Response codes


      A full list of the response codes returned by this API is available at
      [Response codes](https://dev.onna.com/fundamentals/response-codes "List of
      supported response codes").


      ## Versioning


      This API uses semantic versioning to ensure that your client doesn't break.

      The version is declared in the URL so that you can lock to a specific one by
      prefix the URL.


      When the version declared in the URL is not supported, you will receive a
      400 response.


      For more information, see
      [Versioning](https://dev.onna.com/fundamentals/api-basics#versioning
      "Section about versioning").


      ## Date and time format


      This API supports dates and times in [ISO
      8601](https://en.wikipedia.org/wiki/ISO_8601 "Wikipedia entry for the IS0
      8601 standard") format.


      ## Pagination


      This API uses cursoring to divide large sets of results in multiple pages.

      For more information, see
      [Pagination](https://dev.onna.com/fundamentals/api-basics/#pagination
      "Section about supported pagination").


      ## Parameters


      There are many ways to pass parameters when making requests to this API.

      For more information, see
      [Parameters](https://dev.onna.com/fundamentals/api-basics#parameters
      "Section about supported parameters").


      ## Resource types


      You can ingest various type of resources. For more information, see
      [Resource types](https://dev.onna.com/fundamentals/resource-types "Article
      about supported resource types").
    license:
      name: Apache 2.0
      url: https://www.apache.org/licenses/LICENSE-2.0.html
    termsOfService: https://dev.onna.com/legal
    title: Onna Platform API
    version: v1.1.0
  openapi: 3.0.2
  paths:
    /customFields:
      get:
        description: List custom fields.
        operationId: listCustomFields
        parameters:
          - description: >-
              The API uses [cursoring for
              pagination.](https://dev.onna.com/fundamentals/api-basics/#pagination)
            example: '2022-02-22T11:11:11.12345'
            in: query
            name: cursor
            required: false
            schema:
              description: >-
                The API uses [cursoring for
                pagination.](https://dev.onna.com/fundamentals/api-basics/#pagination)
              title: Cursor
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CustomFieldPageResponseBody'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: List Custom Fields
        tags:
          - CustomFields
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: curl ...
      post:
        description: Create a custom field.
        operationId: createCustomField
        parameters:
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomFieldRequestBody'
          required: true
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateCustomFieldResponseBody'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Create Custom Field
        tags:
          - CustomFields
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: curl ...
    /folders:
      post:
        description: Create a folder in a workspace.
        operationId: createFolder
        parameters:
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFolderRequestBody'
          required: true
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateFolderResponseBody'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
            description: Validation Error
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Create Folder
        tags:
          - Folders
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: |-
              curl --request POST \
              --url 'https://api.onna.com/v1/folders' \
              --header 'Authorization: Bearer <ACCESS_TOKEN>' \
              --header 'Content-Type: application/json' \
              --header 'Accept: application/json' \
              --data '{
                "name": "My folder",
                "onna_parent_id": "b7c6f55fa54c4a3e821e825bd6262c0f"
              }'
    /folders/{onna_id}:
      delete:
        description: |-
          Delete the folder.
          📌 This also deletes all resources contained in it!
        operationId: deleteFolder
        parameters:
          - description: Unique ID of the folder.
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the folder.
              title: ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '204':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Delete Folder
        tags:
          - Folders
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >
              curl --request DELETE \

              --url
              'https://api.onna.com/v1/folders/fd9f0c5339de42f9964e6afe9bf20259' \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Accept: application/json'
      get:
        description: Retrieve information related to a folder.
        operationId: getFolderInfo
        parameters:
          - description: Unique ID of the folder.
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the folder.
              title: ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReadFolderResponseBody'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Retrieve Folder Info
        tags:
          - Folders
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >+
              curl --request GET \

              --url
              'https://api.onna.com/v1/folders/fd9f0c5339de42f9964e6afe9bf20259' \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Accept: application/json' \

      patch:
        description: >-
          Update the folder. For example, rename it from `My folder` to `My
          updated folder name`.
        operationId: updateFolder
        parameters:
          - description: Unique ID of the folder.
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the folder.
              title: ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFolderRequestBody'
          required: true
        responses:
          '204':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Update Folder
        tags:
          - Folders
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl --request PATCH
              'https://api.onna.com/v1/folders/fd9f0c5339de42f9964e6afe9bf20259' \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Content-Type: application/json' \

              --header 'Accept: application/json' \

              --data '{
                "name": "My updated folder name"
              }'
    /health:
      get:
        description: Check service status, version and build.
        operationId: healthResponse
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HealthResponseBody'
            description: Successful Response
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Health Check
        tags:
          - Utils
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: |
              curl --request GET \
              --url 'https://api.onna.com/v1/health' \
              --header 'Authorization: Bearer <ACCESS_TOKEN>' \
              --header 'Accept: application/json' \
    /oauth/token:
      post:
        description: Exchange credentials for an access token.
        operationId: oauthTokenResponse
        requestBody:
          content:
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/Body_login_oauth_token_post'
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/OauthTokenResponse'
            description: Successful Response
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
            description: Validation Error
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Login
        tags:
          - Authentication
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: |-
              curl --request POST \
                --url 'https://api.onna.com/v1/oauth/token' \
                --header 'Content-Type: application/x-www-form-urlencoded' \
                --data-urlencode 'client_id=YOUR_CLIENT_ID' \
                --data-urlencode 'client_secret=YOUR_CLIENT_SECRET' \
                --data-urlencode 'grant_type=client_credentials'
    /oauth/user:
      get:
        description: Return information about the currently authenticated user.
        operationId: currentUser
        parameters:
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CurrentUser'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HTTPValidationError'
            description: Validation Error
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Current User
        tags:
          - Authentication
    /resources/files:
      post:
        description: Create a file resource.
        operationId: createFile
        parameters:
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFileBody'
          required: true
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateFileResponse'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
        summary: Create File
        tags:
          - 'Resources: Files'
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: |-
              curl --request POST 'https://api.onna.com/v1/resources/files' \
              --header 'Authorization: Bearer <ACCESS_TOKEN>' \
              --header 'Content-Type: application/json' \
              --data '{
                "onna_parent_id": "0ec85634bf2c4d8db453a65551c36b8d",
                "ref": "Creativecommons-what-is-creative-commons_eng",
                "url": "https://wiki.creativecommons.org/images/3/35/Creativecommons-what-is-creative-commons_eng.pdf",
                "comment": "Creative Commons PDF",
                "creation_date": "2022-07-21T09:02:40.083388+00:00",
                "creator": "Creative Commons ORG",
                "description": "Creative Commons PDF",
                "name": "Creativecommons-what-is-creative-commons_eng.pdf",
                "path": "/images/3/35",
                "tags": [
                  "creative commons"
                ],
                "type": "pdf",
                "update_date": "2022-07-21T09:02:40.083388+00:00",
                "updater": "Bob"
              }'
    /resources/files/{onna_id}:
      delete:
        description: Delete the file.
        operationId: deleteFile
        parameters:
          - description: Unique ID of the file.
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the file.
              title: ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '204':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Delete File
        tags:
          - 'Resources: Files'
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl --request DELETE
              'https://api.onna.com/v1/resources/files/fs3f0c5339de42f9964e6afe9bf20169'
              \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Accept: application/json'
      get:
        description: Retrieve a file resource.
        operationId: retrieveFile
        parameters:
          - description: Unique ID of the file.
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the file.
              title: ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReadFileResponse'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Read File
        tags:
          - 'Resources: Files'
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl --request GET
              'https://api.onna.com/v1/resources/files/fs3f0c5339de42f9964e6afe9bf20169'
              \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Accept: application/json'
    /resources/tickets:
      post:
        description: Create a ticket resource.
        operationId: createTicket
        parameters:
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTicketBody'
          required: true
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateTicketResponse'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Create Ticket
        tags:
          - 'Resources: Tickets'
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: |-
              curl --request POST 'https://api.onna.com/v1/resources/tickets' \
              --header 'Authorization: Bearer <ACCESS_TOKEN>' \
              --header 'Content-Type: application/json' \
              --header 'Accept: application/json' \
              --data '{
                "name": "CS0001401",
                "onna_parent_id": "da72de92fef04c6a9cc5cfe018fa9cd6",
                "ref": "f352dc9387632300d6b0a7da0acb0b60",
                "url": "https://instance.servicenow.com/api/sn_customerservice/case/f352dc9387632300d6b0a7da0acb0b60"
              }'
    /resources/tickets/{onna_id}:
      delete:
        description: Delete the ticket.
        operationId: deleteTicket
        parameters:
          - description: Unique ID of the ticket.
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the ticket.
              title: ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '204':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Delete Ticket
        tags:
          - 'Resources: Tickets'
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl --request DELETE
              'https://api.onna.com/v1/resources/tickets/tk3f0c5339de42f9964e6afe9bf20358'
              \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Accept: application/json'
      get:
        description: Retrieve a ticket resource.
        operationId: retrieveTicket
        parameters:
          - description: Unique ID of the ticket.
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the ticket.
              title: ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ReadTicketResponse'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Read Ticket
        tags:
          - 'Resources: Tickets'
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl --request GET
              'https://api.onna.com/v1/resources/tickets/tk3f0c5339de42f9964e6afe9bf20358'
              \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Accept: application/json'
    /upload/{id}/tus:
      head:
        description: >-
          [HEAD](https://tus.io/protocols/resumable-upload.html#head) a resource's
          file, for use with the TUS protocol.
        operationId: headUploads
        parameters:
          - in: path
            name: id
            required: true
            schema:
              title: Id
              type: string
          - description: >-
              The `Tus-Resumable` header is included in every request and
              response.


              ```bash

              Tus-Resumable: 1.0.0

              ```


              For more information on the headers used by TUS, see ["the protocol
              specification"](https://tus.io/protocols/resumable-upload.html).
            in: header
            name: tus-resumable
            required: false
            schema:
              description: >-
                The `Tus-Resumable` header is included in every request and
                response.


                ```bash

                Tus-Resumable: 1.0.0

                ```


                For more information on the headers used by TUS, see ["the
                protocol
                specification"](https://tus.io/protocols/resumable-upload.html).
              title: Tus-Resumable
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '405':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors405'
            description: Method Not Allowed
          '412':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors412'
            description: Precondition Failed
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Head Resource File Resumable Upload
        tags:
          - Upload
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >
              curl -i
              'https://api.onna.com/v1/upload/d3m0d3m0d3m0d3m0d3m0d3m0d3m0d3m0/tus'
              \
                -X 'HEAD' \
                -H 'Authorization: Bearer <ACCESS_TOKEN>' \
                -H 'content-type: application/offset+octet-stream' \
                -H 'tus-resumable: 1.0.0' \
      options:
        description: >-
          TUS [OPTIONS](https://tus.io/protocols/resumable-upload.html#options)
          may be used to gather information about the Server's current
          configuration.
        operationId: optionsUploads
        parameters:
          - in: path
            name: id
            required: true
            schema:
              title: Id
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '204':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Options Resource File
        tags:
          - Upload
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >
              curl -i
              'https://api.onna.com/v1/upload/d3m0d3m0d3m0d3m0d3m0d3m0d3m0d3m0/tus'
              \
                -X 'OPTIONS' \
                -H 'Authorization: Bearer <ACCESS_TOKEN>' \
                -H 'content-type: application/offset+octet-stream' \
      patch:
        description: >-
          TUS [PATCH](https://tus.io/protocols/resumable-upload.html#patch)
          applies partial modifications to a resource.
        operationId: patchUploads
        parameters:
          - in: path
            name: id
            required: true
            schema:
              title: Id
              type: string
          - description: >-
              The `Content-Length` header indicates the size of the message body,
              in bytes, sent to the recipient.


              ```bash

              Content-Length: 512

              ```


              For more information on headers, see ["the MDN Web
              Docs"](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Length).
            in: header
            name: content-length
            required: false
            schema:
              description: >-
                The `Content-Length` header indicates the size of the message
                body, in bytes, sent to the recipient.


                ```bash

                Content-Length: 512

                ```


                For more information on headers, see ["the MDN Web
                Docs"](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Length).
              title: Content-Length
              type: string
          - description: >-
              The `Content-Type` representation header is used to indicate the
              original media type of the resource (prior to any content encoding
              applied for sending).


              ```bash

              Content-Type: application/json; charset=utf-8

              ```


              For more information on headers, see ["the MDN Web
              Docs"](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type).
            in: header
            name: content-type
            required: false
            schema:
              description: >-
                The `Content-Type` representation header is used to indicate the
                original media type of the resource (prior to any content encoding
                applied for sending).


                ```bash

                Content-Type: application/json; charset=utf-8

                ```


                For more information on headers, see ["the MDN Web
                Docs"](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type).
              title: Content-Type
              type: string
          - description: >-
              The `Upload-Offset` request and response header indicates a byte
              offset within a resource. The value MUST be a non-negative integer.


              ```bash

              Upload-Offset: 64

              ```


              For more information on the headers used by TUS, see ["the protocol
              specification"](https://tus.io/protocols/resumable-upload.html).
            in: header
            name: upload-offset
            required: false
            schema:
              description: >-
                The `Upload-Offset` request and response header indicates a byte
                offset within a resource. The value MUST be a non-negative
                integer.


                ```bash

                Upload-Offset: 64

                ```


                For more information on the headers used by TUS, see ["the
                protocol
                specification"](https://tus.io/protocols/resumable-upload.html).
              title: Upload-Offset
              type: string
          - description: >-
              The `Tus-Resumable` header is included in every request and
              response.


              ```bash

              Tus-Resumable: 1.0.0

              ```


              For more information on the headers used by TUS, see ["the protocol
              specification"](https://tus.io/protocols/resumable-upload.html).
            in: header
            name: tus-resumable
            required: false
            schema:
              description: >-
                The `Tus-Resumable` header is included in every request and
                response.


                ```bash

                Tus-Resumable: 1.0.0

                ```


                For more information on the headers used by TUS, see ["the
                protocol
                specification"](https://tus.io/protocols/resumable-upload.html).
              title: Tus-Resumable
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '405':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors405'
            description: Method Not Allowed
          '412':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors412'
            description: Precondition Failed
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
        summary: Resume Resource File Upload
        tags:
          - Upload
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl
              'https://api.onna.com/v1/upload/d3m0d3m0d3m0d3m0d3m0d3m0d3m0d3m0/tus'
              \
                -X 'PATCH' \
                -H 'Authorization: Bearer <ACCESS_TOKEN>' \
                -H 'content-type: application/offset+octet-stream' \
                -H 'tus-resumable: 1.0.0' \
                -H 'upload-offset: 0' \
                --data $'%PDF-1.4\v3ryl0ngstr1ng0fR4wD4t4' \
                --compressed
      post:
        description: >-
          TUS [CREATION](https://tus.io/protocols/resumable-upload.html#creation)
          endpoint.


          The created file has the same URL as the current endpoint, since a
          resource can only have a single file.
        operationId: postUploads
        parameters:
          - in: path
            name: id
            required: true
            schema:
              title: Id
              type: string
          - description: >-
              The `Upload-Defer-Length` request and response header indicates that
              the size of the upload is not known currently and will be
              transferred later.

              Its value MUST be 1. If the length of an upload is not deferred,
              this header MUST be omitted.


              ```bash

              Upload-Defer-Length: 1

              ```


              For more information on the headers used by TUS, see ["the protocol
              specification"](https://tus.io/protocols/resumable-upload.html).
            in: header
            name: upload-defer-length
            required: false
            schema:
              description: >-
                The `Upload-Defer-Length` request and response header indicates
                that the size of the upload is not known currently and will be
                transferred later.

                Its value MUST be 1. If the length of an upload is not deferred,
                this header MUST be omitted.


                ```bash

                Upload-Defer-Length: 1

                ```


                For more information on the headers used by TUS, see ["the
                protocol
                specification"](https://tus.io/protocols/resumable-upload.html).
              title: Upload-Defer-Length
              type: string
          - description: >-
              The `Upload-Length` request and response header indicates the size
              of the entire upload in bytes. The value MUST be a non-negative
              integer.


              ```bash

              Upload-Length: 512

              ```


              For more information on the headers used by TUS, see ["the protocol
              specification"](https://tus.io/protocols/resumable-upload.html).
            in: header
            name: upload-length
            required: false
            schema:
              description: >-
                The `Upload-Length` request and response header indicates the size
                of the entire upload in bytes. The value MUST be a non-negative
                integer.


                ```bash

                Upload-Length: 512

                ```


                For more information on the headers used by TUS, see ["the
                protocol
                specification"](https://tus.io/protocols/resumable-upload.html).
              title: Upload-Length
              type: string
          - description: >-
              The `Upload-Metadata` request and response header MUST consist of
              one or more comma-separated key-value pairs. The key and value MUST
              be separated by a space.

              The key MUST NOT contain spaces and commas and MUST NOT be empty.
              The key SHOULD be ASCII encoded and the value MUST be Base64
              encoded. All keys MUST be unique.

              The value MAY be empty. In these cases, the space, which would
              normally separate the key and the value, MAY be left out.


              ```bash

              Upload-Metadata: filename
              d29ybGRfZG9taW5hdGlvbl9wbGFuLnBkZg==,is_confidential

              ```


              For more information on the headers used by TUS, see ["the protocol
              specification"](https://tus.io/protocols/resumable-upload.html).
            in: header
            name: upload-metadata
            required: false
            schema:
              description: >-
                The `Upload-Metadata` request and response header MUST consist of
                one or more comma-separated key-value pairs. The key and value
                MUST be separated by a space.

                The key MUST NOT contain spaces and commas and MUST NOT be empty.
                The key SHOULD be ASCII encoded and the value MUST be Base64
                encoded. All keys MUST be unique.

                The value MAY be empty. In these cases, the space, which would
                normally separate the key and the value, MAY be left out.


                ```bash

                Upload-Metadata: filename
                d29ybGRfZG9taW5hdGlvbl9wbGFuLnBkZg==,is_confidential

                ```


                For more information on the headers used by TUS, see ["the
                protocol
                specification"](https://tus.io/protocols/resumable-upload.html).
              title: Upload-Metadata
              type: string
          - description: >-
              The `Tus-Resumable` header is included in every request and
              response.


              ```bash

              Tus-Resumable: 1.0.0

              ```


              For more information on the headers used by TUS, see ["the protocol
              specification"](https://tus.io/protocols/resumable-upload.html).
            in: header
            name: tus-resumable
            required: false
            schema:
              description: >-
                The `Tus-Resumable` header is included in every request and
                response.


                ```bash

                Tus-Resumable: 1.0.0

                ```


                For more information on the headers used by TUS, see ["the
                protocol
                specification"](https://tus.io/protocols/resumable-upload.html).
              title: Tus-Resumable
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '405':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors405'
            description: Method Not Allowed
          '412':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors412'
            description: Precondition Failed
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Create Resource File Resumable Upload
        tags:
          - Upload
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl
              'https://api.onna.com/v1/upload/d3m0d3m0d3m0d3m0d3m0d3m0d3m0d3m0/tus'
              \
                -X 'POST' \
                -H 'Authorization: Bearer <ACCESS_TOKEN>' \
                -H 'content-length: 0' \
                -H 'tus-resumable: 1.0.0' \
                -H 'upload-length: 44251' \
                -H 'upload-metadata: name Q3JlYXRpdmVjb21tb25zLXdoYXQtaXMtY3JlYXRpdmUtY29tbW9uc19lbmcucGRm' \
                --compressed
      put:
        description: Create single request for resource file upload.
        operationId: putUploads
        parameters:
          - in: path
            name: id
            required: true
            schema:
              title: Id
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '201':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Create Resource File Single Request
        tags:
          - Upload
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl -i
              'https://api.onna.com/v1/upload/d3m0d3m0d3m0d3m0d3m0d3m0d3m0d3m0/tus'
              \
                -X 'PUT' \
                -H 'Authorization: Bearer <ACCESS_TOKEN>' \
                -H 'content-type: application/offset+octet-stream' \
    /workspaces:
      get:
        description: List workspaces.
        operationId: listWorkspaces
        parameters:
          - description: >-
              The API uses [cursoring for
              pagination.](https://dev.onna.com/fundamentals/api-basics/#pagination)
            example: '2022-02-22T11:11:11.12345'
            in: query
            name: cursor
            required: false
            schema:
              description: >-
                The API uses [cursoring for
                pagination.](https://dev.onna.com/fundamentals/api-basics/#pagination)
              title: Cursor
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PageResponseBody'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: List Workspaces
        tags:
          - Workspaces
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl --location --request GET
              'https://api.onna.com/v1/workspaces?cursor=100' \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Accept: application/json'
      post:
        description: Create a workspace.
        operationId: createWorkspace
        parameters:
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkspaceRequestBody'
          required: true
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateWorkspaceResponseBody'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Create Workspace
        tags:
          - Workspaces
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: |
              curl --request POST \
              --url 'https://api.onna.com/v1/workspaces' \
              --header 'Authorization: Bearer <ACCESS_TOKEN>' \
              --header 'Content-Type: application/json' \
              --header 'Accept: application/json' \
              --data '{
                "name": "My workspace",
                "description": "My personal workspace",
                "tags": [
                  "project-x",
                  "feature"
                ]
              }'
    /workspaces/{onna_id}:
      delete:
        description: Delete a Workspace.
        operationId: deleteWorkspace
        parameters:
          - description: Unique ID of the workspace.
            example: myworkspace-ZPM9Jf4zQ
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the workspace.
              title: Workspace ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '204':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Delete Workspace
        tags:
          - Workspaces
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl --location --request DELETE
              'https://api.onna.com/v1/workspaces/ws6f0c5339de42f9964e6afe9bf20469'
              \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Accept: application/json'
      get:
        description: Retrieve information related to a workspace.
        operationId: retrieveWorkspaceInfo
        parameters:
          - description: Unique ID of the workspace.
            example: myworkspace-ZPM9Jf4zQ
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the workspace.
              title: Workspace ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WorkspaceResponseBody'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Retrieve Workspace Info
        tags:
          - Workspaces
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl --location --request GET
              'https://api.onna.com/v1/workspaces/ws6f0c5339de42f9964e6afe9bf20469'
              \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Accept: application/json
      patch:
        description: >-
          Update the workspace. For example, rename it from `my-workspace` to
          `my-new-workspace`.
        operationId: updateWorkspace
        parameters:
          - description: Unique ID of the workspace.
            example: myworkspace-ZPM9Jf4zQ
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the workspace.
              title: Workspace ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkspaceRequestBody'
          required: true
        responses:
          '204':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Update Workspace
        tags:
          - Workspaces
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: >-
              curl --location --request PATCH
              'https://api.onna.com/v1/workspaces/ws6f0c5339de42f9964e6afe9bf20469'
              \

              --header 'Authorization: Bearer <ACCESS_TOKEN>' \

              --header 'Content-Type: application/json' \

              --header 'Accept: application/json' \

              --data '{
                "description": "A random workspace",
                "name": "My updated workspace",
                "tags": [
                  "random",
                  "my-company"
                ]
              }'
    /workspaces/{onna_id}/customFields:
      get:
        description: List custom fields for a workspace.
        operationId: listWorkspaceCustomFields
        parameters:
          - description: Unique ID of the workspace.
            example: myworkspace-ZPM9Jf4zQ
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the workspace.
              title: Workspace ID
              type: string
          - description: >-
              The API uses [cursoring for
              pagination.](https://dev.onna.com/fundamentals/api-basics/#pagination)
            example: '2022-02-22T11:11:11.12345'
            in: query
            name: cursor
            required: false
            schema:
              description: >-
                The API uses [cursoring for
                pagination.](https://dev.onna.com/fundamentals/api-basics/#pagination)
              title: Cursor
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PageResponseBody'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: List Workspace Custom Fields
        tags:
          - Workspaces
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: curl ...
      patch:
        description: Enable custom field for a workspace.
        operationId: setWorkspaceCustomField
        parameters:
          - description: Unique ID of the workspace.
            example: myworkspace-ZPM9Jf4zQ
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the workspace.
              title: Workspace ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableWorkspaceCustomFieldRequestBody'
          required: true
        responses:
          '204':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Enable Workspace Custom Field
        tags:
          - Workspaces
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: curl ...
    /workspaces/{onna_id}/customFields/{field_id}:
      get:
        description: Get custom field value for a workspace.
        operationId: readWorkspaceCustomValue
        parameters:
          - description: Unique ID of the workspace.
            example: myworkspace-ZPM9Jf4zQ
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the workspace.
              title: Workspace ID
              type: string
          - description: Unique ID of the field.
            example: cf-b20696ae9
            in: path
            name: field_id
            required: true
            schema:
              description: Unique ID of the field.
              title: Field ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/WorkspaceCustomValueResponseBody'
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Read Workspace Custom Value
        tags:
          - Workspaces
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: curl ...
      patch:
        description: Set custom field value for a workspace.
        operationId: updateWorkspaceCustomValue
        parameters:
          - description: Unique ID of the workspace.
            example: myworkspace-ZPM9Jf4zQ
            in: path
            name: onna_id
            required: true
            schema:
              description: Unique ID of the workspace.
              title: Workspace ID
              type: string
          - description: Unique ID of the field.
            example: cf-b20696ae9
            in: path
            name: field_id
            required: true
            schema:
              description: Unique ID of the field.
              title: Field ID
              type: string
          - description: >-
              `Authorization: Bearer ACCESS_TOKEN`


              The Authorization header must contain a [Bearer
              Token](https://oauth.net/2/bearer-tokens/), for more information see
              ["Obtaining an access
              token"](https://dev.onna.com/get-started/authentication/).
            in: header
            name: authorization
            required: false
            schema:
              description: >-
                `Authorization: Bearer ACCESS_TOKEN`


                The Authorization header must contain a [Bearer
                Token](https://oauth.net/2/bearer-tokens/), for more information
                see ["Obtaining an access
                token"](https://dev.onna.com/get-started/authentication/).
              title: Authorization
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWorkspaceCustomValueRequestBody'
          required: true
        responses:
          '204':
            description: Successful Response
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors401'
            description: Unauthorized
          '403':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors403'
            description: Forbidden
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors404'
            description: Not Found
          '422':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors422'
            description: Unprocessable Entity
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JsonApiErrors500'
            description: Internal Server Error
        summary: Update Workspace Custom Value
        tags:
          - Workspaces
        x-codeSamples:
          - label: cURL
            lang: cURL
            source: |-

              curl ...
  security:
    - OAuth2: []
  servers:
    - description: Production Server
      url: https://api.onna.com/v1
  tags:
    - description: >-
        Our API uses OAuth 2's Client Credentials Grant to authenticate your
        requests.

        This grant type is especially suited for machine-to-machine (M2M)
        applications,

        such as the applications you build on top of the Onna platform.


        For more information please check our detailed [authentication
        docs](https://dev.onna.com/get-started/authentication).
      name: Authentication
    - description: >-
        [Workspaces](https://help.onna.com/hc/en-us/articles/4628449003292-Creating-and-Managing-Workspaces)
        are locations where you can collect data coming from different sources,
        organize it,

        and collaborate with other members of your team.


        You can share workspaces with collaborators with various permission levels
        and roles.

        Permission levels are dependent on the type of expected collaboration.

        You can also search across an entire workspace and export the results of
        your searches or entire data collections.


        This collection includes all the endpoints that enable you to work and
        collaborate inside workspaces.
      name: Workspaces
    - description: >-
        Folders are containers for your files or other folders. A place where you
        can group your resources together, like in any desktop operating system.


        This collection includes all the endpoints that enable you to handle
        folders, such as creating, retrieving, or deleting them.
      name: Folders
    - description: >-
        You can ingest a wide range of raw files.


        Here's the details of what raw files you can view in the UI:


        - Media (Audio, Video, Images)

        - PDFs

        - Microsoft Documents (DOC, DOCX, PPT, PPTX), rendered as PDFs

        - Microsoft Spreadsheets (Worksheets rendered as tabs)

        - Plain text (CSV, TXT), rendered as PDFs

        - Emails (EML, MSG)

        - Web pages (HTM, HTML)

        - Code


        For more information,please check our docs about
        [raw-files](https://dev.onna.com/fundamentals/resource-types#raw-files
        "Link to docs site about raw-file ingestion") ingestion.
      name: 'Resources: Files'
    - description: >-
        The `Ticket` resource type defines resources with which two parties
        communicate to track work to resolve issues

        or deliver incremental value. Customer support requests, service desk
        tickets, or software development projects are

        some examples of what can be mapped to this resource type.


        Read our developer documentation to learn more about the [Ticket resource
        type](https://dev.onna.com/fundamentals/resource-types#ticket).
      name: 'Resources: Tickets'
    - description: >-
        You can define custom resource types by defining and uploading a new
        schema.
      name: 'Resources: Custom Models'
    - description: >-
        A schema defines a custom model. They can be used to upload custom
        resources.
      name: Schemas
    - description: >-
        A generic endpoint to upload a raw file to an existing resource (ticket,
        file, etc).


        Our upload engine is based on the [TUS protocol](https://tus.io/ "TUS
        protocol website") and treats every upload as a resumable file upload.


        Check our get [started
        guide](https://dev.onna.com/get-started/hello-world?_highlight=tus#initialize-tus
        "Get started with TUS and the platform API").


        Whatever the programming language you're using, it's possible that there's
        a library that integrates this protocol.


        For more information about TUS, see the [TUS
        documentation](https://tus.io/protocols/resumable-upload.html "TUS
        protocol documentation").
      name: Upload
    - description: API Utils, such as the `health` endpoint.
      name: Utils
konfigCliVersion: 1.38.37
