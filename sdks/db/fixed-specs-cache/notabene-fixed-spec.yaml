publishJson:
  company: Notabene
  serviceName: false
  sdkName: notabene-{language}-sdk
  clientName: Notabene
  metaDescription: >-
    Notabene's SafeTransact is an easy-to-use platform that empowers customers
    to identify and stop high-risk crypto activity before it occurs.
  apiStatusUrls: inherit
  homepage: notabene.id/
  developerDocumentation: doc.notabene.id/
  categories:
    - fintech
    - crypto
    - financial_services
    - crypto_platform
rawSpecString: |
  openapi: 3.0.0
  info:
    version: 1.0.0
    title: Notabene
    contact:
      name: API Support
      email: tech@notabene.id
      url: https://doc.notabene.id
    x-logo:
      url: >-
        https://uploads-ssl.webflow.com/5e68f0772de982756aa8c1a4/5eee5fb470215e6ecdc34b94_Full_transparent_black_1280x413.svg
      altText: Notabene logo
    description: >
      The Notabene API is organized around
      [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer).

      Our API accepts [JSON-encoded](http://www.json.org/) request bodies, returns
      [JSON-encoded](http://www.json.org/) responses, and uses standard [HTTP
      status codes](https://httpstatuses.com/) and verbs.


      All requests to the Notabene API should be made to one of the following root
      URLs:


      * Test: https://api.notabene.dev

      * Live: https://api.notabene.id


      All API requests must be made over HTTPS; calls made over plain HTTP will
      fail. API requests without authentication will also fail - see the
      Authentication section for information on correctly authenticating calls to
      the Notabene API.


      ### Just getting started?


      Check out our [DevX](https://devx.notabene.id) guides for more information
      about how best to integrate with Notabene.
  tags:
    - name: authentication
      x-displayName: Authentication
      description: >
        The Notabene API uses API tokens to authenticate requests.


        Authentication to the API is performed via [bearer
        auth](https://swagger.io/docs/specification/authentication/bearer-authentication/),
        so require an `Authorization: Bearer TOKEN` HTTP header.
    - name: did_model
      x-displayName: DIDs
      description: >
        The Notabene API takes advantage of [Decentralized
        Identifiers](https://www.w3.org/TR/did-core/#dfn-decentralized-identifiers)
        (DIDs) that enable
        [verifiable](https://en.wikipedia.org/wiki/Verifiable_credentials),
        decentralized [digital
        identity](https://en.wikipedia.org/wiki/Digital_identity).
    - name: errors
      x-displayName: Errors
      description: >
        Errors in the Notabene API follow conventional HTTP response codes to
        indicate errors. Generally, `2xx` response codes indicate success, `4xx`
        response codes indicate client error, and `5xx` errors indicate errors
        with the Notabene API.


        ### Response Code Summary

        - **200 - OK** - The request was successfully handled

        - **400 - Bad Request** - The API could not process the request due to an
        incorrect request

        - **401 - Unauthorized** - The user of the API was not authenticated

        - **403 - Forbidden** - The user of the API was not authorized to make the
        request

        - **404 - Not Found** - The requested resource could not be found

        - **500, 502, 503, 504 - Server Errors** - Something went wrong with the
        Notabene API
    - name: TrustFramework
      description: >
        The Notabene Trust Framework refers to the network of VASPs that send and
        receive transfers.


        You can browse through the [Notabene
        Directory](https://app.notabene.id/directory) to see more information
        about which VASPs are receiving Travel Rule transfers and the protocols
        they follow.
    - name: Customer
      description: The customer represents the originator of the transfer.
    - name: Transactions
      description: >
        Transfers represent blockchain transfers sent by or to your VASP.


        ## IVMS101


        Notabene utilizes the IVMS 101 interVASP messaging standard to transmit
        required originator and beneficiary information.


        **More information: [IVMS 101](https://intervasp.org/)**


        <SchemaDefinition schemaRef="#/components/schemas/IVMS101" />
    - name: VASPAdmin
      x-displayName: VASP Administration
      description: >
        VASPs can be administered using the Notabene API. Users can be added or
        removed from a VASP allowing them to login to the [Notabene
        Dashboard](http://app.notabene.id) to manage transfers, rules,
        integrations and more.


        ## VASP


        <SchemaDefinition schemaRef="#/components/schemas/VASPInfo" />
    - name: Documents
      description: >
        Various documents can be uploaded using the Notabene API such as
        certificates of incorporation, due-dilligence questionnaires etc.
    - name: Rules
      description: >
        Setting up transfer rules makes accepting and declining incoming transfers
        manageable at scale. Rules can be setup to automatically accept or decline
        transfers based on sanctions checks, wallet address queries and more.
  x-tagGroups:
    - name: Introduction
      tags:
        - did_model
        - errors
        - authentication
    - name: Core Resources
      tags:
        - VASPAdmin
        - Customer
        - Transactions
        - TrustFramework
        - Documents
        - Address Book
        - Rules
        - Settings
    - name: Integrations
      tags:
        - Transaction webhook
        - Address webhook
        - LexisNexis
        - Chainalysis
        - Elliptic
        - Crystal
        - Refinitiv
        - TRM
        - TRMSanctions
        - Coinfirm
        - MerkleScience
        - Bitgo
        - ComplyAdvantage
  servers:
    - url: https://api.notabene.id
      description: Production
    - url: https://api.notabene.dev
      description: Test
  paths:
    /address/upload/{vaspDID}:
      get:
        security:
          - bearerAuth: []
        summary: Get upload URL
        description: >
          To upload an address book you must first request a URL to uploda to.
          Upload URLs are short-lived AWS S3 bucket URLs.
        operationId: addressUploadAddressList
        tags:
          - Address Book
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: URL where to upload the address list
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/common_UploadURLInfo'
    /address/registerCustomer:
      post:
        security:
          - bearerAuth: []
        summary: Register address
        description: |
          Registers the blockchain address of a customer in your address book.
        operationId: addressRegisterCustomer
        tags:
          - Address Book
        requestBody:
          description: Customer Address Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterCustomerInput'
        responses:
          '200':
            description: Addess Owner is already registered?
    /v1/addresses/address-ownerships/{address}:
      get:
        security:
          - bearerAuth: []
        summary: Get address ownership information
        description: |
          Get the ownership information about a customer blockchain address.
        operationId: addressOwnershipGet
        tags:
          - Address Book
        parameters:
          - name: address
            in: path
            schema:
              $ref: '#/components/schemas/BlockchainAddress'
            required: true
          - name: vasp_did
            in: query
            required: true
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
          - name: asset
            in: query
            required: true
            schema:
              $ref: '#/components/schemas/Asset'
        responses:
          '200':
            description: Address Ownership Information
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AddressOwnershipResponse'
          '404':
            description: Address Ownership Information Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    /v1/addresses:
      get:
        security:
          - bearerAuth: []
        summary: Get addresses registered
        description: |
          Get the addresses registered for a VASP.
        operationId: addressesGet
        tags:
          - Address Book
        parameters:
          - name: vasp_did
            in: query
            required: true
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
          - name: source
            in: query
            required: true
            schema:
              $ref: '#/components/schemas/BlockchainAddressQuerySource'
          - name: source_type
            in: query
            schema:
              $ref: '#/components/schemas/QuerySourceType'
          - name: page
            in: query
            schema:
              $ref: '#/components/schemas/PaginationPage'
          - name: per_page
            in: query
            schema:
              maximum: 1000
              $ref: '#/components/schemas/PaginationPerPage'
        responses:
          '200':
            description: Addresses Registered
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AddressesResponse'
      delete:
        security:
          - bearerAuth: []
        summary: Delete addresses
        description: |
          Delete addresses previously added to the address book.
        operationId: addressesDelete
        tags:
          - Address Book
        parameters:
          - name: addresses
            description: Comma-separated list of addresses to delete
            in: query
            required: true
            schema:
              type: string
              pattern: ^([^,]+,)*([^,]+)$
              example: 0x123,0x456
          - name: vasp_did
            in: query
            required: true
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '202':
            description: Addresses Deletion Processing
            content:
              application/json:
                schema:
                  properties:
                    message:
                      type: string
                      example: Deleting 10 addresses.
    /auth/customerToken:
      post:
        security:
          - bearerAuth: []
        summary: Get customer access token
        description: |
          Get a Notabene API access token on behalf of a customer
        operationId: authCustomerToken
        tags:
          - authentication
        requestBody:
          description: Customer Token information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_CustomerTokenInput'
        responses:
          '200':
            description: API Token
            content:
              application/json:
                schema:
                  type: object
                  description: API Token
                  properties:
                    access_token:
                      type: string
                    token_type:
                      type: string
                    scope:
                      type: string
    /auth/userinfo/update:
      post:
        security:
          - bearerAuth: []
        summary: Update user
        description: |
          Updates the currently authenticated user
        operationId: authUserInfoUpdate
        tags:
          - authentication
        requestBody:
          description: User Info update information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_UserInfoUpdate'
        responses:
          '200':
            description: User info updated.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/auth_UserInfo'
    /auth/credentials/{vaspDID}:
      post:
        security:
          - bearerAuth: []
        summary: Create new API credentials
        description: Create new auth0 API credentials
        operationId: createAuth0Credentials
        parameters:
          - in: path
            name: vaspDID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        requestBody:
          description: Additional options
          content:
            application/json:
              schema:
                type: object
                properties:
                  delegateToGateway:
                    type: boolean
                  limited:
                    type: boolean
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    clientId:
                      type: string
                    clientSecret:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete API credentials
        description: Delete auth0 API credentials
        operationId: deleteAuth0Credentials
        parameters:
          - in: path
            name: vaspDID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: clientid
            in: query
            description: auth0 clientId
            schema:
              type: string
        responses:
          '200':
            description: Success
      get:
        security:
          - bearerAuth: []
        summary: Get API credentials
        description: Get auth0 API credentials
        operationId: getAuth0Credentials
        parameters:
          - in: path
            name: vaspDID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    clientId:
                      type: string
                    delegatedToGateway:
                      type: string
    /auth/vaspUsers/{vaspDID}:
      get:
        security:
          - bearerAuth: []
        summary: List VASP users
        description: >
          Returns an array of users and their roles that have been added to manage
          a VASP.
        operationId: authVASPusers
        tags:
          - VASPAdmin
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: VASP users list with their roles
            content:
              application/json:
                schema:
                  type: array
                  description: List of users
                  items:
                    $ref: '#/components/schemas/VASPuser'
    /auth/addusertovasp:
      post:
        security:
          - bearerAuth: []
        summary: Add user to VASP
        description: >
          Adds a user to a VASP by email. Added users will be sent an email to
          accept the invite.
        operationId: authAddUserToVASP
        tags:
          - VASPAdmin
        requestBody:
          description: New user information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_AddUserToVASPInput'
        responses:
          '200':
            description: User added and email sent to user
    /auth/removeuserfromvasp:
      post:
        security:
          - bearerAuth: []
        summary: Remove user from VASP
        description: >
          Remove a user from a VASP. The removed user will no longer be able to
          login to the dashboard to manage the VASP.
        operationId: authRemoveUserFromVASP
        tags:
          - VASPAdmin
        requestBody:
          description: Remove user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auth_RemoveUserFromVASPInput'
        responses:
          '200':
            description: User removed from VASP
    /auth/customer:
      post:
        security:
          - bearerAuth: []
        summary: Create customer
        description: |
          Creates a new customer
        operationId: authNewCustomer
        tags:
          - Customer
        requestBody:
          description: Customer info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCustomerInput'
        responses:
          '200':
            description: Customer created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Customer'
    /auth/customer/{vaspDID}/{customerDID}:
      get:
        security:
          - bearerAuth: []
        summary: Get customer
        description: |
          Returns a customer of a VASP by customer DID
        operationId: authGetCustomer
        tags:
          - Customer
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: customerDID
            in: path
            description: Customer DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: Customer info
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Customer'
    /integrations/{vaspDID}/address-query-webhook:
      post:
        security:
          - bearerAuth: []
        summary: Register a Webhook for querying addresses
        description: |
          Register a Webhook for querying addresses
        operationId: integrationsConfigAddressQueryWebhook
        tags:
          - Address webhook
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        requestBody:
          description: Register Webhook Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationsRegisterAddressWebhookInput'
        responses:
          '200':
            description: Secret to validate Notabene's request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/common_RegisterAddressWebhookResponse'
      delete:
        security:
          - bearerAuth: []
        summary: Delete a Webhook for querying addresses
        description: |
          Delete a Webhook for querying addresses
        operationId: integrationsDeleteAddressQueryWebhook
        tags:
          - Address webhook
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: Delete message
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/common_DeleteAddressWebhookResponse'
    /integrations/config/txnotification:
      post:
        deprecated: true
        security:
          - bearerAuth: []
        summary: Create a notification webhook
        description: >
          Creates a webhook for the passed callback URL that will be notified
          every time a transfer changes state.
        operationId: integrationsConfigTxNotification
        tags:
          - Transaction webhook
        requestBody:
          description: Tx Notification Config Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationConfigTxNotificationInput'
        responses:
          '200':
            description: Config saved
    /integrations/txnotification/{vaspDID}:
      get:
        security:
          - bearerAuth: []
        summary: Get a notification webhook
        description: |
          Returns a webhook that has been setup for your account.
        operationId: integrationsGetTxNotification
        tags:
          - Transaction webhook
        parameters:
          - in: path
            name: vaspDID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: Tx Notification Config Info
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IntegrationInfoTxNotification'
    /integrations/providers/{vaspDID}:
      get:
        security:
          - bearerAuth: []
        summary: Get Third Party Providers
        description: |
          Retrieve all of the third party providers configured for the VASP.
        operationId: integrationsGetThirdPartyProviders
        tags:
          - Providers
        parameters:
          - in: path
            name: vaspDID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: Get Third Party Providers Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IntegrationsGetThirdPartyProviders'
    /integrations/chainalysis/addressinfo:
      post:
        security:
          - bearerAuth: []
        summary: Chainalysis address info
        description: Chainalysis address info
        operationId: ChainalysisAddressInfo
        tags:
          - Chainalysis
        requestBody:
          description: Chainalysis address info
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - address
                      - asset
                    properties:
                      address:
                        type: string
                      asset:
                        type: string
                      customerDID:
                        type: string
                      network:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    address:
                      type: string
                    addressType:
                      type: string
                    asset:
                      type: string
                    source:
                      type: string
                    metadata:
                      type: object
                    custodialVASPdid:
                      type: string
                    custodialVASPname:
                      type: string
                    score:
                      type: string
    /integrations/chainalysis/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set Chainalysis credentials
        description: Set Chainalysis credentials
        operationId: PutChainalysisAPICredentials
        tags:
          - Chainalysis
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set Chainalysis credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - apiKey
                    properties:
                      apiKey:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete Chainalysis credentials
        description: Delete Chainalysis credentials
        operationId: DelChainalysisAPICredentials
        tags:
          - Chainalysis
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check Chainalysis credentials
        description: Check Chainalysis credentials
        operationId: GetChainalysisAPICredentials
        tags:
          - Chainalysis
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/chainalysis2/addressinfo:
      post:
        security:
          - bearerAuth: []
        summary: Chainalysis v2 address info
        description: Chainalysis v2 address info
        operationId: Chainalysis2AddressInfo
        tags:
          - Chainalysis2
        requestBody:
          description: Chainalysis v2 address info
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - address
                      - asset
                      - assetAmount
                    properties:
                      address:
                        type: string
                      asset:
                        type: string
                      assetAmount:
                        type: string
                      customerDID:
                        type: string
                      network:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    address:
                      type: string
                    addressType:
                      type: string
                    asset:
                      type: string
                    source:
                      type: string
                    metadata:
                      type: object
                    custodialVASPdid:
                      type: string
                    custodialVASPname:
                      type: string
                    score:
                      type: string
    /integrations/chainalysis2/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set Chainalysis credentials
        description: Set Chainalysis credentials
        operationId: PutChainalysis2APICredentials
        tags:
          - Chainalysis
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set Chainalysis credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - apiKey
                    properties:
                      apiKey:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete Chainalysis credentials
        description: Delete Chainalysis credentials
        operationId: DelChainalysis2APICredentials
        tags:
          - Chainalysis
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check Chainalysis credentials
        description: Check Chainalysis credentials
        operationId: GetChainalysis2APICredentials
        tags:
          - Chainalysis
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/lexisnexis/sanctions:
      post:
        security:
          - bearerAuth: []
        summary: LexisNexis sanctions check
        description: LexisNexis sanctions check
        operationId: LexisNexisSanctionsCheck
        tags:
          - LexisNexis
        requestBody:
          description: LexisNexis sanctions check
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - searchTerm
                    properties:
                      searchTerm:
                        type: string
                      entityType:
                        type: string
                        enum:
                          - Individual
                          - Business
                          - Unknown
                      transactionId:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasMatches:
                      type: boolean
                    metadata:
                      type: object
                    matches:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          score:
                            type: string
                          reasons:
                            type: array
                            items:
                              type: string
                          comments:
                            type: array
                            items:
                              type: string
                          metadata:
                            type: array
                            items:
                              type: object
    /integrations/lexisnexis/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set LexisNexis credentials
        description: Set LexisNexis credentials
        operationId: PutLexisNexisAPICredentials
        tags:
          - LexisNexis
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set LexisNexis credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - environment
                      - clientID
                      - userID
                      - userPassword
                      - apiKey
                      - predefinedSearchName
                    properties:
                      environment:
                        type: string
                      clientID:
                        type: string
                      userID:
                        type: string
                      userPassword:
                        type: string
                      apiKey:
                        type: string
                      predefinedSearchName:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete LexisNexis credentials
        description: Delete LexisNexis credentials
        operationId: DelLexisNexisAPICredentials
        tags:
          - LexisNexis
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check LexisNexis credentials
        description: Check LexisNexis credentials
        operationId: GetLexisNexisAPICredentials
        tags:
          - LexisNexis
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/trm/addressinfo:
      post:
        security:
          - bearerAuth: []
        summary: TRM address info
        description: TRM address info
        operationId: TRMAddressInfo
        tags:
          - TRM
        requestBody:
          description: TRM address info
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - address
                      - asset
                    properties:
                      address:
                        type: string
                      asset:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    address:
                      type: string
                    addressType:
                      type: string
                    asset:
                      type: string
                    source:
                      type: string
                    metadata:
                      type: object
                    custodialVASPdid:
                      type: string
                    custodialVASPname:
                      type: string
                    score:
                      type: string
    /integrations/trm/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set TRM credentials
        description: Set TRM credentials
        operationId: PutTRMAPICredentials
        tags:
          - TRM
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set TRM credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - apiKey
                    properties:
                      apiKey:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete TRM credentials
        description: Delete TRM credentials
        operationId: DelTRMAPICredentials
        tags:
          - TRM
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check TRM credentials
        description: Check TRM credentials
        operationId: GetTRMAPICredentials
        tags:
          - TRM
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/trmsanctions/sanctions:
      post:
        security:
          - bearerAuth: []
        summary: TRMSanctions sanctions check
        description: TRMSanctions sanctions check
        operationId: TRMSanctionsSanctionsCheck
        tags:
          - TRMSanctions
        requestBody:
          description: TRMSanctions sanctions check
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - searchTerm
                    properties:
                      searchTerm:
                        type: string
                      transactionId:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasMatches:
                      type: boolean
                    metadata:
                      type: object
                    matches:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          score:
                            type: string
                          reasons:
                            type: array
                            items:
                              type: string
                          comments:
                            type: array
                            items:
                              type: string
                          metadata:
                            type: array
                            items:
                              type: object
    /integrations/trmsanctions/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set TRMSanctions credentials
        description: Set TRMSanctions credentials
        operationId: PutTRMSanctionsAPICredentials
        tags:
          - TRMSanctions
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set TRMSanctions credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - apiKey
                    properties:
                      apiKey:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete TRMSanctions credentials
        description: Delete TRMSanctions credentials
        operationId: DelTRMSanctionsAPICredentials
        tags:
          - TRMSanctions
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check TRMSanctions credentials
        description: Check TRMSanctions credentials
        operationId: GetTRMSanctionsAPICredentials
        tags:
          - TRMSanctions
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/coinfirm/addressinfo:
      post:
        security:
          - bearerAuth: []
        summary: Coinfirm address info
        description: Coinfirm address info
        operationId: CoinfirmAddressInfo
        tags:
          - Coinfirm
        requestBody:
          description: Coinfirm address info
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - address
                      - asset
                    properties:
                      address:
                        type: string
                      asset:
                        type: string
                      customerDID:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    address:
                      type: string
                    addressType:
                      type: string
                    asset:
                      type: string
                    source:
                      type: string
                    metadata:
                      type: object
                    custodialVASPdid:
                      type: string
                    custodialVASPname:
                      type: string
                    score:
                      type: string
    /integrations/coinfirm/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set Coinfirm credentials
        description: Set Coinfirm credentials
        operationId: PutCoinfirmAPICredentials
        tags:
          - Coinfirm
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set Coinfirm credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - apiKey
                    properties:
                      apiKey:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete Coinfirm credentials
        description: Delete Coinfirm credentials
        operationId: DelCoinfirmAPICredentials
        tags:
          - Coinfirm
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check Coinfirm credentials
        description: Check Coinfirm credentials
        operationId: GetCoinfirmAPICredentials
        tags:
          - Coinfirm
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/bitgo/addressinfo:
      post:
        security:
          - bearerAuth: []
        summary: Bitgo address info
        description: Bitgo address info
        operationId: BitgoAddressInfo
        tags:
          - Bitgo
        requestBody:
          description: Bitgo address info
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - address
                      - asset
                    properties:
                      address:
                        type: string
                      asset:
                        type: string
                      customerDID:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    address:
                      type: string
                    addressType:
                      type: string
                    asset:
                      type: string
                    source:
                      type: string
                    metadata:
                      type: object
                    custodialVASPdid:
                      type: string
                    custodialVASPname:
                      type: string
    /integrations/bitgo/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set Bitgo credentials
        description: Set Bitgo credentials
        operationId: PutBitgoAPICredentials
        tags:
          - Bitgo
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set Bitgo credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - apiKey
                    properties:
                      apiKey:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete Bitgo credentials
        description: Delete Bitgo credentials
        operationId: DelBitgoAPICredentials
        tags:
          - Bitgo
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check Bitgo credentials
        description: Check Bitgo credentials
        operationId: GetBitgoAPICredentials
        tags:
          - Bitgo
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/complyadvantage/sanctions:
      post:
        security:
          - bearerAuth: []
        summary: ComplyAdvantage sanctions check
        description: ComplyAdvantage sanctions check
        operationId: ComplyAdvantageSanctionsCheck
        tags:
          - ComplyAdvantage
        requestBody:
          description: ComplyAdvantage sanctions check
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - searchTerm
                    properties:
                      searchTerm:
                        type: string
                      transactionId:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasMatches:
                      type: boolean
                    metadata:
                      type: object
                    matches:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          score:
                            type: string
                          reasons:
                            type: array
                            items:
                              type: string
                          comments:
                            type: array
                            items:
                              type: string
                          metadata:
                            type: array
                            items:
                              type: object
    /integrations/complyadvantage/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set ComplyAdvantage credentials
        description: Set ComplyAdvantage credentials
        operationId: PutComplyAdvantageAPICredentials
        tags:
          - ComplyAdvantage
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set ComplyAdvantage credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - apiKey
                    properties:
                      apiKey:
                        type: string
                      search_profile:
                        type: string
                      fuzziness:
                        type: string
                      regionURL:
                        type: string
                        enum:
                          - https://api.complyadvantage.com
                          - https://api.us.complyadvantage.com
                          - https://api.ap.complyadvantage.com
                        description: >
                          Use the appropriate ComplyAdvantage root regional, see
                          docs[https://docs.complyadvantage.com/api-docs/?javascript#introduction]:
                            * `https://api.complyadvantage.com` - For EU
                            * `https://api.us.complyadvantage.com` - For US
                            * `https://api.ap.complyadvantage.com` - For APAC
                          Defaults to EU
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete ComplyAdvantage credentials
        description: Delete ComplyAdvantage credentials
        operationId: DelComplyAdvantageAPICredentials
        tags:
          - ComplyAdvantage
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check ComplyAdvantage credentials
        description: Check ComplyAdvantage credentials
        operationId: GetComplyAdvantageAPICredentials
        tags:
          - ComplyAdvantage
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/refinitiv/sanctions:
      post:
        security:
          - bearerAuth: []
        summary: Refinitiv sanctions check
        description: Refinitiv sanctions check
        operationId: RefinitivSanctionsCheck
        tags:
          - Refinitiv
        requestBody:
          description: Refinitiv sanctions check
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - searchTerm
                    properties:
                      searchTerm:
                        type: string
                      entityType:
                        type: string
                        enum:
                          - INDIVIDUAL
                          - ORGANISATION
                      transactionId:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasMatches:
                      type: boolean
                    metadata:
                      type: object
                    matches:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          score:
                            type: string
                          reasons:
                            type: array
                            items:
                              type: string
                          comments:
                            type: array
                            items:
                              type: string
                          metadata:
                            type: array
                            items:
                              type: object
    /integrations/refinitiv/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set Refinitiv credentials
        description: Set Refinitiv credentials
        operationId: PutRefinitivAPICredentials
        tags:
          - Refinitiv
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set Refinitiv credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - apiKey
                      - apiSecret
                    properties:
                      apiKey:
                        type: string
                      apiSecret:
                        type: string
                      groupId:
                        type: string
                      useClientWatchlist:
                        type: boolean
                      customFields:
                        type: array
                        items:
                          type: object
                          required:
                            - typeId
                            - value
                          properties:
                            typeId:
                              type: string
                            value:
                              type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete Refinitiv credentials
        description: Delete Refinitiv credentials
        operationId: DelRefinitivAPICredentials
        tags:
          - Refinitiv
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check Refinitiv credentials
        description: Check Refinitiv credentials
        operationId: GetRefinitivAPICredentials
        tags:
          - Refinitiv
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/merklescience/addressinfo:
      post:
        security:
          - bearerAuth: []
        summary: MerkleScience address info
        description: MerkleScience address info
        operationId: MerkleScienceAddressInfo
        tags:
          - MerkleScience
        requestBody:
          description: MerkleScience address info
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - address
                      - asset
                    properties:
                      address:
                        type: string
                      asset:
                        type: string
                      customerDID:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    address:
                      type: string
                    addressType:
                      type: string
                    asset:
                      type: string
                    source:
                      type: string
                    metadata:
                      type: object
                    custodialVASPdid:
                      type: string
                    custodialVASPname:
                      type: string
                    score:
                      type: string
    /integrations/merklescience/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set MerkleScience credentials
        description: Set MerkleScience credentials
        operationId: PutMerkleScienceAPICredentials
        tags:
          - MerkleScience
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set MerkleScience credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - apiKey
                    properties:
                      apiKey:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete MerkleScience credentials
        description: Delete MerkleScience credentials
        operationId: DelMerkleScienceAPICredentials
        tags:
          - MerkleScience
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check MerkleScience credentials
        description: Check MerkleScience credentials
        operationId: GetMerkleScienceAPICredentials
        tags:
          - MerkleScience
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /integrations/elliptic/addressinfo:
      post:
        security:
          - bearerAuth: []
        summary: Elliptic address info
        description: Elliptic address info
        operationId: EllipticAddressInfo
        tags:
          - Elliptic
        requestBody:
          description: Elliptic address info
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - vaspDID
                properties:
                  vaspDID:
                    $ref: '#/components/schemas/common_DID'
                  data:
                    type: object
                    required:
                      - address
                      - asset
                    properties:
                      address:
                        type: string
                      asset:
                        type: string
                      customerDID:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    address:
                      type: string
                    addressType:
                      type: string
                    asset:
                      type: string
                    source:
                      type: string
                    metadata:
                      type: object
                    custodialVASPdid:
                      type: string
                    custodialVASPname:
                      type: string
                    score:
                      type: string
    /integrations/elliptic/credentials:
      put:
        security:
          - bearerAuth: []
        summary: Set Elliptic credentials
        description: Set Elliptic credentials
        operationId: PutEllipticAPICredentials
        tags:
          - Elliptic
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        requestBody:
          description: Set Elliptic credentials
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - accessKey
                      - accessSecret
                    properties:
                      accessKey:
                        type: string
                      accessSecret:
                        type: string
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenStored:
                      type: boolean
                    message:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: Delete Elliptic credentials
        description: Delete Elliptic credentials
        operationId: DelEllipticAPICredentials
        tags:
          - Elliptic
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasCredentialsBeenDeleted:
                      type: boolean
                    message:
                      type: string
      get:
        security:
          - bearerAuth: []
        summary: Check Elliptic credentials
        description: Check Elliptic credentials
        operationId: GetEllipticAPICredentials
        tags:
          - Elliptic
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    hasApiCredentials:
                      type: boolean
                    message:
                      type: string
    /protocol-agents:
      get:
        security:
          - bearerAuth: []
        summary: Get the configured Protocol Agents for a given VASP
        description: |
          Get the configured Protocol Agents for a given VASP
        operationId: getAgents
        tags:
          - ProtocolAgents
        parameters:
          - name: vaspDID
            in: query
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: All the configured Protocol Agents for a given VASP
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetResponse'
      post:
        security:
          - bearerAuth: []
        summary: Register a Protocol Agent for a given VASP
        description: |
          Register a Protocol Agent for a given VASP
        operationId: postAgent
        tags:
          - ProtocolAgents
        requestBody:
          description: Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRequest'
        responses:
          '200':
            description: All the configured Protocol Agents for a given VASP
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetResponse'
      delete:
        security:
          - bearerAuth: []
        summary: Unregister a Protocol Agent for a given VASP
        description: |
          Unregister a Protocol Agent for a given VASP
        operationId: deleteAgent
        tags:
          - ProtocolAgents
        requestBody:
          description: Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRequest'
        responses:
          '200':
            description: All the configured Protocol Agents for a given VASP
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetResponse'
    /protocol-agents-message-handler:
      post:
        security:
          - bearerAuth: []
        summary: Handle a Protocol Agent Message
        description: |
          Handle a Protocol Agent Message
        operationId: messageHandler
        tags:
          - ProtocolAgents
        requestBody:
          description: Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentAddressDiscoveryRequest'
        responses:
          '200':
            description: Message received
    /protocol-gateways/callbacks/address-confirmation/{transactionId}:
      post:
        security:
          - bearerAuth: []
        summary: Address confirmation resolution
        description: >
          Address confirmation after callbackUrl is requested from the Protocol
          Gateways.
        operationId: addressConfirmationCallbackResolution
        tags:
          - Protocol Gateways
        parameters:
          - name: transactionId
            in: path
            description: Transaction ID
            schema:
              type: string
            required: true
        requestBody:
          description: Address Confirmation Request Body
          content:
            application/json:
              schema:
                type: object
                required:
                  - resolvedVASPdid
                properties:
                  requester_vasp_did:
                    description: Notabene VASP DID creating the address confirmation request
                    $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Address confirmation resolution processed
    /protocol-gateways/callbacks/receive-transfer/{transactionId}:
      post:
        security:
          - bearerAuth: []
        summary: Receive Transfer resolution
        description: >
          Receive Transfer after callbackUrl is requested from the Protocol
          Gateways.
        operationId: travelRuleTransferCallbackResolution
        tags:
          - Protocol Gateways
        parameters:
          - name: transactionId
            in: path
            description: Transaction ID
            schema:
              type: string
            required: true
        requestBody:
          description: Address Confirmation Request Body
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    description: Status of the transfer resolution in the Protocol Gateways
                    type: string
                  reason:
                    description: >-
                      Reason for the rejection of the transfer in the Protocol
                      Gateways
                    type: string
        responses:
          '200':
            description: Receive transfer resolution processed
    /webhook:
      get:
        security:
          - bearerAuth: []
        summary: Get the registered multi-message Webhook URL for a given VASP.
        description: |
          Get the registered multi-message Webhook URL for a given VASP.
        operationId: getWebhook
        tags:
          - Webhooks
        parameters:
          - name: vaspDID
            in: query
            required: true
            description: The VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Config saved
          '404':
            description: No webhook registered
      post:
        security:
          - bearerAuth: []
        summary: Register the multi-message Webhook URL for a given VASP.
        description: |
          Register the multi-message Webhook URL for a given VASP.
        operationId: setWebhook
        tags:
          - Webhooks
        requestBody:
          description: Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetWebhookInput'
        responses:
          '200':
            description: Config saved
      delete:
        security:
          - bearerAuth: []
        summary: Unregister the multi-message Webhook for a given VASP.
        description: |
          Unregister the multi-message Webhook for a given VASP.
        operationId: deleteWebhook
        tags:
          - Webhooks
        requestBody:
          description: Payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteWebhookInput'
        responses:
          '200':
            description: Config saved
    /tf/vasps/create:
      post:
        summary: Create VASP
        description: |
          To begin accepting transactions as a VASP, you first create a VASP.
        operationId: tfCreate
        tags:
          - TrustFramework
        parameters:
          - in: query
            name: challengeToken
            schema:
              type: string
            required: true
            description: ChallengeToken
        requestBody:
          description: Create User and VASP through light onboarding
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tf_UserVASPCreate'
        responses:
          '200':
            description: User info created.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tf_VASPInfo'
    /tf/simple/vasps/{vaspDID}:
      get:
        security:
          - bearerAuth: []
          - {}
        summary: Get VASP
        description: >
          Returns information about a VASP that has the specified
          [DID](https://www.w3.org/TR/did-core/#identifier).
        operationId: tfSimpleGetVASP
        tags:
          - TrustFramework
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: fields
            in: query
            description: csv of fields to return
            schema:
              type: string
          - name: reviewedByVaspDID
            in: query
            description: include reviewed vasps for specified did
            schema:
              $ref: '#/components/schemas/common_DID'
          - name: showJurisdictionStatus
            in: query
            description: include jurisdiction status information
            schema:
              type: boolean
          - name: includeSubsidiaries
            in: query
            description: include subsidiaries of particular vasp
            schema:
              type: boolean
        responses:
          '200':
            description: Simple VASP info
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tf_VASPInfoSimple'
    /tf/simple/vasps:
      get:
        security:
          - bearerAuth: []
          - {}
        summary: List VASPs
        description: >
          Returns a list of VASPs. VASPs can be searched and sorted and results
          are paginated.
        operationId: tfSimpleListVASPs
        tags:
          - TrustFramework
        parameters:
          - name: q
            in: query
            description: string to query
            schema:
              type: string
          - name: emailDomain
            in: query
            description: filter on email domain
            schema:
              type: string
          - name: chainalysisName
            in: query
            description: filter on chainalysis name
            schema:
              type: string
          - name: hasAdmin
            in: query
            description: filter on hasAdmin true or false
            schema:
              type: boolean
          - name: badge
            in: query
            description: filter by badge
            schema:
              type: string
              enum:
                - super_vasp
                - verified
                - in_network
                - claimed
          - name: jurisdictions
            in: query
            description: filter by jurisdictions
            schema:
              type: string
          - name: fields
            in: query
            description: csv of fields to return
            schema:
              type: string
          - name: page
            in: query
            description: page number
            schema:
              type: integer
          - name: per_page
            in: query
            description: records per page
            schema:
              type: integer
          - name: order
            in: query
            description: field to order by
            schema:
              type: string
              pattern: ^([ A-Za-z]+(:(ASC|DESC))?(:NULLS (FIRST|LAST))?(,?))+$
          - name: all
            in: query
            description: return all records
            schema:
              type: boolean
          - name: listingType
            in: query
            description: >-
              Choose the way gateway VASPs and non-gateway VASPs are returned. By
              default, exclude_subsidiaries.
            schema:
              type: string
              enum:
                - exclude_subsidiaries
                - exclude_gateways
                - all
          - name: includeUncheckedVASPs
            in: query
            description: include vasps that have not been internally checked
            schema:
              type: boolean
              default: false
          - name: includeActiveSendersOnly
            in: query
            description: include only those vasps that are sending transactions
            schema:
              type: boolean
              default: false
          - name: includeActiveReceiversOnly
            in: query
            description: include only those vasps that are receiving transactions
            schema:
              type: boolean
              default: false
          - name: regulatoryStatus
            in: query
            description: include only those vasps matching the specified regulatory status
            schema:
              type: string
              default: false
              enum:
                - Exempt
                - No longer exempt
                - Not Regulated
                - No longer regulated
                - Pending
                - Regulated
          - name: asset
            in: query
            description: asset symbol, provide when filtering by wallet
            schema:
              type: string
          - name: reviewedByVaspDID
            in: query
            description: include reviewed vasps for specified did
            schema:
              $ref: '#/components/schemas/common_DID'
          - name: showJurisdictionStatus
            in: query
            description: include jurisdiction status information
            schema:
              type: boolean
          - name: reviewValue
            in: query
            description: include reviewed vasps containing specified value
            schema:
              type: string
              enum:
                - TRUSTED
                - BLOCKED
                - MANUAL
                - 'NULL'
          - name: filterByJurisdictionStatus
            in: query
            description: filter by specified jurisdiction status
            schema:
              type: string
              enum:
                - inForce
                - gracePeriodOngoing
                - limitedScope
                - plansAnnounced
                - notAvailable
        responses:
          '200':
            description: List of VASP (simple)
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tf_VASPListSimple'
    /tf/vasps/{vaspDID}/VASPTravelRuleProtocols:
      get:
        summary: Get VASP Travel Rule protocols
        description: |
          Returns the Travel Rule protocols the VASP uses.
        operationId: tfGetVASPTravelRuleProtocols
        tags:
          - TrustFramework
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: VASP Info
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tf_VASPInfo'
    /tf/vasps/update:
      post:
        security:
          - bearerAuth: []
        summary: Update VASP
        description: |
          Updates a VASP with the provided parameters.
        operationId: tfUpdateVASP
        tags:
          - TrustFramework
        requestBody:
          description: VASP update information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tf_VASPUpdate'
        responses:
          '200':
            description: User info updated.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tf_VASPInfo'
    /tf/vasps/delete/{vaspDID}:
      get:
        security:
          - bearerAuth: []
          - {}
        summary: Delete VASP
        description: >
          Deletes a VASP that has the specified
          [DID](https://www.w3.org/TR/did-core/#identifier).
        operationId: tfDeleteVASP
        tags:
          - TrustFramework
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: redirectDID
            in: query
            description: VASP DID to redirect transactions to
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Success message
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    deletedVASP:
                      description: Has the VASP been deleted?
                      type: boolean
                    message:
                      description: Success message
                      type: string
    /tf/vasps/{vaspDID}/review:
      post:
        security:
          - bearerAuth: []
        summary: Review VASP
        description: |
          Mark a VASP as TRUSTED, BLOCKED, or MANUAL
        operationId: tfReview
        tags:
          - TrustFramework
        parameters:
          - name: vaspDID
            in: path
            description: The VASP who is adding to their review list
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - reviewedVaspDID
                  - reviewValue
                properties:
                  reviewedVaspDID:
                    description: The VASP being reviewed
                    $ref: '#/components/schemas/common_DID'
                  reviewValue:
                    description: The review value
                    type: string
                    enum:
                      - TRUSTED
                      - BLOCKED
                      - MANUAL
                  note:
                    description: Review note
                    type: string
        responses:
          '200':
            description: VASP review
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    vaspDID:
                      $ref: '#/components/schemas/common_DID'
                    reviewedVaspDID:
                      $ref: '#/components/schemas/common_DID'
                    reviewValue:
                      type: string
                    note:
                      type: string
                    createdAt:
                      type: string
                    createdBy:
                      $ref: '#/components/schemas/common_DID'
          '401':
            description: Not authorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: Not authorized
    /tf/vasps/userVASPList:
      get:
        security:
          - bearerAuth: []
        summary: Get VASPs associated with user
        operationId: tfUserVASPList
        tags:
          - Trust Framework
        parameters:
          - name: fields
            in: query
            description: csv of fields to return
            schema:
              type: string
        responses:
          '200':
            description: Ok
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserVASPList'
          '400':
            description: Invalid user
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: Invalid user
          '401':
            description: Not authorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: Not authorized
    /tf/vasps/did:
      post:
        security:
          - bearerAuth: []
        summary: Create a VASP did
        description: |
          Generate a VASP did.
        operationId: tfDID
        tags:
          - TrustFramework
        responses:
          '200':
            description: User info created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    did:
                      type: string
                      $ref: '#/components/schemas/common_DID'
    /tf/vasps/top-counterparties:
      get:
        security:
          - bearerAuth: []
        summary: Get top counterparty data
        description: |
          Get VASP data for top 20 counterparties
        operationId: tfTopCounterparties
        tags:
          - TrustFramework
        parameters:
          - name: vaspDID
            required: true
            in: query
            schema:
              $ref: '#/components/schemas/common_DID'
        responses:
          '200':
            description: Top 20 counterparty data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    lastUpdated:
                      type: string
                    results:
                      type: array
                      items:
                        $ref: '#/components/schemas/VASPTopCounterParty'
    /tf/vasps/{vaspDID}/settings:
      put:
        security:
          - bearerAuth: []
        summary: Update a VASP's settings
        description: |
          Update a VASP's settings.
        operationId: updateSettings
        tags:
          - Settings
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        requestBody:
          description: Settings to be updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
        responses:
          '200':
            description: Updated settings
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Settings'
    /tf/vasps/{vaspDID}/getSettings:
      get:
        security:
          - bearerAuth: []
        summary: Get a VASP's settings
        description: |
          Get a VASP's settings
        operationId: getSettings
        tags:
          - Settings
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: Stored settings
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Settings'
    /tf/vasps/upload/{vaspDID}:
      get:
        security:
          - bearerAuth: []
        summary: Get upload URL
        description: >
          To upload a document you must first request a URL to upload to. Upload
          URLs are short-lived AWS S3 bucket upload URLs.
        operationId: tfUploadVASPDocument
        tags:
          - Documents
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: documentType
            in: query
            description: documentType
            schema:
              type: string
        responses:
          '200':
            description: URL where to upload the document
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/common_UploadURLInfo'
    /tf/vasps/download/{vaspDID}:
      get:
        security:
          - bearerAuth: []
        summary: Get document
        description: |
          Returns the location of the uploaded document stored in AWS S3
        operationId: tfDownloadVASPDocument
        tags:
          - Documents
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: s3URL
            in: query
            description: S3 URL where the document is located
            schema:
              type: string
        responses:
          '200':
            description: Document downloaded
            content:
              application/pdf:
                schema:
                  type: string
                  format: binary
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: Invalid VaspDID, invalid S3Key
          '401':
            description: Not authorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: User is not authorized to download the document
          '404':
            description: Document not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: The specified key does not belong to a document
          '503':
            description: The service is unavailable
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: The service is unavailable at the moment
    /tf/vasps/document/delete/{vaspDID}:
      post:
        security:
          - bearerAuth: []
        summary: Delete document
        description: |
          Deletes the document stored in AWS S3
        operationId: tfDeleteVASPDocument
        tags:
          - Documents
        parameters:
          - name: vaspDID
            in: path
            description: VASP DID
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: s3URL
            in: query
            description: S3 URL where the document is located
            schema:
              type: string
        responses:
          '200':
            description: Document deleted
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: Invalid VaspDID, invalid S3Key
          '401':
            description: Not authorized
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: User is not authorized to delete the document
          '404':
            description: Document not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: The specified key does not belong to a document
          '503':
            description: The service is unavailable
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: The service is unavailable at the moment
    /tf/vasps/{vaspDID}/documents/requests:
      post:
        security:
          - bearerAuth: []
        summary: Request, Accept, Reject or Revoke Document Access
        description: >
          Request, Accept, Reject or Revoke Document Access. For example, you can
          use this API endpoint to request access to a counterparty VASPs
          due-dilligence document.
        operationId: tfDocumentAccessQuery
        tags:
          - Documents
        parameters:
          - name: vaspDID
            in: path
            description: vaspDID of document owner
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: requestingVASPdid
            in: query
            description: vaspDID of party subject to document access
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: documentType
            in: query
            description: type of the document
            schema:
              $ref: '#/components/schemas/DocumentType'
            required: true
          - name: accessAction
            in: query
            description: access action
            schema:
              $ref: '#/components/schemas/DocumentAccessAction'
            required: true
          - name: metadata
            in: query
            description: metadata (eg. reason for decline/revoke)
            schema:
              type: string
            required: false
        responses:
          '200':
            description: Document requested successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: Success message
                    status:
                      $ref: '#/components/schemas/DocumentRequestStatus'
          '400':
            description: One of the VASP dids does not exist
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TrustFrameworkVASPNotFoundError'
          '401':
            description: Not a user of the VASP
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TrustFrameworkUserDoesNotExistOnVASP'
      get:
        security:
          - bearerAuth: []
        summary: Get document requests
        description: |
          Lists all requests from counterparty VASPS to your documents
        operationId: tfListDocumentRequests
        tags:
          - Documents
        parameters:
          - name: vaspDID
            in: path
            description: DID of the VASP who's doc is being requested
            schema:
              oneOf:
                - $ref: '#/components/schemas/common_DID'
                - $ref: '#/components/schemas/OutgoingRequests'
            required: true
          - name: requestingVASPdid
            in: query
            description: (optional) DID of the VASP who is requesting the document
            schema:
              $ref: '#/components/schemas/common_DID'
            required: false
        responses:
          '200':
            description: List of document requests
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/DocumentRequest'
          '400':
            description: One of the VASP dids does not exist
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TrustFrameworkVASPNotFoundError'
          '401':
            description: Not a user of the VASP
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TrustFrameworkUserDoesNotExistOnVASP'
    /tf/vasps/{vaspDID}/documents/ddq:
      get:
        security:
          - bearerAuth: []
        summary: Get DDQ document of vaspDID
        description: Get DDQ document of vaspDID
        operationId: tfRequestDDQDocument
        tags:
          - Documents
        parameters:
          - name: vaspDID
            in: path
            description: DID of the VASP who's doc is being requested
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: requestingVASPdid
            in: query
            description: DID of the VASP who is requesting the document
            schema:
              $ref: '#/components/schemas/common_DID'
            required: false
        responses:
          '200':
            description: DDQ data
            content:
              application/json:
                schema:
                  type: object
    /tx/info:
      get:
        security:
          - bearerAuth: []
        summary: Get transfer
        description: >
          Gets the detail of a transfer that has been created based on the passed
          transfer ID.
        operationId: txInfo
        tags:
          - Transactions
        parameters:
          - in: query
            name: id
            schema:
              $ref: '#/components/schemas/TransactionID'
            required: true
        responses:
          '200':
            description: Transfer
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /tx/query:
      get:
        security:
          - bearerAuth: []
        summary: Search transfer
        description: >
          Searches for transfers based on transfer hash, destination blockchain
          address or Bitcoin vout.
        operationId: txQuery
        tags:
          - Transactions
        parameters:
          - in: query
            name: txHash
            description: Transaction txHash
            required: false
            schema:
              type: string
          - in: query
            name: destination
            description: Destination Address
            required: false
            schema:
              type: string
          - in: query
            name: vout
            description: Bitcoin vout
            required: false
            schema:
              type: string
        responses:
          '200':
            description: Transfer Query
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Transaction'
    /tx/listBeneficiaryOriginator:
      get:
        security:
          - bearerAuth: []
        summary: >-
          List the transactions of a VASP. The transactions are grouped by
          beneficiary and originator.
        description: >
          Fetches a list of transactions belonging to a VASP. The transactions
          will be grouped showing when the VASP is beneficiary and/or originator.
        operationId: txListBeneficiaryOriginator
        tags:
          - Transactions
        parameters:
          - name: vaspDID
            in: query
            description: vaspDID to get list for
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: List of TransferInformation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionsList'
    /tx/list:
      get:
        security:
          - bearerAuth: []
        summary: List transactions
        description: >
          Fetches a list of transactions belonging to a VASP. Transactions can be
          sorted, filtered, and searched and results are paginated.
        operationId: txList
        tags:
          - Transactions
        parameters:
          - name: vaspDID
            in: query
            description: vaspDID to get list for
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
          - name: sort
            in: query
            schema:
              $ref: '#/components/schemas/Sort'
          - name: page
            in: query
            description: Page number the user wants to retrieve, default value is 0
            example: 0
            schema:
              type: integer
              minimum: 0
          - name: resultsPerPage
            in: query
            description: Number of records to show per page, default value is 100
            example: 100
            schema:
              type: integer
              maximum: 100
          - name: txGroup
            in: query
            schema:
              $ref: '#/components/schemas/Group'
          - name: transactionAsset
            in: query
            schema:
              $ref: '#/components/schemas/TransactionAsset'
          - name: transactionType
            in: query
            schema:
              $ref: '#/components/schemas/common_TransactionType'
          - name: transactionRef
            in: query
            schema:
              type: string
          - name: status
            in: query
            description: Filter your transactions by status
            schema:
              type: array
              items:
                type: string
          - name: q
            in: query
            description: Search term for transactions
            schema:
              type: string
          - name: txDirection
            in: query
            schema:
              $ref: '#/components/schemas/Direction'
          - name: decrypt
            in: query
            description: Decrypt PII data
            schema:
              type: boolean
              default: false
          - name: csv
            in: query
            description: Get data in CSV format
            schema:
              type: boolean
          - name: includeActions
            in: query
            description: Include action data with the transactions
            schema:
              type: boolean
          - name: jurisdictions
            in: query
            description: Filter your transactions by jurisdictions
            schema:
              type: array
              items:
                type: string
          - name: vasps
            in: query
            description: Filter your transactions by vasps
            schema:
              type: array
              items:
                type: string
          - name: start
            in: query
            description: Filter your transactions created after the specified date (included)
            schema:
              $ref: '#/components/schemas/common_Date'
          - name: end
            in: query
            description: >-
              Filter your transactions created before the specified date
              (included)
            schema:
              $ref: '#/components/schemas/common_Date'
          - name: wallet
            in: query
            description: Filter your transactions by wallet address
            schema:
              type: string
        responses:
          '200':
            description: List of TransferInformation
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionsList'
    /tx/validate:
      post:
        deprecated: true
        security:
          - bearerAuth: []
        summary: Validate transfer
        description: >
          Due to varying implementations of the Travel Rule across jurisdictions,
          transfers can be validated ahead of time to evaluate which transfer
          fields are required.
        operationId: txValidate
        tags:
          - Transactions
        requestBody:
          description: Transfer Validations Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionValidateRequest'
              examples:
                below-threshold:
                  summary: Below Threshold example
                  value:
                    transactionAsset: ETH
                    destination: '0x00000000219ab540356cbb839cbe05303d7705fa'
                    transactionAmount: '1000000000'
                    originatorVASPdid: did:ethr:0xoriginatorDID
                    originatorEqualsBeneficiary: true
        responses:
          '200':
            description: Transfer validation response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionValidationResult'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/NotabenePaymentError'
                    - $ref: '#/components/schemas/TrustFrameworkVASPNotFoundError'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedError'
    /tx/validate/full:
      post:
        security:
          - bearerAuth: []
        summary: Fully Validate transfer
        description: Fully Validate your transfer with this method
        operationId: txValidateFull
        tags:
          - Transactions
        requestBody:
          description: Full transfer Validations Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionValidateFullRequest'
        responses:
          '200':
            description: Full transfer validation response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionFullValidationResult'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/NotabenePaymentError'
                    - $ref: '#/components/schemas/NotabeneTransactionError'
                    - $ref: '#/components/schemas/TrustFrameworkVASPNotFoundError'
                    - $ref: '#/components/schemas/UserDIDNotAdminforVASPError'
                    - $ref: '#/components/schemas/NotabenePaymentNoCustomerError'
                    - $ref: '#/components/schemas/NotabenePaymentNoSubscriptionError'
                    - $ref: >-
                        #/components/schemas/NotabeneTransactionNoActiveSubscriptionError
                    - $ref: '#/components/schemas/NotabeneTransactionValidationError'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedError'
    /tx/create:
      post:
        security:
          - bearerAuth: []
        summary: Create transfer
        description: >
          Creates a new transfer. The fields required in a transfer differ
          depending on the jurisdiction of the originating VASP.

          Additional data may be provided to the beneficiary VASP depending on
          their jurisdiction.
        operationId: txCreate
        tags:
          - Transactions
        requestBody:
          description: Transfers Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCreateRequest'
              examples:
                below-threshold:
                  summary: Below Threshold example
                  value:
                    transactionRef: a4de3f3f-668f-4844-995a-03ad1b73a54e
                    transactionAsset: ETH
                    transactionAmount: '10000000000000000'
                    originatorVASPdid: did:ethr:0xoriginatorDID
                    beneficiaryVASPdid: did:ethr:0xbeneficiaryVASPdid
                    transactionBlockchainInfo:
                      txHash: >-
                        0x8f1fd4a0a5f7388b049ccbb1f4108a675047b0faa0085ce009c0b36a0a9e6894
                      origin: '0xa40dfee99e1c85dc97fdc594b16a460717838703'
                      destination: '0x00000000219ab540356cbb839cbe05303d7705fa'
                    originator:
                      originatorPersons:
                        - naturalPerson:
                            name:
                              - nameIdentifier:
                                  - primaryIdentifier: Frodo
                                    secondaryIdentifier: Baggins
                                    nameIdentifierType: LEGL
                            nationalIdentification:
                              nationalIdentifier: AABBCCDDEEFF0011223344
                              nationalIdentifierType: CCPT
                              countryOfIssue: NZ
                      accountNumber:
                        - '01234567890'
                    beneficiary:
                      beneficiaryPersons:
                        - naturalPerson:
                            name:
                              - nameIdentifier:
                                  - primaryIdentifier: Bilbo
                                    secondaryIdentifier: Bolson
                                    nameIdentifierType: LEGL
                            nationalIdentification:
                              nationalIdentifier: AABBCCDDEEFF0011223344
                              nationalIdentifierType: CCPT
                              countryOfIssue: NZ
                      accountNumber:
                        - '0x00000000219ab540356cbb839cbe05303d7705fa'
        responses:
          '200':
            description: Transfer created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/NotabeneTransactionError'
                    - $ref: '#/components/schemas/UserDIDNotAdminforVASPError'
                    - $ref: '#/components/schemas/NotabenePaymentNoCustomerError'
                    - $ref: '#/components/schemas/NotabenePaymentNoSubscriptionError'
                    - $ref: >-
                        #/components/schemas/NotabeneTransactionNoActiveSubscriptionError
                    - $ref: '#/components/schemas/NotabeneCryptoAssetNotAvailable'
                    - $ref: '#/components/schemas/NotabeneTransactionValidationError'
                    - $ref: >-
                        #/components/schemas/NotabeneTransactionBelowThresholdError
                    - $ref: >-
                        #/components/schemas/NotabeneTransactionSunriseLimitReachedError
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedError'
    /tx/approve:
      post:
        security:
          - bearerAuth: []
        summary: Approve transfer
        description: >
          Approves an outgoing transfer. If the VASP is present in the [Notabene
          Directory](https://app.notabene.id/directory), approving a transfer will
          send the transfer to them and set the transfer status to `SENT`. If the
          VASP is not in the [Notabene
          Directory](https://app.notabene.id/directory), approving the transfer
          will set the status to `WAITING_FOR_INFORMATION`.
        operationId: txApprove
        tags:
          - Transactions
        parameters:
          - in: query
            name: id
            schema:
              $ref: '#/components/schemas/TransactionID'
            required: true
        responses:
          '200':
            description: Transfer Approved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/UserDIDNotAdminforVASPError'
                    - $ref: '#/components/schemas/NotabeneTransactionInvalidStatusError'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedError'
    /tx/cancel:
      post:
        security:
          - bearerAuth: []
        summary: Cancel transfer
        description: |
          Cancels the transfer and sets the status to `CANCELLED`.
        operationId: txCancel
        tags:
          - Transactions
        requestBody:
          description: Transfer Cancel Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCancelRequest'
        responses:
          '200':
            description: Transfer Cancelled
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /tx/update:
      post:
        security:
          - bearerAuth: []
        summary: Update transfer
        description: |
          Update a transfer with the passed parameters.
        operationId: txUpdate
        tags:
          - Transactions
        requestBody:
          description: Transfer Update Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionUpdateRequest'
        responses:
          '200':
            description: Transfer Updated
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: Invalid transfer
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedError'
    /tx/confirm:
      post:
        security:
          - bearerAuth: []
        summary: Confirm transfer
        description: >
          Confirms that the blockchain address of the transfer belongs to the
          beneficiary VASP. Confirming sets the status of a transfer to `ACK`.
        operationId: txConfirm
        tags:
          - Transactions
        parameters:
          - in: query
            name: id
            schema:
              $ref: '#/components/schemas/TransactionID'
        responses:
          '200':
            description: Transfer Confirmed
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /tx/notify:
      post:
        security:
          - bearerAuth: []
        summary: Notify transfer
        description: |
          Notifies the originator VASP of an incoming transfer on the blockchain.
        operationId: txNotify
        tags:
          - Transactions
        requestBody:
          description: Transfer Notify Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionNotifyRequest'
        responses:
          '200':
            description: Transfer Notified
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /tx/reject:
      post:
        security:
          - bearerAuth: []
        summary: Reject transfer
        description: >
          Rejects a transfer indicating that the blockchain address is not owned
          by the beneficiary VASP. Rejecting sets the transfer status to
          `REJECTED`.
        operationId: txReject
        tags:
          - Transactions
        requestBody:
          description: Transfer Reject Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRejectRequest'
        responses:
          '200':
            description: Transfer Rejected
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /tx/notReady:
      post:
        security:
          - bearerAuth: []
        summary: Mark a transfer as not ready
        description: >
          Marks a transfer as not ready, as the VASP is not ready yet to respond.
          The transfer status is `NOT_READY`.
        operationId: txNotReady
        tags:
          - Transactions
        requestBody:
          description: Transfer Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionNotReadyRequest'
        responses:
          '200':
            description: Transfer marked as not ready
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /tx/accept:
      post:
        security:
          - bearerAuth: []
        summary: Accept transfer
        description: >
          Accepts a transfer setting the status to `ACCEPTED`. Transfers can be
          automatically accepted by setting rules in the rules engine or manually
          using this endpoint.
        operationId: txAccept
        tags:
          - Transactions
        parameters:
          - in: query
            name: id
            schema:
              $ref: '#/components/schemas/TransactionID'
            required: true
        responses:
          '200':
            description: Transfer Accepted
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /tx/decline:
      post:
        security:
          - bearerAuth: []
        summary: Decline transfer
        description: >
          Declines a transfer setting the status to `DECLINED`. Transfers can be
          automatically declined by setting rules in the rules engine or manually
          using this endpoint.
        operationId: txDecline
        tags:
          - Transactions
        requestBody:
          description: Transfer Decline Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDeclineRequest'
        responses:
          '200':
            description: Transfer Declined
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /tx/redirect:
      post:
        security:
          - bearerAuth: []
        summary: Redirect transfer
        description: >
          Redirecting transfer allows beneficiary VASPs to route incoming
          transfers from one subsidiary to another.
        operationId: txRedirect
        tags:
          - Transactions
        parameters:
          - in: query
            name: id
            schema:
              $ref: '#/components/schemas/TransactionID'
            required: true
          - in: query
            name: to
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: Transfer Redirected
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/UserDIDNotAdminforVASPError'
                    - $ref: '#/components/schemas/NotabeneTransactionInvalidStatusError'
                    - $ref: '#/components/schemas/NotabeneTransactionError'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedError'
    /tx/bulk:
      post:
        security:
          - bearerAuth: []
        summary: Bulk edit transfers
        description: >
          Actions can be performed on transfers in bulk such as approving,
          cancelling, confirming, rejecting etc.
        operationId: txBulk
        tags:
          - Transactions
        requestBody:
          description: Bulk Transfer Input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionBulkRequest'
          required: false
        responses:
          '200':
            description: Affected transfers
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Transaction'
          '202':
            description: List of affected transfer ids (if any) - will process in background
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/TransactionID'
    /tx/receive:
      post:
        security:
          - bearerAuth: []
        summary: Receive transfer
        description: |
          Receive a transfer from a segregated node.
        operationId: txReceive
        tags:
          - Transactions
        requestBody:
          description: Transfer Receive Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReceiveRequest'
        responses:
          '200':
            description: Transfer Notified
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /tx/updateTR:
      post:
        security:
          - bearerAuth: []
        summary: Update pending TR data
        description: |
          Update a transfer coming from another node.
        operationId: txUpdateTR
        tags:
          - Transactions
        requestBody:
          description: Transfer Update TR Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionUpdateTravelRuleDataRequest'
        responses:
          '200':
            description: Transfer Notified
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Transaction'
    /rules/get:
      get:
        security:
          - bearerAuth: []
        summary: List rules
        description: |
          Returns a list of transfer rules that have been setup.
        operationId: rulesGet
        tags:
          - Rules
        parameters:
          - name: vaspDID
            in: query
            description: vaspDID to get list of transfer rules
            schema:
              $ref: '#/components/schemas/common_DID'
            required: true
        responses:
          '200':
            description: Transfer Rule List
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionRuleList'
    /rules/set/direction:
      post:
        security:
          - bearerAuth: []
        summary: Set rules
        description: |
          Sets the transfer rules to be applied to transactions.
        operationId: rulesSetWithDirection
        tags:
          - Rules
        requestBody:
          description: Set rules to rules engine input with direction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRuleCreateRequestWithDirection'
        responses:
          '201':
            description: Transfer Rule created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionRuleList'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotabeneRulesEngineError'
          '501':
            description: Not implemented
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotabeneRulesEngineError'
    /rules/delete:
      post:
        security:
          - bearerAuth: []
        summary: Deletes rules from the provided ids
        description: |
          Deletes rules and Returns a list of transfer rules that have been setup.
        operationId: rulesDelete
        tags:
          - Rules
        requestBody:
          description: Delete ids array
          content:
            application/json:
              schema:
                type: object
                required:
                  - vaspDID
                  - ids
                properties:
                  vaspDID:
                    type: string
                  ids:
                    type: array
                    items:
                      type: string
          required: true
        responses:
          '200':
            description: Transfer Rule List
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TransactionRuleList'
          '400':
            description: NotabeneRulesEngineIdsNotFoundError
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      description: 'There are ids that were not found: ["id1", "id2"]'
    /jurisdictions:
      get:
        security:
          - bearerAuth: []
          - {}
        summary: List all Jurisdictions
        description: |
          Returns a list of juristicions.
        operationId: getJurisdictions
        tags:
          - Jurisdictions
        parameters:
          - name: countryCode
            in: query
            description: Country code in ISO 3166-1 alpha-2 format
            schema:
              type: string
          - name: fallbackToFATF
            in: query
            description: >-
              If this is set to true, it will return FATF rules if no countryCode
              is found
            schema:
              type: boolean
          - name: division
            in: query
            description: Division in ISO 3166-1 alpha-2 format
            schema:
              type: string
        responses:
          '200':
            description: List of jurisdictions
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/JurisdictionList'
  components:
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
    schemas:
      HealthResponse:
        type: object
        properties:
          serverDate:
            type: string
            format: date
      AuthenticationData:
        type: object
        required:
          - email
        properties:
          email:
            type: string
            description: |
              Email address to send a magic link to
            format: email
          callback:
            type: string
            description: |
              URL of the dashboard authentication callback endpoint
            format: uri
          callbackExtra:
            type: string
            description: |
              Additional parameters to send to the dashboard callback endpoint
      CustomerTokenInput:
        type: object
        required:
          - vaspDID
          - customerRef
        properties:
          vaspDID:
            $ref: '#/components/schemas/common_DID'
          customerRef:
            type: string
      UserInfo:
        type: object
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          fields:
            type: array
            items:
              $ref: '#/components/schemas/common_IdentityFields'
          vasps:
            type: array
            items:
              $ref: '#/components/schemas/common_DID'
      UserInfoPermissions:
        type: object
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          fields:
            $ref: '#/components/schemas/common_IdentityFields'
          vasps:
            type: array
            items:
              $ref: '#/components/schemas/common_DID'
          roles:
            type: array
            items:
              $ref: '#/components/schemas/auth_RolesPermissionsOnVASP'
      RolesPermissionsOnVASP:
        type: object
        required:
          - vaspDID
          - permissions
        properties:
          vaspDID:
            $ref: '#/components/schemas/common_DID'
          role:
            type: string
          permissions:
            type: array
            items:
              type: string
      UserInfoUpdate:
        type: object
        required:
          - did
          - fields
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          fields:
            $ref: '#/components/schemas/common_IdentityFields'
      AddUserToVASPInput:
        type: object
        required:
          - email
          - vasp
        properties:
          email:
            type: string
            format: email
          vasp:
            type: string
            $ref: '#/components/schemas/common_DID'
          role:
            type: string
          callbackExtra:
            type: string
      RemoveUserFromVASPInput:
        type: object
        required:
          - userDID
          - vasp
        properties:
          userDID:
            $ref: '#/components/schemas/common_DID'
          vasp:
            type: string
            $ref: '#/components/schemas/common_DID'
      CreateIdentityInput:
        type: object
        properties:
          credentials:
            type: array
            items:
              type: object
              properties:
                property:
                  type: string
                  description: The property name of the credential
                value:
                  type: string
                  description: The value of the credential
                type:
                  type: string
                  description: The type of credential
                  example: UserField
      DID:
        type: string
        description: Decentralized Identifier
        pattern: ^did:[a-zA-Z0-9]*:.*$
        example: did:methd:identifier
      IdentityFields:
        type: array
        description: List of fields
        items:
          type: object
          description: Field
          properties:
            fieldName:
              type: string
              description: Name of field
            values:
              type: array
              description: History of values for the field. Last value first
              items:
                type: object
                description: Value of the field
                properties:
                  value:
                    $ref: '#/components/schemas/AnyObject'
                    description: Value of the field
                  issuer:
                    $ref: '#/components/schemas/common_DID'
                  issuanceDate:
                    type: string
                    format: date
                  expirationDate:
                    type: string
                    format: date
      VaspFields:
        type: object
        description: List of VASP fields
        properties:
          companyName:
            type: string
            description: Company name field
          jurisdiction:
            type: string
            description: Jurisdiction of the company
      UserFields:
        type: object
        description: List of User fields
        properties:
          name:
            type: string
            description: Name of the user
      UploadURLInfo:
        type: object
        properties:
          uploadUrl:
            type: string
          uploadFields:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                value:
                  type: string
      PaginationInformation:
        type: object
        properties:
          page:
            $ref: '#/components/schemas/PaginationPage'
          per_page:
            $ref: '#/components/schemas/PaginationPerPage'
          order:
            $ref: '#/components/schemas/PaginationOrder'
          total:
            type: integer
      Documents:
        type: array
        description: List of documents
        items:
          type: object
          properties:
            locationUrl:
              type: string
            mimeType:
              type: string
            name:
              type: string
      RegisterAddressWebhookResponse:
        type: object
        properties:
          secret:
            type: string
      GetAddressWebhookResponse:
        type: object
        properties:
          url:
            type: string
          params:
            type: string
          secret:
            type: string
      DeleteAddressWebhookResponse:
        type: object
        properties:
          isDeleted:
            type: boolean
          message:
            type: string
      VASPList:
        type: object
        properties:
          vasps:
            type: array
            description: List of VASPInfo
            items:
              $ref: '#/components/schemas/tf_VASPInfo'
          pagination:
            $ref: '#/components/schemas/PaginationInformation'
      VASPInfo:
        type: object
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          fields:
            $ref: '#/components/schemas/common_IdentityFields'
          documents:
            $ref: '#/components/schemas/common_Documents'
          hasAdmin:
            type: boolean
          isActiveSender:
            type: boolean
          isActiveReceiver:
            type: boolean
      VASPListSimple:
        type: object
        properties:
          vasps:
            type: array
            description: List of VASPInfoSimple
            items:
              $ref: '#/components/schemas/tf_VASPInfoSimple'
          pagination:
            $ref: '#/components/schemas/common_PaginationInformation'
      VASPInfoSimple:
        type: object
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          name:
            type: string
          website:
            type: string
          logo:
            type: string
          incorporationCountry:
            type: string
          documents:
            type: string
          hasAdmin:
            type: boolean
          isNotifiable:
            type: boolean
          isActiveSender:
            type: boolean
          isActiveReceiver:
            type: boolean
          issuers:
            type: string
      VASPUpdate:
        type: object
        required:
          - fields
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          fields:
            $ref: '#/components/schemas/common_IdentityFields'
      UserVASPCreate:
        type: object
        properties:
          vaspFields:
            $ref: '#/components/schemas/common_VaspFields'
          userFields:
            $ref: '#/components/schemas/common_UserFields'
      TrustVASP:
        type: object
        properties:
          threshold:
            type: string
            description: Amount in USD-cents
          notes:
            type: string
      TrustVASPInfo:
        type: object
        required:
          - vaspDID
          - trustedVaspDID
        properties:
          vaspDID:
            $ref: '#/components/schemas/DID'
          trustedVaspDID:
            $ref: '#/components/schemas/DID'
          trusted:
            type: boolean
            description: Is `trustedVaspDID` trusted by `vaspDID` ?
          threshold:
            type: string
            description: Amount in USD-cents
          notes:
            type: string
          action:
            type: array
            items:
              $ref: '#/components/schemas/tf_TrustVASPAction'
      TrustVASPAction:
        type: object
        properties:
          hash:
            type: string
            description: Credential Hash
          issuerDID:
            $ref: '#/components/schemas/DID'
          action:
            type: string
            description: Action executed
          actionData:
            type: string
            description: Action Data
      UntrustVASP:
        type: object
        properties:
          notes:
            type: string
      VaspnetData:
        type: object
        properties:
          vaspResults:
            type: array
            items:
              type: object
      TravelRuleConfigInput:
        type: object
        required:
          - vaspDID
          - protocol
          - active
        properties:
          vaspDID:
            $ref: '#/components/schemas/DID'
          protocol:
            $ref: '#/components/schemas/tr_TravelRuleProtocol'
          active:
            type: boolean
          parameters:
            type: string
      TravelRuleConfig:
        type: object
        properties:
          vaspDID:
            $ref: '#/components/schemas/DID'
          TRLight:
            type: boolean
          TRLightParams:
            type: string
          TRP:
            type: boolean
          TPRParams:
            type: string
          OpenVASP:
            type: boolean
          OpenVASPParams:
            type: string
      TransferInformationID:
        type: string
        description: Identifier of the TransferInformation
        format: uuid
        example: 123e4567-e89b-12d3-a456-426614174000
      TransferInformation:
        type: object
        properties:
          id:
            $ref: '#/components/schemas/TransferInformationID'
          protocol:
            $ref: '#/components/schemas/tr_TravelRuleProtocol'
          status:
            $ref: '#/components/schemas/tr_TransferInformationStatus'
          originatorVASPdid:
            $ref: '#/components/schemas/DID'
          beneficiaryVASPdid:
            $ref: '#/components/schemas/DID'
          ivms101:
            $ref: '#/components/schemas/ivms101_IVMS101'
          transaction:
            $ref: '#/components/schemas/tr_TransactionInformation'
          protocolData:
            $ref: '#/components/schemas/ProtocolData'
          chargedQuantity:
            type: number
            description: Charged Quantity
          actions:
            type: array
            items:
              $ref: '#/components/schemas/TransferInformationAction'
      TransferInformationStatus:
        type: string
        description: >
          Status of the Transfer Information * `NEW` Transfer Information was
          created, but not sent yet.

          * `SENT` Transfer Information was sent (TRLight/TRP)

          * `REQUESTED` Destination address requested (OpenVASP/Sygna)

          * `REJECTED` Transfer rejected (TRP/Sygna)

          * `DECLINED` Transfer declined (TRP/Sygna)
        enum:
          - NEW
          - SENT
          - REQUESTED
          - REJECTED
          - DECLINED
      TransferInformationCreateRequest:
        type: object
        required:
          - originatorVASPdid
          - transaction
        properties:
          protocol:
            $ref: '#/components/schemas/tr_TravelRuleProtocol'
          originatorVASPdid:
            $ref: '#/components/schemas/DID'
          beneficiaryVASPdid:
            $ref: '#/components/schemas/DID'
          notificationEmail:
            type: string
            format: email
            description: Beneficiary VASP Notification Email
          skipBeneficiaryDataValidation:
            type: boolean
            description: Disable beneficiary data validation (opportunistic compliance)
          beneficiaryVASPname:
            type: string
            description: Beneficiary VASP name
          originator:
            $ref: '#/components/schemas/ivms101_Originator'
          beneficiary:
            $ref: '#/components/schemas/ivms101_Beneficiary'
          transaction:
            $ref: '#/components/schemas/tr_TransactionInformation'
          encrypted:
            type: string
            description: >-
              Encrypted Personal Identificable Information (obscure schema-less
              value)
          onBehalfOfMyself:
            type: boolean
            description: >-
              Autopopulate originator and beneficiary fields with institution's
              information
      TransferInformationUpdateRequest:
        type: object
        required:
          - id
        properties:
          id:
            type: string
            description: Identifier of the TransferInformation
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          notificationEmail:
            type: string
            format: email
            description: Beneficiary VASP Notification Email
      TransferInformationResolution:
        type: object
        required:
          - id
          - resolution
        properties:
          id:
            type: string
            description: Identifier of the TransferInformation
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          resolution:
            type: string
            description: >
              Resolution code

              * `APPROVE` Transfer Information is approved (OpenVASP/Sygna)

              * `REJECT` Transfer Information is rejected (OpenVASP/Sygna)

              * `DECLINE` Transfer Information is declined (OpenVASP/Sygna)

              * `ACK` Transfer Information is acknowledged / received
              (TRLight/TRP)
            enum:
              - APPROVE
              - REJECT
              - DECLINE
              - ACK
          destination:
            description: Destination Blockchain Address (OpenVASP)
            type: string
            example: 0xdestinationAddress
      TransferInformationFinishData:
        type: object
        properties:
          id:
            type: string
            description: Identifier of the TransferInformation
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          transaction:
            $ref: '#/components/schemas/tr_TransactionInformation'
      TransactionInformation:
        type: object
        properties:
          asset:
            description: Asset symbol (BTC,ETH)
            type: string
            example: ETH
          amount:
            type: string
            description: Amount in base unit of the asset (satoshi, wei, etc)
          blockchainInfo:
            description: Information about the transaction on the blockchain
            type: object
            properties:
              txHash:
                description: Transaction txHash
                type: string
              origin:
                description: Originator Address
                type: string
              destination:
                description: Destination Address
                type: string
            example:
              txHash: 0x00t0x0H0a0s0h0
              origin: 0xoriginAddress
              destination: 0xdestinationAddress
      TravelRuleProtocol:
        type: string
        enum:
          - TRLight
          - TRP
          - OpenVASP
        example: TRLight
      TransferInformationDirection:
        type: string
        enum:
          - INCOMING
          - OUTGOING
        example: INCOMING
      TransferInformationList:
        type: object
        properties:
          transferInformations:
            type: array
            description: List of TransferInformation
            items:
              $ref: '#/components/schemas/TransferInformation'
          pagination:
            $ref: '#/components/schemas/PaginationInformation'
      AccessLink:
        type: string
        description: Identifier of the AccessLink
        format: uuid
        example: 123e4567-e89b-12d3-a456-426614174000
      IVMS101:
        type: object
        properties:
          originator:
            $ref: '#/components/schemas/ivms101_Originator'
          beneficiary:
            $ref: '#/components/schemas/ivms101_Beneficiary'
          originatingVASP:
            $ref: '#/components/schemas/OriginatingVASP'
          beneficiaryVASP:
            $ref: '#/components/schemas/BeneficiaryVASP'
          transferPath:
            $ref: '#/components/schemas/TransferPath'
          payloadMetadata:
            $ref: '#/components/schemas/PayloadMetadata'
      Originator:
        description: >-
          The originator is defined in Section 1.1 as the account holder who
          allows the VA transfer from that account or, where there is no account,
          the natural or legal person that places the order with the originating
          VASP to perform the VA transfer.
        type: object
        required:
          - originatorPersons
        properties:
          originatorPersons:
            description: >-
              the account holder who allows the VA transfer from that account or,
              where there is no account, the natural or legal person that places
              the order with the originating VASP to perform the VA transfer.
            type: array
            items:
              $ref: '#/components/schemas/ivms101_Person'
          accountNumber:
            description: >-
              Identifier of an account that is used to process the transfer. The
              value for this element is case-sensitive.
            type: array
            items:
              $ref: '#/components/schemas/Text'
      Beneficiary:
        description: >-
          The beneficiary is defined in Section 1.1 as the natural or legal person
          or legal arrangement who is identified by the originator as the receiver
          of the requested VA transfer.
        type: object
        required:
          - beneficiaryPersons
        properties:
          beneficiaryPersons:
            description: >-
              the natural or legal person or legal arrangement who is identified
              by the originator as the receiver of the requested VA transfer.
            type: array
            items:
              $ref: '#/components/schemas/ivms101_Person'
          accountNumber:
            description: >-
              Identifier of an account that is used to process the transfer. The
              value for this element is case-sensitive.
            type: array
            items:
              $ref: '#/components/schemas/Text'
      Person:
        type: object
        properties:
          naturalPerson:
            $ref: '#/components/schemas/NaturalPerson'
          legalPerson:
            $ref: '#/components/schemas/LegalPerson'
      CountryCode:
        description: >-
          two alphabetic characters representing an ISO-3166 Alpha-2 country,
          including the code ‘XX’ to represent ‘an indicator for unknown States,
          other entities or organisations
        type: string
        pattern: ^[A-Z]{2}$
      Number:
        description: Number represented as an integer (18 digits)
        type: integer
        format: int64
      common_DID:
        type: string
        description: Decentralized Identifier
        pattern: ^did:[a-zA-Z0-9]*:.*$
        example: did:methd:identifier
      common_UploadURLInfo:
        type: object
        properties:
          uploadUrl:
            type: string
          uploadFields:
            type: array
            items:
              type: object
              properties:
                key:
                  type: string
                value:
                  type: string
      CAIP19:
        description: Object with property caip to hold the type of the asset
        type: object
        required:
          - caip19
        properties:
          caip19:
            type: string
            pattern: >-
              ^[-a-z0-9]{3,8}:[-_a-zA-Z0-9]{1,32}\/[-a-z0-9]{3,8}:[-.%a-zA-Z0-9]{1,128}$
            description: CAIP-19 string that defines a type of asset
      CoingeckoIdAndNetwork:
        description: Object containing coingeckoId and network of the asset
        type: object
        required:
          - coingeckoId
          - network
        properties:
          coingeckoId:
            type: string
            description: String that represents an asset in Coingecko
          network:
            type: string
            description: String that represents a network in Notabene
      RegisterCustomerInput:
        type: object
        required:
          - vaspDID
          - address
          - customerRef
        properties:
          vaspDID:
            type: string
            $ref: '#/components/schemas/common_DID'
          asset:
            oneOf:
              - type: string
                description: Asset symbol (BTC,ETH)
                example: ETH
              - $ref: '#/components/schemas/CAIP19'
              - $ref: '#/components/schemas/CoingeckoIdAndNetwork'
          address:
            type: string
          customerRef:
            type: string
      BlockchainAddress:
        type: string
        description: Blockchain address
        example: '0x489c818ca8b9251b393131b08a736a67ccb19298'
      Asset:
        type: string
        description: Crypto currency
        example: ETH
      BlockchainAddressInfoSource:
        type: string
        description: |
          Source of address information
          * `UNKNOWN` Address is not kwown.
          * `ADDRESS_HASH` Notabene private address network.
          * `ADDRESS_GRAPH` Notabene address graph.
          * `CHAINALYSIS` Chainalysis
          * `ELLIPTIC` Elliptic
          * `CRYSTAL` Crystal
        enum:
          - UNKNOWN
          - ADDRESS_HASH
          - ADDRESS_GRAPH
          - CHAINALYSIS
          - ELLIPTIC
      AddressOwnershipResponse:
        type: object
        properties:
          owner_vasp_did:
            type: string
          owner_vasp_name:
            type: string
            deprecated: true
          address:
            $ref: '#/components/schemas/BlockchainAddress'
          address_type:
            type: string
            enum:
              - HOSTED
              - UNHOSTED
          asset:
            $ref: '#/components/schemas/Asset'
          source:
            $ref: '#/components/schemas/BlockchainAddressInfoSource'
      Error:
        type: object
        properties:
          err:
            type: object
            properties:
              name:
                type: string
                example: NotabeneError
              code:
                type: number
                example: 404
              message:
                type: string
                example: Entity Not Found
              stack:
                type: string
      BlockchainAddressQuerySource:
        type: string
        description: Blockchain address query sources available
        enum:
          - ADDRESS_GRAPH
      QuerySourceType:
        type: string
        enum:
          - INTERNAL
          - EXTERNAL
        description: |
          Query source types (if not provided, it will return all addresses):
            * `INTERNAL` - **Internal address book**: addresses owned by a VASP. It can be populated by uploading a CSV, confirming incoming transfers, registering addresses. It is used to confirm transfers.
            * `EXTERNAL` - **External address book**: addresses owned by counterparty VASPs. It is populated only when a counterparty VASP confirms a transfer that another VASP sent them. It is used to identify counterparty VASP via Validate / Widget / Network Discovery flows.
      PaginationPage:
        description: Page number
        type: integer
      PaginationPerPage:
        description: Records per page
        type: integer
      Address:
        type: object
        properties:
          address:
            $ref: '#/components/schemas/BlockchainAddress'
          owner_vasp_did:
            type: string
            description: Custodial VASP DID
          customer_did:
            type: string
            description: Customer DID
          customer_ref:
            type: string
            description: Customer reference
      AddressesResponse:
        type: object
        properties:
          pagination:
            type: object
            properties:
              page:
                $ref: '#/components/schemas/PaginationPage'
              per_page:
                $ref: '#/components/schemas/PaginationPerPage'
              total:
                type: integer
          metadata:
            type: object
            properties:
              source:
                $ref: '#/components/schemas/BlockchainAddressQuerySource'
          data:
            type: array
            items:
              $ref: '#/components/schemas/Address'
      auth_CustomerTokenInput:
        type: object
        required:
          - vaspDID
          - customerRef
        properties:
          vaspDID:
            $ref: '#/components/schemas/common_DID'
          customerRef:
            type: string
      AnyObject: {}
      common_IdentityFields:
        type: array
        description: List of fields
        items:
          type: object
          description: Field
          properties:
            fieldName:
              type: string
              description: Name of field
            values:
              type: array
              description: History of values for the field. Last value first
              items:
                type: object
                description: Value of the field
                properties:
                  value:
                    $ref: '#/components/schemas/AnyObject'
                    description: Value of the field
                  issuer:
                    $ref: '#/components/schemas/common_DID'
                  issuanceDate:
                    type: string
                    format: date
                  expirationDate:
                    type: string
                    format: date
      auth_UserInfoUpdate:
        type: object
        required:
          - did
          - fields
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          fields:
            $ref: '#/components/schemas/common_IdentityFields'
      auth_UserInfo:
        type: object
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          fields:
            type: array
            items:
              $ref: '#/components/schemas/common_IdentityFields'
          vasps:
            type: array
            items:
              $ref: '#/components/schemas/common_DID'
      Roles:
        type: string
        description: |
          User roles
          * `admin` Admin user
          * `developer` Developer user
          * `compliance_officer` compliance officer
          * `compliance_agent` Compliance agent
          * `billing_customer admin` Billing customer admin
        enum:
          - admin
          - developer
          - compliance_officer
          - compliance_agent
          - billing_customer_admin
      VASPuser:
        type: object
        required:
          - did
          - role
        properties:
          did:
            description: User DID
            type: string
            $ref: '#/components/schemas/common_DID'
          email:
            description: User email
            type: string
            format: email
          name:
            description: User Name
            type: string
          role:
            $ref: '#/components/schemas/Roles'
      auth_AddUserToVASPInput:
        type: object
        required:
          - email
          - vasp
        properties:
          email:
            type: string
            format: email
          vasp:
            type: string
            $ref: '#/components/schemas/common_DID'
          role:
            type: string
          callbackExtra:
            type: string
      auth_RemoveUserFromVASPInput:
        type: object
        required:
          - userDID
          - vasp
        properties:
          userDID:
            $ref: '#/components/schemas/common_DID'
          vasp:
            type: string
            $ref: '#/components/schemas/common_DID'
      NewCustomerInput:
        type: object
        required:
          - vaspDID
        properties:
          vaspDID:
            type: string
            $ref: '#/components/schemas/common_DID'
          customerRef:
            type: string
      Customer:
        type: object
        required:
          - did
          - vaspDID
        properties:
          id:
            type: string
            description: Identifier of the Transfer
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          did:
            type: string
            $ref: '#/components/schemas/common_DID'
          vaspDID:
            type: string
            $ref: '#/components/schemas/common_DID'
          customerRef:
            type: string
      IntegrationsRegisterAddressWebhookInput:
        type: object
        required:
          - url
          - params
        properties:
          url:
            type: string
            description: A URL with HTTPS protocol
          params:
            type: string
            description: All of the query params needed appended in string format
            pattern: ^\?([\w-]+(=[\w-]*)?(&[\w-]+(=[\w-]*)?)*)?$
      common_RegisterAddressWebhookResponse:
        type: object
        properties:
          secret:
            type: string
      common_DeleteAddressWebhookResponse:
        type: object
        properties:
          isDeleted:
            type: boolean
          message:
            type: string
      IntegrationConfigTxNotificationInput:
        type: object
        required:
          - vaspDID
          - callbackUrl
        properties:
          vaspDID:
            $ref: '#/components/schemas/common_DID'
          callbackUrl:
            type: string
            description: Callback URL
      IntegrationInfoTxNotification:
        type: object
        required:
          - vaspDID
        properties:
          vaspDID:
            $ref: '#/components/schemas/common_DID'
          callbackUrl:
            description: Callback URL
            type: string
      BlockchainAnalyticsProviders:
        type: string
        description: Blockchain Analytics Providers
        enum:
          - CHAINALYSIS
          - ELLIPTIC
          - CRYSTAL
          - TRM
      SanctionListProviders:
        type: string
        description: Sanction List Providers
        enum:
          - REFINITIV
          - COMPLY_ADVANTAGE
          - LEXISNEXIS
          - TRM_SANCTIONS
      CustodianProviders:
        type: string
        description: Custodian Providers
        enum:
          - BITGO
      IntegrationsGetThirdPartyProviders:
        type: object
        properties:
          blockchainAnalyticsProviders:
            type: array
            items:
              $ref: '#/components/schemas/BlockchainAnalyticsProviders'
          sanctionListProviders:
            type: array
            items:
              $ref: '#/components/schemas/SanctionListProviders'
          custodianProviders:
            type: array
            items:
              $ref: '#/components/schemas/CustodianProviders'
      GetResponse:
        type: object
        properties:
          url:
            description: Protocol Agent URL
            type: string
      PostRequest:
        type: object
        required:
          - vaspDID
          - url
        properties:
          vaspDID:
            description: VASP DID
            $ref: '#/components/schemas/common_DID'
          url:
            description: Protocol Agent URL
            type: string
      DeleteRequest:
        type: object
        required:
          - vaspDID
          - url
        properties:
          vaspDID:
            description: VASP DID
            $ref: '#/components/schemas/common_DID'
          url:
            description: Protocol Agent URL
            type: string
      AgentAddressDiscoveryRequest:
        type: object
        required:
          - id
          - message
          - payload
        properties:
          id:
            description: Address Discovery ID
            type: string
          message:
            description: Agent Message
            type: string
            enum:
              - address_discovery
          payload:
            description: Payload of the message
            type: object
            required:
              - address
              - asset
              - vaspDID
            properties:
              address:
                description: Blockchain address
                type: string
              asset:
                description: Asset type
                type: string
              vaspDID:
                description: Destination Address
                type: string
                nullable: true
      SetWebhookInput:
        type: object
        required:
          - vaspDID
          - url
        properties:
          vaspDID:
            $ref: '#/components/schemas/common_DID'
          url:
            type: string
            description: Callback URL
      DeleteWebhookInput:
        type: object
        required:
          - vaspDID
        properties:
          vaspDID:
            $ref: '#/components/schemas/common_DID'
      common_VaspFields:
        type: object
        description: List of VASP fields
        properties:
          companyName:
            type: string
            description: Company name field
          jurisdiction:
            type: string
            description: Jurisdiction of the company
      common_UserFields:
        type: object
        description: List of User fields
        properties:
          name:
            type: string
            description: Name of the user
      tf_UserVASPCreate:
        type: object
        properties:
          vaspFields:
            $ref: '#/components/schemas/common_VaspFields'
          userFields:
            $ref: '#/components/schemas/common_UserFields'
      common_Documents:
        type: array
        description: List of documents
        items:
          type: object
          properties:
            locationUrl:
              type: string
            mimeType:
              type: string
            name:
              type: string
      tf_VASPInfo:
        type: object
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          fields:
            $ref: '#/components/schemas/common_IdentityFields'
          documents:
            $ref: '#/components/schemas/common_Documents'
          hasAdmin:
            type: boolean
          isActiveSender:
            type: boolean
          isActiveReceiver:
            type: boolean
      tf_VASPInfoSimple:
        type: object
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          name:
            type: string
          website:
            type: string
          logo:
            type: string
          incorporationCountry:
            type: string
          documents:
            type: string
          hasAdmin:
            type: boolean
          isNotifiable:
            type: boolean
          isActiveSender:
            type: boolean
          isActiveReceiver:
            type: boolean
          issuers:
            type: string
      PaginationOrder:
        description: Field to order by
        type: string
        pattern: ^([ A-Za-z]+(:(ASC|DESC))?(:NULLS (FIRST|LAST))?(,?))+$
      common_PaginationInformation:
        type: object
        properties:
          page:
            $ref: '#/components/schemas/PaginationPage'
          per_page:
            $ref: '#/components/schemas/PaginationPerPage'
          order:
            $ref: '#/components/schemas/PaginationOrder'
          total:
            type: integer
      tf_VASPListSimple:
        type: object
        properties:
          vasps:
            type: array
            description: List of VASPInfoSimple
            items:
              $ref: '#/components/schemas/tf_VASPInfoSimple'
          pagination:
            $ref: '#/components/schemas/common_PaginationInformation'
      tf_VASPUpdate:
        type: object
        required:
          - fields
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          fields:
            $ref: '#/components/schemas/common_IdentityFields'
      UserVASPList:
        type: object
        properties:
          claimable:
            type: array
            description: List of VASPInfoSimple
            items:
              $ref: '#/components/schemas/tf_VASPInfoSimple'
          joinable:
            type: array
            description: List of VASPInfoSimple
            items:
              $ref: '#/components/schemas/tf_VASPInfoSimple'
          loginable:
            type: array
            description: List of VASPInfoSimple
            items:
              $ref: '#/components/schemas/tf_VASPInfoSimple'
      VASPTopCounterParty:
        type: object
        properties:
          vaspDID:
            type: string
            $ref: '#/components/schemas/common_DID'
          vaspName:
            type: string
          vaspLogoURL:
            type: string
            nullable: true
          jurisdiction:
            type: string
            nullable: true
          totalIncomingTransactions:
            type: number
          totalOutgoingTransactions:
            type: number
          travelRuleIncomingTransactions:
            type: number
          travelRuleOutgoingTransactions:
            type: number
          sendsTravelRuleData:
            type: boolean
          repliesTravelRuleData:
            type: boolean
          isVerified:
            type: boolean
          isClaimed:
            type: boolean
          isInNetwork:
            type: boolean
      Settings:
        type: object
        properties:
          autoconfirm:
            type: boolean
          statusToProcessBlockchain:
            enum:
              - CREATED
              - SENT
              - ACK
              - ACCEPTED
              - null
          vaspDiscoverability:
            type: boolean
          autoredirect:
            type: boolean
      OutgoingRequests:
        type: string
        enum:
          - outgoing-requests
      DocumentType:
        type: string
        description: Accepted document type
        enum:
          - DDQ for Travel Rule Data Sharing
      DocumentRequestStatus:
        type: string
        description: Status of a document request
        enum:
          - WAITING_FOR_INFORMATION
          - PENDING
          - APPROVED
          - DECLINED
          - REVOKED
      DocumentRequest:
        type: object
        description: Document request
        properties:
          documentType:
            $ref: '#/components/schemas/DocumentType'
          status:
            $ref: '#/components/schemas/DocumentRequestStatus'
      TrustFrameworkVASPNotFoundError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: TrustFrameworkVASPNotFoundError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: no VASP found with vaspDID
              stack:
                type: string
                description: Error stack message
      TrustFrameworkUserDoesNotExistOnVASP:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - vaspDID
            properties:
              name:
                description: Name of the error
                type: string
                example: TrustFrameworkUserDoesNotExistOnVASP
              code:
                description: HTTP status
                type: string
                example: 401
              message:
                description: Error message
                type: string
                example: Not a user of the VASP
              stack:
                type: string
                description: Error stack message
      DocumentAccessAction:
        type: string
        enum:
          - REQUEST
          - APPROVE
          - DECLINE
          - REVOKE
      TransactionID:
        type: string
        description: Identifier of the Transfer
        format: uuid
        example: 123e4567-e89b-12d3-a456-426614174000
      TransactionStatus:
        type: string
        description: >
          Status of the Transfer

          * `SAVED` Transfer stored.

          * `MISSING_BENEFICIARY_DATA` TravelRule: Transfer Information is missing
          beneficiary data.

          * `NEW` TravelRule: Transfer Information was created, but not sent yet.

          * `WAITING_FOR_INFORMATION` TravelRule: Transfer Information is waiting
          for information to send.

          * `SENT` TravelRule: Transfer Information was sent (TRLight/TRP)

          * `REJECTED` TravelRule: Transfer rejected (TRP/Sygna)

          * `DECLINED` TravelRule: Transfer declined (TRP/Sygna)

          * `ACK` TravelRule: Destination blockchain address belongs to
          beneficiary confirmed.

          * `CANCELLED` Transfer cancelled.

          * `INCOMPLETE` Transfer created only with Blockchain Data (called by
          Beneficiary).

          * `ACCEPTED` Transfer accepted.

          * `NOT_READY` Transfer not ready.
        enum:
          - SAVED
          - MISSING_BENEFICIARY_DATA
          - NEW
          - WAITING_FOR_INFORMATION
          - SENT
          - REJECTED
          - DECLINED
          - ACK
          - CANCELLED
          - INCOMPLETE
          - ACCEPTED
          - NOT_READY
      TransactionType:
        type: string
        description: >
          Type of the Transfer

          * `BELOW_THRESHOLD` Transfer is below all threshold.

          * `NON_CUSTODIAL` Transfer is on a customer owned wallet. Proof
          required.

          * `TRAVELRULE` Transfer is between VASPs. TravelRule transfer created.

          * `UNKNOWN` Transfer with any missing information.
        enum:
          - BELOW_THRESHOLD
          - NON_CUSTODIAL
          - TRAVELRULE
          - UNKNOWN
      TransactionBlockchainInfo:
        description: Information about the transaction on the blockchain
        type: object
        required:
          - destination
        properties:
          txHash:
            description: Transaction txHash
            type: string
          origin:
            description: Originator Address
            type: string
          destination:
            description: Destination Address
            type: string
      Text:
        description: A character string
        type: string
        pattern: ^.+$
      NaturalPersonNameTypeCode:
        description: >
          A single value corresponding to the nature of name being adopted.

          * `ALIA` Alias name  - A name other than the legal name by which a
          natural person is also known.

          * `BIRT` Name at birth - The name given to a natural person at birth.

          * `MAID` Maiden name - The original name of a natural person who has
          changed their name after marriage.

          * `LEGL` Legal name - The name that identifies a natural person for
          legal, official or administrative purposes.

          * `MISC` Unspecified - A name by which a natural person may be known but
          which cannot otherwise be categorized or the category of which the
          sender is unable to determine.
        type: string
        enum:
          - ALIA
          - BIRT
          - MAID
          - LEGL
          - MISC
      NaturalPersonNameID:
        type: object
        properties:
          primaryIdentifier:
            $ref: '#/components/schemas/Text'
          secondaryIdentifier:
            $ref: '#/components/schemas/Text'
          nameIdentifierType:
            $ref: '#/components/schemas/NaturalPersonNameTypeCode'
      LocalNaturalPersonNameID:
        type: object
        properties:
          primaryIdentifier:
            $ref: '#/components/schemas/Text'
          secondaryIdentifier:
            $ref: '#/components/schemas/Text'
          nameIdentifierType:
            $ref: '#/components/schemas/NaturalPersonNameTypeCode'
      NaturalPersonName:
        type: object
        required:
          - nameIdentifier
        properties:
          nameIdentifier:
            description: full name separated into primary and secondary identifier.
            type: array
            items:
              $ref: '#/components/schemas/NaturalPersonNameID'
          localNameIdentifier:
            description: >-
              full name separated into primary and secondary identifier using
              local characters.
            type: array
            items:
              $ref: '#/components/schemas/LocalNaturalPersonNameID'
          phoneticNameIdentifier:
            description: >-
              Alternate representation of a name that corresponds to the manner
              the name is pronounced.
            type: array
            items:
              $ref: '#/components/schemas/LocalNaturalPersonNameID'
      AddressTypeCode:
        description: >
          Identifies the nature of the address.

          * `HOME` Residential - Address is the home address.

          * `BIZZ` Business - Address is the business address.

          * `GEOG` Geographic - Address is the unspecified physical (geographical)
          address suitable for identification of the natural or legal person.
        type: string
        enum:
          - HOME
          - BIZZ
          - GEOG
      ivms101_CountryCode:
        description: >-
          two alphabetic characters representing an ISO-3166 Alpha-2 country,
          including the code ‘XX’ to represent ‘an indicator for unknown States,
          other entities or organisations
        type: string
        pattern: ^[A-Z]{2}$
      ivms101_Address:
        type: object
        properties:
          addressType:
            $ref: '#/components/schemas/AddressTypeCode'
          department:
            $ref: '#/components/schemas/Text'
          subDepartment:
            $ref: '#/components/schemas/Text'
          streetName:
            $ref: '#/components/schemas/Text'
          buildingNumber:
            $ref: '#/components/schemas/Text'
          buildingName:
            $ref: '#/components/schemas/Text'
          floor:
            $ref: '#/components/schemas/Text'
          postBox:
            $ref: '#/components/schemas/Text'
          room:
            $ref: '#/components/schemas/Text'
          postCode:
            $ref: '#/components/schemas/Text'
          townName:
            $ref: '#/components/schemas/Text'
          townLocationName:
            $ref: '#/components/schemas/Text'
          districtName:
            $ref: '#/components/schemas/Text'
          countrySubDivision:
            $ref: '#/components/schemas/Text'
          addressLine:
            description: >-
              Information that locates and identifies a specific address, as
              defined by postal services, presented in free format text.
            type: array
            items:
              $ref: '#/components/schemas/Text'
          country:
            $ref: '#/components/schemas/ivms101_CountryCode'
      NationalIdentifierTypeCode:
        description: >
          Identifies the national identification type.

          * `ARNU` Alien registration number - Number assigned by a government
          agency to identify foreign nationals.

          * `CCPT` Passport number - Number assigned by a passport authority.

          * `RAID` Registration authority identifier - Identifier of a legal
          entity as maintained by a registration authority.

          * `DRLC` Driver license number - Number assigned to a driver's license.

          * `FIIN` Foreign investment identity number - Number assigned to a
          foreign investor (other than the alien number).

          * `TXID` Tax identification number - Number assigned by a tax authority
          to an entity.

          * `SOCS` Social security number - Number assigned by a social security
          agency.

          * `IDCD` Identity card number - Number assigned by a national authority
          to an identity card.

          * `LEIX` Legal Entity Identifier - Legal Entity Identifier (LEI)
          assigned in accordance with ISO 17442 11 .

          * `MISC` Unspecified - A national identifier which may be known but
          which cannot otherwise be categorized or the category of which the
          sender is unable to determine.
        type: string
        enum:
          - ARNU
          - CCPT
          - RAID
          - DRLC
          - FIIN
          - TXID
          - SOCS
          - IDCD
          - LEIX
          - MISC
      NationalIdentification:
        type: object
        required:
          - nationalIdentifier
          - nationalIdentifierType
        properties:
          nationalIdentifier:
            $ref: '#/components/schemas/Text'
          nationalIdentifierType:
            $ref: '#/components/schemas/NationalIdentifierTypeCode'
          countryOfIssue:
            $ref: '#/components/schemas/ivms101_CountryCode'
          registrationAuthority:
            $ref: '#/components/schemas/Text'
      Date:
        description: >-
          A point in time, represented as a day within the calendar year.
          Compliant with ISO 8601. (YYYY-MM-DD)
        type: string
        pattern: ^([0-9]{4})-([0-9]{2})-([0-9]{2})$
      DateAndPlaceOfBirth:
        type: object
        required:
          - dateOfBirth
          - placeOfBirth
        properties:
          dateOfBirth:
            $ref: '#/components/schemas/Date'
          placeOfBirth:
            $ref: '#/components/schemas/Text'
      NaturalPerson:
        type: object
        required:
          - name
        properties:
          name:
            description: the distinct words used as identification for an individual
            type: array
            items:
              $ref: '#/components/schemas/NaturalPersonName'
          geographicAddress:
            description: >-
              the particulars of a location at which a person may be communicated
              with.
            type: array
            items:
              $ref: '#/components/schemas/ivms101_Address'
          nationalIdentification:
            $ref: '#/components/schemas/NationalIdentification'
          customerIdentification:
            $ref: '#/components/schemas/Text'
          dateAndPlaceOfBirth:
            $ref: '#/components/schemas/DateAndPlaceOfBirth'
          countryOfResidence:
            $ref: '#/components/schemas/ivms101_CountryCode'
      LegalPersonNameTypeCode:
        description: >
          A single value corresponding to the nature of name being specified for
          the legal person.

          * `LEGL` Legal name - Official name under which an organisation is
          registered.

          * `SHRT` Short name - Specifies the short name of the organisation.

          * `TRAD` Trading name - Name used by a business for commercial purposes,
          although its registered legal name, used for contracts and other formal
          situations, may be another.
        type: string
        enum:
          - LEGL
          - SHRT
          - TRAD
      LegalPersonNameID:
        type: object
        properties:
          legalPersonName:
            $ref: '#/components/schemas/Text'
          legalPersonNameIdentifierType:
            $ref: '#/components/schemas/LegalPersonNameTypeCode'
      LocalLegalPersonNameID:
        type: object
        properties:
          legalPersonName:
            $ref: '#/components/schemas/Text'
          legalPersonNameIdentifierType:
            $ref: '#/components/schemas/LegalPersonNameTypeCode'
      LegalPersonName:
        type: object
        required:
          - nameIdentifier
        properties:
          nameIdentifier:
            description: The name and type of name by which the legal person is known.
            type: array
            items:
              $ref: '#/components/schemas/LegalPersonNameID'
          localNameIdentifier:
            description: >-
              The name and type of name by which the legal person is known using
              local characters.
            type: array
            items:
              $ref: '#/components/schemas/LocalLegalPersonNameID'
          phoneticNameIdentifier:
            description: >-
              The name and type of name by which the legal person is known using
              local characters.
            type: array
            items:
              $ref: '#/components/schemas/LocalLegalPersonNameID'
      LegalPerson:
        type: object
        required:
          - name
        properties:
          name:
            $ref: '#/components/schemas/LegalPersonName'
          geographicAddress:
            type: array
            items:
              $ref: '#/components/schemas/ivms101_Address'
          customerNumber:
            $ref: '#/components/schemas/Text'
          nationalIdentification:
            $ref: '#/components/schemas/NationalIdentification'
          dateOfRegistration:
            $ref: '#/components/schemas/Date'
          countryOfRegistration:
            $ref: '#/components/schemas/ivms101_CountryCode'
      ivms101_Person:
        type: object
        properties:
          naturalPerson:
            $ref: '#/components/schemas/NaturalPerson'
          legalPerson:
            $ref: '#/components/schemas/LegalPerson'
      ivms101_Originator:
        description: >-
          The originator is defined in Section 1.1 as the account holder who
          allows the VA transfer from that account or, where there is no account,
          the natural or legal person that places the order with the originating
          VASP to perform the VA transfer.
        type: object
        required:
          - originatorPersons
        properties:
          originatorPersons:
            description: >-
              the account holder who allows the VA transfer from that account or,
              where there is no account, the natural or legal person that places
              the order with the originating VASP to perform the VA transfer.
            type: array
            items:
              $ref: '#/components/schemas/ivms101_Person'
          accountNumber:
            description: >-
              Identifier of an account that is used to process the transfer. The
              value for this element is case-sensitive.
            type: array
            items:
              $ref: '#/components/schemas/Text'
      ivms101_Beneficiary:
        description: >-
          The beneficiary is defined in Section 1.1 as the natural or legal person
          or legal arrangement who is identified by the originator as the receiver
          of the requested VA transfer.
        type: object
        required:
          - beneficiaryPersons
        properties:
          beneficiaryPersons:
            description: >-
              the natural or legal person or legal arrangement who is identified
              by the originator as the receiver of the requested VA transfer.
            type: array
            items:
              $ref: '#/components/schemas/ivms101_Person'
          accountNumber:
            description: >-
              Identifier of an account that is used to process the transfer. The
              value for this element is case-sensitive.
            type: array
            items:
              $ref: '#/components/schemas/Text'
      OriginatingVASP:
        description: >-
          The originating VASP is defined in Section 1.1 as the VASP which
          initiates the VA transfer, and transfers the VA upon receiving the
          request for a VA transfer on behalf of the originator.
        type: object
        properties:
          originatingVASP:
            $ref: '#/components/schemas/ivms101_Person'
      BeneficiaryVASP:
        description: >-
          The beneficiary is defined in Section 1.1 as the VASP which receives the
          transfer of a virtual asset from the originating VASP directly or
          through an intermediary VASP and makes the funds available to the
          beneficiary.
        type: object
        properties:
          beneficiaryVASP:
            $ref: '#/components/schemas/ivms101_Person'
      ivms101_Number:
        description: Number represented as an integer (18 digits)
        type: integer
        format: int64
      IntermediaryVASP:
        type: object
        required:
          - intermediaryVASP
          - sequence
        properties:
          intermediaryVASP:
            $ref: '#/components/schemas/ivms101_Person'
          sequence:
            $ref: '#/components/schemas/ivms101_Number'
      TransferPath:
        description: >-
          The transfer path refers to the intermediary VASP(s) participating in a
          serial chain that receive(s) and retransmit(s) a VA transfer on behalf
          of the originating VASP and the beneficiary VASP, or another
          intermediary VASP, together with their corresponding sequence number.
        type: object
        properties:
          transferPath:
            description: >-
              the intermediary VASP(s) participating in a serial chain that
              receive and retransmit a VA transfer on behalf of the originating
              VASP and the beneficiary VASP, or another intermediary VASP,
              together with their corresponding sequence number.
            type: array
            items:
              $ref: '#/components/schemas/IntermediaryVASP'
      TransliterationMethodCode:
        description: >
          Identifies the national script from which transliteration to Latin
          script is applied.

          * `arab` Arabic (Arabic language) - ISO 233-2:1993

          * `aran` Arabic (Persian language) - ISO 233-3:1999

          * `armn` Armenian - ISO 9985:1996

          * `cyrl` Cyrillic - ISO 9:1995

          * `deva` Devanagari & related Indic - ISO 15919:2001

          * `geor` Georgian - ISO 9984:1996

          * `grek` Greek - ISO 843:1997

          * `hani` Han (Hanzi, Kanji, Hanja) - ISO 7098:2015

          * `hebr` Hebrew - ISO 259-2:1994

          * `kana` Kana - ISO 3602:1989

          * `kore` Korean - Revised Romanization of Korean

          * `thai` Thai - ISO 11940-2:2007

          * `othr` Script other than those listed above - Unspecified
        type: string
        enum:
          - arab
          - aran
          - armn
          - cyrl
          - deva
          - geor
          - grek
          - hani
          - hebr
          - kana
          - kore
          - thai
          - othr
      PayloadMetadata:
        description: Data describing the contents of the payload.
        type: object
        properties:
          transliterationMethod:
            description: >-
              the method used to map from a national system of writing to Latin
              script.
            type: array
            items:
              $ref: '#/components/schemas/TransliterationMethodCode'
      ivms101_IVMS101:
        type: object
        properties:
          originator:
            $ref: '#/components/schemas/ivms101_Originator'
          beneficiary:
            $ref: '#/components/schemas/ivms101_Beneficiary'
          originatingVASP:
            $ref: '#/components/schemas/OriginatingVASP'
          beneficiaryVASP:
            $ref: '#/components/schemas/BeneficiaryVASP'
          transferPath:
            $ref: '#/components/schemas/TransferPath'
          payloadMetadata:
            $ref: '#/components/schemas/PayloadMetadata'
      tr_TravelRuleProtocol:
        type: string
        enum:
          - TRLight
          - TRP
          - OpenVASP
        example: TRLight
      ProtocolData:
        type: object
        properties:
          trLightData:
            description: TRLight Procotol data
            type: object
            properties:
              notificationEmails:
                description: Notification emails
                type: array
                items:
                  type: string
      OwnershipProof:
        description: Ownership Proof data
        type: object
        properties:
          type:
            description: Type
            type: string
          proof:
            description: Proof
            type: string
      TransactionAction:
        type: object
        properties:
          hash:
            type: string
            description: Credential Hash
          issuerDID:
            $ref: '#/components/schemas/common_DID'
          action:
            type: string
            description: Action executed
          actionData:
            type: string
            description: Action Data
      pii_NaturalPersonNameID:
        type: object
        properties:
          primaryIdentifier:
            $ref: '#/components/schemas/Text'
          secondaryIdentifier:
            $ref: '#/components/schemas/Text'
          nameIdentifierType:
            $ref: '#/components/schemas/Text'
      pii_LocalNaturalPersonNameID:
        type: object
        properties:
          primaryIdentifier:
            $ref: '#/components/schemas/Text'
          secondaryIdentifier:
            $ref: '#/components/schemas/Text'
          nameIdentifierType:
            $ref: '#/components/schemas/Text'
      pii_NaturalPersonName:
        type: object
        required:
          - nameIdentifier
        properties:
          nameIdentifier:
            description: full name separated into primary and secondary identifier.
            type: array
            items:
              $ref: '#/components/schemas/pii_NaturalPersonNameID'
          localNameIdentifier:
            description: >-
              full name separated into primary and secondary identifier using
              local characters.
            type: array
            items:
              $ref: '#/components/schemas/pii_LocalNaturalPersonNameID'
          phoneticNameIdentifier:
            description: >-
              Alternate representation of a name that corresponds to the manner
              the name is pronounced.
            type: array
            items:
              $ref: '#/components/schemas/pii_LocalNaturalPersonNameID'
      pii_Address:
        type: object
        properties:
          addressType:
            $ref: '#/components/schemas/Text'
          department:
            $ref: '#/components/schemas/Text'
          subDepartment:
            $ref: '#/components/schemas/Text'
          streetName:
            $ref: '#/components/schemas/Text'
          buildingNumber:
            $ref: '#/components/schemas/Text'
          buildingName:
            $ref: '#/components/schemas/Text'
          floor:
            $ref: '#/components/schemas/Text'
          postBox:
            $ref: '#/components/schemas/Text'
          room:
            $ref: '#/components/schemas/Text'
          postCode:
            $ref: '#/components/schemas/Text'
          townName:
            $ref: '#/components/schemas/Text'
          townLocationName:
            $ref: '#/components/schemas/Text'
          districtName:
            $ref: '#/components/schemas/Text'
          countrySubDivision:
            $ref: '#/components/schemas/Text'
          addressLine:
            description: >-
              Information that locates and identifies a specific address, as
              defined by postal services, presented in free format text.
            type: array
            items:
              $ref: '#/components/schemas/Text'
          country:
            $ref: '#/components/schemas/Text'
      pii_NationalIdentification:
        type: object
        required:
          - nationalIdentifier
          - nationalIdentifierType
        properties:
          nationalIdentifier:
            $ref: '#/components/schemas/Text'
          nationalIdentifierType:
            $ref: '#/components/schemas/Text'
          countryOfIssue:
            $ref: '#/components/schemas/Text'
          registrationAuthority:
            $ref: '#/components/schemas/Text'
      pii_DateAndPlaceOfBirth:
        type: object
        required:
          - dateOfBirth
          - placeOfBirth
        properties:
          dateOfBirth:
            $ref: '#/components/schemas/Text'
          placeOfBirth:
            $ref: '#/components/schemas/Text'
      pii_NaturalPerson:
        type: object
        required:
          - name
        properties:
          name:
            description: the distinct words used as identification for an individual
            type: array
            items:
              $ref: '#/components/schemas/pii_NaturalPersonName'
          geographicAddress:
            description: >-
              the particulars of a location at which a person may be communicated
              with.
            type: array
            items:
              $ref: '#/components/schemas/pii_Address'
          nationalIdentification:
            $ref: '#/components/schemas/pii_NationalIdentification'
          customerIdentification:
            $ref: '#/components/schemas/Text'
          dateAndPlaceOfBirth:
            $ref: '#/components/schemas/pii_DateAndPlaceOfBirth'
          countryOfResidence:
            $ref: '#/components/schemas/Text'
      pii_LegalPersonNameID:
        type: object
        properties:
          legalPersonName:
            $ref: '#/components/schemas/Text'
          legalPersonNameIdentifierType:
            $ref: '#/components/schemas/Text'
      pii_LocalLegalPersonNameID:
        type: object
        properties:
          legalPersonName:
            $ref: '#/components/schemas/Text'
          legalPersonNameIdentifierType:
            $ref: '#/components/schemas/Text'
      pii_LegalPersonName:
        type: object
        required:
          - nameIdentifier
        properties:
          nameIdentifier:
            description: The name and type of name by which the legal person is known.
            type: array
            items:
              $ref: '#/components/schemas/pii_LegalPersonNameID'
          localNameIdentifier:
            description: >-
              The name and type of name by which the legal person is known using
              local characters.
            type: array
            items:
              $ref: '#/components/schemas/pii_LocalLegalPersonNameID'
          phoneticNameIdentifier:
            description: >-
              The name and type of name by which the legal person is known using
              local characters.
            type: array
            items:
              $ref: '#/components/schemas/pii_LocalLegalPersonNameID'
      pii_LegalPerson:
        type: object
        required:
          - name
        properties:
          name:
            $ref: '#/components/schemas/pii_LegalPersonName'
          geographicAddress:
            type: array
            items:
              $ref: '#/components/schemas/pii_Address'
          customerNumber:
            $ref: '#/components/schemas/Text'
          nationalIdentification:
            $ref: '#/components/schemas/pii_NationalIdentification'
          dateOfRegistration:
            $ref: '#/components/schemas/Text'
          countryOfRegistration:
            $ref: '#/components/schemas/Text'
      pii_Person:
        type: object
        properties:
          naturalPerson:
            $ref: '#/components/schemas/pii_NaturalPerson'
          legalPerson:
            $ref: '#/components/schemas/pii_LegalPerson'
      pii_Originator:
        description: >-
          The originator is defined in Section 1.1 as the account holder who
          allows the VA transfer from that account or, where there is no account,
          the natural or legal person that places the order with the originating
          VASP to perform the VA transfer.
        type: object
        required:
          - originatorPersons
        properties:
          originatorPersons:
            description: >-
              the account holder who allows the VA transfer from that account or,
              where there is no account, the natural or legal person that places
              the order with the originating VASP to perform the VA transfer.
            type: array
            items:
              $ref: '#/components/schemas/pii_Person'
          accountNumber:
            description: >-
              Identifier of an account that is used to process the transfer. The
              value for this element is case-sensitive.
            type: array
            items:
              $ref: '#/components/schemas/Text'
      pii_Beneficiary:
        description: >-
          The beneficiary is defined in Section 1.1 as the natural or legal person
          or legal arrangement who is identified by the originator as the receiver
          of the requested VA transfer.
        type: object
        required:
          - beneficiaryPersons
        properties:
          beneficiaryPersons:
            description: >-
              the natural or legal person or legal arrangement who is identified
              by the originator as the receiver of the requested VA transfer.
            type: array
            items:
              $ref: '#/components/schemas/pii_Person'
          accountNumber:
            description: >-
              Identifier of an account that is used to process the transfer. The
              value for this element is case-sensitive.
            type: array
            items:
              $ref: '#/components/schemas/Text'
      pii_OriginatingVASP:
        description: >-
          The originating VASP is defined in Section 1.1 as the VASP which
          initiates the VA transfer, and transfers the VA upon receiving the
          request for a VA transfer on behalf of the originator.
        type: object
        properties:
          originatingVASP:
            $ref: '#/components/schemas/pii_Person'
      pii_BeneficiaryVASP:
        description: >-
          The beneficiary is defined in Section 1.1 as the VASP which receives the
          transfer of a virtual asset from the originating VASP directly or
          through an intermediary VASP and makes the funds available to the
          beneficiary.
        type: object
        properties:
          beneficiaryVASP:
            $ref: '#/components/schemas/pii_Person'
      pii_IntermediaryVASP:
        type: object
        required:
          - intermediaryVASP
          - sequence
        properties:
          intermediaryVASP:
            $ref: '#/components/schemas/pii_Person'
          sequence:
            $ref: '#/components/schemas/Text'
      pii_TransferPath:
        description: >-
          The transfer path refers to the intermediary VASP(s) participating in a
          serial chain that receive(s) and retransmit(s) a VA transfer on behalf
          of the originating VASP and the beneficiary VASP, or another
          intermediary VASP, together with their corresponding sequence number.
        type: object
        properties:
          transferPath:
            description: >-
              the intermediary VASP(s) participating in a serial chain that
              receive and retransmit a VA transfer on behalf of the originating
              VASP and the beneficiary VASP, or another intermediary VASP,
              together with their corresponding sequence number.
            type: array
            items:
              $ref: '#/components/schemas/pii_IntermediaryVASP'
      pii_PayloadMetadata:
        description: Data describing the contents of the payload.
        type: object
        properties:
          transliterationMethod:
            description: >-
              the method used to map from a national system of writing to Latin
              script.
            type: array
            items:
              $ref: '#/components/schemas/Text'
      PII_IVMS:
        type: object
        properties:
          originator:
            $ref: '#/components/schemas/pii_Originator'
          beneficiary:
            $ref: '#/components/schemas/pii_Beneficiary'
          originatingVASP:
            $ref: '#/components/schemas/pii_OriginatingVASP'
          beneficiaryVASP:
            $ref: '#/components/schemas/pii_BeneficiaryVASP'
          transferPath:
            $ref: '#/components/schemas/pii_TransferPath'
          payloadMetadata:
            $ref: '#/components/schemas/pii_PayloadMetadata'
      Transaction:
        type: object
        required:
          - id
          - transactionType
          - transactionAsset
          - transactionAmount
          - chargedQuantity
          - beneficiaryDid
        properties:
          id:
            $ref: '#/components/schemas/TransactionID'
          status:
            $ref: '#/components/schemas/TransactionStatus'
          transactionType:
            $ref: '#/components/schemas/TransactionType'
          transactionAsset:
            description: Asset symbol (BTC,ETH)
            type: string
            example: ETH
          transactionAmount:
            type: string
            pattern: ^0*[1-9][0-9]*$
            description: Amount in base unit of the asset (satoshi, wei, etc)
          chargedQuantity:
            type: number
            description: Charged Quantity
          amountInLocalCurrency:
            type: object
            description: Amount in the local currency of the originator VASP's jurisdiction
            properties:
              amountInLocalCurrency:
                type: number
                description: >-
                  Amount in the local currency of the originator VASP's
                  jurisdiction
              currency:
                type: string
                description: Currency code
          beneficiaryAmountInLocalCurrency:
            type: object
            description: Amount in the local currency of the beneficiary VASP's jurisdiction
            properties:
              amountInLocalCurrency:
                type: number
                description: >-
                  Amount in the local currency of the beneficiary VASP's
                  jurisdiction
              currency:
                type: string
                description: Currency code
          originatorDid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryDid:
            $ref: '#/components/schemas/common_DID'
          originatorVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPdid:
            $ref: '#/components/schemas/common_DID'
          transactionBlockchainInfo:
            $ref: '#/components/schemas/TransactionBlockchainInfo'
          ivms101:
            $ref: '#/components/schemas/ivms101_IVMS101'
          ivms101Encrypted:
            type: string
            description: Encrypted IVMS101 data
          protocol:
            $ref: '#/components/schemas/tr_TravelRuleProtocol'
          protocolData:
            $ref: '#/components/schemas/ProtocolData'
          originatorProof:
            $ref: '#/components/schemas/OwnershipProof'
          beneficiaryProof:
            $ref: '#/components/schemas/OwnershipProof'
          actions:
            type: array
            items:
              $ref: '#/components/schemas/TransactionAction'
          pii:
            $ref: '#/components/schemas/PII_IVMS'
      TransactionResolved:
        type: object
        required:
          - id
          - transactionType
          - transactionAsset
          - transactionAmount
          - transactionAssetDecimals
          - chargedQuantity
          - beneficiaryDid
        properties:
          id:
            $ref: '#/components/schemas/TransactionID'
          status:
            $ref: '#/components/schemas/TransactionStatus'
          transactionType:
            $ref: '#/components/schemas/TransactionType'
          transactionAsset:
            description: Asset symbol (BTC,ETH)
            type: string
            example: ETH
          transactionAssetDecimals:
            type: number
            description: Transaction Asset Decimals (eg BTC has 8 decimals)
          transactionAmount:
            type: string
            pattern: ^0*[1-9][0-9]*$
            description: Amount in base unit of the asset (satoshi, wei, etc)
          chargedQuantity:
            type: number
            description: Charged Quantity
          amountInLocalCurrency:
            type: object
            description: Amount in the local currency of the originator VASP's jurisdiction
            properties:
              amountInLocalCurrency:
                type: number
                description: >-
                  Amount in the local currency of the originator VASP's
                  jurisdiction
              currency:
                type: string
                description: Currency code
          originatorDid:
            $ref: '#/components/schemas/common_DID'
          originatorRef:
            description: Originator Customer Ref
            type: string
          beneficiaryDid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryRef:
            description: Beneficiary Customer Ref
            type: string
          originatorVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPdid:
            $ref: '#/components/schemas/common_DID'
          transactionBlockchainInfo:
            $ref: '#/components/schemas/TransactionBlockchainInfo'
          ivms101:
            $ref: '#/components/schemas/ivms101_IVMS101'
          ivms101Encrypted:
            type: string
            description: Encrypted IVMS101 data
          protocol:
            $ref: '#/components/schemas/tr_TravelRuleProtocol'
          protocolData:
            $ref: '#/components/schemas/ProtocolData'
          originatorProof:
            $ref: '#/components/schemas/OwnershipProof'
          beneficiaryProof:
            $ref: '#/components/schemas/OwnershipProof'
          actions:
            type: array
            items:
              $ref: '#/components/schemas/TransactionAction'
      PaginateInfo:
        type: object
        description: Pagination information
        properties:
          totalItems:
            type: integer
          itemCount:
            type: integer
          itemsPerPage:
            type: integer
          totalPages:
            type: integer
          currentPage:
            type: integer
      TransactionsList:
        type: object
        properties:
          transactions:
            type: array
            description: List of Transaction
            items:
              $ref: '#/components/schemas/TransactionResolved'
          paginateInfo:
            $ref: '#/components/schemas/PaginateInfo'
      Sort:
        type: string
        enum:
          - transactionAmount:ASC
          - transactionAmount:DESC
          - updatedAt:ASC
          - updatedAt:DESC
          - createdAt:ASC
          - createdAt:DESC
        description: >-
          Pass one of the supported fields you want to sort and after the colon
          (:), the direction, ASC or DESC.
      Group:
        type: string
        example: INBOX
        description: >-
          Pass INBOX here to return only the transfers available on your inbox, or
          remove the param to return all transfers
      TransactionAsset:
        type: string
        example: ETH
        description: Filter your transfers by crypto currencies
      common_TransactionType:
        type: string
        enum:
          - TRAVELRULE
          - BELOW_THRESHOLD
          - NON_CUSTODIAL
          - UNKNOWN
        description: Filter your transfers by type
      Direction:
        type: string
        enum:
          - incoming
          - outgoing
          - internal
        description: >-
          Filter your transfers by direction, incoming, outgoing or internal
          transfers
      common_Date:
        type: string
        format: date
        example: '2023-07-20'
      TransactionValidateRequest:
        type: object
        required:
          - transactionAsset
          - destination
          - transactionAmount
          - originatorVASPdid
          - originatorEqualsBeneficiary
        properties:
          transactionAsset:
            description: Asset symbol (BTC,ETH)
            type: string
            example: ETH
          destination:
            description: Destination Address
            type: string
          transactionAmount:
            type: string
            pattern: ^0*[1-9][0-9]*$
            description: Amount in base unit of the asset (satoshi, wei, etc)
          originatorVASPdid:
            $ref: '#/components/schemas/common_DID'
          originatorEqualsBeneficiary:
            type: boolean
            description: Originator and Benefiary are the same person?
          beneficiaryVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPname:
            type: string
            description: Beneficiary VASP Name
          beneficiaryName:
            type: string
            description: Beneficiary Name
          beneficiaryAccountNumber:
            type: string
            description: Beneficiary Account Number
          beneficiaryAddress:
            $ref: '#/components/schemas/ivms101_Address'
          beneficiaryProof:
            $ref: '#/components/schemas/OwnershipProof'
          travelRuleBehavior:
            type: boolean
            description: >-
              Should consider beneficiary's jurisdiction in determining if a
              transfer is of type TRAVEL_RULE
          network:
            type: string
            description: Chainalysis network
      BlockchainAddressType:
        type: string
        description: |
          Type of the Blockchain Address
          * `UNKNOWN` Address is not kwown.
          * `HOSTED` Address is hosted by a custodial service.
          * `UNHOSTED` Address is unhosted
        enum:
          - UNKNOWN
          - HOSTED
          - UNHOSTED
      TransactionValidateErrors:
        type: array
        description: >
          Type of the Transfer

          * `beneficiaryNameMissing` Boolean that represents the absence of the
          property `name` inside the beneficiaryPerson.

          * `beneficiaryAccountNumberMissing` Boolean that represents the absence
          of the property `accountNumber` inside the beneficiary object.

          * `beneficiaryAddressMissing` Boolean that represents the absence of the
          property `geographicAddress` inside the beneficiaryPerson.

          * `beneficiaryOwnershipProofMissing` Boolean that represents the absence
          of the property `beneficiaryProof` inside the root object.
        enum:
          - beneficiaryNameMissing
          - beneficiaryAccountNumberMissing
          - beneficiaryAddressMissing
          - beneficiaryOwnershipProofMissing
        items:
          type: string
      TransactionValidationResult:
        type: object
        required:
          - isValid
          - type
        properties:
          isValid:
            description: Is transfer valid?
            type: boolean
          type:
            $ref: '#/components/schemas/TransactionType'
          beneficiaryAddressType:
            $ref: '#/components/schemas/BlockchainAddressType'
          addressSource:
            $ref: '#/components/schemas/BlockchainAddressInfoSource'
          beneficiaryVASPname:
            description: Name of the beneficiary VASP
            type: string
          beneficiaryVASPdid:
            description: Name of the beneficiary VASP
            type: string
          errors:
            $ref: '#/components/schemas/TransactionValidateErrors'
      NotabenePaymentError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabenePaymentError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: Problem with payment
              stack:
                type: string
                description: Error stack message
      UnauthorizedError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - message
            properties:
              message:
                description: Error message
                type: string
                example: User is not admin of VASP
      ValidatePartyFields:
        type: string
        enum:
          - BENEFICIARY
          - ORIGINATOR
          - ALL
        description: Validate transfers based on party
      TransactionValidateFullRequest:
        type: object
        required:
          - transactionAsset
          - transactionAmount
          - transactionBlockchainInfo
        properties:
          transactionAsset:
            description: Asset symbol (BTC,ETH)
            type: string
            example: ETH
          transactionAmount:
            type: string
            pattern: ^0*[1-9][0-9]*$
            description: Amount in base unit of the asset (satoshi, wei, etc)
          originatorDid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryDid:
            $ref: '#/components/schemas/common_DID'
          originatorVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPname:
            type: string
            description: Beneficiary VASP Name
          transactionBlockchainInfo:
            $ref: '#/components/schemas/TransactionBlockchainInfo'
          originator:
            $ref: '#/components/schemas/ivms101_Originator'
          beneficiary:
            $ref: '#/components/schemas/ivms101_Beneficiary'
          encrypted:
            type: string
            description: >-
              Encrypted Personal Identificable Information (obscure schema-less
              value)
          protocol:
            $ref: '#/components/schemas/tr_TravelRuleProtocol'
          notificationEmail:
            type: string
            description: Beneficiary VASP Notification Email
          skipBeneficiaryDataValidation:
            type: boolean
            description: Disable beneficiary data validation (opportunistic compliance)
          travelRuleBehavior:
            type: boolean
            description: >-
              Should consider beneficiary's jurisdiction in determining if a
              transfer is of type TRAVEL_RULE
          originatorProof:
            $ref: '#/components/schemas/OwnershipProof'
          beneficiaryProof:
            $ref: '#/components/schemas/OwnershipProof'
          pii:
            $ref: '#/components/schemas/PII_IVMS'
          network:
            type: string
            description: Chainalysis network
          validatePartyFields:
            type: string
            $ref: '#/components/schemas/ValidatePartyFields'
          onBehalfOfMyself:
            type: boolean
            description: >-
              Autopopulate originator and beneficiary fields with institution's
              information
      TransactionFullValidationResult:
        type: object
        required:
          - isValid
          - type
        properties:
          isValid:
            description: Is transfer valid?
            type: boolean
          type:
            $ref: '#/components/schemas/TransactionType'
          beneficiaryAddressType:
            $ref: '#/components/schemas/BlockchainAddressType'
          addressSource:
            $ref: '#/components/schemas/BlockchainAddressInfoSource'
          beneficiaryVASPname:
            description: Name of the beneficiary VASP
            type: string
          errors:
            type: array
            items:
              type: string
          warnings:
            type: array
            items:
              type: string
      NotabeneTransactionError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabeneTransactionError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: TransactionError
              stack:
                type: string
                description: Error stack message
      UserDIDNotAdminforVASPError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: UserDIDNotAdminforVASPError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: User is not admin of VASP
              stack:
                type: string
                description: Error stack message
      NotabenePaymentNoCustomerError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabenePaymentNoCustomerError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: Vasp is not a customer (no customerID)
              stack:
                type: string
                description: Error stack message
      NotabenePaymentNoSubscriptionError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabenePaymentNoSubscriptionError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: Vasp has no subscription
              stack:
                type: string
                description: Error stack message
      NotabeneTransactionNoActiveSubscriptionError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabeneTransactionNoActiveSubscriptionError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: Vasp is not a customer (no customerID)
              stack:
                type: string
                description: Error stack message
      NotabeneTransactionValidationError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabeneTransactionValidationError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: List of missing fields
              stack:
                type: string
                description: Error stack message
      CustomAssetPrice:
        description: Object containing custom asset price if not available in Notabene
        type: object
        required:
          - priceUSD
          - decimals
        properties:
          priceUSD:
            type: number
            description: Asset Price in USD
          decimals:
            type: number
            description: Asset decimals
            example: 18 (ETH)
      DateTime:
        type: string
        format: date-time
      TransactionCreateRequest:
        type: object
        required:
          - transactionAsset
          - transactionAmount
          - originatorVASPdid
          - transactionBlockchainInfo
        properties:
          transactionRef:
            type: string
            description: >-
              **Idempotency key**: to prevent duplicate transactions and
              proactively manage disruptions arising from the idempotency key
              becoming mandatory in the future, it is highly recommended to
              populate this field with a unique identifier for the transfer
          transactionAsset:
            oneOf:
              - type: string
                description: Asset symbol (BTC,ETH)
                example: ETH
              - $ref: '#/components/schemas/CAIP19'
              - $ref: '#/components/schemas/CoingeckoIdAndNetwork'
          transactionAmount:
            type: string
            pattern: ^0*[1-9][0-9]*$
            description: Amount in base unit of the asset (satoshi, wei, etc)
          transactionAssetDecimals:
            type: number
            description: Asset decimals
            example: 18 (ETH)
          customAssetPrice:
            $ref: '#/components/schemas/CustomAssetPrice'
          originatorDid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryDid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryRef:
            type: string
          originatorRef:
            type: string
          originatorVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPdid:
            description: >-
              Beneficiary VASP did - If you do not have this data, we will try to
              resolve it.
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPname:
            type: string
            description: >-
              Beneficiary VASP Name - If you do not have this data, we will try to
              resolve it.
          transactionBlockchainInfo:
            $ref: '#/components/schemas/TransactionBlockchainInfo'
          originator:
            $ref: '#/components/schemas/ivms101_Originator'
          beneficiary:
            $ref: '#/components/schemas/ivms101_Beneficiary'
          encrypted:
            type: string
            description: >-
              Encrypted Personal Identificable Information (obscure schema-less
              value)
          protocol:
            $ref: '#/components/schemas/tr_TravelRuleProtocol'
          notificationEmail:
            type: string
            description: Beneficiary VASP Notification Email
          skipBeneficiaryDataValidation:
            type: boolean
            description: Disable beneficiary data validation (opportunistic compliance)
          travelRuleBehavior:
            type: boolean
            description: >-
              Should consider beneficiary's jurisdiction in determining if a
              transfer is of type TRAVEL_RULE
          originatorProof:
            $ref: '#/components/schemas/OwnershipProof'
          beneficiaryProof:
            $ref: '#/components/schemas/OwnershipProof'
          pii:
            $ref: '#/components/schemas/PII_IVMS'
          network:
            type: string
            description: Chainalysis network
          onBehalfOfMyself:
            type: boolean
            description: >-
              Autopopulate originator and beneficiary fields with institution's
              information
          blockchainTransactionTimestamp:
            $ref: '#/components/schemas/DateTime'
      NotabeneCryptoAssetNotAvailable:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabeneCryptoAssetNotAvailable
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: >-
                  Notabene is currently not supporting this asset: WrongAssetName.
                  Please contact Notabene customer service to request it.
              stack:
                type: string
                description: Error stack message
      NotabeneTransactionBelowThresholdError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabeneTransactionBelowThresholdError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: >-
                  the transaction amount is below minimum threshold to be
                  considered for Travel Rule in the current jurisdiction
              stack:
                type: string
                description: Error stack message
      NotabeneTransactionSunriseLimitReachedError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabeneTransactionSunriseLimitReachedError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: User has reached limits of Sunrise tier.
              stack:
                type: string
                description: Error stack message
      NotabeneTransactionInvalidStatusError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            required:
              - name
              - code
              - message
              - stack
            properties:
              name:
                description: Name of the error
                type: string
                example: NotabeneTransactionInvalidStatusError
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: status is not a valid status for action
              stack:
                type: string
                description: Error stack message
      TransactionCancelRequest:
        type: object
        required:
          - id
        properties:
          id:
            $ref: '#/components/schemas/TransactionID'
          vasp_did:
            $ref: '#/components/schemas/common_DID'
          reason:
            type: string
            description: Cancel reason
      TransactionUpdateRequest:
        type: object
        required:
          - id
        properties:
          id:
            $ref: '#/components/schemas/TransactionID'
          notificationEmail:
            type: string
            format: email
            description: Beneficiary VASP Notification Email
          txHash:
            description: Transaction txHash
            type: string
          destination:
            description: Destination Blockchain Address
            type: string
          origin:
            description: Origin Blockchain Address
            type: string
          beneficiaryDid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPdid:
            $ref: '#/components/schemas/common_DID'
          originatorVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPname:
            type: string
            description: Beneficiary VASP Name
          beneficiary:
            $ref: '#/components/schemas/ivms101_Beneficiary'
          beneficiaryProof:
            $ref: '#/components/schemas/OwnershipProof'
          originatorDid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryRef:
            type: string
          originatorRef:
            type: string
          originator:
            $ref: '#/components/schemas/ivms101_Originator'
          originatorProof:
            $ref: '#/components/schemas/OwnershipProof'
          protocol:
            $ref: '#/components/schemas/tr_TravelRuleProtocol'
          skipBeneficiaryDataValidation:
            type: boolean
            description: Disable beneficiary data validation (opportunistic compliance)
          isNonCustodial:
            type: boolean
            description: Is a Non Custodial Transfer
          pii:
            $ref: '#/components/schemas/PII_IVMS'
          onBehalfOfMyself:
            type: boolean
            description: >-
              Autopopulate originator and beneficiary fields with institution's
              information
          blockchainTransactionTimestamp:
            $ref: '#/components/schemas/DateTime'
      TransactionNotifyRequest:
        type: object
        required:
          - txHash
          - transactionAmount
          - transactionAsset
          - destination
          - beneficiaryVASPdid
        properties:
          txHash:
            description: Transaction hash
            type: string
          transactionAmount:
            type: string
            pattern: ^0*[1-9][0-9]*$
            description: Amount in base unit of the asset (satoshi, wei, etc)
          transactionAsset:
            oneOf:
              - type: string
              - $ref: '#/components/schemas/CAIP19'
              - $ref: '#/components/schemas/CoingeckoIdAndNetwork'
          transactionAssetDecimals:
            type: number
            description: Asset decimals
            example: 18 (ETH)
          beneficiaryVASPdid:
            description: BeneficiaryVASP did
            type: string
          destination:
            description: Destination Address
            type: string
          origin:
            description: Origin Address
            type: string
          customerRef:
            description: VASP Customer Reference Id
            type: string
          network:
            type: string
            description: Chainalysis network
      TransactionRejectRequest:
        type: object
        required:
          - id
        properties:
          id:
            $ref: '#/components/schemas/TransactionID'
          reason:
            type: string
            description: Reject reason
      TransactionNotReadyRequest:
        type: object
        required:
          - id
        properties:
          id:
            $ref: '#/components/schemas/TransactionID'
          reason:
            type: string
            description: Reason to mark the transfer as not ready
      TransactionDeclineRequest:
        type: object
        required:
          - id
        properties:
          id:
            $ref: '#/components/schemas/TransactionID'
          reason:
            type: string
            description: Decline reason
      BulkAction:
        type: string
        enum:
          - accept
          - approve
          - cancel
          - confirm
          - decline
          - reject
          - notReady
          - redirect
        description: Available bulk actions to take on transactions
      TransactionBulkRequest:
        type: object
        required:
          - action
          - originatorVASPdid
          - beneficiaryVASPdid
        properties:
          action:
            $ref: '#/components/schemas/BulkAction'
          originatorVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPdid:
            $ref: '#/components/schemas/common_DID'
          originAddress:
            type: string
            description: >-
              (Optional) Limit bulk operations to transactions originating from
              specified blockchain address
          destinationAddress:
            type: string
            description: >-
              (Optional) Limit bulk operations to transactions being sent to
              specified blockchain address
          reason:
            type: string
            description: (Optional) Cancel/Decline/Reject reason
          beneficiaryVASPdidTo:
            description: >-
              (Optional) Used for transaction redirection, did of VASP to redirect
              to.
            $ref: '#/components/schemas/common_DID'
      TransactionReceiveRequest:
        type: object
        required:
          - transactionId
          - address
          - asset
          - originatorVASPdid
          - beneficiaryVASPdid
        properties:
          transactionId:
            description: Transaction id
            type: string
          address:
            type: string
            description: Blockchain address
          asset:
            oneOf:
              - type: string
              - $ref: '#/components/schemas/CAIP19'
              - $ref: '#/components/schemas/CoingeckoIdAndNetwork'
          originatorVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPdid:
            $ref: '#/components/schemas/common_DID'
      TransactionUpdateTravelRuleDataRequest:
        type: object
        required:
          - transactionId
          - destinationAddress
          - assetType
          - amount
          - originatorVASPdid
          - beneficiaryVASPdid
        properties:
          transactionId:
            description: Transaction id
            type: string
          destinationAddress:
            type: string
            description: Blockchain address
          assetType:
            description: Notabene Asset Symbol
            type: string
          amount:
            description: Transaction amount
            type: string
          pii:
            $ref: '#/components/schemas/PII_IVMS'
          originatorVASPdid:
            $ref: '#/components/schemas/common_DID'
          beneficiaryVASPdid:
            $ref: '#/components/schemas/common_DID'
      VaspInfo:
        type: object
        required:
          - did
          - name
        properties:
          did:
            $ref: '#/components/schemas/common_DID'
          name:
            type: string
            description: Name of the VASP
            example: Example VASP
      TransactionRuleList:
        type: array
        required:
          - id
          - vaspDID
          - order
          - actionRule
          - ruleCheck
          - ruleValue
          - source
          - createdAt
          - createdBy
        items:
          type: object
          properties:
            id:
              type: string
              description: Identifier of the transfer Rule
              format: uuid
              example: 123e4567-e89b-12d3-a456-426614174000
            vaspDID:
              $ref: '#/components/schemas/common_DID'
            order:
              type: number
              description: Number that represents the order we should apply a rule per VASP
            actionRule:
              type: string
              enum:
                - APPROVE
                - REJECT
                - NOT_READY
                - SEND_TO_INBOX
              description: Action of the rule
            ruleCheck:
              type: string
              enum:
                - ALL
                - VASP
                - REVIEWED_VASP_LIST
                - JURISDICTION
                - RISK_SCORE
                - SANCTION_LIST_CHECK
                - TRANSACTION_AMOUNT
                - TRANSACTION_CREATION_TIME
              description: Condition to meet to have the action rule set
            ruleValue:
              type: string
              description: Value of the choosen rule
            source:
              type: string
              description: >-
                In the case of rule value beeing riskScore or sanctionListCheck,
                this is the field to fill with service provider
            vasps:
              description: >-
                If ruleCheck is of type VASP, all of the vasps involved in the
                rule will be returned
              type: array
              items:
                $ref: '#/components/schemas/VaspInfo'
            jurisdictions:
              description: >-
                If ruleCheck is of type JURISDICTION, the list of jurisdictions
                involved in the rule will be returned
              type: array
              items:
                type: string
                example: US,SG,BR
      Ruleset:
        type: object
        required:
          - order
          - actionRule
          - ruleCheck
          - ruleValue
        properties:
          order:
            type: number
            description: Number that represents the order we should apply a rule per VASP
          actionRule:
            type: string
            enum:
              - APPROVE
              - REJECT
              - NOT_READY
              - SEND_TO_INBOX
            description: Action of the rule
          ruleCheck:
            type: string
            enum:
              - ALL
              - VASP
              - REVIEWED_VASP_LIST
              - JURISDICTION
              - RISK_SCORE
              - SANCTION_LIST_CHECK
              - TRANSACTION_AMOUNT
              - TRANSACTION_CREATION_TIME
            description: Condition to meet to have the action rule set
          ruleValue:
            type: string
            description: >-
              Value of the choosen rule - For VASP and JURISDICTION, it is
              possible to send multiple values, separated by comma
          source:
            type: string
            nullable: true
            description: >-
              In the case of rule value beeing riskScore or sanctionListCheck,
              this is the field to fill with service provider
      TransactionRuleCreateRequestWithDirection:
        type: object
        required:
          - vaspDID
          - ruleSet
        properties:
          vaspDID:
            $ref: '#/components/schemas/common_DID'
          ruleSet:
            description: Incoming and Outgoing set of rules
            type: object
            properties:
              incoming:
                description: Incoming set of rules
                type: array
                items:
                  $ref: '#/components/schemas/Ruleset'
              outgoing:
                description: Outgoing set of rules
                type: array
                items:
                  $ref: '#/components/schemas/Ruleset'
      NotabeneRulesEngineError:
        type: object
        required:
          - err
        properties:
          err:
            type: object
            properties:
              name:
                description: Name of the error
                type: string
                example: TrustFrameworkUserDoesNotExistOnVASP
              code:
                description: HTTP status
                type: string
                example: 400
              message:
                description: Error message
                type: string
                example: There are duplicated VASP dids in the request
              stack:
                type: string
                description: Error stack message
      Field:
        description: Field used by the rule
        type: object
        properties:
          field:
            type: string
            description: Name of the Field
      Condition:
        properties:
          type:
            type: string
            description: Type of the Condition
          fields:
            type: array
            items:
              $ref: '#/components/schemas/Field'
          conditions:
            type: array
            items:
              $ref: '#/components/schemas/Condition'
      Rule:
        type: object
        properties:
          type:
            type: string
            description: Type of the Condition
          fields:
            type: array
            items:
              $ref: '#/components/schemas/Field'
          conditions:
            type: array
            items:
              $ref: '#/components/schemas/Condition'
      Threshold:
        type: object
        properties:
          rules:
            type: array
            items:
              $ref: '#/components/schemas/Rule'
          threshold:
            type: number
            description: Threshold of the rule
      JurisdictionList:
        type: array
        items:
          type: object
          required:
            - thresholds
            - countryCode
            - currency
          properties:
            thresholds:
              type: array
              items:
                $ref: '#/components/schemas/Threshold'
            countryCode:
              type: string
              description: Country code in ISO 3166-1 alpha-2 format
            currency:
              type: string
              description: Currency of the country
      auth_RolesPermissionsOnVASP:
        type: object
        required:
          - vaspDID
          - permissions
        properties:
          vaspDID:
            $ref: '#/components/schemas/common_DID'
          role:
            type: string
          permissions:
            type: array
            items:
              type: string
      tf_TrustVASPAction:
        type: object
        properties:
          hash:
            type: string
            description: Credential Hash
          issuerDID:
            $ref: '#/components/schemas/DID'
          action:
            type: string
            description: Action executed
          actionData:
            type: string
            description: Action Data
      tr_TransferInformationStatus:
        type: string
        description: >
          Status of the Transfer Information * `NEW` Transfer Information was
          created, but not sent yet.

          * `SENT` Transfer Information was sent (TRLight/TRP)

          * `REQUESTED` Destination address requested (OpenVASP/Sygna)

          * `REJECTED` Transfer rejected (TRP/Sygna)

          * `DECLINED` Transfer declined (TRP/Sygna)
        enum:
          - NEW
          - SENT
          - REQUESTED
          - REJECTED
          - DECLINED
      tr_TransactionInformation:
        type: object
        properties:
          asset:
            description: Asset symbol (BTC,ETH)
            type: string
            example: ETH
          amount:
            type: string
            description: Amount in base unit of the asset (satoshi, wei, etc)
          blockchainInfo:
            description: Information about the transaction on the blockchain
            type: object
            properties:
              txHash:
                description: Transaction txHash
                type: string
              origin:
                description: Originator Address
                type: string
              destination:
                description: Destination Address
                type: string
            example:
              txHash: 0x00t0x0H0a0s0h0
              origin: 0xoriginAddress
              destination: 0xdestinationAddress
      TransferInformationAction:
        type: object
        properties:
          hash:
            type: string
            description: Credential Hash
          issuerDID:
            $ref: '#/components/schemas/DID'
          action:
            type: string
            description: Action executed
          actionData:
            type: string
            description: Action Data
konfigCliVersion: 1.38.37
