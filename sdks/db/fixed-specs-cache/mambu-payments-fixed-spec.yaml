publishJson:
  company: Mambu
  serviceName: Payments
  sdkName: mambu-payments-{language}-sdk
  clientName: MambuPayments
  metaDescription: >-
    Heard of composable banking? The concept originated here at Mambu. We've
    been champions of composable for over a decade.


    Mambu is the only true SaaS cloud core banking platform. Our unique and
    sustainable composable approach means that independent engines, systems and
    connectors can be assembled in any configuration to meet business
    requirements and the ever-changing demands of your customers. 260+ banks,
    lenders, fintechs, and even retailers in 65 countries turn to us to help
    them build modern digital financial products faster, securely and
    cost-effectively.


    Ready to become a Mambuvian? Check our Jobs tab.
  apiStatusUrls: false
  homepage: mambu.com
  developerDocumentation: api.mambu.com/payments-api/#welcome
  categories:
    - finance
    - banking
rawSpecString: |
  openapi: 3.0.1
  info:
    title: Payment Order API
    description: Initiates payment orders.
    version: v1.44.15
  paths:
    /accounts/{accountId}/blocking-rules:
      post:
        tags:
          - SEPA Direct Debit
        description: >-
          Request a blocking rule to be added to a specific Mambu account. When a
          blocking rule has been added for a specific mandate ID, collection
          requests for that mandate will be rejected and a pacs.002 message sent
          as response with reason code MS02. If no specific mandate ID is
          provided, all direct debit collection requests for the given account
          will be rejected. For more information on blocking SEPA Direct Debits,
          consult the [Blocking SEPA Direct
          Debits](https://support.mambu.com/docs/blocking-sepa-direct-debits)
          article in our user guide.
        operationId: createBlockingRule
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
          - name: accountId
            in: path
            required: true
            schema:
              type: string
              description: ID of the Mambu Deposit account.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBlockingRule'
              examples:
                createProductBlockingRule:
                  summary: >-
                    Request blocking all SEPA Direct Debits for the specified
                    account.
                  description: createProductBlockingRule
                  value:
                    product: SEPA_DIRECT_DEBIT
                createCeditorMandateBlockingRule:
                  summary: >-
                    Request blocking SEPA Direct Debits for a specific mandate for
                    the specified account.
                  description: createCeditorMandateBlockingRule
                  value:
                    product: SEPA_DIRECT_DEBIT
                    creditorMandate:
                      mandateRelatedInformation:
                        mandateIdentification: '578798984'
                      creditorSchemeIdentification:
                        identification:
                          privateIdentification: ID777444887
        responses:
          '202':
            description: Accepted - The Blocking Rule has been prepared for processing.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  productCannotBeBlocked:
                    summary: Specified payment product cannot be blocked.
                    description: productCannotBeBlocked
                    value:
                      tppMessages:
                        - category: ERROR
                          code: PARAMETER_NOT_SUPPORTED
                          path: product
                          text: SEPA_CREDIT_TRANSFER cannot be blocked
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported by a specific
              endpoint. It has nothing to do with the content, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the serves does not
              support has been supplied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
      delete:
        tags:
          - SEPA Direct Debit
        description: >-
          Request deletion of blocking rules for the specified Mambu account. If
          no request body is provided, all rules for the account will be removed,
          if you provide a JSON body with a specific mandate ID, only the rule for
          that mandate will be removed. For more information on blocking SEPA
          Direct Debits, consult the [Blocking SEPA Direct
          Debits](https://support.mambu.com/docs/blocking-sepa-direct-debits)
          article in our user guide.
        operationId: deleteBlockingRules
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
          - name: accountId
            in: path
            required: true
            schema:
              type: string
              description: ID of the Mambu Deposit account.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBlockingRule'
              examples:
                deleteAllBlockingRules:
                  summary: Delete all blocking rules for the specified account.
                  description: deleteAllBlockingRules
                  value: null
                deleteProductBlockingRule:
                  summary: Delete product blocking rule for the specified account.
                  description: deleteProductBlockingRule
                  value:
                    product: SEPA_DIRECT_DEBIT
                deleteCreditorMandateBlockingRule:
                  summary: >-
                    Delete creditor mandate blocking rule for the specified
                    account.
                  description: deleteCreditorMandateBlockingRule
                  value:
                    product: SEPA_DIRECT_DEBIT
                    creditorMandate:
                      mandateRelatedInformation:
                        mandateIdentification: '578798984'
                      creditorSchemeIdentification:
                        identification:
                          privateIdentification: ID777444887
        responses:
          '202':
            description: >-
              Accepted - Blocking rules for the specified account have been
              submitted for deletion.
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported by a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the serves does not
              support has been supplied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /accounts/{accountId}/identifications:
      get:
        description: >-
          Gets associations of an external account identification (IBAN or
          proprietary) to a Mambu Account.
        operationId: getMapping
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
          - name: accountId
            in: path
            required: true
            schema:
              type: string
          - name: limit
            in: query
            schema:
              maximum: 1000
              minimum: 1
              type: integer
              description: >-
                Limit the number of identifications retrieved. The default limit
                is 50, can be specified up to 1000.
              format: int32
              default: 50
          - name: offset
            in: query
            schema:
              minimum: 0
              type: integer
              description: >-
                Offset determines how many records will be skipped before being
                included in the returned results. The default offset value is 0.
              format: int64
              default: 0
        responses:
          '200':
            description: OK - List existing external identifications.
            headers:
              Items-Offset:
                description: The index of the first returned item.
                required: true
                style: simple
                schema:
                  type: integer
              Items-Limit:
                description: The requested page size.
                required: true
                style: simple
                schema:
                  type: integer
              Items-Total:
                description: The total count of available items.
                required: true
                style: simple
                schema:
                  type: integer
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Identification'
                examples:
                  Identification:
                    summary: List of identifications
                    description: Identification
                    value:
                      - iban: DE46606951125202071272
                      - currency: USD
                      - other:
                          identification: ABCDE1234F
                          scheme: PAN
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
        tags:
          - External Account Representation
      post:
        description: >-
          Adds association of an external account identification (IBAN or
          proprietary) to a Mambu Account. The currency of the association will be
          the one of the underlining Mambu account. If an IBAN is supposed to be a
          multi-currency one, this API needs to be invoked multiple times with
          different Mambu accounts (for the different currencies).
        operationId: createMapping
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
          - name: accountId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountMapping'
              examples:
                createMambuAccountMapping:
                  summary: >-
                    Create mapping between a proprietary identification and a
                    Mambu Account
                  description: createMambuAccountMapping
                  value:
                    identification:
                      other:
                        identification: ABCDE1234F
                        scheme: PAN
                      iban: DE46606951125202071272
                      currency: USD
        responses:
          '201':
            description: Created - Association successfully created.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AccountMappingResponse'
                examples:
                  accountMappingResponse:
                    summary: Successful account identification request.
                    description: accountMappingResponse
                    value: {}
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  invalidIdentification:
                    summary: IBAN is not valid.
                    description: invalidIdentification
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: iban
                          text: iban size must be between 15 and 34
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: iban
                          text: iban invalid IBAN value
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
        tags:
          - External Account Representation
    /accounts/identifications:
      put:
        description: >-
          Create or replace associations of an external account identification
          (IBAN or proprietary) to one of Mambu Accounts. The currency of the
          association will be the one of the underlining Mambu account. 
        operationId: createMappings
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountMappings'
              examples:
                createMambuAccountMappings:
                  summary: >-
                    Create mapping between a proprietary identification and
                    multiple Mambu Accounts with different currencies
                  description: createMambuAccountMappings
                  value: |-
                    {
                      "identification": {
                        "iban": "DE46606951125202071272"
                      },
                      "accountIds": [
                        "123",
                      ]
                    }
        responses:
          '201':
            description: Created - Association successfully created.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AccountMappingResponse'
                examples:
                  accountMappingResponse:
                    summary: Successful account identification request.
                    description: accountMappingResponse
                    value: {}
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  invalidIdentification:
                    summary: IBAN is not valid.
                    description: invalidIdentification
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: iban
                          text: iban size must be between 15 and 34
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: iban
                          text: iban invalid IBAN value
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
        tags:
          - External Account Representation
    /accounts/identifications:search:
      post:
        description: >-
          Searches identifications (with MambuID included) based on provided
          filter criteria
        operationId: searchAccountIdentifications
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountIdentificationsSearchRequestDTO'
        responses:
          '200':
            description: OK - List of found identifications with accountId
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/AccountIdentificationsSearchResponseDTO'
                examples:
                  AccountIdentificationsSearchResponse:
                    summary: Successful account identification search response.
                    description: AccountIdentificationsSearchResponse
                    value:
                      - accountId: test123
                        currency: EUR
                        type: DEPOSIT
                        identification:
                          iban: DE46606951125202071272
                          identification: ABCDE1234F
                          scheme: PAN
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  invalidSearchFilter:
                    summary: Search filter is not valid
                    description: invalidSearchFilter
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: >-
                            searchAccountIdentifications.arg0.filterCriteria[0].field
                          text: >-
                            filterCriteria[0].field Should be one of: schema,
                            iban, currency, identification
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
        tags:
          - External Account Representation
    /collections:
      post:
        tags:
          - SEPA Direct Debit
        description: >-
          Creates a collection initiation request. This covers the flows as
          described in the [SEPA Direct
          Debit](https://support.mambu.com/docs/sepa-direct-debit-creditor-flow)
          section of our user guide.
        operationId: initiateCollection
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
          - name: X-Request-ID
            in: header
            required: true
            schema:
              type: string
              description: >-
                ID of the request, unique to the call, as determined by the
                initiating party.
          - name: Idempotency-Key
            in: header
            schema:
              type: string
              description: >-
                Prevents retried requests to be executed multiple times.
                Subsequent requests with the same Idempotency Key will not be
                processed and will return a cached result.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionDTO'
              examples:
                initiateCollectionRequest:
                  summary: >-
                    Initiate collection request for accounts identified by IBAN
                    and creditor agent identified by BIC.
                  description: initiateCollectionRequest
                  value:
                    debtorAccount:
                      identification:
                        iban: DE46606951125202071272
                      currency: EUR
                    debtorName: John Doe
                    serviceLevel: SEPA
                    instructedAmount:
                      currency: EUR
                      amount: '500'
                    creditorAccount:
                      identification:
                        iban: DE16195554277485442959
                      currency: EUR
                    creditorName: Merchant123
                    paymentIdentification:
                      transactionIdentification: 113T9bs6ad48ga1216d772430401s01sd2
                    requestedExecutionDate: '2020-09-01'
                    mandateRelatedInformation:
                      mandateIdentification: 16ead91c975c4881a60c
                      dateOfSignature: '2020-01-31'
                    paymentTypeInformation:
                      sequenceType: FRST
                    creditorSchemeIdentification:
                      identification:
                        privateIdentification: I48799148795
        responses:
          '201':
            description: >-
              Created - Collection Initiation request was correctly performed (but
              not yet accepted) nor executed.
            headers:
              Location:
                description: >-
                  Location of the created collection order request resource, for
                  future reference or status polling.
                required: true
                style: simple
                schema:
                  type: string
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CollectionResponse'
                examples:
                  initiateCollectionResponse:
                    summary: Successful collection initiation response.
                    description: initiateCollectionResponse
                    value:
                      transactionStatus: RCVD
                      collectionId: e38458a4-d955-4a39-8e21-9608e9600b3d
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  missingMandatoryField:
                    summary: Identification for debtor account was not provided.
                    description: missingMandatoryField
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: debtorAccount.identification
                          text: debtorAccount.identification may not be null
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported on a specific
              endpoint. It has nothing to do with the content, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the serves does not
              support has been supplied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /log:
      post:
        operationId: logArgument
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogRequest'
          required: true
        responses:
          default:
            description: default response
            content:
              application/json: {}
        tags:
          - External Account Representation
    /payments/financial-institution-credit-transfers:
      post:
        operationId: initiateCreditTransfer
        parameters:
          - name: X-Request-ID
            in: header
            required: true
            schema:
              type: string
              description: >-
                ID of the request, unique to the call, as determined by the
                initiating party.
          - name: Idempotency-Key
            in: header
            schema:
              type: string
              description: >-
                Prevents retried requests to be executed multiple times.
                Subsequent requests with the same Idempotency Key will not be
                processed and will return a cached result.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialInstitutionPaymentDTO'
        responses:
          default:
            description: default response
            content:
              application/json: {}
    /payments/credit-transfers:
      post:
        operationId: initiateCreditTransfer_1
        parameters:
          - name: X-Request-ID
            in: header
            required: true
            schema:
              type: string
              description: >-
                ID of the request, unique to the call, as determined by the
                initiating party.
          - name: Idempotency-Key
            in: header
            schema:
              type: string
              description: >-
                Prevents retried requests to be executed multiple times.
                Subsequent requests with the same Idempotency Key will not be
                processed and will return a cached result.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iso20022PaymentDTO'
        responses:
          default:
            description: default response
            content:
              application/json: {}
        tags:
          - SEPA Credit Transfers
    /payments:
      post:
        tags:
          - SEPA Credit Transfers
        description: >-
          Creates a payment initiation request. Payments using the SEPA Credit
          Transfer scheme can only be created for the current date. A pacs.008
          message will be generated from the data provided in this request. For
          more information on how these fields map to SEPA XML messages, refer to
          the [SEPA Credit Transfer Techincal
          Information](https://support.mambu.com/docs/sepa-credit-transfer-technical-information#pacs00800102)
          article in our user guide.
        operationId: initiatePayment
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
          - name: X-Request-ID
            in: header
            required: true
            schema:
              type: string
              description: >-
                ID of the request, unique to the call, as determined by the
                initiating party.
          - name: Idempotency-Key
            in: header
            schema:
              type: string
              description: >-
                Prevents retried requests to be executed multiple times.
                Subsequent requests with the same Idempotency Key will not be
                processed and will return a cached result.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiationPaymentDTO'
              examples:
                initiatePaymentRequest:
                  summary: >-
                    Initiate same day payment request for accounts identified by
                    IBAN and creditor agent identified by BIC with creditor and
                    debtor address information.
                  description: initiatePaymentRequest
                  value:
                    debtorAccount:
                      identification:
                        iban: DE46606951125202071272
                      currency: EUR
                    debtorName: John Doe
                    debtorAddress:
                      street: Karl-Liebknecht-Str. 5
                      buildingNumber: '5234'
                      city: Berlin
                      postalCode: '10178'
                      countryCode: DE
                    serviceLevel: SEPA
                    instructedAmount:
                      currency: EUR
                      amount: '500'
                    creditorAccount:
                      identification:
                        iban: DE16195554277485442959
                      currency: EUR
                    creditorAgent:
                      institutionIdentification:
                        bicfi: DEUTDEFF
                    creditorName: Merchant123
                    creditorAddress:
                      street: Am Olympiapark 1
                      buildingNumber: '1'
                      city: Munchen
                      postalCode: '80809'
                      countryCode: DE
        responses:
          '201':
            description: >-
              Created - Payment Initiation request was correctly performed (but
              not yet accepted) nor executed.
            headers:
              Location:
                description: >-
                  Location of the created payment order request resource, for
                  future reference or status polling.
                required: true
                style: simple
                schema:
                  type: string
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse'
                examples:
                  initiatePaymentResponse:
                    summary: Successful payment initiation request.
                    description: initiatePaymentResponse
                    value:
                      transactionStatus: RCVD
                      paymentId: e38458a4-d955-4a39-8e21-9608e9600b3d
                      transactionFeeIndicator: false
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  missingMandatoryField:
                    summary: Identification for debtor account was not provided.
                    description: missingMandatoryField
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: debtorAccount.identification
                          text: debtorAccount.identification may not be null
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported by a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the serves does not
              support has been supplied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/FailedPaymentResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/standing-orders/{id}/executions:
      get:
        tags:
          - Standing Order
        description: Get executions of standing order
        operationId: getExecutionsByStandingOrderId
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
          - name: ApiKey
            in: header
            description: ApiKey header that is used for authentication
            required: true
            schema:
              type: string
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK - Standing orders executions retrieval was successful.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StandingOrderExecutionResponse'
                examples:
                  StandingOrderExecutionResponse:
                    description: StandingOrderExecutionResponse
                    value:
                      - standingOrderId: standing-order-id-qwerty
                        paymentOrderId: paymentorderid54
                        requestedExecuteOn: '2023-01-26T15:51:27'
                        status: FAILED
                        creationDate: '2023-01-26T15:52:27.865848Z'
                        type: RETRY
                        failReason: INSUFFICIENT_FUNDS
    /payments/standing-orders/{id}:
      get:
        tags:
          - Standing Order
        description: Gets Standing order information
        operationId: getStandingOrderDetails
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK - Returns Standing order item.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StandingOrderGetResponse'
                examples:
                  standingOrderGetResponse:
                    summary: Standing order get response.
                    description: standingOrderGetResponse
                    value:
                      id: 9726992c-bda4-4867-9264-f9168337d0ec
                      payment:
                        scheme: SEPA
                        instructedAmount:
                          currency: EUR
                          amount: '500'
                        debtorAccount:
                          identification:
                            iban: DE87200500001234567890
                          currency: EUR
                        creditorAccount:
                          identification:
                            other:
                              identification: '1234'
                              scheme: PAN
                          currency: EUR
                        creditorName: CreditorName
                        debtorName: DebtorName
                        remittanceInformationUnstructured: Remittance Info
                      startDate: '2022-11-10'
                      frequency: DAILY
                      endDate: '2023-11-10'
                      creationDateTime: '2022-11-09T21:41:29+02:00'
                      status: ACTIVE
                      lastExecution: '2022-11-17'
                      nextExecution: '2022-11-18'
                      paymentsCount: 2
                      ownerId: some-owner-id
                      retryCount: 3
                      suspendDateFrom: null
                      suspendDateTo: null
          '404':
            description: Not found - cannot find the requested resource.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  standingOrderNotFound:
                    summary: Unable to get Standing order
                    description: standingOrderNotFound
                    value:
                      tppMessages:
                        - category: ERROR
                          code: RESOURCE_UNKNOWN
                          text: >-
                            Unable to find Standing order with id:
                            9726992c-bda4-4867-9264-f9168337d0ec.
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
      delete:
        tags:
          - Standing Order
        description: Cancel Standing order
        operationId: cancelStandingOrder
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '204':
            description: Standing order canceled.
          '404':
            description: Not found - cannot find the requested resource.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  standingOrderNotFound:
                    summary: Unable to find Standing order
                    description: standingOrderNotFound
                    value:
                      tppMessages:
                        - category: ERROR
                          code: RESOURCE_UNKNOWN
                          text: >-
                            Unable to find Standing order with id:
                            9726992c-bda4-4867-9264-f9168337d0ec.
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/standing-orders:
      post:
        tags:
          - Standing Order
        description: >-
          API creates standing orders. Standing order creation will trigger
          periodic payments for provided frequency from start date until the end
          date.
        operationId: createStandingOrder
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderDTO'
              examples:
                createStandingOrder:
                  summary: Create standing orders
                  description: createStandingOrder
                  value: |
                    {
                      "payment": {
                        "scheme": "SEPA",
                        "instructedAmount": {
                          "currency": "EUR",
                          "amount": "500"
                        },
                        "debtorAccount": {
                          "identification": {
                            "iban": "DE87200500001234567890"
                          },
                          "currency": "EUR"
                        },
                        "creditorAccount": {
                          "identification": {
                            "other": {
                              "identification": "1234",
                              "scheme": "PAN"
                            }
                          },
                          "currency": "EUR"
                        },
                        "creditorName": "CreditorName",
                        "debtorName": "DebtorName",
                        "remittanceInformationUnstructured": "Remittance Info"
                      },
                      "startDate": [
                        2022,
                        11,
                        8
                      ],
                      "frequency": "DAILY",
                      "endDate": [
                        2022,
                        11,
                        8
                      ],
                      "ownerId": "some-owner-id", 
                      "retryPolicy": {
                    “ +    "retryCount": "3"
                      }
                    }
        responses:
          '201':
            description: Created - Standing order successfully created.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StandingOrderCreateResponse'
                examples:
                  standingOrderCreateResponse:
                    summary: Successful standing order request.
                    description: standingOrderCreateResponse
                    value:
                      id: 9726992c-bda4-4867-9264-f9168337d0ec
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  invalidStandingOrderRequest:
                    summary: IBAN is not valid.
                    description: invalidStandingOrderRequest
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: iban
                          text: iban size must be between 15 and 34
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: iban
                          text: iban invalid IBAN value
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/standing-orders:search:
      post:
        tags:
          - Standing Order
        description: Search for standing orders by search filters such as ownerId
        operationId: searchStandingOrders
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
          - name: ApiKey
            in: header
            description: ApiKey header that is used for authentication
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderSearchRequest'
              examples:
                standingOrderSearchRequest:
                  summary: Search for standing orders by search filters
                  description: standingOrderSearchRequest
                  value: |-
                    {
                       "filterCriteria": [
                           {
                           "field": "OWNER_ID",
                           "operator": "EQUALS",
                           "value": "string"
                           }
                           {
                           "field": "STATUS",
                           "operator": "EQUALS",
                           "value": "string"
                           }
                       ],
                      "limit": 500,
                      "offset": 0
                    }
        responses:
          '200':
            description: OK - Standing orders search was successful.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/StandingOrderSearchResponse'
                examples:
                  StandingOrderSearchResponse:
                    description: StandingOrderSearchResponse
                    value:
                      - ownerId: some_kind_of_id_from_client
                        id: 9726992c-bda4-4867-9264-f9168337d0ec
                        payment:
                          scheme: SEPA
                          instructedAmount:
                            currency: EUR
                            amount: '500'
                          debtorAccount:
                            identification:
                              iban: DE87200500001234567890
                            currency: EUR
                          creditorAccount:
                            identification:
                              other:
                                identification: '1234'
                                scheme: PAN
                            currency: EUR
                          creditorName: CreditorName
                          debtorName: DebtorName
                          remittanceInformationUnstructured: Remittance Info
                        startDate: '2022-11-10'
                        frequency: DAILY
                        endDate: '2023-11-10'
                        creationDateTime: '2022-11-09T21:41:29+02:00'
                        status: ACTIVE
                      - ownerId: some_kind_of_id_from_client
                        id: 9726992c-bda4-4867-9264-13245679fe
                        payment:
                          scheme: SEPA
                          instructedAmount:
                            currency: EUR
                            amount: '100'
                          debtorAccount:
                            identification:
                              iban: DE87200500001234567890
                            currency: EUR
                          creditorAccount:
                            identification:
                              other:
                                identification: '1234'
                                scheme: PAN
                            currency: EUR
                          creditorName: CreditorName
                          debtorName: DebtorName
                          remittanceInformationUnstructured: Remittance Info
                        startDate: '2022-11-10'
                        frequency: DAILY
                        endDate: '2023-11-10'
                        creationDateTime: '2022-11-09T21:41:29+02:00'
                        status: ACTIVE
                        suspendDateFrom: null
                        suspendDateTo: null
    /payments/standing-orders:suspend:
      post:
        tags:
          - Standing Order
        description: API suspends standing order for a particular period of time.
        operationId: suspendStandingOrder
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingOrderSuspendDTO'
              examples:
                suspendStandingOrder:
                  summary: Suspend standing order
                  description: suspendStandingOrder
                  value:
                    id: 9726992c-bda4-4867-9264-f9168337d0ec
                    startDate:
                      - 2022
                      - 11
                      - 8
                    endDate:
                      - 2022
                      - 11
                      - 9
        responses:
          '200':
            description: OK - Standing order successfully suspended.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  invalidStandingOrderSuspendRequest:
                    summary: request is invalid
                    description: invalidStandingOrderSuspendRequest
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: id
                          text: id must not be null
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: endDate
                          text: endDate must not be null
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TppMessagesResponse'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /collections/{collectionId}:
      get:
        operationId: getCollectionDetails
        parameters:
          - name: collectionId
            in: path
            required: true
            schema:
              type: string
              description: >-
                ID of the collection order, as received in the response to a `POST
                /collections` request or from the instruction ID field of a
                collection. You can retrieve the instruction ID in the Payment
                Gateway UI by opening up the detail view of a collection and
                looking for the value of `InstId` in the Payment Identification
                object.
          - name: detailsLevel
            in: query
            schema:
              type: string
              description: >-
                Details level of the response. `STATUS` and `FULL` detail levels
                are supported. `STATUS` will return the current status and a
                timestamp of when the collection order was last modified. The
                default value of `FULL` will return a complete set of information
                about the collection order.
              default: FULL
        responses:
          default:
            description: default response
            content:
              application/json: {}
        tags:
          - SEPA Direct Debit
    /payments/credit-transfers/{paymentId}:
      get:
        operationId: creditTransferDetails
        parameters:
          - name: paymentId
            in: path
            required: true
            schema:
              type: string
              description: >-
                ID of the payment order, as received in the response to a `POST
                /payments` request
          - name: detailsLevel
            in: query
            schema:
              type: string
              description: >-
                Details level of the response. STATUS and FULL detail levels are
                supported. `STATUS` will return the current status and a timestamp
                of when the payment order was last modified. The default value of
                `FULL` will return a complete set of information about the payment
                order.
              default: FULL
        responses:
          default:
            description: default response
            content:
              application/json: {}
        tags:
          - SEPA Credit Transfers
    /payments/{paymentId}:
      get:
        operationId: getPaymentDetails
        parameters:
          - name: paymentId
            in: path
            required: true
            schema:
              type: string
              description: >-
                ID of the payment order, as received in the response to a `POST
                /payments` request
          - name: detailsLevel
            in: query
            schema:
              type: string
              description: >-
                Details level of the response. STATUS and FULL detail levels are
                supported. `STATUS` will return the current status and a timestamp
                of when the payment order was last modified. The default value of
                `FULL` will return a complete set of information about the payment
                order.
              default: FULL
        responses:
          default:
            description: default response
            content:
              application/json: {}
        tags:
          - SEPA Credit Transfers
    /payments:settleInstantPayment:
      post:
        tags:
          - SEPA Credit Transfers
        description: Accepts requests for an instant payment settlement.
        operationId: settleInstantPayment
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstantPaymentSettlement'
              examples:
                instantPaymentSettlementRequest:
                  summary: Request settlement for an instant payment.
                  description: instantPaymentSettlementRequest
                  value:
                    groupHeader:
                      messageIdentification: SCTORD200020190305ORD000011119
                    transaction:
                      debtorAgent:
                        institutionIdentification:
                          bicfi: FUBKDE71
                      paymentIdentification:
                        transactionIdentification: 00730100632BHGCRWC
                        acceptanceDateTime: '2023-04-05T09:07:37'
          required: true
        responses:
          '202':
            description: >-
              Accepted - The instant payment settlement request has been accepted
              for processing.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  missingMandatoryField:
                    summary: Message identification for group header was not provided.
                    description: missingMandatoryField
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: groupHeader.messageIdentification
                          text: groupHeader.messageIdentification may not be null
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported by a specific
              endpoint. It has nothing to do with the content, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the serves does not
              support has been supplied.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/{paymentOrderId}:reject:
      post:
        tags:
          - SEPA Credit Transfers
        description: Manually Reject an Outgoing Payment.
        operationId: manuallyRejectOutgoingPayment
        parameters:
          - name: paymentOrderId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: >-
              OK - The specified payment order has been marked to be manually
              rejected.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidTransactionStatus:
                    summary: Transaction status is invalid for manual rejection.
                    description: invalidTransactionStatus
                    value:
                      tppMessages:
                        - category: ERROR
                          code: INVALID_TRANSACTION_STATUS
                          text: >-
                            Transaction has invalid status: TO_BE_REJECTED.
                            Expected status is: TO_BE_SENT.
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/{paymentOrderId}:recall:
      post:
        tags:
          - SEPA Credit Transfers
        description: Recall an outgoing payment.
        operationId: recallOutgoingPayment
        parameters:
          - name: paymentOrderId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recall'
          required: true
        responses:
          '200':
            description: OK - Payment marked to be recalled successfully.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  badRecallReasonCode:
                    summary: A non SEPA compliant recall reason code was provided.
                    description: badRecallReasonCode
                    value:
                      tppMessages:
                        - category: ERROR
                          code: INVALID_REQUEST_BODY
                          text: ''
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value: |-
                      {
                        "tppMessages": [
                          {
                            "category": "ERROR",
                            "code": "SERVICE_INVALID",
                            "text": "There was an error processing your request.     }
                        ]
                      }
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/{paymentOrderId}:denyOutgoingRecall:
      post:
        tags:
          - SEPA Credit Transfers
        description: Deny an Outgoing Recall.
        operationId: denyOutgoingRecall
        parameters:
          - name: paymentOrderId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK - The specified outgoing recall has been marked to be rejected.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidPaymentOrderId:
                    summary: No payment order found for given id.
                    description: invalidPaymentOrderId
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            original transaction for Payment Order
                            bac5161bd53348fa8dfc143cae49ba13 not found
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/{paymentOrderId}:denyIncomingRecall:
      post:
        tags:
          - SEPA Credit Transfers
        description: Deny an Incoming Recall.
        operationId: denyIncomingRecall
        parameters:
          - name: paymentOrderId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancellationDetails'
          required: true
        responses:
          '200':
            description: OK - The specified incoming recall has been marked to be rejected.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidRequest:
                    summary: >-
                      The request is invalid for the current state of the
                      transaction.
                    description: invalidRequest
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            Database update failed due to invalid request,
                            expected number of updated rows is 1, actual number
                            is: 0. The error message is: pending.authorized.failed
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/{paymentOrderId}:approveOutgoingRecall:
      post:
        tags:
          - SEPA Credit Transfers
        description: Approve an Outgoing Recall.
        operationId: approveOutgoingRecall
        parameters:
          - name: paymentOrderId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK - The specified outgoing recall has been authorized.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidPaymentOrderId:
                    summary: No payment order found for given id.
                    description: invalidPaymentOrderId
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            original transaction for Payment Order
                            bac5161bd53348fa8dfc143cae49ba13 not found
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/{paymentOrderId}:approveIncomingRecall:
      post:
        tags:
          - SEPA Credit Transfers
        description: Approve an Incoming Recall.
        operationId: approveIncomingRecall
        parameters:
          - name: paymentOrderId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK - The specified incoming recall has been authorized.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidRequest:
                    summary: >-
                      The request is invalid for the current state of the
                      transaction.
                    description: invalidRequest
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            Database update failed due to invalid request,
                            expected number of updated rows is 1, actual number
                            is: 0. The error message is: pending.authorized.failed
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/{paymentOrderId}/aml:resendCallout:
      post:
        tags:
          - AML
        description: Resends the AML callout for an Outgoing payment.
        operationId: resendCTAmlCallout
        parameters:
          - name: paymentOrderId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK - The AML callout was resent for the provided payment order.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidRequestBody:
                    summary: >-
                      No transactions that allow resending the AML callout were
                      found.
                    description: invalidRequestBody
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            Failed to find any valid Sepa Transaction for the
                            given request. The error message is:
                            resend.aml.callout.failed
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported on a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/incoming:
      post:
        tags:
          - Incoming Messages
        description: Creates an incoming message request.
        operationId: submitIncomingMessage
        parameters:
          - name: X-Request-ID
            in: header
            description: >-
              ID of the request, unique to the call, as determined by the
              initiating party.
            required: true
            schema:
              type: string
              description: >-
                ID of the request, unique to the call, as determined by the
                initiating party.
          - name: X-Payment-Scheme
            in: header
            description: Specifies payment scheme for processing.
            required: false
            schema:
              type: string
              description: Specifies payment scheme for processing.
          - name: Content-Type
            in: header
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/xml:
              schema:
                type: string
              examples:
                incomingCreditTransferRequest:
                  summary: Request processing for the given incoming pacs.008 message.
                  description: incomingCreditTransferRequest
                  value: >-
                    <Document
                    xmlns="urn:iso:std:iso:20022:tech:xsd:pacs.008.001.02"><FIToFICstmrCdtTrf>
                    ... </FIToFICstmrCdtTrf></Document>
            text/plain:
              schema:
                type: string
          required: true
        responses:
          '202':
            description: >-
              Accepted - Incoming file accepted and is due for processing, when
              incoming scheduler is configured to run. Outgoing (complete /
              partial) pacs.002 will be published in case of complete / partial
              processing of incoming pacs.008. If the incoming pacs.008 is
              completely failed then a rejected pacs.002 will be published.
              Outgoing pacs.004 will be published for failed transaction from
              incoming pacs.008.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/IncomingMessageResponse'
                examples:
                  incomingPacs008Response:
                    summary: Successful accept incoming payment message
                    description: incomingPacs008Response
                    value:
                      messageId: SCTORD200020190305ORD000011119
                      messageType: urn:iso:std:iso:20022:tech:xsd:pacs.008.001.02
                  incomingCamt056Response:
                    summary: Successful accept incoming payment recall message
                    description: incomingCamt056Response
                    value:
                      messageId: 568R9154000000000000000000000000010
                      messageType: urn:iso:std:iso:20022:tech:xsd:camt.056.001.01
          '400':
            description: Bad Request - Validation error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidValueForField:
                    summary: Field contains an invalid value.
                    description: invalidValueForField
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          text: The request body may not be empty
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported on a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the server does not
              support has been supplied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/json" instead of "application/xml".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /payments/aml:
      post:
        tags:
          - AML
        description: >-
          Accepts AML check results for Payment Orders, for example SEPA Credit
          Transfers.
        operationId: processPaymentAmlResponse
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
          - name: X-Request-ID
            in: header
            description: >-
              ID of the request, unique to the call, as determined by the
              initiating party.
            required: true
            schema:
              type: string
              description: >-
                ID of the request, unique to the call, as determined by the
                initiating party.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlResult'
              examples:
                amlInformation:
                  summary: AML check result.
                  description: amlInformation
                  value:
                    groupHeader:
                      messageIdentification: SCTORD200020190305ORD000011119
                    transactions:
                      - status: Accepted
                        paymentIdentification:
                          transactionIdentification: 00730100632BHGCRWC
                        debtorAgent:
                          institutionIdentification:
                            bicfi: BTRLRO22
                        interbankSettlementDate: '2019-06-28'
          required: true
        responses:
          '200':
            description: OK - The AML check result has been prepared for processing.
            content:
              '*/*':
                schema:
                  type: string
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  missingMandatoryField:
                    summary: Message identification for group header was not provided.
                    description: missingMandatoryField
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: groupHeader.messageIdentification
                          text: groupHeader.messageIdentification may not be null
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported by a specific
              endpoint. It has nothing to do with the content, payment or account
              information data model.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the serves does not
              support has been supplied.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
            content:
              '*/*':
                schema:
                  type: string
    /inquiries:skipStatusUpdateOnRecall:
      post:
        tags:
          - SEPA Credit Transfer Inquiries
        description: >-
          Skips response for Request for Status Update on Recall with given
          details.
        operationId: skipStatusUpdateOnRecall
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkipStatusUpdateOnRecall'
              examples:
                skipStatusUpdateOnRecall:
                  summary: >-
                    Request for skipping Request for Status Update on Recall
                    response
                  description: skipStatusUpdateOnRecall
                  value:
                    groupHeader:
                      messageIdentification: 82d7125b36014c2e8cc442a3586badd0
                      creationDateTime: '2021-02-10T10:03:25'
                      instructingAgent: ABCDE123
                    transactionInformation:
                      statusRequestIdentification: 4112f6688c846a89bee2b2c476f1145
          required: true
        responses:
          '200':
            description: >-
              OK - Request for skipping Status Update on Recall response was
              received
          '400':
            description: Bad Request - Invalid Transaction Status.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidTransactionStatus:
                    summary: >-
                      Transaction status is invalid for skipping Status Update on
                      Recall response.
                    description: invalidTransactionStatus
                    value:
                      tppMessages:
                        - category: ERROR
                          code: INVALID_TRANSACTION_STATUS
                          text: 'Transaction has invalid status: REPLY_SKIPPED'
          '404':
            description: Not Found - No message found for the given identification.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  messageNotFound:
                    summary: No message found for the given identification.
                    description: messageNotFound
                    value:
                      tppMessages:
                        - category: ERROR
                          code: NOT_FOUND
                          text: No pacs.028.001.01 was found for the supplied details
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported on a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the server does not
              support has been supplied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /inquiries:requestStatusUpdateOnRecall:
      post:
        tags:
          - SEPA Credit Transfer Inquiries
        description: Create inquiry to request status update for a payment cancellation.
        operationId: requestStatusUpdateOnRecall
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginalCamt056Data'
          required: true
        responses:
          '200':
            description: OK - Inquiry created successfully.
          '400':
            description: >-
              Bad Request - The original Payment Cancellation Request transaction
              not found. Please check the input parameters.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  originalTransactionNotFound:
                    summary: >-
                      The original Payment Cancellation Request transaction not
                      found.
                    description: originalTransactionNotFound
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            original transaction for Payment Cancellation Request
                            123456 not found
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /inquiries:requestStatusUpdateOnInquiry:
      post:
        tags:
          - SEPA Credit Transfer Inquiries
        description: Create status update request for existing camt.087 or camt.027 inquiry
        operationId: requestStatusUpdateOnInquiry
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginalInquiryData'
          required: true
        responses:
          '200':
            description: OK - Inquiry created successfully.
          '400':
            description: >-
              Bad Request - The original Credit transfer transaction not found.
              Please check the input parameters.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  originalTransactionNotFound:
                    summary: The original Credit transfer transaction not found.
                    description: originalTransactionNotFound
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            original transaction for Payment Cancellation Request
                            123456 not found
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /inquiries:rejectStatusUpdateOnRecall:
      post:
        tags:
          - SEPA Credit Transfer Inquiries
        description: >-
          Handles negative response for Request for Status Update on Recall with
          given details.
        operationId: rejectStatusUpdateOnRecall
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectStatusUpdateOnRecall'
              examples:
                rejectStatusUpdateOnRecall:
                  summary: >-
                    Request for handling Request for Status Update on Recall
                    negative response
                  description: rejectStatusUpdateOnRecall
                  value:
                    groupHeader:
                      messageIdentification: 82d7125b36014c2e8cc442a3586badd0
                      creationDateTime: '2021-02-10T10:03:25'
                      instructingAgent: ABCDE123
                    transactionInformation:
                      statusRequestIdentification: 4112f6688c846a89bee2b2c476f1145
                      originalMessageIdentification: 22b8f938c6154877886a0c1fc9e74166
                      originalInstructionIdentification: 562f8f9f8c6154844886a0c1fc9e7451
                    cancellationDetails:
                      rejectionReason: ARDT
          required: true
        responses:
          '200':
            description: >-
              OK - Request for Status Update on Recall negative response was
              received
          '400':
            description: Bad Request - Validation error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidValueForField:
                    summary: Field contains an invalid value.
                    description: invalidValueForField
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          text: The request body must not be empty
          '404':
            description: Not Found - No message found for the given identification.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  messageNotFound:
                    summary: No message found for the given identification.
                    description: messageNotFound
                    value:
                      tppMessages:
                        - category: ERROR
                          code: NOT_FOUND
                          text: No pacs.028.001.01 was found for the supplied details
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported on a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the server does not
              support has been supplied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /inquiries:claimValueDateCorrection:
      post:
        tags:
          - SEPA Credit Transfer Inquiries
        description: Create inquiry to request claim for value-date change.
        operationId: claimValueDateCorrection
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginalPacs008Data'
          required: true
        responses:
          '200':
            description: OK - Inquiry created successfully.
          '400':
            description: >-
              Bad Request - The original Credit Transfer transaction not found.
              Please check the input parameters.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  originalTransactionNotFound:
                    summary: The original Credit Transfer transaction not found.
                    description: originalTransactionNotFound
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            original Credit Transfer transaction for 123456 not
                            found
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /inquiries:claimNonReceipt:
      post:
        tags:
          - SEPA Credit Transfer Inquiries
        description: Create inquiry for claim of non-receipt
        operationId: claimNonReceipt
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OriginalPacs008Data'
          required: true
        responses:
          '200':
            description: OK - Inquiry created successfully.
          '400':
            description: >-
              Bad Request - The original Credit transfer transaction not found.
              Please check the input parameters.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  originalTransactionNotFound:
                    summary: The original Credit transfer transaction not found.
                    description: originalTransactionNotFound
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            original transaction for Payment Cancellation Request
                            123456 not found
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /inquiries:acceptStatusUpdateOnRecall:
      post:
        tags:
          - SEPA Credit Transfer Inquiries
        description: >-
          Handles positive response for Request for Status Update on Recall with
          given details.
        operationId: acceptStatusUpdateOnRecall
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptStatusUpdateOnRecall'
              examples:
                acceptStatusUpdateOnRecall:
                  summary: >-
                    Request for handling Request for Status Update on Recall
                    positive response
                  description: acceptStatusUpdateOnRecall
                  value:
                    groupHeader:
                      messageIdentification: 82d7125b36014c2e8cc442a3586badd0
                      creationDateTime: '2021-02-10T10:03:25'
                      instructingAgent: ABCDE123
                    transactionInformation:
                      statusRequestIdentification: 4112f6688c846a89bee2b2c476f1145
                      originalMessageIdentification: 22b8f938c6154877886a0c1fc9e74166
                      originalInstructionIdentification: 562f8f9f8c6154844886a0c1fc9e7451
          required: true
        responses:
          '200':
            description: >-
              OK - Request for Status Update on Recall positive response was
              received
          '400':
            description: Bad Request - Validation error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidValueForField:
                    summary: Field contains an invalid value.
                    description: invalidValueForField
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          text: The request body must not be empty
          '404':
            description: Not Found - No message found for the given identification.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  messageNotFound:
                    summary: No message found for the given identification.
                    description: messageNotFound
                    value:
                      tppMessages:
                        - category: ERROR
                          code: NOT_FOUND
                          text: No pacs.028.001.01 was found for the supplied details
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported on a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the server does not
              support has been supplied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /collections/{collectionOrderId}:reject:
      post:
        tags:
          - SEPA Direct Debit
        description: Manually Reject an Outgoing Collection.
        operationId: manuallyRejectOutgoingCollection
        parameters:
          - name: collectionOrderId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: >-
              OK - The specified collection order has been marked to be manually
              rejected.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidTransactionStatus:
                    summary: Transaction status is invalid for manual rejection.
                    description: invalidTransactionStatus
                    value:
                      tppMessages:
                        - category: ERROR
                          code: INVALID_TRANSACTION_STATUS
                          text: >-
                            Transaction has invalid status: TO_BE_REJECTED.
                            Expected status is: TO_BE_SENT.
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /collections/{collectionOrderId}:rejectIncoming:
      post:
        tags:
          - SEPA Direct Debit
        description: Manually Reject an Incoming Collection.
        operationId: manuallyRejectIncomingCollection
        parameters:
          - name: collectionOrderId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: >-
              OK - The specified collection order has been marked to be manually
              rejected.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidTransactionStatus:
                    summary: Transaction status is invalid for manual rejection.
                    description: invalidTransactionStatus
                    value:
                      tppMessages:
                        - category: ERROR
                          code: INVALID_TRANSACTION_STATUS
                          text: >-
                            Transaction has invalid status: TO_BE_REJECTED.
                            Expecting one of the following statuses:
                            PENDING_SETTLEMENT, RECEIVED.
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /collections/{collectionId}:reverse:
      post:
        tags:
          - SEPA Direct Debit
        description: Reverse a Collection Instruction.
        operationId: reverse
        parameters:
          - name: collectionId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reverse'
          required: true
        responses:
          '200':
            description: OK - Collection Instruction marked to be reversed successfully.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  badReversalReasonCode:
                    summary: A non SEPA compliant refund reason code was provided.
                    description: badReversalReasonCode
                    value:
                      tppMessages:
                        - category: ERROR
                          code: PARAMETER_NOT_SUPPORTED
                          text: value 'MS01' not supported
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /collections/{collectionId}:refund:
      post:
        tags:
          - SEPA Direct Debit
        description: Refund a Collection Instruction.
        operationId: refund
        parameters:
          - name: collectionId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
          required: true
        responses:
          '200':
            description: OK - Collection Instruction marked to be refunded successfully.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  badRefundReasonCode:
                    summary: A non SEPA compliant refund reason code was provided.
                    description: badRefundReasonCode
                    value:
                      tppMessages:
                        - category: ERROR
                          code: PARAMETER_NOT_SUPPORTED
                          text: value 'MD02' not supported
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /collections/{collectionId}/aml:resendCallout:
      post:
        tags:
          - AML
        description: Resends the AML callout for an Outgoing collection.
        operationId: resendDDAmlCallout
        parameters:
          - name: collectionId
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: OK - The AML callout was resent for the provided collection order.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidRequestBody:
                    summary: >-
                      No transactions that allow resending the AML callout were
                      found.
                    description: invalidRequestBody
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            Failed to find any valid Sepa Transaction for the
                            given request. The error message is:
                            resend.aml.callout.failed
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported on a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /collections/aml:
      post:
        tags:
          - AML
        description: >-
          Accepts AML check results for collections, for example, SEPA Direct
          Debits.
        operationId: processCollectionAmlResponse
        parameters:
          - name: Content-Type
            in: header
            description: application/json
            required: true
          - name: X-Request-ID
            in: header
            description: >-
              ID of the request, unique to the call, as determined by the
              initiating party.
            required: true
            schema:
              type: string
              description: >-
                ID of the request, unique to the call, as determined by the
                initiating party.
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlResult'
              examples:
                amlInformation:
                  summary: AML check result.
                  description: amlInformation
                  value:
                    groupHeader:
                      messageIdentification: SCTORD200020190305ORD000011119
                    transactions:
                      - status: Accepted
                        collectionIdentification:
                          transactionIdentification: 00730100632BHGCRWC
                        creditorAgent:
                          institutionIdentification:
                            bicfi: BTRLRO22
                        interbankSettlementDate: '2019-06-28'
          required: true
        responses:
          '200':
            description: OK - The AML check result has been prepared for processing.
            content:
              '*/*':
                schema:
                  type: string
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  missingMandatoryField:
                    summary: Message identification for group header was not provided.
                    description: missingMandatoryField
                    value:
                      tppMessages:
                        - category: ERROR
                          code: FORMAT_ERROR
                          path: groupHeader.messageIdentification
                          text: groupHeader.messageIdentification may not be null
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported by a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the serves does not
              support has been supplied.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/xml" instead of "application/json".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              '*/*':
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
            content:
              '*/*':
                schema:
                  type: string
    /aml:resendCallouts:
      post:
        tags:
          - AML
        description: Resends the AML callouts.
        operationId: resendAmlCallouts
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendAmlFilter'
          required: true
        responses:
          '200':
            description: OK - The AML callouts were resent.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidRequestBody:
                    summary: >-
                      No transactions that allow resending the AML callout were
                      found.
                    description: invalidRequestBody
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            Failed to find any valid Sepa Transaction for the
                            given request. The error message is:
                            resend.aml.callout.failed
          '405':
            description: >-
              Method Not Allowed - This code is only sent when the HTTP method
              (PUT, POST, DELETE, GET etc.) is not supported on a specific
              endpoint. It has nothing to do with the consent, payment or account
              information data model.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedHttpMethod:
                    summary: The request was submitted with an unsupported HTTP method.
                    description: unsupportedHttpMethod
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '415':
            description: >-
              Unsupported Media Type - A media type which the server does not
              support has been supplied.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  unsupportedContentType:
                    summary: >-
                      The request was submitted with an unsupported content type.
                      For example "application/json" instead of "application/xml".
                    description: unsupportedContentType
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /accounts/identifications:mask:
      post:
        tags:
          - External Account Representation
        description: Mask identifications from Payments Gateway.
        operationId: mask
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentificationsToMask'
          required: true
        responses:
          '200':
            description: OK - Identifications masked. This operation is irreversible.
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  identificationAlreadyMasked:
                    summary: >-
                      At least one of the provided identifications was already
                      masked
                    description: identificationAlreadyMasked
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            Following identifications are already masked:
                            DK0643182702662691
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
    /instructions:
      get:
        tags:
          - Search Messages
        description: Retrieve the SEPA messages details.
        operationId: findSepaMessages
        parameters:
          - name: sepaMessageFilter
            in: query
            required: true
            schema:
              $ref: '#/components/schemas/SepaMessageFilter'
        responses:
          '200':
            description: OK - SEPA Messages Details were correctly found.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SepaMessages'
                examples:
                  pacs.008 instruction information:
                    summary: Information retrieved for a pacs.008 message
                    description: pacs.008 instruction information
                    value:
                      instructions:
                        - FIToFICstmrCdtTrf:
                            grpHdr:
                              msgId: 22b8f938c6154877886a0c1fc9e74166
                              creDtTm: '2019-04-11T09:08:45+03:00'
                              nbOfTxs: '2'
                              ttlIntrBkSttlmAmt:
                                value: 200
                                ccy: EUR
                              intrBkSttlmDt: '2019-04-11T00:00:00+03:00'
                              sttlmInf:
                                clrSys:
                                  prtry: ST2
                              instgAgt:
                                finInstnId:
                                  bic: ABVRATW1XXX
                            cdtTrfTxInf:
                              - pmtId:
                                  instrId: 82d7125b36014c2e8cc442a3586badd0
                                  endToEndId: NOTPROVIDED
                                  txId: 4112f6688c846a89bee2b2c476f1145
                                pmtTpInf:
                                  svcLvl:
                                    cd: SEPA
                                intrBkSttlmAmt:
                                  value: 100
                                  ccy: EUR
                                accptncDtTm: '2019-04-11T09:08:45+03:00'
                                chrgBr: SLEV
                                dbtr:
                                  nm: John Doe
                                dbtrAcct:
                                  id:
                                    iban: RO59INGBW91QIQFZSG6IZBJT
                                dbtrAgt:
                                  finInstnId:
                                    bic: INGBROBU
                                cdtrAgt:
                                  finInstnId:
                                    bic: BTRLRO22
                                cdtr:
                                  nm: BT
                                  pstlAdr:
                                    ctry: DE
                                cdtrAcct:
                                  id:
                                    iban: RO75BTRLBSIJS00RPQWYLYWL
                                _metadata:
                                  transactionSn: 1
                                  transactionStatus: RECEIVED
                                  paymentId: 67eacbf33f1b4eaea8d1055a2a01adea
                              - pmtId:
                                  instrId: 108cf3f5fd833aa5bc5efb90c0dee19e
                                  endToEndId: NOTPROVIDED
                                  txId: 758e663666ae40be8e9278a9e4e899f9
                                pmtTpInf:
                                  svcLvl:
                                    cd: SEPA
                                intrBkSttlmAmt:
                                  value: 100
                                  ccy: EUR
                                accptncDtTm: '2019-04-11T09:08:45+03:00'
                                chrgBr: SLEV
                                dbtr:
                                  nm: John Doe
                                dbtrAcct:
                                  id:
                                    iban: RO59INGBW91QIQFZSG6IZBJT
                                dbtrAgt:
                                  finInstnId:
                                    bic: INGBROBU
                                cdtrAgt:
                                  finInstnId:
                                    bic: BTRLRO22
                                cdtr:
                                  nm: BT
                                  pstlAdr:
                                    ctry: DE
                                cdtrAcct:
                                  id:
                                    iban: RO94BTRLVU048EN2KBPTVT7U
                                _metadata:
                                  transactionSn: 2
                                  transactionStatus: RECEIVED
                                  paymentId: fcaae256fed94018958326c9cb752aeb
                            _metadata:
                              bulkSn: 1
                              direction: I
                              messageId: pacs.008
                              transactions: 2
                  pacs.004 instruction information:
                    summary: Information retrieved for a pacs.004 message
                    description: pacs.004 instruction information
                    value:
                      instructions:
                        - PmtRtr:
                            grpHdr:
                              msgId: '1'
                              creDtTm: '2018-11-26T21:47:57+02:00'
                              nbOfTxs: '1'
                              ttlRtrdIntrBkSttlmAmt:
                                value: 4000.5
                                ccy: EUR
                              intrBkSttlmDt: '2018-11-26T00:00:00+02:00'
                              sttlmInf:
                                sttlmMtd: CLRG
                                clrSys:
                                  prtry: ST2
                            txInf:
                              - rtrId: '2020181126130827322001'
                                orgnlGrpInf:
                                  orgnlMsgId: '1231231312'
                                  orgnlMsgNmId: pacs.008
                                orgnlEndToEndId: 10864caa82034bc8a12e4bf3e117d10d
                                orgnlTxId: '8097758122275259'
                                rtrdIntrBkSttlmAmt:
                                  value: 4000.5
                                  ccy: EUR
                                rtrRsnInf:
                                  orgtr:
                                    id:
                                      orgId:
                                        bicorBEI: DABADKKK
                                  rsn:
                                    cd: AC_01
                                orgnlTxRef:
                                  intrBkSttlmDt: '2018-11-26T00:00:00+02:00'
                                  sttlmInf:
                                    sttlmMtd: CLRG
                                  pmtTpInf:
                                    svcLvl:
                                      cd: SEPA
                                  dbtr:
                                    nm: Hanne Doe
                                  dbtrAcct:
                                    id:
                                      iban: DK0643182702662691
                                  dbtrAgt:
                                    finInstnId:
                                      bic: DABADKKK
                                  cdtrAgt:
                                    finInstnId:
                                      bic: BTRLRO22
                                  cdtr:
                                    nm: John Doe
                                  cdtrAcct:
                                    id:
                                      iban: RO69BTRL3333444433334444
                                _metadata:
                                  transactionSn: 14
                                  transactionStatus: RECEIVED
                                  returnReason: AC01
                                  paymentId: 22886adc407e4280b7df22a966d08425
                            _metadata:
                              bulkSn: 10
                              direction: I
                              messageId: pacs.004.001.02
                              procstatus: REPLIED
                              transactions: 1
                  camt.056 instruction information:
                    summary: Information retrieved for a camt.056 message
                    description: camt.056 instruction information
                    value:
                      instructions:
                        - FIToFIPmtCxlReq:
                            assgnmt:
                              id: msg-id-camt.056.001.01
                              assgnr:
                                agt:
                                  finInstnId:
                                    bic: TESTXXXXXXX
                              assgne:
                                agt:
                                  finInstnId:
                                    bic: TESTXXXXXXX
                              creDtTm: 2019-05-14T21:00:00.000+0000
                            ctrlData:
                              nbOfTxs: 1
                            undrlyg:
                              - txInf:
                                  cxlId: 000R9087000000011
                                  orgnlGrpInf:
                                    orgnlMsgId: SCTORD15682019
                                    orgnlMsgNmId: pacs.008.001.02
                                  orgnlInstrId: '6630844036108666'
                                  orgnlEndToEndId: NOTPROVIDED
                                  orgnlTxId: '8097758122275259'
                                  orgnlIntrBkSttlmAmt:
                                    value: 4000.5
                                    ccy: EUR
                                  orgnlIntrBkSttlmDt: 2019-06-19T21:00:00.000+0000
                                  cxlRsnInf:
                                    - orgtr:
                                        nm: Beneficioso beneficiar io
                                      rsn:
                                        cd: DUPL
                                  orgnlTxRef:
                                    sttlmInf:
                                      sttlmMtd: CLRG
                                      clrSys:
                                        cd: REP
                                    pmtTpInf:
                                      svcLvl:
                                        cd: SEPA
                                    rmtInf:
                                      ustrd:
                                        - Pruebas para CECA 1
                                    ultmtDbtr:
                                      nm: EUR
                                    dbtr:
                                      nm: ENRIQUE ROMERA MARTINEZ DE MIGUEL
                                    dbtrAcct:
                                      id:
                                        iban: ES1011110001087939390799
                                    dbtrAgt:
                                      finInstnId:
                                        bic: TESTXXXXXXX
                                    cdtrAgt:
                                      finInstnId:
                                        bic: TESTXXXXXXX
                                    cdtr:
                                      nm: Beneficioso beneficiario
                                    cdtrAcct:
                                      id:
                                        iban: ES6520950001153279157264
                                  _metadata:
                                    transactionSn: 2
                                    transactionStatus: TO_BE_SENT
                                    returnReason: DUPL
                                    paymentId: poId
                            _metadata:
                              bulkSn: 2
                              direction: I
                              messageId: camt.056.001.01
                              procstatus: RETRIEVED
                              transactions: 1
                  camt.029 instruction information:
                    summary: Information retrieved for a camt.029 message
                    description: camt.029 instruction information
                    value:
                      instructions:
                        - RsltnOfInvstgtn:
                            assgnmt:
                              id: msg-id-camt.029.001.03
                              assgnr:
                                agt:
                                  finInstnId:
                                    bic: TESTXXXXXXX
                              assgne:
                                agt:
                                  finInstnId:
                                    bic: TESTXXXXXXX
                              creDtTm: 2019-05-14T21:00:00.000+0000
                            sts:
                              conf: RJCT
                            cxlDtls:
                              - txInfAndSts:
                                  cxlStsId: 568R9
                                  orgnlGrpInf:
                                    orgnlMsgId: SCTORD156820190620000000000001
                                    orgnlMsgNmId: pacs.008.001.02
                                  orgnlInstrId: a5fbae19e3d24522963ad60d018f2e49
                                  orgnlEndToEndId: 7456b0bb2c1a4209b87b4636995c5d08
                                  orgnlTxId: '1002'
                                  txCxlSts: RJCR
                                  cxlStsRsnInf:
                                    - orgtr:
                                        id:
                                          orgId:
                                            bicorBEI: TESTXXXXXXX
                                      rsn:
                                        cd: AGNT
                                  orgnlTxRef:
                                    intrBkSttlmAmt:
                                      value: 4000.5
                                      ccy: EUR
                                    intrBkSttlmDt: 2019-06-19T21:00:00.000+0000
                                    sttlmInf:
                                      sttlmMtd: CLRG
                                      clrSys:
                                        prtry: ACHT1234567890123456789012345678905
                                    pmtTpInf:
                                      svcLvl:
                                        cd: SEPA
                                    rmtInf:
                                      ustrd:
                                        - Pruebas para CECA 1
                                    dbtr:
                                      nm: ENRIQUE ROMERA MARTINEZ DE MIGUEL
                                    dbtrAcct:
                                      id:
                                        iban: ES1011110001087939390799
                                    dbtrAgt:
                                      finInstnId:
                                        bic: TESTXXXXXXX
                                    cdtrAgt:
                                      finInstnId:
                                        bic: TESTXXXXXXX
                                    cdtr:
                                      nm: Beneficioso beneficiario
                                    cdtrAcct:
                                      id:
                                        iban: ES6520950001153279157264
                                  _metadata:
                                    transactionSn: 3
                                    transactionStatus: TO_BE_SENT
                                    returnReason: RJCT
                                    paymentId: poId
                            _metadata:
                              bulkSn: 3
                              direction: O
                              messageId: camt.029.001.03
                              procstatus: RETRIEVED
                              transactions: 1
          '400':
            description: >-
              Bad Request - Validation error occurred. This code will cover
              malformed syntax in request or incorrect data in payload.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  invalidDirection:
                    summary: The provided direction value is not valid
                    description: invalidDirection
                    value:
                      tppMessages:
                        - category: ERROR
                          code: PARAMETER_NOT_SUPPORTED
                          text: 'direction invalid value: example_invalid_direction'
          '500':
            description: Internal Server Error - Internal server error occurred.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PaymentResponse-TPP'
                examples:
                  internalServerError:
                    summary: The request failed due to an internal server error.
                    description: internalServerError
                    value:
                      tppMessages:
                        - category: ERROR
                          code: SERVICE_INVALID
                          text: >-
                            There was an error processing your request. It has
                            been logged (ID a449ea6319107e42).
          '503':
            description: >-
              Service Unavailable - The server is currently unavailable.
              Generally, this is a temporary state.
  components:
    schemas:
      AcceptStatusUpdateOnRecall:
        properties:
          groupHeader:
            $ref: '#/components/schemas/GroupHeaderIncoming'
          transactionInformation:
            $ref: '#/components/schemas/TransactionInformation'
        required:
          - groupHeader
          - transactionInformation
        type: object
      AccountDTO:
        description: Settlement account used when settlement method is INDA/INGA.
        properties:
          currency:
            description: ISO 4217 Alpha 3 currency code.
            maxLength: 3
            minLength: 3
            type: string
          identification:
            $ref: '#/components/schemas/IdentificationDTO'
        required:
          - identification
        type: object
      AccountIdentificationsFilterCriteriaDTO:
        description: Account identification search criteria
        properties:
          field:
            description: >-
              Contains the actual searching fields that can be native (one from
              the provided list)
            enum:
              - SCHEME
              - IBAN
              - IDENTIFICATION
            type: string
          operator:
            description: >-
              EQUALS - checks that 'field' equals to 'value' (strict equals, does
              not support parts or masks)
            enum:
              - EQUALS
              - IN
              - BETWEEN
              - GREATER_THAN
              - LESS_THAN
            type: string
          value:
            description: The value to match the searching criteria
            type: string
        required:
          - field
          - operator
        type: object
      AccountIdentificationsSearchRequestDTO:
        properties:
          filterCriteria:
            description: Account identification search criteria
            items:
              $ref: '#/components/schemas/AccountIdentificationsFilterCriteriaDTO'
            type: array
        required:
          - filterCriteria
        type: object
      AccountIdentificationsSearchResponseDTO:
        properties:
          accountId:
            description: AccountID (Unique and unambiguous identification for the account.)
            type: string
          currency:
            description: Account currency
            type: string
          identification:
            $ref: '#/components/schemas/Identification'
          type:
            description: Account type
            type: string
        required:
          - accountId
          - identification
        type: object
      AccountInternalIdentification:
        description: >-
          Mambu Accounts corresponding to the current IBAN / proprietary
          identification
        properties:
          currency:
            type: string
          id:
            type: string
          type:
            enum:
              - DEPOSIT
              - LOAN
            type: string
        type: object
      AccountMappingResponse:
        properties:
          internalAccounts:
            description: >-
              Mambu Accounts corresponding to the current IBAN / proprietary
              identification
            items:
              $ref: '#/components/schemas/AccountInternalIdentification'
            type: array
          tppMessages:
            description: Messages to the TPP on operational issues.
            items:
              $ref: '#/components/schemas/TPPMessage'
            type: array
        type: object
      AddressDTO:
        properties:
          buildingNumber:
            description: ' The building or street number of the address. Must not exceed 16 characters.'
            maxLength: 16
            minLength: 1
            type: string
          city:
            description: The city of the address. Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
          countryCode:
            description: >-
              Two characters as defined by ISO 3166. For example `DE` for Germany,
              `TZ` for Tanzania.
            maxLength: 2
            minLength: 2
            type: string
          postalCode:
            description: The postal code of the address. Must not exceed 16 characters.
            maxLength: 16
            minLength: 1
            type: string
          street:
            description: The street name of the adress. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
        required:
          - countryCode
        type: object
      Agent:
        description: Financial institution servicing an account for the debtor.
        properties:
          institutionIdentification:
            $ref: '#/components/schemas/InstitutionIdentification'
        required:
          - institutionIdentification
        type: object
      AgentDTO:
        description: >-
          Financial institution servicing an account for the creditor. This field
          is mandatory when proprietary ('other') creditor account identification
          is used.
        properties:
          account:
            $ref: '#/components/schemas/AccountDTO'
          institutionIdentification:
            $ref: '#/components/schemas/InstitutionIdentificationDTO'
        required:
          - institutionIdentification
        type: object
      AmendmentInformationDetailsDTO:
        description: List of mandate elements that have been modified.
        properties:
          originalCreditorSchemeIdentification:
            $ref: '#/components/schemas/OriginalCreditorSchemeIdentificationDTO'
          originalDebtorAccount:
            $ref: '#/components/schemas/AccountDTO'
          originalDebtorAgent:
            $ref: '#/components/schemas/AgentDTO'
          originalMandateIdentification:
            description: >-
              Unique identification, as assigned by the creditor, to unambiguously
              identify the original mandate. Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
        type: object
      AmlPaymentIdentification:
        description: Payment instruction reference.
        properties:
          transactionIdentification:
            description: >-
              Unique identification as assigned by the initiating party to be used
              as transaction identifier.
            type: string
        required:
          - transactionIdentification
        type: object
      AmlResult:
        properties:
          groupHeader:
            $ref: '#/components/schemas/GroupHeader'
          transactions:
            description: List of AML result checks, one per Payment Order.
            items:
              $ref: '#/components/schemas/AmlTransactionResult'
            type: array
        required:
          - groupHeader
          - transactions
        type: object
      AmlTransactionResult:
        description: List of AML result checks, one per Payment Order.
        properties:
          debtorAgent:
            $ref: '#/components/schemas/Agent'
          interbankSettlementDate:
            description: >-
              InterbankSettlementDate from the original instruction in the format
              `YYYY-MM-DD`.
            maxLength: 10
            minLength: 10
            type: string
          paymentIdentification:
            $ref: '#/components/schemas/AmlPaymentIdentification'
          status:
            description: >-
              Actual status of the AML investigation. Must be one of `ACCEPTED`,
              `SUSPENDED`, `REJECTED`, `MANUAL_REDIRECT_EXTERNAL` or
              `MANUAL_REDIRECT_INTERNAL`.
            enum:
              - ACCEPTED
              - SUSPENDED
              - REJECTED
              - MANUAL_REDIRECT_EXTERNAL
              - MANUAL_REDIRECT_INTERNAL
            type: string
        required:
          - debtorAgent
          - interbankSettlementDate
          - paymentIdentification
          - status
        type: object
      AmountDTO:
        properties:
          amount:
            description: >-
              The amount given with fractional digits, where fractions must be
              compliant to the currency definition. Negative amounts are signed by
              minus. The decimal separator is a dot.
            maxLength: 12
            minLength: 1
            type: string
          currency:
            description: ISO 4217 Alpha 3 currency code.
            maxLength: 3
            minLength: 3
            type: string
        required:
          - amount
          - currency
        type: object
      Assignment:
        description: Assignment
        properties:
          creationDateTime:
            description: creation date time
            format: date-time
            type: string
          identification:
            description: camt.027/camt.087 assignment id
            type: string
        type: object
      CancellationDetails:
        properties:
          additionalInformation:
            description: >-
              Further details on the cancellation request reason. The order must
              be as defined in the SEPA guideline. The prefixes will be added
              automatically. First occurrence will be added to the first
              (mandatory) entry of additional information. When denying a recall,
              if you do not want to add extra information to the mandatory
              occurrence, please provide an empty string. For Legal additional
              information, second and third occurrence will be added on the second
              and third additional information.
            items:
              description: >-
                Further details on the cancellation request reason. The order must
                be as defined in the SEPA guideline. The prefixes will be added
                automatically. First occurrence will be added to the first
                (mandatory) entry of additional information. When denying a
                recall, if you do not want to add extra information to the
                mandatory occurrence, please provide an empty string. For Legal
                additional information, second and third occurrence will be added
                on the second and third additional information.
              type: string
            type: array
          originalRecallReasonAdditionalInformation:
            description: >-
              Further details on the cancellation reason which can be used when
              the recall rejection reason was AC03 for a recall made by the
              originator or FRAD for a recall made by the financial institution.
              The prefixes will be added automatically. Up to 10 occurrences are
              allowed.
            items:
              description: >-
                Further details on the cancellation reason which can be used when
                the recall rejection reason was AC03 for a recall made by the
                originator or FRAD for a recall made by the financial institution.
                The prefixes will be added automatically. Up to 10 occurrences are
                allowed.
              type: string
            type: array
          rejectionReason:
            description: >-
              Reason for the cancellation status. Only ARDT, AC04, AM04, NOAS,
              NOOR, CUST, LEGL, AGNT are allowed.
            enum:
              - ARDT
              - AC04
              - AM04
              - NOAS
              - NOOR
              - CUST
              - LEGL
              - AGNT
            type: string
        required:
          - rejectionReason
        type: object
      CollectionDTO:
        properties:
          creditorAccount:
            $ref: '#/components/schemas/AccountDTO'
          creditorAddress:
            $ref: '#/components/schemas/AddressDTO'
          creditorAgent:
            $ref: '#/components/schemas/AgentDTO'
          creditorIdentification:
            $ref: '#/components/schemas/PartyIdentificationDTO'
          creditorName:
            description: >-
              The Party whose account is credited with the payment. Must not
              exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          creditorSchemeIdentification:
            $ref: '#/components/schemas/CreditorSchemeIdentificationDTO'
          debtorAccount:
            $ref: '#/components/schemas/AccountDTO'
          debtorAddress:
            $ref: '#/components/schemas/AddressDTO'
          debtorAgent:
            $ref: '#/components/schemas/AgentDTO'
          debtorIdentification:
            $ref: '#/components/schemas/PartyIdentificationDTO'
          debtorName:
            description: The full name of the debtor. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          instructedAmount:
            $ref: '#/components/schemas/AmountDTO'
          localInstrument:
            description: >-
              User community specific instrument. Used to specify a local
              instrument, local clearing option and/or further qualify the service
              or service level. For example, whether a Direct Debit uses the
              business to customer `CORE`, business to business `B2B` ruleset or
              whether a Credit Transfer is of type Instant `INST`.
            type: string
          mandateRelatedInformation:
            $ref: '#/components/schemas/MandateDTO'
          paymentIdentification:
            $ref: '#/components/schemas/PaymentIdentificationDTO'
          paymentTypeInformation:
            $ref: '#/components/schemas/PaymentTypeInformationDTO'
          purposeCode:
            description: >-
              The PurposeCode value or a similar explanation is not added to the
              payer’s Electronic account statement. This value can be shown on
              both the payers and the beneficiary’s on the Camt.053 account
              statement. Purpose codes can be taken from an external list, for
              example the [ISO 20022 External Code
              Set](https://www.iso20022.org/catalogue-messages/additional-content-messages/external-code-sets).
            maxLength: 4
            minLength: 4
            type: string
          remittanceInformationStructured:
            $ref: '#/components/schemas/RemittanceDTO'
          remittanceInformationUnstructured:
            description: >-
              Payment details. Free text, one occurrence (max 140 characters).

              Payment reason (according to current recurrent payment standard) can
              be given in this element.
            maxLength: 140
            minLength: 1
            type: string
          requestedExecutionDate:
            description: >-
              Optional field for recording the date of the transfer. For SEPA
              Credit Transfers only the current date can be provided. Payments can
              not be backdated or scheduled for the future.
            maxLength: 10
            minLength: 10
            type: string
          requestedExecutionTime:
            description: >-
              Optional field for recording the date and time of the payment
              initiation. For SEPACredit Transfers, only the current date and time
              can be provided. Payments can not be backdated or scheduled for the
              future.
            maxLength: 35
            minLength: 17
            type: string
          serviceLevel:
            description: >-
              Agreement under which or rules under which the transaction should be
              processed. Must be `SEPA` for SEPA Credit Transfers and Direct
              Debits.
            type: string
          ultimateCreditor:
            description: >-
              Party which is the ultimate beneficiary of the payment. For example,
              the payment can be credited to an account of a financing company,
              with the ultimate beneficiary being the customer of the financing
              company. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          ultimateDebtor:
            description: >-
              The Party that originally ordered goods or services and to whom the
              seller has sent the invoice. Ultimate Debtor can be used when the
              acceptor of the invoice is different than the payer. Must not exceed
              70 characters.
            maxLength: 70
            minLength: 1
            type: string
        required:
          - creditorAccount
          - creditorName
          - creditorSchemeIdentification
          - debtorAccount
          - debtorName
          - instructedAmount
          - mandateRelatedInformation
          - paymentTypeInformation
        type: object
      CollectionResponse:
        properties:
          collectionId:
            description: >-
              Resource identification of the generated payment initiation
              resource.
            type: string
          tppMessages:
            description: Messages to the TPP on operational issues.
            items:
              $ref: '#/components/schemas/TPPMessage'
            type: array
          transactionFeeIndicator:
            description: >-
              If set to `true`, the transaction will involve additional costs or
              fees.
            type: boolean
          transactionStatus:
            description: >-
              PSD2 transaction status codes:<ul><li>ACSC: Settlement on the
              debtor’s account has been completed.<br> <b>Usage</b>: this can be
              used by the first agent to report to the debtor that the transaction
              has been completed.<br> <b>Warning</b>: this status is provided for
              reporting techincal transaction status, not for financial
              information. It can only be used after bilateral
              agreement.</li><li>ACSP: All preceding checks such as technical
              validation and customer profile were successful. The payment
              initiation has been accepted for execution.</li><li>ACTC:
              Authentication, syntactical and semantical validation are
              successful.</li><li>CPVP: The previous technical validation was
              successful. The customer profile validation has started. Only used
              for Anti Money Laundering flows.</li><li>RCVD: Payment initiation
              has been received by the receiving agent.</li><li>PDNG: Payment
              initiation, or an individual transaction included in the payment
              initiation is pending. Further checks and status updates will be
              performed.</li><li>RJCT: Payment initiation, or an individual
              transaction included in the payment initiation has been
              rejected.</li></ul>
            enum:
              - ACSC
              - ACSP
              - ACTC
              - CPVP
              - RCVD
              - PDNG
              - RJCT
            type: string
        required:
          - collectionId
          - transactionStatus
        type: object
      CreateAccountMapping:
        properties:
          identification:
            $ref: '#/components/schemas/Identification'
        required:
          - identification
        type: object
      CreateAccountMappings:
        properties:
          accountIds:
            description: >-
              IDs of the Mambu Accounts which will be correlated to the IBAN or
              proprietary identification. The association will be made on account
              currency.
            items:
              description: >-
                IDs of the Mambu Accounts which will be correlated to the IBAN or
                proprietary identification. The association will be made on
                account currency.
              type: string
            type: array
          identification:
            $ref: '#/components/schemas/Identification'
        required:
          - accountIds
          - identification
        type: object
      CreateBlockingRule:
        properties:
          creditorMandate:
            $ref: '#/components/schemas/CreditorMandateDTO'
          product:
            description: >-
              Payment Product to which this rule applies. For now, blocking rules
              can be applied to `SEPA_DIRECT_DEBIT` only
            type: string
        required:
          - product
        type: object
      CreditorMandateDTO:
        description: >-
          Collection mandate identification for deleting a rule applying to a
          specific mandate.
        properties:
          creditorSchemeIdentification:
            $ref: '#/components/schemas/CreditorSchemeIdentificationDTO'
          mandateRelatedInformation:
            $ref: '#/components/schemas/MandateRelatedInformationDTO'
        required:
          - creditorSchemeIdentification
          - mandateRelatedInformation
        type: object
      CreditorSchemeIdentification:
        properties:
          identification:
            description: Object containing the identifier.
            properties:
              privateIdentification:
                description: Unique and unambiguous identification of a person, eg, passport.
                example: ABC123
                type: string
            required:
              - privateIdentification
            type: object
      CreditorSchemeIdentificationDTO:
        description: Credit party that signs the mandate.
        properties:
          identification:
            $ref: '#/components/schemas/IdentificationDTO'
        required:
          - identification
        type: object
      DeleteBlockingRule:
        properties:
          creditorMandate:
            $ref: '#/components/schemas/CreditorMandateDTO'
          product:
            description: >-
              Payment product to remove blocking rules from. Must be
              `SEPA_DIRECT_DEBIT`.
            type: string
        required:
          - product
        type: object
      FailedPaymentResponse:
        properties:
          tppMessages:
            description: Messages to the TPP on operational issues.
            items:
              $ref: '#/components/schemas/TPPMessage'
            type: array
        required:
          - tppMessages
        type: object
      FilterCriteria:
        properties:
          field:
            type: string
          operator:
            type: string
          value:
            type: string
        required:
          - field
          - operator
          - value
        type: object
      FinancialInstitutionPaymentDTO:
        properties:
          categoryPurposeCode:
            description: >-
              Specifies the high level purpose of the payment based on a set of
              pre-defined categories.
            maxLength: 4
            minLength: 1
            type: string
          creditor:
            $ref: '#/components/schemas/AgentDTO'
          creditorAccount:
            $ref: '#/components/schemas/AccountDTO'
          creditorAgent:
            $ref: '#/components/schemas/AgentDTO'
          debtor:
            $ref: '#/components/schemas/AgentDTO'
          debtorAccount:
            $ref: '#/components/schemas/AccountDTO'
          debtorAgent:
            $ref: '#/components/schemas/AgentDTO'
          instructedAmount:
            $ref: '#/components/schemas/AmountDTO'
          intermediaryAgent1:
            $ref: '#/components/schemas/AgentDTO'
          intermediaryAgent2:
            $ref: '#/components/schemas/AgentDTO'
          intermediaryAgent3:
            $ref: '#/components/schemas/AgentDTO'
          paymentIdentification:
            $ref: '#/components/schemas/Iso20022PaymentIdentificationDTO'
          purposeCode:
            description: >-
              The PurposeCode value or a similar explanation is not added to the
              payer’s Electronic account statement. This value can be shown on
              both the payers and the beneficiary’s on the Camt.053 account
              statement. Purpose codes can be taken from an external list, for
              example the [ISO 20022 External Code
              Set](https://www.iso20022.org/catalogue-messages/additional-content-messages/external-code-sets).
            maxLength: 4
            minLength: 4
            type: string
          remittanceInformationStructured:
            $ref: '#/components/schemas/RemittanceDTO'
          remittanceInformationUnstructured:
            description: >-
              Payment details. Free text, one occurrence (max 140 characters).

              Payment reason (according to current recurrent payment standard) can
              be given in this element.
            maxLength: 140
            minLength: 1
            type: string
          requestedExecutionDate:
            description: >-
              Optional field for recording the date of the transfer. Payments can
              not be backdated or scheduled for the future.
            maxLength: 10
            minLength: 10
            type: string
          scheme:
            description: Specifies payment scheme for processing.
            type: string
          settlementInformation:
            $ref: '#/components/schemas/SettlementInformationDTO'
          ultimateCreditor:
            description: >-
              Party which is the ultimate beneficiary of the payment. For example,
              the payment can be credited to an account of a financing company,
              with the ultimate beneficiary being the customer of the financing
              company. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          ultimateDebtor:
            description: >-
              The Party that originally ordered goods or services and to whom the
              seller has sent the invoice. Ultimate Debtor can be used when the
              acceptor of the invoice is different than the payer. Must not exceed
              70 characters.
            maxLength: 70
            minLength: 1
            type: string
        required:
          - creditor
          - debtor
          - instructedAmount
          - scheme
          - settlementInformation
        type: object
      GroupHeader:
        description: GroupHeader information from the original instruction.
        properties:
          messageIdentification:
            description: Message Identification from the original instruction.
            type: string
        required:
          - messageIdentification
        type: object
      GroupHeaderIncoming:
        description: >-
          Set of characteristics shared by all individual transactions included in
          the Request for Status Update on Recall message
        properties:
          creationDateTime:
            description: >-
              Date and time at which the inquiry message was created. Accepted
              format: yyyy-MM-ddTHH:mm:ss
            type: string
          instructingAgent:
            description: >-
              Agent that is instructed by the previous party in the chain to carry
              out the (set of) instruction(s).
            type: string
          messageIdentification:
            description: Message identification to identify the inquiry message
            type: string
        required:
          - creationDateTime
          - instructingAgent
          - messageIdentification
        type: object
      Identification:
        description: Identification
        properties:
          currency:
            description: ISO 4217 Alpha 3 currency code.
            maxLength: 3
            minLength: 3
            type: string
          iban:
            description: >-
              ISO 13616 International Bank Account Number (IBAN) - identifier used
              internationally by financial institutions to uniquely identify the
              account of a customer.
            maxLength: 34
            minLength: 15
            type: string
          other:
            $ref: '#/components/schemas/Other'
        type: object
      Identification-IBAN:
        properties:
          iban:
            description: >-
              ISO 13616 International Bank Account Number (IBAN) - identifier used
              internationally by financial institutions to uniquely identify the
              account of a customer.
            maxLength: 34
            minLength: 15
            type: string
        type: object
      IdentificationDTO:
        description: Unique and unambiguous identification for the account.
        properties:
          iban:
            description: >-
              International Bank Account Number (IBAN) - identifier used
              internationally by financial institutions to uniquely identify the
              account of a customer. Must be between 15 and 34 characters.
            maxLength: 34
            minLength: 15
            type: string
          other:
            $ref: '#/components/schemas/OtherDTO'
        type: object
      IdentificationsToMask:
        properties:
          identifications:
            items:
              $ref: '#/components/schemas/Identification-IBAN'
            type: array
        required:
          - identifications
        type: object
      IncomingMessageResponse:
        properties:
          messageId:
            description: Resource identification of the incoming message
            type: string
          messageType:
            description: URN namespace of the incoming message
            type: string
        required:
          - messageId
          - messageType
        type: object
      InitiationPaymentDTO:
        properties:
          creditorAccount:
            $ref: '#/components/schemas/AccountDTO'
          creditorAddress:
            $ref: '#/components/schemas/AddressDTO'
          creditorAgent:
            $ref: '#/components/schemas/AgentDTO'
          creditorIdentification:
            $ref: '#/components/schemas/PartyIdentificationDTO'
          creditorName:
            description: >-
              The Party whose account is credited with the payment. Must not
              exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          debtorAccount:
            $ref: '#/components/schemas/AccountDTO'
          debtorAddress:
            $ref: '#/components/schemas/AddressDTO'
          debtorAgent:
            $ref: '#/components/schemas/AgentDTO'
          debtorIdentification:
            $ref: '#/components/schemas/PartyIdentificationDTO'
          debtorName:
            description: The full name of the debtor. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          instructedAmount:
            $ref: '#/components/schemas/AmountDTO'
          localInstrument:
            description: >-
              User community specific instrument. Used to specify a local
              instrument, local clearing option and/or further qualify the service
              or service level. For example, whether a Direct Debit uses the
              business to customer `CORE`, business to business `B2B` ruleset or
              whether a Credit Transfer is of type Instant `INST`.
            type: string
          paymentIdentification:
            $ref: '#/components/schemas/PaymentIdentificationDTO'
          purposeCode:
            description: >-
              The PurposeCode value or a similar explanation is not added to the
              payer’s Electronic account statement. This value can be shown on
              both the payers and the beneficiary’s on the Camt.053 account
              statement. Purpose codes can be taken from an external list, for
              example the [ISO 20022 External Code
              Set](https://www.iso20022.org/catalogue-messages/additional-content-messages/external-code-sets).
            maxLength: 4
            minLength: 4
            type: string
          remittanceInformationStructured:
            $ref: '#/components/schemas/RemittanceDTO'
          remittanceInformationUnstructured:
            description: >-
              Payment details. Free text, one occurrence (max 140 characters).

              Payment reason (according to current recurrent payment standard) can
              be given in this element.
            maxLength: 140
            minLength: 1
            type: string
          requestedExecutionDate:
            description: >-
              Optional field for recording the date of the transfer. For SEPA
              Credit Transfers only the current date can be provided. Payments can
              not be backdated or scheduled for the future.
            maxLength: 10
            minLength: 10
            type: string
          requestedExecutionTime:
            description: >-
              Optional field for recording the date and time of the payment
              initiation. For SEPACredit Transfers, only the current date and time
              can be provided. Payments can not be backdated or scheduled for the
              future.
            maxLength: 35
            minLength: 17
            type: string
          serviceLevel:
            description: >-
              Agreement under which or rules under which the transaction should be
              processed. Must be `SEPA` for SEPA Credit Transfers and Direct
              Debits.
            type: string
          ultimateCreditor:
            description: >-
              Party which is the ultimate beneficiary of the payment. For example,
              the payment can be credited to an account of a financing company,
              with the ultimate beneficiary being the customer of the financing
              company. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          ultimateDebtor:
            description: >-
              The Party that originally ordered goods or services and to whom the
              seller has sent the invoice. Ultimate Debtor can be used when the
              acceptor of the invoice is different than the payer. Must not exceed
              70 characters.
            maxLength: 70
            minLength: 1
            type: string
        required:
          - creditorAccount
          - creditorName
          - debtorAccount
          - debtorName
          - instructedAmount
        type: object
      InstantPaymentIdentification:
        description: Payment instruction reference.
        properties:
          acceptanceDateTime:
            description: >-
              AcceptanceDateTime from the original instruction; must be in the
              same format as it was sent in the original instruction.
            type: string
          transactionIdentification:
            description: >-
              Unique identification as assigned by the initiating party to be used
              as transaction identifier.
            type: string
        required:
          - acceptanceDateTime
          - transactionIdentification
        type: object
      InstantPaymentSettlement:
        properties:
          groupHeader:
            $ref: '#/components/schemas/GroupHeader'
          transaction:
            $ref: '#/components/schemas/InstantTransaction'
        required:
          - groupHeader
          - transaction
        type: object
      InstantTransaction:
        description: Original transaction information.
        properties:
          debtorAgent:
            $ref: '#/components/schemas/Agent'
          paymentIdentification:
            $ref: '#/components/schemas/InstantPaymentIdentification'
        required:
          - debtorAgent
          - paymentIdentification
        type: object
      InstitutionIdentification:
        description: >-
          Unique and unambiguous identification of a financial institution, as
          assigned under an internationally recognised identification scheme.
        properties:
          bicfi:
            description: >-
              ISO 9362 Business identifier code (BIC) - code allocated to a
              financial institution. Must be between 8 and 11 characters.
            maxLength: 11
            minLength: 8
            type: string
        required:
          - bicfi
        type: object
      InstitutionIdentificationDTO:
        description: >-
          Unique and unambiguous identification of a financial institution, as
          assigned under an internationally recognised identification scheme.
        properties:
          bicfi:
            description: >-
              ISO 9362 Business identifier code (BIC) - code allocated to a
              financial institution. Must be between 8 and 11 characters.
            maxLength: 11
            minLength: 8
            type: string
        required:
          - bicfi
        type: object
      Iso20022PaymentDTO:
        properties:
          categoryPurposeCode:
            description: >-
              Specifies the high level purpose of the payment based on a set of
              pre-defined categories.
            maxLength: 4
            minLength: 1
            type: string
          creditorAccount:
            $ref: '#/components/schemas/AccountDTO'
          creditorAddress:
            $ref: '#/components/schemas/AddressDTO'
          creditorAgent:
            $ref: '#/components/schemas/AgentDTO'
          creditorIdentification:
            $ref: '#/components/schemas/PartyIdentificationDTO'
          creditorName:
            description: >-
              The Party whose account is credited with the payment. Must not
              exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          debtorAccount:
            $ref: '#/components/schemas/AccountDTO'
          debtorAddress:
            $ref: '#/components/schemas/AddressDTO'
          debtorAgent:
            $ref: '#/components/schemas/AgentDTO'
          debtorIdentification:
            $ref: '#/components/schemas/PartyIdentificationDTO'
          debtorName:
            description: The full name of the debtor. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          instructedAmount:
            $ref: '#/components/schemas/AmountDTO'
          localInstrument:
            description: >-
              User community specific instrument. Used to specify a local
              instrument, local clearing option and/or further qualify the service
              or service level. For example, whether a Direct Debit uses the
              business to customer `CORE`, business to business `B2B` ruleset or
              whether a Credit Transfer is of type Instant `INST`.
            type: string
          paymentIdentification:
            $ref: '#/components/schemas/Iso20022PaymentIdentificationDTO'
          purposeCode:
            description: >-
              The PurposeCode value or a similar explanation is not added to the
              payer’s Electronic account statement. This value can be shown on
              both the payers and the beneficiary’s on the Camt.053 account
              statement. Purpose codes can be taken from an external list, for
              example the [ISO 20022 External Code
              Set](https://www.iso20022.org/catalogue-messages/additional-content-messages/external-code-sets).
            maxLength: 4
            minLength: 4
            type: string
          remittanceInformationStructured:
            $ref: '#/components/schemas/RemittanceDTO'
          remittanceInformationUnstructured:
            description: >-
              Payment details. Free text, one occurrence (max 140 characters).

              Payment reason (according to current recurrent payment standard) can
              be given in this element.
            maxLength: 140
            minLength: 1
            type: string
          requestedExecutionDate:
            description: >-
              Optional field for recording the date of the transfer. For SEPA
              Credit Transfers only the current date can be provided. Payments can
              not be backdated or scheduled for the future.
            maxLength: 10
            minLength: 10
            type: string
          requestedExecutionTime:
            description: >-
              Optional field for recording the date and time of the payment
              initiation. For SEPACredit Transfers, only the current date and time
              can be provided. Payments can not be backdated or scheduled for the
              future.
            maxLength: 35
            minLength: 17
            type: string
          scheme:
            description: Specifies payment scheme for processing.
            type: string
          serviceLevel:
            description: >-
              Agreement under which or rules under which the transaction should be
              processed. Must be `SEPA` for SEPA Credit Transfers and Direct
              Debits.
            type: string
          settlementInformation:
            $ref: '#/components/schemas/SettlementInformationDTO'
          ultimateCreditor:
            description: >-
              Party which is the ultimate beneficiary of the payment. For example,
              the payment can be credited to an account of a financing company,
              with the ultimate beneficiary being the customer of the financing
              company. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          ultimateDebtor:
            description: >-
              The Party that originally ordered goods or services and to whom the
              seller has sent the invoice. Ultimate Debtor can be used when the
              acceptor of the invoice is different than the payer. Must not exceed
              70 characters.
            maxLength: 70
            minLength: 1
            type: string
        required:
          - creditorAccount
          - creditorName
          - debtorAccount
          - debtorName
          - instructedAmount
          - scheme
          - settlementInformation
        type: object
      Iso20022PaymentIdentificationDTO:
        properties:
          endToEndIdentification:
            description: >-
              Unique identification assigned by the payer to identify the
              transaction. This identification will be returned to the payer and
              passed on to the beneficiary. Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
          transactionIdentification:
            description: >-
              Unique identification as assigned by the initiating party to be used
              as transaction identifier. If left empty, Mambu transaction id will
              be used. Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
          uetr:
            description: >-
              Universally unique identifier to provide an end-to-end reference of
              a payment transaction.
            maxLength: 36
            minLength: 36
            type: string
        type: object
      LogRequest:
        properties:
          log:
            maxLength: 300
            minLength: 1
            type: string
        required:
          - log
        type: object
      MandateDTO:
        description: >-
          Set of elements used to provide further details of the direct debit
          mandate signed between the creditor and the debtor.
        properties:
          amendmentInformationDetails:
            $ref: '#/components/schemas/AmendmentInformationDetailsDTO'
          dateOfSignature:
            description: >-
              Date on which the direct debit mandate has been signed by the debtor
              in the format `YYYY-MM-DD`.
            type: string
          mandateIdentification:
            description: >-
              Unique identification, as assigned by the creditor, to unambiguously
              identify the mandate.
            type: string
        required:
          - dateOfSignature
          - mandateIdentification
        type: object
      MandateRelatedInformationDTO:
        properties:
          mandateIdentification:
            description: >-
              Unique identification, as assigned by the creditor, to unambiguously
              identify the collection mandate.
            type: string
        required:
          - mandateIdentification
        type: object
      Message:
        description: List of SEPA instructions.
        type: object
      OriginalCamt056Data:
        properties:
          cancellationIdentification:
            description: Cancellation identification.
            type: string
          groupHeader:
            $ref: '#/components/schemas/GroupHeader'
          historicCancellationRequest:
            description: Original camt.056.001.01 message body XML for historical requests.
            type: string
        required:
          - cancellationIdentification
        type: object
      OriginalCreditorSchemeIdentificationDTO:
        description: Original creditor scheme identification that has been modified.
        properties:
          identification:
            $ref: '#/components/schemas/IdentificationDTO'
          name:
            description: Name of the creditor. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
        type: object
      OriginalInquiryData:
        properties:
          assignment:
            $ref: '#/components/schemas/Assignment'
          caseIdentification:
            description: camt.027/camt.087 case id
            type: string
          historicClaimRequest:
            description: Optional historic camt.087 or camt.027 xml
            type: string
          messageTypeName:
            description: messageTypeName
            enum:
              - PACS_002_001_03
              - PACS_002_001_10
              - PACS_002_001_12
              - PACS_003_001_02
              - PACS_003_001_08
              - PACS_004_001_02
              - PACS_004_001_09
              - PACS_004_001_11
              - PACS_007_001_02
              - PACS_007_001_09
              - PACS_008_001_02
              - PACS_008_001_08
              - PACS_008_001_10
              - PACS_028_001_01
              - PACS_028_001_03
              - CAMT_027_001_06
              - CAMT_027_001_07
              - CAMT_029_001_03
              - CAMT_029_001_08
              - CAMT_029_001_09
              - CAMT_029_001_11
              - CAMT_056_001_01
              - CAMT_056_001_08
              - CAMT_056_001_10
              - CAMT_087_001_05
              - CAMT_087_001_06
              - SIC_PACS_008_001_08
              - SIC_PACS_004_001_09
              - SIC_PACS_002_001_10
              - MT_103
              - MT_103_RETURN
              - UNKNOWN
            type: string
        required:
          - caseIdentification
          - messageTypeName
        type: object
      OriginalPacs008Data:
        properties:
          claimedValueDate:
            description: Claimed value-date for change.
            format: date
            type: string
          groupHeader:
            $ref: '#/components/schemas/Pacs008GroupHeader'
          historicCreditTransferRequest:
            description: Original pacs.008 message body XML for historical requests.
            type: string
          paymentIdentification:
            $ref: '#/components/schemas/PaymentIdentification'
        required:
          - paymentIdentification
        type: object
      Other:
        description: >-
          Unique identification of an account, as assigned by the account
          servicer, using other identification scheme.
        properties:
          identification:
            description: Identification assigned by an institution.
            maxLength: 34
            minLength: 1
            type: string
          scheme:
            description: Name of the identification scheme.
            maxLength: 35
            minLength: 1
            type: string
        required:
          - identification
          - scheme
        type: object
      OtherDTO:
        description: >-
          Unique identification of an account, as assigned by the account
          servicer, using any other identification scheme.
        properties:
          identification:
            description: >-
              Identification assigned by an institution. Must not exceed 34
              characters.
            maxLength: 34
            minLength: 1
            type: string
          scheme:
            description: >-
              Name or code of the identification scheme. Must not exceed 35
              characters.
            maxLength: 35
            minLength: 1
            type: string
        required:
          - identification
          - scheme
        type: object
      Pacs008GroupHeader:
        description: Original pacs.008 group header information.
        properties:
          messageIdentification:
            description: Original message identification.
            type: string
          settlementDate:
            description: Original settlement date.
            format: date
            type: string
        required:
          - messageIdentification
        type: object
      PartyIdentificationDTO:
        description: Beneficiary’s identification.
        properties:
          code:
            description: >-
              A four-letter code specifying the type of identification being used.
              For valid codes an external catalogue should be consulted such as
              the one provided in the [ISO 20022 External Code
              Sets](https://www.iso20022.org/catalogue-messages/additional-content-messages/external-code-sets).
            maxLength: 4
            minLength: 1
            type: string
          issuer:
            description: >-
              The official body who provided the identification. Must not exceed
              35 characters.
            maxLength: 35
            minLength: 1
            type: string
          privateIdentification:
            description: >-
              Unique and unambiguous identification of a person, eg, passport.
              Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
          proprietary:
            description: >-
              A proprietary type of identification for the party to the
              transaction. Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
        required:
          - privateIdentification
        type: object
      PaymentDTO:
        description: Payment details for standing order
        properties:
          creditorAccount:
            $ref: '#/components/schemas/AccountDTO'
          creditorName:
            description: >-
              The Party whose account is credited with the payment. Must not
              exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          debtorAccount:
            $ref: '#/components/schemas/AccountDTO'
          debtorName:
            description: The full name of the debtor. Must not exceed 70 characters.
            maxLength: 70
            minLength: 1
            type: string
          instructedAmount:
            $ref: '#/components/schemas/AmountDTO'
          remittanceInformationUnstructured:
            description: >-
              Payment details. Free text, one occurrence (max 140 characters).

              Payment reason (according to current recurrent payment standard) can
              be given in this element.
            maxLength: 140
            minLength: 1
            type: string
          scheme:
            description: Specifies payment scheme for processing.
            type: string
          settlementInformation:
            $ref: '#/components/schemas/SettlementInformationDTO'
        required:
          - creditorAccount
          - creditorName
          - debtorAccount
          - debtorName
          - instructedAmount
        type: object
      PaymentDetails:
        properties:
          transactionStatus:
            description: >-
              PSD2 transaction status codes:<ul><li>ACSC: Settlement on the
              debtor’s account has been completed.<br> <b>Usage</b>: this can be
              used by the first agent to report to the debtor that the transaction
              has been completed.<br> <b>Warning</b>: this status is provided for
              reporting techincal transaction status, not for financial
              information. It can only be used after bilateral
              agreement.</li><li>ACSP: All preceding checks such as technical
              validation and customer profile were successful. The payment
              initiation has been accepted for execution.</li><li>ACTC:
              Authentication, syntactical and semantical validation are
              successful.</li><li>RCVD: Payment initiation has been received by
              the receiving agent.</li><li>PDNG: Payment initiation, or an
              individual transaction included in the payment initiation is
              pending. Further checks and status updates will be
              performed.</li><li>RJCT: Payment initiation, or an individual
              transaction included in the payment initiation has been
              rejected.</li></ul>
            enum:
              - ACSC
              - ACSP
              - ACTC
              - RCVD
              - PDNG
              - RJCT
            type: string
      PaymentIdentification:
        description: Payment identification.
        properties:
          transactionIdentification:
            description: Original transaction identification.
            type: string
        type: object
      PaymentIdentificationDTO:
        description: Payment instruction reference.
        properties:
          endToEndIdentification:
            description: >-
              Unique identification assigned by the payer to identify the
              transaction. This identification will be returned to the payer and
              passed on to the beneficiary. Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
          transactionIdentification:
            description: >-
              Unique identification as assigned by the initiating party to be used
              as transaction identifier. If left empty, Mambu transaction id will
              be used. Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
        type: object
      PaymentResponse:
        properties:
          paymentId:
            description: >-
              Resource identification of the generated payment initiation
              resource.
            type: string
          tppMessages:
            description: Messages to the TPP on operational issues.
            items:
              $ref: '#/components/schemas/TPPMessage'
            type: array
          transactionFeeIndicator:
            description: >-
              If value is `true`, the transaction will involve additional
              transaction costs or fees.
            type: boolean
          transactionStatus:
            description: 'RCVD: Payment initiation has been received by the receiving agent.'
            enum:
              - RCVD
            type: string
        required:
          - paymentId
          - transactionStatus
        type: object
      PaymentResponse-TPP:
        properties:
          tppMessages:
            description: Messages to the TPP on operational issues.
            items:
              $ref: '#/components/schemas/TPPMessage'
            type: array
        type: object
      PaymentTypeInformationDTO:
        description: Set of elements used to further specify the type of transaction.
        properties:
          sequenceType:
            description: >-
              Identifies the direct debit sequence, such as first, recurrent,
              final or one-off (`FRST`, `RCUR`, `FNAL`, `OOFF`).
            type: string
        required:
          - sequenceType
        type: object
      PrivateIdentificationDTO:
        description: Unique and unambiguous identification of a party.
        properties:
          privateIdentification:
            description: >-
              Unique and unambiguous identification of a person, eg, passport.
              Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
        required:
          - privateIdentification
        type: object
      Recall:
        properties:
          customerRecallReasonCode:
            description: >-
              Customer reason for outgoing payment recall, as defined in the SEPA
              guideline
            enum:
              - AM09
              - AC03
            type: string
          recallReasonCode:
            description: Reason for outgoing payment recall, as defined in the SEPA guideline
            enum:
              - FRAD
              - TECH
              - CUST
              - DUPL
            type: string
        required:
          - recallReasonCode
        type: object
      Refund:
        properties:
          reasonCode:
            description: Reason for an interbank Refund, as defined in the SEPA guideline
            enum:
              - MD01
              - MD06
            type: string
        required:
          - reasonCode
        type: object
      RejectStatusUpdateOnRecall:
        properties:
          cancellationDetails:
            $ref: '#/components/schemas/CancellationDetails'
          groupHeader:
            $ref: '#/components/schemas/GroupHeaderIncoming'
          transactionInformation:
            $ref: '#/components/schemas/TransactionInformation'
        required:
          - cancellationDetails
          - groupHeader
          - transactionInformation
        type: object
      RemittanceDTO:
        description: >-
          Payment details. Structured message. Generally, these fields are used to
          provide invoice or creditor reference information. References should
          conform to ISO 11649, international standard of reference information.
        properties:
          reference:
            description: >-
              The actual reference. Must not exceed 35 characters. If providing a
              reference number, the `referenceType` should also be provided.
            maxLength: 35
            minLength: 1
            type: string
          referenceIssuer:
            description: >-
              The entity which created or generated the reference. Must not exceed
              35 characters.
            maxLength: 35
            minLength: 1
            type: string
          referenceType:
            description: The type of reference provided. Must not exceed 35 characters.
            maxLength: 35
            minLength: 1
            type: string
        required:
          - reference
        type: object
      ResendAmlFilter:
        properties:
          category:
            description: Message Category. Supported values are SEPA_CT, SEPA_DD or TGT.
            enum:
              - SEPA_CT
              - SEPA_DD
              - TGT
            type: string
          direction:
            description: >-
              Message Direction. Supported values are I (incoming) or O
              (outgoing).
            enum:
              - I
              - O
            type: string
          instructingAgent:
            description: >-
              Agent that instructs the next party in the chain to carry out the
              (set of) instruction(s).
            type: string
          interbankSettlementDate:
            description: >-
              Date on which the amount of money ceases to be available to the
              agent that owes it and when the amount of money becomes available to
              the agent to which it is due. Accepted format: yyyy-MM-dd
            type: string
          messageId:
            description: Incoming message identification.
            type: string
        required:
          - direction
        type: object
      RetryPolicyDTO:
        description: Failing standing orders retry policy
        properties:
          retryCount:
            description: Specifies how many times the failing standing order will be retried
            format: int32
            type: integer
        type: object
      Reverse:
        properties:
          reasonCode:
            description: Reason for an interbank Reversal, as defined in the SEPA guideline
            enum:
              - AM05
              - MS02
              - MS03
            type: string
        required:
          - reasonCode
        type: object
      SepaMessageFilter:
        properties:
          dateFrom:
            description: >-
              Start date from which the messages should be filtered. Accepted
              format: yyyy-MM-dd
            type: string
          dateTo:
            description: >-
              End date up until which the messages should be filtered. Accepted
              format: yyyy-MM-dd
            type: string
          direction:
            description: Message Direction. Supported values are I (incoming) or O (outgoing)
            type: string
          limit:
            description: >-
              Limit of the number of objects returned by the server. Defaults to
              20.
            format: int32
            maximum: 100
            minimum: 1
            type: integer
          messageId:
            description: Message ID, representing the GrpHdr>>MsgId field of the message
            type: string
          messageType:
            description: >-
              Message type. Accepted values are pacs.008.001.02, pacs.004.001.02,
              pacs.003.001.02, camt.056.001.01, camt.029.001.03
            type: string
          network:
            description: >-
              Network for which the instructions should be received. SEPA is the
              only value allowed
            type: string
          offset:
            description: Offset from which the results should be provided. Defaults to 0.
            format: int32
            minimum: 0
            type: integer
          paymentId:
            description: Payment ID, id provided when creating a new payment
            type: string
          transactionsLimit:
            description: >-
              Limit of the number of transactions returned by the server. Defaults
              to 10. If the transactionsLimit is 0 only message headers will be
              returned. If the transactionsLimit or transactionsOffset is bigger
              than 0 then the messageId parameter has to be used as transactions
              pagination in only available for one message.
            format: int32
            minimum: 0
            type: integer
          transactionsOffset:
            description: >-
              Offset from which the transactions should be provided. Defaults to
              0. If the transactionsLimit or transactionsOffset is bigger than 0
              then the messageId parameter has to be used as transactions
              pagination in only available for one message.
            format: int32
            minimum: 0
            type: integer
        required:
          - direction
        type: object
      SepaMessages:
        properties:
          instructions:
            description: List of SEPA instructions.
            items:
              $ref: '#/components/schemas/Message'
            type: array
          tppMessages:
            description: Messages to the TPP on operational issues.
            items:
              $ref: '#/components/schemas/TPPMessage'
            type: array
        type: object
      SettlementInformationDTO:
        description: >-
          Specifies the details on how the settlement of the transaction(s)
          between the instructing agent and the instructed agent is completed.
        properties:
          clearingSystem:
            description: Clearing system when settlement method is CLRG.
            type: string
          settlementAccount:
            $ref: '#/components/schemas/AccountDTO'
          settlementMethod:
            description: >-
              Method used to settle the payment: INDA (instructed agent), INGA
              (instructing agent), CLRG (clearing system)
            type: string
        required:
          - settlementMethod
        type: object
      SkipStatusUpdateOnRecall:
        properties:
          groupHeader:
            $ref: '#/components/schemas/GroupHeaderIncoming'
          transactionInformation:
            $ref: '#/components/schemas/StatusRequestIdentification'
        required:
          - groupHeader
          - transactionInformation
        type: object
      StandingOrderCreateResponse:
        properties:
          id:
            description: Standing order id
            type: string
        type: object
      StandingOrderDTO:
        properties:
          endDate:
            description: Standing order end date
            format: date
            type: string
          frequency:
            description: Standing order frequency
            enum:
              - DAILY, WEEKLY, MONTHLY
            type: string
          ownerId:
            description: Standing order owner id
            maxLength: 36
            minLength: 1
            type: string
          payment:
            $ref: '#/components/schemas/PaymentDTO'
          retryPolicy:
            $ref: '#/components/schemas/RetryPolicyDTO'
          startDate:
            description: Standing order start date
            format: date
            type: string
        required:
          - frequency
          - ownerId
          - payment
          - retryPolicy
          - startDate
        type: object
      StandingOrderExecutionResponse:
        properties:
          creationDate:
            description: Entry creation date and time
            format: date-time
            type: string
          failReason:
            description: Holds short failure description
            enum:
              - INSUFFICIENT_FUNDS(401)
              - ACCOUNT_INACTIVE(407)
              - OTHER(-1)
            type: string
          paymentOrderId:
            description: Payment order id
            type: string
          requestedExecuteOn:
            description: Date and time at which payment is initiated
            format: date-time
            type: string
          standingOrderId:
            description: Standing order id
            type: string
          status:
            description: Status of payment execution
            enum:
              - RUNNING
              - COMPLETED
              - FAILED
            type: string
          type:
            description: Execution type
            enum:
              - REGULAR
              - RETRY
            type: string
        type: object
      StandingOrderGetResponse:
        properties:
          creationDateTime:
            description: Standing order creation date and time
            format: date-time
            type: string
          endDate:
            description: Standing order end date
            format: date
            type: string
          frequency:
            description: Standing order frequency
            enum:
              - DAILY, WEEKLY, MONTHLY
            type: string
          id:
            description: Standing order id
            type: string
          lastExecution:
            description: Standing order's last payment execution date
            format: date
            type: string
          nextExecution:
            description: Standing order's next payment execution date
            format: date
            type: string
          ownerId:
            description: Standing order owner id
            type: string
          payment:
            $ref: '#/components/schemas/PaymentDTO'
          paymentsCount:
            description: Standing order's count of payments executed so far
            format: int32
            type: integer
          retryCount:
            description: Standing order's retry count setting
            format: int32
            type: integer
          startDate:
            description: Standing order start date
            format: date
            type: string
          status:
            description: Standing order status
            enum:
              - ACTIVE
              - SUSPENDED
              - CANCELED
              - WITHDRAWN
            type: string
          suspendDateFrom:
            description: Standing order suspend start date
            format: date
            type: string
          suspendDateTo:
            description: Standing order suspend end date (inclusive)
            format: date
            type: string
        type: object
      StandingOrderSearchRequest:
        properties:
          filterCriteria:
            items:
              $ref: '#/components/schemas/FilterCriteria'
            maxItems: 2
            minItems: 1
            type: array
          limit:
            format: int32
            maximum: 500
            minimum: 1
            type: integer
          offset:
            format: int32
            maximum: 2147483647
            minimum: 0
            type: integer
        required:
          - filterCriteria
        type: object
      StandingOrderSearchResponse:
        properties:
          creationDateTime:
            description: Standing order creation date and time
            format: date-time
            type: string
          endDate:
            description: Standing order end date
            format: date
            type: string
          frequency:
            description: Standing order frequency
            enum:
              - DAILY, WEEKLY, MONTHLY
            type: string
          id:
            description: Standing order id
            type: string
          ownerId:
            description: Standing order owner id
            type: string
          payment:
            $ref: '#/components/schemas/PaymentDTO'
          retryCount:
            description: Standing order's retry count setting
            format: int32
            type: integer
          startDate:
            description: Standing order start date
            format: date
            type: string
          status:
            description: Standing order status
            enum:
              - ACTIVE
              - SUSPENDED
              - CANCELED
              - WITHDRAWN
            type: string
          suspendDateFrom:
            description: Standing order suspend start date
            format: date
            type: string
          suspendDateTo:
            description: Standing order suspend end date (inclusive)
            format: date
            type: string
        type: object
      StandingOrderSuspendDTO:
        properties:
          endDate:
            description: Suspend standing order till date (inclusive)
            format: date
            type: string
          id:
            description: Standing order id
            maxLength: 36
            minLength: 1
            type: string
          startDate:
            description: Suspend standing order from date
            format: date
            type: string
        required:
          - endDate
          - id
        type: object
      StatusRequestIdentification:
        description: Information concerning the Request for Status Update on Recall message
        properties:
          statusRequestIdentification:
            description: >-
              Unique identification, as assigned by an instructing party for an
              instructed party, to identify the status request
            type: string
        required:
          - statusRequestIdentification
        type: object
      TPPMessage:
        description: Messages to the TPP on operational issues.
        properties:
          category:
            description: Category designates the message severity.
            enum:
              - ERROR
              - WARN
            type: string
          code:
            description: >-
              Message error
              codes:<ul><li>ACCOUNT_ALREADY_MAPPED_TO_THE_SPECIFIED_IDENTIFICATION:
              This identification is already mapped to the specified Mambu
              Account.</li><li>FEATURE_NOT_ENABLED: The request failed due to
              disabled feature.</li><li>FORMAT_ERROR: Format of certain request
              fields are not matching the API requirements. An explicit path to
              the corresponding field might be added in the return
              message.</li><li>INVALID_MESSAGE_TYPE: The request failed due to
              invalid message type.</li><li>INVALID_REQUEST_BODY: The request
              failed due to invalid request
              body.</li><li>INVALID_TRANSACTION_STATE: The request failed due to
              invalid transaction state.</li><li>INVALID_TRANSACTION_STATUS: The
              request failed due to invalid transaction
              status.</li><li>ORIGINAL_MESSAGE_ALREADY_REPLIED: The associated
              message already has a
              response.</li><li>ORIGINAL_MESSAGE_PENDING_REPLY: The associated
              message has no response.</li><li>PARAMETER_NOT_SUPPORTED: The
              parameter is not supported by the API.</li><li>PAYMENT_FAILED: The
              payment initiation POST request failed during the initial
              process.</li><li>NOT_FOUND: The request failed due to not found
              message.</li><li>SERVICE_INVALID: The addressed service is not valid
              for the addressed resources or the submitted data.</li></ul>
            enum:
              - ACCOUNT_ALREADY_MAPPED_TO_THE_SPECIFIED_IDENTIFICATION
              - FEATURE_NOT_ENABLED
              - FORMAT_ERROR
              - INVALID_MESSAGE_TYPE
              - INVALID_REQUEST_BODY
              - INVALID_TRANSACTION_STATE
              - INVALID_TRANSACTION_STATUS
              - ORIGINAL_MESSAGE_ALREADY_REPLIED
              - ORIGINAL_MESSAGE_PENDING_REPLY
              - PARAMETER_NOT_SUPPORTED
              - PAYMENT_FAILED
              - SERVICE_INVALID
              - NOT_FOUND
              - RESOURCE_UNKNOWN
            type: string
          path:
            type: string
          text:
            description: Additional explaining text.
            maxLength: 512
            minLength: 1
            type: string
        required:
          - category
          - code
        type: object
      TppMessagesResponse:
        properties:
          tppMessages:
            description: Messages to the TPP on operational issues.
            items:
              $ref: '#/components/schemas/TPPMessage'
            type: array
        required:
          - tppMessages
        type: object
      TransactionInformation:
        description: >-
          Information concerning the original transaction, to which the Request
          for Status Update on Recall message refers
        properties:
          originalInstructionIdentification:
            description: >-
              Unique identification, as assigned by the original instructing party
              for the original instructed party, to unambiguously identify the
              original instruction.
            type: string
          originalMessageIdentification:
            description: >-
              Point to point reference assigned by the original instructing party
              to identify the original group of individual transactions
            type: string
          statusRequestIdentification:
            description: >-
              Unique identification, as assigned by an instructing party for an
              instructed party, to identify the status request
            type: string
        required:
          - originalInstructionIdentification
          - originalMessageIdentification
          - statusRequestIdentification
        type: object
  tags:
    - name: AML
      description: >
        If you are using an external service to check payments as part of your
        Anti Money Laundering obligations, these endpoints receive responses which
        will lead to unblocking funds and transferring them to the recipient
        account in the case of an all clear or returning funds to the payer in
        cases where there a compliance issue has been identified.


        For more general information on AML flows, including how the necessary
        suspense accounting should be set up in Mambu, please refer to the [AML
        and Suspense
        Accounts](https://support.mambu.com/docs/aml-suspense-accounting) section
        of our User Guide.
    - name: External Account Representation
      description: >-
        The External Account Representation (EAR) endpoints are used to associate
        IBANs with Mambu account IDs so that payments made using the Mambu Payment
        Gateway are routed to the correct accounts.


        An IBAN can be mapped to multiple accounts but can only be associated to
        one account per currency, so, for example, the same IBAN can be mapped to
        one underlying Mambu account using EUR, another using GBP and another
        using CHF, but not to two accounts both in EUR denomination.


        <aside class='notice'><strong>Please Note</strong><br>There is a short
        delay for newly created accounts to be synced with the Mambu Payment
        Gateway. This means that requests to the EAR endpoints may fail with an
        <code>ACCOUNT_NOT_FOUND</code> error if made immediately following account
        creation in Mambu. We recommend implementing a retry mechanism with
        exponential backoff and low value for maximum number of retries if such an
        error is received for an account which has just been created.</aside>
    - name: Incoming Messages
      description: >
        This endpoint is the main entry point to the Mambu Payment Gateway for
        external systems.


        For more information on the types of messages accepted by this endpoint,
        please refer to the [supported
        flows](https://support.mambu.com/docs/payment-gateway-introduction#supported-flows)
        section of the introduction to the Mambu Payment Gateway article in our
        User Guide.


        <aside class="note">

        <strong>Please note</strong>

        <p>

        As this endpoint may be exposed to external systems, we strongly recommend
        using a separate API key for each service calling this API. This is an
        industry best practice and makes debugging easier, it also allows you to
        rotate or invalidate keys for a particular service in cases of system
        error or during security incidents.

        </p>

        </aside>
    - name: SEPA Credit Transfers
      description: >
        These endpoints are used for making and receiving SEPA credit transfers
        through the Mambu Payment Gateway.


        For more information on supported messages, flows and technical
        information, including examples of generated XML messages and how the
        fields map to these API requests, please refer to the [SEPA Credit
        Transfer](https://support.mambu.com/docs/sepa-credit-transfers) section of
        our User Guide.
    - name: SEPA Credit Transfer Inquiries
      description: >
        These APIs allow you to submit inquiries for SEPA payments including for
        cases where the customer claims to have not received the funds, the value
        date was not correctly recorded or to request a status update for payments
        which have been cancelled.


        For more information on the types of inquiry supported and how to submit
        and respond to inquiries via the Mambu Payment Gateway UI, please refer to
        the relevant section of our User Guide, such as the [SEPA credit transfer
        inquiries](https://support.mambu.com/docs/sct-inquiries) article for SEPA
        credit transfers.
    - name: SEPA Direct Debit
      description: >
        SEPA Direct Debit Payments are one time or recurring payments made using
        the Single European Payment Area scheme for transactions made in Euros
        between accounts at banks within the SEPA area, which includes all EU
        countries as well as other territories such as Liechtenstein, Switzerland,
        the United Kingdom, Andorra and Nordic countries.


        Mambu supports both the Core SEPA rulebook for individuals and the B2B
        scheme for companies. For more information on supported messages, flows
        and technical information, please refer to the [SEPA Direct
        Debit](https://support.mambu.com/docs/sepa-direct-debit) section of our
        user guide.
    - name: Search Messages
      description: >
        Use this endpoint to search for SEPA Credit Transfer and Direct Debit
        messages received by the Mambu Payment Gateway.
    - name: Settings
      description: >
        These endpoints allow you to configure settings for the Mambu Payment
        Gateway such as setting callback URLs which will be notified on certain
        actions.
  servers:
    - url: https://TENANT_NAME.mambu.com/api/v1
konfigCliVersion: 1.38.37
