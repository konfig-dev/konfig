publishJson:
  company: Megaapi
  serviceName: false
  sdkName: megaapi-{language}-sdk
  clientName: Megaapi
  metaDescription: >-
    Est√° precisando de uma API para integrar o sistema da empresa em que voc√™
    trabalha ao WhatsApp?

    A MEGAAPI √© a melhor api whatsapp do Brasil.

    Utilize a nossa API no seu sistema para enviar cat√°logos de produtos,
    cobran√ßas autom√°ticas, agendamento de consultas, enviar pesquisas de
    satisfa√ß√£o e outras in√∫meras feautures para voc√™ escolher a que encaixa no
    perfil da sua empresa.

    Integre seu sistema agora mesmo no Whatsapp

    Api muito simples e f√°cil de utilizar

    üéß Suporte Nacional

    üí∞ Pagamento Nacional e Internacional
  apiStatusUrls: inherit
  homepage: mega-api.app.br/
  developerDocumentation: apistart01.megaapi.com.br/docs/
  categories:
    - api
    - messaging
    - whatsapp
    - communication
rawSpecString: |
  openapi: 3.0.3
  info:
    version: '6.1'
    title: Documentation MegaAPI
    description: This is a sample documentation for a new API.
    contact:
      name: MegaAPI
      url: https://mega-api.app.br
  components:
    securitySchemes:
      bearer:
        type: http
        scheme: bearer
        bearerFormat: JWT
        description: Your admin token
    schemas:
      MediaMessageKeys:
        type: object
        properties:
          mediaKey:
            type: string
            example: ''
          directPath:
            type: string
            example: ''
          url:
            type: string
            example: ''
          mimetype:
            type: string
            example: ''
          messageType:
            type: string
            example: ''
      ConfigWebhookSchema:
        type: object
        properties:
          webhookUrl:
            type: string
            example: ''
          webhookEnabled:
            type: boolean
            example: true
      TextMessage:
        type: object
        properties:
          to:
            type: string
            example: ''
          text:
            type: string
            example: ''
      MediaUrlMessage:
        type: object
        properties:
          to:
            type: string
            example: ''
          url:
            type: string
            example: ''
          fileName:
            type: string
            example: ''
          type:
            type: string
            example: ''
          caption:
            type: string
            example: ''
          gifPlayback:
            type: boolean
            example: false
          mimeType:
            type: string
            example: ''
      MediaMessageBase64:
        type: object
        properties:
          to:
            type: string
            example: ''
          base64:
            type: string
            example: ''
          fileName:
            type: string
            example: ''
          type:
            type: string
            example: ''
          caption:
            type: string
            example: ''
          gifPlayback:
            type: boolean
            example: false
          mimeType:
            type: string
            example: ''
      LocationMessage:
        type: object
        properties:
          to:
            type: string
            example: ''
          address:
            type: string
            example: ''
          caption:
            type: string
            example: ''
          latitude:
            type: number
            example: ''
          longitude:
            type: number
            example: ''
          url:
            type: string
            example: ''
      LinkPreview:
        type: object
        properties:
          to:
            type: string
            example: ''
          textWithLink:
            type: string
            example: ''
      SendListMessageData:
        type: object
        properties:
          to:
            type: string
            example: ''
          buttonText:
            type: string
            example: ''
          text:
            type: string
            example: ''
          title:
            type: string
            example: ''
          description:
            type: string
            example: ''
          sections:
            type: array
            items:
              $ref: '#/components/schemas/ListSection'
      ListSection:
        type: object
        properties:
          title:
            type: string
            example: ''
          rows:
            type: array
            items:
              $ref: '#/components/schemas/ListRow'
      ListRow:
        type: object
        properties:
          title:
            type: string
            example: ''
          description:
            type: string
            example: ''
          rowId:
            type: string
            example: ''
      SendVCardData:
        type: object
        properties:
          to:
            type: string
            example: ''
          vcard:
            $ref: '#/components/schemas/ContactData'
      ContactData:
        type: object
        properties:
          fullName:
            type: string
            example: ''
          displayName:
            type: string
            example: ''
          organization:
            type: string
            example: ''
          phoneNumber:
            type: string
            example: ''
      ForwardMessage:
        type: object
        properties:
          to:
            type: string
            example: ''
          key:
            type: object
            example: ''
          message:
            type: object
            example: ''
      QuoteMessage:
        type: object
        properties:
          to:
            type: string
            example: ''
          text:
            type: string
            example: ''
          key:
            type: object
            example: ''
          message:
            type: object
            example: ''
      DeleteMessageAndChat:
        type: object
        properties:
          to:
            type: string
            example: ''
          key:
            type: object
            example: ''
          messageTimestamp:
            type: number
            example: 0
      LastMessageClearFromMe:
        type: object
        properties:
          id:
            type: string
            example: ''
          timestamp:
            type: number
            example: 0
      CreateGroupData:
        type: object
        properties:
          group_name:
            type: string
            example: ''
          participants:
            type: array
            items:
              type: string
            example:
              - ''
      GroupData:
        type: object
        properties:
          jid:
            type: string
            example: ''
          participants:
            type: array
            items:
              type: string
            example:
              - ''
  paths:
    /rest/instance/{instance_key}:
      get:
        responses:
          '200':
            description: Success
        operationId: Instance - statusInstance
        summary: Get an status of instance
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        tags:
          - InstanceController
    /rest/instance/downloadMediaMessage/{instance_key}:
      post:
        responses:
          '200':
            description: Success
        operationId: Instance - downloadMediaMessage
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageKeys:
                    $ref: '#/components/schemas/MediaMessageKeys'
                type: object
        tags:
          - InstanceController
    /rest/instance/getProfilePicture/{instance_key}:
      get:
        responses:
          '200':
            description: Success
        operationId: Instance - getProfilePicture
        summary: Get image from any whatsapp profile
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
          - in: query
            name: to
            required: false
            schema:
              type: string
          - description: icon/image
            in: query
            name: type
            required: false
            schema:
              type: string
        tags:
          - InstanceController
    /rest/instance/isOnWhatsApp/{instance_key}:
      get:
        responses:
          '200':
            description: Success
        operationId: Instance - isOnWhatsApp
        summary: Check if the number exists in whatsapp
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
          - in: query
            name: jid
            required: false
            schema:
              type: string
        tags:
          - InstanceController
    /rest/instance/qrcode/{instance_key}:
      get:
        responses:
          '200':
            description: Success
        operationId: Instance - qrcode
        summary: Get the qrcode
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        tags:
          - InstanceController
    /rest/instance/qrcode_base64/{instance_key}:
      get:
        responses:
          '200':
            description: Success
        operationId: Instance - qrcode_base64
        summary: Get the qrcode in base64 format
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        tags:
          - InstanceController
    /rest/instance/pairingCode/{instance_key}:
      get:
        responses:
          '200':
            description: Success
        operationId: Instance - pairingCode
        summary: Get the pairing code to login
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
          - in: query
            name: phoneNumber
            required: false
            schema:
              type: string
        tags:
          - InstanceController
    /rest/instance/{instance_key}/logout:
      delete:
        responses:
          '200':
            description: Success
        operationId: Instance - logout
        summary: Logout from an instance
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        tags:
          - InstanceController
    /rest/instance/{instance_key}/restart:
      delete:
        responses:
          '200':
            description: Success
        operationId: Instance - restart
        summary: Restart an instance
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        tags:
          - InstanceController
    /rest/webhook/{instance_key}:
      get:
        responses:
          '200':
            description: Success
        operationId: Webhook - statusWebhook
        summary: Get an instance webhook data
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        tags:
          - WebhookController
    /rest/webhook/{instance_key}/configWebhook:
      post:
        responses:
          '200':
            description: Success
        operationId: Webhook - configWebhook
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/ConfigWebhookSchema'
                type: object
        tags:
          - WebhookController
    /rest/sendMessage/{instance_key}/text:
      post:
        responses:
          '200':
            description: Success
        operationId: SendMessage - text
        description: >-
          Note that while sending to single chat, the id should not contain
          @s.whatsapp.net. <br>
             However, while sending to groups, the id should end with @g.us <br>
             
        summary: Send a text message to an WhatsApp User
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/TextMessage'
                type: object
        tags:
          - SendMessageController
    /rest/sendMessage/{instance_key}/mediaUrl:
      post:
        responses:
          '200':
            description: Success
        operationId: SendMessage - mediaUrl
        description: >
          The this endpoint allows you to send a media URL to a user.

          <br> 

          The <strong>url</strong> parameter is the URL of the media to be sent.

          <br>

          The <strong>to</strong> parameter is the phone number of the user to
          send the media to.

          <br>

          The <strong>type</strong> parameter is the type of media to be sent.

          <br>

          The type of media can be one of the following:

          <ul>

          <li><strong>image</strong> - an image</li>

          <li><strong>video</strong> - a video</li>

          <li><strong>audio</strong> - an audio file</li>

          <li><strong>ptt</strong> - an audio(ptt) file</li>

          <li><strong>ptv</strong> - an video(ptv) file</li>

          <li><strong>document</strong> - a document</li>

          </ul>

          <br>

          The <strong>caption</strong> parameter is the caption of the media to be
          sent.

          <br>

          The <strong>mimeType</strong> parameter is the mimeType of the media.
        summary: Send a media message via a URL
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/MediaUrlMessage'
                type: object
        tags:
          - SendMessageController
    /rest/sendMessage/{instance_key}/mediaBase64:
      post:
        responses:
          '200':
            description: Success
        operationId: SendMessage - mediaBase64
        description: >
          The this endpoint allows you to send a media Base64 to a user.

          <br> 

          The <strong>base64</strong> parameter is the Base64 of the media to be
          sent.

          <br>

          The <strong>to</strong> parameter is the phone number of the user to
          send the media to.

          <br>

          The <strong>type</strong> parameter is the type of media to be sent.

          <br>

          The type of media can be one of the following:

          <ul>

          <li><strong>image</strong> - an image</li>

          <li><strong>video</strong> - a video</li>

          <li><strong>audio</strong> - an audio file</li>

          <li><strong>ptt</strong> - an audio(ptt) file</li>

          <li><strong>ptv</strong> - an video(ptv) file</li>

          <li><strong>document</strong> - a document</li>

          </ul>

          <br>

          The <strong>caption</strong> parameter is the caption of the media to be
          sent.

          <br>

          The <strong>mimeType</strong> parameter is the mimeType of the media.
        summary: Send a media message via Base64
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/MediaMessageBase64'
                type: object
        tags:
          - SendMessageController
    /rest/sendMessage/{instance_key}/location:
      post:
        responses:
          '200':
            description: Success
        operationId: SendMessage - location
        summary: Send an location to an WhatsApp User
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/LocationMessage'
                type: object
        tags:
          - SendMessageController
    /rest/sendMessage/{instance_key}/sendLinkPreview:
      post:
        responses:
          '200':
            description: Success
        operationId: SendMessage - sendLinkPreview
        description: Send a message with link preview
        summary: Send a message with link preview
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/LinkPreview'
                type: object
        tags:
          - SendMessageController
    /rest/sendMessage/{instance_key}/listMessage:
      post:
        responses:
          '200':
            description: Success
        operationId: SendMessage - listMessage
        summary: Send an List Message to an User
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/SendListMessageData'
                type: object
        tags:
          - SendMessageController
    /rest/sendMessage/{instance_key}/contactMessage:
      post:
        responses:
          '200':
            description: Success
        operationId: SendMessage - contactMessage
        summary: Send an Vcard message to an User
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/SendVCardData'
                type: object
        tags:
          - SendMessageController
    /rest/sendMessage/{instance_key}/forwardMessage:
      post:
        responses:
          '200':
            description: Success
        operationId: SendMessage - forwardMessage
        summary: Forward message to User
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/ForwardMessage'
                type: object
        tags:
          - SendMessageController
    /rest/sendMessage/{instance_key}/quoteMessage:
      post:
        responses:
          '200':
            description: Success
        operationId: SendMessage - quoteMessage
        summary: Quote message for User
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/QuoteMessage'
                type: object
        tags:
          - SendMessageController
    /rest/chat/{instance_key}/presenceUpdateChat:
      post:
        responses:
          '200':
            description: Success
        operationId: Chat - presenceUpdateChat
        description: >-
          Option:<br><br>"unavailable"<br>"available"<br>"composing"<br>"recording"<br>"paused"
        summary: Change presence for chat
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  to:
                    type: string
                  option:
                    type: string
                type: object
        tags:
          - ChatController
    /rest/chat/{instance_key}/deleteMessage:
      post:
        responses:
          '200':
            description: Success
        operationId: Chat - deleteMessage
        summary: Delete message in chat
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  messageData:
                    $ref: '#/components/schemas/DeleteMessageAndChat'
                type: object
        tags:
          - ChatController
    /rest/chat/{instance_key}/deleteMessageFromMe:
      post:
        responses:
          '200':
            description: Success
        operationId: Chat - deleteMessageFromMe
        summary: Delete message fromMe in chat
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  to:
                    type: string
                  messageData:
                    $ref: '#/components/schemas/LastMessageClearFromMe'
                type: object
        tags:
          - ChatController
    /rest/group/list/{instance_key}:
      get:
        responses:
          '200':
            description: Success
        operationId: Groups - list
        description: List all groups and communitys
        summary: List all groups and communitys
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        tags:
          - GroupController
    /rest/group/{instance_key}/group:
      get:
        responses:
          '200':
            description: Success
        operationId: Groups - groupInfo
        description: ''
        summary: Get a group info
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
          - in: query
            name: jid
            required: false
            schema:
              type: string
        tags:
          - GroupController
    /rest/group/{instance_key}/create:
      post:
        responses:
          '200':
            description: Success
        operationId: Groups - create
        description: ''
        summary: Create a group
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  group_data:
                    $ref: '#/components/schemas/CreateGroupData'
                type: object
        tags:
          - GroupController
    /rest/group/{instance_key}/addParticipants:
      post:
        responses:
          '200':
            description: Success
        operationId: Groups - addParticipants
        description: >-
          Please note that the participants should not contain @s.whatsapp.net
          <br>
        summary: Add participants to a group
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  group_data:
                    $ref: '#/components/schemas/GroupData'
                type: object
        tags:
          - GroupController
    /rest/group/{instance_key}/removeParticipants:
      post:
        responses:
          '200':
            description: Success
        operationId: Groups - removeParticipants
        description: >-
          Please note that the participants should not contain @s.whatsapp.net
          <br>
        summary: Remove participants from group
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
        requestBody:
          required: false
          content:
            application/json:
              schema:
                properties:
                  group_data:
                    $ref: '#/components/schemas/GroupData'
                type: object
        tags:
          - GroupController
    /rest/group/{instance_key}/leaveGroup:
      delete:
        responses:
          '200':
            description: Success
        operationId: Groups - leaveGroup
        description: Leave group
        summary: Leave group
        security:
          - bearer: []
        parameters:
          - in: path
            name: instance_key
            required: true
            schema:
              type: string
          - in: query
            name: jid
            required: false
            schema:
              type: string
        tags:
          - GroupController
  tags:
    - name: InstanceController
      description: Endpoints related to management of instances
    - name: WebhookController
      description: Endpoints related to management of webhook
    - name: SendMessageController
      description: Endpoints related to management of messages
    - name: ChatController
      description: Endpoints related to management of chats
    - name: GroupController
      description: Endpoints related to management of groups
  servers:
    - url: https://apistart01.megaapi.com.br
konfigCliVersion: 1.38.37
