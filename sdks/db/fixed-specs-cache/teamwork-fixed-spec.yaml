publishJson:
  company: Teamwork
  serviceName: false
  sdkName: teamwork-{language}-sdk
  clientName: Teamwork
  metaDescription: >-
    Teamwork.com is the only project management platform built specifically for
    client work. Deliver work on time and on budget, eliminate client chaos, and
    understand profitability, all in one platform.


    Headquartered in Cork, Ireland and founded by a team who have run an agency
    before, Teamwork has more than 20,000 customers around the world with a
    global team of over 350 employees.


    Learn more at teamwork.com.
  apiStatusUrls: false
  homepage: teamwork.com
  developerDocumentation: apidocs.teamwork.com/
  categories:
    - project_management
    - collaboration
rawSpecString: |
  openapi: 3.0.0
  info:
    title: Teamwork API V3
    version: '3.0'
  paths:
    /projects/api/v3/activity/{activityLogId}:
      delete:
        operationId: DELETE_projects_api_v3_activity_{activityLogId}
        parameters:
          - in: path
            name: activityLogId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Deletes an activity item.
        tags:
          - Activity
    /projects/api/v3/allocations/{allocationId}/time.json:
      get:
        description: >-
          Return logged time entries for a specific allocation. Only the time
          entries that

          the logged-in user can access will be returned.
        operationId: GET_projects_api_v3_allocations_{allocationId}_time.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by a starting date
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort order
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - company
                - date
                - dateupdated
                - project
                - task
                - tasklist
                - user
                - description
                - billed
                - billable
                - timespent
              default: date
          - description: filter by invoiced type
            in: query
            name: invoicedType
            schema:
              type: string
              enum:
                - all
                - invoiced
                - noninvoiced
              default: all
          - description: filter by an ending date
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: filter by billable type
            in: query
            name: billableType
            schema:
              type: string
              enum:
                - all
                - billable
                - non-billable
              default: all
          - description: filter by the user who updated the timelog
            in: query
            name: updatedBy
            schema:
              type: integer
          - description: filter by ticket id
            in: query
            name: ticketId
            schema:
              type: integer
          - description: filter by tasklist id
            in: query
            name: tasklistId
            schema:
              type: integer
          - description: filter by task id (deprecated, use taskIds)
            in: query
            name: taskId
            schema:
              type: integer
          - description: filter by project id (deprecated, use projectIds)
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by budget id
            in: query
            name: budgetId
            schema:
              type: integer
          - in: path
            name: allocationId
            required: true
            schema:
              type: integer
          - description: filter by allocation id
            in: query
            name: allocationId
            schema:
              type: integer
          - description: >-
              filter by timelogs that are directly logged against projects and not
              its child tasks
            in: query
            name: unattachedTimelogs
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all task tags
            in: query
            name: matchAllTaskTags
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include totals
            in: query
            name: includeTotals
            schema:
              type: boolean
              default: 'false'
          - description: include permissions
            in: query
            name: includePermissions
            schema:
              type: boolean
              default: 'false'
          - description: include descendants
            in: query
            name: includeDescendants
            schema:
              type: boolean
              default: 'false'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: filter by task tag ids
            in: query
            name: taskTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project company ids (deprecated, use projectCompanyIds)
            in: query
            name: projectsFromCompanyId
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tags
                  - tasks
                  - tasks.parentTasks
                  - tasks.tasklists
                  - tasks.users
                  - users
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timelogs]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dateCreated
                  - minutes
                  - description
                  - timeLogged
                  - billable
                  - deleted
                  - dateDeleted
                  - hasStartTime
                  - dateEdited
                  - deskTicketId
                  - userId
                  - taskId
                  - projectId
                  - loggedByUserId
                  - deletedByUserId
                  - editedByUserId
                  - taskIdPreMove
                  - projectBillingInvoiceId
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.TimelogsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get time entries for a specific allocation
        tags:
          - TimeTracking
    /projects/api/v3/budget/notifications/{notificationId}.json:
      delete:
        operationId: DELETE_projects_api_v3_budget_notifications_{notificationId}.json
        parameters:
          - in: path
            name: notificationId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing notification.
        tags:
          - Budgets
      patch:
        operationId: PATCH_projects_api_v3_budget_notifications_{notificationId}.json
        parameters:
          - in: path
            name: notificationId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notification.ProjectBudgetRequest'
          required: true
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notification.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing notification.
        tags:
          - Budgets
    /projects/api/v3/budgets/:id/tasklists/budgets/bulk/add.json:
      post:
        operationId: POST_projects_api_v3_budgets_:id_tasklists_budgets_bulk_add.json
        requestBody:
          $ref: '#/components/requestBodies/tasklistbudget.BulkAddBudgetRequest'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tasklistbudget.BudgetsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Creates new tasklist budgets
        tags:
          - Budgets
    /projects/api/v3/calendar/events.csv:
      get:
        description: >-
          Generates an agenda report in CSV format containing all the events for
          the

          provided filters.
        operationId: GET_projects_api_v3_calendar_events.csv
        parameters:
          - description: events that happen after this date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: events that happen before this date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: include tasks
            in: query
            name: withTasks
            schema:
              type: boolean
              default: 'false'
          - description: include milestones
            in: query
            name: withMilestones
            schema:
              type: boolean
              default: 'false'
          - description: include events
            in: query
            name: withEvents
            schema:
              type: boolean
              default: 'true'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: should include tags
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'false'
          - description: >-
              when filtering events with targetUserIDs, display only when
              attending the event
            in: query
            name: attendingOnly
            schema:
              type: boolean
              default: 'false'
          - description: filter calendar events to show only the ones in typeIDs
            in: query
            name: typeIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter to show only events for the provided user
            in: query
            name: targetUserIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter to show only events for the provided projects
            in: query
            name: targetProjectIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/csv:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate agenda report in CSV format
        tags:
          - CalendarEvents
    /projects/api/v3/calendar/events.html:
      get:
        description: >-
          Generates an agenda report in HTML format containing all the events for
          the

          provided filters.
        operationId: GET_projects_api_v3_calendar_events.html
        parameters:
          - description: events that happen after this date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: events that happen before this date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: include tasks
            in: query
            name: withTasks
            schema:
              type: boolean
              default: 'false'
          - description: include milestones
            in: query
            name: withMilestones
            schema:
              type: boolean
              default: 'false'
          - description: include events
            in: query
            name: withEvents
            schema:
              type: boolean
              default: 'true'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: should include tags
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'false'
          - description: >-
              when filtering events with targetUserIDs, display only when
              attending the event
            in: query
            name: attendingOnly
            schema:
              type: boolean
              default: 'false'
          - description: filter calendar events to show only the ones in typeIDs
            in: query
            name: typeIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter to show only events for the provided user
            in: query
            name: targetUserIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter to show only events for the provided projects
            in: query
            name: targetProjectIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/html:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate agenda report in HTML format
        tags:
          - CalendarEvents
    /projects/api/v3/calendar/events.pdf:
      get:
        description: >-
          Generates an agenda report in PDF format containing all the events for
          the

          provided filters.
        operationId: GET_projects_api_v3_calendar_events.pdf
        parameters:
          - description: events that happen after this date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: events that happen before this date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: include tasks
            in: query
            name: withTasks
            schema:
              type: boolean
              default: 'false'
          - description: include milestones
            in: query
            name: withMilestones
            schema:
              type: boolean
              default: 'false'
          - description: include events
            in: query
            name: withEvents
            schema:
              type: boolean
              default: 'true'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: should include tags
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'false'
          - description: >-
              when filtering events with targetUserIDs, display only when
              attending the event
            in: query
            name: attendingOnly
            schema:
              type: boolean
              default: 'false'
          - description: filter calendar events to show only the ones in typeIDs
            in: query
            name: typeIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter to show only events for the provided user
            in: query
            name: targetUserIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter to show only events for the provided projects
            in: query
            name: targetProjectIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/pdf:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate agenda report in PDF format
        tags:
          - CalendarEvents
    /projects/api/v3/calendar/events.xlsx:
      get:
        description: >-
          Generates an agenda report in XLSX format containing all the events for
          the

          provided filters.
        operationId: GET_projects_api_v3_calendar_events.xlsx
        parameters:
          - description: events that happen after this date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: events that happen before this date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: include tasks
            in: query
            name: withTasks
            schema:
              type: boolean
              default: 'false'
          - description: include milestones
            in: query
            name: withMilestones
            schema:
              type: boolean
              default: 'false'
          - description: include events
            in: query
            name: withEvents
            schema:
              type: boolean
              default: 'true'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: should include tags
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'false'
          - description: >-
              when filtering events with targetUserIDs, display only when
              attending the event
            in: query
            name: attendingOnly
            schema:
              type: boolean
              default: 'false'
          - description: filter calendar events to show only the ones in typeIDs
            in: query
            name: typeIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter to show only events for the provided user
            in: query
            name: targetUserIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter to show only events for the provided projects
            in: query
            name: targetProjectIDs
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate agenda report in XLSX format
        tags:
          - CalendarEvents
    /projects/api/v3/companies.json:
      get:
        description: >-
          Retrieve all companies for the provided filters.



          On this endpoint you can filter by custom fields. The syntax for the

          query parameter is the following:

              customField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              customField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_companies.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by company name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - company
                - client
              default: company
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - accounts
                - clients
                - collaborators
                - contacts
                - country
                - website
                - email
                - phone
                - fax
                - industry
                - dateadded
                - ownercompany
                - ownername
                - customfield
              default: ownercompany
          - description: filter by first letter of company name
            in: query
            name: firstLetter
            schema:
              type: string
          - description: filter by created after date (deprecated, use createdAfter)
            in: query
            name: createdAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: budget distribution ranges
            in: query
            name: budgetRanges
            schema:
              type: string
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include client managers in the search
            in: query
            name: searchClientManagers
            schema:
              type: boolean
          - description: return unfiltered company initial letter counts
            in: query
            name: returnLetters
            schema:
              type: boolean
              default: 'false'
          - description: only untagged companies
            in: query
            name: onlyUntaggedCompanies
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include untagged companies
            in: query
            name: includeUntaggedCompanies
            schema:
              type: boolean
          - description: include profitability data for each client
            in: query
            name: includeProfitability
            schema:
              type: boolean
              default: 'false'
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include budget distribution data
            in: query
            name: includeBudgetDistribution
            schema:
              type: boolean
              default: 'false'
          - description: include stats of company tasks and projects
            in: query
            name: getStats
            schema:
              type: boolean
              default: 'false'
          - description: parse emojis to unicode
            in: query
            name: getEmoji
            schema:
              type: boolean
              default: 'true'
          - description: include full profile
            in: query
            name: fullProfile
            schema:
              type: boolean
          - description: exclude the owner company
            in: query
            name: excludeOwnerCompany
            schema:
              type: boolean
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - tags
                  - countries
                  - industries
                  - clientmanagedby
                  - companyupdates
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: exclude by company ids
            in: query
            name: excludeIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by client manager user ids
            in: query
            name: clientManagedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/company.CompaniesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all companies.
        tags:
          - Companies
      post:
        description: Create a company.
        operationId: POST_projects_api_v3_companies.json
        requestBody:
          $ref: '#/components/requestBodies/company.Request'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/company.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Create a company.
        tags:
          - Companies
        x-private: true
    /projects/api/v3/companies/time.json:
      get:
        description: >-
          Return all logged time entries for all projects grouped by company ID.

          Only the time entries that the logged-in user can access will be
          returned.
        operationId: GET_projects_api_v3_companies_time.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by a starting date
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort order
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - company
                - date
                - dateupdated
                - project
                - task
                - tasklist
                - user
                - description
                - billed
                - billable
                - timespent
              default: date
          - description: filter by invoiced type
            in: query
            name: invoicedType
            schema:
              type: string
              enum:
                - all
                - invoiced
                - noninvoiced
              default: all
          - description: filter by an ending date
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: filter by billable type
            in: query
            name: billableType
            schema:
              type: string
              enum:
                - all
                - billable
                - non-billable
              default: all
          - description: filter by the user who updated the timelog
            in: query
            name: updatedBy
            schema:
              type: integer
          - description: filter by ticket id
            in: query
            name: ticketId
            schema:
              type: integer
          - description: filter by tasklist id
            in: query
            name: tasklistId
            schema:
              type: integer
          - description: filter by task id (deprecated, use taskIds)
            in: query
            name: taskId
            schema:
              type: integer
          - description: filter by project id (deprecated, use projectIds)
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by budget id
            in: query
            name: budgetId
            schema:
              type: integer
          - description: filter by allocation id
            in: query
            name: allocationId
            schema:
              type: integer
          - description: >-
              filter by timelogs that are directly logged against projects and not
              its child tasks
            in: query
            name: unattachedTimelogs
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all task tags
            in: query
            name: matchAllTaskTags
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include totals
            in: query
            name: includeTotals
            schema:
              type: boolean
              default: 'false'
          - description: include permissions
            in: query
            name: includePermissions
            schema:
              type: boolean
              default: 'false'
          - description: include descendants
            in: query
            name: includeDescendants
            schema:
              type: boolean
              default: 'false'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: filter by task tag ids
            in: query
            name: taskTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project company ids (deprecated, use projectCompanyIds)
            in: query
            name: projectsFromCompanyId
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tags
                  - tasks
                  - tasks.parentTasks
                  - tasks.tasklists
                  - tasks.users
                  - users
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timelogs]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dateCreated
                  - minutes
                  - description
                  - timeLogged
                  - billable
                  - deleted
                  - dateDeleted
                  - hasStartTime
                  - dateEdited
                  - deskTicketId
                  - userId
                  - taskId
                  - projectId
                  - loggedByUserId
                  - deletedByUserId
                  - editedByUserId
                  - taskIdPreMove
                  - projectBillingInvoiceId
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.CompanyTimelogsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all time entries, grouped by company ID
        tags:
          - TimeTracking
    /projects/api/v3/companies/{companyId}.json:
      delete:
        description: Delete a company.
        operationId: DELETE_projects_api_v3_companies_{companyId}.json
        parameters:
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing company.
        tags:
          - Companies
        x-private: true
      get:
        description: Retrieves a company by id.
        operationId: GET_projects_api_v3_companies_{companyId}.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by company name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - company
                - client
              default: company
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - accounts
                - clients
                - collaborators
                - contacts
                - country
                - website
                - email
                - phone
                - fax
                - industry
                - dateadded
                - ownercompany
                - ownername
                - customfield
              default: ownercompany
          - description: filter by first letter of company name
            in: query
            name: firstLetter
            schema:
              type: string
          - description: filter by created after date (deprecated, use createdAfter)
            in: query
            name: createdAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: budget distribution ranges
            in: query
            name: budgetRanges
            schema:
              type: string
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include client managers in the search
            in: query
            name: searchClientManagers
            schema:
              type: boolean
          - description: return unfiltered company initial letter counts
            in: query
            name: returnLetters
            schema:
              type: boolean
              default: 'false'
          - description: only untagged companies
            in: query
            name: onlyUntaggedCompanies
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include untagged companies
            in: query
            name: includeUntaggedCompanies
            schema:
              type: boolean
          - description: include profitability data for each client
            in: query
            name: includeProfitability
            schema:
              type: boolean
              default: 'false'
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include budget distribution data
            in: query
            name: includeBudgetDistribution
            schema:
              type: boolean
              default: 'false'
          - description: include stats of company tasks and projects
            in: query
            name: getStats
            schema:
              type: boolean
              default: 'false'
          - description: parse emojis to unicode
            in: query
            name: getEmoji
            schema:
              type: boolean
              default: 'true'
          - description: include full profile
            in: query
            name: fullProfile
            schema:
              type: boolean
          - description: exclude the owner company
            in: query
            name: excludeOwnerCompany
            schema:
              type: boolean
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - tags
                  - countries
                  - industries
                  - clientmanagedby
                  - companyupdates
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: exclude by company ids
            in: query
            name: excludeIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by client manager user ids
            in: query
            name: clientManagedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/company.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get a specific company.
        tags:
          - Companies
      patch:
        description: Modify the properties of an existing company.
        operationId: PATCH_projects_api_v3_companies_{companyId}.json
        parameters:
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/company.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/company.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing company.
        tags:
          - Companies
        x-private: true
    /projects/api/v3/companies/{companyId}/customfields.json:
      get:
        description: Return all custom field values from a specific company.
        operationId: GET_projects_api_v3_companies_{companyId}_customfields.json
        parameters:
          - description: filter by custom field value
            in: query
            name: searchTerm
            schema:
              type: string
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
          - description: filter by company id
            in: query
            name: companyId
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - customfields
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - description: filter by custom field ids
            in: query
            name: customFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.valuesResponseCompany'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Company custom field values.
        tags:
          - CustomFields
      post:
        description: Add a company custom field value.
        operationId: POST_projects_api_v3_companies_{companyId}_customfields.json
        parameters:
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/value.requestCompany'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.responseCompany'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Add company custom field value.
        tags:
          - CustomFields
    /projects/api/v3/companies/{companyId}/customfields/bulk/delete.json:
      post:
        description: Remove many entries of company custom field values at once.
        operationId: POST_projects_api_v3_companies_{companyId}_customfields_bulk_delete.json
        parameters:
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value.bulkDeleteRequestCompany'
          required: true
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete many company custom fields values at once.
        tags:
          - CustomFields
    /projects/api/v3/companies/{companyId}/customfields/bulk/update.json:
      post:
        description: Edit many entries of company custom field values at once.
        operationId: POST_projects_api_v3_companies_{companyId}_customfields_bulk_update.json
        parameters:
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value.bulkUpdateRequestCompany'
          required: true
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.valuesResponseCompany'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update many company custom field values at once.
        tags:
          - CustomFields
    /projects/api/v3/companies/{companyId}/customfields/{customFieldId}.json:
      delete:
        description: Removes a company custom field value.
        operationId: >-
          DELETE_projects_api_v3_companies_{companyId}_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing company custom field value.
        tags:
          - CustomFields
      get:
        description: Return a specific custom field value from a company.
        operationId: >-
          GET_projects_api_v3_companies_{companyId}_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.responseCompany'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Company custom field value.
        tags:
          - CustomFields
      patch:
        description: Edit a company custom field value.
        operationId: >-
          PATCH_projects_api_v3_companies_{companyId}_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
          - in: path
            name: companyId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/value.requestCompany'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.responseCompany'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing company custom field value.
        tags:
          - CustomFields
    /projects/api/v3/customfields.json:
      get:
        description: Return all custom fields for the provided filters.
        operationId: GET_projects_api_v3_customfields.json
        parameters:
          - description: filter by custom field name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by project statuses
            in: query
            name: projectStatuses
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - project
                - dateCreated
                - dateUpdated
              default: name
          - description: filter by name
            in: query
            name: name
            schema:
              type: string
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only return site-level custom fields
            in: query
            name: onlySiteLevel
            schema:
              type: boolean
              default: 'false'
          - description: only return custom fields for project-level in the response
            in: query
            name: onlyProjectLevel
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include custom fields for site-level in the response
            in: query
            name: includeSiteLevel
            schema:
              type: boolean
              default: 'true'
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - createdBy
                  - updatedBy
                  - deletedBy
                type: string
          - description: filter by custom field ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - description: filter by entities
            in: query
            name: entities
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/customfield.CustomFieldsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all custom fields
        tags:
          - CustomFields
      post:
        description: |-
          Creates a new custom field. The custom field could have a scope at an
          installation-level or at a project-level.
        operationId: POST_projects_api_v3_customfields.json
        requestBody:
          $ref: '#/components/requestBodies/customfield.Request'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/customfield.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Create a new custom field
        tags:
          - CustomFields
    /projects/api/v3/customfields/bulk/delete.json:
      post:
        description: Remove multiple custom fields at once.
        operationId: POST_projects_api_v3_customfields_bulk_delete.json
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customfield.BulkDeleteRequest'
          required: true
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete many custom fields at once
        tags:
          - CustomFields
    /projects/api/v3/customfields/{customFieldId}.json:
      delete:
        description: Removes a custom field.
        operationId: DELETE_projects_api_v3_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing custom field
        tags:
          - CustomFields
      get:
        description: This returns all details about an individual custom field.
        operationId: GET_projects_api_v3_customfields_{customFieldId}.json
        parameters:
          - description: filter by custom field name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by project statuses
            in: query
            name: projectStatuses
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - project
                - dateCreated
                - dateUpdated
              default: name
          - description: filter by name
            in: query
            name: name
            schema:
              type: string
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only return site-level custom fields
            in: query
            name: onlySiteLevel
            schema:
              type: boolean
              default: 'false'
          - description: only return custom fields for project-level in the response
            in: query
            name: onlyProjectLevel
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include custom fields for site-level in the response
            in: query
            name: includeSiteLevel
            schema:
              type: boolean
              default: 'true'
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - createdBy
                  - updatedBy
                  - deletedBy
                type: string
          - description: filter by custom field ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - description: filter by entities
            in: query
            name: entities
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/customfield.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a custom field by id.
        tags:
          - CustomFields
      patch:
        description: Updates an existing custom field.
        operationId: PATCH_projects_api_v3_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/customfield.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/customfield.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing custom field.
        tags:
          - CustomFields
      put:
        description: Updates an existing custom field.
        operationId: PUT_projects_api_v3_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/customfield.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/customfield.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing custom field.
        tags:
          - CustomFields
    /projects/api/v3/dashboards.json:
      get:
        description: >-
          Return all dashboards that the logged-in user can access. Dashboards
          contains

          panels that are used to summarize many activities from the installation.
        operationId: GET_projects_api_v3_dashboards.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - isDefault
                - displayOrder
              default: isDefault
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: parse emoji alias to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - users
                  - dashboardSettings
                  - dashboardPanels
                  - dashboardPanels.settings
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[dashboards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - title
                  - color
                  - description
                  - isDefault
                  - userId
                  - projectId
                  - displayOrder
                  - deleted
                  - dateCreated
                  - dateUpdated
                  - dateDeleted
                  - dashboardPanelIds
                  - dashboardSettingIds
                type: string
          - in: query
            name: fields[dashboardSettings]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dashboardId
                  - name
                  - value
                type: string
          - in: query
            name: fields[dashboardPanels]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dashboardId
                  - name
                  - type
                  - displayOrder
                  - dashboardPanelSettingIds
                type: string
          - in: query
            name: fields[dashboardPanelSettings]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - installationId
                  - dashboardId
                  - dashboardPanelId
                  - name
                  - value
                type: string
          - description: filter by user dashboard ids
            in: query
            name: dashboardIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/dashboard.UserDashboardsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all dashboards
        tags:
          - Dashboards
    /projects/api/v3/features.json:
      get:
        description: Return all features accessible to the current installation.
        operationId: GET_projects_api_v3_features.json
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/priceplan.FeaturesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get installation features
        tags:
          - Features
    /projects/api/v3/files/{fileId}/comments.json:
      get:
        operationId: GET_projects_api_v3_files_{fileId}_comments.json
        parameters:
          - in: path
            name: fileId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/comment.CommentsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a list of comments for a file
        tags:
          - FileComments
    /projects/api/v3/fileversions/{id}/comments.json:
      get:
        operationId: GET_projects_api_v3_fileversions_{id}_comments.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by comment content (like v1 filterText param)
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by published after date
            in: query
            name: publishedStartDate
            schema:
              type: string
              format: date
          - description: filter by published before date
            in: query
            name: publishedEndDate
            schema:
              type: string
              format: date
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - all
                - date
                - project
                - user
                - type
              default: data
          - description: filter by commment status
            in: query
            name: commentStatus
            schema:
              type: string
              enum:
                - all
                - read
                - unread
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - in: path
            name: id
            required: true
            schema:
              type: integer
          - description: use strict html filtering fto content
            in: query
            name: strictHTML
            schema:
              type: boolean
              default: 'false'
          - description: get reactions count
            in: query
            name: getReactionsCount
            schema:
              type: boolean
          - description: filter by user ids
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by users who got notified for the comments
            in: query
            name: notifiedUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - reactions
                  - users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/comment.CommentsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a list of comments for a file version
        tags:
          - FileVersionComments
    /projects/api/v3/forms.json:
      get:
        description: Return a list of all forms.
        operationId: GET_projects_api_v3_forms.json
        parameters:
          - description: query by token state
            in: query
            name: token.state
            schema:
              type: string
              enum:
                - active
                - inactive
          - description: filter by form name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - taskList
                - totalSubmissions
                - dateCreated
                - dateUpdated
              default: dateUpdated
          - description: query by hostObject type
            in: query
            name: hostObject.type
            schema:
              type: string
              enum:
                - projects
          - description: query by form state
            in: query
            name: content.state
            schema:
              type: string
              enum:
                - active
                - deleted
                - draft
                - latest
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by host id
            in: query
            name: hostObject.id
            schema:
              type: integer
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: filter only by project with direct membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - users
                  - tasklists
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[forms]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - confirmationMessage
                  - promptAdditionalSubmissions
                  - allowTeamworkBranding
                  - isShared
                  - state
                  - taskTitleFieldId
                  - token
                  - content
                  - hostObject
                  - installation
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/form.FormsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all forms.
        tags:
          - Forms
      post:
        operationId: POST_projects_api_v3_forms.json
        requestBody:
          $ref: '#/components/requestBodies/form.Request'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/form.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Create a new form.
        tags:
          - Forms
    /projects/api/v3/forms/public/{token}.json:
      get:
        description: This endpoint does not require authentication.
        operationId: GET_projects_api_v3_forms_public_{token}.json
        parameters:
          - description: query by token state
            in: query
            name: token.state
            schema:
              type: string
              enum:
                - active
                - inactive
          - description: filter by form name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - taskList
                - totalSubmissions
                - dateCreated
                - dateUpdated
              default: dateUpdated
          - description: query by hostObject type
            in: query
            name: hostObject.type
            schema:
              type: string
              enum:
                - projects
          - description: query by form state
            in: query
            name: content.state
            schema:
              type: string
              enum:
                - active
                - deleted
                - draft
                - latest
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - in: path
            name: token
            required: true
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by host id
            in: query
            name: hostObject.id
            schema:
              type: integer
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: filter only by project with direct membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - users
                  - tasklists
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[forms]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - confirmationMessage
                  - promptAdditionalSubmissions
                  - allowTeamworkBranding
                  - isShared
                  - state
                  - taskTitleFieldId
                  - token
                  - content
                  - hostObject
                  - installation
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/form.PublicResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a forms via its token.
        tags:
          - FormsPublic
    /projects/api/v3/forms/{formID}/copy.json:
      post:
        operationId: POST_projects_api_v3_forms_{formID}_copy.json
        parameters:
          - in: path
            name: formID
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/form.CopyRequest'
          required: true
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/form.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Copy a form
        tags:
          - FormsPublic
    /projects/api/v3/forms/{formId}.json:
      delete:
        operationId: DELETE_projects_api_v3_forms_{formId}.json
        parameters:
          - in: path
            name: formId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing form.
        tags:
          - Forms
      get:
        operationId: GET_projects_api_v3_forms_{formId}.json
        parameters:
          - in: path
            name: formId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/form.Response'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/form.Response'
          '404':
            description: 404 Not Found (no data)
        summary: Get a specific form.
        tags:
          - Forms
      patch:
        operationId: PATCH_projects_api_v3_forms_{formId}.json
        parameters:
          - in: path
            name: formId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/form.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/form.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing form.
        tags:
          - Forms
    /projects/api/v3/forms/{formId}/draft.json:
      get:
        operationId: GET_projects_api_v3_forms_{formId}_draft.json
        parameters:
          - in: path
            name: formId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/form.Response'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/form.Response'
          '404':
            description: 404 Not Found (no data)
        summary: Get the draft version of a specific form.
        tags:
          - Forms
    /projects/api/v3/importer/stats.json:
      get:
        description: >-
          This endpoint returns info about a set of importers. This includes
          whether

          they are individually running or not, what's their status and a flag to

          represent if any importer is running. The endpoint looks up redis for
          this

          information. Using the parameter resetImporters this information can be

          deleted in redis to reset it.
        operationId: GET_projects_api_v3_importer_stats.json
        parameters:
          - description: reset importers
            in: query
            name: resetImporters
            schema:
              type: boolean
              default: 'false'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/importer.ImportersResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get stats about Importers
        tags:
          - Importers
    /projects/api/v3/latestactivity.json:
      get:
        description: >-
          Lists the latest activity across all projects ordered chronologically.
          When

          you log into Teamwork you will see all the recent activity. This
          corresponds

          to that view in Teamwork. There are parameters you can send in to filter
          your

          results.
        operationId: GET_projects_api_v3_latestactivity.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by start datetime
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: sort by (deprecated, use orderBy)
            in: query
            name: sort
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
          - description: sort by
            in: query
            name: orderBy
            schema:
              type: string
          - description: filter by end datetime
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: filter by project id (deprecated, use projectIds)
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: activity id offset
            in: query
            name: maxId
            schema:
              type: integer
          - description: limit results from previous id
            in: query
            name: catchupFromId
            schema:
              type: integer
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
              default: 'false'
          - description: only projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
          - description: enforce all tag ids must be matched
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: group all activities on comments
            in: query
            name: groupCommentActivityType
            schema:
              type: boolean
          - description: filter by user ids
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - users
                  - companies
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[activities]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dateTime
                  - activityType
                  - latestActivityType
                  - itemId
                  - itemLink
                  - itemType
                  - itemDescription
                  - itemExtraDescription
                  - itemExtraLink
                  - itemPublicInfo
                  - forUserId
                  - forUserName
                  - dueDate
                  - isPrivate
                  - lockdownId
                  - projectId
                  - companyId
                type: string
          - description: filter by activity types
            in: query
            name: activityTypes
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - task
                  - tasklist
                  - project
                  - message
                  - notebook
                  - milestone
                  - like
                  - file
                  - link
                  - billinginvoice
                  - task_comment
                  - milestone_comment
                  - file_comment
                  - link_comment
                  - comment
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/activity.ActivitiesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Latest activity (all projects)
        tags:
          - Activity
    /projects/api/v3/me/timers.json:
      get:
        description: Will get all your running timers or the person you are logged in as.
        operationId: GET_projects_api_v3_me_timers.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: filter by task id
            in: query
            name: taskId
            schema:
              type: integer
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: enforce running timers only
            in: query
            name: runningTimersOnly
            schema:
              type: boolean
              default: 'false'
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - tasks
                  - tasks.parentTasks
                  - tasks.tasklists
                  - users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.TimersResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all your running timers
        tags:
          - TimeTracking
      post:
        description: >-
          Creates a new timer. If there's already a timer running, it will stop
          this timer

          at default.
        operationId: POST_projects_api_v3_me_timers.json
        requestBody:
          $ref: '#/components/requestBodies/timer.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.Response'
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Create a new timer
        tags:
          - TimeTracking
    /projects/api/v3/me/timers/{timerId}.json:
      delete:
        description: Delete an existing timer.
        operationId: DELETE_projects_api_v3_me_timers_{timerId}.json
        parameters:
          - in: path
            name: timerId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timer.DeleteRequest'
          required: true
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete a timer by ID
        tags:
          - TimeTracking
      put:
        description: Edits the fields of a timer.
        operationId: PUT_projects_api_v3_me_timers_{timerId}.json
        parameters:
          - in: path
            name: timerId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/timer.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Edits a timer
        tags:
          - TimeTracking
    /projects/api/v3/me/timers/{timerId}/complete.json:
      put:
        description: >-
          Complete an existing timer. If the timer is currently running, it is
          paused to create

          the timelog entry. When the timelog is created, the timer is deleted.
        operationId: PUT_projects_api_v3_me_timers_{timerId}_complete.json
        parameters:
          - in: path
            name: timerId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.Response'
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Complete a timer by ID
        tags:
          - TimeTracking
    /projects/api/v3/me/timers/{timerId}/pause.json:
      put:
        description: Pause an existing timer.
        operationId: PUT_projects_api_v3_me_timers_{timerId}_pause.json
        parameters:
          - in: path
            name: timerId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Pause a timer by ID
        tags:
          - TimeTracking
    /projects/api/v3/me/timers/{timerId}/resume.json:
      put:
        description: >-
          Resume an existing timer. If other timers are currently running, those
          timers are paused before resuming.
        operationId: PUT_projects_api_v3_me_timers_{timerId}_resume.json
        parameters:
          - in: path
            name: timerId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.Response'
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Resume a timer by ID
        tags:
          - TimeTracking
    /projects/api/v3/me/timers/{timerId}/undelete.json:
      put:
        description: Restore an deleted timer.
        operationId: PUT_projects_api_v3_me_timers_{timerId}_undelete.json
        parameters:
          - in: path
            name: timerId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Restore a deleted timer item.
        tags:
          - TimeTracking
    /projects/api/v3/messages.json:
      get:
        description: Retrieve all messages for the provided filters.
        operationId: GET_projects_api_v3_messages.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by message name and body
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
              enum:
                - normal
                - tasklists-template
                - projects-template
              default: normal
          - description: filter by project statuses
            in: query
            name: projectStatuses
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - createdat
                - updatedat
                - category
                - project
                - createdby
                - unread
              default: ownermessage
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: consider reply dates when using updatedAfter
            in: query
            name: updatedAfterIncludesReplies
            schema:
              type: boolean
          - description: show unread messages only
            in: query
            name: unreadOnly
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include deleted messages
            in: query
            name: includeDeleted
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: parse emojis to unicode
            in: query
            name: getEmoji
            schema:
              type: boolean
              default: 'true'
          - in: query
            name: formatMarkdown
            schema:
              type: boolean
          - description: show archived messages only
            in: query
            name: archivedOnly
            schema:
              type: boolean
          - description: filter by user ids
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by users who got notified for the messages
            in: query
            name: notifiedUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - latestreplies
                  - tags
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[messageReplies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - messageId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/message.MessagesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all messages.
        tags:
          - Messages
    /projects/api/v3/messages/{messageId}.json:
      get:
        description: Retrieves a message by id.
        operationId: GET_projects_api_v3_messages_{messageId}.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by message name and body
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
              enum:
                - normal
                - tasklists-template
                - projects-template
              default: normal
          - description: filter by project statuses
            in: query
            name: projectStatuses
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - createdat
                - updatedat
                - category
                - project
                - createdby
                - unread
              default: ownermessage
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - in: path
            name: messageId
            required: true
            schema:
              type: integer
          - description: consider reply dates when using updatedAfter
            in: query
            name: updatedAfterIncludesReplies
            schema:
              type: boolean
          - description: show unread messages only
            in: query
            name: unreadOnly
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include deleted messages
            in: query
            name: includeDeleted
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: parse emojis to unicode
            in: query
            name: getEmoji
            schema:
              type: boolean
              default: 'true'
          - in: query
            name: formatMarkdown
            schema:
              type: boolean
          - description: show archived messages only
            in: query
            name: archivedOnly
            schema:
              type: boolean
          - description: filter by user ids
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by users who got notified for the messages
            in: query
            name: notifiedUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - latestreplies
                  - tags
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[messageReplies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - messageId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/message.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get a specific message.
        tags:
          - Messages
      patch:
        description: >-
          Update specific fields on a message. If the property `read` is sent with
          the

          value `true` all replies from this message will be marked as read.
        operationId: PATCH_projects_api_v3_messages_{messageId}.json
        parameters:
          - in: path
            name: messageId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message.Request'
          required: true
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Edit a message.
        tags:
          - Messages
        x-private: true
    /projects/api/v3/milestones.json:
      get:
        description: >-
          All milestones are returned on projects that the authenticated user is

          associated with. You can use the provided filters to return only those

          milestones that are incomplete, completed, upcoming or late. All
          milestones

          are returning in this call. This call uses pagination, returning 100

          milestones per page by default.
        operationId: GET_projects_api_v3_milestones.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by milestone name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - calendar
                - agenda
              default: agenda
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - date
                - dateonly
                - name
                - project
                - user
                - dateCreated
                - dateUpdated
              default: date
          - description: filter by due before date (deprecated, use dueBefore)
            in: query
            name: dueBeforeDate
            schema:
              type: string
              format: date
          - description: filter by due before date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter by due after date (deprecated, use dueAfter)
            in: query
            name: dueAfterDate
            schema:
              type: string
              format: date
          - description: filter by due after date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: show private milestones
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: show attached tasklists
            in: query
            name: showAttachedTasklists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: progress
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: filter by projects that the logged-in user is related
            in: query
            name: onlyMyProjects
            schema:
              type: boolean
              default: 'false'
          - description: >-
              only include milestones from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: match all milestone tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include milestones latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include today when milestone status is upcoming
            in: query
            name: includeToday
            schema:
              type: boolean
              default: 'true'
          - description: include team users to the responsible party ids
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include tags in the reports
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: includeProgress
            schema:
              type: boolean
              default: 'false'
          - description: include percentage of tasks completed for all linked tasklists
            in: query
            name: includePercentageComplete
            schema:
              type: boolean
              default: 'false'
          - description: optional to include completed milestones
            in: query
            name: includeCompleted
            schema:
              type: boolean
          - description: include company users to the responsible party ids
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: convert emoji alias to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: count unread comments
            in: query
            name: countUnreadComments
            schema:
              type: boolean
              default: 'false'
          - description: enables the calendar style layout
            in: query
            name: calendar
            schema:
              type: boolean
              default: 'false'
          - description: filter by milestone tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of milestone status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - new
                  - reopened
                  - completed
                  - deleted
                  - pending
                  - incomplete
                  - late
                  - today
                  - upcoming
                type: string
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health (deprecated, use projectHealths)
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - users
                  - completedBy
                  - createdBy
                  - deletedBy
                  - updatedBy
                  - commentFollowers
                  - changeFollowers
                  - tags
                  - tasklists
                  - tasklisttaskstats
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followers' ids
            in: query
            name: followerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by creators' ids
            in: query
            name: creatorIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/milestone.MilestonesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all milestones
        tags:
          - Milestones
    /projects/api/v3/milestones/metrics/deadlines.json:
      get:
        description: >-
          Count the number of milestones on each deadline date. Only the
          milestones

          that the logged-in user can access will be included in the counting.
        operationId: GET_projects_api_v3_milestones_metrics_deadlines.json
        parameters:
          - in: query
            name: startDate
            schema:
              type: string
              format: date
          - in: query
            name: endDate
            schema:
              type: string
              format: date
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/deadline.MilestoneMetricDeadlinesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get milestones by due date in a time range
        tags:
          - Milestones
    /projects/api/v3/milestones/{milestonId}.json:
      get:
        description: This returns all details about an individual milestone.
        operationId: GET_projects_api_v3_milestones_{milestonId}.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by milestone name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - calendar
                - agenda
              default: agenda
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - date
                - dateonly
                - name
                - project
                - user
                - dateCreated
                - dateUpdated
              default: date
          - description: filter by due before date (deprecated, use dueBefore)
            in: query
            name: dueBeforeDate
            schema:
              type: string
              format: date
          - description: filter by due before date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter by due after date (deprecated, use dueAfter)
            in: query
            name: dueAfterDate
            schema:
              type: string
              format: date
          - description: filter by due after date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - in: path
            name: milestonId
            required: true
            schema:
              type: integer
          - description: show private milestones
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: show attached tasklists
            in: query
            name: showAttachedTasklists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: progress
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: filter by projects that the logged-in user is related
            in: query
            name: onlyMyProjects
            schema:
              type: boolean
              default: 'false'
          - description: >-
              only include milestones from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: match all milestone tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include milestones latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include today when milestone status is upcoming
            in: query
            name: includeToday
            schema:
              type: boolean
              default: 'true'
          - description: include team users to the responsible party ids
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include tags in the reports
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: includeProgress
            schema:
              type: boolean
              default: 'false'
          - description: include percentage of tasks completed for all linked tasklists
            in: query
            name: includePercentageComplete
            schema:
              type: boolean
              default: 'false'
          - description: optional to include completed milestones
            in: query
            name: includeCompleted
            schema:
              type: boolean
          - description: include company users to the responsible party ids
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: convert emoji alias to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: count unread comments
            in: query
            name: countUnreadComments
            schema:
              type: boolean
              default: 'false'
          - description: enables the calendar style layout
            in: query
            name: calendar
            schema:
              type: boolean
              default: 'false'
          - description: filter by milestone tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of milestone status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - new
                  - reopened
                  - completed
                  - deleted
                  - pending
                  - incomplete
                  - late
                  - today
                  - upcoming
                type: string
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health (deprecated, use projectHealths)
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - users
                  - completedBy
                  - createdBy
                  - deletedBy
                  - updatedBy
                  - commentFollowers
                  - changeFollowers
                  - tags
                  - tasklists
                  - tasklisttaskstats
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followers' ids
            in: query
            name: followerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by creators' ids
            in: query
            name: creatorIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/milestone.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get a milestone by id.
        tags:
          - Milestones
    /projects/api/v3/milestones/{milestoneId}/comments.json:
      get:
        operationId: GET_projects_api_v3_milestones_{milestoneId}_comments.json
        parameters:
          - in: path
            name: milestoneId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/comment.CommentsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a list of comments for a milestone
        tags:
          - MilestoneComments
    /projects/api/v3/notebooks.json:
      get:
        operationId: GET_projects_api_v3_notebooks.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by notebook name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
              enum:
                - normal
                - tasklists-template
                - projects-template
              default: normal
          - description: filter by project statuses
            in: query
            name: projectStatuses
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - project
                - dateCreated
                - dateUpdated
                - category
              default: dateUpdated
          - description: filter by created after date (deprecated, use createdAfter)
            in: query
            name: createdAfterDate
            schema:
              type: string
              format: date
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by showing only secure notebooks
            in: query
            name: secureOnly
            schema:
              type: boolean
              default: 'false'
          - description: match all notebook tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: filter by showing only locked notebooks
            in: query
            name: lockedOnly
            schema:
              type: boolean
              default: 'false'
          - description: include contents.
            in: query
            name: includeContents
            schema:
              type: boolean
              default: 'true'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: parse emojis to unicode
            in: query
            name: getEmoji
            schema:
              type: boolean
              default: 'true'
          - description: filter by notebook tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - tags
                  - users
                  - notebookCategories
                  - companies
                  - teams
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[notebooks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - contents
                  - type
                  - isPrivate
                  - locked
                  - lockdownId
                  - secureContent
                  - projectId
                  - createdByUserID
                  - updatedByUserID
                  - deletedByUserID
                  - dateUpdated
                  - dateCreated
                  - dateDeleted
                  - deleted
                  - categoryId
                  - notebookVersionID
                  - notebookVersionCreatedDateTime
                  - notebookVersionUpdatedDateTime
                  - latestVersionNo
                  - commentsCount
                  - readCommentsCount
                  - contentHTML
                  - privacy
                  - commentFollowers
                  - changeFollowers
                  - projectNotifyCommentIncludeCreator
                  - tagIds
                type: string
          - in: query
            name: fields[notebookCategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by creators' ids
            in: query
            name: creatorIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by notebook category ids
            in: query
            name: categoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notebook.NotebooksResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a list of notebooks.
        tags:
          - Notebooks
    /projects/api/v3/notebooks/{notebookId}.json:
      delete:
        operationId: DELETE_projects_api_v3_notebooks_{notebookId}.json
        parameters:
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing notebook.
        tags:
          - Notebooks
      get:
        operationId: GET_projects_api_v3_notebooks_{notebookId}.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
              enum:
                - normal
                - tasklists-template
                - projects-template
              default: normal
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
          - description: show deleted notebooks
            in: query
            name: showDeleted
            schema:
              type: boolean
          - description: parse emojis to unicode
            in: query
            name: getEmoji
            schema:
              type: boolean
              default: 'true'
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - tags
                  - users
                  - notebookCategories
                  - companies
                  - teams
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[notebooks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - contents
                  - type
                  - isPrivate
                  - locked
                  - lockdownId
                  - secureContent
                  - projectId
                  - createdByUserID
                  - updatedByUserID
                  - deletedByUserID
                  - dateUpdated
                  - dateCreated
                  - dateDeleted
                  - deleted
                  - categoryId
                  - notebookVersionID
                  - notebookVersionCreatedDateTime
                  - notebookVersionUpdatedDateTime
                  - latestVersionNo
                  - commentsCount
                  - readCommentsCount
                  - contentHTML
                  - privacy
                  - commentFollowers
                  - changeFollowers
                  - projectNotifyCommentIncludeCreator
                  - tagIds
                type: string
          - in: query
            name: fields[notebookCategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notebook.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a specific notebook.
        tags:
          - Notebooks
      patch:
        description: Edits the fields of an existing notebook.
        operationId: PATCH_projects_api_v3_notebooks_{notebookId}.json
        parameters:
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
          - description: parse emojis to unicode
            in: query
            name: getEmoji
            schema:
              type: boolean
              default: 'true'
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - tags
                  - users
                  - notebookCategories
                  - companies
                  - teams
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[notebooks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - contents
                  - type
                  - isPrivate
                  - locked
                  - lockdownId
                  - secureContent
                  - projectId
                  - createdByUserID
                  - updatedByUserID
                  - deletedByUserID
                  - dateUpdated
                  - dateCreated
                  - dateDeleted
                  - deleted
                  - categoryId
                  - notebookVersionID
                  - notebookVersionCreatedDateTime
                  - notebookVersionUpdatedDateTime
                  - latestVersionNo
                  - commentsCount
                  - readCommentsCount
                  - contentHTML
                  - privacy
                  - commentFollowers
                  - changeFollowers
                  - projectNotifyCommentIncludeCreator
                  - tagIds
                type: string
          - in: query
            name: fields[notebookCategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        requestBody:
          $ref: '#/components/requestBodies/notebook.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notebook.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Edits a notebook
        tags:
          - Notebooks
    /projects/api/v3/notebooks/{notebookId}/comments.json:
      get:
        operationId: GET_projects_api_v3_notebooks_{notebookId}_comments.json
        parameters:
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/comment.CommentsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a list of comments for a notebook
        tags:
          - NotebookComments
    /projects/api/v3/notebooks/{notebookId}/compare.json:
      get:
        description: Gets the contents diff between the contents of 2 notebook versions
        operationId: GET_projects_api_v3_notebooks_{notebookId}_compare.json
        parameters:
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notebook.VersionResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Compare 2 notebook versions
        tags:
          - Notebooks
    /projects/api/v3/notebooks/{notebookId}/lock.json:
      put:
        description: Locks a specific notebook.
        operationId: PUT_projects_api_v3_notebooks_{notebookId}_lock.json
        parameters:
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Lock a notebook
        tags:
          - Notebooks
    /projects/api/v3/notebooks/{notebookId}/unlock.json:
      put:
        description: Unlocks a specific notebook.
        operationId: PUT_projects_api_v3_notebooks_{notebookId}_unlock.json
        parameters:
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Unlock a notebook
        tags:
          - Notebooks
    /projects/api/v3/notebooks/{notebookId}/versions.json:
      delete:
        description: Deletes some existing versions of a notebook by version ID.
        operationId: DELETE_projects_api_v3_notebooks_{notebookId}_versions.json
        parameters:
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete notebook versions.
        tags:
          - Notebooks
      get:
        description: Get a list of a notebooks versions.
        operationId: GET_projects_api_v3_notebooks_{notebookId}_versions.json
        parameters:
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notebook.VersionsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get notebook versions
        tags:
          - Notebooks
    /projects/api/v3/notebooks/{notebookId}/versions/{versionId}.json:
      get:
        description: Get a specific notebook version.
        operationId: GET_projects_api_v3_notebooks_{notebookId}_versions_{versionId}.json
        parameters:
          - in: path
            name: versionId
            required: true
            schema:
              type: integer
          - in: path
            name: notebookId
            required: true
            schema:
              type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notebook.VersionResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a notebook version
        tags:
          - Notebooks
    /projects/api/v3/people.json:
      get:
        description: Retrieve all people for the provided filters.
        operationId: GET_projects_api_v3_people.json
        parameters:
          - description: user type
            in: query
            name: userType
            schema:
              type: string
              enum:
                - account
                - collaborator
                - contact
          - description: date time
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by comment content
            in: query
            name: searchTerm
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - namecaseinsensitive
                - company
              default: name
          - in: query
            name: lastLoginAfter
            schema:
              type: string
              format: date-time
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: Force to have the current/session user in the response
            in: query
            name: orderPrioritiseCurrentUser
            schema:
              type: boolean
          - in: query
            name: onlySiteOwner
            schema:
              type: boolean
              default: 'false'
          - description: >-
              return people only from the owner company. This will replace any
              provided

              company ID.
            in: query
            name: onlyOwnerCompany
            schema:
              type: boolean
              default: 'false'
          - description: include service accounts
            in: query
            name: includeServiceAccounts
            schema:
              type: boolean
              default: 'false'
          - description: exclude collaborators types, returning only account and contact.
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include clients
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: Returns users who are missing cost rates(OCA only)
            in: query
            name: filterByNoCostRate
            schema:
              type: boolean
          - description: exclude contact types, returning only account and collaborator.
            in: query
            name: excludeContacts
            schema:
              type: boolean
              default: 'false'
          - description: team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - companies
                  - workingHours
                type: string
          - description: filter by user ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[person]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[people]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: exclude people assigned to certain project id
            in: query
            name: excludeProjectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/people.MultiResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a list of people
        tags:
          - People
    /projects/api/v3/people/metrics/performance.json:
      get:
        description: |-
          Count the number of completed tasks by user for the provided period. By
          default the user with the most completed tasks is shown first.
        operationId: GET_projects_api_v3_people_metrics_performance.json
        parameters:
          - in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: desc
          - in: query
            name: endDate
            schema:
              type: string
              format: date
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/performance.PeopleMetricPerformancesResponse
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Performance of users completing the most tasks
        tags:
          - People
    /projects/api/v3/people/utilization.json:
      get:
        description: Verify the user utilization.
        operationId: GET_projects_api_v3_people_utilization.json
        parameters:
          - description: determine the type of zoom filter used to display on the report
            in: query
            name: zoom
            schema:
              type: string
              enum:
                - week
                - month
                - last3months
                - quarterbyweek
                - quarterbymonth
          - description: filter by start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: order mode
            in: query
            name: sortOrder
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort by (deprecated, use orderBy)
            in: query
            name: sort
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
                - billableutilization
                - nonbillableutilization
              default: name
          - description: filter by user first or last name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - pdf
              default: pdf
          - description: group by
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: sort by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
              default: name
          - description: group by
            in: query
            name: groupBy
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: filter by end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: determine if the query is for a custom date range
            in: query
            name: isCustomDateRange
            schema:
              type: boolean
          - description: include collaborators
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include client users
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: filter by userIds
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - in: query
            name: fields[utilizations]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - userId
                  - unavailableMinutes
                  - availableMinutes
                  - billableMinutes
                  - unbillableMinutes
                  - loggedMinutes
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - description: filter by company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/utilization.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Return the user utilization.
        tags:
          - People
    /projects/api/v3/people/{personId}.json:
      delete:
        description: Delete a person.
        operationId: DELETE_projects_api_v3_people_{personId}.json
        parameters:
          - in: path
            name: personId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing person.
        tags:
          - People
        x-private: true
      get:
        description: Retrieve a person record.
        operationId: GET_projects_api_v3_people_{personId}.json
        parameters:
          - description: user type
            in: query
            name: userType
            schema:
              type: string
              enum:
                - account
                - collaborator
                - contact
          - description: date time
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by comment content
            in: query
            name: searchTerm
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - namecaseinsensitive
                - company
              default: name
          - in: query
            name: lastLoginAfter
            schema:
              type: string
              format: date-time
          - in: path
            name: personId
            required: true
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: Force to have the current/session user in the response
            in: query
            name: orderPrioritiseCurrentUser
            schema:
              type: boolean
          - in: query
            name: onlySiteOwner
            schema:
              type: boolean
              default: 'false'
          - description: >-
              return people only from the owner company. This will replace any
              provided

              company ID.
            in: query
            name: onlyOwnerCompany
            schema:
              type: boolean
              default: 'false'
          - description: include service accounts
            in: query
            name: includeServiceAccounts
            schema:
              type: boolean
              default: 'false'
          - description: exclude collaborators types, returning only account and contact.
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include clients
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: Returns users who are missing cost rates(OCA only)
            in: query
            name: filterByNoCostRate
            schema:
              type: boolean
          - description: exclude contact types, returning only account and collaborator.
            in: query
            name: excludeContacts
            schema:
              type: boolean
              default: 'false'
          - description: team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - companies
                  - workingHours
                type: string
          - description: filter by user ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[person]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[people]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: exclude people assigned to certain project id
            in: query
            name: excludeProjectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/people.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a person
        tags:
          - Person
    /projects/api/v3/projectcategories.json:
      get:
        operationId: GET_projects_api_v3_projectcategories.json
        parameters:
          - description: filter by name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: |-
              filter by starred projects only.
              note: if an owner company admin, counts will honour this filter,
              but all categories will be returned regardless.
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: |-
              filter by project statuses.
              note: if an owner company admin, counts will honour this filter,
              but all categories will be returned regardless.
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by specific ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/category.CategoriesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a list of project categories
        tags:
          - Categories
    /projects/api/v3/projectcategories/{categoryId}.json:
      get:
        operationId: GET_projects_api_v3_projectcategories_{categoryId}.json
        parameters:
          - description: filter by name
            in: query
            name: searchTerm
            schema:
              type: string
          - in: path
            name: categoryId
            required: true
            schema:
              type: integer
          - description: |-
              filter by starred projects only.
              note: if an owner company admin, counts will honour this filter,
              but all categories will be returned regardless.
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: |-
              filter by project statuses.
              note: if an owner company admin, counts will honour this filter,
              but all categories will be returned regardless.
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by specific ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/category.CategoriesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get a specific project category
        tags:
          - Categories
    /projects/api/v3/projects.json:
      get:
        description: >-
          Retrieve all projects for the provided filters. Only the projects that
          the

          logged-in user can access will be returned.



          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_projects.json
        parameters:
          - description: updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - project
                - health
              default: project
          - description: Optional to configure the report dates displayed in a timezone
            in: query
            name: reportTimezone
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - csv
                - html
                - pdf
                - xls
              default: pdf
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - companyname
                - datecreated
                - duedate
                - lastactivity
                - name
                - namecaseinsensitive
                - ownercompany
                - starred
                - categoryname
              default: name
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter by min last activity date
            in: query
            name: minLastActivityDate
            schema:
              type: string
              format: date
          - description: filter by max last activity date
            in: query
            name: maxLastActivityDate
            schema:
              type: string
              format: date
          - description: currency symbol for report export
            in: query
            name: currencySymbol
            schema:
              type: string
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: filter by minimum budget capacity used
            in: query
            name: minBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: filter by maximum budget capacity used
            in: query
            name: maxBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include companies in the search
            in: query
            name: searchCompanies
            schema:
              type: boolean
          - description: >-
              search projects beginning with the search term character only when
              it contains a single character.
            in: query
            name: searchByLetter
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only show projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
              default: 'false'
          - description: can log time on projects
            in: query
            name: onlyProjectsThatCanLogTime
            schema:
              type: boolean
              default: 'false'
          - description: return only archived projects
            in: query
            name: onlyArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all excluded project tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include alongside normal projects, tentative ones
            in: query
            name: includeTentativeProjects
            schema:
              type: boolean
          - description: include sub categories when filtering by ids
            in: query
            name: includeSubCategories
            schema:
              type: boolean
          - description: >-
              include project status counts for tasks columns billing events
              milestones
            in: query
            name: includeStats
            schema:
              type: boolean
          - description: fetch user-specific data such as isStarred
            in: query
            name: includeProjectUserInfo
            schema:
              type: boolean
              default: 'false'
          - description: include project profitability in response
            in: query
            name: includeProjectProfitability
            schema:
              type: boolean
          - description: include minimum and maximum start/end dates for projects
            in: query
            name: includeProjectDates
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include project related counts
            in: query
            name: includeCounts
            schema:
              type: boolean
          - description: >-
              optional to include completed projects when filtering by project
              statuses "current,late".
            in: query
            name: includeCompletedStatus
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: hide projects where the logged-in user is just an observer
            in: query
            name: hideObservedProjects
            schema:
              type: boolean
              default: 'false'
          - description: includes filters when project ids are provided
            in: query
            name: alwaysIncludeFiltering
            schema:
              type: boolean
          - description: filter by projects that contain users associated with the team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: select the columns to use in exports.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projectOwners
                  - projectUpdates
                  - companies
                  - companies.countries
                  - companies.industries
                  - projectCategories
                  - portfolioCards
                  - portfolioBoards
                  - portfolioColumns
                  - tags
                  - customfields
                  - customfieldProjects
                  - projectBudgets
                  - activities.latest
                  - users
                  - createdBy
                  - updatedBy
                  - completedBy
                  - deletedBy
                type: string
          - in: query
            name: fields[workflows]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - statusId
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[stages]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - stage
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
          - in: query
            name: fields[projectBudgets]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - type
                  - status
                  - capacityUsed
                  - capacity
                  - originatorBudgetId
                  - isRepeating
                  - repeatPeriod
                  - repeatUnit
                  - repeatsRemaining
                  - sequenceNumber
                  - startDateTime
                  - endDateTime
                  - currencyCode
                  - timelogType
                  - expenseType
                  - defaultRate
                  - notificationIds
                  - createdByUserId
                  - dateCreated
                  - updatedUserId
                  - dateUpdated
                  - completedByUserId
                  - dateCompleted
                  - deletedByUserId
                  - dateDeleted
                type: string
          - in: query
            name: fields[portfolioColumns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[portfolioCards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - columnId
                  - projectId
                type: string
          - in: query
            name: fields[portfolioBoards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - in: query
            name: fields[customfieldProjects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - customfieldId
                  - value
                  - createdAt
                  - createdBy
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by projects that have features enabled
            in: query
            name: featuresEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: exclude by project tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/project.projectsResponseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a list of projects
        tags:
          - Projects
    /projects/api/v3/projects/budgets/:budgetId/tasklists/budgets/:tasklistId.json:
      patch:
        operationId: >-
          PATCH_projects_api_v3_projects_budgets_:budgetId_tasklists_budgets_:tasklistId.json
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tasklistbudget.PatchBudgetRequest'
          required: true
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tasklistbudget.BudgetResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Updates a tasklist budget
        tags:
          - Budgets
    /projects/api/v3/projects/budgets/:id/tasklists/budgets.json:
      get:
        description: Get a list of tasklist budgets information.
        operationId: GET_projects_api_v3_projects_budgets_:id_tasklists_budgets.json
        parameters:
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - dateCreated
              default: dateCreated
          - description: parent project budget id
            in: query
            name: projectBudgetId
            schema:
              type: integer
              default: '0'
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - tasklists
                  - projectBudgets
                  - tasklistBudgetNotifications
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tasklistBudgetNotifications]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[projectBudgets]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - type
                  - status
                  - capacityUsed
                  - capacity
                  - originatorBudgetId
                  - isRepeating
                  - repeatPeriod
                  - repeatUnit
                  - repeatsRemaining
                  - sequenceNumber
                  - startDateTime
                  - endDateTime
                  - currencyCode
                  - timelogType
                  - expenseType
                  - defaultRate
                  - notificationIds
                  - createdByUserId
                  - dateCreated
                  - updatedUserId
                  - dateUpdated
                  - completedByUserId
                  - dateCompleted
                  - deletedByUserId
                  - dateDeleted
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tasklistbudget.BudgetsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all tasklist budgets in a project budget.
        tags:
          - Budgets
      put:
        description: |-
          payload. If an ID is provided it is seen as an update, else it inserts.
          NOTE: the payload provided is the final source of truth, meaning any
          budgets omitted will be cleared.

          Adds or updates task list budgets.
        operationId: PUT_projects_api_v3_projects_budgets_:id_tasklists_budgets.json
        requestBody:
          $ref: '#/components/requestBodies/tasklistbudget.BulkAddBudgetRequest'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tasklistbudget.BudgetsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Adds or updates task list budgets depending on the
        tags:
          - Budgets
        x-private: true
    /projects/api/v3/projects/featureorder.json:
      put:
        description: |-
          Each field must have an index, from 0 to numFeatures -1
          without repeated numbers to provide the order
          to display the features
        operationId: PUT_projects_api_v3_projects_featureorder.json
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.FeatureOrderDefaults'
          required: true
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/project.FeatureOrderResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Sets the default features order to display in tab
        tags:
          - Projects
    /projects/api/v3/projects/metrics/active.json:
      get:
        description: Return the number of active projects that the logged-in user can access.
        operationId: GET_projects_api_v3_projects_metrics_active.json
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/active.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get the total count of active projects
        tags:
          - Projects
    /projects/api/v3/projects/metrics/billable.json:
      get:
        description: >-
          Returns the total billable time of all projects that the logged-in user
          has

          access.
        operationId: GET_projects_api_v3_projects_metrics_billable.json
        parameters:
          - in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: desc
          - in: query
            name: endDate
            schema:
              type: string
              format: date
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/billable.ProjectMetricBillablesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get the total billable time per project
        tags:
          - Projects
    /projects/api/v3/projects/metrics/healths.json:
      get:
        description: >-
          Return the number of projects on each health category. It will only
          count the

          projects that the logged-in user can access.
        operationId: GET_projects_api_v3_projects_metrics_healths.json
        parameters:
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              project health

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/health.ProjectMetricHealthsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get a health summary for all projects
        tags:
          - Projects
    /projects/api/v3/projects/metrics/invoice.json:
      get:
        description: >-
          Count the number of open invoices on all projects that the logged-in
          user has

          access.
        operationId: GET_projects_api_v3_projects_metrics_invoice.json
        parameters:
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              project health

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/invoice.ProjectMetricInvoicesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Return open invoices across all projects
        tags:
          - Projects
    /projects/api/v3/projects/metrics/owners.json:
      get:
        description: Count the number of projects per project owner user.
        operationId: GET_projects_api_v3_projects_metrics_owners.json
        parameters:
          - description: sort order
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: desc
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              project health

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/owner.ProjectMetricOwnersResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get number of owned and un-assigned projects
        tags:
          - Projects
    /projects/api/v3/projects/metrics/unbilled.json:
      get:
        description: >-
          Return the un-billed expenses for each project that the logged-in user
          has

          access.
        operationId: GET_projects_api_v3_projects_metrics_unbilled.json
        parameters:
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              project health

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/unbilled.ProjectMetricUnbilledResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Return un-billed expenses across all projects
        tags:
          - Projects
    /projects/api/v3/projects/starred.json:
      get:
        description: >-
          Retrieve all starred projects for the provided filters. Only the
          projects

          that the logged-in user can access will be returned.



          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_projects_starred.json
        parameters:
          - description: updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - project
                - health
              default: project
          - description: Optional to configure the report dates displayed in a timezone
            in: query
            name: reportTimezone
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - csv
                - html
                - pdf
                - xls
              default: pdf
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - companyname
                - datecreated
                - duedate
                - lastactivity
                - name
                - namecaseinsensitive
                - ownercompany
                - starred
                - categoryname
              default: name
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter by min last activity date
            in: query
            name: minLastActivityDate
            schema:
              type: string
              format: date
          - description: filter by max last activity date
            in: query
            name: maxLastActivityDate
            schema:
              type: string
              format: date
          - description: currency symbol for report export
            in: query
            name: currencySymbol
            schema:
              type: string
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: filter by minimum budget capacity used
            in: query
            name: minBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: filter by maximum budget capacity used
            in: query
            name: maxBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include companies in the search
            in: query
            name: searchCompanies
            schema:
              type: boolean
          - description: >-
              search projects beginning with the search term character only when
              it contains a single character.
            in: query
            name: searchByLetter
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only show projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
              default: 'false'
          - description: can log time on projects
            in: query
            name: onlyProjectsThatCanLogTime
            schema:
              type: boolean
              default: 'false'
          - description: return only archived projects
            in: query
            name: onlyArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all excluded project tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include alongside normal projects, tentative ones
            in: query
            name: includeTentativeProjects
            schema:
              type: boolean
          - description: include sub categories when filtering by ids
            in: query
            name: includeSubCategories
            schema:
              type: boolean
          - description: >-
              include project status counts for tasks columns billing events
              milestones
            in: query
            name: includeStats
            schema:
              type: boolean
          - description: fetch user-specific data such as isStarred
            in: query
            name: includeProjectUserInfo
            schema:
              type: boolean
              default: 'false'
          - description: include project profitability in response
            in: query
            name: includeProjectProfitability
            schema:
              type: boolean
          - description: include minimum and maximum start/end dates for projects
            in: query
            name: includeProjectDates
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include project related counts
            in: query
            name: includeCounts
            schema:
              type: boolean
          - description: >-
              optional to include completed projects when filtering by project
              statuses "current,late".
            in: query
            name: includeCompletedStatus
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: hide projects where the logged-in user is just an observer
            in: query
            name: hideObservedProjects
            schema:
              type: boolean
              default: 'false'
          - description: includes filters when project ids are provided
            in: query
            name: alwaysIncludeFiltering
            schema:
              type: boolean
          - description: filter by projects that contain users associated with the team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: select the columns to use in exports.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projectOwners
                  - projectUpdates
                  - companies
                  - companies.countries
                  - companies.industries
                  - projectCategories
                  - portfolioCards
                  - portfolioBoards
                  - portfolioColumns
                  - tags
                  - customfields
                  - customfieldProjects
                  - projectBudgets
                  - activities.latest
                  - users
                  - createdBy
                  - updatedBy
                  - completedBy
                  - deletedBy
                type: string
          - in: query
            name: fields[workflows]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - statusId
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[stages]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - stage
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
          - in: query
            name: fields[projectBudgets]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - type
                  - status
                  - capacityUsed
                  - capacity
                  - originatorBudgetId
                  - isRepeating
                  - repeatPeriod
                  - repeatUnit
                  - repeatsRemaining
                  - sequenceNumber
                  - startDateTime
                  - endDateTime
                  - currencyCode
                  - timelogType
                  - expenseType
                  - defaultRate
                  - notificationIds
                  - createdByUserId
                  - dateCreated
                  - updatedUserId
                  - dateUpdated
                  - completedByUserId
                  - dateCompleted
                  - deletedByUserId
                  - dateDeleted
                type: string
          - in: query
            name: fields[portfolioColumns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[portfolioCards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - columnId
                  - projectId
                type: string
          - in: query
            name: fields[portfolioBoards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - in: query
            name: fields[customfieldProjects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - customfieldId
                  - value
                  - createdAt
                  - createdBy
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by projects that have features enabled
            in: query
            name: featuresEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: exclude by project tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/project.projectsResponseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a list of starred projects
        tags:
          - Projects
    /projects/api/v3/projects/teamwork/categories.json:
      get:
        operationId: GET_projects_api_v3_projects_teamwork_categories.json
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/category.CategoriesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a list of teamwork project categories
        tags:
          - Categories
    /projects/api/v3/projects/teamwork/samples.json:
      get:
        description: Retrieve all sample projects for the provided filters.
        operationId: GET_projects_api_v3_projects_teamwork_samples.json
        parameters:
          - description: filter by project name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: filter by sample ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[sampleprojects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - code
                  - description
                  - icon
                  - imagePreview
                  - categoryId
                  - content
                type: string
          - description: filter by category ids
            in: query
            name: categoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/project.SampleProjectsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a list of teamwork sample projects
        tags:
          - Projects
    /projects/api/v3/projects/templates.json:
      get:
        description: >-
          Retrieve all projects templates for the provided filters. Only the
          projects templates that the

          logged-in user can access will be returned.



          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_projects_templates.json
        parameters:
          - description: updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - project
                - health
              default: project
          - description: Optional to configure the report dates displayed in a timezone
            in: query
            name: reportTimezone
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - csv
                - html
                - pdf
                - xls
              default: pdf
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - companyname
                - datecreated
                - duedate
                - lastactivity
                - name
                - namecaseinsensitive
                - ownercompany
                - starred
                - categoryname
              default: name
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter by min last activity date
            in: query
            name: minLastActivityDate
            schema:
              type: string
              format: date
          - description: filter by max last activity date
            in: query
            name: maxLastActivityDate
            schema:
              type: string
              format: date
          - description: currency symbol for report export
            in: query
            name: currencySymbol
            schema:
              type: string
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: filter by minimum budget capacity used
            in: query
            name: minBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: filter by maximum budget capacity used
            in: query
            name: maxBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include companies in the search
            in: query
            name: searchCompanies
            schema:
              type: boolean
          - description: >-
              search projects beginning with the search term character only when
              it contains a single character.
            in: query
            name: searchByLetter
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only show projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
              default: 'false'
          - description: can log time on projects
            in: query
            name: onlyProjectsThatCanLogTime
            schema:
              type: boolean
              default: 'false'
          - description: return only archived projects
            in: query
            name: onlyArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all excluded project tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include alongside normal projects, tentative ones
            in: query
            name: includeTentativeProjects
            schema:
              type: boolean
          - description: include sub categories when filtering by ids
            in: query
            name: includeSubCategories
            schema:
              type: boolean
          - description: >-
              include project status counts for tasks columns billing events
              milestones
            in: query
            name: includeStats
            schema:
              type: boolean
          - description: fetch user-specific data such as isStarred
            in: query
            name: includeProjectUserInfo
            schema:
              type: boolean
              default: 'false'
          - description: include project profitability in response
            in: query
            name: includeProjectProfitability
            schema:
              type: boolean
          - description: include minimum and maximum start/end dates for projects
            in: query
            name: includeProjectDates
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include project related counts
            in: query
            name: includeCounts
            schema:
              type: boolean
          - description: >-
              optional to include completed projects when filtering by project
              statuses "current,late".
            in: query
            name: includeCompletedStatus
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: hide projects where the logged-in user is just an observer
            in: query
            name: hideObservedProjects
            schema:
              type: boolean
              default: 'false'
          - description: includes filters when project ids are provided
            in: query
            name: alwaysIncludeFiltering
            schema:
              type: boolean
          - description: filter by projects that contain users associated with the team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: select the columns to use in exports.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projectOwners
                  - projectUpdates
                  - companies
                  - companies.countries
                  - companies.industries
                  - projectCategories
                  - portfolioCards
                  - portfolioBoards
                  - portfolioColumns
                  - tags
                  - customfields
                  - customfieldProjects
                  - projectBudgets
                  - activities.latest
                  - users
                  - createdBy
                  - updatedBy
                  - completedBy
                  - deletedBy
                type: string
          - in: query
            name: fields[workflows]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - statusId
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[stages]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - stage
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
          - in: query
            name: fields[projectBudgets]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - type
                  - status
                  - capacityUsed
                  - capacity
                  - originatorBudgetId
                  - isRepeating
                  - repeatPeriod
                  - repeatUnit
                  - repeatsRemaining
                  - sequenceNumber
                  - startDateTime
                  - endDateTime
                  - currencyCode
                  - timelogType
                  - expenseType
                  - defaultRate
                  - notificationIds
                  - createdByUserId
                  - dateCreated
                  - updatedUserId
                  - dateUpdated
                  - completedByUserId
                  - dateCompleted
                  - deletedByUserId
                  - dateDeleted
                type: string
          - in: query
            name: fields[portfolioColumns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[portfolioCards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - columnId
                  - projectId
                type: string
          - in: query
            name: fields[portfolioBoards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - in: query
            name: fields[customfieldProjects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - customfieldId
                  - value
                  - createdAt
                  - createdBy
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by projects that have features enabled
            in: query
            name: featuresEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: exclude by project tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/project.projectsResponseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a list of projects templates
        tags:
          - Projects
    /projects/api/v3/projects/tentative/{projectId}/convert.json:
      put:
        operationId: PUT_projects_api_v3_projects_tentative_{projectId}_convert.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/project.SampleProjectsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Converts the given tentative project into normal
        tags:
          - Projects
    /projects/api/v3/projects/updates.json:
      get:
        description: Return the updates from all projects that the logged-in user can access.
        operationId: GET_projects_api_v3_projects_updates.json
        parameters:
          - description: filter by updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - date
                - color
                - health
                - project
                - user
              default: date
          - description: filter by creation date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: add reactions to the response
            in: query
            name: reactions
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: parse emojis to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: filter by active
            in: query
            name: activeOnly
            schema:
              type: boolean
              default: 'true'
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project health (deprecated, use projectHealths)
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - createdBy
                  - deletedBy
                  - likes.users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/update.ProjectUpdatesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all project updates
        tags:
          - ProjectUpdates
    /projects/api/v3/projects/{projectIds}/updates.json:
      get:
        description: Return the updates from a specific project.
        operationId: GET_projects_api_v3_projects_{projectIds}_updates.json
        parameters:
          - description: filter by updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - date
                - color
                - health
                - project
                - user
              default: date
          - description: filter by creation date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - in: path
            name: projectIds
            required: true
            schema:
              type: integer
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: add reactions to the response
            in: query
            name: reactions
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: parse emojis to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: filter by active
            in: query
            name: activeOnly
            schema:
              type: boolean
              default: 'true'
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project health (deprecated, use projectHealths)
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - createdBy
                  - deletedBy
                  - likes.users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/update.ProjectUpdatesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all updates from a specific project
        tags:
          - ProjectUpdates
    /projects/api/v3/projects/{projectId}.json:
      get:
        description: >-
          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_projects_{projectId}.json
        parameters:
          - description: updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - project
                - health
              default: project
          - description: Optional to configure the report dates displayed in a timezone
            in: query
            name: reportTimezone
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - csv
                - html
                - pdf
                - xls
              default: pdf
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - companyname
                - datecreated
                - duedate
                - lastactivity
                - name
                - namecaseinsensitive
                - ownercompany
                - starred
                - categoryname
              default: name
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter by min last activity date
            in: query
            name: minLastActivityDate
            schema:
              type: string
              format: date
          - description: filter by max last activity date
            in: query
            name: maxLastActivityDate
            schema:
              type: string
              format: date
          - description: currency symbol for report export
            in: query
            name: currencySymbol
            schema:
              type: string
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: filter by minimum budget capacity used
            in: query
            name: minBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: filter by maximum budget capacity used
            in: query
            name: maxBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include companies in the search
            in: query
            name: searchCompanies
            schema:
              type: boolean
          - description: >-
              search projects beginning with the search term character only when
              it contains a single character.
            in: query
            name: searchByLetter
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only show projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
              default: 'false'
          - description: can log time on projects
            in: query
            name: onlyProjectsThatCanLogTime
            schema:
              type: boolean
              default: 'false'
          - description: return only archived projects
            in: query
            name: onlyArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all excluded project tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include alongside normal projects, tentative ones
            in: query
            name: includeTentativeProjects
            schema:
              type: boolean
          - description: include sub categories when filtering by ids
            in: query
            name: includeSubCategories
            schema:
              type: boolean
          - description: >-
              include project status counts for tasks columns billing events
              milestones
            in: query
            name: includeStats
            schema:
              type: boolean
          - description: fetch user-specific data such as isStarred
            in: query
            name: includeProjectUserInfo
            schema:
              type: boolean
              default: 'false'
          - description: include project profitability in response
            in: query
            name: includeProjectProfitability
            schema:
              type: boolean
          - description: include minimum and maximum start/end dates for projects
            in: query
            name: includeProjectDates
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include project related counts
            in: query
            name: includeCounts
            schema:
              type: boolean
          - description: >-
              optional to include completed projects when filtering by project
              statuses "current,late".
            in: query
            name: includeCompletedStatus
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: hide projects where the logged-in user is just an observer
            in: query
            name: hideObservedProjects
            schema:
              type: boolean
              default: 'false'
          - description: includes filters when project ids are provided
            in: query
            name: alwaysIncludeFiltering
            schema:
              type: boolean
          - description: filter by projects that contain users associated with the team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: select the columns to use in exports.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projectOwners
                  - projectUpdates
                  - companies
                  - companies.countries
                  - companies.industries
                  - projectCategories
                  - portfolioCards
                  - portfolioBoards
                  - portfolioColumns
                  - tags
                  - customfields
                  - customfieldProjects
                  - projectBudgets
                  - activities.latest
                  - users
                  - createdBy
                  - updatedBy
                  - completedBy
                  - deletedBy
                type: string
          - in: query
            name: fields[workflows]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - statusId
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[stages]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - stage
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
          - in: query
            name: fields[projectBudgets]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - type
                  - status
                  - capacityUsed
                  - capacity
                  - originatorBudgetId
                  - isRepeating
                  - repeatPeriod
                  - repeatUnit
                  - repeatsRemaining
                  - sequenceNumber
                  - startDateTime
                  - endDateTime
                  - currencyCode
                  - timelogType
                  - expenseType
                  - defaultRate
                  - notificationIds
                  - createdByUserId
                  - dateCreated
                  - updatedUserId
                  - dateUpdated
                  - completedByUserId
                  - dateCompleted
                  - deletedByUserId
                  - dateDeleted
                type: string
          - in: query
            name: fields[portfolioColumns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[portfolioCards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - columnId
                  - projectId
                type: string
          - in: query
            name: fields[portfolioBoards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - in: query
            name: fields[customfieldProjects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - customfieldId
                  - value
                  - createdAt
                  - createdBy
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by projects that have features enabled
            in: query
            name: featuresEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: exclude by project tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/project.responseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Returns a project
        tags:
          - Projects
    /projects/api/v3/projects/{projectId}/activity:
      delete:
        operationId: DELETE_projects_api_v3_projects_{projectId}_activity
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Deletes a projects activity log.
        tags:
          - Activity
    /projects/api/v3/projects/{projectId}/customfields.json:
      get:
        description: Return all custom field values from a specific project.
        operationId: GET_projects_api_v3_projects_{projectId}_customfields.json
        parameters:
          - description: filter by custom field value
            in: query
            name: searchTerm
            schema:
              type: string
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - customfields
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - description: filter by custom field ids
            in: query
            name: customFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.valuesResponseProject'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Project custom field values.
        tags:
          - CustomFields
      post:
        description: Add a project custom field value.
        operationId: POST_projects_api_v3_projects_{projectId}_customfields.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/value.requestProject'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.responseProject'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Add project custom field value.
        tags:
          - CustomFields
    /projects/api/v3/projects/{projectId}/customfields/bulk/delete.json:
      post:
        description: Remove many entries of project custom field values at once.
        operationId: POST_projects_api_v3_projects_{projectId}_customfields_bulk_delete.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value.bulkDeleteRequestProject'
          required: true
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete many project custom fields values at once.
        tags:
          - CustomFields
    /projects/api/v3/projects/{projectId}/customfields/bulk/update.json:
      post:
        description: Edit many entries of project custom field values at once.
        operationId: POST_projects_api_v3_projects_{projectId}_customfields_bulk_update.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value.bulkUpdateRequestProject'
          required: true
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.valuesResponseProject'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update many project custom field values at once.
        tags:
          - CustomFields
    /projects/api/v3/projects/{projectId}/customfields/{customFieldId}.json:
      delete:
        description: Removes a project custom field value.
        operationId: >-
          DELETE_projects_api_v3_projects_{projectId}_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing project custom field value.
        tags:
          - CustomFields
      get:
        description: Return a specific custom field value from a project.
        operationId: >-
          GET_projects_api_v3_projects_{projectId}_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.responseProject'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Project custom field value.
        tags:
          - CustomFields
      patch:
        description: Edit a project custom field value.
        operationId: >-
          PATCH_projects_api_v3_projects_{projectId}_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/value.requestProject'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.responseProject'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing project custom field value.
        tags:
          - CustomFields
    /projects/api/v3/projects/{projectId}/featureorder.json:
      get:
        operationId: GET_projects_api_v3_projects_{projectId}_featureorder.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/project.FeatureOrderResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a project features order to display in tab
        tags:
          - Projects
      put:
        description: |-
          Each field must have an index, from 0 to numFeatures -1
          without repeated numbers to provide the order
          to display the features
        operationId: PUT_projects_api_v3_projects_{projectId}_featureorder.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/project.FeatureOrderRequest'
          required: true
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/project.FeatureOrderResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Sets the the features order to display in tab
        tags:
          - Projects
    /projects/api/v3/projects/{projectId}/latestactivity:
      get:
        description: >-
          Lists the latest activity for a specific project. When you access a
          project

          you will see all the recent activity. This corresponds to that view in

          Teamwork. There is some parameters you can send in to filter your
          results.
        operationId: GET_projects_api_v3_projects_{projectId}_latestactivity
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by start datetime
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: sort by (deprecated, use orderBy)
            in: query
            name: sort
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
          - description: sort by
            in: query
            name: orderBy
            schema:
              type: string
          - description: filter by end datetime
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by project id (deprecated, use projectIds)
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: activity id offset
            in: query
            name: maxId
            schema:
              type: integer
          - description: limit results from previous id
            in: query
            name: catchupFromId
            schema:
              type: integer
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
              default: 'false'
          - description: only projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
          - description: enforce all tag ids must be matched
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: group all activities on comments
            in: query
            name: groupCommentActivityType
            schema:
              type: boolean
          - description: filter by user ids
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - users
                  - companies
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[activities]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dateTime
                  - activityType
                  - latestActivityType
                  - itemId
                  - itemLink
                  - itemType
                  - itemDescription
                  - itemExtraDescription
                  - itemExtraLink
                  - itemPublicInfo
                  - forUserId
                  - forUserName
                  - dueDate
                  - isPrivate
                  - lockdownId
                  - projectId
                  - companyId
                type: string
          - description: filter by activity types
            in: query
            name: activityTypes
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - task
                  - tasklist
                  - project
                  - message
                  - notebook
                  - milestone
                  - like
                  - file
                  - link
                  - billinginvoice
                  - task_comment
                  - milestone_comment
                  - file_comment
                  - link_comment
                  - comment
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/activity.ActivitiesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: List latest activity for a specific project.
        tags:
          - Activity
    /projects/api/v3/projects/{projectId}/milestones.json:
      get:
        description: >-
          This lets you query the list of milestones for a project. You can use
          the

          provided filters to return only those milestones that are incomplete,

          completed, upcoming or late. This call uses pagination, returning 100

          milestones per page by default.
        operationId: GET_projects_api_v3_projects_{projectId}_milestones.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by milestone name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - calendar
                - agenda
              default: agenda
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - date
                - dateonly
                - name
                - project
                - user
                - dateCreated
                - dateUpdated
              default: date
          - description: filter by due before date (deprecated, use dueBefore)
            in: query
            name: dueBeforeDate
            schema:
              type: string
              format: date
          - description: filter by due before date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter by due after date (deprecated, use dueAfter)
            in: query
            name: dueAfterDate
            schema:
              type: string
              format: date
          - description: filter by due after date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: show private milestones
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: show attached tasklists
            in: query
            name: showAttachedTasklists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: progress
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: filter by projects that the logged-in user is related
            in: query
            name: onlyMyProjects
            schema:
              type: boolean
              default: 'false'
          - description: >-
              only include milestones from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: match all milestone tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include milestones latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include today when milestone status is upcoming
            in: query
            name: includeToday
            schema:
              type: boolean
              default: 'true'
          - description: include team users to the responsible party ids
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include tags in the reports
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: includeProgress
            schema:
              type: boolean
              default: 'false'
          - description: include percentage of tasks completed for all linked tasklists
            in: query
            name: includePercentageComplete
            schema:
              type: boolean
              default: 'false'
          - description: optional to include completed milestones
            in: query
            name: includeCompleted
            schema:
              type: boolean
          - description: include company users to the responsible party ids
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: convert emoji alias to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: count unread comments
            in: query
            name: countUnreadComments
            schema:
              type: boolean
              default: 'false'
          - description: enables the calendar style layout
            in: query
            name: calendar
            schema:
              type: boolean
              default: 'false'
          - description: filter by milestone tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of milestone status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - new
                  - reopened
                  - completed
                  - deleted
                  - pending
                  - incomplete
                  - late
                  - today
                  - upcoming
                type: string
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health (deprecated, use projectHealths)
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - users
                  - completedBy
                  - createdBy
                  - deletedBy
                  - updatedBy
                  - commentFollowers
                  - changeFollowers
                  - tags
                  - tasklists
                  - tasklisttaskstats
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followers' ids
            in: query
            name: followerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by creators' ids
            in: query
            name: creatorIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/milestone.MilestonesResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get milestones in a project
        tags:
          - Milestones
    /projects/api/v3/projects/{projectId}/notebooks.json:
      post:
        operationId: POST_projects_api_v3_projects_{projectId}_notebooks.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: parse emojis to unicode
            in: query
            name: getEmoji
            schema:
              type: boolean
              default: 'true'
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - tags
                  - users
                  - notebookCategories
                  - companies
                  - teams
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[notebooks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - contents
                  - type
                  - isPrivate
                  - locked
                  - lockdownId
                  - secureContent
                  - projectId
                  - createdByUserID
                  - updatedByUserID
                  - deletedByUserID
                  - dateUpdated
                  - dateCreated
                  - dateDeleted
                  - deleted
                  - categoryId
                  - notebookVersionID
                  - notebookVersionCreatedDateTime
                  - notebookVersionUpdatedDateTime
                  - latestVersionNo
                  - commentsCount
                  - readCommentsCount
                  - contentHTML
                  - privacy
                  - commentFollowers
                  - changeFollowers
                  - projectNotifyCommentIncludeCreator
                  - tagIds
                type: string
          - in: query
            name: fields[notebookCategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        requestBody:
          $ref: '#/components/requestBodies/notebook.Request'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/notebook.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Create a new notebook.
        tags:
          - Notebooks
    /projects/api/v3/projects/{projectId}/people.json:
      get:
        description: Retrieve all people on the project.
        operationId: GET_projects_api_v3_projects_{projectId}_people.json
        parameters:
          - description: user type
            in: query
            name: userType
            schema:
              type: string
              enum:
                - account
                - collaborator
                - contact
          - description: date time
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by comment content
            in: query
            name: searchTerm
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - namecaseinsensitive
                - company
              default: name
          - in: query
            name: lastLoginAfter
            schema:
              type: string
              format: date-time
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: Force to have the current/session user in the response
            in: query
            name: orderPrioritiseCurrentUser
            schema:
              type: boolean
          - in: query
            name: onlySiteOwner
            schema:
              type: boolean
              default: 'false'
          - description: >-
              return people only from the owner company. This will replace any
              provided

              company ID.
            in: query
            name: onlyOwnerCompany
            schema:
              type: boolean
              default: 'false'
          - description: include service accounts
            in: query
            name: includeServiceAccounts
            schema:
              type: boolean
              default: 'false'
          - description: include project observers
            in: query
            name: includeObservers
            schema:
              type: boolean
              default: 'true'
          - description: exclude collaborators types, returning only account and contact.
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include clients
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: Returns users who are missing cost rates(OCA only)
            in: query
            name: filterByNoCostRate
            schema:
              type: boolean
          - description: exclude contact types, returning only account and collaborator.
            in: query
            name: excludeContacts
            schema:
              type: boolean
              default: 'false'
          - description: team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - companies
                  - permissions
                type: string
          - description: filter by user ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[person]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[people]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: exclude people assigned to certain project id
            in: query
            name: excludeProjectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/people.MultiResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a list of people on a project
        tags:
          - People
      put:
        description: Adds a list of user ID's to a project.
        operationId: PUT_projects_api_v3_projects_{projectId}_people.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/people.UsersPayload'
          required: true
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/people.AddPeopleToProjectResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Add people to a project
        tags:
          - People
    /projects/api/v3/projects/{projectId}/people/{personId}.json:
      get:
        description: Retrieve a person record.
        operationId: GET_projects_api_v3_projects_{projectId}_people_{personId}.json
        parameters:
          - description: user type
            in: query
            name: userType
            schema:
              type: string
              enum:
                - account
                - collaborator
                - contact
          - description: date time
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by comment content
            in: query
            name: searchTerm
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - namecaseinsensitive
                - company
              default: name
          - in: query
            name: lastLoginAfter
            schema:
              type: string
              format: date-time
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - in: path
            name: personId
            required: true
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: Force to have the current/session user in the response
            in: query
            name: orderPrioritiseCurrentUser
            schema:
              type: boolean
          - in: query
            name: onlySiteOwner
            schema:
              type: boolean
              default: 'false'
          - description: >-
              return people only from the owner company. This will replace any
              provided

              company ID.
            in: query
            name: onlyOwnerCompany
            schema:
              type: boolean
              default: 'false'
          - description: include service accounts
            in: query
            name: includeServiceAccounts
            schema:
              type: boolean
              default: 'false'
          - description: exclude collaborators types, returning only account and contact.
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include clients
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: Returns users who are missing cost rates(OCA only)
            in: query
            name: filterByNoCostRate
            schema:
              type: boolean
          - description: exclude contact types, returning only account and collaborator.
            in: query
            name: excludeContacts
            schema:
              type: boolean
              default: 'false'
          - description: team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - companies
                  - workingHours
                type: string
          - description: filter by user ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[person]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[people]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: exclude people assigned to certain project id
            in: query
            name: excludeProjectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/people.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns a person on a project
        tags:
          - Person
    /projects/api/v3/projects/{projectId}/risks:
      get:
        description: >-
          Return all risks for a specific project. Only filters that the logged-in
          user

          has access will be returned.
        operationId: GET_projects_api_v3_projects_{projectId}_risks
        parameters:
          - description: >-
              filter by risks updated after specified date (deprecated, use
              updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by risks updated after specified date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: sort order (deprecated, use orderMode)
            in: query
            name: sortOrder
            schema:
              type: string
              enum:
                - asc
                - desc
          - description: sort by (deprecated, use orderBy)
            in: query
            name: sort
            schema:
              type: string
              enum:
                - datecreated
                - source
                - probability
                - impact
                - result
                - project
          - description: search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              default: pdf
          - description: sort order
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
          - description: sort by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - datecreated
                - source
                - probability
                - impact
                - result
                - project
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by probability
            in: query
            name: probabilityTo
            schema:
              type: integer
          - description: filter by probability
            in: query
            name: probabilityFrom
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by impact
            in: query
            name: impactTo
            schema:
              type: integer
          - description: filter by impact
            in: query
            name: impactFrom
            schema:
              type: integer
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
              default: 'false'
          - description: enforce all tag ids must be matched
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: filter by risks that impact schedule
            in: query
            name: impactSchedule
            schema:
              type: boolean
          - description: filter by risks that impact performance
            in: query
            name: impactPerformance
            schema:
              type: boolean
          - description: filter by risks that impact cost
            in: query
            name: impactCost
            schema:
              type: boolean
          - description: filter by risk statuses
            in: query
            name: statuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - new
                  - pending
                  - closed
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - users
                  - projects.companies
                type: string
          - description: filter by specific ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[risks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - source
                  - probability
                  - probabilityValue
                  - impact
                  - impactValue
                  - impactCost
                  - impactSchedule
                  - impactPerformance
                  - createdOn
                  - createdByUserId
                  - lastChangedOn
                  - lastChangedByUserId
                  - result
                  - mitigationPlan
                  - stats
                  - projectId
                  - deleted
                  - canEdit
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/risk.RisksResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get risks for a specific project
        tags:
          - Risks
    /projects/api/v3/projects/{projectId}/risks/copy:
      put:
        description: Copies the risk register from one project to another.
        operationId: PUT_projects_api_v3_projects_{projectId}_risks_copy
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Copies project risks
        tags:
          - Risks
    /projects/api/v3/projects/{projectId}/summary.json:
      get:
        description: >-
          Retrieves the summary from a specific project, returning counters about

          tasks, milestones, columns, events, risks, timers, projects healths.



          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_projects_{projectId}_summary.json
        parameters:
          - description: used to limit the since counters to a specific period
            in: query
            name: until
            schema:
              type: string
              enum:
                - now
                - timeRange
          - description: filter by start datetime
            in: query
            name: timeRangeStart
            schema:
              type: string
              format: date-time
          - description: filter by end datetime
            in: query
            name: timeRangeEnd
            schema:
              type: string
              format: date-time
          - description: >-
              filter by time range. It will be ignored if timeRangeStart and
              timeRangeEnd

              were informed.
            in: query
            name: timeRange
            schema:
              type: string
              enum:
                - yesterday
                - today
                - thisweek
                - lastweek
                - thismonth
                - lastmonth
                - last3months
                - last6months
          - description: project status (deprecated, use projectStatuses)
            in: query
            name: status
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: number of days remaining to event's start
            in: query
            name: eventsDaysAhead
            schema:
              type: integer
              default: '7'
          - description: enforce today is considered as start date for today's tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: filter by my unread messages only
            in: query
            name: unreadMessagesMineOnly
            schema:
              type: boolean
          - description: filter by my unread comments only
            in: query
            name: unreadCommentsMineOnly
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: filter only project events
            in: query
            name: onlyProjectEvents
            schema:
              type: boolean
          - description: >-
              enforce all tag ids must be matched (deprecated, use
              matchAllProjectTags)
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: enforce all tag ids must be matched
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include teams related to the taskAssigneeUserIds
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: count only events that the users are attending
            in: query
            name: eventsAttendingOnly
            schema:
              type: boolean
          - description: >-
              the since section will only use taskAssigneeUserIds if this flag is
              true

              (keeps backward compatibility)
            in: query
            name: applyTaskAssigneeUsersToSince
            schema:
              type: boolean
          - description: when enabled unread counters will respect the time range period.
            in: query
            name: applySinceOnUnread
            schema:
              type: boolean
              default: 'false'
          - description: filter by user ids
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by user ids who time logged
            in: query
            name: timeLoggedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by user ids with tasks assigned
            in: query
            name: taskAssigneeUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: |-
              project health (deprecated, use projectHealths)

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by user ids with milestones assigned
            in: query
            name: milestoneAssigneeUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              project healths (deprecated, use projectHealths)

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: health
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by project tag ids (deprecated, use projectTagIds)
            in: query
            name: filterTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[unread]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - comments
                  - messages
                type: string
          - in: query
            name: fields[time]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - mine
                  - all
                type: string
          - description: sparse fields
            in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - everyone
                  - mine
                type: string
          - in: query
            name: fields[since]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - tasksComplete
                  - tasksCreated
                  - events
                  - dateTime
                type: string
          - in: query
            name: fields[risks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - total
                  - open
                  - pending
                  - closed
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - everyone
                  - mine
                type: string
          - description: |-
              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: fields[health]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: string
          - in: query
            name: fields[events]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - today
                  - upcoming
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - count
                  - data
                type: string
          - description: filter by company ids (deprecated, use projectCompanyIds)
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by user ids with tasks or milestones assigned
            in: query
            name: assigneeUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/summary.ProjectResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get project summary dashboard
        tags:
          - Summary
    /projects/api/v3/projects/{projectId}/tasklists:
      get:
        operationId: GET_projects_api_v3_projects_{projectId}_tasklists
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - displayorder
                - name
                - status
                - createdat
                - updatedat
                - project
              default: displayorder
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: |-
              filter the task list budget by its parent project budget id, if none
              is provided it weill default to the current active budget.
            in: query
            name: projectBudgetId
            schema:
              type: integer
              default: nil
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: sort active lists first
            in: query
            name: sortActiveListsFirst
            schema:
              type: boolean
              default: 'false'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include private items
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include completed items
            in: query
            name: showCompleted
            schema:
              type: boolean
              default: 'false'
          - description: >-
              this means use the tasklist report endpoint, which has totally
              different query params
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include empty lists
            in: query
            name: getEmptyLists
            schema:
              type: boolean
              default: 'true'
          - description: include only completed items
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - defaultTasks
                  - defaultTasks.users
                  - defaultTasks.teams
                  - defaultTasks.reminders
                  - defaultTasks.customfields
                  - defaultTasks.companies
                  - createdBy
                  - updatedBy
                  - companies
                  - projects
                  - milestones
                  - defaultCustomfields
                  - defaultCustomfieldTasks
                  - defaultColumns
                  - defaultWorkflowStages
                  - defaultWorkflows
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tasklist.TasklistsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get tasklists in a project
        tags:
          - TaskLists
    /projects/api/v3/projects/{projectId}/tasklists.csv:
      get:
        description: >-
          Generates a task list report in CSV format containing all tasks for the

          provided filters. Only the tasks that the logged-in user can access will
          be

          returned.
        operationId: GET_projects_api_v3_projects_{projectId}_tasklists.csv
        parameters:
          - description: filter by task date
            in: query
            name: taskDate
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
              default: anytime
          - description: filter by start datetime
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedatdesc
                - completedat
                - duestartdate
                - duestartdatedesc
                - alldates
                - alldatesdesc
                - duedateDESC
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
              default: manual
          - description: filter by end datetime
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: order mode of the comments
            in: query
            name: commentsOrderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: filter by task list
            in: query
            name: tasklistId
            schema:
              type: integer
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by project
            in: query
            name: projectId
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: onlyCompletedTasks
            schema:
              type: boolean
              default: 'false'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include time
            in: query
            name: includeTime
            schema:
              type: boolean
          - description: include tags
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
              default: 'true'
          - description: include late tasks
            in: query
            name: includeLateTasks
            schema:
              type: boolean
          - description: include estimated time
            in: query
            name: includeEstimatedTime
            schema:
              type: boolean
              default: 'true'
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
              default: 'true'
          - description: include comments
            in: query
            name: includeComments
            schema:
              type: boolean
              default: 'false'
          - description: include comment avatars
            in: query
            name: includeCommentAvatars
            schema:
              type: boolean
          - description: include columns
            in: query
            name: includeColumns
            schema:
              type: boolean
              default: 'true'
          - description: include anytime tasks
            in: query
            name: includeAnytimeTasks
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
              default: 'false'
          - description: ignore task start dates
            in: query
            name: ignoreStartDates
            schema:
              type: boolean
          - description: group by task lists
            in: query
            name: groupByTasklists
            schema:
              type: boolean
          - description: filter by tag names
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/csv:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/csv:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate tasklist report in CSV format
        tags:
          - TaskLists
    /projects/api/v3/projects/{projectId}/tasklists.html:
      get:
        description: >-
          Generates a task list report in HTML format containing all tasks for the

          provided filters. Only the tasks that the logged-in user can access will
          be

          returned.
        operationId: GET_projects_api_v3_projects_{projectId}_tasklists.html
        parameters:
          - description: filter by task date
            in: query
            name: taskDate
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
              default: anytime
          - description: filter by start datetime
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedatdesc
                - completedat
                - duestartdate
                - duestartdatedesc
                - alldates
                - alldatesdesc
                - duedateDESC
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
              default: manual
          - description: filter by end datetime
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: order mode of the comments
            in: query
            name: commentsOrderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: filter by task list
            in: query
            name: tasklistId
            schema:
              type: integer
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by project
            in: query
            name: projectId
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: onlyCompletedTasks
            schema:
              type: boolean
              default: 'false'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include time
            in: query
            name: includeTime
            schema:
              type: boolean
          - description: include tags
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
              default: 'true'
          - description: include late tasks
            in: query
            name: includeLateTasks
            schema:
              type: boolean
          - description: include estimated time
            in: query
            name: includeEstimatedTime
            schema:
              type: boolean
              default: 'true'
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
              default: 'true'
          - description: include comments
            in: query
            name: includeComments
            schema:
              type: boolean
              default: 'false'
          - description: include comment avatars
            in: query
            name: includeCommentAvatars
            schema:
              type: boolean
          - description: include columns
            in: query
            name: includeColumns
            schema:
              type: boolean
              default: 'true'
          - description: include anytime tasks
            in: query
            name: includeAnytimeTasks
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
              default: 'false'
          - description: ignore task start dates
            in: query
            name: ignoreStartDates
            schema:
              type: boolean
          - description: group by task lists
            in: query
            name: groupByTasklists
            schema:
              type: boolean
          - description: filter by tag names
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/html:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/html:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate tasklist report in HTML format
        tags:
          - TaskLists
    /projects/api/v3/projects/{projectId}/tasklists.pdf:
      get:
        description: >-
          Generates a task list report in PDF format containing all tasks for the

          provided filters. Only the tasks that the logged-in user can access will
          be

          returned.
        operationId: GET_projects_api_v3_projects_{projectId}_tasklists.pdf
        parameters:
          - description: filter by task date
            in: query
            name: taskDate
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
              default: anytime
          - description: filter by start datetime
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedatdesc
                - completedat
                - duestartdate
                - duestartdatedesc
                - alldates
                - alldatesdesc
                - duedateDESC
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
              default: manual
          - description: filter by end datetime
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: order mode of the comments
            in: query
            name: commentsOrderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: filter by task list
            in: query
            name: tasklistId
            schema:
              type: integer
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by project
            in: query
            name: projectId
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: onlyCompletedTasks
            schema:
              type: boolean
              default: 'false'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include time
            in: query
            name: includeTime
            schema:
              type: boolean
          - description: include tags
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
              default: 'true'
          - description: include late tasks
            in: query
            name: includeLateTasks
            schema:
              type: boolean
          - description: include estimated time
            in: query
            name: includeEstimatedTime
            schema:
              type: boolean
              default: 'true'
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
              default: 'true'
          - description: include comments
            in: query
            name: includeComments
            schema:
              type: boolean
              default: 'false'
          - description: include comment avatars
            in: query
            name: includeCommentAvatars
            schema:
              type: boolean
          - description: include columns
            in: query
            name: includeColumns
            schema:
              type: boolean
              default: 'true'
          - description: include anytime tasks
            in: query
            name: includeAnytimeTasks
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
              default: 'false'
          - description: ignore task start dates
            in: query
            name: ignoreStartDates
            schema:
              type: boolean
          - description: group by task lists
            in: query
            name: groupByTasklists
            schema:
              type: boolean
          - description: filter by tag names
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/pdf:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/pdf:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate tasklist report in PDF format
        tags:
          - TaskLists
    /projects/api/v3/projects/{projectId}/tasklists.xlsx:
      get:
        description: >-
          Generates a task list report in XLSX format containing all tasks for the

          provided filters. Only the tasks that the logged-in user can access will
          be

          returned.
        operationId: GET_projects_api_v3_projects_{projectId}_tasklists.xlsx
        parameters:
          - description: filter by task date
            in: query
            name: taskDate
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
              default: anytime
          - description: filter by start datetime
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedatdesc
                - completedat
                - duestartdate
                - duestartdatedesc
                - alldates
                - alldatesdesc
                - duedateDESC
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
              default: manual
          - description: filter by end datetime
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: order mode of the comments
            in: query
            name: commentsOrderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: filter by task list
            in: query
            name: tasklistId
            schema:
              type: integer
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by project
            in: query
            name: projectId
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: onlyCompletedTasks
            schema:
              type: boolean
              default: 'false'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include time
            in: query
            name: includeTime
            schema:
              type: boolean
          - description: include tags
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
              default: 'true'
          - description: include late tasks
            in: query
            name: includeLateTasks
            schema:
              type: boolean
          - description: include estimated time
            in: query
            name: includeEstimatedTime
            schema:
              type: boolean
              default: 'true'
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
              default: 'true'
          - description: include comments
            in: query
            name: includeComments
            schema:
              type: boolean
              default: 'false'
          - description: include comment avatars
            in: query
            name: includeCommentAvatars
            schema:
              type: boolean
          - description: include columns
            in: query
            name: includeColumns
            schema:
              type: boolean
              default: 'true'
          - description: include anytime tasks
            in: query
            name: includeAnytimeTasks
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
              default: 'false'
          - description: ignore task start dates
            in: query
            name: ignoreStartDates
            schema:
              type: boolean
          - description: group by task lists
            in: query
            name: groupByTasklists
            schema:
              type: boolean
          - description: filter by tag names
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate tasklist report in XLSX format
        tags:
          - TaskLists
    /projects/api/v3/projects/{projectId}/tasks.json:
      get:
        description: >-
          Return multiple tasks according to the provided filter.



          On this endpoint you can filter by custom fields. The syntax for the

          query parameter is the following:

              customField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              customField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_projects_{projectId}_tasks.json
        parameters:
          - description: filter by updated before date
            in: query
            name: updatedBefore
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by today
            in: query
            name: today
            schema:
              type: string
              format: date-time
          - description: filter by a taskFilter
            in: query
            name: taskFilter
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
          - description: filter on start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - task
                - tasktime
              default: task
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - html
                - pdf
              default: pdf
          - description: filter by task priority
            in: query
            name: priority
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedat
                - duestartdate
                - alldates
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
                - createdby
                - completedby
                - assignedto
                - taskstatus
                - taskduedate
                - customfield
                - estimatedtime
                - boardcolumn
                - taskgroupid
                - taskgroupname
                - taskgroup
                - displayorder
                - projectmanual
                - stagedisplayorder
                - stage
              default: duedate
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter on end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter before a due date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter after a due date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: filter on deleted after date
            in: query
            name: deletedAfter
            schema:
              type: string
              format: date-time
          - description: filter by created filter
            in: query
            name: createdFilter
            schema:
              type: string
              enum:
                - anytime
                - today
                - yesterday
                - custom
          - description: filter by created date code
            in: query
            name: createdDateCode
            schema:
              type: string
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: filter by completed before date
            in: query
            name: completedBefore
            schema:
              type: string
              format: date-time
          - description: filter by completed after date
            in: query
            name: completedAfter
            schema:
              type: string
              format: date-time
          - description: filter by updated user id
            in: query
            name: updatedByUserId
            schema:
              type: integer
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by parent task ids
            in: query
            name: parentTaskId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: include task id
            in: query
            name: includeTaskId
            schema:
              type: integer
          - description: provide a user saved filter ID
            in: query
            name: filterId
            schema:
              type: integer
          - description: filter by completed user id
            in: query
            name: completedByUserId
            schema:
              type: integer
          - description: use daterange logic from table when getting the tasks
            in: query
            name: useTaskDateRange
            schema:
              type: boolean
              default: 'false'
          - description: use start dates for todays tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: filter on all projects
            in: query
            name: useAllProjects
            schema:
              type: boolean
          - description: sort active tasks first
            in: query
            name: sortActiveFirst
            schema:
              type: boolean
              default: 'false'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include tasks from completed lists
            in: query
            name: showCompletedLists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: only untagged tasks
            in: query
            name: onlyUntaggedTasks
            schema:
              type: boolean
          - description: |-
              only return tasks that are unplanned. Not assigned, no due date or
              missing estimated time.
            in: query
            name: onlyUnplanned
            schema:
              type: boolean
              default: 'false'
          - description: filter by only tasks with unread comments
            in: query
            name: onlyTasksWithUnreadComments
            schema:
              type: boolean
          - description: filter by only tasks with tickets
            in: query
            name: onlyTasksWithTickets
            schema:
              type: boolean
          - description: only return tasks with estimated time
            in: query
            name: onlyTasksWithEstimatedTime
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: >-
              only include tasks from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: nest sub tasks
            in: query
            name: nestSubTasks
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include tasks latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include untagged tasks
            in: query
            name: includeUntaggedTasks
            schema:
              type: boolean
          - description: filter by include tomorrow
            in: query
            name: includeTomorrow
            schema:
              type: boolean
          - description: filter by include today
            in: query
            name: includeToday
            schema:
              type: boolean
          - description: include members of the given teams
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
          - description: include tasks without due dates
            in: query
            name: includeTasksWithoutDueDates
            schema:
              type: boolean
          - description: include tasks with cards
            in: query
            name: includeTasksWithCards
            schema:
              type: boolean
              default: 'true'
          - description: include tasks from deleted lists
            in: query
            name: includeTasksFromDeletedLists
            schema:
              type: boolean
          - description: >-
              include ids of completed and active subtasks, dependencies,
              predecessors
            in: query
            name: includeRelatedTasks
            schema:
              type: boolean
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
          - description: include overdue tasks
            in: query
            name: includeOverdueTasks
            schema:
              type: boolean
          - description: include original due date of a task
            in: query
            name: includeOriginalDueDate
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
          - description: include members of the given companies
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
          - description: include number of unread and read comments for each task
            in: query
            name: includeCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: filter by include blocked
            in: query
            name: includeBlocked
            schema:
              type: boolean
          - description: include number of unread and read comments for each file attachment
            in: query
            name: includeAttachmentCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
          - description: group by tasklist
            in: query
            name: groupByTasklist
            schema:
              type: boolean
          - description: group by taskgroup
            in: query
            name: groupByTaskgroup
            schema:
              type: boolean
          - description: get sub tasks
            in: query
            name: getSubTasks
            schema:
              type: boolean
          - description: get files
            in: query
            name: getFiles
            schema:
              type: boolean
          - description: >-
              set due date as milestone due date if due date is null and there's a
              related milestone
            in: query
            name: fallbackToMilestoneDueDate
            schema:
              type: boolean
          - description: >-
              For tasks created in a project template it's possible to assign a
              role instead of people, companies or teams.

              This role is then stored with the task name as a prefix. When this
              flag is enabled it will extract the role name

              and return it inside a special field.
            in: query
            name: extractTemplateRoleName
            schema:
              type: boolean
          - description: exclude assignee not on project teams
            in: query
            name: excludeAssigneeNotOnProjectTeams
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: check if task has reminders
            in: query
            name: checkForReminders
            schema:
              type: boolean
          - description: >-
              when filtering by assigned or unassagned tasks, include assignees
              that

              are not in the project.
            in: query
            name: allowAssigneesOutsideProject
            schema:
              type: boolean
              default: 'true'
          - description: >-
              customise the report by selecting columns to be displayed for tasks
              report
            in: query
            name: tasksSelectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tasklist ids
            in: query
            name: tasklistIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by taskgroup ids
            in: query
            name: taskgroupIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task included set
            in: query
            name: taskIncludedSet
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - overdue
                  - nodate
                  - nostartdate
                  - noduedate
                  - nostartwithfutureduedate
                  - taskListNames
                  - projectNames
                type: string
          - description: filter by tag values
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of task status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - upcoming
                  - late
                  - all
                type: string
          - description: skip crm deal ids
            in: query
            name: skipCRMDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: >-
              customise the report by selecting columns to be displayed for
              planned vs actual.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by responsible party ids
            in: query
            name: responsiblePartyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by projects that have features enabled
            in: query
            name: projectFeaturesEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tasklists
                  - parentTasks
                  - companies
                  - teams
                  - users
                  - milestones
                  - comments
                  - comments.users
                  - tags
                  - cards
                  - cards.columns
                  - timeTotals
                  - taskSequences
                  - commentFollowers
                  - changeFollowers
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                  - attachments
                  - attachments.users
                  - subtaskStats
                  - timers
                  - predecessors
                  - permissions
                type: string
          - description: filter by task ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followed by user ids
            in: query
            name: followedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by board column ids
            in: query
            name: filterBoardColumnIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[taskgroups]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - displayOrder
                  - projectId
                  - status
                type: string
          - in: query
            name: fields[taskSequences]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - installationId
                  - frequency
                  - selectedWeekDays
                  - endDate
                  - monthlyRepeatType
                  - duration
                  - rrule
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[files]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - isPrivate
                  - latestFileVersionNo
                  - versionId
                  - status
                  - description
                  - lockdownId
                  - tagIds
                  - changeFollowers
                  - commentFollowers
                  - originalName
                  - displayName
                  - isLocked
                  - lockedByUserId
                  - lockedDate
                  - size
                  - uploadedDate
                  - uploadedByUserID
                  - updatedAt
                  - deletedAt
                  - deletedBy
                  - fileSource
                  - projectId
                  - numLikes
                  - reactions
                  - versions
                  - downloadURL
                  - previewURL
                  - thumbURL
                  - relatedItems
                  - commentsCount
                  - commentsCountRead
                  - categoryId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[comments]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - objectType
                  - objectId
                  - title
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - displayOrder
                  - createdAt
                  - updatedAt
                  - settings
                  - sort
                  - sortOrder
                  - deletedAt
                  - project
                  - hasTriggers
                  - deleted
                  - stats
                  - defaultTasklist
                type: string
          - in: query
            name: fields[cards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - displayOrder
                  - archived
                  - archivedAt
                  - archivedBy
                  - createdAt
                  - createBy
                  - updatedAt
                  - visible
                  - status
                  - deleteBy
                  - deletedAt
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: the ids of the expanded tasks
            in: query
            name: expandedIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by crm deal ids
            in: query
            name: crmDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by creator user ids
            in: query
            name: createdByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee team ids
            in: query
            name: assigneeTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee company ids
            in: query
            name: assigneeCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/task.tasksResponseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get a specific project's tasks.
        tags:
          - Tasks
    /projects/api/v3/projects/{projectId}/time.json:
      get:
        description: >-
          Return logged time entries for a specific project. Only the time entries
          that

          the logged-in user can access will be returned.
        operationId: GET_projects_api_v3_projects_{projectId}_time.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by a starting date
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort order
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - company
                - date
                - dateupdated
                - project
                - task
                - tasklist
                - user
                - description
                - billed
                - billable
                - timespent
              default: date
          - description: filter by invoiced type
            in: query
            name: invoicedType
            schema:
              type: string
              enum:
                - all
                - invoiced
                - noninvoiced
              default: all
          - description: filter by an ending date
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: filter by billable type
            in: query
            name: billableType
            schema:
              type: string
              enum:
                - all
                - billable
                - non-billable
              default: all
          - description: filter by the user who updated the timelog
            in: query
            name: updatedBy
            schema:
              type: integer
          - description: filter by ticket id
            in: query
            name: ticketId
            schema:
              type: integer
          - description: filter by tasklist id
            in: query
            name: tasklistId
            schema:
              type: integer
          - description: filter by task id (deprecated, use taskIds)
            in: query
            name: taskId
            schema:
              type: integer
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by project id (deprecated, use projectIds)
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by budget id
            in: query
            name: budgetId
            schema:
              type: integer
          - description: filter by allocation id
            in: query
            name: allocationId
            schema:
              type: integer
          - description: >-
              filter by timelogs that are directly logged against projects and not
              its child tasks
            in: query
            name: unattachedTimelogs
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all task tags
            in: query
            name: matchAllTaskTags
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include totals
            in: query
            name: includeTotals
            schema:
              type: boolean
              default: 'false'
          - description: include permissions
            in: query
            name: includePermissions
            schema:
              type: boolean
              default: 'false'
          - description: include descendants
            in: query
            name: includeDescendants
            schema:
              type: boolean
              default: 'false'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: filter by task tag ids
            in: query
            name: taskTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project company ids (deprecated, use projectCompanyIds)
            in: query
            name: projectsFromCompanyId
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tags
                  - tasks
                  - tasks.parentTasks
                  - tasks.tasklists
                  - tasks.users
                  - users
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timelogs]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dateCreated
                  - minutes
                  - description
                  - timeLogged
                  - billable
                  - deleted
                  - dateDeleted
                  - hasStartTime
                  - dateEdited
                  - deskTicketId
                  - userId
                  - taskId
                  - projectId
                  - loggedByUserId
                  - deletedByUserId
                  - editedByUserId
                  - taskIdPreMove
                  - projectBillingInvoiceId
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.TimelogsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get time entries for a specific project
        tags:
          - TimeTracking
      post:
        description: Create a time entry in the desired project.
        operationId: POST_projects_api_v3_projects_{projectId}_time.json
        parameters:
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/timelog.Request'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Create a time entry in a specific project.
        tags:
          - TimeTracking
        x-private: true
    /projects/api/v3/projects/{projectId}/time/total.json:
      get:
        operationId: GET_projects_api_v3_projects_{projectId}_time_total.json
        parameters:
          - description: filter by updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by a starting date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: filter by an ending date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter by user id (deprecated, use assignedToUserIds)
            in: query
            name: userId
            schema:
              type: integer
          - description: filter by tasklist id
            in: query
            name: tasklistId
            schema:
              type: integer
          - description: filter by task id (deprecated, use taskIds)
            in: query
            name: taskId
            schema:
              type: integer
          - in: path
            name: projectId
            required: true
            schema:
              type: integer
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: filter by desk ticket id
            in: query
            name: deskTicketId
            schema:
              type: integer
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: get subtask totals
            in: query
            name: includeDescendants
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: filter by user ids (deprecated, use assignedToUserIds)
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by sub-task status, includeDescendants must be set to true
              for this to have any effect
            in: query
            name: subTaskStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - completed
                  - incomplete
                type: string
              default: all
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.TotalsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get timelog totals for a specific project.
        tags:
          - TimeTracking
    /projects/api/v3/reporting/precanned/companytime.json:
      get:
        description: >-
          Return all logged time entries for all projects grouped by company ID.

          Only the time entries that the logged-in user can access will be
          returned.
        operationId: GET_projects_api_v3_reporting_precanned_companytime.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by a starting date
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort order
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - company
                - date
                - dateupdated
                - project
                - task
                - tasklist
                - user
                - description
                - billed
                - billable
                - timespent
              default: date
          - description: filter by invoiced type
            in: query
            name: invoicedType
            schema:
              type: string
              enum:
                - all
                - invoiced
                - noninvoiced
              default: all
          - description: filter by an ending date
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: filter by billable type
            in: query
            name: billableType
            schema:
              type: string
              enum:
                - all
                - billable
                - non-billable
              default: all
          - description: filter by the user who updated the timelog
            in: query
            name: updatedBy
            schema:
              type: integer
          - description: filter by ticket id
            in: query
            name: ticketId
            schema:
              type: integer
          - description: filter by tasklist id
            in: query
            name: tasklistId
            schema:
              type: integer
          - description: filter by task id (deprecated, use taskIds)
            in: query
            name: taskId
            schema:
              type: integer
          - description: filter by project id (deprecated, use projectIds)
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by budget id
            in: query
            name: budgetId
            schema:
              type: integer
          - description: filter by allocation id
            in: query
            name: allocationId
            schema:
              type: integer
          - description: >-
              filter by timelogs that are directly logged against projects and not
              its child tasks
            in: query
            name: unattachedTimelogs
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all task tags
            in: query
            name: matchAllTaskTags
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include totals
            in: query
            name: includeTotals
            schema:
              type: boolean
              default: 'false'
          - description: include permissions
            in: query
            name: includePermissions
            schema:
              type: boolean
              default: 'false'
          - description: include descendants
            in: query
            name: includeDescendants
            schema:
              type: boolean
              default: 'false'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: filter by task tag ids
            in: query
            name: taskTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project company ids (deprecated, use projectCompanyIds)
            in: query
            name: projectsFromCompanyId
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tags
                  - tasks
                  - tasks.parentTasks
                  - tasks.tasklists
                  - tasks.users
                  - users
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timelogs]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dateCreated
                  - minutes
                  - description
                  - timeLogged
                  - billable
                  - deleted
                  - dateDeleted
                  - hasStartTime
                  - dateEdited
                  - deskTicketId
                  - userId
                  - taskId
                  - projectId
                  - loggedByUserId
                  - deletedByUserId
                  - editedByUserId
                  - taskIdPreMove
                  - projectBillingInvoiceId
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.CompanyTimelogsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all time entries, grouped by company ID
        tags:
          - TimeTracking
    /projects/api/v3/reporting/precanned/health/projects.csv:
      get:
        description: >-
          Generates a project report in CSV format containing all projects for the

          provided filters. Only the projects that the logged-in user can access
          will

          be returned.



          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_reporting_precanned_health_projects.csv
        parameters:
          - description: updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - project
                - health
              default: project
          - description: Optional to configure the report dates displayed in a timezone
            in: query
            name: reportTimezone
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - csv
                - html
                - pdf
                - xls
              default: pdf
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - companyname
                - datecreated
                - duedate
                - lastactivity
                - name
                - namecaseinsensitive
                - ownercompany
                - starred
                - categoryname
              default: name
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter by min last activity date
            in: query
            name: minLastActivityDate
            schema:
              type: string
              format: date
          - description: filter by max last activity date
            in: query
            name: maxLastActivityDate
            schema:
              type: string
              format: date
          - description: currency symbol for report export
            in: query
            name: currencySymbol
            schema:
              type: string
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: filter by minimum budget capacity used
            in: query
            name: minBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: filter by maximum budget capacity used
            in: query
            name: maxBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include companies in the search
            in: query
            name: searchCompanies
            schema:
              type: boolean
          - description: >-
              search projects beginning with the search term character only when
              it contains a single character.
            in: query
            name: searchByLetter
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only show projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
              default: 'false'
          - description: can log time on projects
            in: query
            name: onlyProjectsThatCanLogTime
            schema:
              type: boolean
              default: 'false'
          - description: return only archived projects
            in: query
            name: onlyArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all excluded project tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include alongside normal projects, tentative ones
            in: query
            name: includeTentativeProjects
            schema:
              type: boolean
          - description: include sub categories when filtering by ids
            in: query
            name: includeSubCategories
            schema:
              type: boolean
          - description: >-
              include project status counts for tasks columns billing events
              milestones
            in: query
            name: includeStats
            schema:
              type: boolean
          - description: fetch user-specific data such as isStarred
            in: query
            name: includeProjectUserInfo
            schema:
              type: boolean
              default: 'false'
          - description: include project profitability in response
            in: query
            name: includeProjectProfitability
            schema:
              type: boolean
          - description: include minimum and maximum start/end dates for projects
            in: query
            name: includeProjectDates
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include project related counts
            in: query
            name: includeCounts
            schema:
              type: boolean
          - description: >-
              optional to include completed projects when filtering by project
              statuses "current,late".
            in: query
            name: includeCompletedStatus
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: hide projects where the logged-in user is just an observer
            in: query
            name: hideObservedProjects
            schema:
              type: boolean
              default: 'false'
          - description: includes filters when project ids are provided
            in: query
            name: alwaysIncludeFiltering
            schema:
              type: boolean
          - description: filter by projects that contain users associated with the team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: select the columns to use in exports.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projectOwners
                  - projectUpdates
                  - companies
                  - companies.countries
                  - companies.industries
                  - projectCategories
                  - portfolioCards
                  - portfolioBoards
                  - portfolioColumns
                  - tags
                  - customfields
                  - customfieldProjects
                  - projectBudgets
                  - activities.latest
                  - users
                  - createdBy
                  - updatedBy
                  - completedBy
                  - deletedBy
                type: string
          - in: query
            name: fields[workflows]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - statusId
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[stages]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - stage
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
          - in: query
            name: fields[projectBudgets]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - type
                  - status
                  - capacityUsed
                  - capacity
                  - originatorBudgetId
                  - isRepeating
                  - repeatPeriod
                  - repeatUnit
                  - repeatsRemaining
                  - sequenceNumber
                  - startDateTime
                  - endDateTime
                  - currencyCode
                  - timelogType
                  - expenseType
                  - defaultRate
                  - notificationIds
                  - createdByUserId
                  - dateCreated
                  - updatedUserId
                  - dateUpdated
                  - completedByUserId
                  - dateCompleted
                  - deletedByUserId
                  - dateDeleted
                type: string
          - in: query
            name: fields[portfolioColumns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[portfolioCards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - columnId
                  - projectId
                type: string
          - in: query
            name: fields[portfolioBoards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - in: query
            name: fields[customfieldProjects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - customfieldId
                  - value
                  - createdAt
                  - createdBy
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by projects that have features enabled
            in: query
            name: featuresEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: exclude by project tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/csv:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/csv:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate project report in CSV format
        tags:
          - Projects
    /projects/api/v3/reporting/precanned/health/projects.html:
      get:
        description: >-
          Generates a project report in HTML format containing all projects for
          the

          provided filters. Only the projects that the logged-in user can access
          will

          be returned.



          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_reporting_precanned_health_projects.html
        parameters:
          - description: updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - project
                - health
              default: project
          - description: Optional to configure the report dates displayed in a timezone
            in: query
            name: reportTimezone
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - csv
                - html
                - pdf
                - xls
              default: pdf
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - companyname
                - datecreated
                - duedate
                - lastactivity
                - name
                - namecaseinsensitive
                - ownercompany
                - starred
                - categoryname
              default: name
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter by min last activity date
            in: query
            name: minLastActivityDate
            schema:
              type: string
              format: date
          - description: filter by max last activity date
            in: query
            name: maxLastActivityDate
            schema:
              type: string
              format: date
          - description: currency symbol for report export
            in: query
            name: currencySymbol
            schema:
              type: string
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: filter by minimum budget capacity used
            in: query
            name: minBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: filter by maximum budget capacity used
            in: query
            name: maxBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include companies in the search
            in: query
            name: searchCompanies
            schema:
              type: boolean
          - description: >-
              search projects beginning with the search term character only when
              it contains a single character.
            in: query
            name: searchByLetter
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only show projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
              default: 'false'
          - description: can log time on projects
            in: query
            name: onlyProjectsThatCanLogTime
            schema:
              type: boolean
              default: 'false'
          - description: return only archived projects
            in: query
            name: onlyArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all excluded project tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include alongside normal projects, tentative ones
            in: query
            name: includeTentativeProjects
            schema:
              type: boolean
          - description: include sub categories when filtering by ids
            in: query
            name: includeSubCategories
            schema:
              type: boolean
          - description: >-
              include project status counts for tasks columns billing events
              milestones
            in: query
            name: includeStats
            schema:
              type: boolean
          - description: fetch user-specific data such as isStarred
            in: query
            name: includeProjectUserInfo
            schema:
              type: boolean
              default: 'false'
          - description: include project profitability in response
            in: query
            name: includeProjectProfitability
            schema:
              type: boolean
          - description: include minimum and maximum start/end dates for projects
            in: query
            name: includeProjectDates
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include project related counts
            in: query
            name: includeCounts
            schema:
              type: boolean
          - description: >-
              optional to include completed projects when filtering by project
              statuses "current,late".
            in: query
            name: includeCompletedStatus
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: hide projects where the logged-in user is just an observer
            in: query
            name: hideObservedProjects
            schema:
              type: boolean
              default: 'false'
          - description: includes filters when project ids are provided
            in: query
            name: alwaysIncludeFiltering
            schema:
              type: boolean
          - description: filter by projects that contain users associated with the team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: select the columns to use in exports.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projectOwners
                  - projectUpdates
                  - companies
                  - companies.countries
                  - companies.industries
                  - projectCategories
                  - portfolioCards
                  - portfolioBoards
                  - portfolioColumns
                  - tags
                  - customfields
                  - customfieldProjects
                  - projectBudgets
                  - activities.latest
                  - users
                  - createdBy
                  - updatedBy
                  - completedBy
                  - deletedBy
                type: string
          - in: query
            name: fields[workflows]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - statusId
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[stages]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - stage
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
          - in: query
            name: fields[projectBudgets]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - type
                  - status
                  - capacityUsed
                  - capacity
                  - originatorBudgetId
                  - isRepeating
                  - repeatPeriod
                  - repeatUnit
                  - repeatsRemaining
                  - sequenceNumber
                  - startDateTime
                  - endDateTime
                  - currencyCode
                  - timelogType
                  - expenseType
                  - defaultRate
                  - notificationIds
                  - createdByUserId
                  - dateCreated
                  - updatedUserId
                  - dateUpdated
                  - completedByUserId
                  - dateCompleted
                  - deletedByUserId
                  - dateDeleted
                type: string
          - in: query
            name: fields[portfolioColumns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[portfolioCards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - columnId
                  - projectId
                type: string
          - in: query
            name: fields[portfolioBoards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - in: query
            name: fields[customfieldProjects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - customfieldId
                  - value
                  - createdAt
                  - createdBy
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by projects that have features enabled
            in: query
            name: featuresEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: exclude by project tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/html:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/html:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate project report in HTML format
        tags:
          - Projects
    /projects/api/v3/reporting/precanned/health/projects.pdf:
      get:
        description: >-
          Generates a project report in PDF format containing all projects for the

          provided filters. Only the projects that the logged-in user can access
          will

          be returned.



          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_reporting_precanned_health_projects.pdf
        parameters:
          - description: updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - project
                - health
              default: project
          - description: Optional to configure the report dates displayed in a timezone
            in: query
            name: reportTimezone
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - csv
                - html
                - pdf
                - xls
              default: pdf
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - companyname
                - datecreated
                - duedate
                - lastactivity
                - name
                - namecaseinsensitive
                - ownercompany
                - starred
                - categoryname
              default: name
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter by min last activity date
            in: query
            name: minLastActivityDate
            schema:
              type: string
              format: date
          - description: filter by max last activity date
            in: query
            name: maxLastActivityDate
            schema:
              type: string
              format: date
          - description: currency symbol for report export
            in: query
            name: currencySymbol
            schema:
              type: string
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: filter by minimum budget capacity used
            in: query
            name: minBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: filter by maximum budget capacity used
            in: query
            name: maxBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include companies in the search
            in: query
            name: searchCompanies
            schema:
              type: boolean
          - description: >-
              search projects beginning with the search term character only when
              it contains a single character.
            in: query
            name: searchByLetter
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only show projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
              default: 'false'
          - description: can log time on projects
            in: query
            name: onlyProjectsThatCanLogTime
            schema:
              type: boolean
              default: 'false'
          - description: return only archived projects
            in: query
            name: onlyArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all excluded project tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include alongside normal projects, tentative ones
            in: query
            name: includeTentativeProjects
            schema:
              type: boolean
          - description: include sub categories when filtering by ids
            in: query
            name: includeSubCategories
            schema:
              type: boolean
          - description: >-
              include project status counts for tasks columns billing events
              milestones
            in: query
            name: includeStats
            schema:
              type: boolean
          - description: fetch user-specific data such as isStarred
            in: query
            name: includeProjectUserInfo
            schema:
              type: boolean
              default: 'false'
          - description: include project profitability in response
            in: query
            name: includeProjectProfitability
            schema:
              type: boolean
          - description: include minimum and maximum start/end dates for projects
            in: query
            name: includeProjectDates
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include project related counts
            in: query
            name: includeCounts
            schema:
              type: boolean
          - description: >-
              optional to include completed projects when filtering by project
              statuses "current,late".
            in: query
            name: includeCompletedStatus
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: hide projects where the logged-in user is just an observer
            in: query
            name: hideObservedProjects
            schema:
              type: boolean
              default: 'false'
          - description: includes filters when project ids are provided
            in: query
            name: alwaysIncludeFiltering
            schema:
              type: boolean
          - description: filter by projects that contain users associated with the team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: select the columns to use in exports.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projectOwners
                  - projectUpdates
                  - companies
                  - companies.countries
                  - companies.industries
                  - projectCategories
                  - portfolioCards
                  - portfolioBoards
                  - portfolioColumns
                  - tags
                  - customfields
                  - customfieldProjects
                  - projectBudgets
                  - activities.latest
                  - users
                  - createdBy
                  - updatedBy
                  - completedBy
                  - deletedBy
                type: string
          - in: query
            name: fields[workflows]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - statusId
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[stages]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - stage
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
          - in: query
            name: fields[projectBudgets]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - type
                  - status
                  - capacityUsed
                  - capacity
                  - originatorBudgetId
                  - isRepeating
                  - repeatPeriod
                  - repeatUnit
                  - repeatsRemaining
                  - sequenceNumber
                  - startDateTime
                  - endDateTime
                  - currencyCode
                  - timelogType
                  - expenseType
                  - defaultRate
                  - notificationIds
                  - createdByUserId
                  - dateCreated
                  - updatedUserId
                  - dateUpdated
                  - completedByUserId
                  - dateCompleted
                  - deletedByUserId
                  - dateDeleted
                type: string
          - in: query
            name: fields[portfolioColumns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[portfolioCards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - columnId
                  - projectId
                type: string
          - in: query
            name: fields[portfolioBoards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - in: query
            name: fields[customfieldProjects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - customfieldId
                  - value
                  - createdAt
                  - createdBy
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by projects that have features enabled
            in: query
            name: featuresEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: exclude by project tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/pdf:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/pdf:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate project report in PDF format
        tags:
          - Projects
    /projects/api/v3/reporting/precanned/health/projects.xlsx:
      get:
        description: >-
          Generates a project report in XLSX format containing all projects for
          the

          provided filters. Only the projects that the logged-in user can access
          will

          be returned.



          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_reporting_precanned_health_projects.xlsx
        parameters:
          - description: updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by project name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - project
                - health
              default: project
          - description: Optional to configure the report dates displayed in a timezone
            in: query
            name: reportTimezone
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - csv
                - html
                - pdf
                - xls
              default: pdf
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - companyname
                - datecreated
                - duedate
                - lastactivity
                - name
                - namecaseinsensitive
                - ownercompany
                - starred
                - categoryname
              default: name
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter by min last activity date
            in: query
            name: minLastActivityDate
            schema:
              type: string
              format: date
          - description: filter by max last activity date
            in: query
            name: maxLastActivityDate
            schema:
              type: string
              format: date
          - description: currency symbol for report export
            in: query
            name: currencySymbol
            schema:
              type: string
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: filter by minimum budget capacity used
            in: query
            name: minBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: filter by maximum budget capacity used
            in: query
            name: maxBudgetCapacityUsedPercent
            schema:
              type: integer
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include companies in the search
            in: query
            name: searchCompanies
            schema:
              type: boolean
          - description: >-
              search projects beginning with the search term character only when
              it contains a single character.
            in: query
            name: searchByLetter
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: only show projects with explicit membership
            in: query
            name: onlyProjectsWithExplicitMembership
            schema:
              type: boolean
              default: 'false'
          - description: can log time on projects
            in: query
            name: onlyProjectsThatCanLogTime
            schema:
              type: boolean
              default: 'false'
          - description: return only archived projects
            in: query
            name: onlyArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all excluded project tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include alongside normal projects, tentative ones
            in: query
            name: includeTentativeProjects
            schema:
              type: boolean
          - description: include sub categories when filtering by ids
            in: query
            name: includeSubCategories
            schema:
              type: boolean
          - description: >-
              include project status counts for tasks columns billing events
              milestones
            in: query
            name: includeStats
            schema:
              type: boolean
          - description: fetch user-specific data such as isStarred
            in: query
            name: includeProjectUserInfo
            schema:
              type: boolean
              default: 'false'
          - description: include project profitability in response
            in: query
            name: includeProjectProfitability
            schema:
              type: boolean
          - description: include minimum and maximum start/end dates for projects
            in: query
            name: includeProjectDates
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include project related counts
            in: query
            name: includeCounts
            schema:
              type: boolean
          - description: >-
              optional to include completed projects when filtering by project
              statuses "current,late".
            in: query
            name: includeCompletedStatus
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: hide projects where the logged-in user is just an observer
            in: query
            name: hideObservedProjects
            schema:
              type: boolean
              default: 'false'
          - description: includes filters when project ids are provided
            in: query
            name: alwaysIncludeFiltering
            schema:
              type: boolean
          - description: filter by projects that contain users associated with the team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: select the columns to use in exports.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projectOwners
                  - projectUpdates
                  - companies
                  - companies.countries
                  - companies.industries
                  - projectCategories
                  - portfolioCards
                  - portfolioBoards
                  - portfolioColumns
                  - tags
                  - customfields
                  - customfieldProjects
                  - projectBudgets
                  - activities.latest
                  - users
                  - createdBy
                  - updatedBy
                  - completedBy
                  - deletedBy
                type: string
          - in: query
            name: fields[workflows]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - statusId
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[stages]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - stage
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[projectUpdates]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - text
                  - isActive
                  - health
                  - color
                  - dateCreated
                  - deleted
                  - deletedDate
                  - numLikes
                  - reactions
                type: string
          - in: query
            name: fields[projectBudgets]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - type
                  - status
                  - capacityUsed
                  - capacity
                  - originatorBudgetId
                  - isRepeating
                  - repeatPeriod
                  - repeatUnit
                  - repeatsRemaining
                  - sequenceNumber
                  - startDateTime
                  - endDateTime
                  - currencyCode
                  - timelogType
                  - expenseType
                  - defaultRate
                  - notificationIds
                  - createdByUserId
                  - dateCreated
                  - updatedUserId
                  - dateUpdated
                  - completedByUserId
                  - dateCompleted
                  - deletedByUserId
                  - dateDeleted
                type: string
          - in: query
            name: fields[portfolioColumns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[portfolioCards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - columnId
                  - projectId
                type: string
          - in: query
            name: fields[portfolioBoards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                type: string
          - in: query
            name: fields[industries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - in: query
            name: fields[customfieldProjects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - customfieldId
                  - value
                  - createdAt
                  - createdBy
                type: string
          - in: query
            name: fields[countries]
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by projects that have features enabled
            in: query
            name: featuresEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: exclude by project tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate project report in XLSX format
        tags:
          - Projects
    /projects/api/v3/reporting/precanned/plannedvsactual/milestones.csv:
      get:
        description: >-
          Generates a milestone report in CSV format containing all milestones for
          the

          provided filters. Only the milestones that the logged-in user can access
          will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_plannedvsactual_milestones.csv
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by milestone name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - calendar
                - agenda
              default: agenda
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - date
                - dateonly
                - name
                - project
                - user
                - dateCreated
                - dateUpdated
              default: date
          - description: filter by due before date (deprecated, use dueBefore)
            in: query
            name: dueBeforeDate
            schema:
              type: string
              format: date
          - description: filter by due before date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter by due after date (deprecated, use dueAfter)
            in: query
            name: dueAfterDate
            schema:
              type: string
              format: date
          - description: filter by due after date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: show private milestones
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: show attached tasklists
            in: query
            name: showAttachedTasklists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: progress
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: filter by projects that the logged-in user is related
            in: query
            name: onlyMyProjects
            schema:
              type: boolean
              default: 'false'
          - description: >-
              only include milestones from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: match all milestone tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include milestones latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include today when milestone status is upcoming
            in: query
            name: includeToday
            schema:
              type: boolean
              default: 'true'
          - description: include team users to the responsible party ids
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include tags in the reports
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: includeProgress
            schema:
              type: boolean
              default: 'false'
          - description: include percentage of tasks completed for all linked tasklists
            in: query
            name: includePercentageComplete
            schema:
              type: boolean
              default: 'false'
          - description: optional to include completed milestones
            in: query
            name: includeCompleted
            schema:
              type: boolean
          - description: include company users to the responsible party ids
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: convert emoji alias to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: count unread comments
            in: query
            name: countUnreadComments
            schema:
              type: boolean
              default: 'false'
          - description: enables the calendar style layout
            in: query
            name: calendar
            schema:
              type: boolean
              default: 'false'
          - description: filter by milestone tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of milestone status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - new
                  - reopened
                  - completed
                  - deleted
                  - pending
                  - incomplete
                  - late
                  - today
                  - upcoming
                type: string
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health (deprecated, use projectHealths)
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - users
                  - completedBy
                  - createdBy
                  - deletedBy
                  - updatedBy
                  - commentFollowers
                  - changeFollowers
                  - tags
                  - tasklists
                  - tasklisttaskstats
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followers' ids
            in: query
            name: followerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by creators' ids
            in: query
            name: creatorIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/csv:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate milestone report in CSV format
        tags:
          - Milestones
    /projects/api/v3/reporting/precanned/plannedvsactual/milestones.html:
      get:
        description: >-
          Generates a milestone report in HTML format containing all milestones
          for the

          provided filters. Only the milestones that the logged-in user can access
          will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_plannedvsactual_milestones.html
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by milestone name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - calendar
                - agenda
              default: agenda
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - date
                - dateonly
                - name
                - project
                - user
                - dateCreated
                - dateUpdated
              default: date
          - description: filter by due before date (deprecated, use dueBefore)
            in: query
            name: dueBeforeDate
            schema:
              type: string
              format: date
          - description: filter by due before date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter by due after date (deprecated, use dueAfter)
            in: query
            name: dueAfterDate
            schema:
              type: string
              format: date
          - description: filter by due after date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: show private milestones
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: show attached tasklists
            in: query
            name: showAttachedTasklists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: progress
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: filter by projects that the logged-in user is related
            in: query
            name: onlyMyProjects
            schema:
              type: boolean
              default: 'false'
          - description: >-
              only include milestones from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: match all milestone tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include milestones latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include today when milestone status is upcoming
            in: query
            name: includeToday
            schema:
              type: boolean
              default: 'true'
          - description: include team users to the responsible party ids
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include tags in the reports
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: includeProgress
            schema:
              type: boolean
              default: 'false'
          - description: include percentage of tasks completed for all linked tasklists
            in: query
            name: includePercentageComplete
            schema:
              type: boolean
              default: 'false'
          - description: optional to include completed milestones
            in: query
            name: includeCompleted
            schema:
              type: boolean
          - description: include company users to the responsible party ids
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: convert emoji alias to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: count unread comments
            in: query
            name: countUnreadComments
            schema:
              type: boolean
              default: 'false'
          - description: enables the calendar style layout
            in: query
            name: calendar
            schema:
              type: boolean
              default: 'false'
          - description: filter by milestone tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of milestone status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - new
                  - reopened
                  - completed
                  - deleted
                  - pending
                  - incomplete
                  - late
                  - today
                  - upcoming
                type: string
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health (deprecated, use projectHealths)
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - users
                  - completedBy
                  - createdBy
                  - deletedBy
                  - updatedBy
                  - commentFollowers
                  - changeFollowers
                  - tags
                  - tasklists
                  - tasklisttaskstats
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followers' ids
            in: query
            name: followerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by creators' ids
            in: query
            name: creatorIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/html:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate milestone report in HTML format
        tags:
          - Milestones
    /projects/api/v3/reporting/precanned/plannedvsactual/milestones.pdf:
      get:
        description: >-
          Generates a milestone report in PDF format containing all milestones for
          the

          provided filters. Only the milestones that the logged-in user can access
          will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_plannedvsactual_milestones.pdf
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by milestone name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - calendar
                - agenda
              default: agenda
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - date
                - dateonly
                - name
                - project
                - user
                - dateCreated
                - dateUpdated
              default: date
          - description: filter by due before date (deprecated, use dueBefore)
            in: query
            name: dueBeforeDate
            schema:
              type: string
              format: date
          - description: filter by due before date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter by due after date (deprecated, use dueAfter)
            in: query
            name: dueAfterDate
            schema:
              type: string
              format: date
          - description: filter by due after date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: show private milestones
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: show attached tasklists
            in: query
            name: showAttachedTasklists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: progress
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: filter by projects that the logged-in user is related
            in: query
            name: onlyMyProjects
            schema:
              type: boolean
              default: 'false'
          - description: >-
              only include milestones from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: match all milestone tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include milestones latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include today when milestone status is upcoming
            in: query
            name: includeToday
            schema:
              type: boolean
              default: 'true'
          - description: include team users to the responsible party ids
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include tags in the reports
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: includeProgress
            schema:
              type: boolean
              default: 'false'
          - description: include percentage of tasks completed for all linked tasklists
            in: query
            name: includePercentageComplete
            schema:
              type: boolean
              default: 'false'
          - description: optional to include completed milestones
            in: query
            name: includeCompleted
            schema:
              type: boolean
          - description: include company users to the responsible party ids
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: convert emoji alias to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: count unread comments
            in: query
            name: countUnreadComments
            schema:
              type: boolean
              default: 'false'
          - description: enables the calendar style layout
            in: query
            name: calendar
            schema:
              type: boolean
              default: 'false'
          - description: filter by milestone tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of milestone status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - new
                  - reopened
                  - completed
                  - deleted
                  - pending
                  - incomplete
                  - late
                  - today
                  - upcoming
                type: string
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health (deprecated, use projectHealths)
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - users
                  - completedBy
                  - createdBy
                  - deletedBy
                  - updatedBy
                  - commentFollowers
                  - changeFollowers
                  - tags
                  - tasklists
                  - tasklisttaskstats
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followers' ids
            in: query
            name: followerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by creators' ids
            in: query
            name: creatorIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/pdf:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate milestone report in PDF format
        tags:
          - Milestones
    /projects/api/v3/reporting/precanned/plannedvsactual/milestones.xlsx:
      get:
        description: >-
          Generates a milestone report in XLSX format containing all milestones
          for the

          provided filters. Only the milestones that the logged-in user can access
          will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_plannedvsactual_milestones.xlsx
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by milestone name and description
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - calendar
                - agenda
              default: agenda
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - date
                - dateonly
                - name
                - project
                - user
                - dateCreated
                - dateUpdated
              default: date
          - description: filter by due before date (deprecated, use dueBefore)
            in: query
            name: dueBeforeDate
            schema:
              type: string
              format: date
          - description: filter by due before date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter by due after date (deprecated, use dueAfter)
            in: query
            name: dueAfterDate
            schema:
              type: string
              format: date
          - description: filter by due after date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: show private milestones
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: show attached tasklists
            in: query
            name: showAttachedTasklists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: progress
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: filter by projects that the logged-in user is related
            in: query
            name: onlyMyProjects
            schema:
              type: boolean
              default: 'false'
          - description: >-
              only include milestones from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: match all milestone tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include milestones latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include today when milestone status is upcoming
            in: query
            name: includeToday
            schema:
              type: boolean
              default: 'true'
          - description: include team users to the responsible party ids
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include tags in the reports
            in: query
            name: includeTags
            schema:
              type: boolean
              default: 'true'
          - description: >-
              include percentage of tasks completed for all linked tasklists
              (deprecated, use includePercentageComplete)
            in: query
            name: includeProgress
            schema:
              type: boolean
              default: 'false'
          - description: include percentage of tasks completed for all linked tasklists
            in: query
            name: includePercentageComplete
            schema:
              type: boolean
              default: 'false'
          - description: optional to include completed milestones
            in: query
            name: includeCompleted
            schema:
              type: boolean
          - description: include company users to the responsible party ids
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: convert emoji alias to unicode
            in: query
            name: emoji
            schema:
              type: boolean
              default: 'true'
          - description: count unread comments
            in: query
            name: countUnreadComments
            schema:
              type: boolean
              default: 'false'
          - description: enables the calendar style layout
            in: query
            name: calendar
            schema:
              type: boolean
              default: 'false'
          - description: filter by milestone tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of milestone status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - new
                  - reopened
                  - completed
                  - deleted
                  - pending
                  - incomplete
                  - late
                  - today
                  - upcoming
                type: string
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of project health (deprecated, use projectHealths)
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - users
                  - completedBy
                  - createdBy
                  - deletedBy
                  - updatedBy
                  - commentFollowers
                  - changeFollowers
                  - tags
                  - tasklists
                  - tasklisttaskstats
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followers' ids
            in: query
            name: followerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by creators' ids
            in: query
            name: creatorIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate milestone report in XLSX format
        tags:
          - Milestones
    /projects/api/v3/reporting/precanned/plannedvsactual/tasks.csv:
      get:
        description: >-
          Generates a plannedvsactual report in CSV format containing all tasks
          for the

          provided filters. Only the tasks that the logged-in user can access will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_plannedvsactual_tasks.csv
        parameters:
          - description: filter by updated before date
            in: query
            name: updatedBefore
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by today
            in: query
            name: today
            schema:
              type: string
              format: date-time
          - description: filter by a taskFilter
            in: query
            name: taskFilter
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
          - description: filter on start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - task
                - tasktime
              default: task
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - html
                - pdf
              default: pdf
          - description: filter by task priority
            in: query
            name: priority
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedat
                - duestartdate
                - alldates
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
                - createdby
                - completedby
                - assignedto
                - taskstatus
                - taskduedate
                - customfield
                - estimatedtime
                - boardcolumn
                - taskgroupid
                - taskgroupname
                - taskgroup
                - displayorder
                - projectmanual
                - stagedisplayorder
                - stage
              default: duedate
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter on end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter before a due date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter after a due date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: filter on deleted after date
            in: query
            name: deletedAfter
            schema:
              type: string
              format: date-time
          - description: filter by created filter
            in: query
            name: createdFilter
            schema:
              type: string
              enum:
                - anytime
                - today
                - yesterday
                - custom
          - description: filter by created date code
            in: query
            name: createdDateCode
            schema:
              type: string
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: filter by completed before date
            in: query
            name: completedBefore
            schema:
              type: string
              format: date-time
          - description: filter by completed after date
            in: query
            name: completedAfter
            schema:
              type: string
              format: date-time
          - description: filter by updated user id
            in: query
            name: updatedByUserId
            schema:
              type: integer
          - description: filter by parent task ids
            in: query
            name: parentTaskId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: include task id
            in: query
            name: includeTaskId
            schema:
              type: integer
          - description: provide a user saved filter ID
            in: query
            name: filterId
            schema:
              type: integer
          - description: filter by completed user id
            in: query
            name: completedByUserId
            schema:
              type: integer
          - description: use daterange logic from table when getting the tasks
            in: query
            name: useTaskDateRange
            schema:
              type: boolean
              default: 'false'
          - description: use start dates for todays tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: filter on all projects
            in: query
            name: useAllProjects
            schema:
              type: boolean
          - description: sort active tasks first
            in: query
            name: sortActiveFirst
            schema:
              type: boolean
              default: 'false'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include tasks from completed lists
            in: query
            name: showCompletedLists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: only untagged tasks
            in: query
            name: onlyUntaggedTasks
            schema:
              type: boolean
          - description: |-
              only return tasks that are unplanned. Not assigned, no due date or
              missing estimated time.
            in: query
            name: onlyUnplanned
            schema:
              type: boolean
              default: 'false'
          - description: filter by only tasks with unread comments
            in: query
            name: onlyTasksWithUnreadComments
            schema:
              type: boolean
          - description: filter by only tasks with tickets
            in: query
            name: onlyTasksWithTickets
            schema:
              type: boolean
          - description: only return tasks with estimated time
            in: query
            name: onlyTasksWithEstimatedTime
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: >-
              only include tasks from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: nest sub tasks
            in: query
            name: nestSubTasks
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include tasks latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include untagged tasks
            in: query
            name: includeUntaggedTasks
            schema:
              type: boolean
          - description: filter by include tomorrow
            in: query
            name: includeTomorrow
            schema:
              type: boolean
          - description: filter by include today
            in: query
            name: includeToday
            schema:
              type: boolean
          - description: include members of the given teams
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
          - description: include tasks without due dates
            in: query
            name: includeTasksWithoutDueDates
            schema:
              type: boolean
          - description: include tasks with cards
            in: query
            name: includeTasksWithCards
            schema:
              type: boolean
              default: 'true'
          - description: include tasks from deleted lists
            in: query
            name: includeTasksFromDeletedLists
            schema:
              type: boolean
          - description: >-
              include ids of completed and active subtasks, dependencies,
              predecessors
            in: query
            name: includeRelatedTasks
            schema:
              type: boolean
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
          - description: include overdue tasks
            in: query
            name: includeOverdueTasks
            schema:
              type: boolean
          - description: include original due date of a task
            in: query
            name: includeOriginalDueDate
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
          - description: include members of the given companies
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
          - description: include number of unread and read comments for each task
            in: query
            name: includeCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: filter by include blocked
            in: query
            name: includeBlocked
            schema:
              type: boolean
          - description: include number of unread and read comments for each file attachment
            in: query
            name: includeAttachmentCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
          - description: group by tasklist
            in: query
            name: groupByTasklist
            schema:
              type: boolean
          - description: group by taskgroup
            in: query
            name: groupByTaskgroup
            schema:
              type: boolean
          - description: get sub tasks
            in: query
            name: getSubTasks
            schema:
              type: boolean
          - description: get files
            in: query
            name: getFiles
            schema:
              type: boolean
          - description: >-
              set due date as milestone due date if due date is null and there's a
              related milestone
            in: query
            name: fallbackToMilestoneDueDate
            schema:
              type: boolean
          - description: >-
              For tasks created in a project template it's possible to assign a
              role instead of people, companies or teams.

              This role is then stored with the task name as a prefix. When this
              flag is enabled it will extract the role name

              and return it inside a special field.
            in: query
            name: extractTemplateRoleName
            schema:
              type: boolean
          - description: exclude assignee not on project teams
            in: query
            name: excludeAssigneeNotOnProjectTeams
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: check if task has reminders
            in: query
            name: checkForReminders
            schema:
              type: boolean
          - description: >-
              when filtering by assigned or unassagned tasks, include assignees
              that

              are not in the project.
            in: query
            name: allowAssigneesOutsideProject
            schema:
              type: boolean
              default: 'true'
          - description: >-
              customise the report by selecting columns to be displayed for tasks
              report
            in: query
            name: tasksSelectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tasklist ids
            in: query
            name: tasklistIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by taskgroup ids
            in: query
            name: taskgroupIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task included set
            in: query
            name: taskIncludedSet
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - overdue
                  - nodate
                  - nostartdate
                  - noduedate
                  - nostartwithfutureduedate
                  - taskListNames
                  - projectNames
                type: string
          - description: filter by tag values
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of task status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - upcoming
                  - late
                  - all
                type: string
          - description: skip crm deal ids
            in: query
            name: skipCRMDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: >-
              customise the report by selecting columns to be displayed for
              planned vs actual.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by responsible party ids
            in: query
            name: responsiblePartyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by projects that have features enabled
            in: query
            name: projectFeaturesEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tasklists
                  - parentTasks
                  - companies
                  - teams
                  - users
                  - milestones
                  - comments
                  - comments.users
                  - tags
                  - cards
                  - cards.columns
                  - timeTotals
                  - taskSequences
                  - commentFollowers
                  - changeFollowers
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                  - attachments
                  - attachments.users
                  - subtaskStats
                  - timers
                  - predecessors
                  - permissions
                type: string
          - description: filter by task ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followed by user ids
            in: query
            name: followedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by board column ids
            in: query
            name: filterBoardColumnIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[taskgroups]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - displayOrder
                  - projectId
                  - status
                type: string
          - in: query
            name: fields[taskSequences]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - installationId
                  - frequency
                  - selectedWeekDays
                  - endDate
                  - monthlyRepeatType
                  - duration
                  - rrule
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[files]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - isPrivate
                  - latestFileVersionNo
                  - versionId
                  - status
                  - description
                  - lockdownId
                  - tagIds
                  - changeFollowers
                  - commentFollowers
                  - originalName
                  - displayName
                  - isLocked
                  - lockedByUserId
                  - lockedDate
                  - size
                  - uploadedDate
                  - uploadedByUserID
                  - updatedAt
                  - deletedAt
                  - deletedBy
                  - fileSource
                  - projectId
                  - numLikes
                  - reactions
                  - versions
                  - downloadURL
                  - previewURL
                  - thumbURL
                  - relatedItems
                  - commentsCount
                  - commentsCountRead
                  - categoryId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[comments]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - objectType
                  - objectId
                  - title
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - displayOrder
                  - createdAt
                  - updatedAt
                  - settings
                  - sort
                  - sortOrder
                  - deletedAt
                  - project
                  - hasTriggers
                  - deleted
                  - stats
                  - defaultTasklist
                type: string
          - in: query
            name: fields[cards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - displayOrder
                  - archived
                  - archivedAt
                  - archivedBy
                  - createdAt
                  - createBy
                  - updatedAt
                  - visible
                  - status
                  - deleteBy
                  - deletedAt
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: the ids of the expanded tasks
            in: query
            name: expandedIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by crm deal ids
            in: query
            name: crmDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by creator user ids
            in: query
            name: createdByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee team ids
            in: query
            name: assigneeTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee company ids
            in: query
            name: assigneeCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/csv:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate plannedvsactual report in CSV format
        tags:
          - Tasks
    /projects/api/v3/reporting/precanned/plannedvsactual/tasks.html:
      get:
        description: >-
          Generates a plannedvsactual report in HTML format containing all tasks
          for the

          provided filters. Only the tasks that the logged-in user can access will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_plannedvsactual_tasks.html
        parameters:
          - description: filter by updated before date
            in: query
            name: updatedBefore
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by today
            in: query
            name: today
            schema:
              type: string
              format: date-time
          - description: filter by a taskFilter
            in: query
            name: taskFilter
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
          - description: filter on start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - task
                - tasktime
              default: task
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - html
                - pdf
              default: pdf
          - description: filter by task priority
            in: query
            name: priority
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedat
                - duestartdate
                - alldates
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
                - createdby
                - completedby
                - assignedto
                - taskstatus
                - taskduedate
                - customfield
                - estimatedtime
                - boardcolumn
                - taskgroupid
                - taskgroupname
                - taskgroup
                - displayorder
                - projectmanual
                - stagedisplayorder
                - stage
              default: duedate
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter on end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter before a due date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter after a due date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: filter on deleted after date
            in: query
            name: deletedAfter
            schema:
              type: string
              format: date-time
          - description: filter by created filter
            in: query
            name: createdFilter
            schema:
              type: string
              enum:
                - anytime
                - today
                - yesterday
                - custom
          - description: filter by created date code
            in: query
            name: createdDateCode
            schema:
              type: string
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: filter by completed before date
            in: query
            name: completedBefore
            schema:
              type: string
              format: date-time
          - description: filter by completed after date
            in: query
            name: completedAfter
            schema:
              type: string
              format: date-time
          - description: filter by updated user id
            in: query
            name: updatedByUserId
            schema:
              type: integer
          - description: filter by parent task ids
            in: query
            name: parentTaskId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: include task id
            in: query
            name: includeTaskId
            schema:
              type: integer
          - description: provide a user saved filter ID
            in: query
            name: filterId
            schema:
              type: integer
          - description: filter by completed user id
            in: query
            name: completedByUserId
            schema:
              type: integer
          - description: use daterange logic from table when getting the tasks
            in: query
            name: useTaskDateRange
            schema:
              type: boolean
              default: 'false'
          - description: use start dates for todays tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: filter on all projects
            in: query
            name: useAllProjects
            schema:
              type: boolean
          - description: sort active tasks first
            in: query
            name: sortActiveFirst
            schema:
              type: boolean
              default: 'false'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include tasks from completed lists
            in: query
            name: showCompletedLists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: only untagged tasks
            in: query
            name: onlyUntaggedTasks
            schema:
              type: boolean
          - description: |-
              only return tasks that are unplanned. Not assigned, no due date or
              missing estimated time.
            in: query
            name: onlyUnplanned
            schema:
              type: boolean
              default: 'false'
          - description: filter by only tasks with unread comments
            in: query
            name: onlyTasksWithUnreadComments
            schema:
              type: boolean
          - description: filter by only tasks with tickets
            in: query
            name: onlyTasksWithTickets
            schema:
              type: boolean
          - description: only return tasks with estimated time
            in: query
            name: onlyTasksWithEstimatedTime
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: >-
              only include tasks from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: nest sub tasks
            in: query
            name: nestSubTasks
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include tasks latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include untagged tasks
            in: query
            name: includeUntaggedTasks
            schema:
              type: boolean
          - description: filter by include tomorrow
            in: query
            name: includeTomorrow
            schema:
              type: boolean
          - description: filter by include today
            in: query
            name: includeToday
            schema:
              type: boolean
          - description: include members of the given teams
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
          - description: include tasks without due dates
            in: query
            name: includeTasksWithoutDueDates
            schema:
              type: boolean
          - description: include tasks with cards
            in: query
            name: includeTasksWithCards
            schema:
              type: boolean
              default: 'true'
          - description: include tasks from deleted lists
            in: query
            name: includeTasksFromDeletedLists
            schema:
              type: boolean
          - description: >-
              include ids of completed and active subtasks, dependencies,
              predecessors
            in: query
            name: includeRelatedTasks
            schema:
              type: boolean
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
          - description: include overdue tasks
            in: query
            name: includeOverdueTasks
            schema:
              type: boolean
          - description: include original due date of a task
            in: query
            name: includeOriginalDueDate
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
          - description: include members of the given companies
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
          - description: include number of unread and read comments for each task
            in: query
            name: includeCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: filter by include blocked
            in: query
            name: includeBlocked
            schema:
              type: boolean
          - description: include number of unread and read comments for each file attachment
            in: query
            name: includeAttachmentCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
          - description: group by tasklist
            in: query
            name: groupByTasklist
            schema:
              type: boolean
          - description: group by taskgroup
            in: query
            name: groupByTaskgroup
            schema:
              type: boolean
          - description: get sub tasks
            in: query
            name: getSubTasks
            schema:
              type: boolean
          - description: get files
            in: query
            name: getFiles
            schema:
              type: boolean
          - description: >-
              set due date as milestone due date if due date is null and there's a
              related milestone
            in: query
            name: fallbackToMilestoneDueDate
            schema:
              type: boolean
          - description: >-
              For tasks created in a project template it's possible to assign a
              role instead of people, companies or teams.

              This role is then stored with the task name as a prefix. When this
              flag is enabled it will extract the role name

              and return it inside a special field.
            in: query
            name: extractTemplateRoleName
            schema:
              type: boolean
          - description: exclude assignee not on project teams
            in: query
            name: excludeAssigneeNotOnProjectTeams
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: check if task has reminders
            in: query
            name: checkForReminders
            schema:
              type: boolean
          - description: >-
              when filtering by assigned or unassagned tasks, include assignees
              that

              are not in the project.
            in: query
            name: allowAssigneesOutsideProject
            schema:
              type: boolean
              default: 'true'
          - description: >-
              customise the report by selecting columns to be displayed for tasks
              report
            in: query
            name: tasksSelectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tasklist ids
            in: query
            name: tasklistIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by taskgroup ids
            in: query
            name: taskgroupIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task included set
            in: query
            name: taskIncludedSet
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - overdue
                  - nodate
                  - nostartdate
                  - noduedate
                  - nostartwithfutureduedate
                  - taskListNames
                  - projectNames
                type: string
          - description: filter by tag values
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of task status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - upcoming
                  - late
                  - all
                type: string
          - description: skip crm deal ids
            in: query
            name: skipCRMDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: >-
              customise the report by selecting columns to be displayed for
              planned vs actual.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by responsible party ids
            in: query
            name: responsiblePartyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by projects that have features enabled
            in: query
            name: projectFeaturesEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tasklists
                  - parentTasks
                  - companies
                  - teams
                  - users
                  - milestones
                  - comments
                  - comments.users
                  - tags
                  - cards
                  - cards.columns
                  - timeTotals
                  - taskSequences
                  - commentFollowers
                  - changeFollowers
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                  - attachments
                  - attachments.users
                  - subtaskStats
                  - timers
                  - predecessors
                  - permissions
                type: string
          - description: filter by task ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followed by user ids
            in: query
            name: followedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by board column ids
            in: query
            name: filterBoardColumnIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[taskgroups]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - displayOrder
                  - projectId
                  - status
                type: string
          - in: query
            name: fields[taskSequences]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - installationId
                  - frequency
                  - selectedWeekDays
                  - endDate
                  - monthlyRepeatType
                  - duration
                  - rrule
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[files]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - isPrivate
                  - latestFileVersionNo
                  - versionId
                  - status
                  - description
                  - lockdownId
                  - tagIds
                  - changeFollowers
                  - commentFollowers
                  - originalName
                  - displayName
                  - isLocked
                  - lockedByUserId
                  - lockedDate
                  - size
                  - uploadedDate
                  - uploadedByUserID
                  - updatedAt
                  - deletedAt
                  - deletedBy
                  - fileSource
                  - projectId
                  - numLikes
                  - reactions
                  - versions
                  - downloadURL
                  - previewURL
                  - thumbURL
                  - relatedItems
                  - commentsCount
                  - commentsCountRead
                  - categoryId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[comments]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - objectType
                  - objectId
                  - title
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - displayOrder
                  - createdAt
                  - updatedAt
                  - settings
                  - sort
                  - sortOrder
                  - deletedAt
                  - project
                  - hasTriggers
                  - deleted
                  - stats
                  - defaultTasklist
                type: string
          - in: query
            name: fields[cards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - displayOrder
                  - archived
                  - archivedAt
                  - archivedBy
                  - createdAt
                  - createBy
                  - updatedAt
                  - visible
                  - status
                  - deleteBy
                  - deletedAt
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: the ids of the expanded tasks
            in: query
            name: expandedIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by crm deal ids
            in: query
            name: crmDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by creator user ids
            in: query
            name: createdByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee team ids
            in: query
            name: assigneeTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee company ids
            in: query
            name: assigneeCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/html:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate plannedvsactual report in HTML format
        tags:
          - Tasks
    /projects/api/v3/reporting/precanned/plannedvsactual/tasks.pdf:
      get:
        description: >-
          Generates a plannedvsactual report in PDF format containing all tasks
          for the

          provided filters. Only the tasks that the logged-in user can access will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_plannedvsactual_tasks.pdf
        parameters:
          - description: filter by updated before date
            in: query
            name: updatedBefore
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by today
            in: query
            name: today
            schema:
              type: string
              format: date-time
          - description: filter by a taskFilter
            in: query
            name: taskFilter
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
          - description: filter on start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - task
                - tasktime
              default: task
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - html
                - pdf
              default: pdf
          - description: filter by task priority
            in: query
            name: priority
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedat
                - duestartdate
                - alldates
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
                - createdby
                - completedby
                - assignedto
                - taskstatus
                - taskduedate
                - customfield
                - estimatedtime
                - boardcolumn
                - taskgroupid
                - taskgroupname
                - taskgroup
                - displayorder
                - projectmanual
                - stagedisplayorder
                - stage
              default: duedate
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter on end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter before a due date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter after a due date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: filter on deleted after date
            in: query
            name: deletedAfter
            schema:
              type: string
              format: date-time
          - description: filter by created filter
            in: query
            name: createdFilter
            schema:
              type: string
              enum:
                - anytime
                - today
                - yesterday
                - custom
          - description: filter by created date code
            in: query
            name: createdDateCode
            schema:
              type: string
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: filter by completed before date
            in: query
            name: completedBefore
            schema:
              type: string
              format: date-time
          - description: filter by completed after date
            in: query
            name: completedAfter
            schema:
              type: string
              format: date-time
          - description: filter by updated user id
            in: query
            name: updatedByUserId
            schema:
              type: integer
          - description: filter by parent task ids
            in: query
            name: parentTaskId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: include task id
            in: query
            name: includeTaskId
            schema:
              type: integer
          - description: provide a user saved filter ID
            in: query
            name: filterId
            schema:
              type: integer
          - description: filter by completed user id
            in: query
            name: completedByUserId
            schema:
              type: integer
          - description: use daterange logic from table when getting the tasks
            in: query
            name: useTaskDateRange
            schema:
              type: boolean
              default: 'false'
          - description: use start dates for todays tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: filter on all projects
            in: query
            name: useAllProjects
            schema:
              type: boolean
          - description: sort active tasks first
            in: query
            name: sortActiveFirst
            schema:
              type: boolean
              default: 'false'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include tasks from completed lists
            in: query
            name: showCompletedLists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: only untagged tasks
            in: query
            name: onlyUntaggedTasks
            schema:
              type: boolean
          - description: |-
              only return tasks that are unplanned. Not assigned, no due date or
              missing estimated time.
            in: query
            name: onlyUnplanned
            schema:
              type: boolean
              default: 'false'
          - description: filter by only tasks with unread comments
            in: query
            name: onlyTasksWithUnreadComments
            schema:
              type: boolean
          - description: filter by only tasks with tickets
            in: query
            name: onlyTasksWithTickets
            schema:
              type: boolean
          - description: only return tasks with estimated time
            in: query
            name: onlyTasksWithEstimatedTime
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: >-
              only include tasks from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: nest sub tasks
            in: query
            name: nestSubTasks
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include tasks latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include untagged tasks
            in: query
            name: includeUntaggedTasks
            schema:
              type: boolean
          - description: filter by include tomorrow
            in: query
            name: includeTomorrow
            schema:
              type: boolean
          - description: filter by include today
            in: query
            name: includeToday
            schema:
              type: boolean
          - description: include members of the given teams
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
          - description: include tasks without due dates
            in: query
            name: includeTasksWithoutDueDates
            schema:
              type: boolean
          - description: include tasks with cards
            in: query
            name: includeTasksWithCards
            schema:
              type: boolean
              default: 'true'
          - description: include tasks from deleted lists
            in: query
            name: includeTasksFromDeletedLists
            schema:
              type: boolean
          - description: >-
              include ids of completed and active subtasks, dependencies,
              predecessors
            in: query
            name: includeRelatedTasks
            schema:
              type: boolean
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
          - description: include overdue tasks
            in: query
            name: includeOverdueTasks
            schema:
              type: boolean
          - description: include original due date of a task
            in: query
            name: includeOriginalDueDate
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
          - description: include members of the given companies
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
          - description: include number of unread and read comments for each task
            in: query
            name: includeCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: filter by include blocked
            in: query
            name: includeBlocked
            schema:
              type: boolean
          - description: include number of unread and read comments for each file attachment
            in: query
            name: includeAttachmentCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
          - description: group by tasklist
            in: query
            name: groupByTasklist
            schema:
              type: boolean
          - description: group by taskgroup
            in: query
            name: groupByTaskgroup
            schema:
              type: boolean
          - description: get sub tasks
            in: query
            name: getSubTasks
            schema:
              type: boolean
          - description: get files
            in: query
            name: getFiles
            schema:
              type: boolean
          - description: >-
              set due date as milestone due date if due date is null and there's a
              related milestone
            in: query
            name: fallbackToMilestoneDueDate
            schema:
              type: boolean
          - description: >-
              For tasks created in a project template it's possible to assign a
              role instead of people, companies or teams.

              This role is then stored with the task name as a prefix. When this
              flag is enabled it will extract the role name

              and return it inside a special field.
            in: query
            name: extractTemplateRoleName
            schema:
              type: boolean
          - description: exclude assignee not on project teams
            in: query
            name: excludeAssigneeNotOnProjectTeams
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: check if task has reminders
            in: query
            name: checkForReminders
            schema:
              type: boolean
          - description: >-
              when filtering by assigned or unassagned tasks, include assignees
              that

              are not in the project.
            in: query
            name: allowAssigneesOutsideProject
            schema:
              type: boolean
              default: 'true'
          - description: >-
              customise the report by selecting columns to be displayed for tasks
              report
            in: query
            name: tasksSelectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tasklist ids
            in: query
            name: tasklistIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by taskgroup ids
            in: query
            name: taskgroupIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task included set
            in: query
            name: taskIncludedSet
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - overdue
                  - nodate
                  - nostartdate
                  - noduedate
                  - nostartwithfutureduedate
                  - taskListNames
                  - projectNames
                type: string
          - description: filter by tag values
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of task status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - upcoming
                  - late
                  - all
                type: string
          - description: skip crm deal ids
            in: query
            name: skipCRMDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: >-
              customise the report by selecting columns to be displayed for
              planned vs actual.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by responsible party ids
            in: query
            name: responsiblePartyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by projects that have features enabled
            in: query
            name: projectFeaturesEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tasklists
                  - parentTasks
                  - companies
                  - teams
                  - users
                  - milestones
                  - comments
                  - comments.users
                  - tags
                  - cards
                  - cards.columns
                  - timeTotals
                  - taskSequences
                  - commentFollowers
                  - changeFollowers
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                  - attachments
                  - attachments.users
                  - subtaskStats
                  - timers
                  - predecessors
                  - permissions
                type: string
          - description: filter by task ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followed by user ids
            in: query
            name: followedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by board column ids
            in: query
            name: filterBoardColumnIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[taskgroups]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - displayOrder
                  - projectId
                  - status
                type: string
          - in: query
            name: fields[taskSequences]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - installationId
                  - frequency
                  - selectedWeekDays
                  - endDate
                  - monthlyRepeatType
                  - duration
                  - rrule
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[files]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - isPrivate
                  - latestFileVersionNo
                  - versionId
                  - status
                  - description
                  - lockdownId
                  - tagIds
                  - changeFollowers
                  - commentFollowers
                  - originalName
                  - displayName
                  - isLocked
                  - lockedByUserId
                  - lockedDate
                  - size
                  - uploadedDate
                  - uploadedByUserID
                  - updatedAt
                  - deletedAt
                  - deletedBy
                  - fileSource
                  - projectId
                  - numLikes
                  - reactions
                  - versions
                  - downloadURL
                  - previewURL
                  - thumbURL
                  - relatedItems
                  - commentsCount
                  - commentsCountRead
                  - categoryId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[comments]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - objectType
                  - objectId
                  - title
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - displayOrder
                  - createdAt
                  - updatedAt
                  - settings
                  - sort
                  - sortOrder
                  - deletedAt
                  - project
                  - hasTriggers
                  - deleted
                  - stats
                  - defaultTasklist
                type: string
          - in: query
            name: fields[cards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - displayOrder
                  - archived
                  - archivedAt
                  - archivedBy
                  - createdAt
                  - createBy
                  - updatedAt
                  - visible
                  - status
                  - deleteBy
                  - deletedAt
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: the ids of the expanded tasks
            in: query
            name: expandedIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by crm deal ids
            in: query
            name: crmDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by creator user ids
            in: query
            name: createdByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee team ids
            in: query
            name: assigneeTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee company ids
            in: query
            name: assigneeCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/pdf:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate plannedvsactual report in PDF format
        tags:
          - Tasks
    /projects/api/v3/reporting/precanned/plannedvsactual/tasks.xlsx:
      get:
        description: >-
          Generates a plannedvsactual report in XLSX format containing all tasks
          for the

          provided filters. Only the tasks that the logged-in user can access will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_plannedvsactual_tasks.xlsx
        parameters:
          - description: filter by updated before date
            in: query
            name: updatedBefore
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by today
            in: query
            name: today
            schema:
              type: string
              format: date-time
          - description: filter by a taskFilter
            in: query
            name: taskFilter
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
          - description: filter on start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - task
                - tasktime
              default: task
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - html
                - pdf
              default: pdf
          - description: filter by task priority
            in: query
            name: priority
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedat
                - duestartdate
                - alldates
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
                - createdby
                - completedby
                - assignedto
                - taskstatus
                - taskduedate
                - customfield
                - estimatedtime
                - boardcolumn
                - taskgroupid
                - taskgroupname
                - taskgroup
                - displayorder
                - projectmanual
                - stagedisplayorder
                - stage
              default: duedate
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter on end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter before a due date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter after a due date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: filter on deleted after date
            in: query
            name: deletedAfter
            schema:
              type: string
              format: date-time
          - description: filter by created filter
            in: query
            name: createdFilter
            schema:
              type: string
              enum:
                - anytime
                - today
                - yesterday
                - custom
          - description: filter by created date code
            in: query
            name: createdDateCode
            schema:
              type: string
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: filter by completed before date
            in: query
            name: completedBefore
            schema:
              type: string
              format: date-time
          - description: filter by completed after date
            in: query
            name: completedAfter
            schema:
              type: string
              format: date-time
          - description: filter by updated user id
            in: query
            name: updatedByUserId
            schema:
              type: integer
          - description: filter by parent task ids
            in: query
            name: parentTaskId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: include task id
            in: query
            name: includeTaskId
            schema:
              type: integer
          - description: provide a user saved filter ID
            in: query
            name: filterId
            schema:
              type: integer
          - description: filter by completed user id
            in: query
            name: completedByUserId
            schema:
              type: integer
          - description: use daterange logic from table when getting the tasks
            in: query
            name: useTaskDateRange
            schema:
              type: boolean
              default: 'false'
          - description: use start dates for todays tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: filter on all projects
            in: query
            name: useAllProjects
            schema:
              type: boolean
          - description: sort active tasks first
            in: query
            name: sortActiveFirst
            schema:
              type: boolean
              default: 'false'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include tasks from completed lists
            in: query
            name: showCompletedLists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: only untagged tasks
            in: query
            name: onlyUntaggedTasks
            schema:
              type: boolean
          - description: |-
              only return tasks that are unplanned. Not assigned, no due date or
              missing estimated time.
            in: query
            name: onlyUnplanned
            schema:
              type: boolean
              default: 'false'
          - description: filter by only tasks with unread comments
            in: query
            name: onlyTasksWithUnreadComments
            schema:
              type: boolean
          - description: filter by only tasks with tickets
            in: query
            name: onlyTasksWithTickets
            schema:
              type: boolean
          - description: only return tasks with estimated time
            in: query
            name: onlyTasksWithEstimatedTime
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: >-
              only include tasks from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: nest sub tasks
            in: query
            name: nestSubTasks
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include tasks latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include untagged tasks
            in: query
            name: includeUntaggedTasks
            schema:
              type: boolean
          - description: filter by include tomorrow
            in: query
            name: includeTomorrow
            schema:
              type: boolean
          - description: filter by include today
            in: query
            name: includeToday
            schema:
              type: boolean
          - description: include members of the given teams
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
          - description: include tasks without due dates
            in: query
            name: includeTasksWithoutDueDates
            schema:
              type: boolean
          - description: include tasks with cards
            in: query
            name: includeTasksWithCards
            schema:
              type: boolean
              default: 'true'
          - description: include tasks from deleted lists
            in: query
            name: includeTasksFromDeletedLists
            schema:
              type: boolean
          - description: >-
              include ids of completed and active subtasks, dependencies,
              predecessors
            in: query
            name: includeRelatedTasks
            schema:
              type: boolean
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
          - description: include overdue tasks
            in: query
            name: includeOverdueTasks
            schema:
              type: boolean
          - description: include original due date of a task
            in: query
            name: includeOriginalDueDate
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
          - description: include members of the given companies
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
          - description: include number of unread and read comments for each task
            in: query
            name: includeCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: filter by include blocked
            in: query
            name: includeBlocked
            schema:
              type: boolean
          - description: include number of unread and read comments for each file attachment
            in: query
            name: includeAttachmentCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
          - description: group by tasklist
            in: query
            name: groupByTasklist
            schema:
              type: boolean
          - description: group by taskgroup
            in: query
            name: groupByTaskgroup
            schema:
              type: boolean
          - description: get sub tasks
            in: query
            name: getSubTasks
            schema:
              type: boolean
          - description: get files
            in: query
            name: getFiles
            schema:
              type: boolean
          - description: >-
              set due date as milestone due date if due date is null and there's a
              related milestone
            in: query
            name: fallbackToMilestoneDueDate
            schema:
              type: boolean
          - description: >-
              For tasks created in a project template it's possible to assign a
              role instead of people, companies or teams.

              This role is then stored with the task name as a prefix. When this
              flag is enabled it will extract the role name

              and return it inside a special field.
            in: query
            name: extractTemplateRoleName
            schema:
              type: boolean
          - description: exclude assignee not on project teams
            in: query
            name: excludeAssigneeNotOnProjectTeams
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: check if task has reminders
            in: query
            name: checkForReminders
            schema:
              type: boolean
          - description: >-
              when filtering by assigned or unassagned tasks, include assignees
              that

              are not in the project.
            in: query
            name: allowAssigneesOutsideProject
            schema:
              type: boolean
              default: 'true'
          - description: >-
              customise the report by selecting columns to be displayed for tasks
              report
            in: query
            name: tasksSelectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tasklist ids
            in: query
            name: tasklistIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by taskgroup ids
            in: query
            name: taskgroupIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task included set
            in: query
            name: taskIncludedSet
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - overdue
                  - nodate
                  - nostartdate
                  - noduedate
                  - nostartwithfutureduedate
                  - taskListNames
                  - projectNames
                type: string
          - description: filter by tag values
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of task status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - upcoming
                  - late
                  - all
                type: string
          - description: skip crm deal ids
            in: query
            name: skipCRMDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: >-
              customise the report by selecting columns to be displayed for
              planned vs actual.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by responsible party ids
            in: query
            name: responsiblePartyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by projects that have features enabled
            in: query
            name: projectFeaturesEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tasklists
                  - parentTasks
                  - companies
                  - teams
                  - users
                  - milestones
                  - comments
                  - comments.users
                  - tags
                  - cards
                  - cards.columns
                  - timeTotals
                  - taskSequences
                  - commentFollowers
                  - changeFollowers
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                  - attachments
                  - attachments.users
                  - subtaskStats
                  - timers
                  - predecessors
                  - permissions
                type: string
          - description: filter by task ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followed by user ids
            in: query
            name: followedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by board column ids
            in: query
            name: filterBoardColumnIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[taskgroups]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - displayOrder
                  - projectId
                  - status
                type: string
          - in: query
            name: fields[taskSequences]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - installationId
                  - frequency
                  - selectedWeekDays
                  - endDate
                  - monthlyRepeatType
                  - duration
                  - rrule
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[files]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - isPrivate
                  - latestFileVersionNo
                  - versionId
                  - status
                  - description
                  - lockdownId
                  - tagIds
                  - changeFollowers
                  - commentFollowers
                  - originalName
                  - displayName
                  - isLocked
                  - lockedByUserId
                  - lockedDate
                  - size
                  - uploadedDate
                  - uploadedByUserID
                  - updatedAt
                  - deletedAt
                  - deletedBy
                  - fileSource
                  - projectId
                  - numLikes
                  - reactions
                  - versions
                  - downloadURL
                  - previewURL
                  - thumbURL
                  - relatedItems
                  - commentsCount
                  - commentsCountRead
                  - categoryId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[comments]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - objectType
                  - objectId
                  - title
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - displayOrder
                  - createdAt
                  - updatedAt
                  - settings
                  - sort
                  - sortOrder
                  - deletedAt
                  - project
                  - hasTriggers
                  - deleted
                  - stats
                  - defaultTasklist
                type: string
          - in: query
            name: fields[cards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - displayOrder
                  - archived
                  - archivedAt
                  - archivedBy
                  - createdAt
                  - createBy
                  - updatedAt
                  - visible
                  - status
                  - deleteBy
                  - deletedAt
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: the ids of the expanded tasks
            in: query
            name: expandedIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by crm deal ids
            in: query
            name: crmDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by creator user ids
            in: query
            name: createdByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee team ids
            in: query
            name: assigneeTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee company ids
            in: query
            name: assigneeCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate plannedvsactual report in XLSX format
        tags:
          - Tasks
    /projects/api/v3/reporting/precanned/usertaskcompletion.json:
      get:
        description: Retrieve all people for the provided filters and their task completions.
        operationId: GET_projects_api_v3_reporting_precanned_usertaskcompletion.json
        parameters:
          - description: user type
            in: query
            name: userType
            schema:
              type: string
              enum:
                - account
                - collaborator
                - contact
          - description: date time
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: start date for task completion report
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by comment content
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - id
                - name
                - namecaseinsensitive
                - overduetasks
                - assignedtasks
                - completedtasks
                - activeprojects
              default: name
          - in: query
            name: lastLoginAfter
            schema:
              type: string
              format: date-time
          - description: end date for task completion report
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: Force to have the current/session user in the response
            in: query
            name: orderPrioritiseCurrentUser
            schema:
              type: boolean
          - in: query
            name: onlySiteOwner
            schema:
              type: boolean
              default: 'false'
          - description: >-
              return people only from the owner company. This will replace any
              provided

              company ID.
            in: query
            name: onlyOwnerCompany
            schema:
              type: boolean
              default: 'false'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include service accounts
            in: query
            name: includeServiceAccounts
            schema:
              type: boolean
              default: 'false'
          - description: exclude collaborators types, returning only account and contact.
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include clients
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: Returns users who are missing cost rates(OCA only)
            in: query
            name: filterByNoCostRate
            schema:
              type: boolean
          - description: exclude contact types, returning only account and collaborator.
            in: query
            name: excludeContacts
            schema:
              type: boolean
              default: 'false'
          - description: team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - description: filter by user ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[person]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[people]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: exclude people assigned to certain project id
            in: query
            name: excludeProjectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/people.TaskCompletionResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns task completions for all users
        tags:
          - People
    /projects/api/v3/reporting/precanned/usertaskcompletion/{userId}.json:
      get:
        description: Retrieve a person record and its task completion stats.
        operationId: GET_projects_api_v3_reporting_precanned_usertaskcompletion_{userId}.json
        parameters:
          - description: user type
            in: query
            name: userType
            schema:
              type: string
              enum:
                - account
                - collaborator
                - contact
          - description: date time
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: start date for task completion report
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by comment content
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - id
                - name
                - namecaseinsensitive
                - overduetasks
                - assignedtasks
                - completedtasks
                - activeprojects
              default: name
          - in: query
            name: lastLoginAfter
            schema:
              type: string
              format: date-time
          - description: end date for task completion report
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - in: path
            name: userId
            required: true
            schema:
              type: integer
          - description: number of items in a page (not used when generating reports)
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number (not used when generating reports)
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: Force to have the current/session user in the response
            in: query
            name: orderPrioritiseCurrentUser
            schema:
              type: boolean
          - in: query
            name: onlySiteOwner
            schema:
              type: boolean
              default: 'false'
          - description: >-
              return people only from the owner company. This will replace any
              provided

              company ID.
            in: query
            name: onlyOwnerCompany
            schema:
              type: boolean
              default: 'false'
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include service accounts
            in: query
            name: includeServiceAccounts
            schema:
              type: boolean
              default: 'false'
          - description: exclude collaborators types, returning only account and contact.
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include clients
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: Returns users who are missing cost rates(OCA only)
            in: query
            name: filterByNoCostRate
            schema:
              type: boolean
          - description: exclude contact types, returning only account and collaborator.
            in: query
            name: excludeContacts
            schema:
              type: boolean
              default: 'false'
          - description: team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include (not used when generating reports)
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - description: filter by user ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[person]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[people]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: exclude people assigned to certain project id
            in: query
            name: excludeProjectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/people.TaskCompletionResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Returns task completions for given user
        tags:
          - Person
    /projects/api/v3/reporting/precanned/utilization.csv:
      get:
        description: >-
          Generates a utilization report in CSV format containing all people for
          the

          provided filters. Only the people that the logged-in user can access
          will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_utilization.csv
        parameters:
          - description: determine the type of zoom filter used to display on the report
            in: query
            name: zoom
            schema:
              type: string
              enum:
                - week
                - month
                - last3months
                - quarterbyweek
                - quarterbymonth
          - description: filter by start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: order mode
            in: query
            name: sortOrder
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort by (deprecated, use orderBy)
            in: query
            name: sort
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
                - billableutilization
                - nonbillableutilization
              default: name
          - description: filter by user first or last name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - pdf
              default: pdf
          - description: group by
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: sort by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
              default: name
          - description: group by
            in: query
            name: groupBy
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: filter by end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: determine if the query is for a custom date range
            in: query
            name: isCustomDateRange
            schema:
              type: boolean
          - description: include collaborators
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include client users
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: filter by userIds
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - in: query
            name: fields[utilizations]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - userId
                  - unavailableMinutes
                  - availableMinutes
                  - billableMinutes
                  - unbillableMinutes
                  - loggedMinutes
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - description: filter by company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/csv:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate utilization report in CSV format
        tags:
          - People
    /projects/api/v3/reporting/precanned/utilization.html:
      get:
        description: >-
          Generates a utilization report in HTML format containing all people for
          the

          provided filters. Only the people that the logged-in user can access
          will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_utilization.html
        parameters:
          - description: determine the type of zoom filter used to display on the report
            in: query
            name: zoom
            schema:
              type: string
              enum:
                - week
                - month
                - last3months
                - quarterbyweek
                - quarterbymonth
          - description: filter by start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: order mode
            in: query
            name: sortOrder
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort by (deprecated, use orderBy)
            in: query
            name: sort
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
                - billableutilization
                - nonbillableutilization
              default: name
          - description: filter by user first or last name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - pdf
              default: pdf
          - description: group by
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: sort by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
              default: name
          - description: group by
            in: query
            name: groupBy
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: filter by end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: determine if the query is for a custom date range
            in: query
            name: isCustomDateRange
            schema:
              type: boolean
          - description: include collaborators
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include client users
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: filter by userIds
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - in: query
            name: fields[utilizations]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - userId
                  - unavailableMinutes
                  - availableMinutes
                  - billableMinutes
                  - unbillableMinutes
                  - loggedMinutes
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - description: filter by company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              text/html:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate utilization report in HTML format
        tags:
          - People
    /projects/api/v3/reporting/precanned/utilization.pdf:
      get:
        description: >-
          Generates a utilization report in PDF format containing all people for
          the

          provided filters. Only the people that the logged-in user can access
          will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_utilization.pdf
        parameters:
          - description: determine the type of zoom filter used to display on the report
            in: query
            name: zoom
            schema:
              type: string
              enum:
                - week
                - month
                - last3months
                - quarterbyweek
                - quarterbymonth
          - description: filter by start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: order mode
            in: query
            name: sortOrder
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort by (deprecated, use orderBy)
            in: query
            name: sort
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
                - billableutilization
                - nonbillableutilization
              default: name
          - description: filter by user first or last name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - pdf
              default: pdf
          - description: group by
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: sort by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
              default: name
          - description: group by
            in: query
            name: groupBy
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: filter by end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: determine if the query is for a custom date range
            in: query
            name: isCustomDateRange
            schema:
              type: boolean
          - description: include collaborators
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include client users
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: filter by userIds
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - in: query
            name: fields[utilizations]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - userId
                  - unavailableMinutes
                  - availableMinutes
                  - billableMinutes
                  - unbillableMinutes
                  - loggedMinutes
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - description: filter by company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/pdf:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate utilization report in PDF format
        tags:
          - People
    /projects/api/v3/reporting/precanned/utilization.xlsx:
      get:
        description: >-
          Generates a utilization report in XLSX format containing all people for
          the

          provided filters. Only the people that the logged-in user can access
          will

          be returned.
        operationId: GET_projects_api_v3_reporting_precanned_utilization.xlsx
        parameters:
          - description: determine the type of zoom filter used to display on the report
            in: query
            name: zoom
            schema:
              type: string
              enum:
                - week
                - month
                - last3months
                - quarterbyweek
                - quarterbymonth
          - description: filter by start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: order mode
            in: query
            name: sortOrder
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort by (deprecated, use orderBy)
            in: query
            name: sort
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
                - billableutilization
                - nonbillableutilization
              default: name
          - description: filter by user first or last name
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - pdf
              default: pdf
          - description: group by
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: sort by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - percentutilization
                - percentestimatedutilization
                - availableminutes
                - unavailableminutes
                - loggedminutes
                - billableminutes
                - unbillableminutes
              default: name
          - description: group by
            in: query
            name: groupBy
            schema:
              type: string
              enum:
                - weekly
                - monthly
          - description: filter by end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: determine if the query is for a custom date range
            in: query
            name: isCustomDateRange
            schema:
              type: boolean
          - description: include collaborators
            in: query
            name: includeCollaborators
            schema:
              type: boolean
              default: 'true'
          - description: include client users
            in: query
            name: includeClients
            schema:
              type: boolean
              default: 'true'
          - description: filter by userIds
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns to be displayed.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                type: string
          - in: query
            name: fields[utilizations]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - userId
                  - unavailableMinutes
                  - availableMinutes
                  - billableMinutes
                  - unbillableMinutes
                  - loggedMinutes
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - description: filter by company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
              application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Generate utilization report in XLSX format
        tags:
          - People
    /projects/api/v3/risks.json:
      get:
        description: >-
          Return all risks for the provided filters. Only filters that the
          logged-in user

          has access will be returned.
        operationId: GET_projects_api_v3_risks.json
        parameters:
          - description: >-
              filter by risks updated after specified date (deprecated, use
              updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by risks updated after specified date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: sort order (deprecated, use orderMode)
            in: query
            name: sortOrder
            schema:
              type: string
              enum:
                - asc
                - desc
          - description: sort by (deprecated, use orderBy)
            in: query
            name: sort
            schema:
              type: string
              enum:
                - datecreated
                - source
                - probability
                - impact
                - result
                - project
          - description: search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              default: pdf
          - description: sort order
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
          - description: sort by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - datecreated
                - source
                - probability
                - impact
                - result
                - project
          - description: filter by probability
            in: query
            name: probabilityTo
            schema:
              type: integer
          - description: filter by probability
            in: query
            name: probabilityFrom
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by impact
            in: query
            name: impactTo
            schema:
              type: integer
          - description: filter by impact
            in: query
            name: impactFrom
            schema:
              type: integer
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
              default: 'false'
          - description: enforce all tag ids must be matched
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: filter by risks that impact schedule
            in: query
            name: impactSchedule
            schema:
              type: boolean
          - description: filter by risks that impact performance
            in: query
            name: impactPerformance
            schema:
              type: boolean
          - description: filter by risks that impact cost
            in: query
            name: impactCost
            schema:
              type: boolean
          - description: filter by risk statuses
            in: query
            name: statuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - new
                  - pending
                  - closed
                type: string
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - users
                  - projects.companies
                type: string
          - description: filter by specific ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[risks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - source
                  - probability
                  - probabilityValue
                  - impact
                  - impactValue
                  - impactCost
                  - impactSchedule
                  - impactPerformance
                  - createdOn
                  - createdByUserId
                  - lastChangedOn
                  - lastChangedByUserId
                  - result
                  - mitigationPlan
                  - stats
                  - projectId
                  - deleted
                  - canEdit
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/risk.RisksResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all risks
        tags:
          - Risks
    /projects/api/v3/statuses.json:
      get:
        description: |-
          All of the latest status posts are returned for all users in the parent
          company.
        operationId: GET_projects_api_v3_statuses.json
        parameters:
          - description: return only statuses updated after a specific date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by the user name or status message
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by team
            in: query
            name: teamId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '100'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: show also users without status
            in: query
            name: showEveryone
            schema:
              type: boolean
          - description: showDeleted statuses
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: also include statuses from subteams
            in: query
            name: includeSubteams
            schema:
              type: boolean
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - statuses
                  - users
                  - userevents
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[statuses]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - emoji
                  - text
                  - dateTime
                  - ipAddress
                  - dateLastUpdated
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/status.TimelineResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all statuses
        tags:
          - PeopleStatus
    /projects/api/v3/statuses/timeline.json:
      get:
        description: >-
          Return a timeline list of people statuses that the logged-in user can
          access.
        operationId: GET_projects_api_v3_statuses_timeline.json
        parameters:
          - description: filter by the user name or status message
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by team
            in: query
            name: teamId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: showDeleted statuses
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: also include statuses from subteams
            in: query
            name: includeSubteams
            schema:
              type: boolean
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                  - userevents
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/status.TimelineResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get the people statuses timeline.
        tags:
          - PeopleStatus
    /projects/api/v3/summary.json:
      get:
        description: >-
          Retrieves the summary from the entire installation, returning counters
          about

          tasks, milestones, columns, events, risks, timers, projects healths.



          On this endpoint you can filter by project custom fields. The syntax for
          the

          query parameter is the following:

              projectCustomField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              projectCustomField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_summary.json
        parameters:
          - description: used to limit the since counters to a specific period
            in: query
            name: until
            schema:
              type: string
              enum:
                - now
                - timeRange
          - description: filter by start datetime
            in: query
            name: timeRangeStart
            schema:
              type: string
              format: date-time
          - description: filter by end datetime
            in: query
            name: timeRangeEnd
            schema:
              type: string
              format: date-time
          - description: >-
              filter by time range. It will be ignored if timeRangeStart and
              timeRangeEnd

              are provided.
            in: query
            name: timeRange
            schema:
              type: string
              enum:
                - yesterday
                - today
                - thisweek
                - lastweek
                - thismonth
                - lastmonth
                - last3months
                - last6months
          - description: project status (deprecated, use projectStatuses)
            in: query
            name: status
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: number of days remaining to event's start
            in: query
            name: eventsDaysAhead
            schema:
              type: integer
              default: '7'
          - description: enforce today is considered as start date for today's tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: filter by my unread messages only
            in: query
            name: unreadMessagesMineOnly
            schema:
              type: boolean
          - description: filter by my unread comments only
            in: query
            name: unreadCommentsMineOnly
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: filter only project events
            in: query
            name: onlyProjectEvents
            schema:
              type: boolean
          - description: >-
              enforce all tag ids must be matched (deprecated, use
              matchAllProjectTags)
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: enforce all tag ids must be matched
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include teams related to the taskAssigneeUserIds
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: count only events that the users are attending
            in: query
            name: eventsAttendingOnly
            schema:
              type: boolean
          - description: >-
              the since section will only use taskAssigneeUserIds if this flag is
              true

              (keeps backward compatibility)
            in: query
            name: applyTaskAssigneeUsersToSince
            schema:
              type: boolean
          - description: when enabled unread counters will respect the time range period.
            in: query
            name: applySinceOnUnread
            schema:
              type: boolean
              default: 'false'
          - description: filter by user ids
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by user ids who time logged
            in: query
            name: timeLoggedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by user ids with tasks assigned
            in: query
            name: taskAssigneeUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: |-
              project healths (deprecated, use projectHealths)

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealth
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by user ids with milestones assigned
            in: query
            name: milestoneAssigneeUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids (deprecated, use projectTagIds)
            in: query
            name: filterTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[unread]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - comments
                  - messages
                type: string
          - in: query
            name: fields[time]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - estimates
                  - totals
                type: string
          - description: sparse fields
            in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - nodate
                  - today
                  - late
                  - started
                  - complete
                  - upcoming
                  - active
                type: string
          - in: query
            name: fields[since]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - tasksComplete
                  - tasksCreated
                  - events
                  - dateTime
                type: string
          - in: query
            name: fields[risks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - total
                  - open
                  - pending
                  - closed
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - today
                  - late
                  - complete
                  - upcoming
                  - active
                type: string
          - description: |-
              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: fields[health]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: string
          - in: query
            name: fields[events]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - today
                  - upcoming
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - count
                  - data
                type: string
          - description: filter by company ids (deprecated, use projectCompanyIds)
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by user ids with tasks or milestones assigned
            in: query
            name: assigneeUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/summary.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get installation summary dashboard
        tags:
          - Summary
    /projects/api/v3/tags.json:
      get:
        description: Return all tags that the logged-in user can access.
        operationId: GET_projects_api_v3_tags.json
        parameters:
          - description: search for tags updated after the provided date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - count
                - project
                - color
                - datelastupdated
                - projectdatelastused
              default: name
          - description: filter by item type
            in: query
            name: itemType
            schema:
              type: string
              enum:
                - all
                - project
                - task
                - tasklist
                - milestone
                - message
                - comment
                - timelog
                - file
                - user
                - company
                - invoice
                - risk
                - notebook
                - link
                - event
                - notebookversion
                - fileversion
              default: all
          - description: mode used when filtering the tags
            in: query
            name: filter
            schema:
              type: string
              enum:
                - all
                - recent
              default: all
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '500'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: include in the response the number of items that use the tag
            in: query
            name: withCounters
            schema:
              type: boolean
              default: 'false'
          - description: do not include in the response special tags
            in: query
            name: skipSpecial
            schema:
              type: boolean
              default: 'true'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: search term will be placed as a prefix to match the tag names
            in: query
            name: searchRightOnly
            schema:
              type: boolean
              default: 'false'
          - description: skip from the result tags with the defined ids
            in: query
            name: skipIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by projects
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tag.TagsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all tags
        tags:
          - Tags
      post:
        description: >-
          Creates a new tag. If there's already a tag with the same name in the

          installation, it will be returned in the response with the status code
          200

          (OK).
        operationId: POST_projects_api_v3_tags.json
        requestBody:
          $ref: '#/components/requestBodies/tag.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tag.Response'
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tag.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Create a single tag
        tags:
          - Tags
    /projects/api/v3/tags/bulk/delete.json:
      post:
        description: Removes many tags at once.
        operationId: POST_projects_api_v3_tags_bulk_delete.json
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag.BulkDeleteRequest'
          required: true
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete many tags at once
        tags:
          - Tags
    /projects/api/v3/tags/{tagId}.json:
      delete:
        description: |-
          Removes a tag. If there's no tag with the given ID the status code 409
          (CONFLICT) will be returned.
        operationId: DELETE_projects_api_v3_tags_{tagId}.json
        parameters:
          - in: path
            name: tagId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Deletes a tag
        tags:
          - Tags
      get:
        description: Return a specific tag.
        operationId: GET_projects_api_v3_tags_{tagId}.json
        parameters:
          - in: path
            name: tagId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tag.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get details of an individual tag
        tags:
          - Tags
      patch:
        description: >-
          Updates a existing tag. If there's already a tag with the same changed
          name

          in the installation, it will be returned the status code 409 (CONFLICT).
        operationId: PATCH_projects_api_v3_tags_{tagId}.json
        parameters:
          - in: path
            name: tagId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/tag.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tag.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update a single tag
        tags:
          - Tags
    /projects/api/v3/tasklists:
      get:
        operationId: GET_projects_api_v3_tasklists
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - displayorder
                - name
                - status
                - createdat
                - updatedat
                - project
              default: displayorder
          - description: |-
              filter the task list budget by its parent project budget id, if none
              is provided it weill default to the current active budget.
            in: query
            name: projectBudgetId
            schema:
              type: integer
              default: nil
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: sort active lists first
            in: query
            name: sortActiveListsFirst
            schema:
              type: boolean
              default: 'false'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include private items
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include completed items
            in: query
            name: showCompleted
            schema:
              type: boolean
              default: 'false'
          - description: >-
              this means use the tasklist report endpoint, which has totally
              different query params
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include empty lists
            in: query
            name: getEmptyLists
            schema:
              type: boolean
              default: 'true'
          - description: include only completed items
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - defaultTasks
                  - defaultTasks.users
                  - defaultTasks.teams
                  - defaultTasks.reminders
                  - defaultTasks.customfields
                  - defaultTasks.companies
                  - createdBy
                  - updatedBy
                  - companies
                  - projects
                  - milestones
                  - defaultCustomfields
                  - defaultCustomfieldTasks
                  - defaultColumns
                  - defaultWorkflowStages
                  - defaultWorkflows
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tasklist.TasklistsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all tasklists
        tags:
          - TaskLists
    /projects/api/v3/tasklists/{tasklistId}:
      get:
        operationId: GET_projects_api_v3_tasklists_{tasklistId}
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by project type
            in: query
            name: projectType
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - displayorder
                - name
                - status
                - createdat
                - updatedat
                - project
              default: displayorder
          - in: path
            name: tasklistId
            required: true
            schema:
              type: integer
          - description: |-
              filter the task list budget by its parent project budget id, if none
              is provided it weill default to the current active budget.
            in: query
            name: projectBudgetId
            schema:
              type: integer
              default: nil
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: sort active lists first
            in: query
            name: sortActiveListsFirst
            schema:
              type: boolean
              default: 'false'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include private items
            in: query
            name: showPrivate
            schema:
              type: boolean
              default: 'true'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include completed items
            in: query
            name: showCompleted
            schema:
              type: boolean
              default: 'false'
          - description: >-
              this means use the tasklist report endpoint, which has totally
              different query params
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include empty lists
            in: query
            name: getEmptyLists
            schema:
              type: boolean
              default: 'true'
          - description: include only completed items
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - defaultTasks
                  - defaultTasks.users
                  - defaultTasks.teams
                  - defaultTasks.reminders
                  - defaultTasks.customfields
                  - defaultTasks.companies
                  - createdBy
                  - updatedBy
                  - companies
                  - projects
                  - milestones
                  - defaultCustomfields
                  - defaultCustomfieldTasks
                  - defaultColumns
                  - defaultWorkflowStages
                  - defaultWorkflows
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/tasklist.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get specific tasklist
        tags:
          - TaskLists
    /projects/api/v3/tasklists/{tasklistId}.json:
      delete:
        operationId: DELETE_projects_api_v3_tasklists_{tasklistId}.json
        parameters:
          - in: path
            name: tasklistId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing tasklist.
        tags:
          - Tasklists
    /projects/api/v3/tasklists/{tasklistId}/tasks.json:
      get:
        description: >-
          Return multiple tasks according to the provided filter.



          On this endpoint you can filter by custom fields. The syntax for the

          query parameter is the following:

              customField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              customField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_tasklists_{tasklistId}_tasks.json
        parameters:
          - description: filter by updated before date
            in: query
            name: updatedBefore
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by today
            in: query
            name: today
            schema:
              type: string
              format: date-time
          - description: filter by a taskFilter
            in: query
            name: taskFilter
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
          - description: filter on start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - task
                - tasktime
              default: task
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - html
                - pdf
              default: pdf
          - description: filter by task priority
            in: query
            name: priority
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedat
                - duestartdate
                - alldates
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
                - createdby
                - completedby
                - assignedto
                - taskstatus
                - taskduedate
                - customfield
                - estimatedtime
                - boardcolumn
                - taskgroupid
                - taskgroupname
                - taskgroup
                - displayorder
                - projectmanual
                - stagedisplayorder
                - stage
              default: duedate
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter on end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter before a due date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter after a due date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: filter on deleted after date
            in: query
            name: deletedAfter
            schema:
              type: string
              format: date-time
          - description: filter by created filter
            in: query
            name: createdFilter
            schema:
              type: string
              enum:
                - anytime
                - today
                - yesterday
                - custom
          - description: filter by created date code
            in: query
            name: createdDateCode
            schema:
              type: string
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: filter by completed before date
            in: query
            name: completedBefore
            schema:
              type: string
              format: date-time
          - description: filter by completed after date
            in: query
            name: completedAfter
            schema:
              type: string
              format: date-time
          - description: filter by updated user id
            in: query
            name: updatedByUserId
            schema:
              type: integer
          - in: path
            name: tasklistId
            required: true
            schema:
              type: integer
          - description: filter by parent task ids
            in: query
            name: parentTaskId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: include task id
            in: query
            name: includeTaskId
            schema:
              type: integer
          - description: provide a user saved filter ID
            in: query
            name: filterId
            schema:
              type: integer
          - description: filter by completed user id
            in: query
            name: completedByUserId
            schema:
              type: integer
          - description: use daterange logic from table when getting the tasks
            in: query
            name: useTaskDateRange
            schema:
              type: boolean
              default: 'false'
          - description: use start dates for todays tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: filter on all projects
            in: query
            name: useAllProjects
            schema:
              type: boolean
          - description: sort active tasks first
            in: query
            name: sortActiveFirst
            schema:
              type: boolean
              default: 'false'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include tasks from completed lists
            in: query
            name: showCompletedLists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: only untagged tasks
            in: query
            name: onlyUntaggedTasks
            schema:
              type: boolean
          - description: |-
              only return tasks that are unplanned. Not assigned, no due date or
              missing estimated time.
            in: query
            name: onlyUnplanned
            schema:
              type: boolean
              default: 'false'
          - description: filter by only tasks with unread comments
            in: query
            name: onlyTasksWithUnreadComments
            schema:
              type: boolean
          - description: filter by only tasks with tickets
            in: query
            name: onlyTasksWithTickets
            schema:
              type: boolean
          - description: only return tasks with estimated time
            in: query
            name: onlyTasksWithEstimatedTime
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: >-
              only include tasks from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: nest sub tasks
            in: query
            name: nestSubTasks
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include tasks latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include untagged tasks
            in: query
            name: includeUntaggedTasks
            schema:
              type: boolean
          - description: filter by include tomorrow
            in: query
            name: includeTomorrow
            schema:
              type: boolean
          - description: filter by include today
            in: query
            name: includeToday
            schema:
              type: boolean
          - description: include members of the given teams
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
          - description: include tasks without due dates
            in: query
            name: includeTasksWithoutDueDates
            schema:
              type: boolean
          - description: include tasks with cards
            in: query
            name: includeTasksWithCards
            schema:
              type: boolean
              default: 'true'
          - description: include tasks from deleted lists
            in: query
            name: includeTasksFromDeletedLists
            schema:
              type: boolean
          - description: >-
              include ids of completed and active subtasks, dependencies,
              predecessors
            in: query
            name: includeRelatedTasks
            schema:
              type: boolean
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
          - description: include overdue tasks
            in: query
            name: includeOverdueTasks
            schema:
              type: boolean
          - description: include original due date of a task
            in: query
            name: includeOriginalDueDate
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
          - description: include members of the given companies
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
          - description: include number of unread and read comments for each task
            in: query
            name: includeCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: filter by include blocked
            in: query
            name: includeBlocked
            schema:
              type: boolean
          - description: include number of unread and read comments for each file attachment
            in: query
            name: includeAttachmentCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
          - description: group by tasklist
            in: query
            name: groupByTasklist
            schema:
              type: boolean
          - description: group by taskgroup
            in: query
            name: groupByTaskgroup
            schema:
              type: boolean
          - description: get sub tasks
            in: query
            name: getSubTasks
            schema:
              type: boolean
          - description: get files
            in: query
            name: getFiles
            schema:
              type: boolean
          - description: >-
              set due date as milestone due date if due date is null and there's a
              related milestone
            in: query
            name: fallbackToMilestoneDueDate
            schema:
              type: boolean
          - description: >-
              For tasks created in a project template it's possible to assign a
              role instead of people, companies or teams.

              This role is then stored with the task name as a prefix. When this
              flag is enabled it will extract the role name

              and return it inside a special field.
            in: query
            name: extractTemplateRoleName
            schema:
              type: boolean
          - description: exclude assignee not on project teams
            in: query
            name: excludeAssigneeNotOnProjectTeams
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: check if task has reminders
            in: query
            name: checkForReminders
            schema:
              type: boolean
          - description: >-
              when filtering by assigned or unassagned tasks, include assignees
              that

              are not in the project.
            in: query
            name: allowAssigneesOutsideProject
            schema:
              type: boolean
              default: 'true'
          - description: >-
              customise the report by selecting columns to be displayed for tasks
              report
            in: query
            name: tasksSelectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tasklist ids
            in: query
            name: tasklistIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by taskgroup ids
            in: query
            name: taskgroupIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task included set
            in: query
            name: taskIncludedSet
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - overdue
                  - nodate
                  - nostartdate
                  - noduedate
                  - nostartwithfutureduedate
                  - taskListNames
                  - projectNames
                type: string
          - description: filter by tag values
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of task status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - upcoming
                  - late
                  - all
                type: string
          - description: skip crm deal ids
            in: query
            name: skipCRMDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: >-
              customise the report by selecting columns to be displayed for
              planned vs actual.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by responsible party ids
            in: query
            name: responsiblePartyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by projects that have features enabled
            in: query
            name: projectFeaturesEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tasklists
                  - parentTasks
                  - companies
                  - teams
                  - users
                  - milestones
                  - comments
                  - comments.users
                  - tags
                  - cards
                  - cards.columns
                  - timeTotals
                  - taskSequences
                  - commentFollowers
                  - changeFollowers
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                  - attachments
                  - attachments.users
                  - subtaskStats
                  - timers
                  - predecessors
                  - permissions
                type: string
          - description: filter by task ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followed by user ids
            in: query
            name: followedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by board column ids
            in: query
            name: filterBoardColumnIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[taskgroups]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - displayOrder
                  - projectId
                  - status
                type: string
          - in: query
            name: fields[taskSequences]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - installationId
                  - frequency
                  - selectedWeekDays
                  - endDate
                  - monthlyRepeatType
                  - duration
                  - rrule
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[files]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - isPrivate
                  - latestFileVersionNo
                  - versionId
                  - status
                  - description
                  - lockdownId
                  - tagIds
                  - changeFollowers
                  - commentFollowers
                  - originalName
                  - displayName
                  - isLocked
                  - lockedByUserId
                  - lockedDate
                  - size
                  - uploadedDate
                  - uploadedByUserID
                  - updatedAt
                  - deletedAt
                  - deletedBy
                  - fileSource
                  - projectId
                  - numLikes
                  - reactions
                  - versions
                  - downloadURL
                  - previewURL
                  - thumbURL
                  - relatedItems
                  - commentsCount
                  - commentsCountRead
                  - categoryId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[comments]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - objectType
                  - objectId
                  - title
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - displayOrder
                  - createdAt
                  - updatedAt
                  - settings
                  - sort
                  - sortOrder
                  - deletedAt
                  - project
                  - hasTriggers
                  - deleted
                  - stats
                  - defaultTasklist
                type: string
          - in: query
            name: fields[cards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - displayOrder
                  - archived
                  - archivedAt
                  - archivedBy
                  - createdAt
                  - createBy
                  - updatedAt
                  - visible
                  - status
                  - deleteBy
                  - deletedAt
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: the ids of the expanded tasks
            in: query
            name: expandedIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by crm deal ids
            in: query
            name: crmDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by creator user ids
            in: query
            name: createdByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee team ids
            in: query
            name: assigneeTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee company ids
            in: query
            name: assigneeCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/task.tasksResponseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get a specific tasklist's tasks.
        tags:
          - Tasks
      post:
        description: Create a new task in the provided task list.
        operationId: POST_projects_api_v3_tasklists_{tasklistId}_tasks.json
        parameters:
          - in: path
            name: tasklistId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/task.Request'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/task.responseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Creates a task.
        tags:
          - Tasks
        x-private: true
    /projects/api/v3/tasklists/{tasklistId}/time/total.json:
      get:
        operationId: GET_projects_api_v3_tasklists_{tasklistId}_time_total.json
        parameters:
          - in: path
            name: tasklistId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.TotalsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get timelog totals for a specific task.
        tags:
          - TimeTracking
    /projects/api/v3/tasks.json:
      get:
        description: >-
          Return multiple tasks according to the provided filter.



          On this endpoint you can filter by custom fields. The syntax for the

          query parameter is the following:

              customField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              customField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_tasks.json
        parameters:
          - description: filter by updated before date
            in: query
            name: updatedBefore
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by today
            in: query
            name: today
            schema:
              type: string
              format: date-time
          - description: filter by a taskFilter
            in: query
            name: taskFilter
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
          - description: filter on start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - task
                - tasktime
              default: task
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - html
                - pdf
              default: pdf
          - description: filter by task priority
            in: query
            name: priority
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedat
                - duestartdate
                - alldates
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
                - createdby
                - completedby
                - assignedto
                - taskstatus
                - taskduedate
                - customfield
                - estimatedtime
                - boardcolumn
                - taskgroupid
                - taskgroupname
                - taskgroup
                - displayorder
                - projectmanual
                - stagedisplayorder
                - stage
              default: duedate
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter on end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter before a due date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter after a due date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: filter on deleted after date
            in: query
            name: deletedAfter
            schema:
              type: string
              format: date-time
          - description: filter by created filter
            in: query
            name: createdFilter
            schema:
              type: string
              enum:
                - anytime
                - today
                - yesterday
                - custom
          - description: filter by created date code
            in: query
            name: createdDateCode
            schema:
              type: string
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: filter by completed before date
            in: query
            name: completedBefore
            schema:
              type: string
              format: date-time
          - description: filter by completed after date
            in: query
            name: completedAfter
            schema:
              type: string
              format: date-time
          - description: filter by updated user id
            in: query
            name: updatedByUserId
            schema:
              type: integer
          - description: filter by parent task ids
            in: query
            name: parentTaskId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: include task id
            in: query
            name: includeTaskId
            schema:
              type: integer
          - description: provide a user saved filter ID
            in: query
            name: filterId
            schema:
              type: integer
          - description: filter by completed user id
            in: query
            name: completedByUserId
            schema:
              type: integer
          - description: use daterange logic from table when getting the tasks
            in: query
            name: useTaskDateRange
            schema:
              type: boolean
              default: 'false'
          - description: use start dates for todays tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: filter on all projects
            in: query
            name: useAllProjects
            schema:
              type: boolean
          - description: sort active tasks first
            in: query
            name: sortActiveFirst
            schema:
              type: boolean
              default: 'false'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include tasks from completed lists
            in: query
            name: showCompletedLists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: only untagged tasks
            in: query
            name: onlyUntaggedTasks
            schema:
              type: boolean
          - description: |-
              only return tasks that are unplanned. Not assigned, no due date or
              missing estimated time.
            in: query
            name: onlyUnplanned
            schema:
              type: boolean
              default: 'false'
          - description: filter by only tasks with unread comments
            in: query
            name: onlyTasksWithUnreadComments
            schema:
              type: boolean
          - description: filter by only tasks with tickets
            in: query
            name: onlyTasksWithTickets
            schema:
              type: boolean
          - description: only return tasks with estimated time
            in: query
            name: onlyTasksWithEstimatedTime
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: >-
              only include tasks from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: nest sub tasks
            in: query
            name: nestSubTasks
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include tasks latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include untagged tasks
            in: query
            name: includeUntaggedTasks
            schema:
              type: boolean
          - description: filter by include tomorrow
            in: query
            name: includeTomorrow
            schema:
              type: boolean
          - description: filter by include today
            in: query
            name: includeToday
            schema:
              type: boolean
          - description: include members of the given teams
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
          - description: include tasks without due dates
            in: query
            name: includeTasksWithoutDueDates
            schema:
              type: boolean
          - description: include tasks with cards
            in: query
            name: includeTasksWithCards
            schema:
              type: boolean
              default: 'true'
          - description: include tasks from deleted lists
            in: query
            name: includeTasksFromDeletedLists
            schema:
              type: boolean
          - description: >-
              include ids of completed and active subtasks, dependencies,
              predecessors
            in: query
            name: includeRelatedTasks
            schema:
              type: boolean
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
          - description: include overdue tasks
            in: query
            name: includeOverdueTasks
            schema:
              type: boolean
          - description: include original due date of a task
            in: query
            name: includeOriginalDueDate
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
          - description: include members of the given companies
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
          - description: include number of unread and read comments for each task
            in: query
            name: includeCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: filter by include blocked
            in: query
            name: includeBlocked
            schema:
              type: boolean
          - description: include number of unread and read comments for each file attachment
            in: query
            name: includeAttachmentCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
          - description: group by tasklist
            in: query
            name: groupByTasklist
            schema:
              type: boolean
          - description: group by taskgroup
            in: query
            name: groupByTaskgroup
            schema:
              type: boolean
          - description: get sub tasks
            in: query
            name: getSubTasks
            schema:
              type: boolean
          - description: get files
            in: query
            name: getFiles
            schema:
              type: boolean
          - description: >-
              set due date as milestone due date if due date is null and there's a
              related milestone
            in: query
            name: fallbackToMilestoneDueDate
            schema:
              type: boolean
          - description: >-
              For tasks created in a project template it's possible to assign a
              role instead of people, companies or teams.

              This role is then stored with the task name as a prefix. When this
              flag is enabled it will extract the role name

              and return it inside a special field.
            in: query
            name: extractTemplateRoleName
            schema:
              type: boolean
          - description: exclude assignee not on project teams
            in: query
            name: excludeAssigneeNotOnProjectTeams
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: check if task has reminders
            in: query
            name: checkForReminders
            schema:
              type: boolean
          - description: >-
              when filtering by assigned or unassagned tasks, include assignees
              that

              are not in the project.
            in: query
            name: allowAssigneesOutsideProject
            schema:
              type: boolean
              default: 'true'
          - description: >-
              customise the report by selecting columns to be displayed for tasks
              report
            in: query
            name: tasksSelectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tasklist ids
            in: query
            name: tasklistIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by taskgroup ids
            in: query
            name: taskgroupIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task included set
            in: query
            name: taskIncludedSet
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - overdue
                  - nodate
                  - nostartdate
                  - noduedate
                  - nostartwithfutureduedate
                  - taskListNames
                  - projectNames
                type: string
          - description: filter by tag values
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of task status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - upcoming
                  - late
                  - all
                type: string
          - description: skip crm deal ids
            in: query
            name: skipCRMDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: >-
              customise the report by selecting columns to be displayed for
              planned vs actual.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by responsible party ids
            in: query
            name: responsiblePartyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by projects that have features enabled
            in: query
            name: projectFeaturesEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tasklists
                  - parentTasks
                  - companies
                  - teams
                  - users
                  - milestones
                  - comments
                  - comments.users
                  - tags
                  - cards
                  - cards.columns
                  - timeTotals
                  - taskSequences
                  - commentFollowers
                  - changeFollowers
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                  - attachments
                  - attachments.users
                  - subtaskStats
                  - timers
                  - predecessors
                  - permissions
                type: string
          - description: filter by task ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followed by user ids
            in: query
            name: followedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by board column ids
            in: query
            name: filterBoardColumnIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[taskgroups]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - displayOrder
                  - projectId
                  - status
                type: string
          - in: query
            name: fields[taskSequences]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - installationId
                  - frequency
                  - selectedWeekDays
                  - endDate
                  - monthlyRepeatType
                  - duration
                  - rrule
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[files]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - isPrivate
                  - latestFileVersionNo
                  - versionId
                  - status
                  - description
                  - lockdownId
                  - tagIds
                  - changeFollowers
                  - commentFollowers
                  - originalName
                  - displayName
                  - isLocked
                  - lockedByUserId
                  - lockedDate
                  - size
                  - uploadedDate
                  - uploadedByUserID
                  - updatedAt
                  - deletedAt
                  - deletedBy
                  - fileSource
                  - projectId
                  - numLikes
                  - reactions
                  - versions
                  - downloadURL
                  - previewURL
                  - thumbURL
                  - relatedItems
                  - commentsCount
                  - commentsCountRead
                  - categoryId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[comments]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - objectType
                  - objectId
                  - title
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - displayOrder
                  - createdAt
                  - updatedAt
                  - settings
                  - sort
                  - sortOrder
                  - deletedAt
                  - project
                  - hasTriggers
                  - deleted
                  - stats
                  - defaultTasklist
                type: string
          - in: query
            name: fields[cards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - displayOrder
                  - archived
                  - archivedAt
                  - archivedBy
                  - createdAt
                  - createBy
                  - updatedAt
                  - visible
                  - status
                  - deleteBy
                  - deletedAt
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: the ids of the expanded tasks
            in: query
            name: expandedIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by crm deal ids
            in: query
            name: crmDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by creator user ids
            in: query
            name: createdByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee team ids
            in: query
            name: assigneeTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee company ids
            in: query
            name: assigneeCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/task.tasksResponseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all tasks.
        tags:
          - Tasks
    /projects/api/v3/tasks/metrics/complete.json:
      get:
        description: |-
          Returns the total number of completed tasks. Only the tasks that the
          logged-in user can access will be counted.
        operationId: GET_projects_api_v3_tasks_metrics_complete.json
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/complete.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Total count of completed tasks
        tags:
          - Tasks
    /projects/api/v3/tasks/metrics/late.json:
      get:
        description: >-
          Returns the number of late tasks. Only the tasks that the logged-in user
          has

          access to will be counted.
        operationId: GET_projects_api_v3_tasks_metrics_late.json
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/late.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get total count of late tasks
        tags:
          - Tasks
    /projects/api/v3/tasks/{taskId}.json:
      delete:
        description: Delete a task and its subtasks.
        operationId: DELETE_projects_api_v3_tasks_{taskId}.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing task.
        tags:
          - Tasks
        x-private: true
      get:
        description: >-
          Returns the information about a specific task.



          On this endpoint you can filter by custom fields. The syntax for the

          query parameter is the following:

              customField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              customField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_tasks_{taskId}.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/task.responseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a specific task.
        tags:
          - Tasks
      patch:
        description: Modify the properties of an existing task.
        operationId: PATCH_projects_api_v3_tasks_{taskId}.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/task.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/task.responseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing task.
        tags:
          - Tasks
        x-private: true
    /projects/api/v3/tasks/{taskId}/comments.json:
      get:
        operationId: GET_projects_api_v3_tasks_{taskId}_comments.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by comment content (like v1 filterText param)
            in: query
            name: searchTerm
            schema:
              type: string
          - description: filter by published after date
            in: query
            name: publishedStartDate
            schema:
              type: string
              format: date
          - description: filter by published before date
            in: query
            name: publishedEndDate
            schema:
              type: string
              format: date
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - all
                - date
                - project
                - user
                - type
              default: data
          - description: filter by commment status
            in: query
            name: commentStatus
            schema:
              type: string
              enum:
                - all
                - read
                - unread
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: use strict html filtering fto content
            in: query
            name: strictHTML
            schema:
              type: boolean
              default: 'false'
          - description: get reactions count
            in: query
            name: getReactionsCount
            schema:
              type: boolean
          - description: filter by user ids
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by users who got notified for the comments
            in: query
            name: notifiedUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - reactions
                  - users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/comment.CommentsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a list of comments for a task
        tags:
          - TaskComments
    /projects/api/v3/tasks/{taskId}/customfields.json:
      get:
        description: Return all custom field values from a specific task.
        operationId: GET_projects_api_v3_tasks_{taskId}_customfields.json
        parameters:
          - description: filter by custom field value
            in: query
            name: searchTerm
            schema:
              type: string
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
          - description: filter by task id
            in: query
            name: taskId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - customfields
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[customfields]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - projectId
                  - entity
                  - name
                  - description
                  - type
                  - options
                  - visibilities
                  - isPrivate
                  - required
                  - createdAt
                  - createdByUserId
                  - updatedAt
                  - updatedByUserId
                  - deleted
                  - deletedAt
                  - deletedByUserId
                type: string
          - description: filter by custom field ids
            in: query
            name: customFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.valuesResponseTask'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Task custom field values.
        tags:
          - CustomFields
      post:
        description: Add a task custom field value.
        operationId: POST_projects_api_v3_tasks_{taskId}_customfields.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/value.requestTask'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.responseTask'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Add task custom field value.
        tags:
          - CustomFields
    /projects/api/v3/tasks/{taskId}/customfields/bulk/delete.json:
      post:
        description: Remove many entries of task custom field values at once.
        operationId: POST_projects_api_v3_tasks_{taskId}_customfields_bulk_delete.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value.bulkDeleteRequestTask'
          required: true
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete many task custom fields values at once.
        tags:
          - CustomFields
    /projects/api/v3/tasks/{taskId}/customfields/bulk/update.json:
      post:
        description: Edit many entries of task custom field values at once.
        operationId: POST_projects_api_v3_tasks_{taskId}_customfields_bulk_update.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/value.bulkUpdateRequestTask'
          required: true
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.valuesResponseTask'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update many task custom field values at once.
        tags:
          - CustomFields
    /projects/api/v3/tasks/{taskId}/customfields/{customFieldId}.json:
      delete:
        description: Removes a task custom field value.
        operationId: DELETE_projects_api_v3_tasks_{taskId}_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing task custom field value.
        tags:
          - CustomFields
      get:
        description: Return a specific custom field value from a task.
        operationId: GET_projects_api_v3_tasks_{taskId}_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.responseTask'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Task custom field value.
        tags:
          - CustomFields
      patch:
        description: Edit a task custom field value.
        operationId: PATCH_projects_api_v3_tasks_{taskId}_customfields_{customFieldId}.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
          - in: path
            name: customFieldId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/value.requestTask'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/value.responseTask'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing task custom field value.
        tags:
          - CustomFields
    /projects/api/v3/tasks/{taskId}/subtasks.json:
      get:
        description: >-
          Return multiple subtasks according to the provided filter.



          On this endpoint you can filter by custom fields. The syntax for the

          query parameter is the following:

              customField[id][op]=value

          Where:
            - [id] is the custom field ID
            - [op] is the operator to apply when filtering, different operators are
              allowed according to the custom field type
            - [value] is the value to apply when filtering

          For example, if I want to filter a dropdown custom field with ID 10 to
          only

          return entries that have the value "Option1" we would do the following:

              customField[10][eq]=Option1

          The allowed operators are:
            - like
            - not-like
            - eq
            - not
            - lt
            - gt
            - any
        operationId: GET_projects_api_v3_tasks_{taskId}_subtasks.json
        parameters:
          - description: filter by updated before date
            in: query
            name: updatedBefore
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by today
            in: query
            name: today
            schema:
              type: string
              format: date-time
          - description: filter by a taskFilter
            in: query
            name: taskFilter
            schema:
              type: string
              enum:
                - all
                - anytime
                - completed
                - created
                - overdue
                - today
                - yesterday
                - started
                - tomorrow
                - thisweek
                - within7
                - within14
                - within30
                - within365
                - nodate
                - noduedate
                - nostartdate
                - newTaskDefaults
                - hasDate
          - description: filter on start date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by search term
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the type of the report
            in: query
            name: reportType
            schema:
              type: string
              enum:
                - plannedvsactual
                - task
                - tasktime
              default: task
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - html
                - pdf
              default: pdf
          - description: filter by task priority
            in: query
            name: priority
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - startdate
                - createdat
                - priority
                - project
                - flattenedtasklist
                - company
                - manual
                - active
                - completedat
                - duestartdate
                - alldates
                - tasklistname
                - tasklistdisplayorder
                - tasklistid
                - duedate
                - updatedat
                - taskname
                - createdby
                - completedby
                - assignedto
                - taskstatus
                - taskduedate
                - customfield
                - estimatedtime
                - boardcolumn
                - taskgroupid
                - taskgroupname
                - taskgroup
                - displayorder
                - projectmanual
                - stagedisplayorder
                - stage
              default: duedate
          - description: >-
              filter by projects that have not been completed before the given
              date
            in: query
            name: notCompletedBefore
            schema:
              type: string
              format: date
          - description: filter on end date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter before a due date
            in: query
            name: dueBefore
            schema:
              type: string
              format: date
          - description: filter after a due date
            in: query
            name: dueAfter
            schema:
              type: string
              format: date
          - description: filter on deleted after date
            in: query
            name: deletedAfter
            schema:
              type: string
              format: date-time
          - description: filter by created filter
            in: query
            name: createdFilter
            schema:
              type: string
              enum:
                - anytime
                - today
                - yesterday
                - custom
          - description: filter by created date code
            in: query
            name: createdDateCode
            schema:
              type: string
          - description: filter by created before date
            in: query
            name: createdBefore
            schema:
              type: string
              format: date-time
          - description: filter by created after date
            in: query
            name: createdAfter
            schema:
              type: string
              format: date-time
          - description: filter by completed before date
            in: query
            name: completedBefore
            schema:
              type: string
              format: date-time
          - description: filter by completed after date
            in: query
            name: completedAfter
            schema:
              type: string
              format: date-time
          - description: filter by updated user id
            in: query
            name: updatedByUserId
            schema:
              type: integer
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
          - description: filter by parent task ids
            in: query
            name: parentTaskId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: order by custom field id when orderBy is equal to customfield
            in: query
            name: orderByCustomFieldId
            schema:
              type: integer
          - description: include task id
            in: query
            name: includeTaskId
            schema:
              type: integer
          - description: provide a user saved filter ID
            in: query
            name: filterId
            schema:
              type: integer
          - description: filter by completed user id
            in: query
            name: completedByUserId
            schema:
              type: integer
          - description: use daterange logic from table when getting the tasks
            in: query
            name: useTaskDateRange
            schema:
              type: boolean
              default: 'false'
          - description: use start dates for todays tasks
            in: query
            name: useStartDatesForTodaysTasks
            schema:
              type: boolean
          - description: use formula fields
            in: query
            name: useFormulaFields
            schema:
              type: boolean
          - description: filter on all projects
            in: query
            name: useAllProjects
            schema:
              type: boolean
          - description: sort active tasks first
            in: query
            name: sortActiveFirst
            schema:
              type: boolean
              default: 'false'
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: include tasks from completed lists
            in: query
            name: showCompletedLists
            schema:
              type: boolean
          - description: include companies and teams in the search term
            in: query
            name: searchCompaniesTeams
            schema:
              type: boolean
          - description: include assignees in the search
            in: query
            name: searchAssignees
            schema:
              type: boolean
          - description: only untagged tasks
            in: query
            name: onlyUntaggedTasks
            schema:
              type: boolean
          - description: |-
              only return tasks that are unplanned. Not assigned, no due date or
              missing estimated time.
            in: query
            name: onlyUnplanned
            schema:
              type: boolean
              default: 'false'
          - description: filter by only tasks with unread comments
            in: query
            name: onlyTasksWithUnreadComments
            schema:
              type: boolean
          - description: filter by only tasks with tickets
            in: query
            name: onlyTasksWithTickets
            schema:
              type: boolean
          - description: only return tasks with estimated time
            in: query
            name: onlyTasksWithEstimatedTime
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: >-
              only include tasks from projects where the user is strictly a
              project admin.

              site admins have visibility to all projects.
            in: query
            name: onlyAdminProjects
            schema:
              type: boolean
          - description: nest sub tasks
            in: query
            name: nestSubTasks
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: match all exclude tags
            in: query
            name: matchAllExcludedTags
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include tasks latest update action
            in: query
            name: includeUpdate
            schema:
              type: boolean
          - description: include untagged tasks
            in: query
            name: includeUntaggedTasks
            schema:
              type: boolean
          - description: filter by include tomorrow
            in: query
            name: includeTomorrow
            schema:
              type: boolean
          - description: filter by include today
            in: query
            name: includeToday
            schema:
              type: boolean
          - description: include members of the given teams
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
          - description: include tasks without due dates
            in: query
            name: includeTasksWithoutDueDates
            schema:
              type: boolean
          - description: include tasks with cards
            in: query
            name: includeTasksWithCards
            schema:
              type: boolean
              default: 'true'
          - description: include tasks from deleted lists
            in: query
            name: includeTasksFromDeletedLists
            schema:
              type: boolean
          - description: >-
              include ids of completed and active subtasks, dependencies,
              predecessors
            in: query
            name: includeRelatedTasks
            schema:
              type: boolean
          - description: include private items
            in: query
            name: includePrivateItems
            schema:
              type: boolean
          - description: include overdue tasks
            in: query
            name: includeOverdueTasks
            schema:
              type: boolean
          - description: include original due date of a task
            in: query
            name: includeOriginalDueDate
            schema:
              type: boolean
          - description: include custom fields
            in: query
            name: includeCustomFields
            schema:
              type: boolean
              default: 'false'
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
          - description: include members of the given companies
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
          - description: include number of unread and read comments for each task
            in: query
            name: includeCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: filter by include blocked
            in: query
            name: includeBlocked
            schema:
              type: boolean
          - description: include number of unread and read comments for each file attachment
            in: query
            name: includeAttachmentCommentStats
            schema:
              type: boolean
              default: 'false'
          - description: include teams related to the responsible user ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible user ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: include all comments
            in: query
            name: includeAllComments
            schema:
              type: boolean
          - description: group by tasklist
            in: query
            name: groupByTasklist
            schema:
              type: boolean
          - description: group by taskgroup
            in: query
            name: groupByTaskgroup
            schema:
              type: boolean
          - description: get sub tasks
            in: query
            name: getSubTasks
            schema:
              type: boolean
          - description: get files
            in: query
            name: getFiles
            schema:
              type: boolean
          - description: >-
              set due date as milestone due date if due date is null and there's a
              related milestone
            in: query
            name: fallbackToMilestoneDueDate
            schema:
              type: boolean
          - description: >-
              For tasks created in a project template it's possible to assign a
              role instead of people, companies or teams.

              This role is then stored with the task name as a prefix. When this
              flag is enabled it will extract the role name

              and return it inside a special field.
            in: query
            name: extractTemplateRoleName
            schema:
              type: boolean
          - description: exclude assignee not on project teams
            in: query
            name: excludeAssigneeNotOnProjectTeams
            schema:
              type: boolean
          - description: only completed tasks
            in: query
            name: completedOnly
            schema:
              type: boolean
              default: 'false'
          - description: check if task has reminders
            in: query
            name: checkForReminders
            schema:
              type: boolean
          - description: >-
              when filtering by assigned or unassagned tasks, include assignees
              that

              are not in the project.
            in: query
            name: allowAssigneesOutsideProject
            schema:
              type: boolean
              default: 'true'
          - description: >-
              customise the report by selecting columns to be displayed for tasks
              report
            in: query
            name: tasksSelectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tasklist ids
            in: query
            name: tasklistIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by taskgroup ids
            in: query
            name: taskgroupIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task included set
            in: query
            name: taskIncludedSet
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - overdue
                  - nodate
                  - nostartdate
                  - noduedate
                  - nostartwithfutureduedate
                  - taskListNames
                  - projectNames
                type: string
          - description: filter by tag values
            in: query
            name: tags
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by list of task status
            in: query
            name: status
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - upcoming
                  - late
                  - all
                type: string
          - description: skip crm deal ids
            in: query
            name: skipCRMDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: >-
              customise the report by selecting columns to be displayed for
              planned vs actual.
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by responsible party ids
            in: query
            name: responsiblePartyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by projects that have features enabled
            in: query
            name: projectFeaturesEnabled
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - list
                  - board
                  - gantt
                  - table
                  - dashboard
                  - milestones
                  - messages
                  - files
                  - time
                  - notebooks
                  - risks
                  - links
                  - billing
                  - comments
                  - people
                  - settings
                type: string
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include specific custom fields
            in: query
            name: includeCustomFieldIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tasklists
                  - parentTasks
                  - companies
                  - teams
                  - users
                  - milestones
                  - comments
                  - comments.users
                  - tags
                  - cards
                  - cards.columns
                  - timeTotals
                  - taskSequences
                  - commentFollowers
                  - changeFollowers
                  - lockdowns
                  - lockdowns.users
                  - lockdowns.companies
                  - lockdowns.teams
                  - lockdowns.users.companies
                  - lockdowns.companies.users
                  - lockdowns.teams.users
                  - attachments
                  - attachments.users
                  - subtaskStats
                  - timers
                  - predecessors
                  - permissions
                type: string
          - description: filter by task ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by followed by user ids
            in: query
            name: followedByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by board column ids
            in: query
            name: filterBoardColumnIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[teams]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - teamLogo
                  - teamLogoIcon
                  - teamLogoColor
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[taskgroups]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - displayOrder
                  - projectId
                  - status
                type: string
          - in: query
            name: fields[taskSequences]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - installationId
                  - frequency
                  - selectedWeekDays
                  - endDate
                  - monthlyRepeatType
                  - duration
                  - rrule
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[lockdowns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userID
                  - updatedAt
                  - itemType
                  - itemID
                  - grantAccessTo
                type: string
          - in: query
            name: fields[files]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - isPrivate
                  - latestFileVersionNo
                  - versionId
                  - status
                  - description
                  - lockdownId
                  - tagIds
                  - changeFollowers
                  - commentFollowers
                  - originalName
                  - displayName
                  - isLocked
                  - lockedByUserId
                  - lockedDate
                  - size
                  - uploadedDate
                  - uploadedByUserID
                  - updatedAt
                  - deletedAt
                  - deletedBy
                  - fileSource
                  - projectId
                  - numLikes
                  - reactions
                  - versions
                  - downloadURL
                  - previewURL
                  - thumbURL
                  - relatedItems
                  - commentsCount
                  - commentsCountRead
                  - categoryId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[comments]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - objectType
                  - objectId
                  - title
                type: string
          - in: query
            name: fields[columns]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - displayOrder
                  - createdAt
                  - updatedAt
                  - settings
                  - sort
                  - sortOrder
                  - deletedAt
                  - project
                  - hasTriggers
                  - deleted
                  - stats
                  - defaultTasklist
                type: string
          - in: query
            name: fields[cards]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - displayOrder
                  - archived
                  - archivedAt
                  - archivedBy
                  - createdAt
                  - createBy
                  - updatedAt
                  - visible
                  - status
                  - deleteBy
                  - deletedAt
                type: string
          - in: query
            name: fields[ProjectPermissions]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - viewMessagesAndFiles
                  - viewTasksAndMilestones
                  - viewTime
                  - viewNotebooks
                  - viewRiskRegister
                  - viewEstimatedTime
                  - viewInvoices
                  - addTasks
                  - addRisks
                  - manageCustomFields
                  - addExpenses
                  - editAllTasks
                  - addMilestones
                  - addTaskLists
                  - addMessages
                  - addFiles
                  - addTime
                  - addNotebooks
                  - viewLinks
                  - addLinks
                  - canViewForms
                  - addForms
                  - viewAllTimeLogs
                  - setPrivacy
                  - projectAdministrator
                  - viewProjectUpdate
                  - addProjectUpdate
                  - canViewProjectMembers
                  - canViewProjectBudget
                  - canManageProjectBudget
                  - canViewRates
                  - canManageRates
                  - canViewSchedule
                  - canManageSchedule
                  - receiveEmailNotifications
                  - isObserving
                  - isArchived
                  - active
                  - canAccess
                  - inOwnerCompany
                  - canManagePeople
                  - canViewProjectTemplates
                  - canManageProjectTemplates
                type: string
          - description: the ids of the expanded tasks
            in: query
            name: expandedIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by excluded tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by crm deal ids
            in: query
            name: crmDealIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by creator user ids
            in: query
            name: createdByUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee team ids
            in: query
            name: assigneeTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee company ids
            in: query
            name: assigneeCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by custom fields
            in: query
            name: CustomFields
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/task.tasksResponseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all subtasks for a specific task.
        tags:
          - Tasks
      post:
        description: Create a new subtask under the provided parent task.
        operationId: POST_projects_api_v3_tasks_{taskId}_subtasks.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/task.Request'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/task.responseV205'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Creates a subtask.
        tags:
          - Tasks
        x-private: true
    /projects/api/v3/tasks/{taskId}/time.json:
      get:
        description: >-
          Return logged time entries for a specific task. Only the time entries
          that

          the logged-in user can access will be returned.
        operationId: GET_projects_api_v3_tasks_{taskId}_time.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by a starting date
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort order
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - company
                - date
                - dateupdated
                - project
                - task
                - tasklist
                - user
                - description
                - billed
                - billable
                - timespent
              default: date
          - description: filter by invoiced type
            in: query
            name: invoicedType
            schema:
              type: string
              enum:
                - all
                - invoiced
                - noninvoiced
              default: all
          - description: filter by an ending date
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: filter by billable type
            in: query
            name: billableType
            schema:
              type: string
              enum:
                - all
                - billable
                - non-billable
              default: all
          - description: filter by the user who updated the timelog
            in: query
            name: updatedBy
            schema:
              type: integer
          - description: filter by ticket id
            in: query
            name: ticketId
            schema:
              type: integer
          - description: filter by tasklist id
            in: query
            name: tasklistId
            schema:
              type: integer
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
          - description: filter by task id (deprecated, use taskIds)
            in: query
            name: taskId
            schema:
              type: integer
          - description: filter by project id (deprecated, use projectIds)
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by budget id
            in: query
            name: budgetId
            schema:
              type: integer
          - description: filter by allocation id
            in: query
            name: allocationId
            schema:
              type: integer
          - description: >-
              filter by timelogs that are directly logged against projects and not
              its child tasks
            in: query
            name: unattachedTimelogs
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all task tags
            in: query
            name: matchAllTaskTags
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include totals
            in: query
            name: includeTotals
            schema:
              type: boolean
              default: 'false'
          - description: include permissions
            in: query
            name: includePermissions
            schema:
              type: boolean
              default: 'false'
          - description: include descendants
            in: query
            name: includeDescendants
            schema:
              type: boolean
              default: 'false'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: filter by task tag ids
            in: query
            name: taskTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project company ids (deprecated, use projectCompanyIds)
            in: query
            name: projectsFromCompanyId
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tags
                  - tasks
                  - tasks.parentTasks
                  - tasks.tasklists
                  - tasks.users
                  - users
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timelogs]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dateCreated
                  - minutes
                  - description
                  - timeLogged
                  - billable
                  - deleted
                  - dateDeleted
                  - hasStartTime
                  - dateEdited
                  - deskTicketId
                  - userId
                  - taskId
                  - projectId
                  - loggedByUserId
                  - deletedByUserId
                  - editedByUserId
                  - taskIdPreMove
                  - projectBillingInvoiceId
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.TimelogsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get time entries for a specific task
        tags:
          - TimeTracking
      post:
        description: Create a time entry linked to the desired task.
        operationId: POST_projects_api_v3_tasks_{taskId}_time.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/timelog.Request'
        responses:
          '201':
            description: 201 Created
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Create a time entry linked to a specific task.
        tags:
          - TimeTracking
        x-private: true
    /projects/api/v3/tasks/{taskId}/time/total.json:
      get:
        operationId: GET_projects_api_v3_tasks_{taskId}_time_total.json
        parameters:
          - in: path
            name: taskId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.TotalsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get timelog totals for a specific task.
        tags:
          - TimeTracking
    /projects/api/v3/teams/{teamId}/statuses/timeline.json:
      get:
        description: |-
          Return people statuses from a specific team that the logged-in user can
          access.
        operationId: GET_projects_api_v3_teams_{teamId}_statuses_timeline.json
        parameters:
          - description: filter by the user name or status message
            in: query
            name: searchTerm
            schema:
              type: string
          - in: path
            name: teamId
            required: true
            schema:
              type: integer
          - description: filter by team
            in: query
            name: teamId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: showDeleted statuses
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: also include statuses from subteams
            in: query
            name: includeSubteams
            schema:
              type: boolean
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                  - userevents
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/status.TimelineResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get statuses timeline for a specific team
        tags:
          - PeopleStatus
    /projects/api/v3/time.json:
      get:
        description: >-
          Return all logged time entries for all projects. Only the time entries
          that

          the logged-in user can access will be returned.
        operationId: GET_projects_api_v3_time.json
        parameters:
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by a starting date
            in: query
            name: startDate
            schema:
              type: string
              format: date-time
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: sort order
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - company
                - date
                - dateupdated
                - project
                - task
                - tasklist
                - user
                - description
                - billed
                - billable
                - timespent
              default: date
          - description: filter by invoiced type
            in: query
            name: invoicedType
            schema:
              type: string
              enum:
                - all
                - invoiced
                - noninvoiced
              default: all
          - description: filter by an ending date
            in: query
            name: endDate
            schema:
              type: string
              format: date-time
          - description: filter by billable type
            in: query
            name: billableType
            schema:
              type: string
              enum:
                - all
                - billable
                - non-billable
              default: all
          - description: filter by the user who updated the timelog
            in: query
            name: updatedBy
            schema:
              type: integer
          - description: filter by ticket id
            in: query
            name: ticketId
            schema:
              type: integer
          - description: filter by tasklist id
            in: query
            name: tasklistId
            schema:
              type: integer
          - description: filter by task id (deprecated, use taskIds)
            in: query
            name: taskId
            schema:
              type: integer
          - description: filter by project id (deprecated, use projectIds)
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: filter by budget id
            in: query
            name: budgetId
            schema:
              type: integer
          - description: filter by allocation id
            in: query
            name: allocationId
            schema:
              type: integer
          - description: >-
              filter by timelogs that are directly logged against projects and not
              its child tasks
            in: query
            name: unattachedTimelogs
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all task tags
            in: query
            name: matchAllTaskTags
            schema:
              type: boolean
          - description: match all tags
            in: query
            name: matchAllTags
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: generate a report document
            in: query
            name: isReportDownload
            schema:
              type: boolean
          - description: include totals
            in: query
            name: includeTotals
            schema:
              type: boolean
              default: 'false'
          - description: include permissions
            in: query
            name: includePermissions
            schema:
              type: boolean
              default: 'false'
          - description: include descendants
            in: query
            name: includeDescendants
            schema:
              type: boolean
              default: 'false'
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: filter by task tag ids
            in: query
            name: taskTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: customise the report by selecting columns
            in: query
            name: selectedColumns
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project company ids (deprecated, use projectCompanyIds)
            in: query
            name: projectsFromCompanyId
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - projects.companies
                  - projects.categories
                  - tags
                  - tasks
                  - tasks.parentTasks
                  - tasks.tasklists
                  - tasks.users
                  - users
                type: string
          - description: filter by ids
            in: query
            name: ids
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timelogs]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dateCreated
                  - minutes
                  - description
                  - timeLogged
                  - billable
                  - deleted
                  - dateDeleted
                  - hasStartTime
                  - dateEdited
                  - deskTicketId
                  - userId
                  - taskId
                  - projectId
                  - loggedByUserId
                  - deletedByUserId
                  - editedByUserId
                  - taskIdPreMove
                  - projectBillingInvoiceId
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[tags]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
          - in: query
            name: fields[projectcategories]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - color
                  - count
                  - parent
                  - parentId
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.TimelogsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all time entries
        tags:
          - TimeTracking
    /projects/api/v3/time/total.json:
      get:
        operationId: GET_projects_api_v3_time_total.json
        parameters:
          - description: filter by updated after
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by a starting date
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
              enum:
                - active
                - current
                - late
                - upcoming
                - completed
                - deleted
          - description: filter by an ending date
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter by user id (deprecated, use assignedToUserIds)
            in: query
            name: userId
            schema:
              type: integer
          - description: filter by tasklist id
            in: query
            name: tasklistId
            schema:
              type: integer
          - description: filter by task id (deprecated, use taskIds)
            in: query
            name: taskId
            schema:
              type: integer
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: filter by desk ticket id
            in: query
            name: deskTicketId
            schema:
              type: integer
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: match all project tags
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: get subtask totals
            in: query
            name: includeDescendants
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
              default: 'false'
          - description: filter by user ids (deprecated, use assignedToUserIds)
            in: query
            name: userIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by sub-task status, includeDescendants must be set to true
              for this to have any effect
            in: query
            name: subTaskStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - completed
                  - incomplete
                type: string
              default: all
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - active
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: |-
              filter by project healths

              0: not set
              1: bad
              2: ok
              3: good
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - '0'
                  - '1'
                  - '2'
                  - '3'
                type: integer
          - description: filter by project company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned user ids
            in: query
            name: assignedToUserIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedToTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned company ids
            in: query
            name: assignedToCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assigned team ids
            in: query
            name: assignedTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.TotalsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get timelog totals.
        tags:
          - TimeTracking
    /projects/api/v3/time/{timelogId}.json:
      delete:
        description: Delete a timelog.
        operationId: DELETE_projects_api_v3_time_{timelogId}.json
        parameters:
          - in: path
            name: timelogId
            required: true
            schema:
              type: integer
        responses:
          '204':
            description: 204 No Content (no data)
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Delete an existing timelog.
        tags:
          - TimeTracking
        x-private: true
      get:
        operationId: GET_projects_api_v3_time_{timelogId}.json
        parameters:
          - in: path
            name: timelogId
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a specific time entry
        tags:
          - TimeTracking
      patch:
        description: Modify the properties of an existing time entry.
        operationId: PATCH_projects_api_v3_time_{timelogId}.json
        parameters:
          - in: path
            name: timelogId
            required: true
            schema:
              type: integer
        requestBody:
          $ref: '#/components/requestBodies/timelog.Request'
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timelog.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '403':
            description: 403 Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
          '409':
            description: 409 Conflict
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Update an existing time entry.
        tags:
          - TimeTracking
        x-private: true
    /projects/api/v3/timers.json:
      get:
        description: >-
          Brings back all current running timers. Will return a set of existing
          intervals for each timer.

          If the timer has never been stopped then this interval will only have a
          from property set and

          the you will need to calculate the current duration of the timer.
        operationId: GET_projects_api_v3_timers.json
        parameters:
          - description: filter by updated after date (deprecated, use updatedAfter)
            in: query
            name: updatedAfterDate
            schema:
              type: string
              format: date-time
          - description: filter by updated after date
            in: query
            name: updatedAfter
            schema:
              type: string
              format: date-time
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - description: filter by task id
            in: query
            name: taskId
            schema:
              type: integer
          - description: filter by project id
            in: query
            name: projectId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: include deleted items
            in: query
            name: showDeleted
            schema:
              type: boolean
              default: 'false'
          - description: enforce running timers only
            in: query
            name: runningTimersOnly
            schema:
              type: boolean
              default: 'false'
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - tasks
                  - tasks.parentTasks
                  - tasks.tasklists
                  - users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.TimersResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get all running timers
        tags:
          - TimeTracking
    /projects/api/v3/timers/{timerId}.json:
      get:
        description: Will get a timer with with a specific ID.
        operationId: GET_projects_api_v3_timers_{timerId}.json
        parameters:
          - description: filter by user id
            in: query
            name: userId
            schema:
              type: integer
          - in: path
            name: timerId
            required: true
            schema:
              type: integer
          - description: filter by task id
            in: query
            name: showDeleted
            schema:
              type: boolean
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - projects
                  - tasks
                  - tasks.parentTasks
                  - tasks.tasklists
                  - users
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timers]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - userId
                  - taskId
                  - projectId
                  - description
                  - running
                  - billable
                  - deleted
                  - dateCreated
                  - dateDeleted
                  - duration
                  - lastStartedAt
                  - serverTime
                  - intervals
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[projects]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                type: string
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timer.Response'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
          '404':
            description: 404 Not Found (no data)
        summary: Get a specific timer
        tags:
          - TimeTracking
    /projects/api/v3/timesheets.json:
      get:
        description: >-
          Return a list of timesheet rows for the given user depending on param
          options.
        operationId: GET_projects_api_v3_timesheets.json
        parameters:
          - in: query
            name: weekDate
            schema:
              type: string
          - description: filter by task status
            in: query
            name: taskStatus
            schema:
              type: string
              enum:
                - all
                - completed
                - incomplete
              default: all
          - description: >-
              filter by a starting date, will default to the start of users work
              week.
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by tasks/projects/company names
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - pdf
                - xlsx
                - csv
                - html
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - project
                - company
                - duedate
                - timelogrecency
              default: dueDate
          - description: filter by invoiced type
            in: query
            name: invoicedType
            schema:
              type: string
              enum:
                - all
                - invoiced
                - noninvoiced
              default: all
          - description: >-
              filter by an ending date, will default to the end of users work
              week.
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter by billable type
            in: query
            name: billableType
            schema:
              type: string
              enum:
                - all
                - billable
                - nonbillable
              default: all
          - description: filter by user id, will default to session user
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: filter by starred projects
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include users unavailable times field.
            in: query
            name: includeUnavailableTimes
            schema:
              type: boolean
          - description: filter by tasks and projects that have time logged
            in: query
            name: hasTimeLogged
            schema:
              type: boolean
          - description: also include tasks that are assigned to teams
            in: query
            name: assignedToTeams
            schema:
              type: boolean
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - active
                  - inactive
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
              default: all
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                  - timelogs
                  - tasks
                  - tasks.tasklist
                  - tasks.users
                  - tasks.parentTasks
                  - projects
                  - projects.permissions
                  - timesheetsCustomRows
                  - unavailableTimes
                  - calendarEventTypes
                type: string
          - description: exclude by time frames
            in: query
            name: excludeTimeframes
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - due-this-week
                  - starting-this-week
                  - no-due-date
                  - no-start-date
                  - created-this-week
                  - completed-this-week
                type: string
              default: empty
          - description: filter by company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timesheet.MyTimesheetsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get list of timesheet rows
        tags:
          - Timesheets
    /projects/api/v3/timesheets/totals.json:
      get:
        description: Get the daily totals counts for all the user's timesheets.
        operationId: GET_projects_api_v3_timesheets_totals.json
        parameters:
          - in: query
            name: weekDate
            schema:
              type: string
          - description: filter by task status
            in: query
            name: taskStatus
            schema:
              type: string
              enum:
                - all
                - completed
                - incomplete
              default: all
          - description: >-
              filter by a starting date, will default to the start of users work
              week.
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by tasks/projects/company names
            in: query
            name: searchTerm
            schema:
              type: string
          - description: define the format of the report
            in: query
            name: reportFormat
            schema:
              type: string
              enum:
                - pdf
                - xlsx
                - csv
                - html
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - project
                - company
                - duedate
                - timelogrecency
              default: dueDate
          - description: filter by invoiced type
            in: query
            name: invoicedType
            schema:
              type: string
              enum:
                - all
                - invoiced
                - noninvoiced
              default: all
          - description: >-
              filter by an ending date, will default to the end of users work
              week.
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: filter by billable type
            in: query
            name: billableType
            schema:
              type: string
              enum:
                - all
                - billable
                - nonbillable
              default: all
          - description: filter by user id, will default to session user
            in: query
            name: userId
            schema:
              type: integer
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: filter by starred projects
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: generate a report export.
            in: query
            name: isReportDownload
            schema:
              type: boolean
              default: 'false'
          - description: include users unavailable times field.
            in: query
            name: includeUnavailableTimes
            schema:
              type: boolean
          - description: filter by tasks and projects that have time logged
            in: query
            name: hasTimeLogged
            schema:
              type: boolean
          - description: also include tasks that are assigned to teams
            in: query
            name: assignedToTeams
            schema:
              type: boolean
          - description: filter by task ids
            in: query
            name: taskIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project statuses
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - all
                  - active
                  - inactive
                  - current
                  - late
                  - upcoming
                  - completed
                  - deleted
                type: string
              default: all
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                  - timelogs
                  - tasks
                  - tasks.tasklist
                  - tasks.users
                  - tasks.parentTasks
                  - projects
                  - projects.permissions
                  - timesheetsCustomRows
                  - unavailableTimes
                  - calendarEventTypes
                type: string
          - description: exclude by time frames
            in: query
            name: excludeTimeframes
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - due-this-week
                  - starting-this-week
                  - no-due-date
                  - no-start-date
                  - created-this-week
                  - completed-this-week
                type: string
              default: empty
          - description: filter by company ids
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/timesheet.MyTimesheetsTotalsResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Get the totals for the all the user's timesheets.
        tags:
          - Timesheets
    /projects/api/v3/workload/planners.json:
      get:
        description: Return the workload planner for each users of the installation.
        operationId: GET_projects_api_v3_workload_planners.json
        parameters:
          - description: define the start date of the planner
            in: query
            name: startDate
            schema:
              type: string
              format: date
          - description: filter by user name
            in: query
            name: searchUserName
            schema:
              type: string
          - description: filter by task name
            in: query
            name: searchTaskName
            schema:
              type: string
          - description: filter by project status
            in: query
            name: projectStatus
            schema:
              type: string
          - description: order mode
            in: query
            name: orderMode
            schema:
              type: string
              enum:
                - asc
                - desc
              default: asc
          - description: order by
            in: query
            name: orderBy
            schema:
              type: string
              enum:
                - name
                - company
              default: name
          - description: define the end date of the planner
            in: query
            name: endDate
            schema:
              type: string
              format: date
          - description: number of items in a page
            in: query
            name: pageSize
            schema:
              type: integer
              default: '50'
          - description: page number
            in: query
            name: page
            schema:
              type: integer
              default: '1'
          - description: subtract logged time from task estimated time
            in: query
            name: subtractLoggedTimeFromEstimates
            schema:
              type: boolean
          - description: >-
              SkipCounts allows you to skip doing counts on a list API endpoint
              for

              performance reasons.
            in: query
            name: skipCounts
            schema:
              type: boolean
          - description: >-
              include tasks that have the start and due dates outside the window
              range
            in: query
            name: prorating
            schema:
              type: boolean
              default: 'false'
          - description: filter ony untagged tasks
            in: query
            name: onlyUntaggedTasks
            schema:
              type: boolean
          - description: filter by starred projects only
            in: query
            name: onlyStarredProjects
            schema:
              type: boolean
          - description: enforce all tag ids must be matched
            in: query
            name: matchAllProjectTags
            schema:
              type: boolean
          - description: include team users to the responsible party ids
            in: query
            name: includeTeamUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include tasks without start or due date
            in: query
            name: includeTasksWithoutDates
            schema:
              type: boolean
          - description: include completed tasks
            in: query
            name: includeCompletedTasks
            schema:
              type: boolean
          - description: include company users to the responsible party ids
            in: query
            name: includeCompanyUserIds
            schema:
              type: boolean
              default: 'true'
          - description: include calendar events on capacity calculation
            in: query
            name: includeCalendarEvents
            schema:
              type: boolean
          - description: include teams related to the responsible party ids
            in: query
            name: includeAssigneeTeams
            schema:
              type: boolean
          - description: include companies related to the responsible party ids
            in: query
            name: includeAssigneeCompanies
            schema:
              type: boolean
          - description: include archived projects
            in: query
            name: includeArchivedProjects
            schema:
              type: boolean
          - description: distribute the estimated time for a task between all the assignees
            in: query
            name: distribute
            schema:
              type: boolean
          - description: filter by member of team ids
            in: query
            name: teamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by task tag ids
            in: query
            name: tagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by responsible party ids
            in: query
            name: responsiblePartyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project tag ids
            in: query
            name: projectTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project status
            in: query
            name: projectStatuses
            style: form
            explode: false
            schema:
              type: array
              items:
                type: string
          - description: filter by project owner ids
            in: query
            name: projectOwnerIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project ids
            in: query
            name: projectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: list of project health
            in: query
            name: projectHealths
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by company ids
            in: query
            name: projectCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by project category ids
            in: query
            name: projectCategoryIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by member of project ids
            in: query
            name: memberOfProjectIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: include
            in: query
            name: include
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - users
                  - users.workingHours
                  - users.workingHours.workingHoursEntry
                  - tasks
                  - tasks.timelogs
                  - tasklists
                  - milestones
                  - companies
                  - calendarEvents
                type: string
          - in: query
            name: fields[workingHours]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - objectType
                  - objectId
                  - name
                  - description
                  - dateCreated
                  - dateUpdated
                  - entryIds
                type: string
          - in: query
            name: fields[workingHourEntries]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - workingHourId
                  - weekday
                  - startTime
                  - endTime
                  - taskHours
                  - timezone
                type: string
          - in: query
            name: fields[users]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - firstName
                  - lastName
                  - title
                  - email
                  - companyId
                  - company
                  - isAdmin
                  - isClientUser
                  - isServiceAccount
                  - type
                  - deleted
                  - avatarUrl
                  - lengthOfDay
                  - workingHoursId
                  - workingHour
                  - userRate
                  - userCost
                  - canAddProjects
                type: string
          - in: query
            name: fields[timelogs]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - dateCreated
                  - minutes
                  - description
                  - timeLogged
                  - billable
                  - deleted
                  - dateDeleted
                  - hasStartTime
                  - dateEdited
                  - deskTicketId
                  - userId
                  - taskId
                  - projectId
                  - loggedByUserId
                  - deletedByUserId
                  - editedByUserId
                  - taskIdPreMove
                  - projectBillingInvoiceId
                type: string
          - in: query
            name: fields[tasks]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - dateUpdated
                  - parentTaskId
                  - isPrivate
                  - status
                  - tasklistId
                  - startDate
                  - dueDate
                type: string
          - in: query
            name: fields[tasklists]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - projectId
                  - milestoneId
                type: string
          - in: query
            name: fields[milestones]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - description
                  - deadline
                  - completed
                  - projectId
                  - createdOn
                  - lastChangedOn
                  - creatorUserId
                  - reminder
                  - private
                  - lockdownId
                  - status
                  - completedOn
                  - completerId
                  - percentageComplete
                type: string
          - in: query
            name: fields[companies]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - name
                  - logoUploadedToServer
                  - logoImage
                type: string
          - in: query
            name: fields[calendarEvents]
            style: form
            explode: false
            schema:
              type: array
              items:
                enum:
                  - id
                  - title
                  - startDate
                  - endDate
                  - typeId
                  - privacyType
                  - allDay
                  - location
                  - description
                  - showAsBusy
                  - attendeesCanEdit
                  - projectUsersCanEdit
                  - monthlyRepeatType
                  - dateLastUpdated
                  - createdDateTime
                  - deleted
                  - dateDeleted
                  - additionalProperties
                  - currentUserAssociationType
                  - sequenceId
                  - projectId
                  - ownerUserId
                  - deletedByUserId
                  - createdByUserId
                  - updatedByUserId
                type: string
          - description: filter by removing task tag ids
            in: query
            name: excludeTagIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by user company id
            in: query
            name: companyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee team ids
            in: query
            name: assigneeTeamIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
          - description: filter by assignee company ids
            in: query
            name: assigneeCompanyIds
            style: form
            explode: false
            schema:
              type: array
              items:
                type: integer
        responses:
          '200':
            description: 200 OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/planner.WorkloadPlannersResponse'
          '400':
            description: 400 Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/view.ErrorResponse'
        summary: Retrieve user workload planner
        tags:
          - Workload
  tags:
    - name: Activity
    - name: TimeTracking
    - name: Budgets
    - name: CalendarEvents
    - name: Companies
    - name: CustomFields
    - name: Dashboards
    - name: Features
    - name: FileComments
    - name: FileVersionComments
    - name: Forms
    - name: FormsPublic
    - name: Importers
    - name: Messages
    - name: Milestones
    - name: MilestoneComments
    - name: Notebooks
    - name: NotebookComments
    - name: People
    - name: Person
    - name: Categories
    - name: Projects
    - name: Risks
    - name: Summary
    - name: TaskLists
    - name: Tasks
    - name: ProjectUpdates
    - name: PeopleStatus
    - name: Tags
    - name: Tasklists
    - name: TaskComments
    - name: Timesheets
    - name: Workload
  components:
    requestBodies:
      tag.Request:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tag.Request'
        required: true
      timer.Request:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timer.Request'
        required: true
      task.Request:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/task.Request'
        required: true
      customfield.Request:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customfield.Request'
        required: true
      tasklistbudget.BulkAddBudgetRequest:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tasklistbudget.BulkAddBudgetRequest'
        required: true
      company.Request:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/company.Request'
        required: true
      value.requestCompany:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/value.requestCompany'
        required: true
      form.Request:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/form.Request'
        required: true
      notebook.Request:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notebook.Request'
        required: true
      value.requestProject:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/value.requestProject'
        required: true
      timelog.Request:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timelog.Request'
        required: true
      value.requestTask:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/value.requestTask'
        required: true
    schemas:
      active.ProjectMetricActive:
        description: ProjectMetricActive contains all the information returned from a active.
        properties:
          value:
            type: integer
        title: ProjectMetricActive
        type: object
      active.Response:
        description: Response contains information about a specific active.
        properties:
          data:
            $ref: '#/components/schemas/active.ProjectMetricActive'
        title: Response
        type: object
      activity.ActivitiesResponse:
        description: >-
          ActivitiesResponse contains all the information returned when sending a
          GET

          request to the activity endpoint.
        properties:
          activities:
            items:
              $ref: '#/components/schemas/activity.Activity'
            type: array
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: ActivitiesResponse
        type: object
      activity.Activity:
        description: Activity represents a view of activity.
        properties:
          activityType:
            type: string
          company:
            $ref: '#/components/schemas/view.Relationship'
          companyId:
            type: integer
          dateTime:
            type: string
          description:
            type: string
          dueDate:
            type: string
          extraDescription:
            type: string
          forUser:
            $ref: '#/components/schemas/view.Relationship'
          forUserId:
            type: integer
          forUserName:
            type: string
          id:
            type: integer
          isPrivate:
            type: integer
          item:
            $ref: '#/components/schemas/view.Relationship'
          itemId:
            type: integer
          itemLink:
            type: string
          latestActivityType:
            type: string
          link:
            type: string
          lockdown:
            $ref: '#/components/schemas/view.Relationship'
          lockdownId:
            type: integer
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          publicInfo:
            type: string
          type:
            type: string
          user:
            $ref: '#/components/schemas/view.Relationship'
          userId:
            type: integer
        title: Activity
        type: object
      billable.ProjectMetricBillable:
        description: >-
          ProjectMetricBillable contains all the information returned from a
          billable.
        properties:
          name:
            type: string
          value:
            type: integer
        title: ProjectMetricBillable
        type: object
      billable.ProjectMetricBillablesResponse:
        description: >-
          ProjectMetricBillablesResponse contains information about a group of
          billables.
        properties:
          data:
            items:
              $ref: '#/components/schemas/billable.ProjectMetricBillable'
            type: array
        title: ProjectMetricBillablesResponse
        type: object
      category.CategoriesResponse:
        description: CategoriesResponse contains information about a group of categories.
        properties:
          projectCategories:
            items:
              $ref: '#/components/schemas/view.ProjectCategory'
            type: array
          projectCategoryTotals:
            $ref: '#/components/schemas/view.CategoryTotals'
        title: CategoriesResponse
        type: object
      comment.CommentsResponse:
        description: CommentsResponse contains information about a group of comments.
        properties:
          comments:
            items:
              $ref: '#/components/schemas/comment.FullComment'
            type: array
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              files:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectFileV205'
                type: object
              fileversions:
                additionalProperties:
                  $ref: '#/components/schemas/view.FileversionV205'
                type: object
              links:
                additionalProperties:
                  $ref: '#/components/schemas/view.LinkItem'
                type: object
              milestones:
                additionalProperties:
                  $ref: '#/components/schemas/view.Milestone'
                type: object
              notebooks:
                additionalProperties:
                  $ref: '#/components/schemas/view.Notebook'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: CommentsResponse
        type: object
      comment.FullComment:
        description: FullComment contains the full information for a comment
        properties:
          body:
            type: string
          commentLink:
            type: string
          contentType:
            type: string
          dateDeleted:
            type: string
          dateLastEdited:
            type: string
          deleted:
            type: boolean
          deletedBy:
            type: integer
          deletedByUserId:
            type: integer
          fileCount:
            type: integer
          fileIds:
            items:
              type: integer
            type: array
          files:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          htmlBody:
            type: string
          id:
            type: integer
          installation:
            $ref: '#/components/schemas/view.Relationship'
          installationId:
            type: integer
          isPrivate:
            type: integer
          lastEditedBy:
            type: integer
          lastEditedByUserId:
            type: integer
          lockdownID:
            type: integer
          meta:
            $ref: '#/components/schemas/comment.Meta'
          object:
            $ref: '#/components/schemas/view.Relationship'
          objectId:
            type: integer
          objectType:
            type: string
          peopleNotifiedCount:
            type: integer
          postedBy:
            type: integer
          postedByUserId:
            type: integer
          postedDateTime:
            type: string
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          reactions:
            items:
              $ref: '#/components/schemas/view.Reaction'
            type: array
          reactionsCount:
            type: integer
        title: FullComment
        type: object
      comment.Meta:
        description: Meta contains metadata for a comment, such as permissions
        properties:
          isRead:
            type: boolean
          permissions:
            $ref: '#/components/schemas/comment.Permissions'
        title: Meta
        type: object
      comment.Permissions:
        description: Permissions are the permissions the user has for the comment
        properties:
          canDelete:
            type: boolean
          canEdit:
            type: boolean
        title: Permissions
        type: object
      company.CompaniesResponse:
        description: CompaniesResponse contains information about a group of companies.
        properties:
          companies:
            items:
              $ref: '#/components/schemas/view.Company'
            type: array
          included:
            properties:
              countries:
                additionalProperties:
                  $ref: '#/components/schemas/view.Country'
                type: object
              customfieldCompanies:
                additionalProperties:
                  $ref: '#/components/schemas/view.CustomFieldValueCompany'
                type: object
              customfields:
                additionalProperties:
                  $ref: '#/components/schemas/view.CustomField'
                type: object
              industries:
                additionalProperties:
                  $ref: '#/components/schemas/view.Industry'
                type: object
              tags:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tag'
                type: object
              updates:
                additionalProperties:
                  $ref: '#/components/schemas/view.CompanyUpdate'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          letters:
            items:
              type: string
            type: array
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: CompaniesResponse
        type: object
      company.Company:
        description: Company contains all the information returned from a company.
        properties:
          addressOne:
            type: string
          addressTwo:
            type: string
          cid:
            type: string
          city:
            type: string
          clientManagedBy:
            type: integer
          countrycode:
            type: string
          customFields:
            $ref: '#/components/schemas/company.CustomFields'
          emailOne:
            type: string
          emailThree:
            type: string
          emailTwo:
            type: string
          fax:
            type: string
          industryCatId:
            type: integer
          logoPendingFileRef:
            type: string
          name:
            type: string
          phone:
            type: string
          privateNotes:
            type: string
          profile:
            type: string
          state:
            type: string
          tagIds:
            items:
              type: integer
            type: array
          website:
            type: string
          zip:
            type: string
        title: Company
        type: object
      company.CustomFields:
        description: CustomFields is the custom fields type.
        properties:
          Values:
            items:
              $ref: '#/components/schemas/value.CustomFieldValue'
            type: array
        title: CustomFields
        type: object
      company.Request:
        description: Request contains information of a company to be created or updated.
        properties:
          company:
            $ref: '#/components/schemas/company.Company'
          companyOptions:
            properties:
              fireWebhook:
                type: boolean
              logActivity:
                type: boolean
              useNotifyViaTWIM:
                type: boolean
            type: object
          tags:
            items:
              $ref: '#/components/schemas/tag.Tag'
            type: array
        title: Request
        type: object
      company.Response:
        description: Response contains information about a specific company.
        properties:
          company:
            $ref: '#/components/schemas/view.Company'
          included:
            properties:
              countries:
                additionalProperties:
                  $ref: '#/components/schemas/view.Country'
                type: object
              customfieldCompanies:
                additionalProperties:
                  $ref: '#/components/schemas/view.CustomFieldValueCompany'
                type: object
              customfields:
                additionalProperties:
                  $ref: '#/components/schemas/view.CustomField'
                type: object
              industries:
                additionalProperties:
                  $ref: '#/components/schemas/view.Industry'
                type: object
              tags:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tag'
                type: object
              updates:
                additionalProperties:
                  $ref: '#/components/schemas/view.CompanyUpdate'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
        title: Response
        type: object
      complete.Response:
        description: Response contains information about a specific complete.
        properties:
          data:
            $ref: '#/components/schemas/complete.TaskMetricComplete'
        title: Response
        type: object
      complete.TaskMetricComplete:
        description: >-
          TaskMetricComplete contains all the information returned from a
          complete.
        properties:
          value:
            type: integer
        title: TaskMetricComplete
        type: object
      customfield.BulkDeleteRequest:
        description: |-
          BulkDeleteRequest contains the ids of the custom fields that should be
          removed.
        properties:
          customfieldIds:
            items:
              type: integer
            type: array
        title: BulkDeleteRequest
        type: object
      customfield.CustomField:
        description: CustomField contains all the information returned from a custom field.
        properties:
          currencyCode:
            type: string
          description:
            type: string
          entity:
            description: using a verbose name to avoid conflict
            type: string
          formula:
            type: string
          groupId:
            type: integer
          isPrivate:
            type: boolean
          name:
            type: string
          options: {}
          privacy:
            $ref: '#/components/schemas/payload.UserGroups'
          projectId:
            type: integer
          required:
            type: boolean
          type:
            type: string
          visibilities:
            items:
              type: string
            type: array
        title: CustomField
        type: object
      customfield.CustomFieldsResponse:
        description: >-
          CustomFieldsResponse contains information about a group of custom
          fields.
        properties:
          customfields:
            items:
              $ref: '#/components/schemas/view.CustomField'
            type: array
          included:
            properties:
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: CustomFieldsResponse
        type: object
      customfield.Request:
        description: Request contains information of a custom field to be created or updated.
        properties:
          customfield:
            $ref: '#/components/schemas/customfield.CustomField'
        title: Request
        type: object
      customfield.Response:
        description: Response contains information about a specific customfield.
        properties:
          count:
            type: integer
          customfield:
            $ref: '#/components/schemas/view.CustomField'
        title: Response
        type: object
      dashboard.UserDashboardsResponse:
        description: UserDashboardsResponse contains information about a group of dashboards.
        properties:
          dashboards:
            items:
              $ref: '#/components/schemas/view.UserDashboard'
            type: array
          included:
            properties:
              dashboardPanelSettings:
                additionalProperties:
                  $ref: '#/components/schemas/view.UserDashboardPanelSetting'
                type: object
              dashboardPanels:
                additionalProperties:
                  $ref: '#/components/schemas/view.UserDashboardPanel'
                type: object
              dashboardSettings:
                additionalProperties:
                  $ref: '#/components/schemas/view.UserDashboardSetting'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: UserDashboardsResponse
        type: object
      deadline.MilestoneMetricDeadline:
        description: >-
          MilestoneMetricDeadline contains all the information returned from a
          deadline.
        properties:
          date:
            type: string
          value:
            type: integer
        title: MilestoneMetricDeadline
        type: object
      deadline.MilestoneMetricDeadlinesResponse:
        description: >-
          MilestoneMetricDeadlinesResponse contains information about a group of
          deadlines.
        properties:
          data:
            items:
              $ref: '#/components/schemas/deadline.MilestoneMetricDeadline'
            type: array
        title: MilestoneMetricDeadlinesResponse
        type: object
      entity.ProjectBudgetRange:
        description: ProjectBudgetRange is a distribution item type.
        properties:
          companyId:
            type: integer
          count:
            type: integer
          from:
            type: integer
          to:
            type: integer
        title: ProjectBudgetRange
        type: object
      form.Banner:
        description: Banner contains information of a form banner to be created or updated.
        properties:
          accentColor:
            type: string
          primaryColor:
            type: string
          url:
            type: string
          x:
            type: number
          'y':
            type: number
        title: Banner
        type: object
      form.Content:
        description: Content contains information of a form content to be created or updated.
        properties:
          banner:
            $ref: '#/components/schemas/form.Banner'
          definition:
            type: string
          description:
            type: string
          logo:
            $ref: '#/components/schemas/form.Logo'
          name:
            type: string
          pendingBannerId:
            type: string
          pendingLogoId:
            type: string
          state:
            type: string
        title: Content
        type: object
      form.CopyForm:
        description: CopyForm contains information on where and what to copy from a form
        properties:
          copyAssignees:
            type: boolean
          generateToken:
            type: boolean
          hostObject:
            $ref: '#/components/schemas/form.HostObject'
          projectIds:
            items:
              type: integer
            type: array
          title:
            type: string
        title: CopyForm
        type: object
      form.CopyRequest:
        description: CopyRequest outter request for copying a form
        properties:
          form:
            $ref: '#/components/schemas/form.CopyForm'
        title: CopyRequest
        type: object
      form.DestinationObject:
        description: >-
          DestinationObject contains information of a form destination object to
          be created or updated.
        properties:
          id:
            type: integer
          type:
            type: string
        title: DestinationObject
        type: object
      form.Form:
        description: Form contains information of a form to be created or updated.
        properties:
          allowTeamworkBranding:
            type: boolean
          confirmationMessage:
            type: string
          content:
            $ref: '#/components/schemas/form.Content'
          destinationObject:
            $ref: '#/components/schemas/form.DestinationObject'
          hostObject:
            $ref: '#/components/schemas/form.HostObject'
          primaryColor:
            type: string
          promptAdditionalSubmissions:
            type: boolean
          redirectUrl:
            type: string
          responseEmailFieldId:
            type: string
          submitButtonText:
            type: string
          taskTitleFieldId:
            type: string
        title: Form
        type: object
      form.FormsResponse:
        description: FormsResponse contains information about a group of forms.
        properties:
          forms:
            items:
              $ref: '#/components/schemas/view.Form'
            type: array
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: FormsResponse
        type: object
      form.HostObject:
        description: >-
          HostObject contains information of a form host object to be created or
          updated.
        properties:
          id:
            type: integer
          meta:
            $ref: '#/components/schemas/form.HostObjectMeta'
          type:
            type: string
        title: HostObject
        type: object
      form.HostObjectMeta:
        description: >-
          HostObjectMeta contains information of a form host object meta to be
          created or updated.
        properties:
          tasklistId:
            type: integer
        title: HostObjectMeta
        type: object
      form.Logo:
        description: >-
          Logo contains information of a form custom logo to be created or
          updated.
        properties:
          url:
            type: string
        title: Logo
        type: object
      form.PublicResponse:
        description: PublicResponse contains information about a specific public form.
        properties:
          form:
            $ref: '#/components/schemas/view.PublicForm'
        title: PublicResponse
        type: object
      form.Request:
        description: Request contains information of a form to be created or updated.
        properties:
          form:
            $ref: '#/components/schemas/form.Form'
        title: Request
        type: object
      form.Response:
        description: Response contains information about a specific form.
        properties:
          form:
            $ref: '#/components/schemas/view.Form'
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
        title: Response
        type: object
      health.ProjectMetricHealth:
        description: ProjectMetricHealth stores a specific health counter.
        properties:
          name:
            type: string
          value:
            type: integer
        title: ProjectMetricHealth
        type: object
      health.ProjectMetricHealthsResponse:
        description: >-
          ProjectMetricHealthsResponse contains information about a group of
          healths.

          Following this format to satisfy the Numerics integration.
        properties:
          data:
            items:
              $ref: '#/components/schemas/health.ProjectMetricHealth'
            type: array
        title: ProjectMetricHealthsResponse
        type: object
      importer.Importer:
        description: Importer single importer for response.
        properties:
          name:
            type: string
          running:
            type: boolean
          status:
            type: string
        title: Importer
        type: object
      importer.ImportersResponse:
        description: ImportersResponse contains information about a group of importers.
        properties:
          importers:
            items:
              $ref: '#/components/schemas/importer.Importer'
            type: array
          isImporting:
            type: boolean
        title: ImportersResponse
        type: object
      invoice.ProjectMetricInvoicesResponse:
        description: >-
          ProjectMetricInvoicesResponse contains information about a group of
          invoices.
        properties:
          data:
            properties:
              value:
                type: integer
            type: object
        title: ProjectMetricInvoicesResponse
        type: object
      late.Response:
        description: |-
          Response contains the count of late tasks.
          Following this format to satisfy the Numerics integration.
        properties:
          data:
            $ref: '#/components/schemas/late.TaskMetricLate'
        title: Response
        type: object
      late.TaskMetricLate:
        description: TaskMetricLate contains count information about late tasks.
        properties:
          value:
            type: integer
        title: TaskMetricLate
        type: object
      message.MessagesResponse:
        description: >-
          MessagesResponse contains all the information returned when sending a
          GET

          request to the message endpoint.
        properties:
          included:
            properties:
              Included:
                $ref: '#/components/schemas/messagereply.Included'
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              messageReplies:
                additionalProperties:
                  $ref: '#/components/schemas/view.MessageReply'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          messages:
            items:
              $ref: '#/components/schemas/view.Message'
            type: array
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: MessagesResponse
        type: object
      message.Request:
        description: Request contains information of a message to be created or updated.
        properties:
          read:
            type: boolean
        title: Request
        type: object
      message.Response:
        description: Response contains information about a specific message.
        properties:
          included:
            properties:
              Included:
                $ref: '#/components/schemas/messagereply.Included'
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              messageReplies:
                additionalProperties:
                  $ref: '#/components/schemas/view.MessageReply'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          message:
            $ref: '#/components/schemas/view.Message'
        title: Response
        type: object
      messagereply.Included:
        description: Included contains sideloadable stuff for message replies.
        properties:
          messages:
            additionalProperties:
              $ref: '#/components/schemas/view.Message'
            type: object
          tags:
            additionalProperties:
              $ref: '#/components/schemas/view.Tag'
            type: object
          users:
            additionalProperties:
              $ref: '#/components/schemas/view.User'
            type: object
        title: Included
        type: object
      milestone.MilestonesResponse:
        description: MilestonesResponse contains information about a group of milestones.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              projectCategories:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectCategory'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tags:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tag'
                type: object
              tasklistTaskStats:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskStats'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              teams:
                additionalProperties:
                  $ref: '#/components/schemas/view.Team'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          milestones:
            items:
              $ref: '#/components/schemas/view.Milestone'
            type: array
        title: MilestonesResponse
        type: object
      milestone.Response:
        description: Response contains information about a milestone.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              projectCategories:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectCategory'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tags:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tag'
                type: object
              tasklistTaskStats:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskStats'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              teams:
                additionalProperties:
                  $ref: '#/components/schemas/view.Team'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          milestone:
            $ref: '#/components/schemas/view.Milestone'
        title: Response
        type: object
      notebook.Notebook:
        description: Notebook contains all the information returned from a notebook.
        properties:
          categoryId:
            type: integer
          contents:
            type: string
          description:
            type: string
          isFullWidth:
            type: boolean
          isPrivate:
            type: boolean
          locked:
            type: boolean
          name:
            type: string
          newVersion:
            type: boolean
          notify:
            $ref: '#/components/schemas/payload.Notify'
          notifyCurrentUser:
            type: boolean
          privacy:
            $ref: '#/components/schemas/payload.UserGroups'
          secureContent:
            type: boolean
          sendDiff:
            type: boolean
          tagIds:
            items:
              type: integer
            type: array
          type:
            type: string
        title: Notebook
        type: object
      notebook.NotebooksResponse:
        description: NotebooksResponse contains information about a group of notebooks.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              notebookCategories:
                additionalProperties:
                  $ref: '#/components/schemas/view.NotebookCategory'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tags:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tag'
                type: object
              teams:
                additionalProperties:
                  $ref: '#/components/schemas/view.Team'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          notebooks:
            items:
              $ref: '#/components/schemas/view.Notebook'
            type: array
        title: NotebooksResponse
        type: object
      notebook.Request:
        description: Request contains information of a notebook to be created or updated.
        properties:
          notebook:
            $ref: '#/components/schemas/notebook.Notebook'
        title: Request
        type: object
      notebook.Response:
        description: Response contains information about a specific notebook.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              notebookCategories:
                additionalProperties:
                  $ref: '#/components/schemas/view.NotebookCategory'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tags:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tag'
                type: object
              teams:
                additionalProperties:
                  $ref: '#/components/schemas/view.Team'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          notebook:
            $ref: '#/components/schemas/view.Notebook'
        title: Response
        type: object
      notebook.VersionResponse:
        description: VersionResponse contains information about a specifc notebook version
        properties:
          included:
            properties:
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          version:
            $ref: '#/components/schemas/view.NotebookVersion'
        title: VersionResponse
        type: object
      notebook.VersionsResponse:
        description: VersionsResponse contains information about a group of notebook versions
        properties:
          included:
            properties:
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          versions:
            items:
              $ref: '#/components/schemas/view.NotebookVersion'
            type: array
        title: VersionsResponse
        type: object
      notification.ProjectBudgetNotification:
        description: >-
          ProjectBudgetNotification contains all the information returned from a
          notification.
        properties:
          budgetId:
            type: integer
          capacityThreshold:
            type: number
          companyIds:
            items:
              type: integer
            type: array
          id:
            type: integer
          notificationMedium:
            type: string
          projectId:
            type: integer
          teamIds:
            items:
              type: integer
            type: array
          userIds:
            items:
              type: integer
            type: array
        title: ProjectBudgetNotification
        type: object
      notification.ProjectBudgetRequest:
        description: >-
          ProjectBudgetRequest contains information of a notification to be
          created or updated.
        properties:
          notification:
            $ref: '#/components/schemas/notification.ProjectBudgetNotification'
        title: ProjectBudgetRequest
        type: object
      notification.Response:
        description: Response contains information about a specific notification.
        properties:
          notification:
            $ref: '#/components/schemas/view.Notification'
        title: Response
        type: object
      owner.ProjectMetricOwner:
        description: ProjectMetricOwner contains information about a specific owner.
        properties:
          name:
            type: string
          value:
            type: integer
        title: ProjectMetricOwner
        type: object
      owner.ProjectMetricOwnersResponse:
        description: >-
          ProjectMetricOwnersResponse contains information about a group of
          owners.
        properties:
          data:
            items:
              $ref: '#/components/schemas/owner.ProjectMetricOwner'
            type: array
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: ProjectMetricOwnersResponse
        type: object
      payload.Date:
        description: Date unmarshals represents a Unified API Spec date format.
        title: Date
        type: object
      payload.Notify:
        description: Notify defines the access lists.
        properties:
          ids:
            $ref: '#/components/schemas/payload.UserGroups'
          type:
            $ref: '#/components/schemas/payload.NotifyType'
        title: Notify
        type: object
      payload.NotifyType:
        description: |-
          NotifyType implements json.Unmarshaler to allow testing between a value
          that explicitly set to null or omitted.
        properties:
          'Null':
            type: boolean
          Set:
            type: boolean
          Value:
            type: string
        title: NotifyType
        type: object
      payload.NullableDate:
        description: >-
          NullableDate implements json.Unmarshaler to allow testing between a
          value

          that explicitly set to null or omitted.

          Date format "2006-01-02"
        properties:
          'Null':
            type: boolean
          Set:
            type: boolean
          Value:
            $ref: '#/components/schemas/payload.Date'
        title: NullableDate
        type: object
      payload.NullableInt64Slice:
        description: >-
          NullableInt64Slice implements json.Unmarshaler to allow testing between
          a

          value that explicitly set to null or omitted.
        properties:
          'Null':
            type: boolean
          Set:
            type: boolean
          Value:
            items:
              type: integer
            type: array
        title: NullableInt64Slice
        type: object
      payload.NullableTaskPriority:
        description: |-
          NullableTaskPriority implements json.Unmarshaler to allow testing
          between a value that explicitly set to null or omitted.
        properties:
          'Null':
            type: boolean
          Set:
            type: boolean
          Value:
            type: string
        title: NullableTaskPriority
        type: object
      payload.NullableTaskRepeatFrequency:
        description: |-
          NullableTaskRepeatFrequency implements json.Unmarshaler to allow testing
          between a value that explicitly set to null or omitted.
        properties:
          'Null':
            type: boolean
          Set:
            type: boolean
          Value:
            type: string
        title: NullableTaskRepeatFrequency
        type: object
      payload.NullableTaskRepeatMonthlyType:
        description: >-
          NullableTaskRepeatMonthlyType implements json.Unmarshaler to allow
          testing

          between a value that explicitly set to null or omitted.
        properties:
          'Null':
            type: boolean
          Set:
            type: boolean
          Value:
            type: string
        title: NullableTaskRepeatMonthlyType
        type: object
      payload.NullableWorkingHourEntryWeekdays:
        description: >-
          NullableWorkingHourEntryWeekdays implements json.Unmarshaler to allow
          testing

          between a value that explicitly set to null or omitted.
        properties:
          'Null':
            type: boolean
          Set:
            type: boolean
          Value:
            items:
              type: string
            type: array
        title: NullableWorkingHourEntryWeekdays
        type: object
      payload.Time:
        description: Time unmarshals represents a Unified API Spec date format.
        title: Time
        type: object
      payload.UserGroups:
        description: |-
          UserGroups are common lists for storing users, companies and teams ids
          together.
        properties:
          companyIds:
            $ref: '#/components/schemas/payload.NullableInt64Slice'
          teamIds:
            $ref: '#/components/schemas/payload.NullableInt64Slice'
          userIds:
            $ref: '#/components/schemas/payload.NullableInt64Slice'
        title: UserGroups
        type: object
      people.AddPeopleToProjectResponse:
        description: >-
          AddPeopleToProjectResponse contains information about which users were
          and weren't add to the project as well

          as why the users were not able to be added
        properties:
          info:
            items:
              type: string
            type: array
          teamIds:
            items:
              type: integer
            type: array
          usersAdded:
            items:
              type: integer
            type: array
          usersAlreadyInProject:
            items:
              type: integer
            type: array
          usersNotAdded:
            items:
              type: integer
            type: array
        title: AddPeopleToProjectResponse
        type: object
      people.MultiResponse:
        description: MultiResponse contains information about a group of users.
        properties:
          included:
            properties:
              ProjectPermissions:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectPermissions'
                type: object
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              teams:
                additionalProperties:
                  $ref: '#/components/schemas/view.Team'
                type: object
              workingHours:
                additionalProperties:
                  $ref: '#/components/schemas/view.WorkingHour'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          people:
            items:
              $ref: '#/components/schemas/view.User'
            type: array
        title: MultiResponse
        type: object
      people.Response:
        description: Response contains information about a user.
        properties:
          included:
            properties:
              ProjectPermissions:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectPermissions'
                type: object
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              teams:
                additionalProperties:
                  $ref: '#/components/schemas/view.Team'
                type: object
              workingHours:
                additionalProperties:
                  $ref: '#/components/schemas/view.WorkingHour'
                type: object
            type: object
          person:
            $ref: '#/components/schemas/view.User'
        title: Response
        type: object
      people.TaskCompletion:
        description: TaskCompletion contains information about tasks completed by a user.
        properties:
          activeProjects:
            type: integer
          assignedTasks:
            type: integer
          completedTasks:
            type: integer
          overdueTasks:
            type: integer
          userId:
            type: integer
        title: TaskCompletion
        type: object
      people.TaskCompletionResponse:
        description: >-
          TaskCompletionResponse contains information about tasks completed by a
          user.
        properties:
          included:
            properties:
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          taskCompletions:
            $ref: '#/components/schemas/people.TaskCompletions'
        title: TaskCompletionResponse
        type: object
      people.TaskCompletions:
        description: >-
          TaskCompletions represents a summary row of total computed counts of,
          plus individual user data

          /reporting/precanned/usertaskcompletions.json endpoint
        properties:
          totalActiveProjects:
            type: integer
          totalAssignedTasks:
            type: integer
          totalCompletedTasks:
            type: integer
          totalOverdueTasks:
            type: integer
          users:
            items:
              $ref: '#/components/schemas/people.TaskCompletion'
            type: array
        title: TaskCompletions
        type: object
      people.UsersPayload:
        description: UsersPayload consists of userIDs
        properties:
          checkTeamIds:
            items:
              type: integer
            type: array
          userIds:
            items:
              type: integer
            type: array
        title: UsersPayload
        type: object
      performance.PeopleMetricPerformance:
        description: >-
          PeopleMetricPerformance contains all the information returned from a
          performance.
        properties:
          name:
            type: string
          value:
            type: integer
        title: PeopleMetricPerformance
        type: object
      performance.PeopleMetricPerformancesResponse:
        description: >-
          PeopleMetricPerformancesResponse contains information about a group of
          performances.
        properties:
          data:
            items:
              $ref: '#/components/schemas/performance.PeopleMetricPerformance'
            type: array
        title: PeopleMetricPerformancesResponse
        type: object
      planner.WorkloadPlanner:
        description: WorkloadPlanner contains all the information returned from a planner.
        properties:
          capacities:
            additionalProperties:
              $ref: '#/components/schemas/planner.WorkloadPlannerCapacity'
            type: object
          user:
            $ref: '#/components/schemas/view.Relationship'
          userId:
            type: integer
        title: WorkloadPlanner
        type: object
      planner.WorkloadPlannerCapacity:
        description: |-
          WorkloadPlannerCapacity contains the information regarding an user on a
          specific date.
        properties:
          capacity:
            description: percentage
            type: number
          estimateMinutesTotal:
            type: number
          lengthOfDayMinutes:
            type: number
          tasks:
            items:
              $ref: '#/components/schemas/planner.WorkloadPlannerCapacityTask'
            type: array
        title: WorkloadPlannerCapacity
        type: object
      planner.WorkloadPlannerCapacityTask:
        description: >-
          WorkloadPlannerCapacityTask provides how many minutes should a user work
          in a

          task for a specific date.
        properties:
          estimateMinutes:
            type: number
          taskId:
            type: integer
        title: WorkloadPlannerCapacityTask
        type: object
      planner.WorkloadPlannersResponse:
        description: WorkloadPlannersResponse contains information about a group of planners.
        properties:
          included:
            properties:
              calendarEvents:
                additionalProperties:
                  $ref: '#/components/schemas/view.LegacyCalendarEvent'
                type: object
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              milestones:
                additionalProperties:
                  $ref: '#/components/schemas/view.Milestone'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              timelogs:
                additionalProperties:
                  $ref: '#/components/schemas/view.Timelog'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
              workingHourEntries:
                additionalProperties:
                  $ref: '#/components/schemas/view.WorkingHourEntry'
                type: object
              workingHours:
                additionalProperties:
                  $ref: '#/components/schemas/view.WorkingHour'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          planners:
            items:
              $ref: '#/components/schemas/planner.WorkloadPlanner'
            type: array
        title: WorkloadPlannersResponse
        type: object
      priceplan.FeaturesResponse:
        description: >-
          FeaturesResponse contains all the information returned when sending a
          GET

          request to the features endpoint.
        properties:
          features:
            items:
              $ref: '#/components/schemas/view.Feature'
            type: array
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: FeaturesResponse
        type: object
      project.FeatureOrder:
        description: |-
          FeatureOrder contains the information of the feature
          order to display in the UI for a project.
        properties:
          billing:
            type: integer
          board:
            type: integer
          comments:
            type: integer
          dashboard:
            type: integer
          files:
            type: integer
          finance:
            type: integer
          forms:
            type: integer
          gantt:
            type: integer
          id:
            type: integer
          installationId:
            type: integer
          links:
            type: integer
          list:
            type: integer
          messages:
            type: integer
          milestones:
            type: integer
          notebooks:
            type: integer
          numVisibleTabs:
            type: integer
          people:
            type: integer
          projectId:
            type: integer
          proofs:
            type: integer
          risks:
            type: integer
          settings:
            type: integer
          table:
            type: integer
          time:
            type: integer
        title: FeatureOrder
        type: object
      project.FeatureOrderDefaults:
        description: |-
          FeatureOrderDefaults is the payload used to set
          the defaults for all projects feature order, and
          allows to also update the projects that have
          an explicitly set defaults
        properties:
          billing:
            type: integer
          board:
            type: integer
          comments:
            type: integer
          dashboard:
            type: integer
          files:
            type: integer
          finance:
            type: integer
          forms:
            type: integer
          gantt:
            type: integer
          links:
            type: integer
          list:
            type: integer
          messages:
            type: integer
          milestones:
            type: integer
          notebooks:
            type: integer
          numVisibleTabs:
            type: integer
          people:
            type: integer
          proofs:
            type: integer
          risks:
            type: integer
          settings:
            type: integer
          table:
            type: integer
          time:
            type: integer
        title: FeatureOrderDefaults
        type: object
      project.FeatureOrderRequest:
        description: |-
          FeatureOrderRequest is the payload used to set
          the project features order as we want to appear
          in the UI tabs selection
        properties:
          featureOrder:
            $ref: '#/components/schemas/project.FeatureOrder'
          featureOrderOptions:
            properties:
              useNotifyViaTWIM:
                type: boolean
            type: object
        title: FeatureOrderRequest
        type: object
      project.FeatureOrderResponse:
        description: |-
          FeatureOrderResponse is the api response containing
          information about the order to display the featues in the UI.
        properties:
          featureOrder:
            $ref: '#/components/schemas/project.FeatureOrder'
        title: FeatureOrderResponse
        type: object
      project.Included:
        description: Included is the task sideloads
        properties:
          activities:
            additionalProperties:
              $ref: '#/components/schemas/view.ActivityLog'
            type: object
          companies:
            additionalProperties:
              $ref: '#/components/schemas/view.Company'
            type: object
          countries:
            additionalProperties:
              $ref: '#/components/schemas/view.Country'
            type: object
          customfieldProjects:
            additionalProperties:
              $ref: '#/components/schemas/view.CustomFieldValueProject'
            type: object
          customfields:
            additionalProperties:
              $ref: '#/components/schemas/view.CustomField'
            type: object
          industries:
            additionalProperties:
              $ref: '#/components/schemas/view.Industry'
            type: object
          portfolioBoards:
            additionalProperties:
              $ref: '#/components/schemas/view.PortfolioBoard'
            type: object
          portfolioCards:
            additionalProperties:
              $ref: '#/components/schemas/view.PortfolioCard'
            type: object
          portfolioColumns:
            additionalProperties:
              $ref: '#/components/schemas/view.PortfolioColumn'
            type: object
          projectBudgets:
            additionalProperties:
              $ref: '#/components/schemas/view.ProjectBudget'
            type: object
          projectCategories:
            additionalProperties:
              $ref: '#/components/schemas/view.ProjectCategory'
            type: object
          projectEmailDropboxes:
            additionalProperties:
              $ref: '#/components/schemas/view.ProjectEmailDropbox'
            type: object
          projectTaskStats:
            additionalProperties:
              $ref: '#/components/schemas/view.TaskStats'
            type: object
          projectUpdates:
            additionalProperties:
              $ref: '#/components/schemas/view.ProjectUpdate'
            type: object
          stages:
            additionalProperties:
              $ref: '#/components/schemas/view.Stage'
            type: object
          tags:
            additionalProperties:
              $ref: '#/components/schemas/view.Tag'
            type: object
          users:
            additionalProperties:
              $ref: '#/components/schemas/view.User'
            type: object
          workflows:
            additionalProperties:
              $ref: '#/components/schemas/view.Workflow'
            type: object
        title: Included
        type: object
      project.SampleProjectsResponse:
        description: >-
          SampleProjectsResponse contains information about a group of sample
          projects.
        properties:
          included:
            properties:
              projectCategories:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectCategory'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          projects:
            items:
              $ref: '#/components/schemas/view.SampleProject'
            type: array
        title: SampleProjectsResponse
        type: object
      project.projectsResponseV205:
        description: projectsResponseV205 contains information about a group of projects.
        properties:
          included:
            $ref: '#/components/schemas/project.Included'
          meta:
            $ref: '#/components/schemas/view.Meta'
          projects:
            items:
              $ref: '#/components/schemas/view.ProjectV205'
            type: array
        title: projectsResponseV205
        type: object
      project.responseV205:
        description: responseV205 contains information about a project.
        properties:
          included:
            $ref: '#/components/schemas/project.Included'
          meta:
            $ref: '#/components/schemas/view.Meta'
          project:
            $ref: '#/components/schemas/view.ProjectV205'
        title: responseV205
        type: object
      risk.RisksResponse:
        description: |-
          RisksResponse contains all the information returned when sending a GET
          request to the risk endpoint.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          risks:
            items:
              $ref: '#/components/schemas/view.Risk'
            type: array
        title: RisksResponse
        type: object
      status.TimelineResponse:
        description: TimelineResponse contains information about a group of statuses.
        properties:
          included:
            properties:
              userEvents:
                additionalProperties:
                  $ref: '#/components/schemas/view.UserEvents'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          statuses:
            items:
              $ref: '#/components/schemas/view.Status'
            type: array
        title: TimelineResponse
        type: object
      summary.ColumnCardResponse:
        description: ColumnCardResponse contains counters from column's cards.
        properties:
          active:
            type: integer
          archived:
            type: integer
          completed:
            type: integer
          count:
            type: integer
        title: ColumnCardResponse
        type: object
      summary.ColumnDataResponse:
        description: ColumnDataResponse contains information of a specific column.
        properties:
          cards:
            $ref: '#/components/schemas/summary.ColumnCardResponse'
          color:
            type: string
          estimatedTime:
            $ref: '#/components/schemas/summary.ColumnEstimatedResponse'
          id:
            type: integer
          name:
            type: string
        title: ColumnDataResponse
        type: object
      summary.ColumnEstimatedResponse:
        description: |-
          ColumnEstimatedResponse contains estimated counters about the
          columns's state.
        properties:
          active:
            type: integer
          archived:
            type: integer
          completed:
            type: integer
          total:
            type: integer
        title: ColumnEstimatedResponse
        type: object
      summary.ColumnResponse:
        description: ColumnResponse contains counters for columns.
        properties:
          count:
            type: integer
          data:
            items:
              $ref: '#/components/schemas/summary.ColumnDataResponse'
            type: array
        title: ColumnResponse
        type: object
      summary.EventResponse:
        description: EventResponse contains counters for events.
        properties:
          today:
            type: integer
          upcoming:
            type: integer
        title: EventResponse
        type: object
      summary.HealthResponse:
        description: HealthResponse contains counters for health.
        properties:
          '0':
            type: integer
          '1':
            type: integer
          '2':
            type: integer
          '3':
            type: integer
        title: HealthResponse
        type: object
      summary.MilestoneCountsResponse:
        description: MilestoneCountsResponse contains counters for milestones.
        properties:
          active:
            type: integer
          complete:
            type: integer
          late:
            type: integer
          today:
            type: integer
          upcoming:
            type: integer
        title: MilestoneCountsResponse
        type: object
      summary.MilestoneResponse:
        description: MilestoneResponse contains groups of counter for milestones.
        properties:
          everyone:
            $ref: '#/components/schemas/summary.MilestoneCountsResponse'
          mine:
            $ref: '#/components/schemas/summary.MilestoneCountsResponse'
        title: MilestoneResponse
        type: object
      summary.ProjectResponse:
        description: |-
          ProjectResponse contains all the information returned when sending
          a GET request to the summary endpoint (project).
        properties:
          columns:
            $ref: '#/components/schemas/summary.ColumnResponse'
          events:
            $ref: '#/components/schemas/summary.EventResponse'
          health:
            $ref: '#/components/schemas/summary.HealthResponse'
          milestones:
            $ref: '#/components/schemas/summary.MilestoneResponse'
          risks:
            $ref: '#/components/schemas/summary.RiskResponse'
          since:
            $ref: '#/components/schemas/summary.SinceResponse'
          tasks:
            $ref: '#/components/schemas/summary.ProjectTasksResponse'
          time:
            $ref: '#/components/schemas/summary.TimeResponse'
          unread:
            $ref: '#/components/schemas/summary.UnreadResponse'
        title: ProjectResponse
        type: object
      summary.ProjectTasksResponse:
        description: ProjectTasksResponse contains groups of counters tasks.
        properties:
          everyone:
            $ref: '#/components/schemas/summary.TaskResponse'
          mine:
            $ref: '#/components/schemas/summary.TaskResponse'
          user:
            $ref: '#/components/schemas/summary.TaskResponse'
        title: ProjectTasksResponse
        type: object
      summary.Response:
        description: |-
          Response contains all the information returned when sending a GET
          request to the summary endpoint (dashboard).
        properties:
          columns:
            $ref: '#/components/schemas/summary.ColumnResponse'
          events:
            $ref: '#/components/schemas/summary.EventResponse'
          health:
            $ref: '#/components/schemas/summary.HealthResponse'
          milestones:
            $ref: '#/components/schemas/summary.MilestoneCountsResponse'
          risks:
            $ref: '#/components/schemas/summary.RiskResponse'
          since:
            $ref: '#/components/schemas/summary.SinceResponse'
          tasks:
            $ref: '#/components/schemas/summary.TaskResponse'
          time:
            $ref: '#/components/schemas/summary.TimeCounterResponse'
          unread:
            $ref: '#/components/schemas/summary.UnreadResponse'
        title: Response
        type: object
      summary.RiskResponse:
        description: RiskResponse contains counters for risks.
        properties:
          closed:
            type: integer
          open:
            type: integer
          pending:
            type: integer
          total:
            type: integer
        title: RiskResponse
        type: object
      summary.SinceResponse:
        description: SinceResponse contains counters for since.
        properties:
          dateTime:
            type: string
          events:
            type: integer
          tasksComplete:
            type: integer
          tasksCreated:
            type: integer
        title: SinceResponse
        type: object
      summary.TaskResponse:
        description: TaskResponse contains counters for tasks.
        properties:
          active:
            type: integer
          complete:
            type: integer
          late:
            type: integer
          nodate:
            type: integer
          started:
            type: integer
          today:
            type: integer
          upcoming:
            type: integer
        title: TaskResponse
        type: object
      summary.TimeCounterEstimateResponse:
        description: TimeCounterEstimateResponse contains estimate counters for times.
        properties:
          activeMinsEstimated:
            type: integer
          completedMinsEstimated:
            type: integer
          totalMinsEstimated:
            type: integer
          totalWithTimeLoggedEstimatedMins:
            type: integer
        title: TimeCounterEstimateResponse
        type: object
      summary.TimeCounterResponse:
        description: TimeCounterResponse contains counters for times.
        properties:
          estimates:
            $ref: '#/components/schemas/summary.TimeCounterEstimateResponse'
          totals:
            $ref: '#/components/schemas/summary.TimeCounterTotalResponse'
        title: TimeCounterResponse
        type: object
      summary.TimeCounterTotalResponse:
        description: TimeCounterTotalResponse contains total counters for times.
        properties:
          billableMinsSum:
            type: integer
          billedMinsSum:
            type: integer
          nonBillableMinsSum:
            type: integer
          nonBilledMinsSum:
            type: integer
          totalMinsSum:
            type: integer
        title: TimeCounterTotalResponse
        type: object
      summary.TimeResponse:
        description: TimeResponse contains counters for times' groups.
        properties:
          all:
            $ref: '#/components/schemas/summary.TimeCounterResponse'
          mine:
            $ref: '#/components/schemas/summary.TimeCounterResponse'
        title: TimeResponse
        type: object
      summary.UnreadResponse:
        description: UnreadResponse contains counters for unread objects.
        properties:
          comments:
            type: integer
          messages:
            type: integer
        title: UnreadResponse
        type: object
      tag.BulkDeleteRequest:
        description: BulkDeleteRequest contains the ids of the tags that should be removed.
        properties:
          tagIds:
            items:
              type: integer
            type: array
          tagNames:
            items:
              type: string
            type: array
        title: BulkDeleteRequest
        type: object
      tag.Request:
        description: Request contains information of a tag to be created or updated.
        properties:
          tag:
            $ref: '#/components/schemas/tag.Tag'
        title: Request
        type: object
      tag.Response:
        description: Response contains information about a specific tag.
        properties:
          tag:
            $ref: '#/components/schemas/view.Tag'
        title: Response
        type: object
      tag.Tag:
        description: Tag contains all the information returned from a tag.
        properties:
          color:
            type: string
          name:
            type: string
          projectId:
            type: integer
        title: Tag
        type: object
      tag.TagsResponse:
        description: TagsResponse contains information about a group of tags.
        properties:
          included:
            properties:
              cards:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskCard'
                type: object
              columns:
                additionalProperties:
                  $ref: '#/components/schemas/view.BoardColumn'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          tags:
            items:
              $ref: '#/components/schemas/view.Tag'
            type: array
        title: TagsResponse
        type: object
      task.Card:
        description: Card stores information about the card created with the task.
        properties:
          columnId:
            type: integer
        title: Card
        type: object
      task.CustomFields:
        description: CustomFields is the custom fields type.
        properties:
          Values:
            items:
              $ref: '#/components/schemas/value.CustomFieldValue'
            type: array
        title: CustomFields
        type: object
      task.File:
        description: File stores information about a uploaded file.
        properties:
          categoryId:
            type: integer
          id:
            type: integer
        title: File
        type: object
      task.Included:
        description: Included is the task sideloads
        properties:
          cards:
            additionalProperties:
              $ref: '#/components/schemas/view.TaskCard'
            type: object
          columns:
            additionalProperties:
              $ref: '#/components/schemas/view.BoardColumn'
            type: object
          comments:
            additionalProperties:
              $ref: '#/components/schemas/view.Comment'
            type: object
          companies:
            additionalProperties:
              $ref: '#/components/schemas/view.Company'
            type: object
          customfieldTasks:
            additionalProperties:
              $ref: '#/components/schemas/view.CustomFieldValueTask'
            type: object
          customfields:
            additionalProperties:
              $ref: '#/components/schemas/view.CustomField'
            type: object
          files:
            additionalProperties:
              $ref: '#/components/schemas/view.ProjectFileV205'
            type: object
          lockdowns:
            additionalProperties:
              $ref: '#/components/schemas/view.Lockdown'
            type: object
          milestones:
            additionalProperties:
              $ref: '#/components/schemas/view.Milestone'
            type: object
          projectCategories:
            additionalProperties:
              $ref: '#/components/schemas/view.ProjectCategory'
            type: object
          projectPermissions:
            additionalProperties:
              $ref: '#/components/schemas/view.ProjectPermissions'
            type: object
          projects:
            additionalProperties:
              $ref: '#/components/schemas/view.ProjectV205'
            type: object
          proofs:
            additionalProperties:
              $ref: '#/components/schemas/view.Proof'
            type: object
          stages:
            additionalProperties:
              $ref: '#/components/schemas/view.Stage'
            type: object
          subtaskStats:
            additionalProperties:
              $ref: '#/components/schemas/view.TaskStats'
            type: object
          tags:
            additionalProperties:
              $ref: '#/components/schemas/view.Tag'
            type: object
          taskSequences:
            additionalProperties:
              $ref: '#/components/schemas/view.TaskSequence'
            type: object
          taskgroups:
            additionalProperties:
              $ref: '#/components/schemas/view.Taskgroup'
            type: object
          tasklists:
            additionalProperties:
              $ref: '#/components/schemas/view.Tasklist'
            type: object
          tasks:
            additionalProperties:
              $ref: '#/components/schemas/view.TaskV205'
            type: object
          teams:
            additionalProperties:
              $ref: '#/components/schemas/view.Team'
            type: object
          timeTotals:
            additionalProperties:
              $ref: '#/components/schemas/view.TaskTimeTotals'
            type: object
          timers:
            additionalProperties:
              $ref: '#/components/schemas/view.Timer'
            type: object
          users:
            additionalProperties:
              $ref: '#/components/schemas/view.User'
            type: object
          workflows:
            additionalProperties:
              $ref: '#/components/schemas/view.Workflow'
            type: object
        title: Included
        type: object
      task.Options:
        description: |-
          Options contains any options which can be set
          for the task request
        properties:
          appendAssignees:
            type: boolean
          checkInvalidusers:
            type: boolean
          everyoneMustDo:
            type: boolean
          fireWebhook:
            type: boolean
          isTemplate:
            type: boolean
          logActivity:
            type: boolean
          notify:
            type: boolean
          parseInlineTags:
            type: boolean
          positionAfterTaskId:
            type: integer
          pushDependents:
            type: boolean
          pushSubtasks:
            type: boolean
          shiftProjectDates:
            type: boolean
          useDefaults:
            type: boolean
          useNotifyViaTWIM:
            type: boolean
        title: Options
        type: object
      task.PendingFile:
        description: PendingFile stores information about a file uploaded on-the-fly.
        properties:
          categoryId:
            type: integer
          reference:
            type: string
        title: PendingFile
        type: object
      task.Predecessor:
        description: Predecessor stores information about task predecessors.
        properties:
          id:
            type: integer
          type:
            type: string
        title: Predecessor
        type: object
      task.Reminder:
        description: Reminder stores all necessary information to create a task reminder.
        properties:
          isRelative:
            type: boolean
          note:
            type: string
          relativeNumberDays:
            type: integer
          remindAt:
            type: string
          type:
            type: string
          userId:
            type: integer
        title: Reminder
        type: object
      task.RepeatOptions:
        description: RepeatOptions stores recurring information for the task.
        properties:
          duration:
            type: integer
          editOption:
            type: string
          endsAt:
            $ref: '#/components/schemas/payload.NullableDate'
          frequency:
            $ref: '#/components/schemas/payload.NullableTaskRepeatFrequency'
          monthlyRepeatType:
            $ref: '#/components/schemas/payload.NullableTaskRepeatMonthlyType'
          rrule:
            description: >-
              Adds the RRule definition for repeating tasks. It replaces all other
              repeating fields.
            title: RRule
            type: string
          selectedDays:
            $ref: '#/components/schemas/payload.NullableWorkingHourEntryWeekdays'
        title: RepeatOptions
        type: object
      task.Request:
        description: Request contains information of a task to be created or updated.
        properties:
          attachmentOptions:
            properties:
              removeOtherFiles:
                type: boolean
            type: object
          attachments:
            properties:
              files:
                items:
                  $ref: '#/components/schemas/task.File'
                type: array
              pendingFiles:
                items:
                  $ref: '#/components/schemas/task.PendingFile'
                type: array
            type: object
          card:
            $ref: '#/components/schemas/task.Card'
          predecessors:
            items:
              $ref: '#/components/schemas/task.Predecessor'
            type: array
          tags:
            items:
              $ref: '#/components/schemas/tag.Tag'
            type: array
          task:
            $ref: '#/components/schemas/task.Task'
          taskOptions:
            $ref: '#/components/schemas/task.Options'
          workflows:
            $ref: '#/components/schemas/task.Workflows'
        title: Request
        type: object
      task.Task:
        description: Task contains all the information returned from a task.
        properties:
          assignees:
            $ref: '#/components/schemas/payload.UserGroups'
          attachmentIds:
            items:
              type: integer
            type: array
          changeFollowers:
            $ref: '#/components/schemas/payload.UserGroups'
          commentFollowers:
            $ref: '#/components/schemas/payload.UserGroups'
          completedAt:
            type: string
          completedBy:
            type: integer
          createdAt:
            type: string
          createdBy:
            type: integer
          crmDealIds:
            items:
              type: integer
            type: array
          customFields:
            $ref: '#/components/schemas/task.CustomFields'
          description:
            type: string
          descriptionContentType:
            type: string
          dueAt:
            $ref: '#/components/schemas/payload.NullableDate'
          estimatedMinutes:
            type: integer
          grantAccessTo:
            $ref: '#/components/schemas/payload.UserGroups'
          hasDeskTickets:
            type: boolean
          name:
            type: string
          originalDueDate:
            $ref: '#/components/schemas/payload.NullableDate'
          parentTaskId:
            type: integer
          priority:
            $ref: '#/components/schemas/payload.NullableTaskPriority'
          private:
            type: boolean
          progress:
            type: integer
          reminders:
            items:
              $ref: '#/components/schemas/task.Reminder'
            type: array
          repeatOptions:
            $ref: '#/components/schemas/task.RepeatOptions'
          startAt:
            $ref: '#/components/schemas/payload.NullableDate'
          status:
            type: string
          tagIds:
            items:
              type: integer
            type: array
          taskgroupId:
            type: integer
          tasklistId:
            type: integer
          templateRoleName:
            type: string
          ticketId:
            type: integer
        title: Task
        type: object
      task.Workflows:
        description: Workflows stores information about where the task lives in the workflow
        properties:
          positionAfterTask:
            type: integer
          stageId:
            type: integer
          workflowId:
            type: integer
        title: Workflows
        type: object
      task.responseV205:
        properties:
          affected:
            $ref: '#/components/schemas/view.TaskAffectedV205'
          included:
            $ref: '#/components/schemas/task.Included'
          meta:
            $ref: '#/components/schemas/view.Meta'
          task:
            $ref: '#/components/schemas/view.TaskV205'
        title: responseV205
        type: object
      task.tasksResponseV205:
        properties:
          included:
            $ref: '#/components/schemas/task.Included'
          meta:
            $ref: '#/components/schemas/view.Meta'
          tasks:
            items:
              $ref: '#/components/schemas/view.TaskV205'
            type: array
        title: tasksResponseV205
        type: object
      tasklist.Response:
        description: Response contains information about a specific tasklist.
        properties:
          included:
            properties:
              columns:
                additionalProperties:
                  $ref: '#/components/schemas/view.BoardColumn'
                type: object
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              customfieldTasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.CustomFieldValueTask'
                type: object
              customfields:
                additionalProperties:
                  $ref: '#/components/schemas/view.CustomField'
                type: object
              defaultTaskReminders:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskReminder'
                type: object
              lockdowns:
                additionalProperties:
                  $ref: '#/components/schemas/view.Lockdown'
                type: object
              milestones:
                additionalProperties:
                  $ref: '#/components/schemas/view.Milestone'
                type: object
              notifications:
                additionalProperties:
                  $ref: '#/components/schemas/view.TasklistBudgetNotification'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.IncludedProject'
                type: object
              tasklistBudgets:
                additionalProperties:
                  $ref: '#/components/schemas/view.TasklistBudget'
                type: object
              tasklistTaskStats:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskStats'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.IncludedTask'
                type: object
              teams:
                additionalProperties:
                  $ref: '#/components/schemas/view.Team'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
              workflowStages:
                additionalProperties:
                  $ref: '#/components/schemas/view.Stage'
                type: object
              workflows:
                additionalProperties:
                  $ref: '#/components/schemas/view.Workflow'
                type: object
            type: object
          tasklist:
            $ref: '#/components/schemas/view.Tasklist'
        title: Response
        type: object
      tasklist.TasklistsResponse:
        description: TasklistsResponse contains information about a group of tasklists.
        properties:
          included:
            properties:
              columns:
                additionalProperties:
                  $ref: '#/components/schemas/view.BoardColumn'
                type: object
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              customfieldTasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.CustomFieldValueTask'
                type: object
              customfields:
                additionalProperties:
                  $ref: '#/components/schemas/view.CustomField'
                type: object
              defaultTaskReminders:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskReminder'
                type: object
              lockdowns:
                additionalProperties:
                  $ref: '#/components/schemas/view.Lockdown'
                type: object
              milestones:
                additionalProperties:
                  $ref: '#/components/schemas/view.Milestone'
                type: object
              notifications:
                additionalProperties:
                  $ref: '#/components/schemas/view.TasklistBudgetNotification'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.IncludedProject'
                type: object
              tasklistBudgets:
                additionalProperties:
                  $ref: '#/components/schemas/view.TasklistBudget'
                type: object
              tasklistTaskStats:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskStats'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.IncludedTask'
                type: object
              teams:
                additionalProperties:
                  $ref: '#/components/schemas/view.Team'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
              workflowStages:
                additionalProperties:
                  $ref: '#/components/schemas/view.Stage'
                type: object
              workflows:
                additionalProperties:
                  $ref: '#/components/schemas/view.Workflow'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          tasklists:
            items:
              $ref: '#/components/schemas/view.Tasklist'
            type: array
        title: TasklistsResponse
        type: object
      tasklistbudget.Budget:
        description: Budget contains all the information returned from a budget.
        properties:
          capacity:
            type: integer
          id:
            type: integer
          notifications:
            items:
              $ref: '#/components/schemas/tasklistbudget.notification'
            type: array
          tasklist:
            $ref: '#/components/schemas/tasklistbudget.tasklist'
        title: Budget
        type: object
      tasklistbudget.BudgetResponse:
        description: BudgetResponse contains information about a group of budgets.
        properties:
          meta:
            $ref: '#/components/schemas/view.Meta'
          tasklistBudget:
            $ref: '#/components/schemas/view.TasklistBudget'
        title: BudgetResponse
        type: object
      tasklistbudget.BudgetsResponse:
        description: BudgetsResponse contains information about a group of budgets.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              notifications:
                additionalProperties:
                  $ref: '#/components/schemas/view.TasklistBudgetNotification'
                type: object
              projectBudgets:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectBudget'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              teams:
                additionalProperties:
                  $ref: '#/components/schemas/view.Team'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          tasklistBudgets:
            items:
              $ref: '#/components/schemas/view.TasklistBudget'
            type: array
        title: BudgetsResponse
        type: object
      tasklistbudget.BulkAddBudgetRequest:
        description: |-
          BulkAddBudgetRequest structure hold information needed to add
          or update task list budgets along with request options
        properties:
          tasklistBudgets:
            items:
              $ref: '#/components/schemas/tasklistbudget.Budget'
            type: array
          tasklistBudgetsOptions:
            $ref: '#/components/schemas/tasklistbudget.RequestOptions'
        title: BulkAddBudgetRequest
        type: object
      tasklistbudget.PatchBudgetRequest:
        description: PatchBudgetRequest Structure for the edit budget PATCH request
        properties:
          tasklistBudget:
            $ref: '#/components/schemas/tasklistbudget.Budget'
          tasklistBudgetOptions:
            $ref: '#/components/schemas/tasklistbudget.RequestOptions'
        title: PatchBudgetRequest
        type: object
      tasklistbudget.RequestOptions:
        description: RequestOptions has options for events related to requests
        properties:
          fireWebhook:
            type: boolean
          logActivity:
            type: boolean
          useNotifyViaTWIM:
            type: boolean
        title: RequestOptions
        type: object
      tasklistbudget.company:
        properties:
          id:
            type: integer
          type:
            type: string
        title: company
        type: object
      tasklistbudget.notification:
        properties:
          capacityThreshold:
            type: number
          companies:
            items:
              $ref: '#/components/schemas/tasklistbudget.company'
            type: array
          id:
            type: integer
          notificationMedium:
            type: string
          teams:
            items:
              $ref: '#/components/schemas/tasklistbudget.team'
            type: array
          users:
            items:
              $ref: '#/components/schemas/tasklistbudget.user'
            type: array
        title: notification
        type: object
      tasklistbudget.tasklist:
        properties:
          id:
            type: integer
          type:
            type: string
        title: tasklist
        type: object
      tasklistbudget.team:
        properties:
          id:
            type: integer
          type:
            type: string
        title: team
        type: object
      tasklistbudget.user:
        properties:
          id:
            type: integer
          type:
            type: string
        title: user
        type: object
      timelog.CompanyTimelogsResponse:
        description: >-
          CompanyTimelogsResponse contains information about a group of timelogs,
          grouped by company ID.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tags:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tag'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              userRates:
                additionalProperties:
                  $ref: '#/components/schemas/view.EffectiveUserRate'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          timelogs:
            type: object
        title: CompanyTimelogsResponse
        type: object
      timelog.Request:
        description: Request contains information of a timelog to be created or updated.
        properties:
          tags:
            items:
              $ref: '#/components/schemas/tag.Tag'
            type: array
          timelog:
            $ref: '#/components/schemas/timelog.Timelog'
          timelogOptions:
            properties:
              fireWebhook:
                type: boolean
              logActivity:
                type: boolean
              markTaskComplete:
                type: boolean
              parseInlineTags:
                type: boolean
              useNotifyViaTWIM:
                type: boolean
            type: object
        title: Request
        type: object
      timelog.Response:
        description: Response contains information about a specific timelog.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tags:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tag'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              userRates:
                additionalProperties:
                  $ref: '#/components/schemas/view.EffectiveUserRate'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          timelog:
            $ref: '#/components/schemas/view.Timelog'
        title: Response
        type: object
      timelog.Timelog:
        description: Timelog contains all the information returned from a timelog.
        properties:
          date:
            $ref: '#/components/schemas/payload.Date'
          description:
            type: string
          hasStartTime:
            type: boolean
          hours:
            type: integer
          invoiceId:
            type: integer
          isBillable:
            type: boolean
          isUtc:
            type: boolean
          minutes:
            type: integer
          projectId:
            type: integer
          tagIds:
            items:
              type: integer
            type: array
          taskId:
            type: integer
          ticketId:
            type: integer
          time:
            $ref: '#/components/schemas/payload.Time'
          userId:
            type: integer
        title: Timelog
        type: object
      timelog.TimelogsResponse:
        description: TimelogsResponse contains information about a group of timelogs.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tags:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tag'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              userRates:
                additionalProperties:
                  $ref: '#/components/schemas/view.EffectiveUserRate'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          timelogs:
            items:
              $ref: '#/components/schemas/view.Timelog'
            type: array
        title: TimelogsResponse
        type: object
      timelog.TotalsResponse:
        description: TotalsResponse contains information about timelog totals.
        properties:
          subTasks:
            $ref: '#/components/schemas/view.TimelogTotalsSubtasks'
          time-totals:
            $ref: '#/components/schemas/view.TimelogTotals'
        title: TotalsResponse
        type: object
      timer.DeleteRequest:
        description: |-
          DeleteRequest contains the whether or not a timer should be hard deleted
          or soft deleted. Hard delete will remove the timer row from the DB and
          remove its timer intervals. Soft delete will just mark it as deleted.
        properties:
          hardDelete:
            type: boolean
        title: DeleteRequest
        type: object
      timer.Request:
        description: Request contains information of a timer to be created or updated.
        properties:
          timer:
            $ref: '#/components/schemas/timer.Timer'
        title: Request
        type: object
      timer.Response:
        description: |-
          Response contains the information returned when sending a PUT/POST
          request to the timers endpoint, or GET request for a single item by ID
        properties:
          included:
            properties:
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          timer:
            $ref: '#/components/schemas/view.Timer'
        title: Response
        type: object
      timer.Timer:
        description: Timer contains all the information returned from a timer.
        properties:
          description:
            type: string
          isBillable:
            type: boolean
          isRunning:
            type: boolean
          projectId:
            type: integer
          seconds:
            description: only valid for POST requests
            type: integer
          stopRunningTimers:
            type: boolean
          taskId:
            type: integer
        title: Timer
        type: object
      timer.TimersResponse:
        description: |-
          TimersResponse contains all the information returned when sending a GET
          request to the timers endpoint.
        properties:
          included:
            properties:
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          timers:
            items:
              $ref: '#/components/schemas/view.Timer'
            type: array
        title: TimersResponse
        type: object
      timesheet.MyTimesheetsResponse:
        description: MyTimesheetsResponse contains timesheets list, includes and metadata.
        properties:
          included:
            properties:
              companies:
                additionalProperties:
                  $ref: '#/components/schemas/view.Company'
                type: object
              eventTypes:
                additionalProperties:
                  $ref: '#/components/schemas/view.LegacyCalendarEventType'
                type: object
              projectPermissions:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectPermissions'
                type: object
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              subtaskStats:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskStats'
                type: object
              tasklists:
                additionalProperties:
                  $ref: '#/components/schemas/view.Tasklist'
                type: object
              tasks:
                additionalProperties:
                  $ref: '#/components/schemas/view.TaskV205'
                type: object
              timesheetCustomRows:
                additionalProperties:
                  $ref: '#/components/schemas/view.TimesheetCustomRow'
                type: object
              unavailableTimes:
                additionalProperties:
                  $ref: '#/components/schemas/view.LegacyUnavailableTime'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
              workingHourEntries:
                additionalProperties:
                  $ref: '#/components/schemas/view.WorkingHourEntry'
                type: object
              workingHours:
                additionalProperties:
                  $ref: '#/components/schemas/view.WorkingHour'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          timesheets:
            items:
              $ref: '#/components/schemas/view.MyTimesheet'
            type: array
          unavailableTimes:
            $ref: '#/components/schemas/view.UnavailableTimes'
        title: MyTimesheetsResponse
        type: object
      timesheet.MyTimesheetsTotals:
        description: MyTimesheetsTotals contains the daily totals and total minutes
        properties:
          dailyTotals:
            type: object
          total:
            type: integer
        title: MyTimesheetsTotals
        type: object
      timesheet.MyTimesheetsTotalsResponse:
        description: >-
          MyTimesheetsTotalsResponse contains timesheets list, includes and
          metadata.
        properties:
          myTimesheetsTotals:
            $ref: '#/components/schemas/timesheet.MyTimesheetsTotals'
        title: MyTimesheetsTotalsResponse
        type: object
      unbilled.ProjectMetricUnbilledResponse:
        description: >-
          ProjectMetricUnbilledResponse contains information about a group of
          unbilled

          invoices.
        properties:
          data:
            properties:
              value:
                type: integer
            type: object
        title: ProjectMetricUnbilledResponse
        type: object
      update.ProjectUpdatesResponse:
        description: ProjectUpdatesResponse contains information about a group of updates.
        properties:
          included:
            properties:
              projects:
                additionalProperties:
                  $ref: '#/components/schemas/view.ProjectV205'
                type: object
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          projectUpdates:
            items:
              $ref: '#/components/schemas/view.ProjectUpdate'
            type: array
        title: ProjectUpdatesResponse
        type: object
      utilization.Response:
        description: Response contains information about a specific availability.
        properties:
          included:
            properties:
              users:
                additionalProperties:
                  $ref: '#/components/schemas/view.User'
                type: object
            type: object
          meta:
            $ref: '#/components/schemas/view.Meta'
          utilization:
            items:
              $ref: '#/components/schemas/view.UserUtilization'
            type: array
        title: Response
        type: object
      value.CustomFieldValue:
        description: >-
          CustomFieldValue contains all the information returned from a
          customfield.
        properties:
          countryCode:
            type: string
          currencySymbol:
            type: string
          customfieldId:
            type: integer
          urlTextToDisplay:
            type: string
          value: {}
        title: CustomFieldValue
        type: object
      value.EditCustomFieldValue:
        description: |-
          EditCustomFieldValue contains all the information to update a project
          custom field value.
        properties:
          countryCode:
            type: string
          currencySymbol:
            type: string
          customfieldId:
            type: integer
          id:
            type: integer
          urlTextToDisplay:
            type: string
          value: {}
        title: EditCustomFieldValue
        type: object
      value.ResponseIncluded:
        description: ResponseIncluded is included in the response.
        properties:
          companies:
            additionalProperties:
              $ref: '#/components/schemas/view.Company'
            type: object
          customfields:
            additionalProperties:
              $ref: '#/components/schemas/view.CustomField'
            type: object
          projects:
            additionalProperties:
              $ref: '#/components/schemas/view.ProjectV205'
            type: object
          tasks:
            additionalProperties:
              $ref: '#/components/schemas/view.TaskV205'
            type: object
        title: ResponseIncluded
        type: object
      value.bulkDeleteRequestCompany:
        properties:
          customfieldCompanyIds:
            items:
              type: integer
            type: array
        title: bulkDeleteRequestCompany
        type: object
      value.bulkDeleteRequestProject:
        properties:
          customfieldProjectIds:
            items:
              type: integer
            type: array
        title: bulkDeleteRequestProject
        type: object
      value.bulkDeleteRequestTask:
        properties:
          customfieldTaskIds:
            items:
              type: integer
            type: array
        title: bulkDeleteRequestTask
        type: object
      value.bulkUpdateRequestCompany:
        properties:
          customfieldCompanies:
            items:
              $ref: '#/components/schemas/value.EditCustomFieldValue'
            type: array
        title: bulkUpdateRequestCompany
        type: object
      value.bulkUpdateRequestProject:
        properties:
          customfieldProjects:
            items:
              $ref: '#/components/schemas/value.EditCustomFieldValue'
            type: array
        title: bulkUpdateRequestProject
        type: object
      value.bulkUpdateRequestTask:
        properties:
          customfieldTasks:
            items:
              $ref: '#/components/schemas/value.EditCustomFieldValue'
            type: array
        title: bulkUpdateRequestTask
        type: object
      value.requestCompany:
        properties:
          customfieldCompany:
            $ref: '#/components/schemas/value.CustomFieldValue'
        title: requestCompany
        type: object
      value.requestProject:
        properties:
          customfieldProject:
            $ref: '#/components/schemas/value.CustomFieldValue'
        title: requestProject
        type: object
      value.requestTask:
        properties:
          customfieldTask:
            $ref: '#/components/schemas/value.CustomFieldValue'
        title: requestTask
        type: object
      value.responseCompany:
        properties:
          customfieldCompany:
            $ref: '#/components/schemas/view.CustomFieldValueCompany'
          included:
            $ref: '#/components/schemas/value.ResponseIncluded'
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: responseCompany
        type: object
      value.responseProject:
        properties:
          customfieldProject:
            $ref: '#/components/schemas/view.CustomFieldValueProject'
          included:
            $ref: '#/components/schemas/value.ResponseIncluded'
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: responseProject
        type: object
      value.responseTask:
        properties:
          customfieldTask:
            $ref: '#/components/schemas/view.CustomFieldValueTask'
          included:
            $ref: '#/components/schemas/value.ResponseIncluded'
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: responseTask
        type: object
      value.valuesResponseCompany:
        properties:
          customfieldCompanies:
            items:
              $ref: '#/components/schemas/view.CustomFieldValueCompany'
            type: array
          included:
            $ref: '#/components/schemas/value.ResponseIncluded'
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: valuesResponseCompany
        type: object
      value.valuesResponseProject:
        properties:
          customfieldProjects:
            items:
              $ref: '#/components/schemas/view.CustomFieldValueProject'
            type: array
          included:
            $ref: '#/components/schemas/value.ResponseIncluded'
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: valuesResponseProject
        type: object
      value.valuesResponseTask:
        properties:
          customfieldTasks:
            items:
              $ref: '#/components/schemas/view.CustomFieldValueTask'
            type: array
          included:
            $ref: '#/components/schemas/value.ResponseIncluded'
          meta:
            $ref: '#/components/schemas/view.Meta'
        title: valuesResponseTask
        type: object
      view.ActivityLog:
        description: ActivityLog contains all the information returned from a activityLog.
        properties:
          datetime:
            type: string
          description:
            type: string
          extraDescription:
            type: string
          id:
            type: integer
          itemLink:
            type: string
          itemType:
            type: string
          latestType:
            type: string
          link:
            type: string
          user:
            $ref: '#/components/schemas/view.Relationship'
        title: ActivityLog
        type: object
      view.Assignee:
        description: Assignee contains assignee information.
        properties:
          decision:
            type: string
          id:
            type: integer
          isExternal:
            type: boolean
          role:
            type: string
          user:
            $ref: '#/components/schemas/view.Relationship'
        title: Assignee
        type: object
      view.Audit:
        description: Audit represents the changes of a field.
        properties:
          after: {}
          before: {}
          field:
            type: string
        title: Audit
        type: object
      view.Banner:
        description: Banner contains all the information returned from a form banner.
        properties:
          accentColor:
            type: string
          primaryColor:
            type: string
          url:
            type: string
          x:
            type: number
          'y':
            type: number
        title: Banner
        type: object
      view.BoardColumn:
        description: BoardColumn contains all the information returned from a column.
        properties:
          color:
            type: string
          createdAt:
            type: string
          defaultTasklist:
            $ref: '#/components/schemas/view.Relationship'
          deleted:
            type: boolean
          deletedAt:
            type: string
          displayOrder:
            type: integer
          hasTriggers:
            type: boolean
          id:
            type: integer
          name:
            type: string
          project:
            $ref: '#/components/schemas/view.Relationship'
          settings:
            $ref: '#/components/schemas/view.BoardColumnSettings'
          sort:
            type: string
          sortOrder:
            type: string
          stats:
            $ref: '#/components/schemas/view.ColumnStats'
          updatedAt:
            type: string
        title: BoardColumn
        type: object
      view.BoardColumnSettings:
        description: BoardColumnSettings contains all the settings for a column.
        properties:
          assignee:
            type: boolean
          avatar:
            type: boolean
          comments:
            type: boolean
          dependencies:
            type: boolean
          endAt:
            type: boolean
          estimatedtime:
            type: boolean
          files:
            type: boolean
          followers:
            type: boolean
          name:
            type: boolean
          priority:
            type: boolean
          private:
            type: boolean
          progress:
            type: boolean
          recurring:
            type: boolean
          reminders:
            type: boolean
          startAt:
            type: boolean
          subtasklabel:
            type: boolean
          subtasktext:
            type: boolean
          tags:
            type: boolean
          tasklist:
            type: boolean
          tickets:
            type: boolean
          time:
            type: boolean
        title: BoardColumnSettings
        type: object
      view.CategoryTotals:
        description: CategoryTotals contains all the category totals.
        properties:
          categorizedItems:
            type: integer
          uncategorizedItems:
            type: integer
        title: CategoryTotals
        type: object
      view.ColumnStats:
        description: ColumnStats contains stats about a column
        properties:
          active:
            type: integer
          completed:
            type: integer
          estimatedTime:
            type: integer
          total:
            type: integer
        title: ColumnStats
        type: object
      view.Comment:
        description: Comment contains all the information returned from a comment.
        properties:
          id:
            type: integer
          object:
            $ref: '#/components/schemas/view.Relationship'
          objectId:
            type: integer
          objectType:
            type: string
          title:
            type: string
        title: Comment
        type: object
      view.Company:
        description: Company contains all the information returned from a company.
        properties:
          accounts:
            type: integer
          addressOne:
            type: string
          addressTwo:
            type: string
          budgetDistribution:
            items:
              $ref: '#/components/schemas/entity.ProjectBudgetRange'
            type: array
          canSeePrivate:
            type: boolean
          cid:
            type: string
          city:
            type: string
          clientManagedBy:
            $ref: '#/components/schemas/view.Relationship'
          clients:
            type: integer
          collaborators:
            type: integer
          companyNameUrl:
            type: string
          companyUpdate:
            $ref: '#/components/schemas/view.Relationship'
          contacts:
            type: integer
          countryCode:
            type: string
          createdAt:
            type: string
          emailOne:
            type: string
          emailThree:
            type: string
          emailTwo:
            type: string
          fax:
            type: string
          id:
            type: integer
          industry:
            $ref: '#/components/schemas/view.Relationship'
          industryId:
            type: integer
          isOwner:
            type: boolean
          logoUrl:
            type: string
          name:
            type: string
          phone:
            type: string
          privateNotes:
            type: string
          privateNotesText:
            type: string
          profileText:
            type: string
          profitability:
            $ref: '#/components/schemas/view.ProfitDetails'
          state:
            type: string
          stats:
            $ref: '#/components/schemas/view.CompanyStats'
          status:
            type: string
          tags:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          updatedAt:
            type: string
          website:
            type: string
          zip:
            type: string
        title: Company
        type: object
      view.CompanyStats:
        description: CompanyStats tracks a companies project and task counts
        properties:
          projectCount:
            type: integer
          taskCompleteCount:
            type: integer
          taskCount:
            type: integer
          unreadEmailCount:
            type: integer
        title: CompanyStats
        type: object
      view.CompanyUpdate:
        description: CompanyUpdate represents a company update
        properties:
          active:
            type: boolean
          company:
            $ref: '#/components/schemas/view.Relationship'
          health:
            type: integer
          id:
            type: integer
          text:
            type: string
        title: CompanyUpdate
        type: object
      view.Content:
        description: Content contains all the information returned from a form token.
        properties:
          banner:
            $ref: '#/components/schemas/view.Banner'
          definition:
            type: string
          description:
            type: string
          logo:
            $ref: '#/components/schemas/view.Logo'
          name:
            type: string
          state:
            type: string
          version:
            type: integer
        title: Content
        type: object
      view.Country:
        description: Country represents all the information returned from a country.
        properties:
          code:
            type: string
          country:
            type: string
          eu:
            type: boolean
          phoneCode:
            type: string
          vatName:
            type: string
          vatPercent:
            type: integer
        title: Country
        type: object
      view.CustomField:
        description: CustomField contains all the information returned from a custom field.
        properties:
          createdAt:
            type: string
          createdBy:
            type: integer
          createdByUserId:
            type: integer
          currencyCode:
            type: string
          deleted:
            type: boolean
          deletedAt:
            type: string
          deletedBy:
            type: integer
          deletedByUserId:
            type: integer
          description:
            type: string
          entity:
            type: string
          formula:
            type: string
          groupId:
            type: integer
          id:
            type: integer
          isPrivate:
            type: boolean
          name:
            type: string
          options: {}
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          required:
            type: boolean
          type:
            type: string
          updatedAt:
            type: string
          updatedBy:
            type: integer
          updatedByUserId:
            type: integer
          visibilities:
            items:
              type: string
            type: array
        title: CustomField
        type: object
      view.CustomFieldValueCompany:
        description: CustomFieldValueCompany is a company custom field value.
        properties:
          company:
            $ref: '#/components/schemas/view.Relationship'
          companyId:
            type: integer
          countryCode:
            type: string
          createdAt:
            type: string
          createdBy:
            type: integer
          currencySymbol:
            type: string
          customfield:
            $ref: '#/components/schemas/view.Relationship'
          customfieldId:
            type: integer
          id:
            type: integer
          urlTextToDisplay:
            type: string
          value: {}
        title: CustomFieldValueCompany
        type: object
      view.CustomFieldValueProject:
        description: CustomFieldValueProject is a project custom field value.
        properties:
          countryCode:
            type: string
          createdAt:
            type: string
          createdBy:
            type: integer
          currencySymbol:
            type: string
          customfield:
            $ref: '#/components/schemas/view.Relationship'
          customfieldId:
            type: integer
          id:
            type: integer
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          urlTextToDisplay:
            type: string
          value: {}
        title: CustomFieldValueProject
        type: object
      view.CustomFieldValueTask:
        description: CustomFieldValueTask is a task custom field value.
        properties:
          countryCode:
            type: string
          createdAt:
            type: string
          createdBy:
            type: integer
          currencySymbol:
            type: string
          customfield:
            $ref: '#/components/schemas/view.Relationship'
          customfieldId:
            type: integer
          id:
            type: integer
          task:
            $ref: '#/components/schemas/view.Relationship'
          taskId:
            type: integer
          urlTextToDisplay:
            type: string
          value: {}
        title: CustomFieldValueTask
        type: object
      view.Date:
        description: Date represents a Unified API Spec date format.
        title: Date
        type: object
      view.EffectiveUserRate:
        description: EffectiveUserRate is the users effective rate
        properties:
          effectiveRate:
            type: integer
          user:
            $ref: '#/components/schemas/view.Relationship'
        title: EffectiveUserRate
        type: object
      view.Error:
        description: Error describes an API error.
        properties:
          code:
            description: Code is an application-specific error code.
            type: string
          detail:
            description: >-
              Detail is a human-readable explanation specific to this occurrence
              of the

              problem.
            type: string
          id:
            description: ID is a reference for this exact instance of the error.
            type: string
          meta:
            description: Meta contains tags that are useful to detect specific issues.
            type: object
          title:
            description: Title is a short, human-readable summary of the problem.
            type: string
        title: Error
        type: object
      view.ErrorResponse:
        description: ErrorResponse defines how []Error should be marshaled to JSON.
        properties:
          errors:
            items:
              $ref: '#/components/schemas/view.Error'
            type: array
        title: ErrorResponse
        type: object
      view.Feature:
        description: Feature contains all the information returned from a feature.
        properties:
          endAt:
            type: string
          isBeta:
            type: boolean
          key:
            type: string
          scope:
            type: string
          source:
            type: string
          startAt:
            type: string
          value:
            type: string
        title: Feature
        type: object
      view.FileversionV205:
        description: >-
          FileversionV205 contains all the information returned from a
          fileversion.
        properties:
          commentsCount:
            type: integer
          commentsCountRead:
            type: integer
          description:
            type: string
          displayName:
            type: string
          file:
            $ref: '#/components/schemas/view.Relationship'
          fileId:
            type: integer
          fileVersionId:
            type: integer
          name:
            type: string
          originalName:
            type: string
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          reactions:
            $ref: '#/components/schemas/view.ReactionsForObject'
          size:
            type: integer
          status:
            type: string
          uploadedAt:
            type: string
          uploadedBy:
            type: integer
          versionNo:
            type: integer
        title: FileversionV205
        type: object
      view.Form:
        description: Form contains all the information returned from a form.
        properties:
          allowTeamworkBranding:
            type: boolean
          confirmationMessage:
            type: string
          content:
            $ref: '#/components/schemas/view.Content'
          createdAt:
            type: string
          createdBy:
            $ref: '#/components/schemas/view.Relationship'
          deletedAt:
            type: string
          deletedBy:
            $ref: '#/components/schemas/view.Relationship'
          destinationObject:
            $ref: '#/components/schemas/view.Relationship'
          hostObject:
            $ref: '#/components/schemas/view.Relationship'
          id:
            type: integer
          installation:
            $ref: '#/components/schemas/view.Relationship'
          isShared:
            type: boolean
          primaryColor:
            type: string
          promptAdditionalSubmissions:
            type: boolean
          redirectUrl:
            type: string
          responseEmailFieldId:
            type: string
          state:
            type: string
          submitButtonText:
            type: string
          taskTitleFieldId:
            type: string
          token:
            $ref: '#/components/schemas/view.Token'
          totalSubmissions:
            type: integer
          updatedAt:
            type: string
          updatedBy:
            $ref: '#/components/schemas/view.Relationship'
        title: Form
        type: object
      view.IncludedProject:
        description: IncludedProject is a sideloaded project
        title: IncludedProject
        type: object
      view.IncludedTask:
        description: IncludedTask is a sideloaded task.
        title: IncludedTask
        type: object
      view.Industry:
        description: Industry contains all the information returned from an industry.
        properties:
          displayOrder:
            type: integer
          id:
            type: integer
          industryCategory:
            $ref: '#/components/schemas/view.Relationship'
          industryCategoryId:
            type: integer
          isActive:
            type: boolean
          isPublished:
            type: boolean
          name:
            type: string
        title: Industry
        type: object
      view.LegacyCalendarEvent:
        description: >-
          LegacyCalendarEvent contains all the information returned from a
          calendar event.
        properties:
          additionalProperties:
            type: string
          allDay:
            type: boolean
          attendeesCanEdit:
            type: boolean
          attendingUserIds:
            items:
              type: integer
            type: array
          attendingUsers:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          createdAt:
            type: string
          createdBy:
            type: integer
          createdByUserId:
            type: integer
          createdDateTime:
            type: string
          currentUserAssociationType:
            type: string
          dateDeleted:
            type: string
          dateLastUpdated:
            type: string
          deleted:
            type: boolean
          deletedAt:
            type: string
          deletedBy:
            type: integer
          deletedByUserId:
            type: integer
          description:
            type: string
          endDate:
            type: string
          id:
            type: integer
          location:
            type: string
          monthlyRepeatType:
            type: string
          ownedBy:
            type: integer
          ownerUserId:
            type: integer
          privacyType:
            type: string
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          projectUsersCanEdit:
            type: boolean
          sequence:
            $ref: '#/components/schemas/view.Relationship'
          sequenceId:
            type: integer
          showAsBusy:
            type: boolean
          startDate:
            type: string
          title:
            type: string
          type:
            $ref: '#/components/schemas/view.Relationship'
          typeId:
            type: integer
          updatedAt:
            type: string
          updatedBy:
            type: integer
          updatedByUserId:
            type: integer
        title: LegacyCalendarEvent
        type: object
      view.LegacyCalendarEventType:
        description: >-
          LegacyCalendarEventType contains all the information returned from a
          calendar event

          type.
        properties:
          color:
            type: string
          id:
            type: integer
          name:
            type: string
          unavailable:
            type: boolean
        title: LegacyCalendarEventType
        type: object
      view.LegacyUnavailableTime:
        description: >-
          LegacyUnavailableTime contains all the information returned for an
          unavailable

          time.
        properties:
          allDay:
            type: boolean
          attendingUsers:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          createdAt:
            type: string
          createdBy:
            type: integer
          deleted:
            type: boolean
          deletedAt:
            type: string
          deletedBy:
            type: integer
          description:
            type: string
          durationMinutes:
            type: integer
          endDate:
            $ref: '#/components/schemas/view.Date'
          hoursPerDay:
            type: number
          id:
            type: integer
          meta:
            type: object
          ownedBy:
            type: integer
          startDate:
            $ref: '#/components/schemas/view.Date'
          title:
            type: string
          type:
            $ref: '#/components/schemas/view.Relationship'
          updatedAt:
            type: string
          updatedBy:
            type: integer
        title: LegacyUnavailableTime
        type: object
      view.LinkItem:
        description: LinkItem contains all the information returned from a link item.
        properties:
          category:
            $ref: '#/components/schemas/view.Relationship'
          categoryId:
            type: integer
          code:
            type: string
          createdAt:
            type: string
          createdBy:
            type: integer
          deleted:
            type: boolean
          deletedAt:
            type: string
          deletedBy:
            type: integer
          description:
            type: string
          forceNewWindow:
            type: integer
          height:
            type: integer
          id:
            type: integer
          isPrivate:
            type: boolean
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          provider:
            type: string
          title:
            type: string
          updatedAt:
            type: string
          updatedBy:
            type: integer
          width:
            type: integer
        title: LinkItem
        type: object
      view.Lockdown:
        description: Lockdown contains all the information returned from a lockdown.
        properties:
          grantAccessTo:
            $ref: '#/components/schemas/view.UserGroupsDeprecated'
          id:
            type: integer
          items:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          updatedAt:
            type: string
          user:
            $ref: '#/components/schemas/view.Relationship'
          userID:
            type: integer
        title: Lockdown
        type: object
      view.Logo:
        description: Logo contains all the information returned from a form custom logo.
        properties:
          url:
            type: string
        title: Logo
        type: object
      view.Message:
        description: Message contains all the information returned from a project message.
        properties:
          attachments:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          author:
            $ref: '#/components/schemas/view.Relationship'
          body:
            type: string
          createdAt:
            type: string
          id:
            type: integer
          lockdown:
            $ref: '#/components/schemas/view.Relationship'
          message:
            $ref: '#/components/schemas/view.Relationship'
          meta:
            $ref: '#/components/schemas/view.MessageReplyMeta'
          peopleNotifiedCount:
            type: integer
          projectId:
            type: integer
          status:
            type: string
          title:
            type: string
          updatedAt:
            type: string
        title: Message
        type: object
      view.MessageReply:
        description: >-
          MessageReply contains all the information returned from a project
          message.
        properties:
          attachments:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          author:
            $ref: '#/components/schemas/view.Relationship'
          body:
            type: string
          createdAt:
            type: string
          id:
            type: integer
          message:
            $ref: '#/components/schemas/view.Relationship'
          meta:
            $ref: '#/components/schemas/view.MessageReplyMeta'
          peopleNotifiedCount:
            type: integer
          status:
            type: string
          updatedAt:
            type: string
        title: MessageReply
        type: object
      view.MessageReplyMeta:
        description: MessageReplyMeta is the message reply meta.
        properties:
          isRead:
            type: boolean
          permissions:
            properties:
              canEdit:
                type: boolean
            type: object
        title: MessageReplyMeta
        type: object
      view.Meta:
        description: Meta represents the Unified API meta object.
        properties:
          averageSpend:
            type: integer
          limit:
            type: integer
          nextCursor:
            type: string
          page:
            $ref: '#/components/schemas/view.MetaPage'
          prevCursor:
            type: string
          totalCapacity:
            type: integer
        title: Meta
        type: object
      view.MetaPage:
        description: MetaPage represents the Unified API page meta object.
        properties:
          count:
            type: integer
          hasMore:
            type: boolean
          pageOffset:
            type: integer
          pageSize:
            type: integer
        title: MetaPage
        type: object
      view.Milestone:
        description: Milestone contains all the information returned from a milestone.
        properties:
          canComplete:
            type: boolean
          canEdit:
            description: permissions
            type: boolean
          changeFollowerIds:
            items:
              type: integer
            type: array
          changeFollowers:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          commentFollowerIds:
            items:
              type: integer
            type: array
          commentFollowers:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          commentsCount:
            type: integer
          completed:
            type: boolean
          completedBy:
            type: integer
          completedOn:
            type: string
          completerId:
            type: integer
          createdBy:
            type: integer
          createdOn:
            type: string
          creatorUserId:
            type: integer
          deadline:
            type: string
          description:
            type: string
          descriptionHTML:
            type: string
          id:
            type: integer
          isDeleted:
            type: boolean
          lastChangedOn:
            type: string
          latestUpdates:
            items:
              $ref: '#/components/schemas/view.Audit'
            type: array
          lockdown:
            $ref: '#/components/schemas/view.Relationship'
          lockdownId:
            type: integer
          name:
            type: string
          numCommentsRead:
            type: integer
          originalDueDate:
            type: string
          percentageComplete:
            type: integer
          percentageTasksCompleted:
            type: integer
          private:
            type: boolean
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          reminder:
            type: boolean
          responsibleParties:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          responsiblePartyIds:
            description: >-
              optional fields that are returned only when querying a milestone
              endpoint
            items:
              type: integer
            type: array
          status:
            type: string
          tagIds:
            items:
              type: integer
            type: array
          tags:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          tasklistIds:
            items:
              type: integer
            type: array
          tasklists:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          updatedBy:
            type: integer
          userFollowingChanges:
            type: boolean
          userFollowingComments:
            type: boolean
        title: Milestone
        type: object
      view.MyTimesheet:
        description: MyTimesheet contains api response information for a timesheet
        properties:
          customRow:
            $ref: '#/components/schemas/view.Relationship'
          dates:
            additionalProperties:
              $ref: '#/components/schemas/view.MyTimesheetDateSummary'
            type: object
          entity:
            $ref: '#/components/schemas/view.Relationship'
          isCustomRow:
            type: boolean
          total:
            type: integer
        title: MyTimesheet
        type: object
      view.MyTimesheetDateSummary:
        description: MyTimesheetDateSummary contains total minutes and timelog ids for a date
        properties:
          timelogs:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          totalMinutes:
            type: integer
        title: MyTimesheetDateSummary
        type: object
      view.Notebook:
        description: Notebook contains all the information returned from a notebook.
        properties:
          category:
            $ref: '#/components/schemas/view.Relationship'
          categoryId:
            type: integer
          changeFollowers:
            $ref: '#/components/schemas/view.UserGroupsDeprecated'
          commentFollowers:
            $ref: '#/components/schemas/view.UserGroupsDeprecated'
          commentsCount:
            type: integer
          contentHTML:
            type: string
          contents:
            description: can be optionally hidden on lists
            type: string
          createdAt:
            type: string
          createdBy:
            type: integer
          createdByUserID:
            type: integer
          dateCreated:
            type: string
          dateDeleted:
            type: string
          dateUpdated:
            type: string
          deleted:
            type: boolean
          deletedAt:
            type: string
          deletedBy:
            type: integer
          deletedByUserID:
            type: integer
          description:
            type: string
          id:
            type: integer
          isFullWidth:
            type: boolean
          isPrivate:
            type: boolean
          latestVersionNo:
            type: integer
          lockdown:
            $ref: '#/components/schemas/view.Relationship'
          lockdownId:
            type: integer
          locked:
            type: boolean
          lockedAt:
            type: string
          lockedBy:
            type: integer
          name:
            type: string
          notebookVersion:
            $ref: '#/components/schemas/view.Relationship'
          notebookVersionCreatedDateTime:
            type: string
          notebookVersionID:
            type: integer
          notebookVersionUpdatedDateTime:
            type: string
          privacy:
            $ref: '#/components/schemas/view.UserGroupsDeprecated'
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          readCommentsCount:
            type: integer
          secureContent:
            type: boolean
          tagIds:
            items:
              type: integer
            type: array
          tags:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          type:
            type: string
          updatedAt:
            type: string
          updatedBy:
            type: integer
          updatedByUserID:
            type: integer
          userFollowingChanges:
            type: boolean
          userFollowingComments:
            type: boolean
          versionCount:
            type: integer
        title: Notebook
        type: object
      view.NotebookCategory:
        description: >-
          NotebookCategory contains all the information returned from a notebook
          category.
        properties:
          color:
            type: string
          elementsCount:
            type: integer
          id:
            type: integer
          name:
            type: string
          parent:
            $ref: '#/components/schemas/view.Relationship'
          parentId:
            type: integer
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
        title: NotebookCategory
        type: object
      view.NotebookVersion:
        description: >-
          NotebookVersion contains all the information returned from a notebook
          version.
        properties:
          contentHTML:
            type: string
          contents:
            type: string
          createdAt:
            type: string
          createdBy:
            type: integer
          createdByUserID:
            type: integer
          dateCreated:
            type: string
          dateUpdated:
            type: string
          notebook:
            $ref: '#/components/schemas/view.Relationship'
          notebookId:
            type: integer
          updatedAt:
            type: string
          versionId:
            type: integer
          versionNumber:
            type: integer
        title: NotebookVersion
        type: object
      view.Notification:
        description: Notification contains all the information returned from a notification.
        properties:
          action:
            type: string
          command:
            type: string
          date:
            type: string
          description:
            type: string
          event:
            type: string
          extraDescription:
            type: string
          extraInfo:
            type: string
          extraLink:
            type: string
          id:
            type: integer
          installation:
            $ref: '#/components/schemas/view.Relationship'
          item:
            $ref: '#/components/schemas/view.NotificationItem'
          link:
            type: string
          popUp:
            type: boolean
          privacy:
            $ref: '#/components/schemas/view.NotificationPrivacy'
          project:
            $ref: '#/components/schemas/view.NotificationProject'
          read:
            type: boolean
          user:
            $ref: '#/components/schemas/view.NotificationUser'
        title: Notification
        type: object
      view.NotificationItem:
        description: >-
          NotificationItem contains the id and type being of what is being
          notified
        properties:
          id:
            type: integer
          type:
            type: string
        title: NotificationItem
        type: object
      view.NotificationPrivacy:
        description: NotificationPrivacy contains if the notification links to a private item
        properties:
          lockdownId:
            type: integer
          private:
            type: boolean
        title: NotificationPrivacy
        type: object
      view.NotificationProject:
        description: >-
          NotificationProject contains the project ID & and name of the associated
          notification
        properties:
          id:
            type: integer
          name:
            type: string
        title: NotificationProject
        type: object
      view.NotificationUser:
        description: NotificationUser contains the user information for the notification
        properties:
          avatar_url:
            type: string
          firstname:
            type: string
          id:
            type: integer
          lastname:
            type: string
        title: NotificationUser
        type: object
      view.PortfolioBoard:
        description: >-
          PortfolioBoard contains all the information returned from a portfolio
          board.
        properties:
          color:
            type: string
          id:
            type: integer
          name:
            type: string
        title: PortfolioBoard
        type: object
      view.PortfolioCard:
        description: |-
          PortfolioCard contains all the information returned from a portfolio
          column.
        properties:
          board:
            $ref: '#/components/schemas/view.Relationship'
          boardId:
            type: integer
          column:
            $ref: '#/components/schemas/view.Relationship'
          columnId:
            type: integer
          id:
            type: integer
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
        title: PortfolioCard
        type: object
      view.PortfolioColumn:
        description: |-
          PortfolioColumn contains all the information returned from a portfolio
          column.
        properties:
          color:
            type: string
          id:
            type: integer
          name:
            type: string
        title: PortfolioColumn
        type: object
      view.ProfitDetails:
        description: ProfitDetails represents the totals.
        properties:
          billable:
            type: number
          billableTime:
            type: integer
          cost:
            type: number
          expenses:
            type: number
          loggedTime:
            type: integer
          nonBillableTime:
            type: integer
          profit:
            type: number
        title: ProfitDetails
        type: object
      view.ProjectBudget:
        description: ProjectBudget contains all the information returned from a budget.
        properties:
          baselineCapacity:
            type: integer
          budgetCategory:
            type: string
          budgetExpectedCost:
            type: integer
          budgetExpectedProfit:
            type: integer
          budgetProfitMargin:
            type: number
          capacity:
            type: integer
          capacityUsed:
            type: integer
          carryCapacity:
            type: integer
          carryOverspend:
            type: boolean
          carryUnderspend:
            type: boolean
          completedAt:
            type: string
          completedBy:
            type: integer
          completedByUserId:
            type: integer
          createdAt:
            type: string
          createdBy:
            type: integer
          createdByUserId:
            type: integer
          currencyCode:
            type: string
          dateCompleted:
            type: string
          dateCreated:
            type: string
          dateDeleted:
            type: string
          dateUpdated:
            type: string
          defaultRate:
            type: number
          deletedAt:
            type: string
          deletedBy:
            type: integer
          deletedByUserId:
            type: integer
          endDateTime:
            type: string
          expenseType:
            type: string
          id:
            type: integer
          isRepeating:
            type: boolean
          isRetainer:
            type: boolean
          notificationIds:
            items:
              type: integer
            type: array
          notifications:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          originatorBudget:
            $ref: '#/components/schemas/view.Relationship'
          originatorBudgetId:
            type: integer
          originatorStartDateTime:
            type: string
          overspendAt:
            type: string
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          repeatPeriod:
            type: integer
          repeatUnit:
            type: string
          repeatsRemaining:
            type: integer
          sequenceNumber:
            type: integer
          startDateTime:
            type: string
          status:
            type: string
          timelogType:
            type: string
          type:
            type: string
          updatedAt:
            type: string
          updatedBy:
            type: integer
          updatedByUserId:
            type: integer
        title: ProjectBudget
        type: object
      view.ProjectCategory:
        description: |-
          ProjectCategory contains all the information returned from a project
          category.
        properties:
          color:
            type: string
          count:
            type: integer
          id:
            type: integer
          name:
            type: string
          parent:
            $ref: '#/components/schemas/view.Relationship'
          parentId:
            type: integer
        title: ProjectCategory
        type: object
      view.ProjectEmailDropbox:
        description: |-
          ProjectEmailDropbox contains all the information returned from a file
          category.
        properties:
          id:
            type: integer
          itemCode:
            type: string
          itemEmail:
            type: string
          itemType:
            type: string
          parent:
            $ref: '#/components/schemas/view.Relationship'
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectCode:
            type: string
          projectEmails:
            $ref: '#/components/schemas/view.ProjectEmails'
        title: ProjectEmailDropbox
        type: object
      view.ProjectEmails:
        description: ProjectEmails is the project emails.
        properties:
          files:
            type: string
          links:
            type: string
          messages:
            type: string
          notebooks:
            type: string
          tasks:
            type: string
        title: ProjectEmails
        type: object
      view.ProjectFileV205:
        description: ProjectFileV205 contains all the information returned from a file.
        properties:
          category:
            $ref: '#/components/schemas/view.Relationship'
          categoryId:
            type: integer
          changeFollowers:
            $ref: '#/components/schemas/view.UserGroupsDeprecated'
          commentFollowers:
            $ref: '#/components/schemas/view.UserGroupsDeprecated'
          commentsCount:
            type: integer
          commentsCountRead:
            type: integer
          deletedAt:
            type: string
          deletedBy:
            type: integer
          description:
            type: string
          displayName:
            type: string
          downloadURL:
            type: string
          extraData:
            type: string
          fileSource:
            type: string
          filenameOnDisk:
            type: string
          id:
            type: integer
          isLocked:
            type: boolean
          isPrivate:
            description: |-
              IsPrivate can have the values 0 for public, 1 for private and 2 for
              inherited.
            enum:
              - '0'
              - '1'
              - '2'
            type: integer
          latestFileVersionNo:
            type: integer
          lockdown:
            $ref: '#/components/schemas/view.Relationship'
          lockdownId:
            type: integer
          lockedAt:
            type: string
          lockedBy:
            type: integer
          lockedByUserId:
            type: integer
          lockedDate:
            type: string
          meta:
            type: object
          numLikes:
            type: integer
          originalName:
            type: string
          previewURL:
            type: string
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          reactions:
            $ref: '#/components/schemas/view.ReactionsForObject'
          relatedItems:
            $ref: '#/components/schemas/view.RelatedItems'
          size:
            type: integer
          status:
            type: string
          tagIds:
            items:
              type: integer
            type: array
          tags:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          thumbURL:
            type: string
          updatedAt:
            type: string
          uploadedAt:
            type: string
          uploadedBy:
            type: integer
          uploadedByUserID:
            type: integer
          uploadedDate:
            type: string
          version:
            $ref: '#/components/schemas/view.Relationship'
          versionId:
            type: integer
          versions:
            items:
              $ref: '#/components/schemas/view.FileversionV205'
            type: array
        title: ProjectFileV205
        type: object
      view.ProjectMinMaxAvailableDates:
        description: |-
          ProjectMinMaxAvailableDates shows suggested start and
          end dates for a project.
        properties:
          deadlinesFound:
            type: boolean
          maxEndDate:
            type: string
          minStartDate:
            type: string
          suggestedEndDate:
            type: string
          suggestedStartDate:
            type: string
        title: ProjectMinMaxAvailableDates
        type: object
      view.ProjectPermissions:
        description: >-
          ProjectPermissions determines the user permissions associated with a
          project.
        properties:
          active:
            type: boolean
          addExpenses:
            type: boolean
          addFiles:
            type: boolean
          addForms:
            type: boolean
          addLinks:
            type: boolean
          addMessages:
            type: boolean
          addMilestones:
            type: boolean
          addNotebooks:
            type: boolean
          addProjectUpdate:
            type: boolean
          addRisks:
            type: boolean
          addTaskLists:
            type: boolean
          addTasks:
            type: boolean
          addTime:
            type: boolean
          canAccess:
            type: boolean
          canEditWorkflows:
            type: boolean
          canManagePeople:
            type: boolean
          canManageProjectBudget:
            type: boolean
          canManageProjectMembership:
            type: boolean
          canManageProjectTemplates:
            type: boolean
          canManageRates:
            type: boolean
          canManageSchedule:
            type: boolean
          canViewForms:
            type: boolean
          canViewProjectBudget:
            type: boolean
          canViewProjectMembers:
            type: boolean
          canViewProjectTemplates:
            type: boolean
          canViewRates:
            type: boolean
          canViewSchedule:
            type: boolean
          canViewWorkflows:
            type: boolean
          editAllTasks:
            type: boolean
          inOwnerCompany:
            type: boolean
          isArchived:
            type: boolean
          isObserving:
            type: boolean
          manageCustomFields:
            type: boolean
          projectAdministrator:
            type: boolean
          receiveEmailNotifications:
            type: boolean
          setPrivacy:
            type: boolean
          viewAllTimeLogs:
            type: boolean
          viewEstimatedTime:
            type: boolean
          viewInvoices:
            type: boolean
          viewLinks:
            type: boolean
          viewMessagesAndFiles:
            type: boolean
          viewNotebooks:
            type: boolean
          viewProjectUpdate:
            type: boolean
          viewRiskRegister:
            type: boolean
          viewTasksAndMilestones:
            type: boolean
          viewTime:
            type: boolean
        title: ProjectPermissions
        type: object
      view.ProjectUpdate:
        description: ProjectUpdate contains all the information returned from a update.
        properties:
          color:
            type: string
          createdAt:
            type: string
          createdBy:
            type: integer
          deleted:
            type: boolean
          deletedAt:
            type: string
          deletedBy:
            type: integer
          health:
            type: integer
          healthLabel:
            type: string
          id:
            type: integer
          isActive:
            type: boolean
          likeFromUserIDs:
            items:
              type: integer
            type: array
          likeFromUsers:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          reactions:
            $ref: '#/components/schemas/view.ReactionsForObject'
          text:
            type: string
          updatedAt:
            type: string
        title: ProjectUpdate
        type: object
      view.ProjectV205:
        description: ProjectV205 contains all the information returned from a project.
        properties:
          activePages:
            properties:
              billing:
                type: boolean
              board:
                type: boolean
              comments:
                type: boolean
              files:
                type: boolean
              finance:
                type: boolean
              forms:
                type: boolean
              gantt:
                type: boolean
              links:
                type: boolean
              list:
                type: boolean
              messages:
                type: boolean
              milestones:
                type: boolean
              notebooks:
                type: boolean
              proofs:
                type: boolean
              riskRegister:
                type: boolean
              table:
                type: boolean
              tasks:
                type: boolean
              time:
                type: boolean
            type: object
          allowNotifyAnyone:
            type: boolean
          announcement:
            type: string
          category:
            $ref: '#/components/schemas/view.Relationship'
          categoryId:
            type: integer
          company:
            $ref: '#/components/schemas/view.Relationship'
          companyId:
            type: integer
          createdAt:
            type: string
          createdBy:
            type: integer
          customFieldValueIds:
            items:
              type: integer
            type: array
          customFieldValues:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          customfieldValues:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          defaultPrivacy:
            type: string
          description:
            type: string
          directFileUploadsEnabled:
            type: boolean
          endAt:
            type: string
          endDate:
            type: string
          financialBudget:
            $ref: '#/components/schemas/view.Relationship'
          financialBudgetId:
            type: integer
          harvestTimersEnabled:
            type: boolean
          id:
            type: integer
          integrations:
            properties:
              googleDrive:
                properties:
                  access:
                    type: string
                  enabled:
                    type: boolean
                  folder:
                    type: string
                  folderName:
                    type: string
                type: object
              oneDriveBusiness:
                properties:
                  account:
                    type: string
                  enabled:
                    type: boolean
                  folder:
                    type: string
                  folderName:
                    type: string
                type: object
              sharepoint:
                properties:
                  account:
                    type: string
                  enabled:
                    type: boolean
                  folder:
                    type: string
                  folderName:
                    type: string
                type: object
              xero:
                properties:
                  baseCurrency:
                    type: string
                  connected:
                    type: boolean
                  countryCode:
                    type: string
                  enabled:
                    type: boolean
                  organisation:
                    type: string
                type: object
            type: object
          isBillable:
            type: boolean
          isOnBoardingProject:
            type: boolean
          isProjectAdmin:
            type: boolean
          isSampleProject:
            type: boolean
          isStarred:
            type: boolean
          lastWorkedOn:
            type: string
          latestActivity:
            $ref: '#/components/schemas/view.Relationship'
          logo:
            type: string
          logoColor:
            type: string
          logoIcon:
            type: string
          minMaxAvailableDates:
            $ref: '#/components/schemas/view.ProjectMinMaxAvailableDates'
          name:
            type: string
          notifyCommentIncludeCreator:
            type: boolean
          notifyEveryone:
            type: boolean
          notifyTaskAssignee:
            type: boolean
          overviewStartPage:
            type: string
          ownedBy:
            type: integer
          ownerId:
            type: integer
          portfolioCards:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          privacyEnabled:
            type: boolean
          projectOwner:
            $ref: '#/components/schemas/view.Relationship'
          projectOwnerId:
            type: integer
          replyByEmailEnabled:
            type: boolean
          showAnnouncement:
            type: boolean
          skipWeekends:
            type: boolean
          startAt:
            type: string
          startDate:
            type: string
          startPage:
            type: string
          status:
            type: string
          subStatus:
            type: string
          tagIds:
            items:
              type: integer
            type: array
          tags:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          tasksStartPage:
            type: string
          timeBudget:
            $ref: '#/components/schemas/view.Relationship'
          timeBudgetId:
            type: integer
          type:
            type: string
          update:
            $ref: '#/components/schemas/view.Relationship'
          updateId:
            type: integer
          updatedAt:
            type: string
          updatedBy:
            type: integer
          users:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          workflows:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
        title: ProjectV205
        type: object
      view.Proof:
        description: Proof contains all the information returned from a proof.
        properties:
          assignees:
            items:
              $ref: '#/components/schemas/view.Assignee'
            type: array
          company:
            $ref: '#/components/schemas/view.Relationship'
          createdAt:
            type: string
          createdBy:
            $ref: '#/components/schemas/view.Relationship'
          deletedAt:
            type: string
          deletedBy:
            $ref: '#/components/schemas/view.Relationship'
          due:
            $ref: '#/components/schemas/view.Date'
          entity:
            $ref: '#/components/schemas/view.Relationship'
          errorObjectIdxs:
            items:
              type: integer
            type: array
          feedbackCount:
            type: integer
          id:
            type: integer
          installationId:
            $ref: '#/components/schemas/view.Relationship'
          objects:
            items:
              $ref: '#/components/schemas/view.ProofObject'
            type: array
          parent:
            $ref: '#/components/schemas/view.Relationship'
          product:
            type: string
          state:
            type: string
          status:
            type: string
          title:
            type: string
          updatedAt:
            type: string
          updatedBy:
            $ref: '#/components/schemas/view.Relationship'
        title: Proof
        type: object
      view.ProofObject:
        description: ProofObject is a proof object item type.
        properties:
          URL:
            type: string
          approvalStatus:
            type: string
          createdAt:
            type: string
          createdBy:
            $ref: '#/components/schemas/view.Relationship'
          deletedAt:
            type: string
          deletedBy:
            $ref: '#/components/schemas/view.Relationship'
          due:
            type: string
          format:
            type: string
          id:
            type: integer
          installationId:
            $ref: '#/components/schemas/view.Relationship'
          size:
            type: integer
          sourceFormat:
            type: string
          state:
            type: string
          stateMessage:
            type: string
          thumbnail:
            type: string
          title:
            type: string
          totalChunks:
            type: integer
          type:
            type: string
          updatedAt:
            type: string
          updatedBy:
            $ref: '#/components/schemas/view.Relationship'
          version:
            type: integer
        title: ProofObject
        type: object
      view.PublicForm:
        description: PublicForm is a publically viewable version of Form
        properties:
          allowFileUpload:
            type: boolean
          allowTeamworkBranding:
            type: boolean
          confirmationMessage:
            type: string
          content:
            $ref: '#/components/schemas/view.Content'
          primaryColor:
            type: string
          promptAdditionalSubmissions:
            type: boolean
          redirectUrl:
            type: string
          submitButtonText:
            type: string
          token:
            $ref: '#/components/schemas/view.Token'
        title: PublicForm
        type: object
      view.Reaction:
        description: Reaction is a reaction item type.
        properties:
          installation:
            $ref: '#/components/schemas/view.Relationship'
          installationId:
            type: integer
          object:
            $ref: '#/components/schemas/view.Relationship'
          objectId:
            type: integer
          objectType:
            type: string
          postedDateTime:
            type: string
          type:
            type: string
          user:
            $ref: '#/components/schemas/view.Relationship'
          userId:
            type: integer
        title: Reaction
        type: object
      view.ReactionsForObject:
        description: >-
          ReactionsForObject contains all reactions information of a specific
          object.
        properties:
          counts:
            $ref: '#/components/schemas/view.ReactionsForObjectCounter'
          mine:
            items:
              type: string
            type: array
        title: ReactionsForObject
        type: object
      view.ReactionsForObjectCounter:
        description: |-
          ReactionsForObjectCounter contains the reactions counter of a specific
          object.
        properties:
          dislike:
            type: integer
          frown:
            type: integer
          heart:
            type: integer
          joy:
            type: integer
          like:
            type: integer
        title: ReactionsForObjectCounter
        type: object
      view.RelatedItems:
        description: RelatedItems represents the items a file can be related to.
        properties:
          comments:
            items:
              type: integer
            type: array
          messages:
            items:
              type: integer
            type: array
          tasks:
            items:
              type: integer
            type: array
        title: RelatedItems
        type: object
      view.Relationship:
        description: >-
          Relationship describes the relation between the main entity and a
          sideload type.
        properties:
          id:
            type: integer
          meta:
            type: object
          type:
            type: string
        title: Relationship
        type: object
      view.Risk:
        description: Risk represents a view of a risk.
        properties:
          canEdit:
            type: boolean
          createdAt:
            type: string
          createdBy:
            type: integer
          createdByUserId:
            type: integer
          createdOn:
            type: string
          deleted:
            type: boolean
          id:
            type: integer
          impact:
            type: string
          impactCost:
            type: boolean
          impactPerformance:
            type: boolean
          impactSchedule:
            type: boolean
          impactValue:
            type: integer
          lastChangedByUserId:
            type: integer
          lastChangedOn:
            type: string
          mitigationPlan:
            type: string
          probability:
            type: string
          probabilityValue:
            type: integer
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          result:
            type: integer
          source:
            type: string
          status:
            type: string
          updatedAt:
            type: string
          updatedBy:
            type: integer
        title: Risk
        type: object
      view.SampleProject:
        description: SampleProject contains all the sample project information.
        properties:
          categoryId:
            type: integer
          code:
            type: string
          content: {}
          description:
            type: string
          icon:
            type: string
          id:
            type: integer
          imagePreview:
            type: string
          name:
            type: string
        title: SampleProject
        type: object
      view.Stage:
        description: Stage contains all the information returned from a stage.
        properties:
          color:
            type: string
          createdAt:
            type: string
          createdBy:
            type: integer
          deletedAt:
            type: string
          deletedBy:
            type: integer
          displayOrder:
            type: number
          id:
            type: integer
          name:
            type: string
          showCompletedTasks:
            type: boolean
          taskIds:
            items:
              type: integer
            type: array
          updatedAt:
            type: string
          updatedBy:
            type: integer
          workflow:
            $ref: '#/components/schemas/view.Relationship'
        title: Stage
        type: object
      view.Status:
        description: Status contains all the information returned from a status.
        properties:
          dateLastUpdated:
            type: string
          dateTime:
            type: string
          deleted:
            type: boolean
          emoji:
            type: string
          id:
            type: integer
          ipAddress:
            type: string
          text:
            type: string
          updatedAt:
            type: string
          user:
            $ref: '#/components/schemas/view.Relationship'
          userId:
            type: integer
        title: Status
        type: object
      view.Tag:
        description: Tag contains all the information returned from a tag.
        properties:
          color:
            type: string
          count:
            type: integer
          id:
            type: integer
          name:
            type: string
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
        title: Tag
        type: object
      view.TaskAffectedV205:
        description: TaskAffectedV205 contains the affected tasks, for real-time updates
        properties:
          linkedCardId:
            type: integer
          linkedColumnId:
            type: integer
          linkedColumnName:
            type: string
          taskIds:
            items:
              type: integer
            type: array
        title: TaskAffectedV205
        type: object
      view.TaskCard:
        description: TaskCard contains all the information returned from a card.
        properties:
          archived:
            type: boolean
          archivedAt:
            type: string
          archivedBy:
            $ref: '#/components/schemas/view.Relationship'
          column:
            $ref: '#/components/schemas/view.Relationship'
          createBy:
            $ref: '#/components/schemas/view.Relationship'
          createdAt:
            type: string
          deleteBy:
            $ref: '#/components/schemas/view.Relationship'
          deletedAt:
            type: string
          displayOrder:
            type: integer
          id:
            type: integer
          status:
            type: string
          updatedAt:
            type: string
          visible:
            type: boolean
        title: TaskCard
        type: object
      view.TaskPermissions:
        description: TaskPermissions is a user specific set of task permissions
        properties:
          canAddSubtasks:
            type: boolean
          canComplete:
            type: boolean
          canEdit:
            type: boolean
          canLogTime:
            type: boolean
          canViewEstTime:
            type: boolean
        title: TaskPermissions
        type: object
      view.TaskReminder:
        description: TaskReminder contains all the information returned from a reminder.
        properties:
          createdAt:
            type: string
          createdBy:
            $ref: '#/components/schemas/view.Relationship'
          id:
            type: integer
          isRelative:
            type: boolean
          note:
            type: string
          relativeNumberDays:
            type: integer
          remindAt:
            type: string
          task:
            $ref: '#/components/schemas/view.Relationship'
          type:
            type: string
          user:
            $ref: '#/components/schemas/view.Relationship'
          wasSent:
            type: boolean
        title: TaskReminder
        type: object
      view.TaskSequence:
        description: TaskSequence defines how entity.TaskSequence should be rendered.
        properties:
          dates:
            items:
              $ref: '#/components/schemas/view.Date'
            type: array
          duration:
            type: integer
          endDate:
            type: string
          frequency:
            type: string
          id:
            type: integer
          installationId:
            type: integer
          monthlyRepeatType:
            type: string
          rrule:
            type: string
          selectedWeekDays:
            items:
              type: string
            type: array
          tasks:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
        title: TaskSequence
        type: object
      view.TaskStats:
        description: TaskStats shows basic task stats
        properties:
          active:
            type: integer
          complete:
            type: integer
          id:
            type: integer
          late:
            type: integer
        title: TaskStats
        type: object
      view.TaskTimeTotals:
        description: TaskTimeTotals contains time total info for a task
        properties:
          billableLoggedMinutes:
            type: integer
          billedloggedMinutes:
            type: integer
          loggedMinutes:
            type: integer
        title: TaskTimeTotals
        type: object
      view.TaskV205:
        description: TaskV205 defines how entity.Task should be rendered.
        properties:
          accumulatedEstimatedMinutes:
            type: integer
          assigneeCompanies:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          assigneeCompanyIds:
            items:
              type: integer
            type: array
          assigneeTeamIds:
            items:
              type: integer
            type: array
          assigneeTeams:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          assigneeUserIds:
            items:
              type: integer
            type: array
          assigneeUsers:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          assignees:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          attachments:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          capacities:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          card:
            $ref: '#/components/schemas/view.Relationship'
          changeFollowers:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          column:
            $ref: '#/components/schemas/view.Relationship'
          commentFollowers:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          completedAt:
            type: string
          completedBy:
            type: integer
          completedOn:
            type: string
          createdAt:
            type: string
          createdBy:
            type: integer
          createdByUserId:
            type: integer
          crmDealIds:
            items:
              type: integer
            type: array
          dateUpdated:
            type: string
          decimalDisplayOrder:
            type: number
          dependencyIds:
            items:
              type: integer
            type: array
          description:
            type: string
          descriptionContentType:
            type: string
          displayOrder:
            type: integer
          dueDate:
            type: string
          dueDateOffset:
            type: integer
          estimateMinutes:
            type: integer
          hasDeskTickets:
            type: boolean
          hasReminders:
            type: boolean
          id:
            type: integer
          isArchived:
            type: boolean
          isBlocked:
            type: boolean
          isPrivate:
            type: integer
          latestUpdates:
            items:
              $ref: '#/components/schemas/view.Audit'
            type: array
          lockdown:
            $ref: '#/components/schemas/view.Relationship'
          meta:
            type: object
          name:
            type: string
          originalDueDate:
            $ref: '#/components/schemas/view.Date'
          outOfSequence:
            type: boolean
          parentTask:
            $ref: '#/components/schemas/view.Relationship'
          parentTaskId:
            type: integer
          predecessorIds:
            items:
              type: integer
            type: array
          predecessors:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          priority:
            type: string
          progress:
            type: integer
          proofs:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          sequence:
            $ref: '#/components/schemas/view.Relationship'
          sequenceDueDate:
            $ref: '#/components/schemas/view.Date'
          sequenceId:
            type: integer
          sequenceRootTask:
            type: boolean
          sequenceStartDate:
            $ref: '#/components/schemas/view.Date'
          startDate:
            type: string
          startDateOffset:
            type: integer
          status:
            type: string
          subTaskIds:
            items:
              type: integer
            type: array
          tagIds:
            items:
              type: integer
            type: array
          tasklist:
            $ref: '#/components/schemas/view.Relationship'
          tasklistId:
            type: integer
          templateRoleName:
            type: string
          timer:
            $ref: '#/components/schemas/view.Relationship'
          updatedAt:
            type: string
          updatedBy:
            type: integer
          userPermissions:
            $ref: '#/components/schemas/view.TaskPermissions'
          workflowStages:
            items:
              $ref: '#/components/schemas/view.TaskWorkflowStageData'
            type: array
        title: TaskV205
        type: object
      view.TaskWorkflowStageData:
        description: TaskWorkflowStageData contains the workflow data for a task
        properties:
          stageId:
            type: integer
          stageTaskDisplayOrder:
            type: number
          workflowId:
            type: integer
        title: TaskWorkflowStageData
        type: object
      view.Taskgroup:
        description: Taskgroup contains all the information returned from a Taskgroup.
        properties:
          createdAt:
            type: string
          createdBy:
            type: integer
          description:
            type: string
          displayOrder:
            type: number
          id:
            type: integer
          name:
            type: string
          status:
            type: string
          taskIds:
            items:
              type: integer
            type: array
          updatedAt:
            type: string
          updatedBy:
            type: integer
        title: Taskgroup
        type: object
      view.Tasklist:
        description: Tasklist contains all the information returned from a tasklist.
        properties:
          createdAt:
            type: string
          defaultTask:
            $ref: '#/components/schemas/view.Relationship'
          defaultTaskId:
            type: integer
          description:
            type: string
          displayOrder:
            type: integer
          icon:
            type: string
          id:
            type: integer
          isBillable:
            type: boolean
          isPinned:
            type: boolean
          isPrivate:
            type: boolean
          lockdownId:
            type: integer
          milestone:
            $ref: '#/components/schemas/view.Relationship'
          milestoneId:
            type: integer
          name:
            type: string
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          status:
            type: string
          tasklistBudget:
            $ref: '#/components/schemas/view.Relationship'
          updatedAt:
            type: string
        title: Tasklist
        type: object
      view.TasklistBudget:
        description: TasklistBudget is a budget item type.
        properties:
          capacity:
            type: integer
          capacityUsed:
            type: integer
          createdAt:
            type: string
          createdBy:
            type: integer
          deletedAt:
            type: string
          deletedBy:
            type: integer
          id:
            type: integer
          installationId:
            type: integer
          notificationIds:
            items:
              type: integer
            type: array
          notifications:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          projectBudgetId:
            type: integer
          projectId:
            type: integer
          projectbudget:
            $ref: '#/components/schemas/view.Relationship'
          tasklist:
            $ref: '#/components/schemas/view.Relationship'
          tasklistId:
            type: integer
          type:
            type: string
          updatedAt:
            type: string
          updatedBy:
            type: integer
        title: TasklistBudget
        type: object
      view.TasklistBudgetNotification:
        description: >-
          TasklistBudgetNotification contains all the information returned from a
          notification.
        properties:
          budgetId:
            type: integer
          capacityThreshold:
            type: number
          companyId:
            type: integer
          id:
            type: integer
          notificationMedium:
            type: string
          teamId:
            type: integer
          userId:
            type: integer
        title: TasklistBudgetNotification
        type: object
      view.Team:
        description: Team contains all the information returned from a team.
        properties:
          id:
            type: integer
          name:
            type: string
          teamLogo:
            type: string
          teamLogoColor:
            type: string
          teamLogoIcon:
            type: string
        title: Team
        type: object
      view.Timelog:
        description: Timelog contains all the information returned from a timelog.
        properties:
          assignedTeamIds:
            items:
              type: integer
            type: array
          billable:
            type: boolean
          createdAt:
            type: string
          dateCreated:
            type: string
          dateDeleted:
            type: string
          dateEdited:
            type: string
          deleted:
            type: boolean
          deletedAt:
            type: string
          deletedBy:
            type: integer
          deletedByUserId:
            type: integer
          description:
            type: string
          deskTicketId:
            type: integer
          editedByUserId:
            type: integer
          hasStartTime:
            type: boolean
          id:
            type: integer
          isBillable:
            type: boolean
          loggedBy:
            type: integer
          loggedByUserId:
            type: integer
          minutes:
            type: integer
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectBillingInvoice:
            $ref: '#/components/schemas/view.Relationship'
          projectBillingInvoiceId:
            type: integer
          projectId:
            type: integer
          tagIds:
            items:
              type: integer
            type: array
          tags:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          task:
            $ref: '#/components/schemas/view.Relationship'
          taskId:
            type: integer
          taskIdPreMove:
            type: integer
          taskPreMove:
            $ref: '#/components/schemas/view.Relationship'
          timeLogged:
            type: string
          updatedAt:
            type: string
          updatedBy:
            type: integer
          user:
            $ref: '#/components/schemas/view.Relationship'
          userId:
            type: integer
        title: Timelog
        type: object
      view.TimelogTotals:
        description: TimelogTotals contains all the information returned for timelog totals.
        properties:
          estimatedMinutes:
            type: integer
          estimatedMinutesActive:
            type: integer
          estimatedMinutesCompleted:
            type: integer
          estimatedMinutesFiltered:
            type: integer
          estimatedMinutesWithLoggedTime:
            type: integer
          minutes:
            type: integer
          minutesBillable:
            type: integer
          minutesBilled:
            type: integer
          minutesNonBillable:
            type: integer
          minutesNonBilled:
            type: integer
        title: TimelogTotals
        type: object
      view.TimelogTotalsSubtasks:
        description: >-
          TimelogTotalsSubtasks contains all the information returned for timelog
          totals for subtasks.
        properties:
          estimatedMinutes:
            type: integer
          minutes:
            type: integer
          minutesBillable:
            type: integer
        title: TimelogTotalsSubtasks
        type: object
      view.Timer:
        description: Timer contains all the information returned from a timer.
        properties:
          billable:
            type: boolean
          createdAt:
            type: string
          deleted:
            type: boolean
          deletedAt:
            type: string
          description:
            type: string
          duration:
            type: integer
          id:
            type: integer
          intervals:
            items:
              $ref: '#/components/schemas/view.TimerInterval'
            type: array
          lastStartedAt:
            type: string
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          running:
            type: boolean
          serverTime:
            type: string
          task:
            $ref: '#/components/schemas/view.Relationship'
          taskId:
            type: integer
          timeLogId:
            type: integer
          timelog:
            $ref: '#/components/schemas/view.Relationship'
          timerLastIntervalEnd:
            type: string
          updatedAt:
            type: string
          user:
            $ref: '#/components/schemas/view.Relationship'
          userId:
            type: integer
        title: Timer
        type: object
      view.TimerInterval:
        description: |-
          TimerInterval contains all the information returned from a timer
          interval.
        properties:
          duration:
            type: integer
          from:
            type: string
          id:
            type: integer
          to:
            type: string
        title: TimerInterval
        type: object
      view.TimesheetCustomRow:
        description: TimesheetCustomRow represents a custom row for a timesheet
        properties:
          entityId:
            type: integer
          entityType:
            type: string
          id:
            type: integer
        title: TimesheetCustomRow
        type: object
      view.Token:
        description: Token contains all the information returned from a form token.
        properties:
          canonicalURL:
            type: string
          value:
            type: string
        title: Token
        type: object
      view.UnavailableTimes:
        description: UnavailableTimes contains date summary and total Unavailable minutes
        properties:
          dates:
            additionalProperties:
              $ref: '#/components/schemas/view.UnavailableTimesDateSummary'
            type: object
          totalUnavailableMinutes:
            type: integer
        title: UnavailableTimes
        type: object
      view.UnavailableTimesDateSummary:
        description: >-
          UnavailableTimesDateSummary contains total minutes and event ids for a
          date
        properties:
          totalUnavailableMinutes:
            type: integer
          unavailableTimes:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
        title: UnavailableTimesDateSummary
        type: object
      view.User:
        description: User contains all the information returned from an user.
        properties:
          avatarUrl:
            type: string
          canAddProjects:
            type: boolean
          company:
            $ref: '#/components/schemas/view.Relationship'
          companyId:
            type: integer
          companyRoleId:
            type: integer
          deleted:
            type: boolean
          email:
            type: string
          firstName:
            type: string
          id:
            type: integer
          isAdmin:
            type: boolean
          isClientUser:
            type: boolean
          isServiceAccount:
            type: boolean
          lastName:
            type: string
          lengthOfDay:
            type: number
          meta:
            type: object
          teams:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          timezone:
            type: string
          title:
            type: string
          type:
            type: string
          userCost:
            type: integer
          userRate:
            type: integer
          workingHour:
            $ref: '#/components/schemas/view.Relationship'
          workingHoursId:
            type: integer
        title: User
        type: object
      view.UserDashboard:
        description: UserDashboard contains all the information returned from a dashboard.
        properties:
          color:
            type: string
          createdAt:
            type: string
          dashboardPanelIds:
            items:
              type: integer
            type: array
          dashboardPanels:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          dashboardSettingIds:
            items:
              type: integer
            type: array
          dashboardSettings:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          deleted:
            type: boolean
          deletedAt:
            type: string
          description:
            type: string
          displayOrder:
            type: integer
          id:
            type: integer
          isDefault:
            type: boolean
          project:
            $ref: '#/components/schemas/view.Relationship'
          projectId:
            type: integer
          title:
            type: string
          updatedAt:
            type: string
          user:
            $ref: '#/components/schemas/view.Relationship'
          userId:
            type: integer
        title: UserDashboard
        type: object
      view.UserDashboardPanel:
        description: >-
          UserDashboardPanel contains all the information returned from a
          dashboard

          panel.
        properties:
          dashboardId:
            type: integer
          dashboardPanelSettingIds:
            items:
              type: integer
            type: array
          displayOrder:
            type: integer
          id:
            type: integer
          name:
            type: string
          type:
            type: string
        title: UserDashboardPanel
        type: object
      view.UserDashboardPanelSetting:
        description: >-
          UserDashboardPanelSetting contains all the information returned from a
          dashboard

          panel.
        properties:
          dashboardId:
            type: integer
          dashboardPanelId:
            type: integer
          id:
            type: integer
          name:
            type: string
          value:
            type: string
        title: UserDashboardPanelSetting
        type: object
      view.UserDashboardSetting:
        description: >-
          UserDashboardSetting contains all the information returned from a
          dashboard

          setting.
        properties:
          dashboardId:
            type: integer
          id:
            type: integer
          name:
            type: string
          value:
            type: string
        title: UserDashboardSetting
        type: object
      view.UserEvents:
        description: |-
          UserEvents contains status details from other project
          features related with a user.
        properties:
          clockedIn:
            type: boolean
        title: UserEvents
        type: object
      view.UserGroupsDeprecated:
        description: |-
          UserGroupsDeprecated are common lists
          for storing users, companies and teams ids
          together.
          Use []Relationship instead
        properties:
          companies:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          companyIds:
            items:
              type: integer
            type: array
          teamIds:
            items:
              type: integer
            type: array
          teams:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          userIds:
            items:
              type: integer
            type: array
          users:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
        title: UserGroupsDeprecated
        type: object
      view.UserUtilization:
        description: >-
          UserUtilization contains all the information returned from a
          utilization.
        properties:
          data:
            items:
              $ref: '#/components/schemas/view.UserUtilizationData'
            type: array
          user:
            $ref: '#/components/schemas/view.Relationship'
          userId:
            type: integer
        title: UserUtilization
        type: object
      view.UserUtilizationData:
        description: UserUtilizationData stores the user utilization on a specific period.
        properties:
          allocatedMinutes:
            type: integer
          availableMinutes:
            type: integer
          billableMinutes:
            type: integer
          endDate:
            $ref: '#/components/schemas/view.Date'
          estimatedMinutes:
            type: integer
          loggedMinutes:
            type: integer
          startDate:
            $ref: '#/components/schemas/view.Date'
          unavailableMinutes:
            type: integer
          unbillableMinutes:
            type: integer
        title: UserUtilizationData
        type: object
      view.Workflow:
        description: Workflow contains all the information returned from a workflow.
        properties:
          createdAt:
            type: string
          createdBy:
            type: integer
          defaultWorkflow:
            type: boolean
          id:
            type: integer
          lockdown:
            $ref: '#/components/schemas/view.Relationship'
          name:
            type: string
          projectIds:
            items:
              type: integer
            type: array
          projectSpecific:
            type: boolean
          stages:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          status:
            type: string
          updatedAt:
            type: string
          updatedBy:
            type: integer
        title: Workflow
        type: object
      view.WorkingHour:
        description: WorkingHour stores the the working hours of an entity (user, team, etc).
        properties:
          createdAt:
            type: string
          dateCreated:
            type: string
          dateUpdated:
            type: string
          description:
            type: string
          entries:
            items:
              $ref: '#/components/schemas/view.Relationship'
            type: array
          entryIds:
            items:
              type: integer
            type: array
          id:
            type: integer
          name:
            type: string
          object:
            $ref: '#/components/schemas/view.Relationship'
          objectId:
            type: integer
          objectType:
            type: string
          updatedAt:
            type: string
        title: WorkingHour
        type: object
      view.WorkingHourEntry:
        description: WorkingHourEntry stores weekday working hour data.
        properties:
          endTime:
            type: string
          id:
            type: integer
          startTime:
            type: string
          taskHours:
            type: number
          timezone:
            type: string
          weekday:
            type: string
          workingHour:
            $ref: '#/components/schemas/view.Relationship'
          workingHourId:
            type: integer
        title: WorkingHourEntry
        type: object
  servers:
    - url: https://{site_name}.teamwork.com
      variables:
        site_name:
          default: your-site
konfigCliVersion: 1.38.61
