publishJson:
  company: Kombo
  serviceName: false
  sdkName: kombo-{language}-sdk
  clientName: Kombo
  metaDescription: >-
    Kombo is changing how B2B SaaS companies provide HR integrations to their
    customers. Instead of having to build and maintain many APIs themselves,
    Kombos customers can integrate with Kombo's API once and offer dozens of
    APIs to their customers instantly.
  apiStatusUrls: inherit
  homepage: kombo.dev
  developerDocumentation: docs.kombo.dev
  categories:
    - integrations
    - ats
    - hris
    - payroll
rawSpecString: |
  openapi: 3.0.0
  info:
    title: Kombo API
    version: 1.0.0
  paths:
    /check-api-key:
      get:
        operationId: GetCheckApiKey
        responses:
          '200':
            description: GET /check-api-key Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetCheckApiKeySuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        environment_id: 2Uev1YUTqLFdvMPD3Jtrg2FX
                        customer_id: 2Uev1YUTqLFdvMPD3Jtrg2FX
          '400':
            description: GET /check-api-key Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetCheckApiKeyErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: Check whether your API key is working properly.
        summary: Check API key
        tags:
          - General
    /force-sync:
      post:
        operationId: PostForceSync
        responses:
          '200':
            description: POST /force-sync Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostForceSyncSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        already_queued: false
                        sync_id: 119ihtp91nA3dqRFiV67nXS6
          '400':
            description: POST /force-sync Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostForceSyncErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
        description: >-
          Trigger a sync for a specific integration.


          <Warning>Please note that it is **not** necessary nor recommended to
          call this endpoint periodically on your side. Kombo already performs
          period syncs for you and you should only trigger syncs yourself in
          special cases (like when a user clicks on a "Sync" button in your
          app).</Warning>
        summary: Trigger sync
        tags:
          - General
        requestBody:
          description: POST /force-sync request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostForceSyncRequestBody'
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: workday:HWUTwvyx2wLoSUHphiWVrp28
            required: true
    /passthrough/{tool}/{api}:
      post:
        operationId: PostPassthroughToolApi
        responses:
          '200':
            description: POST /passthrough/:tool/:api Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostPassthroughToolApiSuccessfulResponse'
          '400':
            description: POST /passthrough/:tool/:api Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostPassthroughToolApiErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Send a request to the specified integration's native API.


          At Kombo we put a lot of work into making sure that our unified API
          covers all our customers' use cases and that they never have to think
          about integration-specific logic again. There are cases, however, where
          our customers want to build features that are very integration-specific.
          That's where this endpoint comes in.


          Pass in details about the request you want to make to the integration's
          API and we'll forward it for you. We'll also take care of setting the
          right base URL and authenticating your requests.


          To get started, please pick the relevant API (some tools provide
          multiple to due different base URLs or authentication schemes) from the
          table below and pass in the `{tool}/{api}` identifier as part of the
          path.


          |Integration|`{tool}/{api}`|Description|

          |---|---|---|

          |Personio|`personio/personnel`|Personio's [Personnel Data
          API](https://developer.personio.de/reference/get_company-employees). We
          automatically authenticate all requests using the client ID and secret
          and use `https://api.personio.de/v1` as the base URL.|

          |Workday|`workday/soap`|[Workday's SOAP
          API](https://community.workday.com/sites/default/files/file-hosting/productionapi/index.html).
          We automatically authenticate all requests. Set `data` to your raw xml
          string. Use `/` as your `path`, as we will always send requests to
          `https://{domain}/ccx/service/{tenant}/{service_name}/38.2`. Set your
          `method` to `POST`. You need to specify the `api_options` object and set
          `service_name` to the name of the service you want to call. Find all
          available services
          [here](https://community.workday.com/sites/default/files/file-hosting/productionapi/versions/v41.0/index.html).
          The string that you submit as `data` will be the content of the
          `soapenv:Body` tag in the request.|

          |SAP SuccessFactors|`successfactors/odata-v2`|[SuccessFactors' OData V2
          API](https://help.sap.com/doc/74597e67f54d4f448252bad4c2b601c9/2211/en-US/SF_HCM_OData_API_REF_en.pdf).
          We automatically authenticate all requests and use
          `https://{api_domain}/odata/v2` as the base URL.|

          |Lever|`lever/v1`|[Lever's v1
          API](https://hire.lever.co/developer/documentation). We automatically
          authenticate all requests using the partner credentials which have been
          configured in the Lever tool settings (this uses Kombo's partner
          credentials by default).|

          |Recruitee|`recruitee/default`|The [Recruitee
          API](https://api.recruitee.com/docs/index.html). We automatically
          authenticate all requests and use
          `https://api.recruitee.com/c/{company_id}` as the base URL.|

          |Greenhouse|`greenhouse/harvest`|Greenhouse [Harvest
          API](https://developers.greenhouse.io/harvest.html). We automatically
          authenticate all requests using the API key and use
          `https://harvest.greenhouse.io/v1` as the base URL.|

          |Teamtailor|`teamtailor/v1`|Teamtailor's
          [JSON-API](https://docs.teamtailor.com/). We authenticate all request
          with the Teamtailor API key and use the base URL
          `https://api.teamtailor.com/v1`.|

          |Personio|`personio/recruiting`|Personio's [Recruiting
          API](https://developer.personio.de/reference/get_company-employees). We
          automatically authenticate all requests using the Recruiting access
          token and use `https://api.personio.de/v1/recruiting` as the base URL.|

          |Personio|`personio/jobboard`|API endpoints exposed on Personio's public
          job board pages ([currently just the XML
          feed](https://developer.personio.de/reference/get_xml)). We
          automatically use the right `https://{company}.jobs.personio.de` base
          URL.|

          |BambooHR|`bamboohr/v1`|BambooHR's
          [API](https://documentation.bamboohr.com/reference/get-employee). We
          automatically authenticate all requests using the customer credentials
          `https://api.bamboohr.com/api/gateway.php/{subdomain}/v1` as the base
          URL.|

          |Workable|`workable/v1`|Workable's
          [API](https://workable.readme.io/reference/generate-an-access-token). We
          automatically authenticate all requests using the client ID and secret
          and use `https://subdomain.workable.com/spi/v3` as the base URL.|

          |HiBob|`hibob/v1`|[HibBob's v1
          API](https://apidocs.hibob.com/reference/get_people). We automatically
          authenticate all requests using the service user credentials (or, for
          old integrations, the API key) and use `https://api.hibob.com/v1` as the
          base URL.|

          |Pinpoint|`pinpoint/v1`|Pinpoint's
          [JSON:API](https://developers.pinpointhq.com/docs). We automatically
          authenticate all requests using the `X-API-KEY` header and use
          `https://{subdomain}.pinpointhq.com/api/v1` as the base URL.|

          |Haufe Umantis|`umantis/v1`|[Umantis API
          v1](https://recruitingapp-91005709.umantis.com/api/v1/swagger-ui). We
          automatically authenticate all requests and use
          `https://{subdomain}.umantis.com/api/v1` as the base URL.|

          |HRworks|`hrworks/v2`|HRWorks's v2
          [API](https://developers.hrworks.de/2.0/endpoints). We automatically
          authenticate all requests using the customer credentials.|

          |JazzHR|`jazzhr/v1`|[JazzHR's v1
          API](https://www.resumatorapi.com/v1/#!`). We automatically authenticate
          all requests.|


          <Note>Please note that the passthrough API endpoints are only meant for
          edge cases. That's why we only expose them for new integrations after
          understanding a concrete customer use case. If you have such a use case
          in mind, please reach out to Kombo.</Note>
        summary: Send passthrough request
        tags:
          - General
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: greenhouse:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: tool
            in: path
            required: true
            description: >-
              The ID of the tool whose passthrough API you want to call (e.g.,
              `personio`).
            schema:
              $ref: '#/components/schemas/PostPassthroughToolApiParameterTool'
          - name: api
            in: path
            required: true
            description: >-
              The ID of the passthrough API you want to call (some tools provide
              multiple). Check the endpoint description for a list of all
              available APIs.
            schema:
              $ref: '#/components/schemas/PostPassthroughToolApiParameterApi'
        requestBody:
          description: POST /passthrough/:tool/:api request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPassthroughToolApiRequestBody'
    /integrations/{integration_id}:
      delete:
        operationId: DeleteIntegrationsIntegrationId
        responses:
          '200':
            description: DELETE /integrations/:integration_id Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/DeleteIntegrationsIntegrationIdSuccessfulResponse
          '400':
            description: DELETE /integrations/:integration_id Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/DeleteIntegrationsIntegrationIdErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
        description: |-
          Delete the specified integration.
          **⚠️ This can not be undone!**
        summary: Delete integration
        tags:
          - General
        parameters:
          - name: integration_id
            in: path
            required: true
            description: DELETE /integrations/:integration_id parameter
            schema:
              $ref: >-
                #/components/schemas/DeleteIntegrationsIntegrationIdParameterIntegrationId
        requestBody:
          description: DELETE /integrations/:integration_id request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteIntegrationsIntegrationIdRequestBody'
      get:
        operationId: GetIntegrationsIntegrationId
        responses:
          '200':
            description: GET /integrations/:integration_id Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/GetIntegrationsIntegrationIdSuccessfulResponse
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        id: factorial:8d1hpPsbjxUkoCoa1veLZGe5
                        tool:
                          id: factorial
                          label: Factorial
                          internal_label: null
                          logo_url: >-
                            https://storage.googleapis.com/kombo-assets/integrations/factorial/logo.svg
                          icon_url: >-
                            https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg
                        category: HRIS
                        status: ACTIVE
                        end_user:
                          organization_name: Acme
                          creator_email: example-integration-creator@acme.com
                          origin_id: 2DQJAUtSzzzKP9buDTvUvPk3
                        scope_config:
                          id: B1hu5NGyhdjSq5X3hxEz4bAN
                          name: Anonymous Scopes
                        created_at: '2022-08-07T14:01:29.196Z'
                        beta: false
          '400':
            description: GET /integrations/:integration_id Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetIntegrationsIntegrationIdErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
        description: >-
          Get the specified integration with everything you need to display it to
          your customer.
        summary: Get integration details
        tags:
          - General
        parameters:
          - name: integration_id
            in: path
            required: true
            description: GET /integrations/:integration_id parameter
            schema:
              $ref: >-
                #/components/schemas/GetIntegrationsIntegrationIdParameterIntegrationId
    /integrations/{integration_id}/relink:
      post:
        operationId: PostIntegrationsIntegrationIdRelink
        responses:
          '200':
            description: POST /integrations/:integration_id/relink Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostIntegrationsIntegrationIdRelinkSuccessfulResponse
          '400':
            description: POST /integrations/:integration_id/relink Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostIntegrationsIntegrationIdRelinkErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
        description: >-
          Create a link that will allow the user to reconnect an integration. This
          is useful if you want to allow your users to update the credentials if
          the old ones for example expired.


          Embed this the same way you would [embed the connect
          link](https://api.kombo.dev). By default, the link will be valid for 1
          hour.


          ### Example Request Body


          ```json

          {
            "language": "en"
          }

          ```
        summary: Create reconnection link
        tags:
          - General
        parameters:
          - name: integration_id
            in: path
            required: true
            description: POST /integrations/:integration_id/relink parameter
            schema:
              $ref: >-
                #/components/schemas/PostIntegrationsIntegrationIdRelinkParameterIntegrationId
            examples:
              example1:
                value: personio:93fCvorjZ2jas7ZekX1V1n5d
        requestBody:
          description: POST /integrations/:integration_id/relink request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostIntegrationsIntegrationIdRelinkRequestBody
              examples:
                example1:
                  value:
                    language: en
    /tools/{category}:
      get:
        operationId: GetToolsCategory
        responses:
          '200':
            description: GET /tools/:category Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetToolsCategorySuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        tools:
                          - id: factorial
                            label: Factorial
                            internal_label: null
                            assets:
                              logo_url: >-
                                https://storage.googleapis.com/kombo-assets/integrations/factorial/logo.svg
                              icon_url: >-
                                https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg
                              icon_black_url: >-
                                https://storage.googleapis.com/kombo-assets/integrations/factorial/icon-black.svg
                            coverage:
                              read_models:
                                - id: hris_employees
                                  label: Employees
                                - id: hris_teams
                                  label: Groups
                              write_actions:
                                - id: hris_create_employee
                                  label: Create employee
                              features:
                                - id: automatic_source_writing
                                  label: Automatic Source Writing
          '400':
            description: GET /tools/:category Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetToolsCategoryErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: >-
          Get a list of the tools (i.e., integrations) enabled in your
          environment.
           This can (in combination with the `integration_tool` parameter of [the "Create Link" endpoint](https://api.kombo.dev)) be used to, for example, display a custom list or grid of available integrations to your end users instead of exposing Kombo Connect's standard tool selector.
        summary: Get tools
        parameters:
          - name: category
            in: path
            required: true
            description: GET /tools/:category parameter
            schema:
              $ref: '#/components/schemas/GetToolsCategoryParameterCategory'
        tags:
          - General
    /hris/provisioning-groups/{group_id}/diff:
      post:
        operationId: PostHrisProvisioningGroupsGroupIdDiff
        responses:
          '200':
            description: POST /hris/provisioning-groups/:group_id/diff Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostHrisProvisioningGroupsGroupIdDiffSuccessfulResponse
          '400':
            description: POST /hris/provisioning-groups/:group_id/diff Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostHrisProvisioningGroupsGroupIdDiffErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: >-
          Get the list of users to provision, deprovision, and optionally update
          based on the users you've already provisioned in your system.
        summary: Get provisioning diff
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: group_id
            in: path
            required: true
            description: ID of the provisioning group (currently only `default` is allowed).
            schema:
              $ref: >-
                #/components/schemas/PostHrisProvisioningGroupsGroupIdDiffParameterGroupId
            examples:
              example1:
                value: n39n320clr8c5amf8v83nbch
        requestBody:
          description: POST /hris/provisioning-groups/:group_id/diff request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostHrisProvisioningGroupsGroupIdDiffRequestBody
              examples:
                example1:
                  value:
                    provisioned_users:
                      - origin_id: your_id_123
                        email: johndoe@example.com
                    options:
                      employee_fields:
                        - id
                        - first_name
                        - last_name
        tags:
          - Unified HRIS API
    /hris/provisioning-groups/{group_id}/setup-links:
      post:
        operationId: PostHrisProvisioningGroupsGroupIdSetupLinks
        responses:
          '200':
            description: >-
              POST /hris/provisioning-groups/:group_id/setup-links Successful
              response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostHrisProvisioningGroupsGroupIdSetupLinksSuccessfulResponse
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        url: >-
                          https://connect.kombo.dev/v1/provisioning?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.SWYgeW91IGFyZSByZWFkaW5nIHRoaXMsIHdlIHdvdWxkIGxpa2UgdG8gbGV0IHlvdSBrbm93IHRoYXQgd2UgYXJlIGhpcmluZyBwZW9wbGUgbGlrZSB5b3UgOikuIFJlYWNoIG91dCB0byBhbGV4QGtvbWJvLmRldiB0byBnZXQgaW4gY29udGFjdCBhbmQgdGVsbCBoaW0geW91IGNvbWUgZnJvbSB0aGUgSldUIDsp._hhX5YTtHfLn9ZC806dZceRn2whzxHyrhft1ONzNgOE
                        expires_at: '2023-10-11T12:00:00.000Z'
          '400':
            description: POST /hris/provisioning-groups/:group_id/setup-links Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostHrisProvisioningGroupsGroupIdSetupLinksErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
        description: >-
          Create a new link that can be passed to the Kombo Connect SDK to open
          the provisioning setup UI.
        summary: Create provisioning setup link
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: group_id
            in: path
            required: true
            description: ID of the provisioning group (currently only `default` is allowed).
            schema:
              $ref: >-
                #/components/schemas/PostHrisProvisioningGroupsGroupIdSetupLinksParameterGroupId
            examples:
              example1:
                value: n39n320clr8c5amf8v83nbch
        requestBody:
          description: POST /hris/provisioning-groups/:group_id/setup-links request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostHrisProvisioningGroupsGroupIdSetupLinksRequestBody
              examples:
                example1:
                  value:
                    language: en
    /hris/employees:
      get:
        operationId: GetHrisEmployees
        responses:
          '200':
            description: GET /hris/employees Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisEmployeesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            employee_number: '3243422'
                            first_name: John
                            last_name: Doe
                            nationality: French
                            display_full_name: John Doe
                            job_title: Integrations Team Lead
                            work_email: john.doe@acme.com
                            personal_email: john@doe.me
                            mobile_phone_number: 801-555-4687
                            ssn: 555-32-6395
                            tax_id: 12 345 678 901
                            gender: MALE
                            ethnicity: BLACK_AFRICAN_AMERICAN
                            marital_status: MARRIED
                            employment_status: INACTIVE
                            employment_type: FULL_TIME
                            weekly_hours: 40
                            avatar: >-
                              https://resources.bamboohr.com/images/photo_person_150x150.png
                            work_location_id: 7E2gyuv6TmvtByzBxW9Sxt53
                            legal_entity_id: xB32bied320csBSsl3XWdlw33
                            manager_id: 9pf2pxBB8VX8EQMC9aipW2Bo
                            home_address:
                              city: Berlin
                              country: DE
                              raw: |-
                                Sonnenallee 63
                                12045 Berlin
                                Germany
                              state: Berlin
                              street_1: Sonnenallee 63
                              street_2: null
                              zip_code: '12045'
                            bank_accounts:
                              - account_number: '1234567890'
                                bank_name: Commerzbank
                                bic: COBADEFFXXX
                                domestic_bank_routing:
                                  number: '34567890'
                                  type: DE_BANKLEITZAHL
                                holder_name: John Doe
                                iban: DE12345678901234567890
                            date_of_birth: '1986-01-01T00:00:00.000Z'
                            start_date: '2020-04-07T00:00:00.000Z'
                            termination_date: '2022-05-20T00:00:00.000Z'
                            remote_created_at: '2020-04-07T12:32:01.000Z'
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                            custom_fields: {}
                            remote_data: null
                            employments:
                              - id: 12vpXR7BeqYNWDShXRgsonnm
                                remote_id: '859'
                                employee_id: 8Xk99QfVKYA6vfEafEUBdEPJ
                                job_title: Social Media Marketer
                                pay_rate: 85000
                                pay_period: YEAR
                                pay_frequency: SEMIMONTHLY
                                employment_type: FULL_TIME
                                pay_currency: EUR
                                effective_date: '2021-01-30T00:00:00.000Z'
                                changed_at: '2022-08-07T14:01:29.196Z'
                                remote_deleted_at: null
                                remote_data: null
                                custom_fields: {}
                            time_off_balances:
                              - id: FuyRuk5NqP3qTcThED3ymTuE
                                remote_id: '124123'
                                employee_id: 2Up4ZCvq1bFVzmzXG6EWzV3j
                                type_id: BQJaBxRCiqN46G27VTegvkEr
                                balance: 14
                                balance_unit: DAYS
                                changed_at: '2022-08-07T14:01:29.196Z'
                                remote_deleted_at: null
                                used: 3
                                used_unit: DAYS
                                remote_data: null
                            manager:
                              first_name: John
                              last_name: Doe
                              display_full_name: John Doe
                              id: 26vafvWSRmbhNcxJYqjCzuJg
                              work_email: john.doe@acme.com
                              remote_id: '32'
                            groups:
                              - id: 4B9bKBpX5tnwjiG93TAqF7ci
                                remote_id: '49'
                                name: Customer Success
                                type: TEAM
                            legal_entity:
                              id: 4B9bKBpX5tnwjiG93TAqF7ci
                              remote_id: '49'
                              name: ACME Inc.
                              address:
                                city: Berlin
                                country: DE
                                raw: |-
                                  Sonnenallee 63
                                  12045 Berlin, Berlin
                                  Germany
                                state: Berlin
                                street_1: Sonnenallee 63
                                street_2: null
                                zip_code: '12045'
                            teams:
                              - id: 4B9bKBpX5tnwjiG93TAqF7ci
                                remote_id: '49'
                                name: Customer Success
                                type: TEAM
                            work_location:
                              id: 22st2Ji8XpncEYEak8mvQgQF
                              remote_id: '1348'
                              name: Kombo HQ
                              address:
                                city: Berlin
                                country: DE
                                raw: |-
                                  Sonnenallee 63
                                  12045 Berlin, Berlin
                                  Germany
                                state: Berlin
                                street_1: Sonnenallee 63
                                street_2: null
                                zip_code: '12045'
                              type: OFFICE
                              changed_at: '2022-08-07T14:01:29.196Z'
                              remote_deleted_at: '2022-08-07T14:01:29.196Z'
                              remote_data: null
          '400':
            description: GET /hris/employees Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisEmployeesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all employees.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreport/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Reports</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreportsftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Report SFTP</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ukgpro/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />UKG Pro</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rexx/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />rexx systems</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfitcustomer/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit Customer</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfitpartner/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit Partner</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/kenjo/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kenjo</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heavenhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HeavenHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/cezannehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Cezanne HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/entraid/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Entra ID</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/azuread/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Azure AD</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/googleworkspace/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Google Workspace</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/remotecom/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Remote</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/okta/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Okta</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eurecia/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eurécia</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclehcm/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle HCM</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/officient/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Officient</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sesamehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sesame HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/charliehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Charlie</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/abacus/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Abacus</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zohopeople/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zoho People</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/gusto/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Gusto</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breathehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breathe HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/catalystone/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />CatalystOne</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/mirus/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Mirus</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rippling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Rippling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sapling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sapling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/nmbrs/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Nmbrs</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/peoplehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PeopleHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lucca/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lucca</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zelt/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zelt</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/planday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Planday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/haileyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Hailey HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sympa/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sympa</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/iriscascade/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />IRIS Cascade</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SFTP</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Note>Not interested in most fields? You can use our [our Scopes
          feature](https://api.kombo.dev) to customize what data points are
          synced.</Note>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get employees
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterRemoteIds'
          - name: employment_status
            in: query
            required: false
            description: >-
              **(⚠️ Deprecated - Use the `employment_statuses` filter instead.)**
              Filter by the `employment_status` field.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterEmploymentStatus'
          - name: employment_statuses
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of `ACTIVE`, `PENDING`, `INACTIVE`,
              `LEAVE` 

              * `ACTIVE`: the employee is **actively employed** 

              * `PENDING`: the employee is **not actively employed yet** (but they
              signed their contract or are part of an onboarding process) 

              * `INACTIVE`: a full-time employee is no longer employed, or, for a
              contract worker when their contract runs out 

              * `LEAVE`: the employee is still employed but **currently on leave**
              (note that not all HR systems support this status — use our absences
              API for detailed information) 
               

              Leave this blank to get results matching all values.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterEmploymentStatuses'
          - name: group_ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of group IDs. We will only return
              employees that are members of _any_ of the groups.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterGroupIds'
          - name: legal_entity_ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of legal entity IDs. We will only
              return employees that are members of _any_ of the legal entities.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterLegalEntityIds'
          - name: work_location_ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of work location IDs. We will only
              return employees who are at _any_ of the work locations.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterWorkLocationIds'
          - name: work_emails
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of work emails. We will only return
              employees who have _any_ of the work emails.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterWorkEmails'
          - name: personal_emails
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of personal emails. We will only
              return employees who have _any_ of the personal emails.
            schema:
              $ref: '#/components/schemas/GetHrisEmployeesParameterPersonalEmails'
      post:
        operationId: PostHrisEmployees
        responses:
          '200':
            description: POST /hris/employees Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostHrisEmployeesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        id: 26vafvWSRmbhNcxJYqjCzuJg
                        remote_id: '32'
                        employee_number: '3243422'
                        first_name: John
                        last_name: Doe
                        nationality: French
                        display_full_name: John Doe
                        job_title: Integrations Team Lead
                        work_email: john.doe@acme.com
                        personal_email: john@doe.me
                        mobile_phone_number: 801-555-4687
                        ssn: 555-32-6395
                        tax_id: 12 345 678 901
                        gender: MALE
                        ethnicity: BLACK_AFRICAN_AMERICAN
                        marital_status: MARRIED
                        employment_status: INACTIVE
                        employment_type: FULL_TIME
                        weekly_hours: 40
                        avatar: >-
                          https://resources.bamboohr.com/images/photo_person_150x150.png
                        work_location_id: 7E2gyuv6TmvtByzBxW9Sxt53
                        legal_entity_id: xB32bied320csBSsl3XWdlw33
                        manager_id: 9pf2pxBB8VX8EQMC9aipW2Bo
                        home_address:
                          city: Berlin
                          country: DE
                          raw: |-
                            Sonnenallee 63
                            12045 Berlin
                            Germany
                          state: Berlin
                          street_1: Sonnenallee 63
                          street_2: null
                          zip_code: '12045'
                        bank_accounts:
                          - account_number: '1234567890'
                            bank_name: Commerzbank
                            bic: COBADEFFXXX
                            domestic_bank_routing:
                              number: '34567890'
                              type: DE_BANKLEITZAHL
                            holder_name: John Doe
                            iban: DE12345678901234567890
                        date_of_birth: '1986-01-01T00:00:00.000Z'
                        start_date: '2020-04-07T00:00:00.000Z'
                        termination_date: '2022-05-20T00:00:00.000Z'
                        remote_created_at: '2020-04-07T12:32:01.000Z'
                        changed_at: '2022-08-07T14:01:29.196Z'
                        remote_deleted_at: null
                        custom_fields: {}
                        remote_data: null
          '400':
            description: POST /hris/employees Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostHrisEmployeesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Create a new employee.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/remotecom/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Remote</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/gusto/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Gusto</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breathehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breathe HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rippling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Rippling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/nmbrs/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Nmbrs</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Note>
            This endpoint requires the permission **Create and manage employees** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "first_name": "John",
            "last_name": "Doe",
            "work_email": "john.doe@acme.com",
            "gender": "MALE",
            "job_title": "Integrations Team Lead",
            "home_address": {
              "city": "Berlin",
              "country": "DE",
              "state": "Berlin",
              "street_1": "Sonnenallee 63",
              "zip_code": "12045"
            },
            "date_of_birth": "1986-01-01",
            "start_date": "2020-04-07"
          }

          ```
        summary: Create employee
        tags:
          - Unified HRIS API
        requestBody:
          description: POST /hris/employees request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHrisEmployeesRequestBody'
              examples:
                example1:
                  value:
                    first_name: John
                    last_name: Doe
                    work_email: john.doe@acme.com
                    gender: MALE
                    date_of_birth: '1986-01-01'
                    start_date: '2020-04-07'
                    job_title: Integrations Team Lead
                    home_address:
                      city: Berlin
                      country: DE
                      state: Berlin
                      street_1: Sonnenallee 63
                      zip_code: '12045'
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
    /hris/employees/{employee_id}:
      patch:
        operationId: PatchHrisEmployeesEmployeeId
        responses:
          '200':
            description: PATCH /hris/employees/:employee_id Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PatchHrisEmployeesEmployeeIdSuccessfulResponse
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        id: 26vafvWSRmbhNcxJYqjCzuJg
                        remote_id: '32'
                        employee_number: '3243422'
                        first_name: John
                        last_name: Doe
                        nationality: French
                        display_full_name: John Doe
                        job_title: Integrations Team Lead
                        work_email: john.doe@acme.com
                        personal_email: john@doe.me
                        mobile_phone_number: 801-555-4687
                        ssn: 555-32-6395
                        tax_id: 12 345 678 901
                        gender: MALE
                        ethnicity: BLACK_AFRICAN_AMERICAN
                        marital_status: MARRIED
                        employment_status: INACTIVE
                        employment_type: FULL_TIME
                        weekly_hours: 40
                        avatar: >-
                          https://resources.bamboohr.com/images/photo_person_150x150.png
                        work_location_id: 7E2gyuv6TmvtByzBxW9Sxt53
                        legal_entity_id: xB32bied320csBSsl3XWdlw33
                        manager_id: 9pf2pxBB8VX8EQMC9aipW2Bo
                        home_address:
                          city: Berlin
                          country: DE
                          raw: |-
                            Sonnenallee 63
                            12045 Berlin
                            Germany
                          state: Berlin
                          street_1: Sonnenallee 63
                          street_2: null
                          zip_code: '12045'
                        bank_accounts:
                          - account_number: '1234567890'
                            bank_name: Commerzbank
                            bic: COBADEFFXXX
                            domestic_bank_routing:
                              number: '34567890'
                              type: DE_BANKLEITZAHL
                            holder_name: John Doe
                            iban: DE12345678901234567890
                        date_of_birth: '1986-01-01T00:00:00.000Z'
                        start_date: '2020-04-07T00:00:00.000Z'
                        termination_date: '2022-05-20T00:00:00.000Z'
                        remote_created_at: '2020-04-07T12:32:01.000Z'
                        changed_at: '2022-08-07T14:01:29.196Z'
                        remote_deleted_at: null
                        custom_fields: {}
                        remote_data: null
          '400':
            description: PATCH /hris/employees/:employee_id Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PatchHrisEmployeesEmployeeIdErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Update an employee.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datev/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV LODAS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datevlug/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV Lohn & Gehalt</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Note>
            This endpoint requires the permission **Create and manage employees** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "employee_id": "BkgfzSr5muN9cUTMD4wDQFn4",
            "first_name": "John",
            "last_name": "Doe",
            "work_email": "john.doe@acme.com",
            "ssn": "555-32-6395",
            "tax_id": "12 345 678 901",
            "gender": "MALE",
            "marital_status": "MARRIED",
            "date_of_birth": "1986-01-01",
            "start_date": "2020-04-07",
            "termination_date": "2022-05-20",
            "job_title": "Integrations Team Lead",
            "nationality": "DE",
            "home_address": {
              "city": "Berlin",
              "country": "DE",
              "state": "Berlin",
              "street_1": "Sonnenallee 63",
              "zip_code": "12045"
            }
          }

          ```
        summary: Update employee
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: employee_id
            in: path
            required: true
            description: >-
              ID of the employee that should be updated. You can use their Kombo
              `id` or their ID in the remote system by prefixing it with `remote:`
              (e.g., `remote:12312`)
            schema:
              $ref: >-
                #/components/schemas/PatchHrisEmployeesEmployeeIdParameterEmployeeId
            examples:
              example1:
                value: BkgfzSr5muN9cUTMD4wDQFn4
        requestBody:
          description: PATCH /hris/employees/:employee_id request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchHrisEmployeesEmployeeIdRequestBody'
              examples:
                example1:
                  value:
                    first_name: John
                    last_name: Doe
                    work_email: john.doe@acme.com
                    ssn: 555-32-6395
                    tax_id: 12 345 678 901
                    gender: MALE
                    marital_status: MARRIED
                    date_of_birth: '1986-01-01'
                    start_date: '2020-04-07'
                    termination_date: '2022-05-20'
                    job_title: Integrations Team Lead
                    nationality: DE
                    home_address:
                      city: Berlin
                      country: DE
                      state: Berlin
                      street_1: Sonnenallee 63
                      zip_code: '12045'
    /hris/employees/{employee_id}/attachments:
      post:
        operationId: PostHrisEmployeesEmployeeIdAttachments
        responses:
          '200':
            description: POST /hris/employees/:employee_id/attachments Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostHrisEmployeesEmployeeIdAttachmentsSuccessfulResponse
          '400':
            description: POST /hris/employees/:employee_id/attachments Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostHrisEmployeesEmployeeIdAttachmentsErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: >-
          Currently in closed beta.

          <Warning>**This endpoint is currently in closed beta!** We're testing it
          with selected customers before its public release. If you're interested
          in learning more or getting early access, please reach out.</Warning>
        summary: Add attachment to employees 🦄
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: employee_id
            in: path
            required: true
            description: POST /hris/employees/:employee_id/attachments parameter
            schema:
              $ref: >-
                #/components/schemas/PostHrisEmployeesEmployeeIdAttachmentsParameterEmployeeId
        requestBody:
          description: POST /hris/employees/:employee_id/attachments request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostHrisEmployeesEmployeeIdAttachmentsRequestBody
        tags:
          - Unified HRIS API
    /hris/teams:
      get:
        operationId: GetHrisTeams
        responses:
          '200':
            description: GET /hris/teams Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisTeamsSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 4B9bKBpX5tnwjiG93TAqF7ci
                            remote_id: '49'
                            name: Customer Success
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                            type: TEAM
                            parent_id: KGaJ5XaVPob8mYVfD49W4DGB
                            remote_data: null
          '400':
            description: GET /hris/teams Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisTeamsErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Get the teams.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreport/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Reports</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreportsftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Report SFTP</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ukgpro/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />UKG Pro</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rexx/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />rexx systems</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/kenjo/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kenjo</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heavenhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HeavenHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/cezannehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Cezanne HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/entraid/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Entra ID</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/azuread/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Azure AD</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/googleworkspace/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Google Workspace</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/okta/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Okta</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eurecia/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eurécia</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclehcm/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle HCM</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/officient/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Officient</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sesamehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sesame HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/charliehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Charlie</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/abacus/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Abacus</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zohopeople/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zoho People</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/gusto/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Gusto</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breathehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breathe HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/mirus/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Mirus</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rippling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Rippling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sapling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sapling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/nmbrs/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Nmbrs</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/peoplehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PeopleHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lucca/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lucca</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zelt/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zelt</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/planday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Planday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/haileyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Hailey HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/iriscascade/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />IRIS Cascade</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SFTP</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Warning>
                **This endpoint is deprecated!**

                Please use [the `/groups` endpoint](https://api.kombo.dev) instead. It returns the same data but the naming makes more sense as the model not only includes teams but also departments and cost centers..
              </Warning>

          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get teams (deprecated)
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetHrisTeamsParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetHrisTeamsParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetHrisTeamsParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetHrisTeamsParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetHrisTeamsParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetHrisTeamsParameterRemoteIds'
    /hris/groups:
      get:
        operationId: GetHrisGroups
        responses:
          '200':
            description: GET /hris/groups Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisGroupsSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 4B9bKBpX5tnwjiG93TAqF7ci
                            remote_id: '49'
                            name: Customer Success
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                            type: TEAM
                            parent_id: KGaJ5XaVPob8mYVfD49W4DGB
                            remote_data: null
          '400':
            description: GET /hris/groups Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisGroupsErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all "groups" (teams, departments, and cost centers).


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreport/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Reports</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreportsftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Report SFTP</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ukgpro/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />UKG Pro</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rexx/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />rexx systems</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/kenjo/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kenjo</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heavenhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HeavenHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/cezannehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Cezanne HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/entraid/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Entra ID</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/azuread/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Azure AD</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/googleworkspace/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Google Workspace</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/okta/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Okta</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eurecia/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eurécia</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclehcm/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle HCM</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/officient/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Officient</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sesamehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sesame HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/charliehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Charlie</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/abacus/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Abacus</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zohopeople/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zoho People</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/gusto/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Gusto</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breathehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breathe HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/mirus/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Mirus</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rippling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Rippling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sapling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sapling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/nmbrs/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Nmbrs</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/peoplehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PeopleHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lucca/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lucca</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zelt/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zelt</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/planday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Planday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/haileyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Hailey HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/iriscascade/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />IRIS Cascade</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SFTP</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get groups
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetHrisGroupsParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetHrisGroupsParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetHrisGroupsParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetHrisGroupsParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetHrisGroupsParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetHrisGroupsParameterRemoteIds'
    /hris/employments:
      get:
        operationId: GetHrisEmployments
        responses:
          '200':
            description: GET /hris/employments Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisEmploymentsSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 12vpXR7BeqYNWDShXRgsonnm
                            remote_id: '859'
                            employee_id: 8Xk99QfVKYA6vfEafEUBdEPJ
                            job_title: Social Media Marketer
                            pay_rate: 85000
                            pay_period: YEAR
                            pay_frequency: SEMIMONTHLY
                            employment_type: FULL_TIME
                            pay_currency: EUR
                            effective_date: '2021-01-30T00:00:00.000Z'
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                            remote_data: null
                            custom_fields: {}
          '400':
            description: GET /hris/employments Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisEmploymentsErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all employments.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreport/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Reports</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreportsftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Report SFTP</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ukgpro/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />UKG Pro</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rexx/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />rexx systems</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfitcustomer/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit Customer</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfitpartner/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit Partner</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/kenjo/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kenjo</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heavenhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HeavenHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/cezannehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Cezanne HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/remotecom/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Remote</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eurecia/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eurécia</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclehcm/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle HCM</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/officient/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Officient</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/charliehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Charlie</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/gusto/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Gusto</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breathehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breathe HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/catalystone/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />CatalystOne</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sapling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sapling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/nmbrs/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Nmbrs</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/peoplehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PeopleHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lucca/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lucca</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zelt/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zelt</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/haileyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Hailey HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sympa/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sympa</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/iriscascade/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />IRIS Cascade</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SFTP</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get employments
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetHrisEmploymentsParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetHrisEmploymentsParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetHrisEmploymentsParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetHrisEmploymentsParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetHrisEmploymentsParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetHrisEmploymentsParameterRemoteIds'
    /hris/locations:
      get:
        operationId: GetHrisLocations
        responses:
          '200':
            description: GET /hris/locations Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisLocationsSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 22st2Ji8XpncEYEak8mvQgQF
                            remote_id: '1348'
                            name: Kombo HQ
                            address:
                              city: Berlin
                              country: DE
                              raw: |-
                                Sonnenallee 63
                                12045 Berlin, Berlin
                                Germany
                              state: Berlin
                              street_1: Sonnenallee 63
                              street_2: null
                              zip_code: '12045'
                            type: OFFICE
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: '2022-08-07T14:01:29.196Z'
                            remote_data: null
          '400':
            description: GET /hris/locations Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisLocationsErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all work locations.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreport/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Reports</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreportsftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Report SFTP</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ukgpro/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />UKG Pro</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/kenjo/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kenjo</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heavenhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HeavenHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/cezannehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Cezanne HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/entraid/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Entra ID</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/azuread/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Azure AD</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/googleworkspace/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Google Workspace</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/remotecom/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Remote</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclehcm/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle HCM</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sesamehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sesame HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/charliehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Charlie</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/gusto/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Gusto</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breathehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breathe HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/catalystone/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />CatalystOne</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rippling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Rippling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sapling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sapling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/nmbrs/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Nmbrs</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/peoplehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PeopleHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lucca/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lucca</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zelt/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zelt</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/haileyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Hailey HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sympa/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sympa</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SFTP</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get work locations
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetHrisLocationsParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetHrisLocationsParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetHrisLocationsParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetHrisLocationsParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetHrisLocationsParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetHrisLocationsParameterRemoteIds'
    /hris/absence-types:
      get:
        operationId: GetHrisAbsenceTypes
        responses:
          '200':
            description: GET /hris/absence-types Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisAbsenceTypesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: xzZoKssDaMZAd62kxayzzQvD
                            name: Vacation
                            unit: DAYS
                            half_days_supported: true
                            exact_times_supported: false
                            remote_id: '91'
                            remote_data: null
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
          '400':
            description: GET /hris/absence-types Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisAbsenceTypesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all absence types.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rexx/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />rexx systems</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heavenhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HeavenHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/cezannehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Cezanne HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eurecia/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eurécia</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/officient/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Officient</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sesamehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sesame HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/charliehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Charlie</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zohopeople/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zoho People</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rippling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Rippling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/peoplehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PeopleHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lucca/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lucca</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datev/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV LODAS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datevlug/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV Lohn & Gehalt</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SFTP</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get absence types
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetHrisAbsenceTypesParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetHrisAbsenceTypesParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetHrisAbsenceTypesParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetHrisAbsenceTypesParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetHrisAbsenceTypesParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetHrisAbsenceTypesParameterRemoteIds'
    /hris/time-off-balances:
      get:
        operationId: GetHrisTimeOffBalances
        responses:
          '200':
            description: GET /hris/time-off-balances Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisTimeOffBalancesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: FuyRuk5NqP3qTcThED3ymTuE
                            remote_id: '124123'
                            employee_id: 2Up4ZCvq1bFVzmzXG6EWzV3j
                            type_id: BQJaBxRCiqN46G27VTegvkEr
                            balance: 14
                            balance_unit: DAYS
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                            used: 3
                            used_unit: DAYS
                            remote_data: null
                            type:
                              id: xzZoKssDaMZAd62kxayzzQvD
                              name: Vacation
                              unit: DAYS
                              half_days_supported: true
                              exact_times_supported: false
                              remote_id: '91'
                              remote_data: null
                              changed_at: '2022-08-07T14:01:29.196Z'
                              remote_deleted_at: null
          '400':
            description: GET /hris/time-off-balances Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisTimeOffBalancesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all time off balances.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eurecia/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eurécia</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/charliehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Charlie</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SFTP</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get time off balances
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetHrisTimeOffBalancesParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetHrisTimeOffBalancesParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetHrisTimeOffBalancesParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetHrisTimeOffBalancesParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetHrisTimeOffBalancesParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetHrisTimeOffBalancesParameterRemoteIds'
          - name: employee_id
            in: query
            required: false
            description: Filter by a specific employee using their ID.
            schema:
              $ref: '#/components/schemas/GetHrisTimeOffBalancesParameterEmployeeId'
    /hris/absences:
      get:
        operationId: GetHrisAbsences
        responses:
          '200':
            description: GET /hris/absences Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisAbsencesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 22st2Ji8XpncEYEak8mvQgQF
                            remote_id: '1348'
                            employee_id: JDdUy9kiH5APaGizFrgNmQjM
                            approver_id: AgXEispYPP1BbToHpqnqcpxy
                            start_date: '2022-08-04'
                            end_date: '2022-08-05'
                            start_half_day: true
                            end_half_day: false
                            start_time: '13:15:00'
                            end_time: '17:00:00'
                            amount: 2
                            unit: DAYS
                            status: APPROVED
                            employee_note: Visiting my family.
                            type_id: xzZoKssDaMZAd62kxayzzQvD
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: '2022-08-07T14:01:29.196Z'
                            remote_data: null
                            type:
                              id: xzZoKssDaMZAd62kxayzzQvD
                              name: Vacation
                              unit: DAYS
                              half_days_supported: true
                              exact_times_supported: false
                              remote_id: '91'
                              remote_data: null
                              changed_at: '2022-08-07T14:01:29.196Z'
                              remote_deleted_at: null
          '400':
            description: GET /hris/absences Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisAbsencesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all absences.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rexx/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />rexx systems</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heavenhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HeavenHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/cezannehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Cezanne HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eurecia/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eurécia</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/officient/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Officient</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sesamehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sesame HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/charliehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Charlie</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/zohopeople/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Zoho People</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rippling/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Rippling</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/peoplehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PeopleHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lucca/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lucca</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/haileyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Hailey HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SFTP</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get absences
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterRemoteIds'
          - name: date_from
            in: query
            required: false
            description: >-
              Filter for all the absences that either start _or_ haven't ended yet
              on/after this day. If you imagine a calendar displaying absences,
              this defines the left-most visible day. This is a plain date (i.e.,
              `yyyy-MM-dd`), all time information is discarded.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterDateFrom'
          - name: date_until
            in: query
            required: false
            description: >-
              Filter for absences that start on or before this day (but might
              continue after). If you imagine a calendar displaying absences, this
              defines the right-most visible day. This is a plain date (i.e.,
              `yyyy-MM-dd`), all time information is discarded.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterDateUntil'
          - name: type_ids
            in: query
            required: false
            description: Filter by a comma-separated list of absence type IDs.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterTypeIds'
          - name: employee_id
            in: query
            required: false
            description: Filter by a specific employee using their ID.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterEmployeeId'
          - name: time_from
            in: query
            required: false
            description: >-
              **(⚠️ Deprecated - Use the `date_from` filter instead.)** Filter for
              absences that either start after or start before and end after a
              certain time.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterTimeFrom'
          - name: time_until
            in: query
            required: false
            description: >-
              **(⚠️ Deprecated - Use the `date_until` filter instead.)** Filter
              for absences that start before a certain time.
            schema:
              $ref: '#/components/schemas/GetHrisAbsencesParameterTimeUntil'
      post:
        operationId: PostHrisAbsences
        responses:
          '200':
            description: POST /hris/absences Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostHrisAbsencesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        id: 22st2Ji8XpncEYEak8mvQgQF
                        remote_id: '1348'
                        employee_id: JDdUy9kiH5APaGizFrgNmQjM
                        approver_id: AgXEispYPP1BbToHpqnqcpxy
                        start_date: '2022-08-04'
                        end_date: '2022-08-05'
                        start_half_day: true
                        end_half_day: false
                        start_time: '13:15:00'
                        end_time: '17:00:00'
                        amount: 2
                        unit: DAYS
                        status: APPROVED
                        employee_note: Visiting my family.
                        type_id: xzZoKssDaMZAd62kxayzzQvD
                        changed_at: '2022-08-07T14:01:29.196Z'
                        remote_deleted_at: '2022-08-07T14:01:29.196Z'
                        remote_data: null
          '400':
            description: POST /hris/absences Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostHrisAbsencesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Create a new absence.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sesamehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sesame HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datev/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV LODAS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datevlug/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV Lohn & Gehalt</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Check [this page](https://api.kombo.dev) for a detailed guide.


          <Note>
            This endpoint requires the permission **Manage absences** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "employee_id": "wXJMxwDvPAjrJ4CyqdV9",
            "absence_type_id": "3YKtQ7qedsrcCady1jSyAkY1",
            "start_date": "2019-09-17",
            "end_date": "2019-09-21",
            "start_half_day": false,
            "end_half_day": false,
            "employee_note": "Visiting the aliens",
            "start_time": "08:30:00",
            "end_time": "16:00:00"
          }

          ```
        summary: Create absence
        tags:
          - Unified HRIS API
        requestBody:
          description: POST /hris/absences request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHrisAbsencesRequestBody'
              examples:
                example1:
                  value:
                    employee_id: wXJMxwDvPAjrJ4CyqdV9
                    absence_type_id: 3YKtQ7qedsrcCady1jSyAkY1
                    start_date: '2019-09-17'
                    end_date: '2019-09-21'
                    start_time: '08:30:00'
                    end_time: '16:00:00'
                    start_half_day: false
                    end_half_day: false
                    employee_note: Visiting the aliens
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
    /hris/absences/{absence_id}:
      delete:
        operationId: DeleteHrisAbsencesAbsenceId
        responses:
          '200':
            description: DELETE /hris/absences/:absence_id Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/DeleteHrisAbsencesAbsenceIdSuccessfulResponse
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        id: 22st2Ji8XpncEYEak8mvQgQF
                        remote_id: '1348'
                        employee_id: JDdUy9kiH5APaGizFrgNmQjM
                        approver_id: AgXEispYPP1BbToHpqnqcpxy
                        start_date: '2022-08-04'
                        end_date: '2022-08-05'
                        start_half_day: true
                        end_half_day: false
                        start_time: '13:15:00'
                        end_time: '17:00:00'
                        amount: 2
                        unit: DAYS
                        status: APPROVED
                        employee_note: Visiting my family.
                        type_id: xzZoKssDaMZAd62kxayzzQvD
                        changed_at: '2022-08-07T14:01:29.196Z'
                        remote_deleted_at: '2022-08-07T14:01:29.196Z'
                        remote_data: null
          '400':
            description: DELETE /hris/absences/:absence_id Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeleteHrisAbsencesAbsenceIdErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Delete this absence.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hibob/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HiBob</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sesamehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sesame HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Note>
            This endpoint requires the permission **Manage absences** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "absence_id": "wXJMxwDvPAjrJ4CyqdV9"
          }

          ```
        summary: Delete absence
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: absence_id
            in: path
            required: true
            description: The ID of the absence
            schema:
              $ref: '#/components/schemas/DeleteHrisAbsencesAbsenceIdParameterAbsenceId'
            examples:
              example1:
                value: wXJMxwDvPAjrJ4CyqdV9
        requestBody:
          description: DELETE /hris/absences/:absence_id request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHrisAbsencesAbsenceIdRequestBody'
              examples:
                example1:
                  value: {}
    /hris/legal-entities:
      get:
        operationId: GetHrisLegalEntities
        responses:
          '200':
            description: GET /hris/legal-entities Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisLegalEntitiesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 4B9bKBpX5tnwjiG93TAqF7ci
                            remote_id: '49'
                            name: ACME Inc.
                            address:
                              city: Berlin
                              country: DE
                              raw: |-
                                Sonnenallee 63
                                12045 Berlin, Berlin
                                Germany
                              state: Berlin
                              street_1: Sonnenallee 63
                              street_2: null
                              zip_code: '12045'
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                            remote_data: null
          '400':
            description: GET /hris/legal-entities Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetHrisLegalEntitiesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all legal entites.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workdaycustomreport/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday Custom Reports</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Factorial</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ukgpro/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />UKG Pro</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfitcustomer/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit Customer</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfitpartner/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit Partner</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/payfit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PayFit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/kenjo/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kenjo</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heavenhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HeavenHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/cezannehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Cezanne HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/entraid/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Entra ID</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/azuread/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Azure AD</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/deel/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Deel</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/okta/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Okta</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/humaans/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Humaans</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/charliehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Charlie</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/abacus/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Abacus</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/gusto/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Gusto</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breathehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breathe HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/catalystone/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />CatalystOne</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/alexishr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AlexisHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/nmbrs/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Nmbrs</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/peoplehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />PeopleHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lucca/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lucca</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sftp/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SFTP</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get legal entities
        tags:
          - Unified HRIS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: bamboohr:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetHrisLegalEntitiesParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetHrisLegalEntitiesParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetHrisLegalEntitiesParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetHrisLegalEntitiesParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetHrisLegalEntitiesParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetHrisLegalEntitiesParameterRemoteIds'
    /ats/applications:
      get:
        operationId: GetAtsApplications
        responses:
          '200':
            description: GET /ats/applications Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsApplicationsSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            outcome: HIRED
                            rejection_reason_name: Any text string
                            current_stage_id: 5J7L4b48wBfffYwek9Az9pkM
                            job_id: H5daSm8e85Dmvmne3wLeCPhX
                            candidate_id: H77fDF8uvEzGNPRubiz5DvQ7
                            custom_fields: {}
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                            remote_created_at: '2022-08-07T14:01:29.196Z'
                            remote_updated_at: '2022-08-07T14:01:29.196Z'
                            remote_data: null
                            candidate:
                              id: 26vafvWSRmbhNcxJYqjCzuJg
                              remote_id: '32'
                              first_name: John
                              last_name: Doe
                              email_addresses:
                                - email_address: john.doe@example.com
                                  type: PRIVATE
                              tags:
                                - id: 26vafvWSRmbhNcxJYqjCzuJg
                                  remote_id: '32'
                                  name: High Potential
                            current_stage:
                              id: 26vafvWSRmbhNcxJYqjCzuJg
                              remote_id: '32'
                              name: Initial Screening
                            job:
                              id: 26vafvWSRmbhNcxJYqjCzuJg
                              remote_id: '32'
                              name: Backend Engineer
                            interviews:
                              - id: 26vafvWSRmbhNcxJYqjCzuJg
                                remote_id: '32'
                                title: Interview with John Doe
                                starting_at: '2023-06-26T14:30:00.000Z'
                                ending_at: '2023-06-26T15:30:00.000Z'
                                location:
                                  city: Berlin
                                  country: DE
                                  raw: Berlin, Germany
                                  state: Berlin
                                  street_1: Lohmühlenstraße 65
                                  street_2: null
                                  zip_code: '12435'
          '400':
            description: GET /ats/applications Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsApplicationsErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all applications.


          Visit our in depth guide to learn more about:

          - 💡 [Being aware of which applications are
          tracked](/ats/features/implementation-guide/tracking-created-applications#be-aware-of-which-applications-are-tracked) 

          - 🚦 [Hiring
          signals](/ats/features/implementation-guide/tracking-created-applications#hiring-signals) 

          - 📈 [Application stage
          changes](/ats/features/implementation-guide/tracking-created-applications#application-stage-changes) 

          - ❓ [ATS-specific
          limitations](/ats/features/implementation-guide/tracking-created-applications#ats-specific-limitations) 

          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclerecruiting/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle Recruiting Cloud</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/icims/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />iCIMS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhorn/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhornlogin/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn Login</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/fountain/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Fountain</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/softgarden/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Softgarden</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/pinpoint/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Pinpoint</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/dvinci/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />d.vinci</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/join/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JOIN</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobvite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobvite</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/traffit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TRAFFIT</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/erecruiter/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />eRecruiter</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/umantis/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Haufe Umantis</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/taleez/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Taleez</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/otys/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />OTYS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eploy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eploy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />RECRU</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jazzhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JazzHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BITE</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/flatchr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Flatchr</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/applicantstack/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />ApplicantStack</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/talentsoftcustomer/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TalentSoft Customer</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get applications
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationsParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationsParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationsParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationsParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationsParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationsParameterRemoteIds'
          - name: outcome
            in: query
            required: false
            description: >-
              **(⚠️ Deprecated - Use the `outcomes` filter instead.)** Filter
              applications by outcome. This allows you to get applications that
              are for example `PENDING`, `HIRED`, or `DECLINED`.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationsParameterOutcome'
          - name: outcomes
            in: query
            required: false
            description: |-
              Filter by a comma-separated list of `PENDING`, `HIRED`, `DECLINED` 
              * `PENDING`: The application is still being processed. 
              * `HIRED`: The candidate was hired. 
              * `DECLINED`: The candidate was declined. 
               

              Leave this blank to get results matching all values.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationsParameterOutcomes'
          - name: remote_created_after
            in: query
            required: false
            description: >-
              Filter applications by the day they were created in the remote
              system. This allows you to get applications that were created on or
              after a certain day.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationsParameterRemoteCreatedAfter'
    /ats/applications/{application_id}/stage:
      put:
        operationId: PutAtsApplicationsApplicationIdStage
        responses:
          '200':
            description: PUT /ats/applications/:application_id/stage Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PutAtsApplicationsApplicationIdStageSuccessfulResponse
          '400':
            description: PUT /ats/applications/:application_id/stage Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PutAtsApplicationsApplicationIdStageErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Moves an application to a specified stage.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclerecruiting/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle Recruiting Cloud</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/icims/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />iCIMS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/traffit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TRAFFIT</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eploy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eploy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "stage_id": "3PJ8PZhZZa1eEdd2DtPNtVup"
          }

          ```
        summary: Move application to stage
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: application_id
            in: path
            required: true
            description: PUT /ats/applications/:application_id/stage parameter
            schema:
              $ref: >-
                #/components/schemas/PutAtsApplicationsApplicationIdStageParameterApplicationId
            examples:
              example1:
                value: GRKdd9dibYKKCrmGRSMJf3wu
        requestBody:
          description: PUT /ats/applications/:application_id/stage request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PutAtsApplicationsApplicationIdStageRequestBody
              examples:
                example1:
                  value:
                    stage_id: 3PJ8PZhZZa1eEdd2DtPNtVup
    /ats/applications/{application_id}/result-links:
      post:
        operationId: PostAtsApplicationsApplicationIdResultLinks
        responses:
          '200':
            description: >-
              POST /ats/applications/:application_id/result-links Successful
              response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsApplicationsApplicationIdResultLinksSuccessfulResponse
          '400':
            description: POST /ats/applications/:application_id/result-links Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsApplicationsApplicationIdResultLinksErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Add a result link to an application.

          This can, for example, be used to link a candidate back to a test
          result/assessment in your application. As not all ATS tools have a
          "result link" feature, we sometimes repurpose other fields to expose it.


          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "application_id": "8Xi6iZrwusZqJmDGXs49GBmJ",
            "label": "Assessment Result",
            "url": "https://example.com/test-results/5BtP1WC1UboS7CF3yxjKcvjG",
            "details": {
              "custom_field_name_prefix": "Acme:",
              "attributes": [
                {
                  "key": "Score",
                  "value": "100%"
                },
                {
                  "key": "Time",
                  "value": "2:30h"
                }
              ]
            }
          }

          ```
        summary: Add result link to application
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: application_id
            in: path
            required: true
            description: Kombo ID of the application you want to create the link for.
            schema:
              $ref: >-
                #/components/schemas/PostAtsApplicationsApplicationIdResultLinksParameterApplicationId
            examples:
              example1:
                value: 8Xi6iZrwusZqJmDGXs49GBmJ
        requestBody:
          description: POST /ats/applications/:application_id/result-links request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostAtsApplicationsApplicationIdResultLinksRequestBody
              examples:
                example1:
                  value:
                    label: Assessment Result
                    url: https://example.com/test-results/5BtP1WC1UboS7CF3yxjKcvjG
                    details:
                      custom_field_name_prefix: 'Acme:'
                      attributes:
                        - key: Score
                          value: 100%
                        - key: Time
                          value: 2:30h
    /ats/applications/{application_id}/notes:
      post:
        operationId: PostAtsApplicationsApplicationIdNotes
        responses:
          '200':
            description: POST /ats/applications/:application_id/notes Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsApplicationsApplicationIdNotesSuccessfulResponse
          '400':
            description: POST /ats/applications/:application_id/notes Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsApplicationsApplicationIdNotesErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Add a note to an application.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhorn/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/pinpoint/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Pinpoint</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/dvinci/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />d.vinci</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eploy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eploy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Add extra information to an application. This can be any extra text
          information you want to add to an application.


          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "content": "A new message from the candidate is available in YourChat!",
            "content_type": "PLAIN_TEXT"
          }

          ```
        summary: Add note to application
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: application_id
            in: path
            required: true
            description: Kombo ID of the application you want to create the note for.
            schema:
              $ref: >-
                #/components/schemas/PostAtsApplicationsApplicationIdNotesParameterApplicationId
            examples:
              example1:
                value: 8Xi6iZrwusZqJmDGXs49GBmJ
        requestBody:
          description: POST /ats/applications/:application_id/notes request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostAtsApplicationsApplicationIdNotesRequestBody
              examples:
                example1:
                  value:
                    content: A new message from the candidate is available in YourChat!
                    content_type: PLAIN_TEXT
    /ats/applications/{application_id}/attachments:
      post:
        operationId: PostAtsApplicationsApplicationIdAttachments
        responses:
          '200':
            description: >-
              POST /ats/applications/:application_id/attachments Successful
              response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsApplicationsApplicationIdAttachmentsSuccessfulResponse
          '400':
            description: POST /ats/applications/:application_id/attachments Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsApplicationsApplicationIdAttachmentsErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: |-
          Uploads an attachment file for the specified applicant.

          <Warning>
            If adding an attachment to an application is not supported by the integration, the attachment will be added to the candidate instead. 
          </Warning>


          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>

          ### Example Request Body

          ```json
          {
            "application_id": "GRKdd9dibYKKCrmGRSMJf3wu",
            "attachment": {
              "name": "Frank Doe CV.txt",
              "data": "SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=",
              "type": "CV",
              "content_type": "text/plain"
            }
          }
          ```
        summary: Add attachment to application
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: application_id
            in: path
            required: true
            description: POST /ats/applications/:application_id/attachments parameter
            schema:
              $ref: >-
                #/components/schemas/PostAtsApplicationsApplicationIdAttachmentsParameterApplicationId
            examples:
              example1:
                value: GRKdd9dibYKKCrmGRSMJf3wu
        requestBody:
          description: POST /ats/applications/:application_id/attachments request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostAtsApplicationsApplicationIdAttachmentsRequestBody
              examples:
                example1:
                  value:
                    attachment:
                      name: Frank Doe CV.txt
                      data: >-
                        SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=
                      type: CV
                      content_type: text/plain
    /ats/candidates:
      get:
        operationId: GetAtsCandidates
        responses:
          '200':
            description: GET /ats/candidates Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsCandidatesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            first_name: John
                            last_name: Doe
                            company: Acme, Inc.
                            title: Head of Marketing
                            confidential: false
                            source: Employee Referral
                            phone_numbers:
                              - phone_number: +1-541-754-3010
                                type: HOME
                            email_addresses:
                              - email_address: john.doe@example.com
                                type: PRIVATE
                            social_media:
                              - link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
                                type: YOUTUBE
                                username: null
                            location:
                              city: Berlin
                              country: DE
                              raw: Berlin, Germany
                              state: Berlin
                              street_1: Lohmühlenstraße 65
                              street_2: null
                              zip_code: '12435'
                            custom_fields: {}
                            remote_created_at: '2022-04-02T00:00:00.000Z'
                            remote_updated_at: '2022-04-04T00:00:00.000Z'
                            remote_data: null
                            changed_at: '2022-04-04T00:00:00.000Z'
                            remote_deleted_at: null
                            applications:
                              - id: 26vafvWSRmbhNcxJYqjCzuJg
                                remote_id: '32'
                                outcome: HIRED
                                rejection_reason_name: Any text string
                                current_stage:
                                  id: 26vafvWSRmbhNcxJYqjCzuJg
                                  name: Initial Screening
                                  remote_id: '32'
                                job:
                                  id: 26vafvWSRmbhNcxJYqjCzuJg
                                  name: Backend Engineer
                                  remote_id: '32'
                            tags:
                              - id: 26vafvWSRmbhNcxJYqjCzuJg
                                name: High Potential
                                remote_id: '32'
          '400':
            description: GET /ats/candidates Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsCandidatesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all candidates.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclerecruiting/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle Recruiting Cloud</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/icims/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />iCIMS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhorn/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhornlogin/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn Login</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/fountain/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Fountain</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/pinpoint/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Pinpoint</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/join/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JOIN</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobvite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobvite</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/traffit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TRAFFIT</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/umantis/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Haufe Umantis</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/taleez/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Taleez</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/otys/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />OTYS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eploy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eploy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />RECRU</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jazzhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JazzHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BITE</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/flatchr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Flatchr</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/applicantstack/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />ApplicantStack</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/talentsoftcustomer/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TalentSoft Customer</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get candidates
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetAtsCandidatesParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetAtsCandidatesParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetAtsCandidatesParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetAtsCandidatesParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetAtsCandidatesParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetAtsCandidatesParameterRemoteIds'
          - name: email
            in: query
            required: false
            description: >-
              Filter the candidates based on an email address. When set, returns
              only the candidates where the given `email` is in
              `email_addresses`. 
            schema:
              $ref: '#/components/schemas/GetAtsCandidatesParameterEmail'
      post:
        operationId: PostAtsCandidates
        responses:
          '200':
            description: POST /ats/candidates Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostAtsCandidatesSuccessfulResponse'
          '400':
            description: POST /ats/candidates Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostAtsCandidatesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Create a new candidate and application for the specified job.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclerecruiting/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle Recruiting Cloud</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/icims/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />iCIMS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhousejobboard/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse Job Board</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ukgpro/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />UKG Pro</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rexx/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />rexx systems</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhorn/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/fountain/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Fountain</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/softgarden/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Softgarden</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/pinpoint/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Pinpoint</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/dvinci/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />d.vinci</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/join/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JOIN</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobvite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobvite</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/traffit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TRAFFIT</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/erecruiter/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />eRecruiter</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/umantis/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Haufe Umantis</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobylon/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobylon</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/taleez/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Taleez</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/otys/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />OTYS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eploy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eploy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heyrecruit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Heyrecruit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />RECRU</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jazzhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JazzHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BITE</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/mysolution/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Mysolution</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/flatchr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Flatchr</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/talentsoft/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TalentSoft</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/concludis/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />concludis</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Warning>
                **This endpoint is deprecated!**

                We realized that in practice it was always more about creating _applications_ instead of _candidates_, so we created a new, more aptly named one that you should use instead: [Create application](https://api.kombo.dev)

                Using it also has the benefit that we return the newly created applicant at the root level, so you can easily store its ID.
              </Warning>

          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "candidate": {
              "first_name": "Frank",
              "last_name": "Doe",
              "company": "Acme Inc.",
              "title": "Head of Integrations",
              "email_address": "frank.doe@example.com",
              "phone_number": "+1-541-754-3010",
              "gender": "MALE",
              "salary_expectations": {
                "amount": 100000,
                "period": "YEAR"
              },
              "availability_date": "2021-01-01",
              "location": {
                "city": "New York",
                "country": "US"
              },
              "social_links": [
                {
                  "url": "https://www.linkedin.com/in/frank-doe-123456789/"
                },
                {
                  "url": "https://twitter.com/frankdoe"
                }
              ]
            },
            "application": {
              "job_id": "BDpgnpZ148nrGh4mYHNxJBgx",
              "stage_id": "8x3YKRDcuRnwShdh96ShBNn1"
            },
            "screening_question_answers": [
              {
                "question_id": "3phFBNXRweGnDmsU9o2vdPuQ",
                "answer": "Yes"
              },
              {
                "question_id": "EYJjhMQT3LtVKXnTbnRT8s6U",
                "answer": [
                  "GUzE666zfyjeoCJX6A8n7wh6",
                  "5WPHzzKAv8cx97KtHRUV96U8",
                  "7yZfKGzWigXxxRTygqAfHvyE"
                ]
              }
            ],
            "attachments": [
              {
                "name": "Frank Doe CV.txt",
                "data": "SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=",
                "type": "CV",
                "content_type": "text/plain"
              }
            ]
          }

          ```
        summary: Create candidate
        tags:
          - Unified ATS API
        requestBody:
          description: POST /ats/candidates request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAtsCandidatesRequestBody'
              examples:
                example1:
                  value:
                    candidate:
                      first_name: Frank
                      last_name: Doe
                      company: Acme Inc.
                      title: Head of Integrations
                      email_address: frank.doe@example.com
                      phone_number: +1-541-754-3010
                      gender: MALE
                      salary_expectations:
                        amount: 100000
                        period: YEAR
                      availability_date: '2021-01-01'
                      location:
                        city: New York
                        country: US
                      social_links:
                        - url: https://www.linkedin.com/in/frank-doe-123456789/
                        - url: https://twitter.com/frankdoe
                    application:
                      job_id: BDpgnpZ148nrGh4mYHNxJBgx
                      stage_id: 8x3YKRDcuRnwShdh96ShBNn1
                    attachments:
                      - name: Frank Doe CV.txt
                        data: >-
                          SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=
                        type: CV
                        content_type: text/plain
                    screening_question_answers:
                      - question_id: 3phFBNXRweGnDmsU9o2vdPuQ
                        answer: 'Yes'
                      - question_id: EYJjhMQT3LtVKXnTbnRT8s6U
                        answer:
                          - GUzE666zfyjeoCJX6A8n7wh6
                          - 5WPHzzKAv8cx97KtHRUV96U8
                          - 7yZfKGzWigXxxRTygqAfHvyE
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
    /ats/candidates/{candidate_id}:
      patch:
        operationId: PatchAtsCandidatesCandidateId
        responses:
          '200':
            description: PATCH /ats/candidates/:candidate_id Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PatchAtsCandidatesCandidateIdSuccessfulResponse
          '400':
            description: PATCH /ats/candidates/:candidate_id Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PatchAtsCandidatesCandidateIdErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: >-
          Currently in closed beta.

          <Warning>**This endpoint is currently in closed beta!** We're testing it
          with selected customers before its public release. If you're interested
          in learning more or getting early access, please reach out.</Warning>
        summary: Update candidate 🦄
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: candidate_id
            in: path
            required: true
            description: PATCH /ats/candidates/:candidate_id parameter
            schema:
              $ref: >-
                #/components/schemas/PatchAtsCandidatesCandidateIdParameterCandidateId
        requestBody:
          description: PATCH /ats/candidates/:candidate_id request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchAtsCandidatesCandidateIdRequestBody'
        tags:
          - Unified ATS API
    /ats/candidates/{candidate_id}/attachments:
      post:
        operationId: PostAtsCandidatesCandidateIdAttachments
        responses:
          '200':
            description: POST /ats/candidates/:candidate_id/attachments Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsCandidatesCandidateIdAttachmentsSuccessfulResponse
          '400':
            description: POST /ats/candidates/:candidate_id/attachments Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsCandidatesCandidateIdAttachmentsErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Uploads an attachment file for the specified candidate.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclerecruiting/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle Recruiting Cloud</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/icims/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />iCIMS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhorn/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/erecruiter/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />eRecruiter</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/taleez/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Taleez</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/otys/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />OTYS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Warning>
                **This endpoint is deprecated!**

                Please use [Add attachment to application](https://api.kombo.dev) instead.

          This action is deprecated because attachments usually concern
          applications and not candidates. Use endpoint nested under
          `/applications` instead..
              </Warning>

          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "candidate_id": "GRKdd9dibYKKCrmGRSMJf3wu",
            "attachment": {
              "name": "Frank Doe CV.txt",
              "data": "SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=",
              "type": "CV",
              "content_type": "text/plain"
            }
          }

          ```
        summary: Add attachment to candidate
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: candidate_id
            in: path
            required: true
            description: POST /ats/candidates/:candidate_id/attachments parameter
            schema:
              $ref: >-
                #/components/schemas/PostAtsCandidatesCandidateIdAttachmentsParameterCandidateId
            examples:
              example1:
                value: GRKdd9dibYKKCrmGRSMJf3wu
        requestBody:
          description: POST /ats/candidates/:candidate_id/attachments request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostAtsCandidatesCandidateIdAttachmentsRequestBody
              examples:
                example1:
                  value:
                    attachment:
                      name: Frank Doe CV.txt
                      data: >-
                        SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=
                      type: CV
                      content_type: text/plain
    /ats/candidates/{candidate_id}/result-links:
      post:
        operationId: PostAtsCandidatesCandidateIdResultLinks
        responses:
          '200':
            description: POST /ats/candidates/:candidate_id/result-links Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsCandidatesCandidateIdResultLinksSuccessfulResponse
          '400':
            description: POST /ats/candidates/:candidate_id/result-links Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsCandidatesCandidateIdResultLinksErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Add a result link to a candidate.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhorn/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/join/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JOIN</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobvite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobvite</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/erecruiter/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />eRecruiter</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/otys/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />OTYS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jazzhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JazzHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Warning>
                **This endpoint is deprecated!**

                Please use [add result link to application](https://api.kombo.dev) instead.
          This can, for example, be used to link a candidate back to a test
          result/assessment in your application. As not all ATS tools have a
          "result link" feature, we sometimes repurpose other fields to expose it.


          This action is deprecated because result links usually concern
          applications and not candidates. Use endpoint nested under
          `/applications` instead..
              </Warning>

          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "label": "Assessment Result",
            "url": "https://example.com/test-results/5BtP1WC1UboS7CF3yxjKcvjG",
            "details": {
              "custom_field_name_prefix": "Acme:",
              "attributes": [
                {
                  "key": "Score",
                  "value": "100%"
                },
                {
                  "key": "Time",
                  "value": "2:30h"
                }
              ]
            }
          }

          ```
        summary: Add result link to candidate
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: candidate_id
            in: path
            required: true
            description: Kombo ID of the candidate you want to create the link for.
            schema:
              $ref: >-
                #/components/schemas/PostAtsCandidatesCandidateIdResultLinksParameterCandidateId
            examples:
              example1:
                value: 8Xi6iZrwusZqJmDGXs49GBmJ
        requestBody:
          description: POST /ats/candidates/:candidate_id/result-links request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostAtsCandidatesCandidateIdResultLinksRequestBody
              examples:
                example1:
                  value:
                    label: Assessment Result
                    url: https://example.com/test-results/5BtP1WC1UboS7CF3yxjKcvjG
                    details:
                      custom_field_name_prefix: 'Acme:'
                      attributes:
                        - key: Score
                          value: 100%
                        - key: Time
                          value: 2:30h
    /ats/candidates/{candidate_id}/tags:
      post:
        operationId: PostAtsCandidatesCandidateIdTags
        responses:
          '200':
            description: POST /ats/candidates/:candidate_id/tags Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsCandidatesCandidateIdTagsSuccessfulResponse
          '400':
            description: POST /ats/candidates/:candidate_id/tags Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsCandidatesCandidateIdTagsErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Add a tag to a candidate.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/erecruiter/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />eRecruiter</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />RECRU</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Kombo takes care of creating the tag if required, finding out the right
          ID, and appending it to the list of tags.


          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "tag": {
              "name": "Excellent Fit"
            }
          }

          ```
        summary: Add tag to candidate
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: candidate_id
            in: path
            required: true
            description: Kombo ID of the candidate you want to add the tag to.
            schema:
              $ref: >-
                #/components/schemas/PostAtsCandidatesCandidateIdTagsParameterCandidateId
            examples:
              example1:
                value: 8Xi6iZrwusZqJmDGXs49GBmJ
        requestBody:
          description: POST /ats/candidates/:candidate_id/tags request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAtsCandidatesCandidateIdTagsRequestBody'
              examples:
                example1:
                  value:
                    tag:
                      name: Excellent Fit
      delete:
        operationId: DeleteAtsCandidatesCandidateIdTags
        responses:
          '200':
            description: DELETE /ats/candidates/:candidate_id/tags Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/DeleteAtsCandidatesCandidateIdTagsSuccessfulResponse
          '400':
            description: DELETE /ats/candidates/:candidate_id/tags Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/DeleteAtsCandidatesCandidateIdTagsErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Remove a tag from a candidate based on its name.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/erecruiter/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />eRecruiter</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          This will also succeed if the tag does not exist on the candidate.


          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "tag": {
              "name": "Excellent Fit"
            }
          }

          ```
        summary: Remove tag from candidate
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: candidate_id
            in: path
            required: true
            description: Kombo ID of the candidate you want to remove the tag from.
            schema:
              $ref: >-
                #/components/schemas/DeleteAtsCandidatesCandidateIdTagsParameterCandidateId
            examples:
              example1:
                value: 8Xi6iZrwusZqJmDGXs49GBmJ
        requestBody:
          description: DELETE /ats/candidates/:candidate_id/tags request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DeleteAtsCandidatesCandidateIdTagsRequestBody
              examples:
                example1:
                  value:
                    tag:
                      name: Excellent Fit
    /ats/tags:
      get:
        operationId: GetAtsTags
        responses:
          '200':
            description: GET /ats/tags Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsTagsSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            name: High Potential
                            remote_data: null
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
          '400':
            description: GET /ats/tags Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsTagsErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all tags.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/pinpoint/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Pinpoint</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/join/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JOIN</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/traffit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TRAFFIT</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />RECRU</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/flatchr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Flatchr</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get tags
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetAtsTagsParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetAtsTagsParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetAtsTagsParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetAtsTagsParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetAtsTagsParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetAtsTagsParameterRemoteIds'
    /ats/application-stages:
      get:
        operationId: GetAtsApplicationStages
        responses:
          '200':
            description: GET /ats/application-stages Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsApplicationStagesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            name: Initial Screening
                            remote_data: null
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
          '400':
            description: GET /ats/application-stages Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsApplicationStagesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Get all application stages available in the ATS.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclerecruiting/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle Recruiting Cloud</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/icims/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />iCIMS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhorn/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhornlogin/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn Login</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/fountain/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Fountain</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/softgarden/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Softgarden</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/pinpoint/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Pinpoint</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/dvinci/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />d.vinci</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobvite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobvite</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/traffit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TRAFFIT</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/umantis/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Haufe Umantis</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/taleez/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Taleez</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/otys/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />OTYS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eploy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eploy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />RECRU</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jazzhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JazzHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BITE</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/flatchr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Flatchr</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/applicantstack/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />ApplicantStack</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/talentsoftcustomer/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TalentSoft Customer</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Warning>
                **This endpoint is deprecated!**

                Get all application stages available in the ATS. This is deprecated because most ATS systems have separate sets of stages for each job. We'd recommend using the `stages` property on jobs instead..
              </Warning>

          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get application stages
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationStagesParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationStagesParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationStagesParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: >-
                #/components/schemas/GetAtsApplicationStagesParameterIncludeDeleted
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationStagesParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetAtsApplicationStagesParameterRemoteIds'
    /ats/jobs:
      get:
        operationId: GetAtsJobs
        responses:
          '200':
            description: GET /ats/jobs Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsJobsSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            name: Backend Engineer
                            job_code: BE-2021-01
                            description: >-
                              <p>Kombo is hiring engineers! If you are reading
                              this and you are located in Berlin, Germany, feel
                              free to contact us about this position.</p>
                            confidential: false
                            weekly_hours: 37
                            employment_type: FULL_TIME
                            status: OPEN
                            visibility: PUBLIC
                            category: Technical Job
                            department: Engineering
                            post_url: https://jobs.example.com/post/159829112
                            experience_level: Mid-Senior
                            remote_work_status: HYBRID
                            salary_amount: 4200
                            salary_amount_from: null
                            salary_amount_to: null
                            salary_currency: EUR
                            salary_period: MONTH
                            location:
                              city: Berlin
                              country: DE
                              raw: Berlin, Germany
                              state: Berlin
                              street_1: Lohmühlenstraße 65
                              street_2: null
                              zip_code: '12435'
                            custom_fields: {}
                            opened_at: '2022-08-07T14:01:29.196Z'
                            closed_at: null
                            remote_created_at: '2022-08-07T14:01:29.196Z'
                            remote_updated_at: '2022-08-07T14:01:29.196Z'
                            contact_id: 6gT2yLMBEipd3zpezATv3Rhu
                            remote_data: null
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                            stages:
                              - id: 26vafvWSRmbhNcxJYqjCzuJg
                                remote_id: '32'
                                name: Initial Screening
                                index: 0
                            screening_questions:
                              - id: 26vafvWSRmbhNcxJYqjCzuJg
                                remote_id: 48b4d36a-1d4b-4c50-ada7-9519078e65b4
                                title: Which is your primary programming language?
                                description: >-
                                  Please enter the language you are most
                                  comfortable with.
                                format:
                                  display_type: SINGLE_LINE
                                  max_length: null
                                  type: TEXT
                                index: 0
                                required: true
                            job_postings:
                              - id: 26vafvWSRmbhNcxJYqjCzuJg
                                remote_id: 48b4d36a-1d4b-4c50-ada7-9519078e65b4
                                description_html: <p>We are looking for a Frontend Engineer.</p>
                                status: ACTIVE
                                visibility: PUBLIC
                                remote_data: null
                            hiring_team:
                              - id: 26vafvWSRmbhNcxJYqjCzuJg
                                remote_id: '32'
                                first_name: John
                                last_name: Doe
                                email: john.doe@kombo.dev
                                hiring_team_roles:
                                  - RECRUITER
          '400':
            description: GET /ats/jobs Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsJobsErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all jobs.


          Visit our in depth guide to learn more about:

          - 🔄 [Getting updates of the
          data](/ats/features/implementation-guide/reading-jobs#getting-updates-of-the-data) 

          - ❗ [Handling failing
          syncs](/ats/features/implementation-guide/reading-jobs#handling-failing-syncs) 

          - 🔍 [Letting your customer choose which jobs to
          expose](/ats/features/implementation-guide/reading-jobs#let-your-customer-choose-which-jobs-to-expose-to-you) 

          - 🔗 [Matching jobs in your database to ATS
          jobs](/ats/features/implementation-guide/reading-jobs#match-jobs-in-your-database-to-ats-jobs) 

          - 🗑️ [Reacting to deleted/closed
          jobs](/ats/features/implementation-guide/reading-jobs#reacting-to-deleted-closed-jobs) 

          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclerecruiting/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle Recruiting Cloud</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/icims/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />iCIMS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhousejobboard/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse Job Board</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ukgpro/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />UKG Pro</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rexx/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />rexx systems</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhorn/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhornlogin/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn Login</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/fountain/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Fountain</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/softgarden/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Softgarden</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/pinpoint/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Pinpoint</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/dvinci/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />d.vinci</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/join/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JOIN</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobvite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobvite</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/traffit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TRAFFIT</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/erecruiter/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />eRecruiter</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/umantis/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Haufe Umantis</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobylon/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobylon</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/taleez/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Taleez</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/otys/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />OTYS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eploy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eploy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heyrecruit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Heyrecruit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />RECRU</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jazzhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JazzHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BITE</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/mysolution/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Mysolution</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/flatchr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Flatchr</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/applicantstack/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />ApplicantStack</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/talentsoft/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TalentSoft</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/talentsoftcustomer/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TalentSoft Customer</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/concludis/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />concludis</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get jobs
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterRemoteIds'
          - name: job_codes
            in: query
            required: false
            description: Filter by a comma-separated list of job codes.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterJobCodes'
          - name: post_url
            in: query
            required: false
            description: >-
              Filter by the `post_url` field. Can be used to find a job based on
              its public posting URL.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterPostUrl'
          - name: status
            in: query
            required: false
            description: >-
              **(⚠️ Deprecated - Use the `statuses` filter instead.)** Filter by
              the `status` field. Can be used to find a job based on its status.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterStatus'
          - name: statuses
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of `OPEN`, `CLOSED`, `DRAFT`,
              `ARCHIVED`  


              Leave this blank to get results matching all values.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterStatuses'
          - name: visibilities
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of `PUBLIC`, `INTERNAL`,
              `UNLISTED`, `CONFIDENTIAL`  


              Leave this blank to get results matching all values.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterVisibilities'
          - name: name_contains
            in: query
            required: false
            description: >-
              Filter by the `name` field. Can be used to find a job by keywords
              present in the job name.
            schema:
              $ref: '#/components/schemas/GetAtsJobsParameterNameContains'
    /ats/jobs/{job_id}/applications:
      post:
        operationId: PostAtsJobsJobIdApplications
        responses:
          '200':
            description: POST /ats/jobs/:job_id/applications Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostAtsJobsJobIdApplicationsSuccessfulResponse
          '400':
            description: POST /ats/jobs/:job_id/applications Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostAtsJobsJobIdApplicationsErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Create a new application and candidate for the specified job.


          Visit our in depth guide to learn more about:

          - 🌐 [Setting the source of the
          application](/ats/features/implementation-guide/creating-applications#set-the-source-of-the-application) 

          - 📎 [Uploading attachments with the
          application](/ats/features/implementation-guide/creating-applications#upload-attachments-with-the-application) 

          - ♻️ [Retry
          behaviour](/ats/features/implementation-guide/creating-applications#retry-behaviour) 

          - ✏️ [Writing answers to screening
          questions](/ats/features/implementation-guide/creating-applications#write-answers-to-screening-questions) 

          - ⚠️ [Handling ATS-specific
          limitations](/ats/features/implementation-guide/creating-applications#handle-ats-specific-limitations)

          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/oraclerecruiting/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Oracle Recruiting Cloud</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/icims/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />iCIMS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhousejobboard/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse Job Board</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/personio/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Personio</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ukgpro/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />UKG Pro</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/rexx/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />rexx systems</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/afas/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />AFAS Software</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bamboohr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BambooHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bullhorn/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Bullhorn</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/fountain/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Fountain</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/softgarden/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Softgarden</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/pinpoint/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Pinpoint</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/welcometothejungle/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Welcome to the Jungle</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/dvinci/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />d.vinci</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/join/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JOIN</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobvite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobvite</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sagehr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Sage HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/traffit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TRAFFIT</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/erecruiter/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />eRecruiter</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/umantis/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Haufe Umantis</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobylon/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobylon</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/taleez/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Taleez</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/otys/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />OTYS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eploy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eploy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/heyrecruit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Heyrecruit</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />RECRU</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jazzhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JazzHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/bite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />BITE</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/homerun/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Homerun</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/mysolution/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Mysolution</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/flatchr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Flatchr</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/talentsoft/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TalentSoft</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/concludis/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />concludis</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Note>
            This endpoint requires the permission **Create and manage candidates and applications** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "stage_id": "8x3YKRDcuRnwShdh96ShBNn1",
            "candidate": {
              "first_name": "Frank",
              "last_name": "Doe",
              "company": "Acme Inc.",
              "title": "Head of Integrations",
              "email_address": "frank.doe@example.com",
              "phone_number": "+1-541-754-3010",
              "gender": "MALE",
              "salary_expectations": {
                "amount": 100000,
                "period": "YEAR"
              },
              "availability_date": "2021-01-01",
              "location": {
                "city": "New York",
                "country": "US"
              }
            },
            "attachments": [
              {
                "name": "Frank Doe CV.txt",
                "data": "SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=",
                "type": "CV",
                "content_type": "text/plain"
              }
            ],
            "screening_question_answers": [
              {
                "question_id": "3phFBNXRweGnDmsU9o2vdPuQ",
                "answer": "Yes"
              },
              {
                "question_id": "EYJjhMQT3LtVKXnTbnRT8s6U",
                "answer": [
                  "GUzE666zfyjeoCJX6A8n7wh6",
                  "5WPHzzKAv8cx97KtHRUV96U8",
                  "7yZfKGzWigXxxRTygqAfHvyE"
                ]
              }
            ]
          }

          ```
        summary: Create application
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: job_id
            in: path
            required: true
            description: >-
              Kombo ID or Remote ID of the Job this candidate should apply for. If
              you want to use the ID of the integrated system (remote_id) you need
              to prefix the id with "remote:". You can use the remote ID if you do
              not want to sync jobs.
            schema:
              $ref: '#/components/schemas/PostAtsJobsJobIdApplicationsParameterJobId'
            examples:
              example1:
                value: BDpgnpZ148nrGh4mYHNxJBgx
        requestBody:
          description: POST /ats/jobs/:job_id/applications request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAtsJobsJobIdApplicationsRequestBody'
              examples:
                example1:
                  value:
                    candidate:
                      first_name: Frank
                      last_name: Doe
                      company: Acme Inc.
                      title: Head of Integrations
                      email_address: frank.doe@example.com
                      phone_number: +1-541-754-3010
                      gender: MALE
                      salary_expectations:
                        amount: 100000
                        period: YEAR
                      availability_date: '2021-01-01'
                      location:
                        city: New York
                        country: US
                    stage_id: 8x3YKRDcuRnwShdh96ShBNn1
                    attachments:
                      - name: Frank Doe CV.txt
                        data: >-
                          SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=
                        type: CV
                        content_type: text/plain
                    screening_question_answers:
                      - question_id: 3phFBNXRweGnDmsU9o2vdPuQ
                        answer: 'Yes'
                      - question_id: EYJjhMQT3LtVKXnTbnRT8s6U
                        answer:
                          - GUzE666zfyjeoCJX6A8n7wh6
                          - 5WPHzzKAv8cx97KtHRUV96U8
                          - 7yZfKGzWigXxxRTygqAfHvyE
    /ats/users:
      get:
        operationId: GetAtsUsers
        responses:
          '200':
            description: GET /ats/users Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsUsersSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        next: >-
                          eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
                        results:
                          - id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            first_name: John
                            last_name: Doe
                            email: john.doe@kombo.dev
                            remote_data: null
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
          '400':
            description: GET /ats/users Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAtsUsersErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Retrieve all users.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/lever/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Lever</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/teamtailor/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Teamtailor</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/onlyfy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Onlyfy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workable/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workable</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/softgarden/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Softgarden</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/pinpoint/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Pinpoint</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/dvinci/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />d.vinci</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/join/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JOIN</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jobvite/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Jobvite</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/traffit/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />TRAFFIT</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/hrworks/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />HRworks</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/otys/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />OTYS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/eploy/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Eploy</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />RECRU</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/jazzhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />JazzHR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/carerix/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Carerix</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/breezyhr/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Breezy HR</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/sandbox/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Kombo Sandbox</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          Top level filters use AND, while individual filters use OR if they
          accept multiple arguments. That means filters will be resolved like
          this: `(id IN ids) AND (remote_id IN remote_ids)`
        summary: Get users
        tags:
          - Unified ATS API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: join:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetAtsUsersParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetAtsUsersParameterPageSize'
          - name: updated_after
            in: query
            required: false
            description: >-
              Filter the entries based on the modification date in format
              YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also
              set the `include_deleted=true` query parameter, because otherwise,
              deleted entries will be hidden.
            schema:
              $ref: '#/components/schemas/GetAtsUsersParameterUpdatedAfter'
          - name: include_deleted
            in: query
            required: false
            description: >-
              By default, deleted entries are not returned. Use the
              `include_deleted` query param to include deleted entries too.
            schema:
              $ref: '#/components/schemas/GetAtsUsersParameterIncludeDeleted'
          - name: ids
            in: query
            required: false
            description: >-
              Filter by a comma-separated list of IDs such as
              `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
              validated to be 24 characters long and to exist for this integration
              in the database. If any of the IDs are don't exist, the endpoint
              will return a 404 error.
            schema:
              $ref: '#/components/schemas/GetAtsUsersParameterIds'
          - name: remote_ids
            in: query
            required: false
            description: Filter by a comma-separated list of remote IDs.
            schema:
              $ref: '#/components/schemas/GetAtsUsersParameterRemoteIds'
    /assessment/packages:
      get:
        operationId: GetAssessmentPackages
        responses:
          '200':
            description: GET /assessment/packages Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAssessmentPackagesSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        packages:
                          - id: '1001'
                            name: TypeScript
                            description: TypeScript coding skills assessments
                            updated_at: '2023-06-29T18:47:40.890Z'
                            type: SKILLS_TEST
          '400':
            description: GET /assessment/packages Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAssessmentPackagesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: >-
          Get all available assessment packages for an integration.


          This is mainly intended for debugging. As you always need to submit the
          full list of available packages when using ["set
          packages"](https://api.kombo.dev), there shouldn't ever be a need to
          call this endpoint in production.
        summary: Get packages
        tags:
          - Unified ATS (Assessment) API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: recruitee:HWUTwvyx2wLoSUHphiWVrp28
            required: true
      put:
        operationId: PutAssessmentPackages
        responses:
          '200':
            description: PUT /assessment/packages Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PutAssessmentPackagesSuccessfulResponse'
          '400':
            description: PUT /assessment/packages Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PutAssessmentPackagesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: >-
          Replaces the list of available assessment packages.


          Packages that have been previously submitted through this endpoint but
          aren't included again will be marked as deleted.
        summary: Set packages
        requestBody:
          description: PUT /assessment/packages request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAssessmentPackagesRequestBody'
              examples:
                example1:
                  value:
                    packages:
                      - id: '1001'
                        type: SKILLS_TEST
                        name: TypeScript
                        description: TypeScript coding skills assessments
                      - id: '1002'
                        type: VIDEO_INTERVIEW
                        name: Video Interview
                        description: Video interview to assess communication skills
        tags:
          - Unified ATS (Assessment) API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: recruitee:HWUTwvyx2wLoSUHphiWVrp28
            required: true
    /assessment/orders/open:
      get:
        operationId: GetAssessmentOrdersOpen
        responses:
          '200':
            description: GET /assessment/orders/open Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAssessmentOrdersOpenSuccessfulResponse'
          '400':
            description: GET /assessment/orders/open Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetAssessmentOrdersOpenErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: Get all open assessment orders of an integration.
        summary: Get open orders
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: recruitee:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: cursor
            in: query
            required: false
            description: >-
              An optional cursor string used for pagination. This can be retrieved
              from the `next` property of the previous page response.
            schema:
              $ref: '#/components/schemas/GetAssessmentOrdersOpenParameterCursor'
          - name: page_size
            in: query
            required: false
            description: The number of results to return per page.
            schema:
              $ref: '#/components/schemas/GetAssessmentOrdersOpenParameterPageSize'
        tags:
          - Unified ATS (Assessment) API
    /assessment/orders/{assessment_order_id}/result:
      put:
        operationId: PutAssessmentOrdersAssessmentOrderIdResult
        responses:
          '200':
            description: >-
              PUT /assessment/orders/:assessment_order_id/result Successful
              response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PutAssessmentOrdersAssessmentOrderIdResultSuccessfulResponse
          '400':
            description: PUT /assessment/orders/:assessment_order_id/result Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PutAssessmentOrdersAssessmentOrderIdResultErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Updates an assessment order result.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/workday/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Workday</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/successfactors/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SAP SuccessFactors</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/smartrecruiters/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />SmartRecruiters</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/recruitee/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Recruitee</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/greenhouse/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Greenhouse</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/ashby/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Ashby</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>

          ### Example Request Body


          ```json

          {
            "status": "COMPLETED",
            "result_url": "https://example.com",
            "completed_at": "2023-04-04T00:00:00.000Z",
            "score": 90,
            "max_score": 100,
            "attributes": [
              {
                "field": "remarks",
                "value": "Test completed with passing score"
              }
            ]
          }

          ```
        summary: Update order result
        tags:
          - Unified ATS (Assessment) API
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: recruitee:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: assessment_order_id
            in: path
            required: true
            description: PUT /assessment/orders/:assessment_order_id/result parameter
            schema:
              $ref: >-
                #/components/schemas/PutAssessmentOrdersAssessmentOrderIdResultParameterAssessmentOrderId
            examples:
              example1:
                value: GRKdd9dibYKKCrmGRSMJf3wu
        requestBody:
          description: PUT /assessment/orders/:assessment_order_id/result request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PutAssessmentOrdersAssessmentOrderIdResultRequestBody
              examples:
                example1:
                  value:
                    status: COMPLETED
                    score: 90
                    max_score: 100
                    result_url: https://example.com
                    completed_at: '2023-04-04T00:00:00.000Z'
                    attributes:
                      - field: remarks
                        value: Test completed with passing score
    /connect/create-link:
      post:
        operationId: PostConnectCreateLink
        responses:
          '200':
            description: POST /connect/create-link Successful response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostConnectCreateLinkSuccessfulResponse'
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        link: >-
                          https://connect.kombo.dev/v1?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.SWYgeW91IGFyZSByZWFkaW5nIHRoaXMsIHdlIHdvdWxkIGxpa2UgdG8gbGV0IHlvdSBrbm93IHRoYXQgd2UgYXJlIGhpcmluZyBwZW9wbGUgbGlrZSB5b3UgOikuIFJlYWNoIG91dCB0byBhbGV4QGtvbWJvLmRldiB0byBnZXQgaW4gY29udGFjdCBhbmQgdGVsbCBoaW0geW91IGNvbWUgZnJvbSB0aGUgSldUIDsp._hhX5YTtHfLn9ZC806dZceRn2whzxHyrhft1ONzNgOE
          '400':
            description: POST /connect/create-link Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostConnectCreateLinkErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: >-
          Generate a unique link that allows your user to enter the embedded Kombo
          Connect flow.


          > Check out [our full guide](https://api.kombo.dev) for more details
          about implementing the connection flow into your app.


          > Kombo will not deduplicate integrations for you that are created with
          this endpoint. You are responsible for keeping track of integrations in
          your system and prevent customers from connecting the same tool again.
          Use the [reconnection link](https://api.kombo.dev) endpoint if you want
          a customer to update their credentials.


          ### Example Request Body


          ```json

          {
            "end_user_email": "test@example.com",
            "end_user_organization_name": "Test Inc.",
            "end_user_origin_id": "123",
            "integration_category": "HRIS",
            "integration_tool": "personio",
            "language": "en"
          }

          ```
        summary: Create connection link
        tags:
          - Kombo Connect
        requestBody:
          description: POST /connect/create-link request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostConnectCreateLinkRequestBody'
              examples:
                example1:
                  value:
                    end_user_email: test@example.com
                    end_user_organization_name: Test Inc.
                    integration_category: HRIS
                    integration_tool: personio
                    end_user_origin_id: '123'
                    language: en
    /connect/integration-by-token/{token}:
      get:
        operationId: GetConnectIntegrationByTokenToken
        responses:
          '200':
            description: GET /connect/integration-by-token/:token Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/GetConnectIntegrationByTokenTokenSuccessfulResponse
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        tool: personio
                        id: personio:CBNMt7dSNCzBdnRTx87dev4E
                        end_user_origin_id: '36123'
                        end_user_organization_name: Acme, Inc.
                        end_user_email: user@example.com
          '400':
            description: GET /connect/integration-by-token/:token Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/GetConnectIntegrationByTokenTokenErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: >-
          Use this endpoint with the token you get from the connection flow to
          retrieve information about the created integration. 
            
            It works in a similar way as the OAuth2 code flow to securely retrieve information and connect the integration to your user.

          > Check out [our full guide](https://api.kombo.dev) for more details
          about implementing the connection flow into your app.


          This endpoint is used to ensure users can't trick your system connecting
          their

          account in your system to another customers integration. You don't get
          the integration ID

          from the `showKomboConnect(link)` function but only the short lived
          token used

          for this endpoint so that users can't send you arbitrary data that you
          would put

          into your system.
        summary: Get integration by token
        tags:
          - Kombo Connect
        parameters:
          - name: token
            in: path
            required: true
            description: GET /connect/integration-by-token/:token parameter
            schema:
              $ref: >-
                #/components/schemas/GetConnectIntegrationByTokenTokenParameterToken
    /connect/activate-integration:
      post:
        operationId: PostConnectActivateIntegration
        responses:
          '200':
            description: POST /connect/activate-integration Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostConnectActivateIntegrationSuccessfulResponse
                examples:
                  example1:
                    value:
                      status: success
                      data:
                        tool: personio
                        id: personio:CBNMt7dSNCzBdnRTx87dev4E
                        end_user_origin_id: '36123'
                        end_user_organization_name: Acme, Inc.
                        end_user_email: user@example.com
          '400':
            description: POST /connect/activate-integration Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostConnectActivateIntegrationErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
        description: >-
          Use this endpoint with the token you get from the connection flow to
          retrieve information about the created integration. It works in a
          similar way as the OAuth2 code flow to securely retrieve information and
          connect the integration to your user. You do not need to call this
          endpoint for an integration to become active.


          <Warning>We are deprecating this endpoint in favour of the [get
          integration by code endpoint](https://api.kombo.dev). To migrate you
          only have to change to the new API endpoint.</Warning>


          ### Example Request Body


          ```json

          {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXNzYWdlIjoiVGhpcyBpcyBub3QgYW4gYWN0dWFsIHRva2VuLiJ9.JulqgOZBMKceI8vh9YLpVX51efND0ZyfUNHDXLrPz_4"
          }

          ```
        summary: Activate integration (optional)
        tags:
          - Kombo Connect
        requestBody:
          description: POST /connect/activate-integration request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostConnectActivateIntegrationRequestBody'
    /custom/datev/passthrough:
      post:
        operationId: PostCustomDatevPassthrough
        responses:
          '200':
            description: POST /custom/datev/passthrough Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostCustomDatevPassthroughSuccessfulResponse
          '400':
            description: POST /custom/datev/passthrough Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/PostCustomDatevPassthroughErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          This action allows to send an arbitrary ASCII file directly to DATEV
          LODAS or Lohn und Gehalt. Kombo adds validation for the file format but
          not on the content. This action allows you to implement any use case
          that you might have with DATEV payroll ASCII imports.
        summary: Write raw DATEV ASCII file
        tags:
          - Custom Endpoints
        requestBody:
          description: POST /custom/datev/passthrough request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCustomDatevPassthroughRequestBody'
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: datev:HWUTwvyx2wLoSUHphiWVrp28
            required: true
    /custom/datev/employees/{employee_id}/prepare-payroll:
      put:
        operationId: PutCustomDatevEmployeesEmployeeIdPreparePayroll
        responses:
          '200':
            description: >-
              PUT /custom/datev/employees/:employee_id/prepare-payroll Successful
              response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PutCustomDatevEmployeesEmployeeIdPreparePayrollSuccessfulResponse
          '400':
            description: >-
              PUT /custom/datev/employees/:employee_id/prepare-payroll Error
              response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PutCustomDatevEmployeesEmployeeIdPreparePayrollErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          What DATEV requires to prepare payroll is very specific and currently,
          as DATEV is not providing "read", this is not part of the unified model.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datev/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV LODAS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datevlug/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV Lohn & Gehalt</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Note>
            This endpoint requires the permission **Manage payroll** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "employee_id": "EvLV61zdahkN4ftPJbmPCkdv",
            "payroll_run": {
              "date": "2022-05-01"
            },
            "hourly_payments": [
              {
                "hours": 14,
                "lohnart": 200
              },
              {
                "hours": 16,
                "lohnart": 232
              }
            ],
            "fixed_payments": [
              {
                "amount": 560,
                "lohnart": 100
              }
            ],
            "custom_lodas": [
              {
                "amount": 8,
                "lohnart": 300,
                "bearbeitungsschluessel": 4
              }
            ]
          }

          ```
        summary: Prepare DATEV Payroll
        tags:
          - Custom Endpoints
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: datev:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: employee_id
            in: path
            required: true
            description: >-
              ID of the employee that should be updated. You can use their Kombo
              `id` or their ID in the remote system by prefixing it with `remote:`
              (e.g., `remote:12312`)
            schema:
              $ref: >-
                #/components/schemas/PutCustomDatevEmployeesEmployeeIdPreparePayrollParameterEmployeeId
            examples:
              example1:
                value: EvLV61zdahkN4ftPJbmPCkdv
        requestBody:
          description: PUT /custom/datev/employees/:employee_id/prepare-payroll request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PutCustomDatevEmployeesEmployeeIdPreparePayrollRequestBody
              examples:
                example1:
                  value:
                    payroll_run:
                      date: '2022-05-01'
                    fixed_payments:
                      - amount: 560
                        lohnart: 100
                    hourly_payments:
                      - hours: 14
                        lohnart: 200
                      - hours: 16
                        lohnart: 232
                    custom_lodas:
                      - amount: 8
                        lohnart: 300
                        bearbeitungsschluessel: 4
    /custom/datev/employees/{employee_id}/compensations:
      put:
        operationId: PutCustomDatevEmployeesEmployeeIdCompensations
        responses:
          '200':
            description: >-
              PUT /custom/datev/employees/:employee_id/compensations Successful
              response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PutCustomDatevEmployeesEmployeeIdCompensationsSuccessfulResponse
          '400':
            description: >-
              PUT /custom/datev/employees/:employee_id/compensations Error
              response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PutCustomDatevEmployeesEmployeeIdCompensationsErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Sets the compensations for an employee on the specified effective date.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datev/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV LODAS</li>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/datevlug/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />DATEV Lohn & Gehalt</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>

           Other compensations will end at the effective date. That means, if you would like to add a compensation, you also have to include the compensations that you would like to keep.

          <Note>
            This endpoint requires the permission **Manage payroll** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "employee_id": "3bdhemmSP1TPQDGWtRveRot9",
            "effective_date": "2022-12-01",
            "compensations": [
              {
                "amount": 4500,
                "currency": "EUR",
                "period": "MONTH",
                "lohnart": 200
              },
              {
                "amount": 30,
                "currency": "EUR",
                "period": "HOUR"
              }
            ]
          }

          ```
        summary: Set DATEV compensations
        tags:
          - Custom Endpoints
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: datev:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: employee_id
            in: path
            required: true
            description: >-
              ID of the employee that should be updated. You can use their Kombo
              `id` or their ID in the remote system by prefixing it with `remote:`
              (e.g., `remote:12312`)
            schema:
              $ref: >-
                #/components/schemas/PutCustomDatevEmployeesEmployeeIdCompensationsParameterEmployeeId
            examples:
              example1:
                value: 3bdhemmSP1TPQDGWtRveRot9
        requestBody:
          description: PUT /custom/datev/employees/:employee_id/compensations request body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PutCustomDatevEmployeesEmployeeIdCompensationsRequestBody
              examples:
                example1:
                  value:
                    effective_date: '2022-12-01'
                    compensations:
                      - amount: 4500
                        currency: EUR
                        period: MONTH
                        lohnart: 200
                      - amount: 30
                        currency: EUR
                        period: HOUR
    /custom/datev/data-pushes:
      get:
        operationId: GetCustomDatevDataPushes
        responses:
          '200':
            description: GET /custom/datev/data-pushes Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/GetCustomDatevDataPushesSuccessfulResponse
          '400':
            description: GET /custom/datev/data-pushes Error response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetCustomDatevDataPushesErrorResponse'
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Returns all "DATEV Data Pushes" of the last 2 months. You can use this
          endpoint to give your users transparency about submitted "ASCII-Files"
          and their status. Each data push can contain multiple files that were
          submitted.
        summary: Get DATEV data pushes
        tags:
          - Custom Endpoints
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: datev:HWUTwvyx2wLoSUHphiWVrp28
            required: true
    /custom/datev/push-data/general:
      post:
        operationId: PostCustomDatevPushDataGeneral
        responses:
          '200':
            description: POST /custom/datev/push-data/general Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostCustomDatevPushDataGeneralSuccessfulResponse
          '400':
            description: POST /custom/datev/push-data/general Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostCustomDatevPushDataGeneralErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Uploads the currently relevant general data (employees, compensations,
          and time offs) to DATEV. This will create so called ASCII files that the
          accountant has to import in DATEV. You can call this endpoint to
          implement an on-demand sync to DATEV, for example if you want to offer
          your users a button to do that in your application.
        summary: Push general data to DATEV
        tags:
          - Custom Endpoints
        requestBody:
          description: POST /custom/datev/push-data/general request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCustomDatevPushDataGeneralRequestBody'
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: datev:HWUTwvyx2wLoSUHphiWVrp28
            required: true
    /custom/datev/push-data/payroll:
      post:
        operationId: PostCustomDatevPushDataPayroll
        responses:
          '200':
            description: POST /custom/datev/push-data/payroll Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostCustomDatevPushDataPayrollSuccessfulResponse
          '400':
            description: POST /custom/datev/push-data/payroll Error response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostCustomDatevPushDataPayrollErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Uploads the currently relevant payroll data (supplements) to DATEV. This
          will create so called ASCII files that the accountant has to import in
          DATEV. After finishing the payroll preparation or after correcting
          payroll, you can call this.
        summary: Push payroll data to DATEV
        tags:
          - Custom Endpoints
        requestBody:
          description: POST /custom/datev/push-data/payroll request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCustomDatevPushDataPayrollRequestBody'
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: datev:HWUTwvyx2wLoSUHphiWVrp28
            required: true
    /custom/silae/employees/{employee_id}/payroll-supplements:
      post:
        operationId: PostCustomSilaeEmployeesEmployeeIdPayrollSupplements
        responses:
          '200':
            description: >-
              POST /custom/silae/employees/:employee_id/payroll-supplements
              Successful response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostCustomSilaeEmployeesEmployeeIdPayrollSupplementsSuccessfulResponse
          '400':
            description: >-
              POST /custom/silae/employees/:employee_id/payroll-supplements Error
              response
            content:
              application/json:
                schema:
                  $ref: >-
                    #/components/schemas/PostCustomSilaeEmployeesEmployeeIdPayrollSupplementsErrorResponse
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Sample error message
          '401':
            description: Returned when the authentication header was invalid or missing.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Invalid authorization header!
                  example2:
                    value:
                      status: error
                      error:
                        message: Missing authorization header!
          '403':
            description: Returned when the passed integration is inactive.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          This integration is inactive. You can only request data
                          from active integrations.
          '404':
            description: Returned when a requested resource is not found.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: Integration not found in this environment!
                  example2:
                    value:
                      status: error
                      error:
                        message: Property not found!
          '503':
            description: Returned when no sync has finished successfully yet
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                        - error
                    error:
                      type: object
                      properties:
                        message:
                          type: string
                      required:
                        - message
                  required:
                    - status
                    - error
                examples:
                  example1:
                    value:
                      status: error
                      error:
                        message: >-
                          The first sync of this integration didn't finish yet!
                          You can keep polling this until you get a successful
                          response or react to our webhooks.
        description: >-
          Write a payroll supplement to Silae using the supplement code.


          <Accordion title="Supported integrations" icon="list-check">

          This feature is currently available for the following integrations:


          <ul>

          <li class="flex items-center"><img
            src="https://storage.googleapis.com/kombo-assets/integrations/silae/icon.svg"
            height="16px"
            width="16px"
            class="m-0 mr-2"
          />Silae</li>

          </ul>


          You'd like to see this feature for another integration? Please reach
          out!

          We're always happy to discuss extending our coverage.

          </Accordion>


          <Note>
            This endpoint requires the permission **Manage payroll** to be enabled in [your scope config](https://api.kombo.dev).
          </Note>


          ### Example Request Body


          ```json

          {
            "employee_id": "EvLV61zdahkN4ftPJbmPCkdv",
            "supplement_code": "200",
            "effective_date": "2024-01-14",
            "element_amount": 6
          }

          ```
        summary: Write Payroll Supplement
        tags:
          - Custom Endpoints
        parameters:
          - in: header
            name: X-Integration-Id
            schema:
              type: string
            description: ID of the integration you want to interact with.
            example: silae:HWUTwvyx2wLoSUHphiWVrp28
            required: true
          - name: employee_id
            in: path
            required: true
            description: >-
              ID of the employee that should be updated. You can use their Kombo
              `id` or their ID in the remote system by prefixing it with `remote:`
              (e.g., `remote:12312`)
            schema:
              $ref: >-
                #/components/schemas/PostCustomSilaeEmployeesEmployeeIdPayrollSupplementsParameterEmployeeId
            examples:
              example1:
                value: EvLV61zdahkN4ftPJbmPCkdv
        requestBody:
          description: >-
            POST /custom/silae/employees/:employee_id/payroll-supplements request
            body
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PostCustomSilaeEmployeesEmployeeIdPayrollSupplementsRequestBody
              examples:
                example1:
                  value:
                    supplement_code: '200'
                    effective_date: '2024-01-14'
                    element_amount: 6
  components:
    schemas:
      GetCheckApiKeySuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              environment_id:
                type: string
                required: []
              customer_id:
                type: string
                description: '**(⚠️ Deprecated)** Renamed to `environment_id`.'
                required: []
            required:
              - environment_id
              - customer_id
            example:
              environment_id: 2Uev1YUTqLFdvMPD3Jtrg2FX
              customer_id: 2Uev1YUTqLFdvMPD3Jtrg2FX
        required:
          - status
          - data
      GetCheckApiKeyErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostForceSyncSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              already_queued:
                type: boolean
                description: 'We only allow 1 concurrent sync to be running or queued. '
                required: []
              sync_id:
                type: string
                description: 'ID of the newly-created or already-queued-or-running sync. '
                required: []
            required:
              - already_queued
              - sync_id
            example:
              already_queued: false
              sync_id: 119ihtp91nA3dqRFiV67nXS6
        required:
          - status
          - data
      PostForceSyncErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostForceSyncRequestBody:
        type: object
      PostPassthroughToolApiParameterTool:
        type: string
        description: >-
          The ID of the tool whose passthrough API you want to call (e.g.,
          `personio`).
        required: []
      PostPassthroughToolApiParameterApi:
        type: string
        description: >-
          The ID of the passthrough API you want to call (some tools provide
          multiple). Check the endpoint description for a list of all available
          APIs.
        required: []
      PostPassthroughToolApiSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              url:
                type: string
                format: url
                description: >-
                  The full URL of the request that we automatically assemble for
                  you based on the specified `api`, the specified `path`, and the
                  integration's auth credentials. You can use this to debug
                  path-related issues (e.g., the API returning 404 errors).
                required: []
              status:
                type: integer
                format: int64
                minimum: -9007199254740991
                exclusiveMinimum: false
                maximum: 9007199254740991
                exclusiveMaximum: false
                description: The HTTP status code returned from the remote system.
                required: []
              headers:
                type: object
                additionalProperties:
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                description: The HTTP headers returned from the remote system.
                required: []
              data:
                format: any
                description: >-
                  The HTTP body returned from the remote system. This will either
                  be an array or object (in the case that JSON was returned) or a
                  string (in any other case).
                required: []
            required:
              - url
              - status
              - headers
        required:
          - status
          - data
      PostPassthroughToolApiErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostPassthroughToolApiRequestBody:
        allOf:
          - type: object
            properties:
              method:
                type: string
                enum:
                  - GET
                  - POST
                  - DELETE
                  - PUT
                  - PATCH
                description: The HTTP method (e.g., `GET`) of the request.
              path:
                type: string
                pattern: /^\//
                description: >-
                  The path of the endpoint you want to call. We automatically
                  prepend the base URL of the API (all base URLs are documented in
                  the endpoint description).
              headers:
                type: object
                additionalProperties:
                  type: string
                description: >-
                  The headers to send with the request. Note that we automatically
                  supply any authentication-related headers.
              params:
                type: object
                additionalProperties:
                  type: string
                description: >-
                  The query parameters to send in addition to the ones in the
                  `path`.
              data:
                format: any
                description: >-
                  The data to submit as part of the request body. This can either
                  be an array or object (in which case we will forward it as JSON)
                  or a string (in which case we will forward it raw).
              response_as_base64:
                type: boolean
                description: >-
                  If set to `true`, the response will be returned as a
                  base64-encoded string. This is useful for binary data (e.g.,
                  PDFs).
              multipart_form_data:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The key of the form data
                    value:
                      oneOf:
                        - type: string
                          description: >-
                            The value of the form data (Can be an object if the
                            field is of the type file)
                        - type: object
                          properties:
                            name:
                              type: string
                              description: Name of the file you want to upload.
                            content_type:
                              type: string
                              pattern: /^[\w.-]+\/[\w.-]+$/
                              description: >-
                                Content/MIME type of the file (e.g.,
                                `application/pdf`). This is required if you
                                provide `data` and optional if you provide
                                `data_url`.
                            data:
                              type: string
                              description: >-
                                Base64-encoded contents of the file you want to
                                upload. You must provide either this or
                                `data_url`.
                            data_url:
                              type: string
                              format: url
                              description: >-
                                Publicly accessible URL to the file you want to
                                upload. You must provide either this or `data`.
                          required:
                            - name
                  required:
                    - name
                    - value
                  description: >-
                    The data to submit as part of the request body if the
                    request's `Content-Type` is `multipart/form-data`.
                description: >-
                  The data to submit as part of the request body if the request's
                  `Content-Type` is `multipart/form-data`.
              api_options:
                type: object
                additionalProperties:
                  type: string
                description: >-
                  Custom options interpreted by the passthrough API adapter you've
                  selected. These options are not documented right now as they're
                  only for very advanced use cases.
            required:
              - method
              - path
            example:
              method: GET
              path: /company/employees
      DeleteIntegrationsIntegrationIdParameterIntegrationId:
        type: string
        required: []
      DeleteIntegrationsIntegrationIdSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      DeleteIntegrationsIntegrationIdErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      DeleteIntegrationsIntegrationIdRequestBody:
        type: object
      GetIntegrationsIntegrationIdParameterIntegrationId:
        type: string
        required: []
      GetIntegrationsIntegrationIdSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              id:
                type: string
                required: []
              tool:
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the connected tool in Kombo (e.g. `factorial`).
                    required: []
                  label:
                    type: string
                    required: []
                  internal_label:
                    nullable: true
                    type: string
                    description: >-
                      Internal label that can help you debug specific variants of
                      the integration. Only show the `label` to your users.
                    required: []
                  logo_url:
                    type: string
                    format: url
                    description: >-
                      URL to an SVG logo of the connected tool. The logo usually
                      contains the tool name.
                    required: []
                  icon_url:
                    type: string
                    format: url
                    description: URL to a square SVG icon of the connected tool.
                    required: []
                required:
                  - id
                  - label
                  - internal_label
                  - logo_url
                  - icon_url
              category:
                type: string
                enum:
                  - HRIS
                  - ATS
                  - ASSESSMENT
                required: []
              status:
                type: string
                enum:
                  - ACTIVE
                  - INVALID
                  - INACTIVE
                required: []
              end_user:
                type: object
                properties:
                  organization_name:
                    type: string
                    required: []
                  creator_email:
                    nullable: true
                    type: string
                    format: email
                    required: []
                  origin_id:
                    nullable: true
                    type: string
                    description: >-
                      The ID you have passed initially to the connection flow to
                      create this integration.
                    required: []
                required:
                  - organization_name
                  - creator_email
                  - origin_id
              scope_config:
                type: object
                properties:
                  id:
                    type: string
                    required: []
                  name:
                    nullable: true
                    type: string
                    required: []
                required:
                  - id
                  - name
              created_at:
                description: YYYY-MM-DDTHH:mm:ss.sssZ
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              beta:
                type: boolean
                required: []
            required:
              - id
              - tool
              - category
              - status
              - end_user
              - scope_config
              - created_at
              - beta
            example:
              id: factorial:8d1hpPsbjxUkoCoa1veLZGe5
              tool:
                id: factorial
                label: Factorial
                internal_label: null
                logo_url: >-
                  https://storage.googleapis.com/kombo-assets/integrations/factorial/logo.svg
                icon_url: >-
                  https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg
              category: HRIS
              status: ACTIVE
              end_user:
                organization_name: Acme
                creator_email: example-integration-creator@acme.com
                origin_id: 2DQJAUtSzzzKP9buDTvUvPk3
              scope_config:
                id: B1hu5NGyhdjSq5X3hxEz4bAN
                name: Anonymous Scopes
              created_at: '2022-08-07T14:01:29.196Z'
              beta: false
        required:
          - status
          - data
      GetIntegrationsIntegrationIdErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostIntegrationsIntegrationIdRelinkParameterIntegrationId:
        type: string
        required: []
      PostIntegrationsIntegrationIdRelinkSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              link:
                type: string
                format: url
                required: []
            required:
              - link
        required:
          - status
          - data
      PostIntegrationsIntegrationIdRelinkErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostIntegrationsIntegrationIdRelinkRequestBody:
        allOf:
          - type: object
            properties:
              language:
                type: string
                enum:
                  - en
                  - de
                  - fr
                default: en
                description: Language of the connection flow UI.
            required: []
            example:
              language: en
      GetToolsCategoryParameterCategory:
        type: string
        enum:
          - hris
          - ats
          - assessment
        required: []
      GetToolsCategorySuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              tools:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    label:
                      type: string
                      required: []
                    internal_label:
                      nullable: true
                      type: string
                      description: >-
                        Internal label that can help you debug specific variants
                        of the integration. Only show the `label` to your users.
                      required: []
                    assets:
                      type: object
                      properties:
                        logo_url:
                          type: string
                          required: []
                        icon_url:
                          type: string
                          required: []
                        icon_black_url:
                          type: string
                          required: []
                      required:
                        - logo_url
                        - icon_url
                        - icon_black_url
                    coverage:
                      type: object
                      properties:
                        read_models:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                required: []
                              label:
                                type: string
                                required: []
                            required:
                              - id
                              - label
                            description: List of models we can read for this tool.
                          required: []
                        write_actions:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                required: []
                              label:
                                type: string
                                required: []
                            required:
                              - id
                              - label
                            description: List of supported write actions for this tool.
                          required: []
                        features:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                required: []
                              label:
                                type: string
                                required: []
                            required:
                              - id
                              - label
                          required: []
                      required:
                        - read_models
                        - write_actions
                        - features
                      description: >-
                        This describes the supported models and actions of this
                        tool.
                  required:
                    - id
                    - label
                    - internal_label
                    - assets
                    - coverage
                required: []
            required:
              - tools
            example:
              tools:
                - id: factorial
                  label: Factorial
                  internal_label: null
                  assets:
                    logo_url: >-
                      https://storage.googleapis.com/kombo-assets/integrations/factorial/logo.svg
                    icon_url: >-
                      https://storage.googleapis.com/kombo-assets/integrations/factorial/icon.svg
                    icon_black_url: >-
                      https://storage.googleapis.com/kombo-assets/integrations/factorial/icon-black.svg
                  coverage:
                    read_models:
                      - id: hris_employees
                        label: Employees
                      - id: hris_teams
                        label: Groups
                    write_actions:
                      - id: hris_create_employee
                        label: Create employee
                    features:
                      - id: automatic_source_writing
                        label: Automatic Source Writing
        required:
          - status
          - data
      GetToolsCategoryErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostHrisProvisioningGroupsGroupIdDiffParameterGroupId:
        type: string
        description: ID of the provisioning group (currently only `default` is allowed).
        required: []
      PostHrisProvisioningGroupsGroupIdDiffSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              users:
                type: object
                properties:
                  to_provision:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          nullable: true
                          type: string
                          format: email
                          description: The email address of the user.
                          required: []
                        employee:
                          type: object
                          properties:
                            id:
                              type: string
                              required: []
                            remote_id:
                              nullable: true
                              type: string
                              required: []
                            first_name:
                              nullable: true
                              type: string
                              required: []
                            last_name:
                              nullable: true
                              type: string
                              required: []
                            groups:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    required: []
                                  remote_id:
                                    nullable: true
                                    type: string
                                    required: []
                                  name:
                                    nullable: true
                                    type: string
                                    required: []
                                required:
                                  - id
                                  - remote_id
                                  - name
                              required: []
                            avatar:
                              nullable: true
                              type: string
                              required: []
                            work_location_id:
                              nullable: true
                              type: string
                              required: []
                            legal_entity_id:
                              nullable: true
                              type: string
                              required: []
                          description: >-
                            The field of the underlying employee (which ones are
                            included depends on the `employee_fields` array you
                            supplied).
                          required: []
                      required:
                        - email
                        - employee
                    description: >-
                      The users we've found in the HR systems who match the
                      provisioning filters but haven't been provisioned in your
                      system yet.
                    required: []
                  to_deprovision:
                    type: array
                    items:
                      type: object
                      properties:
                        origin_id:
                          type: string
                          description: >-
                            _Your_ ID for this user (that you submitted through
                            `origin_id`).
                          required: []
                        email:
                          type: string
                          format: email
                          description: The email address of the user.
                          required: []
                      required:
                        - origin_id
                        - email
                    description: >-
                      The users who've been provisioned in your system but
                      couldn't be found in the HR system or don't match the
                      provisioning filters.
                    required: []
                  already_provisioned:
                    type: array
                    items:
                      type: object
                      properties:
                        origin_id:
                          type: string
                          description: >-
                            _Your_ ID for this user (that you submitted through
                            `origin_id`).
                          required: []
                        email:
                          type: string
                          format: email
                          description: The email address of the user.
                          required: []
                        employee:
                          type: object
                          properties:
                            id:
                              type: string
                              required: []
                            remote_id:
                              nullable: true
                              type: string
                              required: []
                            first_name:
                              nullable: true
                              type: string
                              required: []
                            last_name:
                              nullable: true
                              type: string
                              required: []
                            groups:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    required: []
                                  remote_id:
                                    nullable: true
                                    type: string
                                    required: []
                                  name:
                                    nullable: true
                                    type: string
                                    required: []
                                required:
                                  - id
                                  - remote_id
                                  - name
                              required: []
                            avatar:
                              nullable: true
                              type: string
                              required: []
                            work_location_id:
                              nullable: true
                              type: string
                              required: []
                            legal_entity_id:
                              nullable: true
                              type: string
                              required: []
                          description: >-
                            The field of the underlying employee (which ones are
                            included depends on the `employee_fields` array you
                            supplied).
                          required: []
                      required:
                        - origin_id
                        - email
                        - employee
                    description: >-
                      The users who are in the HR system and match the
                      provisioning filters but have already been provisioned in
                      your system.
                    required: []
                required:
                  - to_provision
                  - to_deprovision
                  - already_provisioned
            required:
              - users
            description: The users to provision, deprovision, and optionally update.
        required:
          - status
          - data
      PostHrisProvisioningGroupsGroupIdDiffErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostHrisProvisioningGroupsGroupIdDiffRequestBody:
        allOf:
          - type: object
            properties:
              provisioned_users:
                type: array
                items:
                  type: object
                  properties:
                    origin_id:
                      type: string
                      description: >-
                        _Your_ ID for this user (_not_ an ID retrieved from
                        Kombo).
                    email:
                      type: string
                      format: email
                      description: This user's email address.
                  required:
                    - origin_id
                    - email
                description: Array of the already provisioned users in your system.
              options:
                type: object
                properties:
                  employee_fields:
                    type: array
                    items:
                      type: string
                      enum:
                        - id
                        - remote_id
                        - first_name
                        - last_name
                        - groups
                        - avatar
                        - work_location_id
                        - legal_entity_id
                    description: The employee fields relevant for your use case.
                required:
                  - employee_fields
                description: Options to customize what we return.
            required:
              - provisioned_users
              - options
            example:
              provisioned_users:
                - origin_id: your_id_123
                  email: johndoe@example.com
              options:
                employee_fields:
                  - id
                  - first_name
                  - last_name
      PostHrisProvisioningGroupsGroupIdSetupLinksParameterGroupId:
        type: string
        description: ID of the provisioning group (currently only `default` is allowed).
        required: []
      PostHrisProvisioningGroupsGroupIdSetupLinksSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              url:
                type: string
                format: url
                description: The setup link URL to pass to the Kombo Connect SDK.
                required: []
              expires_at:
                description: When this link expires.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
            required:
              - url
              - expires_at
            example:
              url: >-
                https://connect.kombo.dev/v1/provisioning?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.SWYgeW91IGFyZSByZWFkaW5nIHRoaXMsIHdlIHdvdWxkIGxpa2UgdG8gbGV0IHlvdSBrbm93IHRoYXQgd2UgYXJlIGhpcmluZyBwZW9wbGUgbGlrZSB5b3UgOikuIFJlYWNoIG91dCB0byBhbGV4QGtvbWJvLmRldiB0byBnZXQgaW4gY29udGFjdCBhbmQgdGVsbCBoaW0geW91IGNvbWUgZnJvbSB0aGUgSldUIDsp._hhX5YTtHfLn9ZC806dZceRn2whzxHyrhft1ONzNgOE
              expires_at: '2023-10-11T12:00:00.000Z'
        required:
          - status
          - data
      PostHrisProvisioningGroupsGroupIdSetupLinksErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostHrisProvisioningGroupsGroupIdSetupLinksRequestBody:
        allOf:
          - type: object
            properties:
              language:
                type: string
                enum:
                  - en
                  - de
                  - fr
                default: en
                description: >-
                  Language of the UI. Please note that the provisioning setup UI
                  is _not_ translated yet but we're working on it and setting this
                  already will make sure the translations appear once released.
            required: []
            example:
              language: en
      GetHrisEmployeesParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetHrisEmployeesParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetHrisEmployeesParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisEmployeesParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetHrisEmployeesParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetHrisEmployeesParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetHrisEmployeesParameterEmploymentStatus:
        type: string
        enum:
          - ACTIVE
          - PENDING
          - INACTIVE
          - LEAVE
        description: >-
          **(⚠️ Deprecated - Use the `employment_statuses` filter instead.)**
          Filter by the `employment_status` field.
        required: []
      GetHrisEmployeesParameterEmploymentStatuses:
        type: string
        description: >-
          Filter by a comma-separated list of `ACTIVE`, `PENDING`, `INACTIVE`,
          `LEAVE` 

          * `ACTIVE`: the employee is **actively employed** 

          * `PENDING`: the employee is **not actively employed yet** (but they
          signed their contract or are part of an onboarding process) 

          * `INACTIVE`: a full-time employee is no longer employed, or, for a
          contract worker when their contract runs out 

          * `LEAVE`: the employee is still employed but **currently on leave**
          (note that not all HR systems support this status — use our absences API
          for detailed information) 
           

          Leave this blank to get results matching all values.
        required: []
      GetHrisEmployeesParameterGroupIds:
        type: string
        description: >-
          Filter by a comma-separated list of group IDs. We will only return
          employees that are members of _any_ of the groups.
        required: []
      GetHrisEmployeesParameterLegalEntityIds:
        type: string
        description: >-
          Filter by a comma-separated list of legal entity IDs. We will only
          return employees that are members of _any_ of the legal entities.
        required: []
      GetHrisEmployeesParameterWorkLocationIds:
        type: string
        description: >-
          Filter by a comma-separated list of work location IDs. We will only
          return employees who are at _any_ of the work locations.
        required: []
      GetHrisEmployeesParameterWorkEmails:
        type: string
        description: >-
          Filter by a comma-separated list of work emails. We will only return
          employees who have _any_ of the work emails.
        required: []
      GetHrisEmployeesParameterPersonalEmails:
        type: string
        description: >-
          Filter by a comma-separated list of personal emails. We will only return
          employees who have _any_ of the personal emails.
        required: []
      GetHrisEmployeesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                          description: >-
                            The globally unique ID of this object generated by
                            Kombo. We recommend using this as a stable primary key
                            for syncing.
                          required: []
                        remote_id:
                          type: string
                          description: >-
                            The raw ID of the object in the remote system. We
                            don't recommend using this as a primary key on your
                            side as it might sometimes be compromised of multiple
                            identifiers if a system doesn't provide a clear
                            primary key.
                          required: []
                        employee_number:
                          nullable: true
                          type: string
                          description: An optional, organization-internal employee number.
                          required: []
                        first_name:
                          nullable: true
                          type: string
                          description: The employee’s first name.
                          required: []
                        last_name:
                          nullable: true
                          type: string
                          description: The employee’s last name.
                          required: []
                        nationality:
                          nullable: true
                          type: string
                          description: The employee’s nationality.
                          required: []
                        display_full_name:
                          nullable: true
                          type: string
                          description: >-
                            The employee’s full name, including middle names. Not
                            all HR systems provide an explicit display name, so we
                            recommend falling back to `first_name` and
                            `last_name`.
                          required: []
                        job_title:
                          nullable: true
                          type: string
                          description: The employee’s job title.
                          required: []
                        work_email:
                          nullable: true
                          type: string
                          format: email
                          description: >-
                            The employee’s work email address. If the email
                            address is invalid, we will set this to `null`.
                          required: []
                        personal_email:
                          nullable: true
                          type: string
                          format: email
                          description: >-
                            The employee’s personal email address. If the email
                            address is invalid, we will set this to `null`.
                          required: []
                        mobile_phone_number:
                          nullable: true
                          type: string
                          required: []
                        ssn:
                          nullable: true
                          type: string
                          description: Social security number
                          required: []
                        tax_id:
                          nullable: true
                          type: string
                          required: []
                        gender:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - MALE
                                - FEMALE
                                - NON_BINARY
                                - NOT_SPECIFIED
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            One of 4 standardized values (`MALE`, `FEMALE`,
                            `NON_BINARY`, or `NOT_SPECIFIED`) **or** — in rare
                            cases where can't find a clear mapping — the original
                            string passed through.
                          required: []
                        ethnicity:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - WHITE
                                - ASIAN
                                - HISPANIC_LATINO
                                - HAWAIIAN
                                - NATIVE_AMERICAN
                                - BLACK_AFRICAN_AMERICAN
                                - MULTIPLE_ETHNICITIES
                                - DECLINE_TO_SPECIFY
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            One of 8 standardized values (`WHITE`, `ASIAN`,
                            `HISPANIC_LATINO`, `HAWAIIAN`, `NATIVE_AMERICAN`,
                            `BLACK_AFRICAN_AMERICAN`, `MULTIPLE_ETHNICITIES`, or
                            `DECLINE_TO_SPECIFY`) **or** — in rare cases where
                            can't find a clear mapping — the original string
                            passed through.
                          required: []
                        marital_status:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - SINGLE
                                - MARRIED
                                - DOMESTIC_PARTNERSHIP
                                - WIDOWED
                                - DIVORCED
                                - SEPARATED
                                - NOT_MARRIED
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            One of 7 standardized values (`SINGLE`, `MARRIED`,
                            `DOMESTIC_PARTNERSHIP`, `WIDOWED`, `DIVORCED`,
                            `SEPARATED`, or `NOT_MARRIED`) **or** — in rare cases
                            where can't find a clear mapping — the original string
                            passed through.
                          required: []
                        employment_status:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - ACTIVE
                                - PENDING
                                - INACTIVE
                                - LEAVE
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            The current employment status of the employee:


                            - `ACTIVE`: the employee is **actively employed**

                            - `PENDING`: the employee is **not actively employed
                            yet** (but they signed their contract or are part of
                            an onboarding process)

                            - `INACTIVE`: the employee is **not actively
                            employed** anymore

                            - `LEAVE`: the employee is still employed but
                            **currently on leave** (note that not all HR systems
                            support this status — use our absences API for
                            detailed information)


                            Please note that in rare cases, where we can't find a
                            clear mapping, the original string is passed through.
                          required: []
                        employment_type:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - FULL_TIME
                                - PART_TIME
                                - CONTRACT
                                - INTERNSHIP
                                - FREELANCE
                                - WORKING_STUDENT
                                - APPRENTICESHIP
                                - TRAINING
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            One of 8 standardized values (`FULL_TIME`,
                            `PART_TIME`, `CONTRACT`, `INTERNSHIP`, `FREELANCE`,
                            `WORKING_STUDENT`, `APPRENTICESHIP`, or `TRAINING`)
                            **or** — in rare cases where can't find a clear
                            mapping — the original string passed through.
                          required: []
                        weekly_hours:
                          nullable: true
                          type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          description: The employee's weekly working hours.
                          required: []
                        avatar:
                          nullable: true
                          type: string
                          description: >-
                            URL to the employee’s avatar. This is either the raw
                            URL from the HR system (in cases where it can be
                            requested without short-lived authentication) _or_ a
                            URL to a temporarily cached version of the file hosted
                            by Kombo. Kombo will delete the cached file after its
                            deletion in the source system.
                          required: []
                        work_location_id:
                          nullable: true
                          type: string
                          description: >-
                            The ID of the employee’s work location. Can be used to
                            retrieve the work location from the `hris_locations`
                            endpoint.
                          required: []
                        legal_entity_id:
                          nullable: true
                          type: string
                          description: The ID of the employee’s legal entity.
                          required: []
                        manager_id:
                          nullable: true
                          type: string
                          required: []
                        home_address:
                          nullable: true
                          type: object
                          properties:
                            city:
                              nullable: true
                              type: string
                              default: null
                              required: []
                            country:
                              nullable: true
                              type: string
                              default: null
                              description: >-
                                Contains the ISO2 country code if possible. If
                                not, it contains the original value.
                              required: []
                            raw:
                              nullable: true
                              type: string
                              default: null
                              description: >-
                                If we have address data, this is filled with the
                                raw address string.
                              required: []
                            state:
                              nullable: true
                              type: string
                              default: null
                              required: []
                            street_1:
                              nullable: true
                              type: string
                              default: null
                              description: >-
                                If we can parse the address data, this field
                                contains the first part of the street information.
                              required: []
                            street_2:
                              nullable: true
                              type: string
                              default: null
                              required: []
                            zip_code:
                              nullable: true
                              type: string
                              default: null
                              required: []
                          required: []
                        bank_accounts:
                          nullable: true
                          type: array
                          items:
                            type: object
                            properties:
                              iban:
                                nullable: true
                                type: string
                                default: null
                                description: >-
                                  The internationally unique IBAN identifying this
                                  account. If we detect a valid IBAN from the
                                  account number and this field would otherwise be
                                  empty, we will automatically populate this
                                  field.
                                required: []
                              bic:
                                nullable: true
                                type: string
                                default: null
                                description: >-
                                  The internationally unique BIC/SWIFT code
                                  identifying the bank behind this account. If we
                                  detect a valid BIC from the domestic bank
                                  routing number and this field would otherwise be
                                  empty, we will automatically populate this
                                  field.
                                required: []
                              account_number:
                                nullable: true
                                type: string
                                default: null
                                description: >-
                                  The bank-specific account number. Some companies
                                  use the account number field to put the IBAN
                                  here.
                                required: []
                              holder_name:
                                nullable: true
                                type: string
                                default: null
                                description: The name of the holder of this account.
                                required: []
                              bank_name:
                                nullable: true
                                type: string
                                default: null
                                description: The name of the bank behind this account.
                                required: []
                              domestic_bank_routing:
                                nullable: true
                                type: object
                                properties:
                                  number:
                                    type: string
                                    description: >-
                                      Bank routing number (e.g. DE Bankleitzahl,
                                      GB Sort Code, US ABA routing number, AU BSB
                                      code). This field is not formatted and
                                      therefore might contain delimiters (eg.
                                      01-23-45).
                                    required: []
                                  type:
                                    nullable: true
                                    type: string
                                    enum:
                                      - GB_SORT_CODE
                                      - DE_BANKLEITZAHL
                                      - US_ABA_ROUTING_TRANSIT_NUMBER
                                      - CA_ROUTING_NUMBER
                                      - AU_BSB_CODE
                                    description: >-
                                      Enum of the routing type, prefixed with the
                                      iso-3166-1-alpha-2 banks origin country. If
                                      there is uncertainty about the type, it will
                                      be set to null.
                                    required: []
                                required:
                                  - number
                                  - type
                                default: null
                            required: []
                          required: []
                        date_of_birth:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        start_date:
                          nullable: true
                          description: >-
                            The date the employee started working for the
                            organization.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        termination_date:
                          nullable: true
                          description: >-
                            The date when the employment ends. Can be in the past
                            or future.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_created_at:
                          nullable: true
                          description: >-
                            The date and time the object was created in the remote
                            system.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        changed_at:
                          description: >-
                            The timestamp when this object was last changed. This
                            value is tracked by Kombo based on changes in the
                            data.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_deleted_at:
                          nullable: true
                          description: >-
                            The date and time the object was deleted in the remote
                            system. Objects are automatically marked as deleted
                            when Kombo can't retrieve them from the remote system
                            anymore. Kombo will also anonymize entries 14 days
                            after they disappear.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        custom_fields:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          required: []
                        remote_data:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          description: >-
                            Includes the data fetched from the remote system.

                            Please be aware that including this in you scope
                            config might violate other

                            scopes that are set.


                            Remote data always has the endpoint path that we got
                            the data from as the

                            top level key. For example, it could look like: `{
                            "/companies": { ... }}`
                                
                            This is not available on all plans. Reach out to Kombo
                            if you need it.
                          required: []
                      required:
                        - id
                        - remote_id
                        - employee_number
                        - first_name
                        - last_name
                        - nationality
                        - display_full_name
                        - job_title
                        - work_email
                        - personal_email
                        - mobile_phone_number
                        - ssn
                        - tax_id
                        - gender
                        - ethnicity
                        - marital_status
                        - employment_status
                        - employment_type
                        - weekly_hours
                        - avatar
                        - work_location_id
                        - legal_entity_id
                        - manager_id
                        - home_address
                        - bank_accounts
                        - date_of_birth
                        - start_date
                        - termination_date
                        - remote_created_at
                        - changed_at
                        - remote_deleted_at
                        - custom_fields
                        - remote_data
                      example:
                        id: 26vafvWSRmbhNcxJYqjCzuJg
                        remote_id: '32'
                        employee_number: '3243422'
                        first_name: John
                        last_name: Doe
                        nationality: French
                        display_full_name: John Doe
                        job_title: Integrations Team Lead
                        work_email: john.doe@acme.com
                        personal_email: john@doe.me
                        mobile_phone_number: 801-555-4687
                        ssn: 555-32-6395
                        tax_id: 12 345 678 901
                        gender: MALE
                        ethnicity: BLACK_AFRICAN_AMERICAN
                        marital_status: MARRIED
                        employment_status: INACTIVE
                        employment_type: FULL_TIME
                        weekly_hours: 40
                        avatar: >-
                          https://resources.bamboohr.com/images/photo_person_150x150.png
                        work_location_id: 7E2gyuv6TmvtByzBxW9Sxt53
                        legal_entity_id: xB32bied320csBSsl3XWdlw33
                        manager_id: 9pf2pxBB8VX8EQMC9aipW2Bo
                        home_address:
                          city: Berlin
                          country: DE
                          raw: |-
                            Sonnenallee 63
                            12045 Berlin
                            Germany
                          state: Berlin
                          street_1: Sonnenallee 63
                          street_2: null
                          zip_code: '12045'
                        bank_accounts:
                          - account_number: '1234567890'
                            bank_name: Commerzbank
                            bic: COBADEFFXXX
                            domestic_bank_routing:
                              number: '34567890'
                              type: DE_BANKLEITZAHL
                            holder_name: John Doe
                            iban: DE12345678901234567890
                        date_of_birth: '1986-01-01T00:00:00.000Z'
                        start_date: '2020-04-07T00:00:00.000Z'
                        termination_date: '2022-05-20T00:00:00.000Z'
                        remote_created_at: '2020-04-07T12:32:01.000Z'
                        changed_at: '2022-08-07T14:01:29.196Z'
                        remote_deleted_at: null
                        custom_fields: {}
                        remote_data: null
                    - type: object
                      properties:
                        employments:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                required: []
                              remote_id:
                                nullable: true
                                type: string
                                required: []
                              employee_id:
                                type: string
                                required: []
                              job_title:
                                nullable: true
                                type: string
                                description: >-
                                  **(⚠️ Deprecated)** We now provide the
                                  `job_title` directly on the employee model.
                                required: []
                              pay_rate:
                                nullable: true
                                type: number
                                format: double
                                minimum: 5.e-324
                                exclusiveMinimum: false
                                maximum: 1.7976931348623157e+308
                                exclusiveMaximum: false
                                required: []
                              pay_period:
                                nullable: true
                                oneOf:
                                  - type: string
                                    enum:
                                      - HOUR
                                      - DAY
                                      - WEEK
                                      - TWO_WEEKS
                                      - HALF_MONTH
                                      - MONTH
                                      - TWO_MONTHS
                                      - QUARTER
                                      - HALF_YEAR
                                      - YEAR
                                    required: []
                                  - type: string
                                    description: >-
                                      If we can't find a clear mapping: The
                                      original string passed through.
                                    required: []
                                description: >-
                                  One of 10 standardized values (`HOUR`, `DAY`,
                                  `WEEK`, `TWO_WEEKS`, `HALF_MONTH`, `MONTH`,
                                  `TWO_MONTHS`, `QUARTER`, `HALF_YEAR`, or `YEAR`)
                                  **or** — in rare cases where can't find a clear
                                  mapping — the original string passed through.
                                required: []
                              pay_frequency:
                                nullable: true
                                oneOf:
                                  - type: string
                                    enum:
                                      - DAILY
                                      - WEEKLY
                                      - BIWEEKLY
                                      - MONTHLY
                                      - SEMIMONTHLY
                                      - QUARTERLY
                                      - SEMIANNUALLY
                                      - ANNUALLY
                                      - PRO_RATA
                                    required: []
                                  - type: string
                                    description: >-
                                      If we can't find a clear mapping: The
                                      original string passed through.
                                    required: []
                                description: >-
                                  One of 9 standardized values (`DAILY`, `WEEKLY`,
                                  `BIWEEKLY`, `MONTHLY`, `SEMIMONTHLY`,
                                  `QUARTERLY`, `SEMIANNUALLY`, `ANNUALLY`, or
                                  `PRO_RATA`) **or** — in rare cases where can't
                                  find a clear mapping — the original string
                                  passed through.
                                required: []
                              employment_type:
                                nullable: true
                                oneOf:
                                  - type: string
                                    enum:
                                      - FULL_TIME
                                      - PART_TIME
                                      - CONTRACT
                                      - INTERNSHIP
                                      - FREELANCE
                                      - WORKING_STUDENT
                                      - APPRENTICESHIP
                                      - TRAINING
                                    required: []
                                  - type: string
                                    description: >-
                                      If we can't find a clear mapping: The
                                      original string passed through.
                                    required: []
                                description: >-
                                  One of 8 standardized values (`FULL_TIME`,
                                  `PART_TIME`, `CONTRACT`, `INTERNSHIP`,
                                  `FREELANCE`, `WORKING_STUDENT`,
                                  `APPRENTICESHIP`, or `TRAINING`) **or** — in
                                  rare cases where can't find a clear mapping —
                                  the original string passed through.
                                required: []
                              pay_currency:
                                nullable: true
                                type: string
                                description: >-
                                  Pay currency usually returned in [ISO 4217
                                  currency
                                  codes](https://www.iso.org/iso-4217-currency-codes.html).
                                required: []
                              effective_date:
                                nullable: true
                                description: YYYY-MM-DDTHH:mm:ss.sssZ
                                type: string
                                format: date-time
                                externalDocs:
                                  url: >-
                                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                                required: []
                              changed_at:
                                description: YYYY-MM-DDTHH:mm:ss.sssZ
                                type: string
                                format: date-time
                                externalDocs:
                                  url: >-
                                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                                required: []
                              remote_deleted_at:
                                nullable: true
                                description: YYYY-MM-DDTHH:mm:ss.sssZ
                                type: string
                                format: date-time
                                externalDocs:
                                  url: >-
                                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                                required: []
                              remote_data:
                                nullable: true
                                type: object
                                additionalProperties:
                                  format: any
                                description: >-
                                  Includes the data fetched from the remote
                                  system.

                                  Please be aware that including this in you scope
                                  config might violate other

                                  scopes that are set.


                                  Remote data always has the endpoint path that we
                                  got the data from as the

                                  top level key. For example, it could look like:
                                  `{ "/companies": { ... }}`
                                      
                                  This is not available on all plans. Reach out to
                                  Kombo if you need it.
                                required: []
                              custom_fields:
                                nullable: true
                                type: object
                                additionalProperties:
                                  format: any
                                required: []
                            required:
                              - id
                              - remote_id
                              - employee_id
                              - job_title
                              - pay_rate
                              - pay_period
                              - pay_frequency
                              - employment_type
                              - pay_currency
                              - effective_date
                              - changed_at
                              - remote_deleted_at
                              - remote_data
                              - custom_fields
                            example:
                              id: 12vpXR7BeqYNWDShXRgsonnm
                              remote_id: '859'
                              employee_id: 8Xk99QfVKYA6vfEafEUBdEPJ
                              job_title: Social Media Marketer
                              pay_rate: 85000
                              pay_period: YEAR
                              pay_frequency: SEMIMONTHLY
                              employment_type: FULL_TIME
                              pay_currency: EUR
                              effective_date: '2021-01-30T00:00:00.000Z'
                              changed_at: '2022-08-07T14:01:29.196Z'
                              remote_deleted_at: null
                              remote_data: null
                              custom_fields: {}
                          required: []
                        time_off_balances:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                required: []
                              remote_id:
                                nullable: true
                                type: string
                                required: []
                              employee_id:
                                type: string
                                required: []
                              type_id:
                                type: string
                                required: []
                              balance:
                                nullable: true
                                type: number
                                format: double
                                minimum: 5.e-324
                                exclusiveMinimum: false
                                maximum: 1.7976931348623157e+308
                                exclusiveMaximum: false
                                description: The amount time available to the employee.
                                required: []
                              balance_unit:
                                nullable: true
                                type: string
                                enum:
                                  - HOURS
                                  - DAYS
                                required: []
                              changed_at:
                                description: YYYY-MM-DDTHH:mm:ss.sssZ
                                type: string
                                format: date-time
                                externalDocs:
                                  url: >-
                                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                                required: []
                              remote_deleted_at:
                                nullable: true
                                description: YYYY-MM-DDTHH:mm:ss.sssZ
                                type: string
                                format: date-time
                                externalDocs:
                                  url: >-
                                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                                required: []
                              used:
                                nullable: true
                                type: number
                                format: double
                                minimum: 5.e-324
                                exclusiveMinimum: false
                                maximum: 1.7976931348623157e+308
                                exclusiveMaximum: false
                                required: []
                              used_unit:
                                nullable: true
                                type: string
                                enum:
                                  - HOURS
                                  - DAYS
                                required: []
                              remote_data:
                                nullable: true
                                type: object
                                additionalProperties:
                                  format: any
                                description: >-
                                  Includes the data fetched from the remote
                                  system.

                                  Please be aware that including this in you scope
                                  config might violate other

                                  scopes that are set.


                                  Remote data always has the endpoint path that we
                                  got the data from as the

                                  top level key. For example, it could look like:
                                  `{ "/companies": { ... }}`
                                      
                                  This is not available on all plans. Reach out to
                                  Kombo if you need it.
                                required: []
                            required:
                              - id
                              - remote_id
                              - employee_id
                              - type_id
                              - balance
                              - balance_unit
                              - changed_at
                              - remote_deleted_at
                              - used
                              - used_unit
                              - remote_data
                            example:
                              id: FuyRuk5NqP3qTcThED3ymTuE
                              remote_id: '124123'
                              employee_id: 2Up4ZCvq1bFVzmzXG6EWzV3j
                              type_id: BQJaBxRCiqN46G27VTegvkEr
                              balance: 14
                              balance_unit: DAYS
                              changed_at: '2022-08-07T14:01:29.196Z'
                              remote_deleted_at: null
                              used: 3
                              used_unit: DAYS
                              remote_data: null
                          required: []
                        manager:
                          nullable: true
                          type: object
                          properties:
                            first_name:
                              nullable: true
                              type: string
                              description: The employee’s first name.
                              required: []
                            last_name:
                              nullable: true
                              type: string
                              description: The employee’s last name.
                              required: []
                            display_full_name:
                              nullable: true
                              type: string
                              description: >-
                                The employee’s full name, including middle names.
                                Not all HR systems provide an explicit display
                                name, so we recommend falling back to `first_name`
                                and `last_name`.
                              required: []
                            id:
                              type: string
                              description: >-
                                The globally unique ID of this object generated by
                                Kombo. We recommend using this as a stable primary
                                key for syncing.
                              required: []
                            work_email:
                              nullable: true
                              type: string
                              format: email
                              description: >-
                                The employee’s work email address. If the email
                                address is invalid, we will set this to `null`.
                              required: []
                            remote_id:
                              type: string
                              description: >-
                                The raw ID of the object in the remote system. We
                                don't recommend using this as a primary key on
                                your side as it might sometimes be compromised of
                                multiple identifiers if a system doesn't provide a
                                clear primary key.
                              required: []
                          required:
                            - first_name
                            - last_name
                            - display_full_name
                            - id
                            - work_email
                            - remote_id
                          example:
                            first_name: John
                            last_name: Doe
                            display_full_name: John Doe
                            id: 26vafvWSRmbhNcxJYqjCzuJg
                            work_email: john.doe@acme.com
                            remote_id: '32'
                        groups:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                required: []
                              remote_id:
                                type: string
                                required: []
                              name:
                                nullable: true
                                type: string
                                required: []
                              type:
                                nullable: true
                                type: string
                                enum:
                                  - DEPARTMENT
                                  - TEAM
                                  - COST_CENTER
                                description: >-
                                  Type of the group. Can be any of `DEPARTMENT`,
                                  `TEAM`, and `COST_CENTER`
                                required: []
                            required:
                              - id
                              - remote_id
                              - name
                              - type
                            example:
                              id: 4B9bKBpX5tnwjiG93TAqF7ci
                              remote_id: '49'
                              name: Customer Success
                              type: TEAM
                          required: []
                        legal_entity:
                          nullable: true
                          type: object
                          properties:
                            id:
                              type: string
                              description: >-
                                The globally unique ID of this object generated by
                                Kombo. We recommend using this as a stable primary
                                key for syncing.
                              required: []
                            remote_id:
                              nullable: true
                              type: string
                              description: >-
                                The raw ID of the object in the remote system. We
                                don't recommend using this as a primary key on
                                your side as it might sometimes be compromised of
                                multiple identifiers if a system doesn't provide a
                                clear primary key.
                              required: []
                            name:
                              nullable: true
                              type: string
                              required: []
                            address:
                              nullable: true
                              type: object
                              properties:
                                city:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                                country:
                                  nullable: true
                                  type: string
                                  default: null
                                  description: >-
                                    Contains the ISO2 country code if possible. If
                                    not, it contains the original value.
                                  required: []
                                raw:
                                  nullable: true
                                  type: string
                                  default: null
                                  description: >-
                                    If we have address data, this is filled with
                                    the raw address string.
                                  required: []
                                state:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                                street_1:
                                  nullable: true
                                  type: string
                                  default: null
                                  description: >-
                                    If we can parse the address data, this field
                                    contains the first part of the street
                                    information.
                                  required: []
                                street_2:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                                zip_code:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                              required: []
                          required:
                            - id
                            - remote_id
                            - name
                            - address
                          example:
                            id: 4B9bKBpX5tnwjiG93TAqF7ci
                            remote_id: '49'
                            name: ACME Inc.
                            address:
                              city: Berlin
                              country: DE
                              raw: |-
                                Sonnenallee 63
                                12045 Berlin, Berlin
                                Germany
                              state: Berlin
                              street_1: Sonnenallee 63
                              street_2: null
                              zip_code: '12045'
                        teams:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                required: []
                              remote_id:
                                type: string
                                required: []
                              name:
                                nullable: true
                                type: string
                                required: []
                              type:
                                nullable: true
                                type: string
                                enum:
                                  - DEPARTMENT
                                  - TEAM
                                  - COST_CENTER
                                description: >-
                                  Type of the group. Can be any of `DEPARTMENT`,
                                  `TEAM`, and `COST_CENTER`
                                required: []
                            required:
                              - id
                              - remote_id
                              - name
                              - type
                            example:
                              id: 4B9bKBpX5tnwjiG93TAqF7ci
                              remote_id: '49'
                              name: Customer Success
                              type: TEAM
                          description: >-
                            **(⚠️ Deprecated - Please use `groups` instead.  It
                            includes the same data and the naming is less
                            confusing.)** Maintained field for backwards
                            compatibility.
                          required: []
                        work_location:
                          nullable: true
                          type: object
                          properties:
                            id:
                              type: string
                              required: []
                            remote_id:
                              nullable: true
                              type: string
                              required: []
                            name:
                              nullable: true
                              type: string
                              required: []
                            address:
                              nullable: true
                              type: object
                              properties:
                                city:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                                country:
                                  nullable: true
                                  type: string
                                  default: null
                                  description: >-
                                    Contains the ISO2 country code if possible. If
                                    not, it contains the original value.
                                  required: []
                                raw:
                                  nullable: true
                                  type: string
                                  default: null
                                  description: >-
                                    If we have address data, this is filled with
                                    the raw address string.
                                  required: []
                                state:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                                street_1:
                                  nullable: true
                                  type: string
                                  default: null
                                  description: >-
                                    If we can parse the address data, this field
                                    contains the first part of the street
                                    information.
                                  required: []
                                street_2:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                                zip_code:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                              required: []
                            type:
                              nullable: true
                              type: string
                              required: []
                            changed_at:
                              description: YYYY-MM-DDTHH:mm:ss.sssZ
                              type: string
                              format: date-time
                              externalDocs:
                                url: >-
                                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                              required: []
                            remote_deleted_at:
                              nullable: true
                              description: YYYY-MM-DDTHH:mm:ss.sssZ
                              type: string
                              format: date-time
                              externalDocs:
                                url: >-
                                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                              required: []
                            remote_data:
                              nullable: true
                              type: object
                              additionalProperties:
                                format: any
                              description: >-
                                Includes the data fetched from the remote system.

                                Please be aware that including this in you scope
                                config might violate other

                                scopes that are set.


                                Remote data always has the endpoint path that we
                                got the data from as the

                                top level key. For example, it could look like: `{
                                "/companies": { ... }}`
                                    
                                This is not available on all plans. Reach out to
                                Kombo if you need it.
                              required: []
                          required:
                            - id
                            - remote_id
                            - name
                            - address
                            - type
                            - changed_at
                            - remote_deleted_at
                            - remote_data
                          example:
                            id: 22st2Ji8XpncEYEak8mvQgQF
                            remote_id: '1348'
                            name: Kombo HQ
                            address:
                              city: Berlin
                              country: DE
                              raw: |-
                                Sonnenallee 63
                                12045 Berlin, Berlin
                                Germany
                              state: Berlin
                              street_1: Sonnenallee 63
                              street_2: null
                              zip_code: '12045'
                            type: OFFICE
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: '2022-08-07T14:01:29.196Z'
                            remote_data: null
                      required:
                        - employments
                        - time_off_balances
                        - manager
                        - groups
                        - legal_entity
                        - teams
                        - work_location
                  required: []
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 26vafvWSRmbhNcxJYqjCzuJg
                  remote_id: '32'
                  employee_number: '3243422'
                  first_name: John
                  last_name: Doe
                  nationality: French
                  display_full_name: John Doe
                  job_title: Integrations Team Lead
                  work_email: john.doe@acme.com
                  personal_email: john@doe.me
                  mobile_phone_number: 801-555-4687
                  ssn: 555-32-6395
                  tax_id: 12 345 678 901
                  gender: MALE
                  ethnicity: BLACK_AFRICAN_AMERICAN
                  marital_status: MARRIED
                  employment_status: INACTIVE
                  employment_type: FULL_TIME
                  weekly_hours: 40
                  avatar: https://resources.bamboohr.com/images/photo_person_150x150.png
                  work_location_id: 7E2gyuv6TmvtByzBxW9Sxt53
                  legal_entity_id: xB32bied320csBSsl3XWdlw33
                  manager_id: 9pf2pxBB8VX8EQMC9aipW2Bo
                  home_address:
                    city: Berlin
                    country: DE
                    raw: |-
                      Sonnenallee 63
                      12045 Berlin
                      Germany
                    state: Berlin
                    street_1: Sonnenallee 63
                    street_2: null
                    zip_code: '12045'
                  bank_accounts:
                    - account_number: '1234567890'
                      bank_name: Commerzbank
                      bic: COBADEFFXXX
                      domestic_bank_routing:
                        number: '34567890'
                        type: DE_BANKLEITZAHL
                      holder_name: John Doe
                      iban: DE12345678901234567890
                  date_of_birth: '1986-01-01T00:00:00.000Z'
                  start_date: '2020-04-07T00:00:00.000Z'
                  termination_date: '2022-05-20T00:00:00.000Z'
                  remote_created_at: '2020-04-07T12:32:01.000Z'
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
                  custom_fields: {}
                  remote_data: null
                  employments:
                    - id: 12vpXR7BeqYNWDShXRgsonnm
                      remote_id: '859'
                      employee_id: 8Xk99QfVKYA6vfEafEUBdEPJ
                      job_title: Social Media Marketer
                      pay_rate: 85000
                      pay_period: YEAR
                      pay_frequency: SEMIMONTHLY
                      employment_type: FULL_TIME
                      pay_currency: EUR
                      effective_date: '2021-01-30T00:00:00.000Z'
                      changed_at: '2022-08-07T14:01:29.196Z'
                      remote_deleted_at: null
                      remote_data: null
                      custom_fields: {}
                  time_off_balances:
                    - id: FuyRuk5NqP3qTcThED3ymTuE
                      remote_id: '124123'
                      employee_id: 2Up4ZCvq1bFVzmzXG6EWzV3j
                      type_id: BQJaBxRCiqN46G27VTegvkEr
                      balance: 14
                      balance_unit: DAYS
                      changed_at: '2022-08-07T14:01:29.196Z'
                      remote_deleted_at: null
                      used: 3
                      used_unit: DAYS
                      remote_data: null
                  manager:
                    first_name: John
                    last_name: Doe
                    display_full_name: John Doe
                    id: 26vafvWSRmbhNcxJYqjCzuJg
                    work_email: john.doe@acme.com
                    remote_id: '32'
                  groups:
                    - id: 4B9bKBpX5tnwjiG93TAqF7ci
                      remote_id: '49'
                      name: Customer Success
                      type: TEAM
                  legal_entity:
                    id: 4B9bKBpX5tnwjiG93TAqF7ci
                    remote_id: '49'
                    name: ACME Inc.
                    address:
                      city: Berlin
                      country: DE
                      raw: |-
                        Sonnenallee 63
                        12045 Berlin, Berlin
                        Germany
                      state: Berlin
                      street_1: Sonnenallee 63
                      street_2: null
                      zip_code: '12045'
                  teams:
                    - id: 4B9bKBpX5tnwjiG93TAqF7ci
                      remote_id: '49'
                      name: Customer Success
                      type: TEAM
                  work_location:
                    id: 22st2Ji8XpncEYEak8mvQgQF
                    remote_id: '1348'
                    name: Kombo HQ
                    address:
                      city: Berlin
                      country: DE
                      raw: |-
                        Sonnenallee 63
                        12045 Berlin, Berlin
                        Germany
                      state: Berlin
                      street_1: Sonnenallee 63
                      street_2: null
                      zip_code: '12045'
                    type: OFFICE
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: '2022-08-07T14:01:29.196Z'
                    remote_data: null
        required:
          - status
          - data
      GetHrisEmployeesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostHrisEmployeesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              id:
                type: string
                description: >-
                  The globally unique ID of this object generated by Kombo. We
                  recommend using this as a stable primary key for syncing.
                required: []
              remote_id:
                type: string
                description: >-
                  The raw ID of the object in the remote system. We don't
                  recommend using this as a primary key on your side as it might
                  sometimes be compromised of multiple identifiers if a system
                  doesn't provide a clear primary key.
                required: []
              employee_number:
                nullable: true
                type: string
                description: An optional, organization-internal employee number.
                required: []
              first_name:
                nullable: true
                type: string
                description: The employee’s first name.
                required: []
              last_name:
                nullable: true
                type: string
                description: The employee’s last name.
                required: []
              nationality:
                nullable: true
                type: string
                description: The employee’s nationality.
                required: []
              display_full_name:
                nullable: true
                type: string
                description: >-
                  The employee’s full name, including middle names. Not all HR
                  systems provide an explicit display name, so we recommend
                  falling back to `first_name` and `last_name`.
                required: []
              job_title:
                nullable: true
                type: string
                description: The employee’s job title.
                required: []
              work_email:
                nullable: true
                type: string
                format: email
                description: >-
                  The employee’s work email address. If the email address is
                  invalid, we will set this to `null`.
                required: []
              personal_email:
                nullable: true
                type: string
                format: email
                description: >-
                  The employee’s personal email address. If the email address is
                  invalid, we will set this to `null`.
                required: []
              mobile_phone_number:
                nullable: true
                type: string
                required: []
              ssn:
                nullable: true
                type: string
                description: Social security number
                required: []
              tax_id:
                nullable: true
                type: string
                required: []
              gender:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - MALE
                      - FEMALE
                      - NON_BINARY
                      - NOT_SPECIFIED
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 4 standardized values (`MALE`, `FEMALE`, `NON_BINARY`, or
                  `NOT_SPECIFIED`) **or** — in rare cases where can't find a clear
                  mapping — the original string passed through.
                required: []
              ethnicity:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - WHITE
                      - ASIAN
                      - HISPANIC_LATINO
                      - HAWAIIAN
                      - NATIVE_AMERICAN
                      - BLACK_AFRICAN_AMERICAN
                      - MULTIPLE_ETHNICITIES
                      - DECLINE_TO_SPECIFY
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 8 standardized values (`WHITE`, `ASIAN`,
                  `HISPANIC_LATINO`, `HAWAIIAN`, `NATIVE_AMERICAN`,
                  `BLACK_AFRICAN_AMERICAN`, `MULTIPLE_ETHNICITIES`, or
                  `DECLINE_TO_SPECIFY`) **or** — in rare cases where can't find a
                  clear mapping — the original string passed through.
                required: []
              marital_status:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - SINGLE
                      - MARRIED
                      - DOMESTIC_PARTNERSHIP
                      - WIDOWED
                      - DIVORCED
                      - SEPARATED
                      - NOT_MARRIED
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 7 standardized values (`SINGLE`, `MARRIED`,
                  `DOMESTIC_PARTNERSHIP`, `WIDOWED`, `DIVORCED`, `SEPARATED`, or
                  `NOT_MARRIED`) **or** — in rare cases where can't find a clear
                  mapping — the original string passed through.
                required: []
              employment_status:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - ACTIVE
                      - PENDING
                      - INACTIVE
                      - LEAVE
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  The current employment status of the employee:


                  - `ACTIVE`: the employee is **actively employed**

                  - `PENDING`: the employee is **not actively employed yet** (but
                  they signed their contract or are part of an onboarding process)

                  - `INACTIVE`: the employee is **not actively employed** anymore

                  - `LEAVE`: the employee is still employed but **currently on
                  leave** (note that not all HR systems support this status — use
                  our absences API for detailed information)


                  Please note that in rare cases, where we can't find a clear
                  mapping, the original string is passed through.
                required: []
              employment_type:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - FULL_TIME
                      - PART_TIME
                      - CONTRACT
                      - INTERNSHIP
                      - FREELANCE
                      - WORKING_STUDENT
                      - APPRENTICESHIP
                      - TRAINING
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 8 standardized values (`FULL_TIME`, `PART_TIME`,
                  `CONTRACT`, `INTERNSHIP`, `FREELANCE`, `WORKING_STUDENT`,
                  `APPRENTICESHIP`, or `TRAINING`) **or** — in rare cases where
                  can't find a clear mapping — the original string passed through.
                required: []
              weekly_hours:
                nullable: true
                type: number
                format: double
                minimum: 5.e-324
                exclusiveMinimum: false
                maximum: 1.7976931348623157e+308
                exclusiveMaximum: false
                description: The employee's weekly working hours.
                required: []
              avatar:
                nullable: true
                type: string
                description: >-
                  URL to the employee’s avatar. This is either the raw URL from
                  the HR system (in cases where it can be requested without
                  short-lived authentication) _or_ a URL to a temporarily cached
                  version of the file hosted by Kombo. Kombo will delete the
                  cached file after its deletion in the source system.
                required: []
              work_location_id:
                nullable: true
                type: string
                description: >-
                  The ID of the employee’s work location. Can be used to retrieve
                  the work location from the `hris_locations` endpoint.
                required: []
              legal_entity_id:
                nullable: true
                type: string
                description: The ID of the employee’s legal entity.
                required: []
              manager_id:
                nullable: true
                type: string
                required: []
              home_address:
                nullable: true
                type: object
                properties:
                  city:
                    nullable: true
                    type: string
                    default: null
                    required: []
                  country:
                    nullable: true
                    type: string
                    default: null
                    description: >-
                      Contains the ISO2 country code if possible. If not, it
                      contains the original value.
                    required: []
                  raw:
                    nullable: true
                    type: string
                    default: null
                    description: >-
                      If we have address data, this is filled with the raw address
                      string.
                    required: []
                  state:
                    nullable: true
                    type: string
                    default: null
                    required: []
                  street_1:
                    nullable: true
                    type: string
                    default: null
                    description: >-
                      If we can parse the address data, this field contains the
                      first part of the street information.
                    required: []
                  street_2:
                    nullable: true
                    type: string
                    default: null
                    required: []
                  zip_code:
                    nullable: true
                    type: string
                    default: null
                    required: []
                required: []
              bank_accounts:
                nullable: true
                type: array
                items:
                  type: object
                  properties:
                    iban:
                      nullable: true
                      type: string
                      default: null
                      description: >-
                        The internationally unique IBAN identifying this account.
                        If we detect a valid IBAN from the account number and this
                        field would otherwise be empty, we will automatically
                        populate this field.
                      required: []
                    bic:
                      nullable: true
                      type: string
                      default: null
                      description: >-
                        The internationally unique BIC/SWIFT code identifying the
                        bank behind this account. If we detect a valid BIC from
                        the domestic bank routing number and this field would
                        otherwise be empty, we will automatically populate this
                        field.
                      required: []
                    account_number:
                      nullable: true
                      type: string
                      default: null
                      description: >-
                        The bank-specific account number. Some companies use the
                        account number field to put the IBAN here.
                      required: []
                    holder_name:
                      nullable: true
                      type: string
                      default: null
                      description: The name of the holder of this account.
                      required: []
                    bank_name:
                      nullable: true
                      type: string
                      default: null
                      description: The name of the bank behind this account.
                      required: []
                    domestic_bank_routing:
                      nullable: true
                      type: object
                      properties:
                        number:
                          type: string
                          description: >-
                            Bank routing number (e.g. DE Bankleitzahl, GB Sort
                            Code, US ABA routing number, AU BSB code). This field
                            is not formatted and therefore might contain
                            delimiters (eg. 01-23-45).
                          required: []
                        type:
                          nullable: true
                          type: string
                          enum:
                            - GB_SORT_CODE
                            - DE_BANKLEITZAHL
                            - US_ABA_ROUTING_TRANSIT_NUMBER
                            - CA_ROUTING_NUMBER
                            - AU_BSB_CODE
                          description: >-
                            Enum of the routing type, prefixed with the
                            iso-3166-1-alpha-2 banks origin country. If there is
                            uncertainty about the type, it will be set to null.
                          required: []
                      required:
                        - number
                        - type
                      default: null
                  required: []
                required: []
              date_of_birth:
                nullable: true
                description: YYYY-MM-DDTHH:mm:ss.sssZ
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              start_date:
                nullable: true
                description: The date the employee started working for the organization.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              termination_date:
                nullable: true
                description: The date when the employment ends. Can be in the past or future.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              remote_created_at:
                nullable: true
                description: The date and time the object was created in the remote system.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              changed_at:
                description: >-
                  The timestamp when this object was last changed. This value is
                  tracked by Kombo based on changes in the data.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              remote_deleted_at:
                nullable: true
                description: >-
                  The date and time the object was deleted in the remote system.
                  Objects are automatically marked as deleted when Kombo can't
                  retrieve them from the remote system anymore. Kombo will also
                  anonymize entries 14 days after they disappear.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              custom_fields:
                nullable: true
                type: object
                additionalProperties:
                  format: any
                required: []
              remote_data:
                nullable: true
                type: object
                additionalProperties:
                  format: any
                description: >-
                  Includes the data fetched from the remote system.

                  Please be aware that including this in you scope config might
                  violate other

                  scopes that are set.


                  Remote data always has the endpoint path that we got the data
                  from as the

                  top level key. For example, it could look like: `{ "/companies":
                  { ... }}`
                      
                  This is not available on all plans. Reach out to Kombo if you
                  need it.
                required: []
            required:
              - id
              - remote_id
              - employee_number
              - first_name
              - last_name
              - nationality
              - display_full_name
              - job_title
              - work_email
              - personal_email
              - mobile_phone_number
              - ssn
              - tax_id
              - gender
              - ethnicity
              - marital_status
              - employment_status
              - employment_type
              - weekly_hours
              - avatar
              - work_location_id
              - legal_entity_id
              - manager_id
              - home_address
              - bank_accounts
              - date_of_birth
              - start_date
              - termination_date
              - remote_created_at
              - changed_at
              - remote_deleted_at
              - custom_fields
              - remote_data
            example:
              id: 26vafvWSRmbhNcxJYqjCzuJg
              remote_id: '32'
              employee_number: '3243422'
              first_name: John
              last_name: Doe
              nationality: French
              display_full_name: John Doe
              job_title: Integrations Team Lead
              work_email: john.doe@acme.com
              personal_email: john@doe.me
              mobile_phone_number: 801-555-4687
              ssn: 555-32-6395
              tax_id: 12 345 678 901
              gender: MALE
              ethnicity: BLACK_AFRICAN_AMERICAN
              marital_status: MARRIED
              employment_status: INACTIVE
              employment_type: FULL_TIME
              weekly_hours: 40
              avatar: https://resources.bamboohr.com/images/photo_person_150x150.png
              work_location_id: 7E2gyuv6TmvtByzBxW9Sxt53
              legal_entity_id: xB32bied320csBSsl3XWdlw33
              manager_id: 9pf2pxBB8VX8EQMC9aipW2Bo
              home_address:
                city: Berlin
                country: DE
                raw: |-
                  Sonnenallee 63
                  12045 Berlin
                  Germany
                state: Berlin
                street_1: Sonnenallee 63
                street_2: null
                zip_code: '12045'
              bank_accounts:
                - account_number: '1234567890'
                  bank_name: Commerzbank
                  bic: COBADEFFXXX
                  domestic_bank_routing:
                    number: '34567890'
                    type: DE_BANKLEITZAHL
                  holder_name: John Doe
                  iban: DE12345678901234567890
              date_of_birth: '1986-01-01T00:00:00.000Z'
              start_date: '2020-04-07T00:00:00.000Z'
              termination_date: '2022-05-20T00:00:00.000Z'
              remote_created_at: '2020-04-07T12:32:01.000Z'
              changed_at: '2022-08-07T14:01:29.196Z'
              remote_deleted_at: null
              custom_fields: {}
              remote_data: null
        required:
          - status
          - data
      PostHrisEmployeesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostHrisEmployeesRequestBody:
        allOf:
          - type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              work_email:
                type: string
                format: email
                description: >-
                  The email address of the employee to be created. For tools where
                  the personal email address is required, we map this input to the
                  personal email. This is documented on a per-tool basis.
              gender:
                type: string
                enum:
                  - MALE
                  - FEMALE
                  - NON_BINARY
                  - NOT_SPECIFIED
                description: The gender of the employee.
              job_title:
                type: string
                description: Title of the position this person is working in.
              home_address:
                type: object
                properties:
                  street_1:
                    type: string
                  street_2:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  zip_code:
                    type: string
                  country:
                    type: string
                    pattern: /^[A-Z]{2}$/
                    description: >-
                      The uppercase two-letter ISO country (e.g., `DE`) of the
                      employee's home address. For systems that have other formats
                      than `ISO 3166-1 alpha-2` codes, Kombo transforms the ISO
                      Codes to the appropriate value.
                description: The employee's home address.
              date_of_birth:
                description: >-
                  The employee's date of birth. This is a plain date (i.e.,
                  `yyyy-MM-dd`), all time information is discarded.
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              mobile_phone_number:
                type: string
              nationality:
                type: string
                pattern: /^[A-Z]{2}$/
                description: >-
                  The uppercase two-letter ISO country (e.g., `DE`) of the
                  employee's nationality. For systems that have other formats than
                  `ISO 3166-1 alpha-2` codes, Kombo transforms the ISO Codes to
                  the appropriate value.
              start_date:
                description: >-
                  Start date of the employee. Also considered to be the hire date.
                  This is a plain date (i.e., `yyyy-MM-dd`), all time information
                  is discarded.
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              remote_fields:
                type: object
                properties:
                  humaans:
                    type: object
                    properties:
                      employee:
                        type: object
                        additionalProperties:
                          format: any
                        description: >-
                          Fields that we will pass through to Humaans `Employee`
                          object.
                    description: Fields specific to Humaans.
                  silae:
                    type: object
                    properties:
                      siret:
                        type: string
                        description: >-
                          The siret of the company. The siret can be found as the
                          remote ID of a Silae legal entity.
                      employee:
                        type: object
                        additionalProperties:
                          format: any
                        description: >-
                          Fields that we will passed through to Silae `Employee`
                          object.
                      employment:
                        type: object
                        additionalProperties:
                          format: any
                        description: >-
                          Fields that we will passed through to Silae `Employment`
                          object.
                    description: Fields specific to Silae.
                required:
                  - silae
                description: >-
                  Additional fields that we will pass through to specific HRIS
                  systems.
            required:
              - first_name
              - last_name
              - work_email
            example:
              first_name: John
              last_name: Doe
              work_email: john.doe@acme.com
              gender: MALE
              date_of_birth: '1986-01-01'
              start_date: '2020-04-07'
              job_title: Integrations Team Lead
              home_address:
                city: Berlin
                country: DE
                state: Berlin
                street_1: Sonnenallee 63
                zip_code: '12045'
      PatchHrisEmployeesEmployeeIdParameterEmployeeId:
        type: string
        description: >-
          ID of the employee that should be updated. You can use their Kombo `id`
          or their ID in the remote system by prefixing it with `remote:` (e.g.,
          `remote:12312`)
        required: []
      PatchHrisEmployeesEmployeeIdSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              id:
                type: string
                description: >-
                  The globally unique ID of this object generated by Kombo. We
                  recommend using this as a stable primary key for syncing.
                required: []
              remote_id:
                type: string
                description: >-
                  The raw ID of the object in the remote system. We don't
                  recommend using this as a primary key on your side as it might
                  sometimes be compromised of multiple identifiers if a system
                  doesn't provide a clear primary key.
                required: []
              employee_number:
                nullable: true
                type: string
                description: An optional, organization-internal employee number.
                required: []
              first_name:
                nullable: true
                type: string
                description: The employee’s first name.
                required: []
              last_name:
                nullable: true
                type: string
                description: The employee’s last name.
                required: []
              nationality:
                nullable: true
                type: string
                description: The employee’s nationality.
                required: []
              display_full_name:
                nullable: true
                type: string
                description: >-
                  The employee’s full name, including middle names. Not all HR
                  systems provide an explicit display name, so we recommend
                  falling back to `first_name` and `last_name`.
                required: []
              job_title:
                nullable: true
                type: string
                description: The employee’s job title.
                required: []
              work_email:
                nullable: true
                type: string
                format: email
                description: >-
                  The employee’s work email address. If the email address is
                  invalid, we will set this to `null`.
                required: []
              personal_email:
                nullable: true
                type: string
                format: email
                description: >-
                  The employee’s personal email address. If the email address is
                  invalid, we will set this to `null`.
                required: []
              mobile_phone_number:
                nullable: true
                type: string
                required: []
              ssn:
                nullable: true
                type: string
                description: Social security number
                required: []
              tax_id:
                nullable: true
                type: string
                required: []
              gender:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - MALE
                      - FEMALE
                      - NON_BINARY
                      - NOT_SPECIFIED
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 4 standardized values (`MALE`, `FEMALE`, `NON_BINARY`, or
                  `NOT_SPECIFIED`) **or** — in rare cases where can't find a clear
                  mapping — the original string passed through.
                required: []
              ethnicity:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - WHITE
                      - ASIAN
                      - HISPANIC_LATINO
                      - HAWAIIAN
                      - NATIVE_AMERICAN
                      - BLACK_AFRICAN_AMERICAN
                      - MULTIPLE_ETHNICITIES
                      - DECLINE_TO_SPECIFY
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 8 standardized values (`WHITE`, `ASIAN`,
                  `HISPANIC_LATINO`, `HAWAIIAN`, `NATIVE_AMERICAN`,
                  `BLACK_AFRICAN_AMERICAN`, `MULTIPLE_ETHNICITIES`, or
                  `DECLINE_TO_SPECIFY`) **or** — in rare cases where can't find a
                  clear mapping — the original string passed through.
                required: []
              marital_status:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - SINGLE
                      - MARRIED
                      - DOMESTIC_PARTNERSHIP
                      - WIDOWED
                      - DIVORCED
                      - SEPARATED
                      - NOT_MARRIED
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 7 standardized values (`SINGLE`, `MARRIED`,
                  `DOMESTIC_PARTNERSHIP`, `WIDOWED`, `DIVORCED`, `SEPARATED`, or
                  `NOT_MARRIED`) **or** — in rare cases where can't find a clear
                  mapping — the original string passed through.
                required: []
              employment_status:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - ACTIVE
                      - PENDING
                      - INACTIVE
                      - LEAVE
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  The current employment status of the employee:


                  - `ACTIVE`: the employee is **actively employed**

                  - `PENDING`: the employee is **not actively employed yet** (but
                  they signed their contract or are part of an onboarding process)

                  - `INACTIVE`: the employee is **not actively employed** anymore

                  - `LEAVE`: the employee is still employed but **currently on
                  leave** (note that not all HR systems support this status — use
                  our absences API for detailed information)


                  Please note that in rare cases, where we can't find a clear
                  mapping, the original string is passed through.
                required: []
              employment_type:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - FULL_TIME
                      - PART_TIME
                      - CONTRACT
                      - INTERNSHIP
                      - FREELANCE
                      - WORKING_STUDENT
                      - APPRENTICESHIP
                      - TRAINING
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 8 standardized values (`FULL_TIME`, `PART_TIME`,
                  `CONTRACT`, `INTERNSHIP`, `FREELANCE`, `WORKING_STUDENT`,
                  `APPRENTICESHIP`, or `TRAINING`) **or** — in rare cases where
                  can't find a clear mapping — the original string passed through.
                required: []
              weekly_hours:
                nullable: true
                type: number
                format: double
                minimum: 5.e-324
                exclusiveMinimum: false
                maximum: 1.7976931348623157e+308
                exclusiveMaximum: false
                description: The employee's weekly working hours.
                required: []
              avatar:
                nullable: true
                type: string
                description: >-
                  URL to the employee’s avatar. This is either the raw URL from
                  the HR system (in cases where it can be requested without
                  short-lived authentication) _or_ a URL to a temporarily cached
                  version of the file hosted by Kombo. Kombo will delete the
                  cached file after its deletion in the source system.
                required: []
              work_location_id:
                nullable: true
                type: string
                description: >-
                  The ID of the employee’s work location. Can be used to retrieve
                  the work location from the `hris_locations` endpoint.
                required: []
              legal_entity_id:
                nullable: true
                type: string
                description: The ID of the employee’s legal entity.
                required: []
              manager_id:
                nullable: true
                type: string
                required: []
              home_address:
                nullable: true
                type: object
                properties:
                  city:
                    nullable: true
                    type: string
                    default: null
                    required: []
                  country:
                    nullable: true
                    type: string
                    default: null
                    description: >-
                      Contains the ISO2 country code if possible. If not, it
                      contains the original value.
                    required: []
                  raw:
                    nullable: true
                    type: string
                    default: null
                    description: >-
                      If we have address data, this is filled with the raw address
                      string.
                    required: []
                  state:
                    nullable: true
                    type: string
                    default: null
                    required: []
                  street_1:
                    nullable: true
                    type: string
                    default: null
                    description: >-
                      If we can parse the address data, this field contains the
                      first part of the street information.
                    required: []
                  street_2:
                    nullable: true
                    type: string
                    default: null
                    required: []
                  zip_code:
                    nullable: true
                    type: string
                    default: null
                    required: []
                required: []
              bank_accounts:
                nullable: true
                type: array
                items:
                  type: object
                  properties:
                    iban:
                      nullable: true
                      type: string
                      default: null
                      description: >-
                        The internationally unique IBAN identifying this account.
                        If we detect a valid IBAN from the account number and this
                        field would otherwise be empty, we will automatically
                        populate this field.
                      required: []
                    bic:
                      nullable: true
                      type: string
                      default: null
                      description: >-
                        The internationally unique BIC/SWIFT code identifying the
                        bank behind this account. If we detect a valid BIC from
                        the domestic bank routing number and this field would
                        otherwise be empty, we will automatically populate this
                        field.
                      required: []
                    account_number:
                      nullable: true
                      type: string
                      default: null
                      description: >-
                        The bank-specific account number. Some companies use the
                        account number field to put the IBAN here.
                      required: []
                    holder_name:
                      nullable: true
                      type: string
                      default: null
                      description: The name of the holder of this account.
                      required: []
                    bank_name:
                      nullable: true
                      type: string
                      default: null
                      description: The name of the bank behind this account.
                      required: []
                    domestic_bank_routing:
                      nullable: true
                      type: object
                      properties:
                        number:
                          type: string
                          description: >-
                            Bank routing number (e.g. DE Bankleitzahl, GB Sort
                            Code, US ABA routing number, AU BSB code). This field
                            is not formatted and therefore might contain
                            delimiters (eg. 01-23-45).
                          required: []
                        type:
                          nullable: true
                          type: string
                          enum:
                            - GB_SORT_CODE
                            - DE_BANKLEITZAHL
                            - US_ABA_ROUTING_TRANSIT_NUMBER
                            - CA_ROUTING_NUMBER
                            - AU_BSB_CODE
                          description: >-
                            Enum of the routing type, prefixed with the
                            iso-3166-1-alpha-2 banks origin country. If there is
                            uncertainty about the type, it will be set to null.
                          required: []
                      required:
                        - number
                        - type
                      default: null
                  required: []
                required: []
              date_of_birth:
                nullable: true
                description: YYYY-MM-DDTHH:mm:ss.sssZ
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              start_date:
                nullable: true
                description: The date the employee started working for the organization.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              termination_date:
                nullable: true
                description: The date when the employment ends. Can be in the past or future.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              remote_created_at:
                nullable: true
                description: The date and time the object was created in the remote system.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              changed_at:
                description: >-
                  The timestamp when this object was last changed. This value is
                  tracked by Kombo based on changes in the data.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              remote_deleted_at:
                nullable: true
                description: >-
                  The date and time the object was deleted in the remote system.
                  Objects are automatically marked as deleted when Kombo can't
                  retrieve them from the remote system anymore. Kombo will also
                  anonymize entries 14 days after they disappear.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              custom_fields:
                nullable: true
                type: object
                additionalProperties:
                  format: any
                required: []
              remote_data:
                nullable: true
                type: object
                additionalProperties:
                  format: any
                description: >-
                  Includes the data fetched from the remote system.

                  Please be aware that including this in you scope config might
                  violate other

                  scopes that are set.


                  Remote data always has the endpoint path that we got the data
                  from as the

                  top level key. For example, it could look like: `{ "/companies":
                  { ... }}`
                      
                  This is not available on all plans. Reach out to Kombo if you
                  need it.
                required: []
            required:
              - id
              - remote_id
              - employee_number
              - first_name
              - last_name
              - nationality
              - display_full_name
              - job_title
              - work_email
              - personal_email
              - mobile_phone_number
              - ssn
              - tax_id
              - gender
              - ethnicity
              - marital_status
              - employment_status
              - employment_type
              - weekly_hours
              - avatar
              - work_location_id
              - legal_entity_id
              - manager_id
              - home_address
              - bank_accounts
              - date_of_birth
              - start_date
              - termination_date
              - remote_created_at
              - changed_at
              - remote_deleted_at
              - custom_fields
              - remote_data
            example:
              id: 26vafvWSRmbhNcxJYqjCzuJg
              remote_id: '32'
              employee_number: '3243422'
              first_name: John
              last_name: Doe
              nationality: French
              display_full_name: John Doe
              job_title: Integrations Team Lead
              work_email: john.doe@acme.com
              personal_email: john@doe.me
              mobile_phone_number: 801-555-4687
              ssn: 555-32-6395
              tax_id: 12 345 678 901
              gender: MALE
              ethnicity: BLACK_AFRICAN_AMERICAN
              marital_status: MARRIED
              employment_status: INACTIVE
              employment_type: FULL_TIME
              weekly_hours: 40
              avatar: https://resources.bamboohr.com/images/photo_person_150x150.png
              work_location_id: 7E2gyuv6TmvtByzBxW9Sxt53
              legal_entity_id: xB32bied320csBSsl3XWdlw33
              manager_id: 9pf2pxBB8VX8EQMC9aipW2Bo
              home_address:
                city: Berlin
                country: DE
                raw: |-
                  Sonnenallee 63
                  12045 Berlin
                  Germany
                state: Berlin
                street_1: Sonnenallee 63
                street_2: null
                zip_code: '12045'
              bank_accounts:
                - account_number: '1234567890'
                  bank_name: Commerzbank
                  bic: COBADEFFXXX
                  domestic_bank_routing:
                    number: '34567890'
                    type: DE_BANKLEITZAHL
                  holder_name: John Doe
                  iban: DE12345678901234567890
              date_of_birth: '1986-01-01T00:00:00.000Z'
              start_date: '2020-04-07T00:00:00.000Z'
              termination_date: '2022-05-20T00:00:00.000Z'
              remote_created_at: '2020-04-07T12:32:01.000Z'
              changed_at: '2022-08-07T14:01:29.196Z'
              remote_deleted_at: null
              custom_fields: {}
              remote_data: null
        required:
          - status
          - data
      PatchHrisEmployeesEmployeeIdErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PatchHrisEmployeesEmployeeIdRequestBody:
        allOf:
          - type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              work_email:
                type: string
                format: email
                description: >-
                  The email address of the employee to be created. For tools where
                  the personal email address is required, we map this input to the
                  personal email. This is documented on a per-tool basis.
              gender:
                type: string
                enum:
                  - MALE
                  - FEMALE
                  - NON_BINARY
                  - NOT_SPECIFIED
                description: The gender of the employee.
              job_title:
                type: string
                description: Title of the position this person is working in.
              home_address:
                type: object
                properties:
                  street_1:
                    type: string
                  street_2:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  zip_code:
                    type: string
                  country:
                    type: string
                    pattern: /^[A-Z]{2}$/
                    description: >-
                      The uppercase two-letter ISO country (e.g., `DE`) of the
                      employee's home address. For systems that have other formats
                      than `ISO 3166-1 alpha-2` codes, Kombo transforms the ISO
                      Codes to the appropriate value.
                description: The employee's home address.
              date_of_birth:
                description: >-
                  The employee's date of birth. This is a plain date (i.e.,
                  `yyyy-MM-dd`), all time information is discarded.
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              mobile_phone_number:
                type: string
              nationality:
                type: string
                pattern: /^[A-Z]{2}$/
                description: >-
                  The uppercase two-letter ISO country (e.g., `DE`) of the
                  employee's nationality. For systems that have other formats than
                  `ISO 3166-1 alpha-2` codes, Kombo transforms the ISO Codes to
                  the appropriate value.
              start_date:
                description: >-
                  Start date of the employee. Also considered to be the hire date.
                  This is a plain date (i.e., `yyyy-MM-dd`), all time information
                  is discarded.
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              remote_fields:
                type: object
                properties:
                  humaans:
                    type: object
                    properties:
                      employee:
                        type: object
                        additionalProperties:
                          format: any
                        description: >-
                          Fields that we will pass through to Humaans `Employee`
                          object.
                    description: Fields specific to Humaans.
                  silae:
                    type: object
                    properties:
                      siret:
                        type: string
                        description: >-
                          The siret of the company. The siret can be found as the
                          remote ID of a Silae legal entity.
                      employee:
                        type: object
                        additionalProperties:
                          format: any
                        description: >-
                          Fields that we will passed through to Silae `Employee`
                          object.
                      employment:
                        type: object
                        additionalProperties:
                          format: any
                        description: >-
                          Fields that we will passed through to Silae `Employment`
                          object.
                    description: Fields specific to Silae.
                required:
                  - silae
                description: >-
                  Additional fields that we will pass through to specific HRIS
                  systems.
            required:
              - first_name
              - last_name
              - work_email
            example:
              first_name: John
              last_name: Doe
              work_email: john.doe@acme.com
              gender: MALE
              date_of_birth: '1986-01-01'
              start_date: '2020-04-07'
              job_title: Integrations Team Lead
              home_address:
                city: Berlin
                country: DE
                state: Berlin
                street_1: Sonnenallee 63
                zip_code: '12045'
          - type: object
            properties:
              ssn:
                type: string
                description: Social security number of the employee.
              marital_status:
                type: string
                enum:
                  - SINGLE
                  - MARRIED
                  - DOMESTIC_PARTNERSHIP
                  - WIDOWED
                  - DIVORCED
                  - SEPARATED
                  - NOT_MARRIED
                description: Marital status of an employee.
              termination_date:
                description: >-
                  Date on which the employment ends. This is a plain date (i.e.,
                  `yyyy-MM-dd`), all time information is discarded.
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              tax_id:
                type: string
                description: >-
                  Tax ID of the employee. Most contries have different formats of
                  that. In Germany, this is the `Steuer ID` and in the US it's the
                  `TIN`.
              nationality:
                type: string
                pattern: /^[A-Z]{2}$/
                description: >-
                  The uppercase two-letter ISO country (e.g., `DE`) of the
                  employee's nationality. For systems that have other formats than
                  `ISO 3166-1 alpha-2` codes, Kombo transforms the ISO Codes to
                  the appropriate value.
            required: []
      PostHrisEmployeesEmployeeIdAttachmentsParameterEmployeeId:
        type: string
        required: []
      PostHrisEmployeesEmployeeIdAttachmentsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PostHrisEmployeesEmployeeIdAttachmentsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostHrisEmployeesEmployeeIdAttachmentsRequestBody:
        type: object
      GetHrisTeamsParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetHrisTeamsParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetHrisTeamsParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisTeamsParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetHrisTeamsParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetHrisTeamsParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetHrisTeamsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    remote_id:
                      type: string
                      required: []
                    name:
                      nullable: true
                      type: string
                      required: []
                    changed_at:
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_deleted_at:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    type:
                      nullable: true
                      type: string
                      enum:
                        - DEPARTMENT
                        - TEAM
                        - COST_CENTER
                      description: >-
                        Type of the group. Can be any of `DEPARTMENT`, `TEAM`, and
                        `COST_CENTER`
                      required: []
                    parent_id:
                      nullable: true
                      type: string
                      required: []
                    remote_data:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      description: >-
                        Includes the data fetched from the remote system.

                        Please be aware that including this in you scope config
                        might violate other

                        scopes that are set.


                        Remote data always has the endpoint path that we got the
                        data from as the

                        top level key. For example, it could look like: `{
                        "/companies": { ... }}`
                            
                        This is not available on all plans. Reach out to Kombo if
                        you need it.
                      required: []
                  required:
                    - id
                    - remote_id
                    - name
                    - changed_at
                    - remote_deleted_at
                    - type
                    - parent_id
                    - remote_data
                  example:
                    id: 4B9bKBpX5tnwjiG93TAqF7ci
                    remote_id: '49'
                    name: Customer Success
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
                    type: TEAM
                    parent_id: KGaJ5XaVPob8mYVfD49W4DGB
                    remote_data: null
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 4B9bKBpX5tnwjiG93TAqF7ci
                  remote_id: '49'
                  name: Customer Success
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
                  type: TEAM
                  parent_id: KGaJ5XaVPob8mYVfD49W4DGB
                  remote_data: null
        required:
          - status
          - data
      GetHrisTeamsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetHrisGroupsParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetHrisGroupsParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetHrisGroupsParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisGroupsParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetHrisGroupsParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetHrisGroupsParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetHrisGroupsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    remote_id:
                      type: string
                      required: []
                    name:
                      nullable: true
                      type: string
                      required: []
                    changed_at:
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_deleted_at:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    type:
                      nullable: true
                      type: string
                      enum:
                        - DEPARTMENT
                        - TEAM
                        - COST_CENTER
                      description: >-
                        Type of the group. Can be any of `DEPARTMENT`, `TEAM`, and
                        `COST_CENTER`
                      required: []
                    parent_id:
                      nullable: true
                      type: string
                      required: []
                    remote_data:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      description: >-
                        Includes the data fetched from the remote system.

                        Please be aware that including this in you scope config
                        might violate other

                        scopes that are set.


                        Remote data always has the endpoint path that we got the
                        data from as the

                        top level key. For example, it could look like: `{
                        "/companies": { ... }}`
                            
                        This is not available on all plans. Reach out to Kombo if
                        you need it.
                      required: []
                  required:
                    - id
                    - remote_id
                    - name
                    - changed_at
                    - remote_deleted_at
                    - type
                    - parent_id
                    - remote_data
                  example:
                    id: 4B9bKBpX5tnwjiG93TAqF7ci
                    remote_id: '49'
                    name: Customer Success
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
                    type: TEAM
                    parent_id: KGaJ5XaVPob8mYVfD49W4DGB
                    remote_data: null
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 4B9bKBpX5tnwjiG93TAqF7ci
                  remote_id: '49'
                  name: Customer Success
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
                  type: TEAM
                  parent_id: KGaJ5XaVPob8mYVfD49W4DGB
                  remote_data: null
        required:
          - status
          - data
      GetHrisGroupsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetHrisEmploymentsParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetHrisEmploymentsParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetHrisEmploymentsParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisEmploymentsParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetHrisEmploymentsParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetHrisEmploymentsParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetHrisEmploymentsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    remote_id:
                      nullable: true
                      type: string
                      required: []
                    employee_id:
                      type: string
                      required: []
                    job_title:
                      nullable: true
                      type: string
                      description: >-
                        **(⚠️ Deprecated)** We now provide the `job_title`
                        directly on the employee model.
                      required: []
                    pay_rate:
                      nullable: true
                      type: number
                      format: double
                      minimum: 5.e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                      required: []
                    pay_period:
                      nullable: true
                      oneOf:
                        - type: string
                          enum:
                            - HOUR
                            - DAY
                            - WEEK
                            - TWO_WEEKS
                            - HALF_MONTH
                            - MONTH
                            - TWO_MONTHS
                            - QUARTER
                            - HALF_YEAR
                            - YEAR
                          required: []
                        - type: string
                          description: >-
                            If we can't find a clear mapping: The original string
                            passed through.
                          required: []
                      description: >-
                        One of 10 standardized values (`HOUR`, `DAY`, `WEEK`,
                        `TWO_WEEKS`, `HALF_MONTH`, `MONTH`, `TWO_MONTHS`,
                        `QUARTER`, `HALF_YEAR`, or `YEAR`) **or** — in rare cases
                        where can't find a clear mapping — the original string
                        passed through.
                      required: []
                    pay_frequency:
                      nullable: true
                      oneOf:
                        - type: string
                          enum:
                            - DAILY
                            - WEEKLY
                            - BIWEEKLY
                            - MONTHLY
                            - SEMIMONTHLY
                            - QUARTERLY
                            - SEMIANNUALLY
                            - ANNUALLY
                            - PRO_RATA
                          required: []
                        - type: string
                          description: >-
                            If we can't find a clear mapping: The original string
                            passed through.
                          required: []
                      description: >-
                        One of 9 standardized values (`DAILY`, `WEEKLY`,
                        `BIWEEKLY`, `MONTHLY`, `SEMIMONTHLY`, `QUARTERLY`,
                        `SEMIANNUALLY`, `ANNUALLY`, or `PRO_RATA`) **or** — in
                        rare cases where can't find a clear mapping — the original
                        string passed through.
                      required: []
                    employment_type:
                      nullable: true
                      oneOf:
                        - type: string
                          enum:
                            - FULL_TIME
                            - PART_TIME
                            - CONTRACT
                            - INTERNSHIP
                            - FREELANCE
                            - WORKING_STUDENT
                            - APPRENTICESHIP
                            - TRAINING
                          required: []
                        - type: string
                          description: >-
                            If we can't find a clear mapping: The original string
                            passed through.
                          required: []
                      description: >-
                        One of 8 standardized values (`FULL_TIME`, `PART_TIME`,
                        `CONTRACT`, `INTERNSHIP`, `FREELANCE`, `WORKING_STUDENT`,
                        `APPRENTICESHIP`, or `TRAINING`) **or** — in rare cases
                        where can't find a clear mapping — the original string
                        passed through.
                      required: []
                    pay_currency:
                      nullable: true
                      type: string
                      description: >-
                        Pay currency usually returned in [ISO 4217 currency
                        codes](https://www.iso.org/iso-4217-currency-codes.html).
                      required: []
                    effective_date:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    changed_at:
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_deleted_at:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_data:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      description: >-
                        Includes the data fetched from the remote system.

                        Please be aware that including this in you scope config
                        might violate other

                        scopes that are set.


                        Remote data always has the endpoint path that we got the
                        data from as the

                        top level key. For example, it could look like: `{
                        "/companies": { ... }}`
                            
                        This is not available on all plans. Reach out to Kombo if
                        you need it.
                      required: []
                    custom_fields:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      required: []
                  required:
                    - id
                    - remote_id
                    - employee_id
                    - job_title
                    - pay_rate
                    - pay_period
                    - pay_frequency
                    - employment_type
                    - pay_currency
                    - effective_date
                    - changed_at
                    - remote_deleted_at
                    - remote_data
                    - custom_fields
                  example:
                    id: 12vpXR7BeqYNWDShXRgsonnm
                    remote_id: '859'
                    employee_id: 8Xk99QfVKYA6vfEafEUBdEPJ
                    job_title: Social Media Marketer
                    pay_rate: 85000
                    pay_period: YEAR
                    pay_frequency: SEMIMONTHLY
                    employment_type: FULL_TIME
                    pay_currency: EUR
                    effective_date: '2021-01-30T00:00:00.000Z'
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
                    remote_data: null
                    custom_fields: {}
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 12vpXR7BeqYNWDShXRgsonnm
                  remote_id: '859'
                  employee_id: 8Xk99QfVKYA6vfEafEUBdEPJ
                  job_title: Social Media Marketer
                  pay_rate: 85000
                  pay_period: YEAR
                  pay_frequency: SEMIMONTHLY
                  employment_type: FULL_TIME
                  pay_currency: EUR
                  effective_date: '2021-01-30T00:00:00.000Z'
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
                  remote_data: null
                  custom_fields: {}
        required:
          - status
          - data
      GetHrisEmploymentsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetHrisLocationsParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetHrisLocationsParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetHrisLocationsParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisLocationsParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetHrisLocationsParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetHrisLocationsParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetHrisLocationsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    remote_id:
                      nullable: true
                      type: string
                      required: []
                    name:
                      nullable: true
                      type: string
                      required: []
                    address:
                      nullable: true
                      type: object
                      properties:
                        city:
                          nullable: true
                          type: string
                          default: null
                          required: []
                        country:
                          nullable: true
                          type: string
                          default: null
                          description: >-
                            Contains the ISO2 country code if possible. If not, it
                            contains the original value.
                          required: []
                        raw:
                          nullable: true
                          type: string
                          default: null
                          description: >-
                            If we have address data, this is filled with the raw
                            address string.
                          required: []
                        state:
                          nullable: true
                          type: string
                          default: null
                          required: []
                        street_1:
                          nullable: true
                          type: string
                          default: null
                          description: >-
                            If we can parse the address data, this field contains
                            the first part of the street information.
                          required: []
                        street_2:
                          nullable: true
                          type: string
                          default: null
                          required: []
                        zip_code:
                          nullable: true
                          type: string
                          default: null
                          required: []
                      required: []
                    type:
                      nullable: true
                      type: string
                      required: []
                    changed_at:
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_deleted_at:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_data:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      description: >-
                        Includes the data fetched from the remote system.

                        Please be aware that including this in you scope config
                        might violate other

                        scopes that are set.


                        Remote data always has the endpoint path that we got the
                        data from as the

                        top level key. For example, it could look like: `{
                        "/companies": { ... }}`
                            
                        This is not available on all plans. Reach out to Kombo if
                        you need it.
                      required: []
                  required:
                    - id
                    - remote_id
                    - name
                    - address
                    - type
                    - changed_at
                    - remote_deleted_at
                    - remote_data
                  example:
                    id: 22st2Ji8XpncEYEak8mvQgQF
                    remote_id: '1348'
                    name: Kombo HQ
                    address:
                      city: Berlin
                      country: DE
                      raw: |-
                        Sonnenallee 63
                        12045 Berlin, Berlin
                        Germany
                      state: Berlin
                      street_1: Sonnenallee 63
                      street_2: null
                      zip_code: '12045'
                    type: OFFICE
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: '2022-08-07T14:01:29.196Z'
                    remote_data: null
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 22st2Ji8XpncEYEak8mvQgQF
                  remote_id: '1348'
                  name: Kombo HQ
                  address:
                    city: Berlin
                    country: DE
                    raw: |-
                      Sonnenallee 63
                      12045 Berlin, Berlin
                      Germany
                    state: Berlin
                    street_1: Sonnenallee 63
                    street_2: null
                    zip_code: '12045'
                  type: OFFICE
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: '2022-08-07T14:01:29.196Z'
                  remote_data: null
        required:
          - status
          - data
      GetHrisLocationsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetHrisAbsenceTypesParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetHrisAbsenceTypesParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetHrisAbsenceTypesParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisAbsenceTypesParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetHrisAbsenceTypesParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetHrisAbsenceTypesParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetHrisAbsenceTypesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    name:
                      nullable: true
                      type: string
                      required: []
                    unit:
                      nullable: true
                      type: string
                      enum:
                        - HOURS
                        - DAYS
                      required: []
                    half_days_supported:
                      nullable: true
                      type: boolean
                      description: >-
                        Whether the integration supports half-day absences
                        (represented through `start_half_day` and `end_half_day`)
                        for this absence type.
                      required: []
                    exact_times_supported:
                      nullable: true
                      type: boolean
                      description: >-
                        `true` if the system supports exact times (absences with a
                        `start_time` and an `end_time`) for this absence, `false`
                        if not.
                      required: []
                    remote_id:
                      type: string
                      required: []
                    remote_data:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      description: >-
                        Includes the data fetched from the remote system.

                        Please be aware that including this in you scope config
                        might violate other

                        scopes that are set.


                        Remote data always has the endpoint path that we got the
                        data from as the

                        top level key. For example, it could look like: `{
                        "/companies": { ... }}`
                            
                        This is not available on all plans. Reach out to Kombo if
                        you need it.
                      required: []
                    changed_at:
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_deleted_at:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                  required:
                    - id
                    - name
                    - unit
                    - half_days_supported
                    - exact_times_supported
                    - remote_id
                    - remote_data
                    - changed_at
                    - remote_deleted_at
                  example:
                    id: xzZoKssDaMZAd62kxayzzQvD
                    name: Vacation
                    unit: DAYS
                    half_days_supported: true
                    exact_times_supported: false
                    remote_id: '91'
                    remote_data: null
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: xzZoKssDaMZAd62kxayzzQvD
                  name: Vacation
                  unit: DAYS
                  half_days_supported: true
                  exact_times_supported: false
                  remote_id: '91'
                  remote_data: null
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
        required:
          - status
          - data
      GetHrisAbsenceTypesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetHrisTimeOffBalancesParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetHrisTimeOffBalancesParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetHrisTimeOffBalancesParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisTimeOffBalancesParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetHrisTimeOffBalancesParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetHrisTimeOffBalancesParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetHrisTimeOffBalancesParameterEmployeeId:
        type: string
        description: Filter by a specific employee using their ID.
        required: []
      GetHrisTimeOffBalancesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                          required: []
                        remote_id:
                          nullable: true
                          type: string
                          required: []
                        employee_id:
                          type: string
                          required: []
                        type_id:
                          type: string
                          required: []
                        balance:
                          nullable: true
                          type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          description: The amount time available to the employee.
                          required: []
                        balance_unit:
                          nullable: true
                          type: string
                          enum:
                            - HOURS
                            - DAYS
                          required: []
                        changed_at:
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_deleted_at:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        used:
                          nullable: true
                          type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          required: []
                        used_unit:
                          nullable: true
                          type: string
                          enum:
                            - HOURS
                            - DAYS
                          required: []
                        remote_data:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          description: >-
                            Includes the data fetched from the remote system.

                            Please be aware that including this in you scope
                            config might violate other

                            scopes that are set.


                            Remote data always has the endpoint path that we got
                            the data from as the

                            top level key. For example, it could look like: `{
                            "/companies": { ... }}`
                                
                            This is not available on all plans. Reach out to Kombo
                            if you need it.
                          required: []
                      required:
                        - id
                        - remote_id
                        - employee_id
                        - type_id
                        - balance
                        - balance_unit
                        - changed_at
                        - remote_deleted_at
                        - used
                        - used_unit
                        - remote_data
                      example:
                        id: FuyRuk5NqP3qTcThED3ymTuE
                        remote_id: '124123'
                        employee_id: 2Up4ZCvq1bFVzmzXG6EWzV3j
                        type_id: BQJaBxRCiqN46G27VTegvkEr
                        balance: 14
                        balance_unit: DAYS
                        changed_at: '2022-08-07T14:01:29.196Z'
                        remote_deleted_at: null
                        used: 3
                        used_unit: DAYS
                        remote_data: null
                    - type: object
                      properties:
                        type:
                          type: object
                          properties:
                            id:
                              type: string
                              required: []
                            name:
                              nullable: true
                              type: string
                              required: []
                            unit:
                              nullable: true
                              type: string
                              enum:
                                - HOURS
                                - DAYS
                              required: []
                            half_days_supported:
                              nullable: true
                              type: boolean
                              description: >-
                                Whether the integration supports half-day absences
                                (represented through `start_half_day` and
                                `end_half_day`) for this absence type.
                              required: []
                            exact_times_supported:
                              nullable: true
                              type: boolean
                              description: >-
                                `true` if the system supports exact times
                                (absences with a `start_time` and an `end_time`)
                                for this absence, `false` if not.
                              required: []
                            remote_id:
                              type: string
                              required: []
                            remote_data:
                              nullable: true
                              type: object
                              additionalProperties:
                                format: any
                              description: >-
                                Includes the data fetched from the remote system.

                                Please be aware that including this in you scope
                                config might violate other

                                scopes that are set.


                                Remote data always has the endpoint path that we
                                got the data from as the

                                top level key. For example, it could look like: `{
                                "/companies": { ... }}`
                                    
                                This is not available on all plans. Reach out to
                                Kombo if you need it.
                              required: []
                            changed_at:
                              description: YYYY-MM-DDTHH:mm:ss.sssZ
                              type: string
                              format: date-time
                              externalDocs:
                                url: >-
                                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                              required: []
                            remote_deleted_at:
                              nullable: true
                              description: YYYY-MM-DDTHH:mm:ss.sssZ
                              type: string
                              format: date-time
                              externalDocs:
                                url: >-
                                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                              required: []
                          required:
                            - id
                            - name
                            - unit
                            - half_days_supported
                            - exact_times_supported
                            - remote_id
                            - remote_data
                            - changed_at
                            - remote_deleted_at
                          example:
                            id: xzZoKssDaMZAd62kxayzzQvD
                            name: Vacation
                            unit: DAYS
                            half_days_supported: true
                            exact_times_supported: false
                            remote_id: '91'
                            remote_data: null
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                      required:
                        - type
                  required: []
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: FuyRuk5NqP3qTcThED3ymTuE
                  remote_id: '124123'
                  employee_id: 2Up4ZCvq1bFVzmzXG6EWzV3j
                  type_id: BQJaBxRCiqN46G27VTegvkEr
                  balance: 14
                  balance_unit: DAYS
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
                  used: 3
                  used_unit: DAYS
                  remote_data: null
                  type:
                    id: xzZoKssDaMZAd62kxayzzQvD
                    name: Vacation
                    unit: DAYS
                    half_days_supported: true
                    exact_times_supported: false
                    remote_id: '91'
                    remote_data: null
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
        required:
          - status
          - data
      GetHrisTimeOffBalancesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetHrisAbsencesParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetHrisAbsencesParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetHrisAbsencesParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisAbsencesParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetHrisAbsencesParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetHrisAbsencesParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetHrisAbsencesParameterDateFrom:
        description: >-
          Filter for all the absences that either start _or_ haven't ended yet
          on/after this day. If you imagine a calendar displaying absences, this
          defines the left-most visible day. This is a plain date (i.e.,
          `yyyy-MM-dd`), all time information is discarded.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisAbsencesParameterDateUntil:
        description: >-
          Filter for absences that start on or before this day (but might continue
          after). If you imagine a calendar displaying absences, this defines the
          right-most visible day. This is a plain date (i.e., `yyyy-MM-dd`), all
          time information is discarded.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisAbsencesParameterTypeIds:
        type: string
        description: Filter by a comma-separated list of absence type IDs.
        required: []
      GetHrisAbsencesParameterEmployeeId:
        type: string
        description: Filter by a specific employee using their ID.
        required: []
      GetHrisAbsencesParameterTimeFrom:
        description: >-
          **(⚠️ Deprecated - Use the `date_from` filter instead.)** Filter for
          absences that either start after or start before and end after a certain
          time.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisAbsencesParameterTimeUntil:
        description: >-
          **(⚠️ Deprecated - Use the `date_until` filter instead.)** Filter for
          absences that start before a certain time.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisAbsencesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                          description: >-
                            The globally unique ID of this object generated by
                            Kombo. We recommend using this as a stable primary key
                            for syncing.
                          required: []
                        remote_id:
                          nullable: true
                          type: string
                          description: >-
                            The raw ID of the object in the remote system. We
                            don't recommend using this as a primary key on your
                            side as it might sometimes be compromised of multiple
                            identifiers if a system doesn't provide a clear
                            primary key.
                          required: []
                        employee_id:
                          type: string
                          required: []
                        approver_id:
                          nullable: true
                          type: string
                          description: >-
                            **(⚠️ Deprecated - We won't increase coverage for this
                            feature)** The ID of the employee who is responsible
                            for approving this absence.
                          required: []
                        start_date:
                          nullable: true
                          type: string
                          description: >-
                            The date this absence starts in the `yyyy-MM-dd`
                            format.
                          required: []
                        end_date:
                          nullable: true
                          type: string
                          description: The date this absence ends in the `yyyy-MM-dd` format.
                          required: []
                        start_half_day:
                          nullable: true
                          type: boolean
                          description: >-
                            `true` if the absence starts in the middle of the day,
                            `false` if not, and `null` if the absence type doesn't
                            support half-day absences. If an absence goes across
                            multiple days and `start_half_day` is set, it means
                            that on the last day the absence is only on the first
                            half of the day.
                          required: []
                        end_half_day:
                          nullable: true
                          type: boolean
                          description: >-
                            `true` if the absence ends in the middle of the day,
                            `false` if not, and `null` if the absence type doesn't
                            support half-day absences. If an absence goes across
                            multiple days and `end_half_day` is set, it means that
                            on the first day the absence only starts in the second
                            half-day.
                          required: []
                        start_time:
                          nullable: true
                          type: string
                          description: >-
                            The time at which this absence starts. Follows the
                            format `HH:mm:ss` (e.g., `14:45:15`).
                          required: []
                        end_time:
                          nullable: true
                          type: string
                          description: >-
                            The time at which this absence ends. Follows the
                            format `HH:mm:ss` (e.g., `14:45:15`).
                          required: []
                        amount:
                          nullable: true
                          type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          description: The amount of time this absence takes.
                          required: []
                        unit:
                          nullable: true
                          type: string
                          enum:
                            - HOURS
                            - DAYS
                          description: >-
                            The unit of time for this absence. Can be `HOURS` or
                            `DAYS`.
                          required: []
                        status:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - REQUESTED
                                - APPROVED
                                - DECLINED
                                - CANCELLED
                                - DELETED
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            One of 5 standardized values (`REQUESTED`, `APPROVED`,
                            `DECLINED`, `CANCELLED`, or `DELETED`) **or** — in
                            rare cases where can't find a clear mapping — the
                            original string passed through.
                          required: []
                        employee_note:
                          nullable: true
                          type: string
                          description: A note the employee has added to this absence.
                          required: []
                        type_id:
                          nullable: true
                          type: string
                          description: The Kombo absence type ID of this absence.
                          required: []
                        changed_at:
                          description: >-
                            The timestamp when this object was last changed. This
                            value is tracked by Kombo based on changes in the
                            data.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_deleted_at:
                          nullable: true
                          description: >-
                            The date and time the object was deleted in the remote
                            system. Objects are automatically marked as deleted
                            when Kombo can't retrieve them from the remote system
                            anymore. Kombo will also anonymize entries 14 days
                            after they disappear.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_data:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          description: >-
                            Includes the data fetched from the remote system.

                            Please be aware that including this in you scope
                            config might violate other

                            scopes that are set.


                            Remote data always has the endpoint path that we got
                            the data from as the

                            top level key. For example, it could look like: `{
                            "/companies": { ... }}`
                                
                            This is not available on all plans. Reach out to Kombo
                            if you need it.
                          required: []
                      required:
                        - id
                        - remote_id
                        - employee_id
                        - approver_id
                        - start_date
                        - end_date
                        - start_half_day
                        - end_half_day
                        - start_time
                        - end_time
                        - amount
                        - unit
                        - status
                        - employee_note
                        - type_id
                        - changed_at
                        - remote_deleted_at
                        - remote_data
                      example:
                        id: 22st2Ji8XpncEYEak8mvQgQF
                        remote_id: '1348'
                        employee_id: JDdUy9kiH5APaGizFrgNmQjM
                        approver_id: AgXEispYPP1BbToHpqnqcpxy
                        start_date: '2022-08-04'
                        end_date: '2022-08-05'
                        start_half_day: true
                        end_half_day: false
                        start_time: '13:15:00'
                        end_time: '17:00:00'
                        amount: 2
                        unit: DAYS
                        status: APPROVED
                        employee_note: Visiting my family.
                        type_id: xzZoKssDaMZAd62kxayzzQvD
                        changed_at: '2022-08-07T14:01:29.196Z'
                        remote_deleted_at: '2022-08-07T14:01:29.196Z'
                        remote_data: null
                    - type: object
                      properties:
                        type:
                          nullable: true
                          type: object
                          properties:
                            id:
                              type: string
                              required: []
                            name:
                              nullable: true
                              type: string
                              required: []
                            unit:
                              nullable: true
                              type: string
                              enum:
                                - HOURS
                                - DAYS
                              required: []
                            half_days_supported:
                              nullable: true
                              type: boolean
                              description: >-
                                Whether the integration supports half-day absences
                                (represented through `start_half_day` and
                                `end_half_day`) for this absence type.
                              required: []
                            exact_times_supported:
                              nullable: true
                              type: boolean
                              description: >-
                                `true` if the system supports exact times
                                (absences with a `start_time` and an `end_time`)
                                for this absence, `false` if not.
                              required: []
                            remote_id:
                              type: string
                              required: []
                            remote_data:
                              nullable: true
                              type: object
                              additionalProperties:
                                format: any
                              description: >-
                                Includes the data fetched from the remote system.

                                Please be aware that including this in you scope
                                config might violate other

                                scopes that are set.


                                Remote data always has the endpoint path that we
                                got the data from as the

                                top level key. For example, it could look like: `{
                                "/companies": { ... }}`
                                    
                                This is not available on all plans. Reach out to
                                Kombo if you need it.
                              required: []
                            changed_at:
                              description: YYYY-MM-DDTHH:mm:ss.sssZ
                              type: string
                              format: date-time
                              externalDocs:
                                url: >-
                                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                              required: []
                            remote_deleted_at:
                              nullable: true
                              description: YYYY-MM-DDTHH:mm:ss.sssZ
                              type: string
                              format: date-time
                              externalDocs:
                                url: >-
                                  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                              required: []
                          required:
                            - id
                            - name
                            - unit
                            - half_days_supported
                            - exact_times_supported
                            - remote_id
                            - remote_data
                            - changed_at
                            - remote_deleted_at
                          example:
                            id: xzZoKssDaMZAd62kxayzzQvD
                            name: Vacation
                            unit: DAYS
                            half_days_supported: true
                            exact_times_supported: false
                            remote_id: '91'
                            remote_data: null
                            changed_at: '2022-08-07T14:01:29.196Z'
                            remote_deleted_at: null
                      required:
                        - type
                  required: []
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 22st2Ji8XpncEYEak8mvQgQF
                  remote_id: '1348'
                  employee_id: JDdUy9kiH5APaGizFrgNmQjM
                  approver_id: AgXEispYPP1BbToHpqnqcpxy
                  start_date: '2022-08-04'
                  end_date: '2022-08-05'
                  start_half_day: true
                  end_half_day: false
                  start_time: '13:15:00'
                  end_time: '17:00:00'
                  amount: 2
                  unit: DAYS
                  status: APPROVED
                  employee_note: Visiting my family.
                  type_id: xzZoKssDaMZAd62kxayzzQvD
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: '2022-08-07T14:01:29.196Z'
                  remote_data: null
                  type:
                    id: xzZoKssDaMZAd62kxayzzQvD
                    name: Vacation
                    unit: DAYS
                    half_days_supported: true
                    exact_times_supported: false
                    remote_id: '91'
                    remote_data: null
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
        required:
          - status
          - data
      GetHrisAbsencesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostHrisAbsencesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              id:
                type: string
                description: >-
                  The globally unique ID of this object generated by Kombo. We
                  recommend using this as a stable primary key for syncing.
                required: []
              remote_id:
                nullable: true
                type: string
                description: >-
                  The raw ID of the object in the remote system. We don't
                  recommend using this as a primary key on your side as it might
                  sometimes be compromised of multiple identifiers if a system
                  doesn't provide a clear primary key.
                required: []
              employee_id:
                type: string
                required: []
              approver_id:
                nullable: true
                type: string
                description: >-
                  **(⚠️ Deprecated - We won't increase coverage for this
                  feature)** The ID of the employee who is responsible for
                  approving this absence.
                required: []
              start_date:
                nullable: true
                type: string
                description: The date this absence starts in the `yyyy-MM-dd` format.
                required: []
              end_date:
                nullable: true
                type: string
                description: The date this absence ends in the `yyyy-MM-dd` format.
                required: []
              start_half_day:
                nullable: true
                type: boolean
                description: >-
                  `true` if the absence starts in the middle of the day, `false`
                  if not, and `null` if the absence type doesn't support half-day
                  absences. If an absence goes across multiple days and
                  `start_half_day` is set, it means that on the last day the
                  absence is only on the first half of the day.
                required: []
              end_half_day:
                nullable: true
                type: boolean
                description: >-
                  `true` if the absence ends in the middle of the day, `false` if
                  not, and `null` if the absence type doesn't support half-day
                  absences. If an absence goes across multiple days and
                  `end_half_day` is set, it means that on the first day the
                  absence only starts in the second half-day.
                required: []
              start_time:
                nullable: true
                type: string
                description: >-
                  The time at which this absence starts. Follows the format
                  `HH:mm:ss` (e.g., `14:45:15`).
                required: []
              end_time:
                nullable: true
                type: string
                description: >-
                  The time at which this absence ends. Follows the format
                  `HH:mm:ss` (e.g., `14:45:15`).
                required: []
              amount:
                nullable: true
                type: number
                format: double
                minimum: 5.e-324
                exclusiveMinimum: false
                maximum: 1.7976931348623157e+308
                exclusiveMaximum: false
                description: The amount of time this absence takes.
                required: []
              unit:
                nullable: true
                type: string
                enum:
                  - HOURS
                  - DAYS
                description: The unit of time for this absence. Can be `HOURS` or `DAYS`.
                required: []
              status:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - REQUESTED
                      - APPROVED
                      - DECLINED
                      - CANCELLED
                      - DELETED
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 5 standardized values (`REQUESTED`, `APPROVED`,
                  `DECLINED`, `CANCELLED`, or `DELETED`) **or** — in rare cases
                  where can't find a clear mapping — the original string passed
                  through.
                required: []
              employee_note:
                nullable: true
                type: string
                description: A note the employee has added to this absence.
                required: []
              type_id:
                nullable: true
                type: string
                description: The Kombo absence type ID of this absence.
                required: []
              changed_at:
                description: >-
                  The timestamp when this object was last changed. This value is
                  tracked by Kombo based on changes in the data.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              remote_deleted_at:
                nullable: true
                description: >-
                  The date and time the object was deleted in the remote system.
                  Objects are automatically marked as deleted when Kombo can't
                  retrieve them from the remote system anymore. Kombo will also
                  anonymize entries 14 days after they disappear.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              remote_data:
                nullable: true
                type: object
                additionalProperties:
                  format: any
                description: >-
                  Includes the data fetched from the remote system.

                  Please be aware that including this in you scope config might
                  violate other

                  scopes that are set.


                  Remote data always has the endpoint path that we got the data
                  from as the

                  top level key. For example, it could look like: `{ "/companies":
                  { ... }}`
                      
                  This is not available on all plans. Reach out to Kombo if you
                  need it.
                required: []
            required:
              - id
              - remote_id
              - employee_id
              - approver_id
              - start_date
              - end_date
              - start_half_day
              - end_half_day
              - start_time
              - end_time
              - amount
              - unit
              - status
              - employee_note
              - type_id
              - changed_at
              - remote_deleted_at
              - remote_data
            example:
              id: 22st2Ji8XpncEYEak8mvQgQF
              remote_id: '1348'
              employee_id: JDdUy9kiH5APaGizFrgNmQjM
              approver_id: AgXEispYPP1BbToHpqnqcpxy
              start_date: '2022-08-04'
              end_date: '2022-08-05'
              start_half_day: true
              end_half_day: false
              start_time: '13:15:00'
              end_time: '17:00:00'
              amount: 2
              unit: DAYS
              status: APPROVED
              employee_note: Visiting my family.
              type_id: xzZoKssDaMZAd62kxayzzQvD
              changed_at: '2022-08-07T14:01:29.196Z'
              remote_deleted_at: '2022-08-07T14:01:29.196Z'
              remote_data: null
        required:
          - status
          - data
      PostHrisAbsencesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostHrisAbsencesRequestBody:
        allOf:
          - type: object
            properties:
              employee_id:
                type: string
                description: >-
                  The ID of the employee in Kombo or their ID in the remote system
                  by prefixing it with `remote:` (e.g., `remote:12312`)
              absence_type_id:
                type: string
                description: The ID of the absence type in Kombo (not its `remote_id`).
              status:
                type: string
                enum:
                  - REQUESTED
                  - APPROVED
                description: >-
                  Specify if the absence should be created in the requested or
                  approved state. Please note that some tools might approve
                  absences automatically if they were created for an absence type
                  that does not require approval. There are more edge cases that
                  might cause an absence to be approved automatically.
                default: REQUESTED
              start_date:
                description: >-
                  When the absence starts. This is a plain date (i.e.,
                  `yyyy-MM-dd`), all time information is discarded.
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              end_date:
                description: >-
                  When the absence ends. This is a plain date (i.e.,
                  `yyyy-MM-dd`), all time information is discarded.
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              start_half_day:
                type: boolean
                description: '`true` if the absence should start in the middle of the day.'
                default: false
              end_half_day:
                type: boolean
                description: '`true` if the absence should end in the middle of the day.'
                default: false
              amount:
                type: number
                format: double
                minimum: 0
                exclusiveMinimum: false
                maximum: 1.7976931348623157e+308
                exclusiveMaximum: false
                description: >-
                  Specifying this also requires specifying `unit`. This is
                  supported by very few tools.
              unit:
                type: string
                enum:
                  - HOURS
                  - DAYS
                description: Specifying this also requires specifying `amount`.
              employee_note:
                nullable: true
                type: string
                description: A note describing the reason for this absence.
              start_time:
                type: string
                pattern: /^(?:2[0-3]|[01]?\d):[0-5]?\d(:[0-5]?\d)?$/
                description: >-
                  When the absence begins. Follows the format `HH:mm` or
                  `HH:mm:ss` (e.g., `14:45:15`). If `start_time` is specified,
                  `end_time` has to be specified as well.
              end_time:
                type: string
                pattern: /^(?:2[0-3]|[01]?\d):[0-5]?\d(:[0-5]?\d)?$/
                description: >-
                  When the absence ends. Follows the format `HH:mm` or `HH:mm:ss`
                  (e.g., `14:45:15`). If `end_time` is specified, `start_time` has
                  to be specified as well.
            required:
              - employee_id
              - absence_type_id
              - start_date
              - end_date
              - employee_note
            example:
              employee_id: wXJMxwDvPAjrJ4CyqdV9
              absence_type_id: 3YKtQ7qedsrcCady1jSyAkY1
              start_date: '2019-09-17'
              end_date: '2019-09-21'
              start_time: '08:30:00'
              end_time: '16:00:00'
              start_half_day: false
              end_half_day: false
              employee_note: Visiting the aliens
      DeleteHrisAbsencesAbsenceIdParameterAbsenceId:
        type: string
        description: The ID of the absence
        required: []
      DeleteHrisAbsencesAbsenceIdSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              id:
                type: string
                description: >-
                  The globally unique ID of this object generated by Kombo. We
                  recommend using this as a stable primary key for syncing.
                required: []
              remote_id:
                nullable: true
                type: string
                description: >-
                  The raw ID of the object in the remote system. We don't
                  recommend using this as a primary key on your side as it might
                  sometimes be compromised of multiple identifiers if a system
                  doesn't provide a clear primary key.
                required: []
              employee_id:
                type: string
                required: []
              approver_id:
                nullable: true
                type: string
                description: >-
                  **(⚠️ Deprecated - We won't increase coverage for this
                  feature)** The ID of the employee who is responsible for
                  approving this absence.
                required: []
              start_date:
                nullable: true
                type: string
                description: The date this absence starts in the `yyyy-MM-dd` format.
                required: []
              end_date:
                nullable: true
                type: string
                description: The date this absence ends in the `yyyy-MM-dd` format.
                required: []
              start_half_day:
                nullable: true
                type: boolean
                description: >-
                  `true` if the absence starts in the middle of the day, `false`
                  if not, and `null` if the absence type doesn't support half-day
                  absences. If an absence goes across multiple days and
                  `start_half_day` is set, it means that on the last day the
                  absence is only on the first half of the day.
                required: []
              end_half_day:
                nullable: true
                type: boolean
                description: >-
                  `true` if the absence ends in the middle of the day, `false` if
                  not, and `null` if the absence type doesn't support half-day
                  absences. If an absence goes across multiple days and
                  `end_half_day` is set, it means that on the first day the
                  absence only starts in the second half-day.
                required: []
              start_time:
                nullable: true
                type: string
                description: >-
                  The time at which this absence starts. Follows the format
                  `HH:mm:ss` (e.g., `14:45:15`).
                required: []
              end_time:
                nullable: true
                type: string
                description: >-
                  The time at which this absence ends. Follows the format
                  `HH:mm:ss` (e.g., `14:45:15`).
                required: []
              amount:
                nullable: true
                type: number
                format: double
                minimum: 5.e-324
                exclusiveMinimum: false
                maximum: 1.7976931348623157e+308
                exclusiveMaximum: false
                description: The amount of time this absence takes.
                required: []
              unit:
                nullable: true
                type: string
                enum:
                  - HOURS
                  - DAYS
                description: The unit of time for this absence. Can be `HOURS` or `DAYS`.
                required: []
              status:
                nullable: true
                oneOf:
                  - type: string
                    enum:
                      - REQUESTED
                      - APPROVED
                      - DECLINED
                      - CANCELLED
                      - DELETED
                    required: []
                  - type: string
                    description: >-
                      If we can't find a clear mapping: The original string passed
                      through.
                    required: []
                description: >-
                  One of 5 standardized values (`REQUESTED`, `APPROVED`,
                  `DECLINED`, `CANCELLED`, or `DELETED`) **or** — in rare cases
                  where can't find a clear mapping — the original string passed
                  through.
                required: []
              employee_note:
                nullable: true
                type: string
                description: A note the employee has added to this absence.
                required: []
              type_id:
                nullable: true
                type: string
                description: The Kombo absence type ID of this absence.
                required: []
              changed_at:
                description: >-
                  The timestamp when this object was last changed. This value is
                  tracked by Kombo based on changes in the data.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              remote_deleted_at:
                nullable: true
                description: >-
                  The date and time the object was deleted in the remote system.
                  Objects are automatically marked as deleted when Kombo can't
                  retrieve them from the remote system anymore. Kombo will also
                  anonymize entries 14 days after they disappear.
                type: string
                format: date-time
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required: []
              remote_data:
                nullable: true
                type: object
                additionalProperties:
                  format: any
                description: >-
                  Includes the data fetched from the remote system.

                  Please be aware that including this in you scope config might
                  violate other

                  scopes that are set.


                  Remote data always has the endpoint path that we got the data
                  from as the

                  top level key. For example, it could look like: `{ "/companies":
                  { ... }}`
                      
                  This is not available on all plans. Reach out to Kombo if you
                  need it.
                required: []
            required:
              - id
              - remote_id
              - employee_id
              - approver_id
              - start_date
              - end_date
              - start_half_day
              - end_half_day
              - start_time
              - end_time
              - amount
              - unit
              - status
              - employee_note
              - type_id
              - changed_at
              - remote_deleted_at
              - remote_data
            example:
              id: 22st2Ji8XpncEYEak8mvQgQF
              remote_id: '1348'
              employee_id: JDdUy9kiH5APaGizFrgNmQjM
              approver_id: AgXEispYPP1BbToHpqnqcpxy
              start_date: '2022-08-04'
              end_date: '2022-08-05'
              start_half_day: true
              end_half_day: false
              start_time: '13:15:00'
              end_time: '17:00:00'
              amount: 2
              unit: DAYS
              status: APPROVED
              employee_note: Visiting my family.
              type_id: xzZoKssDaMZAd62kxayzzQvD
              changed_at: '2022-08-07T14:01:29.196Z'
              remote_deleted_at: '2022-08-07T14:01:29.196Z'
              remote_data: null
        required:
          - status
          - data
      DeleteHrisAbsencesAbsenceIdErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      DeleteHrisAbsencesAbsenceIdRequestBody:
        type: object
      GetHrisLegalEntitiesParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetHrisLegalEntitiesParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetHrisLegalEntitiesParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetHrisLegalEntitiesParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetHrisLegalEntitiesParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetHrisLegalEntitiesParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetHrisLegalEntitiesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: >-
                        The globally unique ID of this object generated by Kombo.
                        We recommend using this as a stable primary key for
                        syncing.
                      required: []
                    remote_id:
                      nullable: true
                      type: string
                      description: >-
                        The raw ID of the object in the remote system. We don't
                        recommend using this as a primary key on your side as it
                        might sometimes be compromised of multiple identifiers if
                        a system doesn't provide a clear primary key.
                      required: []
                    name:
                      nullable: true
                      type: string
                      required: []
                    address:
                      nullable: true
                      type: object
                      properties:
                        city:
                          nullable: true
                          type: string
                          default: null
                          required: []
                        country:
                          nullable: true
                          type: string
                          default: null
                          description: >-
                            Contains the ISO2 country code if possible. If not, it
                            contains the original value.
                          required: []
                        raw:
                          nullable: true
                          type: string
                          default: null
                          description: >-
                            If we have address data, this is filled with the raw
                            address string.
                          required: []
                        state:
                          nullable: true
                          type: string
                          default: null
                          required: []
                        street_1:
                          nullable: true
                          type: string
                          default: null
                          description: >-
                            If we can parse the address data, this field contains
                            the first part of the street information.
                          required: []
                        street_2:
                          nullable: true
                          type: string
                          default: null
                          required: []
                        zip_code:
                          nullable: true
                          type: string
                          default: null
                          required: []
                      required: []
                    changed_at:
                      description: >-
                        The timestamp when this object was last changed. This
                        value is tracked by Kombo based on changes in the data.
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_deleted_at:
                      nullable: true
                      description: >-
                        The date and time the object was deleted in the remote
                        system. Objects are automatically marked as deleted when
                        Kombo can't retrieve them from the remote system anymore.
                        Kombo will also anonymize entries 14 days after they
                        disappear.
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_data:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      description: >-
                        Includes the data fetched from the remote system.

                        Please be aware that including this in you scope config
                        might violate other

                        scopes that are set.


                        Remote data always has the endpoint path that we got the
                        data from as the

                        top level key. For example, it could look like: `{
                        "/companies": { ... }}`
                            
                        This is not available on all plans. Reach out to Kombo if
                        you need it.
                      required: []
                  required:
                    - id
                    - remote_id
                    - name
                    - address
                    - changed_at
                    - remote_deleted_at
                    - remote_data
                  example:
                    id: 4B9bKBpX5tnwjiG93TAqF7ci
                    remote_id: '49'
                    name: ACME Inc.
                    address:
                      city: Berlin
                      country: DE
                      raw: |-
                        Sonnenallee 63
                        12045 Berlin, Berlin
                        Germany
                      state: Berlin
                      street_1: Sonnenallee 63
                      street_2: null
                      zip_code: '12045'
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
                    remote_data: null
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 4B9bKBpX5tnwjiG93TAqF7ci
                  remote_id: '49'
                  name: ACME Inc.
                  address:
                    city: Berlin
                    country: DE
                    raw: |-
                      Sonnenallee 63
                      12045 Berlin, Berlin
                      Germany
                    state: Berlin
                    street_1: Sonnenallee 63
                    street_2: null
                    zip_code: '12045'
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
                  remote_data: null
        required:
          - status
          - data
      GetHrisLegalEntitiesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetAtsApplicationsParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetAtsApplicationsParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetAtsApplicationsParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetAtsApplicationsParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetAtsApplicationsParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetAtsApplicationsParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetAtsApplicationsParameterOutcome:
        type: string
        enum:
          - PENDING
          - HIRED
          - DECLINED
        description: >-
          **(⚠️ Deprecated - Use the `outcomes` filter instead.)** Filter
          applications by outcome. This allows you to get applications that are
          for example `PENDING`, `HIRED`, or `DECLINED`.
        required: []
      GetAtsApplicationsParameterOutcomes:
        type: string
        description: |-
          Filter by a comma-separated list of `PENDING`, `HIRED`, `DECLINED` 
          * `PENDING`: The application is still being processed. 
          * `HIRED`: The candidate was hired. 
          * `DECLINED`: The candidate was declined. 
           

          Leave this blank to get results matching all values.
        required: []
      GetAtsApplicationsParameterRemoteCreatedAfter:
        description: >-
          Filter applications by the day they were created in the remote system.
          This allows you to get applications that were created on or after a
          certain day.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetAtsApplicationsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                          required: []
                        remote_id:
                          nullable: true
                          type: string
                          required: []
                        outcome:
                          nullable: true
                          type: string
                          enum:
                            - PENDING
                            - HIRED
                            - DECLINED
                          description: >-
                            Parsed status of the application. If Kombo identifies
                            that the application was accepted and the candidate
                            hired, it will be `HIRED`. If the application was
                            rejected or the candidate declined, it will be
                            `DECLINED`. If the application is still in process, it
                            will be `PENDING`.

                            Kombo will always try to deliver this information as
                            reliably as possible.
                          required: []
                        rejection_reason_name:
                          nullable: true
                          type: string
                          description: Reason for the rejection of the candidate.
                          required: []
                        current_stage_id:
                          nullable: true
                          type: string
                          description: ID of the current application stage
                          required: []
                        job_id:
                          nullable: true
                          type: string
                          required: []
                        candidate_id:
                          nullable: true
                          type: string
                          required: []
                        custom_fields:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          required: []
                        changed_at:
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_deleted_at:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_created_at:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_updated_at:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_data:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          description: >-
                            Includes the data fetched from the remote system.

                            Please be aware that including this in you scope
                            config might violate other

                            scopes that are set.


                            Remote data always has the endpoint path that we got
                            the data from as the

                            top level key. For example, it could look like: `{
                            "/companies": { ... }}`
                                
                            This is not available on all plans. Reach out to Kombo
                            if you need it.
                          required: []
                      required:
                        - id
                        - remote_id
                        - outcome
                        - rejection_reason_name
                        - current_stage_id
                        - job_id
                        - candidate_id
                        - custom_fields
                        - changed_at
                        - remote_deleted_at
                        - remote_created_at
                        - remote_updated_at
                        - remote_data
                      example:
                        id: 26vafvWSRmbhNcxJYqjCzuJg
                        remote_id: '32'
                        outcome: HIRED
                        rejection_reason_name: Any text string
                        current_stage_id: 5J7L4b48wBfffYwek9Az9pkM
                        job_id: H5daSm8e85Dmvmne3wLeCPhX
                        candidate_id: H77fDF8uvEzGNPRubiz5DvQ7
                        custom_fields: {}
                        changed_at: '2022-08-07T14:01:29.196Z'
                        remote_deleted_at: null
                        remote_created_at: '2022-08-07T14:01:29.196Z'
                        remote_updated_at: '2022-08-07T14:01:29.196Z'
                        remote_data: null
                    - type: object
                      properties:
                        candidate:
                          nullable: true
                          allOf:
                            - type: object
                              properties:
                                id:
                                  type: string
                                  required: []
                                remote_id:
                                  type: string
                                  required: []
                                first_name:
                                  nullable: true
                                  type: string
                                  description: First name of the candidate.
                                  required: []
                                last_name:
                                  nullable: true
                                  type: string
                                  description: Last name of the candidate.
                                  required: []
                                email_addresses:
                                  nullable: true
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      email_address:
                                        nullable: true
                                        type: string
                                        format: email
                                        required: []
                                      type:
                                        nullable: true
                                        type: string
                                        description: >-
                                          Kombo exposes type information through
                                          this field. If we don't get any
                                          information from the tool, we will set
                                          this to `null`.
                                        required: []
                                    required:
                                      - type
                                  default: []
                                  description: >-
                                    A list of email addresses of the candidate
                                    with an optional type. If an email address is
                                    invalid, it will be filtered out.
                                  required: []
                              required:
                                - id
                                - remote_id
                                - first_name
                                - last_name
                                - email_addresses
                              example:
                                id: 26vafvWSRmbhNcxJYqjCzuJg
                                remote_id: '32'
                                first_name: John
                                last_name: Doe
                                email_addresses:
                                  - email_address: john.doe@example.com
                                    type: PRIVATE
                            - type: object
                              properties:
                                tags:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        required: []
                                      remote_id:
                                        nullable: true
                                        type: string
                                        required: []
                                      name:
                                        nullable: true
                                        type: string
                                        required: []
                                    required:
                                      - id
                                      - remote_id
                                      - name
                                    example:
                                      id: 26vafvWSRmbhNcxJYqjCzuJg
                                      remote_id: '32'
                                      name: High Potential
                                  required: []
                              required:
                                - tags
                          required: []
                        current_stage:
                          nullable: true
                          type: object
                          properties:
                            id:
                              type: string
                              required: []
                            remote_id:
                              nullable: true
                              type: string
                              required: []
                            name:
                              nullable: true
                              type: string
                              required: []
                          required:
                            - id
                            - remote_id
                            - name
                          example:
                            id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            name: Initial Screening
                        job:
                          nullable: true
                          type: object
                          properties:
                            id:
                              type: string
                              description: >-
                                The globally unique ID of this object generated by
                                Kombo. We recommend using this as a stable primary
                                key for syncing.
                              required: []
                            remote_id:
                              type: string
                              description: >-
                                The raw ID of the object in the remote system. We
                                don't recommend using this as a primary key on
                                your side as it might sometimes be compromised of
                                multiple identifiers if a system doesn't provide a
                                clear primary key.
                              required: []
                            name:
                              nullable: true
                              type: string
                              description: Title of the job.
                              required: []
                          required:
                            - id
                            - remote_id
                            - name
                          example:
                            id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            name: Backend Engineer
                        interviews:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                description: The globally unique Kombo ID of the interview.
                                required: []
                              remote_id:
                                nullable: true
                                type: string
                                description: >-
                                  The ID of the interview in the integrated
                                  system.
                                required: []
                              title:
                                nullable: true
                                type: string
                                description: The title of the interview.
                                required: []
                              starting_at:
                                nullable: true
                                description: The start time of the interview.
                                type: string
                                format: date-time
                                externalDocs:
                                  url: >-
                                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                                required: []
                              ending_at:
                                nullable: true
                                description: The end time of the interview.
                                type: string
                                format: date-time
                                externalDocs:
                                  url: >-
                                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                                required: []
                              location:
                                nullable: true
                                type: object
                                properties:
                                  city:
                                    nullable: true
                                    type: string
                                    default: null
                                    required: []
                                  country:
                                    nullable: true
                                    type: string
                                    default: null
                                    description: >-
                                      Contains the ISO2 country code if possible.
                                      If not, it contains the original value.
                                    required: []
                                  raw:
                                    nullable: true
                                    type: string
                                    default: null
                                    description: >-
                                      If we have address data, this is filled with
                                      the raw address string.
                                    required: []
                                  state:
                                    nullable: true
                                    type: string
                                    default: null
                                    required: []
                                  street_1:
                                    nullable: true
                                    type: string
                                    default: null
                                    description: >-
                                      If we can parse the address data, this field
                                      contains the first part of the street
                                      information.
                                    required: []
                                  street_2:
                                    nullable: true
                                    type: string
                                    default: null
                                    required: []
                                  zip_code:
                                    nullable: true
                                    type: string
                                    default: null
                                    required: []
                                description: Location of the interview.
                                required: []
                            required:
                              - id
                              - remote_id
                              - title
                              - starting_at
                              - ending_at
                              - location
                            example:
                              id: 26vafvWSRmbhNcxJYqjCzuJg
                              remote_id: '32'
                              title: Interview with John Doe
                              starting_at: '2023-06-26T14:30:00.000Z'
                              ending_at: '2023-06-26T15:30:00.000Z'
                              location:
                                city: Berlin
                                country: DE
                                raw: Berlin, Germany
                                state: Berlin
                                street_1: Lohmühlenstraße 65
                                street_2: null
                                zip_code: '12435'
                          required: []
                      required:
                        - candidate
                        - current_stage
                        - job
                        - interviews
                  required: []
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 26vafvWSRmbhNcxJYqjCzuJg
                  remote_id: '32'
                  outcome: HIRED
                  rejection_reason_name: Any text string
                  current_stage_id: 5J7L4b48wBfffYwek9Az9pkM
                  job_id: H5daSm8e85Dmvmne3wLeCPhX
                  candidate_id: H77fDF8uvEzGNPRubiz5DvQ7
                  custom_fields: {}
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
                  remote_created_at: '2022-08-07T14:01:29.196Z'
                  remote_updated_at: '2022-08-07T14:01:29.196Z'
                  remote_data: null
                  candidate:
                    id: 26vafvWSRmbhNcxJYqjCzuJg
                    remote_id: '32'
                    first_name: John
                    last_name: Doe
                    email_addresses:
                      - email_address: john.doe@example.com
                        type: PRIVATE
                    tags:
                      - id: 26vafvWSRmbhNcxJYqjCzuJg
                        remote_id: '32'
                        name: High Potential
                  current_stage:
                    id: 26vafvWSRmbhNcxJYqjCzuJg
                    remote_id: '32'
                    name: Initial Screening
                  job:
                    id: 26vafvWSRmbhNcxJYqjCzuJg
                    remote_id: '32'
                    name: Backend Engineer
                  interviews:
                    - id: 26vafvWSRmbhNcxJYqjCzuJg
                      remote_id: '32'
                      title: Interview with John Doe
                      starting_at: '2023-06-26T14:30:00.000Z'
                      ending_at: '2023-06-26T15:30:00.000Z'
                      location:
                        city: Berlin
                        country: DE
                        raw: Berlin, Germany
                        state: Berlin
                        street_1: Lohmühlenstraße 65
                        street_2: null
                        zip_code: '12435'
        required:
          - status
          - data
      GetAtsApplicationsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PutAtsApplicationsApplicationIdStageParameterApplicationId:
        type: string
        required: []
      PutAtsApplicationsApplicationIdStageSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PutAtsApplicationsApplicationIdStageErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PutAtsApplicationsApplicationIdStageRequestBody:
        allOf:
          - type: object
            properties:
              stage_id:
                type: string
                description: >-
                  The ID of the stage to move the application to. This ID must be
                  the ID of a stage that is connected to the job that the
                  application is connected to.
              remote_fields:
                type: object
                properties:
                  greenhouse:
                    type: object
                    properties:
                      post_headers:
                        type: object
                        properties:
                          On-Behalf-Of:
                            nullable: true
                            type: string
                            default: null
                            description: >-
                              ID of the the user that will show up as having
                              performed the action in Greenhouse. We already pass
                              a value by default, but you can use this to override
                              it.
                        description: Headers we will pass with `POST` requests to Greenhouse.
                    description: Fields specific to Greenhouse.
                description: >-
                  Additional fields that we will pass through to specific ATS
                  systems.
            required:
              - stage_id
            example:
              stage_id: 3PJ8PZhZZa1eEdd2DtPNtVup
      PostAtsApplicationsApplicationIdResultLinksParameterApplicationId:
        type: string
        description: Kombo ID of the application you want to create the link for.
        required: []
      PostAtsApplicationsApplicationIdResultLinksSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PostAtsApplicationsApplicationIdResultLinksErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsApplicationsApplicationIdResultLinksRequestBody:
        allOf:
          - type: object
            properties:
              label:
                type: string
                description: >-
                  If we can display a display name for the link, we will use this
                  label.
              url:
                type: string
                format: url
                description: URL of the link.
              details:
                type: object
                properties:
                  custom_field_name_prefix:
                    type: string
                    description: >-
                      That will be added to the attribute labels if they are used
                      for custom fields. If you specify `Acme:` as the prefix, the
                      custom field will be named `Acme: Score`. Putting in the
                      name of your company/product is a good idea.
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: The name of the attribute
                        value:
                          type: string
                          description: The value of the attribute
                      required:
                        - key
                        - value
                required:
                  - custom_field_name_prefix
                  - attributes
                description: >-
                  Additional details with attributes that will be added to the
                  result. This can be percentages, scores, or any text.


                  We generally recommend using short attribute keys and a short
                  custom_field_name_prefix to avoid overflowing the ATS UI.
              remote_fields:
                type: object
                properties:
                  greenhouse:
                    type: object
                    properties:
                      post_headers:
                        type: object
                        properties:
                          On-Behalf-Of:
                            nullable: true
                            type: string
                            default: null
                            description: >-
                              ID of the the user that will show up as having
                              performed the action in Greenhouse. We already pass
                              a value by default, but you can use this to override
                              it.
                        description: Headers we will pass with `POST` requests to Greenhouse.
                    description: Fields specific to Greenhouse.
                description: >-
                  Additional fields that we will pass through to specific ATS
                  systems.
            required:
              - label
              - url
            example:
              label: Assessment Result
              url: https://example.com/test-results/5BtP1WC1UboS7CF3yxjKcvjG
              details:
                custom_field_name_prefix: 'Acme:'
                attributes:
                  - key: Score
                    value: 100%
                  - key: Time
                    value: 2:30h
      PostAtsApplicationsApplicationIdNotesParameterApplicationId:
        type: string
        description: Kombo ID of the application you want to create the note for.
        required: []
      PostAtsApplicationsApplicationIdNotesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PostAtsApplicationsApplicationIdNotesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsApplicationsApplicationIdNotesRequestBody:
        allOf:
          - type: object
            properties:
              content:
                type: string
                description: UTF-8 content of the note.
              content_type:
                type: string
                enum:
                  - PLAIN_TEXT
                description: >-
                  Content type of the note. Currently only `PLAIN_TEXT` is
                  supported.
              remote_fields:
                type: object
                properties:
                  teamtailor:
                    type: object
                    properties:
                      user_id:
                        type: string
                        description: >-
                          ID of the user that created the note. Defaults to the
                          first admin user found.
                    description: Teamtailor specific remote fields for the note.
                  greenhouse:
                    type: object
                    properties:
                      visibility:
                        type: string
                        enum:
                          - admin_only
                          - private
                          - public
                        description: Visibility of the created note.
                    description: Greenhouse specific remote fields for the note.
                  recruitee:
                    type: object
                    properties:
                      visibility:
                        format: any
                        description: Visibility of the created note.
                      is_json:
                        type: boolean
                        description: >-
                          Whether the note is in a stringified JSON format. If
                          true, content should contain a valid JSON as per the
                          [Recruitee API
                          documentation](https://docs.recruitee.com/reference/candidatesidnotes)
                          (body_json field). If false we add the note as a plain
                          text.
                    description: Recruitee specific remote fields for the note.
                description: Tool specific remote fields for the note.
            required:
              - content
              - content_type
            example:
              content: A new message from the candidate is available in YourChat!
              content_type: PLAIN_TEXT
      PostAtsApplicationsApplicationIdAttachmentsParameterApplicationId:
        type: string
        required: []
      PostAtsApplicationsApplicationIdAttachmentsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PostAtsApplicationsApplicationIdAttachmentsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsApplicationsApplicationIdAttachmentsRequestBody:
        allOf:
          - type: object
            properties:
              attachment:
                allOf:
                  - type: object
                    properties:
                      name:
                        type: string
                        description: Name of the file you want to upload.
                      content_type:
                        type: string
                        pattern: /^[\w.-]+\/[\w.-]+$/
                        description: >-
                          Content/MIME type of the file (e.g., `application/pdf`).
                          This is required if you provide `data` and optional if
                          you provide `data_url`.
                      data:
                        type: string
                        description: >-
                          Base64-encoded contents of the file you want to upload.
                          You must provide either this or `data_url`.
                      data_url:
                        type: string
                        format: url
                        description: >-
                          Publicly accessible URL to the file you want to upload.
                          You must provide either this or `data`.
                    required:
                      - name
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - CV
                          - COVER_LETTER
                          - OTHER
                    required:
                      - type
              remote_fields:
                type: object
                properties:
                  greenhouse:
                    type: object
                    properties:
                      post_headers:
                        type: object
                        properties:
                          On-Behalf-Of:
                            nullable: true
                            type: string
                            default: null
                            description: >-
                              ID of the the user that will show up as having
                              performed the action in Greenhouse. We already pass
                              a value by default, but you can use this to override
                              it.
                        description: Headers we will pass with `POST` requests to Greenhouse.
                    description: Fields specific to Greenhouse.
                description: >-
                  Additional fields that we will pass through to specific ATS
                  systems.
            required:
              - attachment
            example:
              attachment:
                name: Frank Doe CV.txt
                data: >-
                  SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=
                type: CV
                content_type: text/plain
      GetAtsCandidatesParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetAtsCandidatesParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetAtsCandidatesParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetAtsCandidatesParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetAtsCandidatesParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetAtsCandidatesParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetAtsCandidatesParameterEmail:
        type: string
        format: email
        description: >-
          Filter the candidates based on an email address. When set, returns only
          the candidates where the given `email` is in `email_addresses`. 
        required: []
      GetAtsCandidatesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                          required: []
                        remote_id:
                          type: string
                          required: []
                        first_name:
                          nullable: true
                          type: string
                          description: First name of the candidate.
                          required: []
                        last_name:
                          nullable: true
                          type: string
                          description: Last name of the candidate.
                          required: []
                        company:
                          nullable: true
                          type: string
                          description: The current company of the candidate.
                          required: []
                        title:
                          nullable: true
                          type: string
                          description: The current job title of the candidate.
                          required: []
                        confidential:
                          nullable: true
                          type: boolean
                          description: >-
                            Whether the candidate's profile is confidential in the
                            ATS.
                          required: []
                        source:
                          nullable: true
                          type: string
                          required: []
                        phone_numbers:
                          nullable: true
                          type: array
                          items:
                            type: object
                            properties:
                              phone_number:
                                type: string
                                required: []
                              type:
                                nullable: true
                                type: string
                                default: null
                                description: >-
                                  Kombo exposes type information through this
                                  field. If we don't get any information from the
                                  tool, we will set this to `null`.
                                required: []
                            required:
                              - phone_number
                          default: []
                          description: A list of phone numbers of the candidate.
                          required: []
                        email_addresses:
                          nullable: true
                          type: array
                          items:
                            type: object
                            properties:
                              email_address:
                                nullable: true
                                type: string
                                format: email
                                required: []
                              type:
                                nullable: true
                                type: string
                                description: >-
                                  Kombo exposes type information through this
                                  field. If we don't get any information from the
                                  tool, we will set this to `null`.
                                required: []
                            required:
                              - type
                          default: []
                          description: >-
                            A list of email addresses of the candidate with an
                            optional type. If an email address is invalid, it will
                            be filtered out.
                          required: []
                        social_media:
                          nullable: true
                          type: array
                          items:
                            type: object
                            properties:
                              link:
                                nullable: true
                                type: string
                                default: null
                                required: []
                              type:
                                nullable: true
                                type: string
                                default: null
                                required: []
                              username:
                                nullable: true
                                type: string
                                default: null
                                required: []
                            required: []
                          default: []
                          description: List of social media accounts of the candidate.
                          required: []
                        location:
                          nullable: true
                          type: object
                          properties:
                            city:
                              nullable: true
                              type: string
                              default: null
                              required: []
                            country:
                              nullable: true
                              type: string
                              default: null
                              description: >-
                                Contains the ISO2 country code if possible. If
                                not, it contains the original value.
                              required: []
                            raw:
                              nullable: true
                              type: string
                              default: null
                              description: >-
                                If we have address data, this is filled with the
                                raw address string.
                              required: []
                            state:
                              nullable: true
                              type: string
                              default: null
                              required: []
                            street_1:
                              nullable: true
                              type: string
                              default: null
                              description: >-
                                If we can parse the address data, this field
                                contains the first part of the street information.
                              required: []
                            street_2:
                              nullable: true
                              type: string
                              default: null
                              required: []
                            zip_code:
                              nullable: true
                              type: string
                              default: null
                              required: []
                          description: Location of the candidate.
                          required: []
                        custom_fields:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          required: []
                        remote_created_at:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_updated_at:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_data:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          description: >-
                            Includes the data fetched from the remote system.

                            Please be aware that including this in you scope
                            config might violate other

                            scopes that are set.


                            Remote data always has the endpoint path that we got
                            the data from as the

                            top level key. For example, it could look like: `{
                            "/companies": { ... }}`
                                
                            This is not available on all plans. Reach out to Kombo
                            if you need it.
                          required: []
                        changed_at:
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_deleted_at:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                      required:
                        - id
                        - remote_id
                        - first_name
                        - last_name
                        - company
                        - title
                        - confidential
                        - source
                        - phone_numbers
                        - email_addresses
                        - social_media
                        - location
                        - custom_fields
                        - remote_created_at
                        - remote_updated_at
                        - remote_data
                        - changed_at
                        - remote_deleted_at
                      example:
                        id: 26vafvWSRmbhNcxJYqjCzuJg
                        remote_id: '32'
                        first_name: John
                        last_name: Doe
                        company: Acme, Inc.
                        title: Head of Marketing
                        confidential: false
                        source: Employee Referral
                        phone_numbers:
                          - phone_number: +1-541-754-3010
                            type: HOME
                        email_addresses:
                          - email_address: john.doe@example.com
                            type: PRIVATE
                        social_media:
                          - link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
                            type: YOUTUBE
                            username: null
                        location:
                          city: Berlin
                          country: DE
                          raw: Berlin, Germany
                          state: Berlin
                          street_1: Lohmühlenstraße 65
                          street_2: null
                          zip_code: '12435'
                        custom_fields: {}
                        remote_created_at: '2022-04-02T00:00:00.000Z'
                        remote_updated_at: '2022-04-04T00:00:00.000Z'
                        remote_data: null
                        changed_at: '2022-04-04T00:00:00.000Z'
                        remote_deleted_at: null
                    - type: object
                      properties:
                        applications:
                          type: array
                          items:
                            allOf:
                              - type: object
                                properties:
                                  id:
                                    type: string
                                    required: []
                                  remote_id:
                                    nullable: true
                                    type: string
                                    required: []
                                  outcome:
                                    nullable: true
                                    type: string
                                    enum:
                                      - PENDING
                                      - HIRED
                                      - DECLINED
                                    description: >-
                                      Parsed status of the application. If Kombo
                                      identifies that the application was accepted
                                      and the candidate hired, it will be `HIRED`.
                                      If the application was rejected or the
                                      candidate declined, it will be `DECLINED`.
                                      If the application is still in process, it
                                      will be `PENDING`.

                                      Kombo will always try to deliver this
                                      information as reliably as possible.
                                    required: []
                                  rejection_reason_name:
                                    nullable: true
                                    type: string
                                    description: Reason for the rejection of the candidate.
                                    required: []
                                required:
                                  - id
                                  - remote_id
                                  - outcome
                                  - rejection_reason_name
                                example:
                                  id: 26vafvWSRmbhNcxJYqjCzuJg
                                  remote_id: '32'
                                  outcome: HIRED
                                  rejection_reason_name: Any text string
                              - type: object
                                properties:
                                  current_stage:
                                    nullable: true
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        required: []
                                      name:
                                        nullable: true
                                        type: string
                                        required: []
                                      remote_id:
                                        nullable: true
                                        type: string
                                        required: []
                                    required:
                                      - id
                                      - name
                                      - remote_id
                                    example:
                                      id: 26vafvWSRmbhNcxJYqjCzuJg
                                      name: Initial Screening
                                      remote_id: '32'
                                  job:
                                    nullable: true
                                    type: object
                                    properties:
                                      id:
                                        type: string
                                        description: >-
                                          The globally unique ID of this object
                                          generated by Kombo. We recommend using
                                          this as a stable primary key for
                                          syncing.
                                        required: []
                                      name:
                                        nullable: true
                                        type: string
                                        description: Title of the job.
                                        required: []
                                      remote_id:
                                        type: string
                                        description: >-
                                          The raw ID of the object in the remote
                                          system. We don't recommend using this as
                                          a primary key on your side as it might
                                          sometimes be compromised of multiple
                                          identifiers if a system doesn't provide
                                          a clear primary key.
                                        required: []
                                    required:
                                      - id
                                      - name
                                      - remote_id
                                    example:
                                      id: 26vafvWSRmbhNcxJYqjCzuJg
                                      name: Backend Engineer
                                      remote_id: '32'
                                required:
                                  - current_stage
                                  - job
                            required: []
                          required: []
                        tags:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                required: []
                              name:
                                nullable: true
                                type: string
                                required: []
                              remote_id:
                                nullable: true
                                type: string
                                required: []
                            required:
                              - id
                              - name
                              - remote_id
                            example:
                              id: 26vafvWSRmbhNcxJYqjCzuJg
                              name: High Potential
                              remote_id: '32'
                          required: []
                      required:
                        - applications
                        - tags
                  required: []
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 26vafvWSRmbhNcxJYqjCzuJg
                  remote_id: '32'
                  first_name: John
                  last_name: Doe
                  company: Acme, Inc.
                  title: Head of Marketing
                  confidential: false
                  source: Employee Referral
                  phone_numbers:
                    - phone_number: +1-541-754-3010
                      type: HOME
                  email_addresses:
                    - email_address: john.doe@example.com
                      type: PRIVATE
                  social_media:
                    - link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
                      type: YOUTUBE
                      username: null
                  location:
                    city: Berlin
                    country: DE
                    raw: Berlin, Germany
                    state: Berlin
                    street_1: Lohmühlenstraße 65
                    street_2: null
                    zip_code: '12435'
                  custom_fields: {}
                  remote_created_at: '2022-04-02T00:00:00.000Z'
                  remote_updated_at: '2022-04-04T00:00:00.000Z'
                  remote_data: null
                  changed_at: '2022-04-04T00:00:00.000Z'
                  remote_deleted_at: null
                  applications:
                    - id: 26vafvWSRmbhNcxJYqjCzuJg
                      remote_id: '32'
                      outcome: HIRED
                      rejection_reason_name: Any text string
                      current_stage:
                        id: 26vafvWSRmbhNcxJYqjCzuJg
                        name: Initial Screening
                        remote_id: '32'
                      job:
                        id: 26vafvWSRmbhNcxJYqjCzuJg
                        name: Backend Engineer
                        remote_id: '32'
                  tags:
                    - id: 26vafvWSRmbhNcxJYqjCzuJg
                      name: High Potential
                      remote_id: '32'
        required:
          - status
          - data
      GetAtsCandidatesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsCandidatesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    required: []
                  remote_id:
                    type: string
                    required: []
                  first_name:
                    nullable: true
                    type: string
                    description: First name of the candidate.
                    required: []
                  last_name:
                    nullable: true
                    type: string
                    description: Last name of the candidate.
                    required: []
                  company:
                    nullable: true
                    type: string
                    description: The current company of the candidate.
                    required: []
                  title:
                    nullable: true
                    type: string
                    description: The current job title of the candidate.
                    required: []
                  confidential:
                    nullable: true
                    type: boolean
                    description: Whether the candidate's profile is confidential in the ATS.
                    required: []
                  source:
                    nullable: true
                    type: string
                    required: []
                  phone_numbers:
                    nullable: true
                    type: array
                    items:
                      type: object
                      properties:
                        phone_number:
                          type: string
                          required: []
                        type:
                          nullable: true
                          type: string
                          default: null
                          description: >-
                            Kombo exposes type information through this field. If
                            we don't get any information from the tool, we will
                            set this to `null`.
                          required: []
                      required:
                        - phone_number
                    default: []
                    description: A list of phone numbers of the candidate.
                    required: []
                  email_addresses:
                    nullable: true
                    type: array
                    items:
                      type: object
                      properties:
                        email_address:
                          nullable: true
                          type: string
                          format: email
                          required: []
                        type:
                          nullable: true
                          type: string
                          description: >-
                            Kombo exposes type information through this field. If
                            we don't get any information from the tool, we will
                            set this to `null`.
                          required: []
                      required:
                        - type
                    default: []
                    description: >-
                      A list of email addresses of the candidate with an optional
                      type. If an email address is invalid, it will be filtered
                      out.
                    required: []
                  social_media:
                    nullable: true
                    type: array
                    items:
                      type: object
                      properties:
                        link:
                          nullable: true
                          type: string
                          default: null
                          required: []
                        type:
                          nullable: true
                          type: string
                          default: null
                          required: []
                        username:
                          nullable: true
                          type: string
                          default: null
                          required: []
                      required: []
                    default: []
                    description: List of social media accounts of the candidate.
                    required: []
                  location:
                    nullable: true
                    type: object
                    properties:
                      city:
                        nullable: true
                        type: string
                        default: null
                        required: []
                      country:
                        nullable: true
                        type: string
                        default: null
                        description: >-
                          Contains the ISO2 country code if possible. If not, it
                          contains the original value.
                        required: []
                      raw:
                        nullable: true
                        type: string
                        default: null
                        description: >-
                          If we have address data, this is filled with the raw
                          address string.
                        required: []
                      state:
                        nullable: true
                        type: string
                        default: null
                        required: []
                      street_1:
                        nullable: true
                        type: string
                        default: null
                        description: >-
                          If we can parse the address data, this field contains
                          the first part of the street information.
                        required: []
                      street_2:
                        nullable: true
                        type: string
                        default: null
                        required: []
                      zip_code:
                        nullable: true
                        type: string
                        default: null
                        required: []
                    description: Location of the candidate.
                    required: []
                  custom_fields:
                    nullable: true
                    type: object
                    additionalProperties:
                      format: any
                    required: []
                  remote_created_at:
                    nullable: true
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required: []
                  remote_updated_at:
                    nullable: true
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required: []
                  remote_data:
                    nullable: true
                    type: object
                    additionalProperties:
                      format: any
                    description: >-
                      Includes the data fetched from the remote system.

                      Please be aware that including this in you scope config
                      might violate other

                      scopes that are set.


                      Remote data always has the endpoint path that we got the
                      data from as the

                      top level key. For example, it could look like: `{
                      "/companies": { ... }}`
                          
                      This is not available on all plans. Reach out to Kombo if
                      you need it.
                    required: []
                  changed_at:
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required: []
                  remote_deleted_at:
                    nullable: true
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required: []
                required:
                  - id
                  - remote_id
                  - first_name
                  - last_name
                  - company
                  - title
                  - confidential
                  - source
                  - phone_numbers
                  - email_addresses
                  - social_media
                  - location
                  - custom_fields
                  - remote_created_at
                  - remote_updated_at
                  - remote_data
                  - changed_at
                  - remote_deleted_at
                example:
                  id: 26vafvWSRmbhNcxJYqjCzuJg
                  remote_id: '32'
                  first_name: John
                  last_name: Doe
                  company: Acme, Inc.
                  title: Head of Marketing
                  confidential: false
                  source: Employee Referral
                  phone_numbers:
                    - phone_number: +1-541-754-3010
                      type: HOME
                  email_addresses:
                    - email_address: john.doe@example.com
                      type: PRIVATE
                  social_media:
                    - link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
                      type: YOUTUBE
                      username: null
                  location:
                    city: Berlin
                    country: DE
                    raw: Berlin, Germany
                    state: Berlin
                    street_1: Lohmühlenstraße 65
                    street_2: null
                    zip_code: '12435'
                  custom_fields: {}
                  remote_created_at: '2022-04-02T00:00:00.000Z'
                  remote_updated_at: '2022-04-04T00:00:00.000Z'
                  remote_data: null
                  changed_at: '2022-04-04T00:00:00.000Z'
                  remote_deleted_at: null
              - type: object
                properties:
                  applications:
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            id:
                              type: string
                              required: []
                            remote_id:
                              nullable: true
                              type: string
                              required: []
                            outcome:
                              nullable: true
                              type: string
                              enum:
                                - PENDING
                                - HIRED
                                - DECLINED
                              description: >-
                                Parsed status of the application. If Kombo
                                identifies that the application was accepted and
                                the candidate hired, it will be `HIRED`. If the
                                application was rejected or the candidate
                                declined, it will be `DECLINED`. If the
                                application is still in process, it will be
                                `PENDING`.

                                Kombo will always try to deliver this information
                                as reliably as possible.
                              required: []
                            rejection_reason_name:
                              nullable: true
                              type: string
                              description: Reason for the rejection of the candidate.
                              required: []
                          required:
                            - id
                            - remote_id
                            - outcome
                            - rejection_reason_name
                          example:
                            id: 26vafvWSRmbhNcxJYqjCzuJg
                            remote_id: '32'
                            outcome: HIRED
                            rejection_reason_name: Any text string
                        - type: object
                          properties:
                            current_stage:
                              nullable: true
                              type: object
                              properties:
                                id:
                                  type: string
                                  required: []
                                name:
                                  nullable: true
                                  type: string
                                  required: []
                                remote_id:
                                  nullable: true
                                  type: string
                                  required: []
                              required:
                                - id
                                - name
                                - remote_id
                              example:
                                id: 26vafvWSRmbhNcxJYqjCzuJg
                                name: Initial Screening
                                remote_id: '32'
                            job:
                              nullable: true
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: >-
                                    The globally unique ID of this object
                                    generated by Kombo. We recommend using this as
                                    a stable primary key for syncing.
                                  required: []
                                name:
                                  nullable: true
                                  type: string
                                  description: Title of the job.
                                  required: []
                                remote_id:
                                  type: string
                                  description: >-
                                    The raw ID of the object in the remote system.
                                    We don't recommend using this as a primary key
                                    on your side as it might sometimes be
                                    compromised of multiple identifiers if a
                                    system doesn't provide a clear primary key.
                                  required: []
                              required:
                                - id
                                - name
                                - remote_id
                              example:
                                id: 26vafvWSRmbhNcxJYqjCzuJg
                                name: Backend Engineer
                                remote_id: '32'
                          required:
                            - current_stage
                            - job
                      required: []
                    required: []
                  tags:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          required: []
                        name:
                          nullable: true
                          type: string
                          required: []
                        remote_id:
                          nullable: true
                          type: string
                          required: []
                      required:
                        - id
                        - name
                        - remote_id
                      example:
                        id: 26vafvWSRmbhNcxJYqjCzuJg
                        name: High Potential
                        remote_id: '32'
                    required: []
                required:
                  - applications
                  - tags
            required: []
          warnings:
            type: array
            items:
              type: object
              properties:
                message:
                  type: string
                  required: []
              required:
                - message
            required: []
        required:
          - status
          - data
          - warnings
      PostAtsCandidatesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsCandidatesRequestBody:
        allOf:
          - type: object
            properties:
              candidate:
                type: object
                properties:
                  first_name:
                    type: string
                  last_name:
                    type: string
                  email_address:
                    type: string
                    format: email
                    description: >-
                      The primary email address this application will be created
                      with.
                  company:
                    type: string
                    description: The company where the applicant is currently working.
                  title:
                    type: string
                    description: The current job title of the applicant.
                  phone_number:
                    type: string
                  location:
                    type: object
                    properties:
                      city:
                        type: string
                      country:
                        type: string
                        pattern: /^[A-Z]{2}$/
                        description: >-
                          The uppercase two-letter ISO country (e.g., `DE`) of the
                          applicant.
                    required:
                      - country
                  gender:
                    type: string
                    enum:
                      - MALE
                      - FEMALE
                      - OTHER
                    description: >-
                      The gender of the applicant. Must be one of `MALE`,
                      `FEMALE`, or `OTHER`.
                  availability_date:
                    description: The date the applicant is available to start working.
                    type: string
                    format: date-time
                    pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                  salary_expectations:
                    type: object
                    properties:
                      period:
                        type: string
                        enum:
                          - MONTH
                          - YEAR
                        description: >-
                          The period of the salary expectations. Must be one of
                          `MONTH` or `YEAR`.
                      amount:
                        type: number
                        format: double
                        minimum: 5.e-324
                        exclusiveMinimum: false
                        maximum: 1.7976931348623157e+308
                        exclusiveMaximum: false
                        description: The amount of the salary expectations.
                    required:
                      - period
                      - amount
                    description: >-
                      The salary expectations of the applicant. We will
                      automatically convert the amount to a format that is
                      suitable for the ATS you are using. For example, if you are
                      using monthly salary expectations, we will convert the
                      amount to a yearly salary if the ATS expects yearly salary
                      expectations.
                  social_links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          format: url
                      required:
                        - url
                    default: []
                    description: >-
                      A list of social media links of the applicant. The links
                      must be valid URLs.
                required:
                  - first_name
                  - last_name
                  - email_address
              application:
                type: object
                properties:
                  job_id:
                    type: string
                    description: >-
                      Kombo ID or Remote ID of the Job this candidate should apply
                      for. If you want to use the ID of the integrated system
                      (remote_id) you need to prefix the id with "remote:". You
                      can use the remote ID if you do not want to sync jobs.
                  stage_id:
                    type: string
                    description: >-
                      Stage this candidate should be in. If left out, the default
                      stage for this job will be used.
                required:
                  - job_id
                description: >-
                  Currently, every candidate has one application. If you are
                  interested in talent pools, please contact Kombo.
              screening_question_answers:
                type: array
                items:
                  type: object
                  properties:
                    question_id:
                      type: string
                      description: >-
                        ID of the question returned by the Kombo API. We'll report
                        a warning in the logs if the question can't be found on
                        the job.
                    answer:
                      oneOf:
                        - type: string
                          description: >-
                            Answer to a `TEXT` question or the option ID of the
                            answer to a `SINGLE_SELECT` question.
                        - type: boolean
                          description: Answer to a `BOOLEAN` question.
                        - type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          description: Answer to a `NUMBER` question.
                        - type: array
                          items:
                            type: string
                          description: >-
                            Answer to a `MULTI_SELECT` question. The array
                            elements are the IDs of the selected options.
                        - description: >-
                            Answer to a `DATE` question as an ISO 8601 date
                            string.
                          type: string
                          format: date-time
                          pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                        - type: object
                          properties:
                            name:
                              type: string
                              description: Name of the file you want to upload.
                            content_type:
                              type: string
                              pattern: /^[\w.-]+\/[\w.-]+$/
                              description: >-
                                Content/MIME type of the file (e.g.,
                                `application/pdf`). This is required if you
                                provide `data` and optional if you provide
                                `data_url`.
                            data:
                              type: string
                              description: >-
                                Base64-encoded contents of the file you want to
                                upload. You must provide either this or
                                `data_url`.
                            data_url:
                              type: string
                              format: url
                              description: >-
                                Publicly accessible URL to the file you want to
                                upload. You must provide either this or `data`.
                          required:
                            - name
                          description: Answer to a `FILE` question.
                      description: >-
                        Answer to a question. This will be validated based on the
                        question format and throw an error if the answer is
                        invalid. Here is a description of each question type and
                        the required answer format:


                        `TEXT` - Simply provide a "string" answer.


                        `SINGLE_SELECT` - Provide the ID of the answer as a
                        string.


                        `MULTI_SELECT` - Provide a string array containing the
                        question IDs of the selected options.


                        `BOOLEAN` - Either `true` or `false`.


                        `NUMBER` - A number.


                        `DATE` - Provide the answer as an ISO 8601 date string.


                        `FILE` - Please select Option 6 in the dropdown above to
                        see the required format.
                  required:
                    - question_id
                    - answer
                description: >-
                  Array of answers to screening questions. Currently, not all
                  question types are supported and unsupported ones will not be
                  submitted.


                  The available questions a job can be retrieved from the get jobs
                  endpoint. The answers will be validated based on the format of
                  the the questions. Make sure to follow this schema to avoid
                  errors.
                example:
                  - question_id: D8yPrjXXvA2XeBksTmrVvKSn
                    answer: 'Yes'
              attachments:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        name:
                          type: string
                          description: Name of the file you want to upload.
                        content_type:
                          type: string
                          pattern: /^[\w.-]+\/[\w.-]+$/
                          description: >-
                            Content/MIME type of the file (e.g.,
                            `application/pdf`). This is required if you provide
                            `data` and optional if you provide `data_url`.
                        data:
                          type: string
                          description: >-
                            Base64-encoded contents of the file you want to
                            upload. You must provide either this or `data_url`.
                        data_url:
                          type: string
                          format: url
                          description: >-
                            Publicly accessible URL to the file you want to
                            upload. You must provide either this or `data`.
                      required:
                        - name
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - CV
                            - COVER_LETTER
                            - OTHER
                      required:
                        - type
                default: []
                description: Array of the attachments you would like upload.
              source:
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      Name of the source (e.g., `"Example Job Board"`).


                      Note that this **only** works for ATS systems that support
                      creating a source through the API right now. This includes
                      Breezy HR, Fountain, Pinpoint, RECRU, Recruitee, Sage HR,
                      and Haufe Umantis. For all other ATSs, the source will be
                      ignored at the moment.
                description: >-
                  **(⚠️ Deprecated - Use [automatic source
                  writing](/ats/features/application-attribution#automatic-attribution)
                  instead)** Optional source information that will be attached to
                  the candidate. If

                  you're a job board or recruiting service, you can use this to
                  make sure your

                  customers can see which candidates came from you.


                  This is deprecated because writing sources requires users to do
                  some setup in most ATSs.
              gdpr_consent:
                type: object
                properties:
                  expires_at:
                    description: >-
                      Until when the candidate has granted the company they're
                      applying to permission to process their personal data.
                    type: string
                    format: date-time
                    pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                  given:
                    type: boolean
                    description: Whether the candidate has given consent.
                description: >-
                  Optional GDPR consent information required in some jurisdictions
                  (like the Czech Republic or Slovakia).
              remote_fields:
                allOf:
                  - type: object
                    properties:
                      successfactors:
                        type: object
                        properties:
                          Candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to SuccessFactor's
                              `Candidate` object.
                          JobApplication:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to SuccessFactor's
                              `JobApplication` object.
                          copyJobApplicationAttachments:
                            type: boolean
                            description: >-
                              If set to true, we will copy custom attachments from
                              the JobApplication to the Candidate.
                        description: Fields specific to SAP SuccessFactors.
                      teamtailor:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Teamtailor's
                              `Candidate` object.
                      greenhouse:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Greenhouse's
                              `Candidate` object.
                          application:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Greenhouse's
                              `Application` object.
                        description: Fields specific to Greenhouse.
                      lever:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Lever's
                              `Candidate` object. Note: make sure to submit the
                              keys and values in the correct form data format.
                        description: Fields specific to Lever.
                      workable:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Workable's
                              `Candidate` object.
                        description: Fields specific to Workable.
                      bullhorn:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Bullhorn's
                              `Candidate` object.
                        description: Fields specific to Bullhorn.
                    description: >-
                      Additional fields that we will pass through to specific ATS
                      systems.
                  - type: object
                    properties:
                      greenhouse:
                        type: object
                        properties:
                          post_headers:
                            type: object
                            properties:
                              On-Behalf-Of:
                                nullable: true
                                type: string
                                default: null
                                description: >-
                                  ID of the the user that will show up as having
                                  performed the action in Greenhouse. We already
                                  pass a value by default, but you can use this to
                                  override it.
                            description: >-
                              Headers we will pass with `POST` requests to
                              Greenhouse.
                        description: Fields specific to Greenhouse.
                    description: >-
                      Additional fields that we will pass through to specific ATS
                      systems.
                description: >-
                  Additional fields that we will pass through to specific ATS
                  systems.
            required:
              - candidate
              - application
            example:
              candidate:
                first_name: Frank
                last_name: Doe
                company: Acme Inc.
                title: Head of Integrations
                email_address: frank.doe@example.com
                phone_number: +1-541-754-3010
                gender: MALE
                salary_expectations:
                  amount: 100000
                  period: YEAR
                availability_date: '2021-01-01'
                location:
                  city: New York
                  country: US
                social_links:
                  - url: https://www.linkedin.com/in/frank-doe-123456789/
                  - url: https://twitter.com/frankdoe
              application:
                job_id: BDpgnpZ148nrGh4mYHNxJBgx
                stage_id: 8x3YKRDcuRnwShdh96ShBNn1
              attachments:
                - name: Frank Doe CV.txt
                  data: >-
                    SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=
                  type: CV
                  content_type: text/plain
              screening_question_answers:
                - question_id: 3phFBNXRweGnDmsU9o2vdPuQ
                  answer: 'Yes'
                - question_id: EYJjhMQT3LtVKXnTbnRT8s6U
                  answer:
                    - GUzE666zfyjeoCJX6A8n7wh6
                    - 5WPHzzKAv8cx97KtHRUV96U8
                    - 7yZfKGzWigXxxRTygqAfHvyE
      PatchAtsCandidatesCandidateIdParameterCandidateId:
        type: string
        required: []
      PatchAtsCandidatesCandidateIdSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PatchAtsCandidatesCandidateIdErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PatchAtsCandidatesCandidateIdRequestBody:
        type: object
      PostAtsCandidatesCandidateIdAttachmentsParameterCandidateId:
        type: string
        required: []
      PostAtsCandidatesCandidateIdAttachmentsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PostAtsCandidatesCandidateIdAttachmentsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsCandidatesCandidateIdAttachmentsRequestBody:
        allOf:
          - type: object
            properties:
              attachment:
                allOf:
                  - type: object
                    properties:
                      name:
                        type: string
                        description: Name of the file you want to upload.
                      content_type:
                        type: string
                        pattern: /^[\w.-]+\/[\w.-]+$/
                        description: >-
                          Content/MIME type of the file (e.g., `application/pdf`).
                          This is required if you provide `data` and optional if
                          you provide `data_url`.
                      data:
                        type: string
                        description: >-
                          Base64-encoded contents of the file you want to upload.
                          You must provide either this or `data_url`.
                      data_url:
                        type: string
                        format: url
                        description: >-
                          Publicly accessible URL to the file you want to upload.
                          You must provide either this or `data`.
                    required:
                      - name
                  - type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - CV
                          - COVER_LETTER
                          - OTHER
                    required:
                      - type
              remote_fields:
                type: object
                properties:
                  greenhouse:
                    type: object
                    properties:
                      post_headers:
                        type: object
                        properties:
                          On-Behalf-Of:
                            nullable: true
                            type: string
                            default: null
                            description: >-
                              ID of the the user that will show up as having
                              performed the action in Greenhouse. We already pass
                              a value by default, but you can use this to override
                              it.
                        description: Headers we will pass with `POST` requests to Greenhouse.
                    description: Fields specific to Greenhouse.
                description: >-
                  Additional fields that we will pass through to specific ATS
                  systems.
            required:
              - attachment
            example:
              attachment:
                name: Frank Doe CV.txt
                data: >-
                  SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=
                type: CV
                content_type: text/plain
      PostAtsCandidatesCandidateIdResultLinksParameterCandidateId:
        type: string
        description: Kombo ID of the candidate you want to create the link for.
        required: []
      PostAtsCandidatesCandidateIdResultLinksSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PostAtsCandidatesCandidateIdResultLinksErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsCandidatesCandidateIdResultLinksRequestBody:
        allOf:
          - type: object
            properties:
              label:
                type: string
                description: >-
                  If we can display a display name for the link, we will use this
                  label.
              url:
                type: string
                format: url
                description: URL of the link.
              details:
                type: object
                properties:
                  custom_field_name_prefix:
                    type: string
                    description: >-
                      That will be added to the attribute labels if they are used
                      for custom fields. If you specify `Acme:` as the prefix, the
                      custom field will be named `Acme: Score`. Putting in the
                      name of your company/product is a good idea.
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          description: The name of the attribute
                        value:
                          type: string
                          description: The value of the attribute
                      required:
                        - key
                        - value
                required:
                  - custom_field_name_prefix
                  - attributes
                description: >-
                  Additional details with attributes that will be added to the
                  result. This can be percentages, scores, or any text.


                  We generally recommend using short attribute keys and a short
                  custom_field_name_prefix to avoid overflowing the ATS UI.
              remote_fields:
                type: object
                properties:
                  greenhouse:
                    type: object
                    properties:
                      post_headers:
                        type: object
                        properties:
                          On-Behalf-Of:
                            nullable: true
                            type: string
                            default: null
                            description: >-
                              ID of the the user that will show up as having
                              performed the action in Greenhouse. We already pass
                              a value by default, but you can use this to override
                              it.
                        description: Headers we will pass with `POST` requests to Greenhouse.
                    description: Fields specific to Greenhouse.
                description: >-
                  Additional fields that we will pass through to specific ATS
                  systems.
            required:
              - label
              - url
            example:
              label: Assessment Result
              url: https://example.com/test-results/5BtP1WC1UboS7CF3yxjKcvjG
              details:
                custom_field_name_prefix: 'Acme:'
                attributes:
                  - key: Score
                    value: 100%
                  - key: Time
                    value: 2:30h
      PostAtsCandidatesCandidateIdTagsParameterCandidateId:
        type: string
        description: Kombo ID of the candidate you want to add the tag to.
        required: []
      PostAtsCandidatesCandidateIdTagsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PostAtsCandidatesCandidateIdTagsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsCandidatesCandidateIdTagsRequestBody:
        allOf:
          - type: object
            properties:
              tag:
                type: object
                properties:
                  name:
                    type: string
                    minLength: 1
                    description: >-
                      The name of the tag you would like to add. Kombo will find
                      out the right ID of the tag so you don't have to.
                required:
                  - name
              remote_fields:
                type: object
                properties:
                  greenhouse:
                    type: object
                    properties:
                      post_headers:
                        type: object
                        properties:
                          On-Behalf-Of:
                            nullable: true
                            type: string
                            default: null
                            description: >-
                              ID of the the user that will show up as having
                              performed the action in Greenhouse. We already pass
                              a value by default, but you can use this to override
                              it.
                        description: Headers we will pass with `POST` requests to Greenhouse.
                    description: Fields specific to Greenhouse.
                description: >-
                  Additional fields that we will pass through to specific ATS
                  systems.
            required:
              - tag
            example:
              tag:
                name: Excellent Fit
      DeleteAtsCandidatesCandidateIdTagsParameterCandidateId:
        type: string
        description: Kombo ID of the candidate you want to remove the tag from.
        required: []
      DeleteAtsCandidatesCandidateIdTagsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      DeleteAtsCandidatesCandidateIdTagsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      DeleteAtsCandidatesCandidateIdTagsRequestBody:
        allOf:
          - type: object
            properties:
              tag:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the tag you would like to remove.
                required:
                  - name
              remote_fields:
                type: object
                properties:
                  greenhouse:
                    type: object
                    properties:
                      post_headers:
                        type: object
                        properties:
                          On-Behalf-Of:
                            nullable: true
                            type: string
                            default: null
                            description: >-
                              ID of the the user that will show up as having
                              performed the action in Greenhouse. We already pass
                              a value by default, but you can use this to override
                              it.
                        description: Headers we will pass with `POST` requests to Greenhouse.
                    description: Fields specific to Greenhouse.
                description: >-
                  Additional fields that we will pass through to specific ATS
                  systems.
            required:
              - tag
            example:
              tag:
                name: Excellent Fit
      GetAtsTagsParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetAtsTagsParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetAtsTagsParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetAtsTagsParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetAtsTagsParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetAtsTagsParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetAtsTagsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    remote_id:
                      nullable: true
                      type: string
                      required: []
                    name:
                      nullable: true
                      type: string
                      required: []
                    remote_data:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      description: >-
                        Includes the data fetched from the remote system.

                        Please be aware that including this in you scope config
                        might violate other

                        scopes that are set.


                        Remote data always has the endpoint path that we got the
                        data from as the

                        top level key. For example, it could look like: `{
                        "/companies": { ... }}`
                            
                        This is not available on all plans. Reach out to Kombo if
                        you need it.
                      required: []
                    changed_at:
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_deleted_at:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                  required:
                    - id
                    - remote_id
                    - name
                    - remote_data
                    - changed_at
                    - remote_deleted_at
                  example:
                    id: 26vafvWSRmbhNcxJYqjCzuJg
                    remote_id: '32'
                    name: High Potential
                    remote_data: null
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 26vafvWSRmbhNcxJYqjCzuJg
                  remote_id: '32'
                  name: High Potential
                  remote_data: null
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
        required:
          - status
          - data
      GetAtsTagsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetAtsApplicationStagesParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetAtsApplicationStagesParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetAtsApplicationStagesParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetAtsApplicationStagesParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetAtsApplicationStagesParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetAtsApplicationStagesParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetAtsApplicationStagesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    remote_id:
                      nullable: true
                      type: string
                      required: []
                    name:
                      nullable: true
                      type: string
                      required: []
                    remote_data:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      description: >-
                        Includes the data fetched from the remote system.

                        Please be aware that including this in you scope config
                        might violate other

                        scopes that are set.


                        Remote data always has the endpoint path that we got the
                        data from as the

                        top level key. For example, it could look like: `{
                        "/companies": { ... }}`
                            
                        This is not available on all plans. Reach out to Kombo if
                        you need it.
                      required: []
                    changed_at:
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_deleted_at:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                  required:
                    - id
                    - remote_id
                    - name
                    - remote_data
                    - changed_at
                    - remote_deleted_at
                  example:
                    id: 26vafvWSRmbhNcxJYqjCzuJg
                    remote_id: '32'
                    name: Initial Screening
                    remote_data: null
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 26vafvWSRmbhNcxJYqjCzuJg
                  remote_id: '32'
                  name: Initial Screening
                  remote_data: null
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
        required:
          - status
          - data
      GetAtsApplicationStagesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetAtsJobsParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetAtsJobsParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetAtsJobsParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetAtsJobsParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetAtsJobsParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetAtsJobsParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetAtsJobsParameterJobCodes:
        type: string
        description: Filter by a comma-separated list of job codes.
        required: []
      GetAtsJobsParameterPostUrl:
        type: string
        description: >-
          Filter by the `post_url` field. Can be used to find a job based on its
          public posting URL.
        required: []
      GetAtsJobsParameterStatus:
        type: string
        enum:
          - OPEN
          - CLOSED
          - DRAFT
          - ARCHIVED
        description: >-
          **(⚠️ Deprecated - Use the `statuses` filter instead.)** Filter by the
          `status` field. Can be used to find a job based on its status.
        required: []
      GetAtsJobsParameterStatuses:
        type: string
        description: >-
          Filter by a comma-separated list of `OPEN`, `CLOSED`, `DRAFT`,
          `ARCHIVED`  


          Leave this blank to get results matching all values.
        required: []
      GetAtsJobsParameterVisibilities:
        type: string
        description: >-
          Filter by a comma-separated list of `PUBLIC`, `INTERNAL`, `UNLISTED`,
          `CONFIDENTIAL`  


          Leave this blank to get results matching all values.
        required: []
      GetAtsJobsParameterNameContains:
        type: string
        description: >-
          Filter by the `name` field. Can be used to find a job by keywords
          present in the job name.
        required: []
      GetAtsJobsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          type: string
                          description: >-
                            The globally unique ID of this object generated by
                            Kombo. We recommend using this as a stable primary key
                            for syncing.
                          required: []
                        remote_id:
                          type: string
                          description: >-
                            The raw ID of the object in the remote system. We
                            don't recommend using this as a primary key on your
                            side as it might sometimes be compromised of multiple
                            identifiers if a system doesn't provide a clear
                            primary key.
                          required: []
                        name:
                          nullable: true
                          type: string
                          description: Title of the job.
                          required: []
                        job_code:
                          nullable: true
                          type: string
                          description: >-
                            The human readable job code. Some systems expose this
                            as the Requisition Code/ID.
                          required: []
                        description:
                          nullable: true
                          type: string
                          description: >-
                            Description of the job. This field is usually returned
                            as HTML.
                          required: []
                        confidential:
                          nullable: true
                          type: boolean
                          description: >-
                            **(⚠️ Deprecated)** It makes more sense to store the
                            visibility of a job in an enum. Therefore, we
                            introduced the `visibility` enum on jobs.
                          required: []
                        weekly_hours:
                          nullable: true
                          type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          required: []
                        employment_type:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - FULL_TIME
                                - PART_TIME
                                - CONTRACT
                                - SEASONAL
                                - INTERNSHIP
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            The type of employment contract. In rare cases where
                            can't find a clear mapping, the original string is
                            passed through.
                          required: []
                        status:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - OPEN
                                - CLOSED
                                - DRAFT
                                - ARCHIVED
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            One of 4 standardized values (`OPEN`, `CLOSED`,
                            `DRAFT`, or `ARCHIVED`) **or** — in rare cases where
                            can't find a clear mapping — the original string
                            passed through.
                          required: []
                        visibility:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - PUBLIC
                                - INTERNAL
                                - UNLISTED
                                - CONFIDENTIAL
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            Describes the visibility of the job:


                            - `PUBLIC`: visible to everyone, published on a job
                            board

                            - `INTERNAL`: only visible to employees of the company
                            itself

                            - `UNLISTED`: anyone can apply but only if they have
                            the link to it

                            - `CONFIDENTIAL`: nobody can apply and it's only
                            visible in the ATS to people who were invited to it


                            Useful if you are providing a job board and want to
                            post public open jobs of your customers/partners.

                            In rare cases where can't find a clear mapping, the
                            original string is passed through.
                          required: []
                        category:
                          nullable: true
                          type: string
                          description: The category of the job (often the job industry).
                          required: []
                        department:
                          nullable: true
                          type: string
                          required: []
                        post_url:
                          nullable: true
                          type: string
                          description: >-
                            The public job posting URL of the ATS itself. This can
                            be used by external job boards to redirect applicants.
                          required: []
                        experience_level:
                          nullable: true
                          type: string
                          required: []
                        remote_work_status:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - REMOTE
                                - HYBRID
                                - TEMPORARY
                                - ON_SITE
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            Defines if the job supports remote work and if so, to
                            what extent.
                          required: []
                        salary_amount:
                          nullable: true
                          type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          description: The salary amount in the given currency.
                          required: []
                        salary_amount_from:
                          nullable: true
                          type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          description: The lower bound of the salary range.
                          required: []
                        salary_amount_to:
                          nullable: true
                          type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          description: The upper bound of the salary range.
                          required: []
                        salary_currency:
                          nullable: true
                          type: string
                          description: >-
                            Salary currency usually returned in [ISO 4217 currency
                            codes](https://www.iso.org/iso-4217-currency-codes.html).
                          required: []
                        salary_period:
                          nullable: true
                          oneOf:
                            - type: string
                              enum:
                                - YEAR
                                - MONTH
                                - TWO_WEEKS
                                - WEEK
                                - DAY
                                - HOUR
                              required: []
                            - type: string
                              description: >-
                                If we can't find a clear mapping: The original
                                string passed through.
                              required: []
                          description: >-
                            The period of the salary amount (not equal to the pay
                            frequency).
                          required: []
                        location:
                          nullable: true
                          type: object
                          properties:
                            city:
                              nullable: true
                              type: string
                              default: null
                              required: []
                            country:
                              nullable: true
                              type: string
                              default: null
                              description: >-
                                Contains the ISO2 country code if possible. If
                                not, it contains the original value.
                              required: []
                            raw:
                              nullable: true
                              type: string
                              default: null
                              description: >-
                                If we have address data, this is filled with the
                                raw address string.
                              required: []
                            state:
                              nullable: true
                              type: string
                              default: null
                              required: []
                            street_1:
                              nullable: true
                              type: string
                              default: null
                              description: >-
                                If we can parse the address data, this field
                                contains the first part of the street information.
                              required: []
                            street_2:
                              nullable: true
                              type: string
                              default: null
                              required: []
                            zip_code:
                              nullable: true
                              type: string
                              default: null
                              required: []
                          description: The location of the listed job.
                          required: []
                        custom_fields:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          required: []
                        opened_at:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        closed_at:
                          nullable: true
                          description: YYYY-MM-DDTHH:mm:ss.sssZ
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_created_at:
                          nullable: true
                          description: >-
                            The date and time the object was created in the remote
                            system.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_updated_at:
                          nullable: true
                          description: >-
                            A timestamp retrieved from the remote system,
                            describing when the resource was last updated.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        contact_id:
                          nullable: true
                          type: string
                          description: >-
                            **(⚠️ Deprecated)** The user ID of the contact person
                            for this job. We strongly recommend using the new
                            `hiring_team` property instead as it provides more
                            complete and accurate information about the ATS users
                            connected to a job.
                          required: []
                        remote_data:
                          nullable: true
                          type: object
                          additionalProperties:
                            format: any
                          description: >-
                            Includes the data fetched from the remote system.

                            Please be aware that including this in you scope
                            config might violate other

                            scopes that are set.


                            Remote data always has the endpoint path that we got
                            the data from as the

                            top level key. For example, it could look like: `{
                            "/companies": { ... }}`
                                
                            This is not available on all plans. Reach out to Kombo
                            if you need it.
                          required: []
                        changed_at:
                          description: >-
                            The timestamp when this object was last changed. This
                            value is tracked by Kombo based on changes in the
                            data.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                        remote_deleted_at:
                          nullable: true
                          description: >-
                            The date and time the object was deleted in the remote
                            system. Objects are automatically marked as deleted
                            when Kombo can't retrieve them from the remote system
                            anymore. Kombo will also anonymize entries 14 days
                            after they disappear.
                          type: string
                          format: date-time
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required: []
                      required:
                        - id
                        - remote_id
                        - name
                        - job_code
                        - description
                        - confidential
                        - weekly_hours
                        - employment_type
                        - status
                        - visibility
                        - category
                        - department
                        - post_url
                        - experience_level
                        - remote_work_status
                        - salary_amount
                        - salary_amount_from
                        - salary_amount_to
                        - salary_currency
                        - salary_period
                        - location
                        - custom_fields
                        - opened_at
                        - closed_at
                        - remote_created_at
                        - remote_updated_at
                        - contact_id
                        - remote_data
                        - changed_at
                        - remote_deleted_at
                      example:
                        id: 26vafvWSRmbhNcxJYqjCzuJg
                        remote_id: '32'
                        name: Backend Engineer
                        job_code: BE-2021-01
                        description: >-
                          <p>Kombo is hiring engineers! If you are reading this
                          and you are located in Berlin, Germany, feel free to
                          contact us about this position.</p>
                        confidential: false
                        weekly_hours: 37
                        employment_type: FULL_TIME
                        status: OPEN
                        visibility: PUBLIC
                        category: Technical Job
                        department: Engineering
                        post_url: https://jobs.example.com/post/159829112
                        experience_level: Mid-Senior
                        remote_work_status: HYBRID
                        salary_amount: 4200
                        salary_amount_from: null
                        salary_amount_to: null
                        salary_currency: EUR
                        salary_period: MONTH
                        location:
                          city: Berlin
                          country: DE
                          raw: Berlin, Germany
                          state: Berlin
                          street_1: Lohmühlenstraße 65
                          street_2: null
                          zip_code: '12435'
                        custom_fields: {}
                        opened_at: '2022-08-07T14:01:29.196Z'
                        closed_at: null
                        remote_created_at: '2022-08-07T14:01:29.196Z'
                        remote_updated_at: '2022-08-07T14:01:29.196Z'
                        contact_id: 6gT2yLMBEipd3zpezATv3Rhu
                        remote_data: null
                        changed_at: '2022-08-07T14:01:29.196Z'
                        remote_deleted_at: null
                    - type: object
                      properties:
                        stages:
                          type: array
                          items:
                            allOf:
                              - type: object
                                properties:
                                  id:
                                    type: string
                                    required: []
                                  remote_id:
                                    nullable: true
                                    type: string
                                    required: []
                                  name:
                                    nullable: true
                                    type: string
                                    required: []
                                required:
                                  - id
                                  - remote_id
                                  - name
                                example:
                                  id: 26vafvWSRmbhNcxJYqjCzuJg
                                  remote_id: '32'
                                  name: Initial Screening
                              - type: object
                                properties:
                                  index:
                                    nullable: true
                                    type: integer
                                    format: int64
                                    minimum: -9007199254740991
                                    exclusiveMinimum: false
                                    maximum: 9007199254740991
                                    exclusiveMaximum: false
                                    default: null
                                    description: >-
                                      Numeric index following the order of the
                                      stages if they are ordered in the underlying
                                      tool.
                                    required: []
                                example:
                                  index: 0
                                required:
                                  - index
                            required: []
                          description: >-
                            Application stages a candidate can be in for this
                            particular job. 
                          required: []
                        screening_questions:
                          type: array
                          items:
                            allOf:
                              - type: object
                                properties:
                                  id:
                                    type: string
                                    required: []
                                  remote_id:
                                    nullable: true
                                    type: string
                                    required: []
                                  title:
                                    nullable: true
                                    type: string
                                    required: []
                                  description:
                                    nullable: true
                                    type: string
                                    required: []
                                  format:
                                    nullable: true
                                    oneOf:
                                      - type: object
                                        properties:
                                          display_type:
                                            nullable: true
                                            type: string
                                            enum:
                                              - SINGLE_LINE
                                              - MULTI_LINE
                                            default: null
                                            description: >-
                                              If unavailable, we recommend displaying
                                              a single-line input.
                                            required: []
                                          max_length:
                                            nullable: true
                                            type: integer
                                            format: int64
                                            minimum: -9007199254740991
                                            exclusiveMinimum: false
                                            maximum: 9007199254740991
                                            exclusiveMaximum: false
                                            default: null
                                            required: []
                                          type:
                                            type: string
                                            enum:
                                              - TEXT
                                            required: []
                                        required:
                                          - type
                                      - type: object
                                        properties:
                                          display_type:
                                            nullable: true
                                            type: string
                                            enum:
                                              - SLIDER
                                              - FIELD
                                            default: FIELD
                                            required: []
                                          max:
                                            nullable: true
                                            type: number
                                            format: double
                                            minimum: 5.e-324
                                            exclusiveMinimum: false
                                            maximum: 1.7976931348623157e+308
                                            exclusiveMaximum: false
                                            default: null
                                            required: []
                                          min:
                                            nullable: true
                                            type: number
                                            format: double
                                            minimum: 5.e-324
                                            exclusiveMinimum: false
                                            maximum: 1.7976931348623157e+308
                                            exclusiveMaximum: false
                                            default: null
                                            required: []
                                          type:
                                            type: string
                                            enum:
                                              - NUMBER
                                            required: []
                                        required:
                                          - type
                                      - type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - FILE
                                            required: []
                                        required:
                                          - type
                                      - type: object
                                        properties:
                                          display_type:
                                            nullable: true
                                            type: string
                                            enum:
                                              - DROPDOWN
                                              - RADIO
                                            default: null
                                            required: []
                                          options:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                id:
                                                  type: string
                                                  description: >-
                                                    Kombo ID of this question option. Use
                                                    this ID to specify the answer to this
                                                    question.
                                                  required: []
                                                remote_id:
                                                  nullable: true
                                                  type: string
                                                  default: null
                                                  description: >-
                                                    ID in the connected ATS. This might be
                                                    null as some systems only use the name
                                                    to identify the option.
                                                  required: []
                                                name:
                                                  type: string
                                                  description: Content of the question option.
                                                  required: []
                                              required:
                                                - id
                                                - name
                                            required: []
                                          type:
                                            type: string
                                            enum:
                                              - SINGLE_SELECT
                                            required: []
                                        required:
                                          - options
                                          - type
                                      - type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - BOOLEAN
                                            required: []
                                        required:
                                          - type
                                      - type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - DATE
                                            required: []
                                        required:
                                          - type
                                      - type: object
                                        properties:
                                          options:
                                            type: array
                                            items:
                                              type: object
                                              properties:
                                                id:
                                                  type: string
                                                  description: >-
                                                    Kombo ID of this question option. Use
                                                    this ID to specify the answer to this
                                                    question.
                                                  required: []
                                                remote_id:
                                                  nullable: true
                                                  type: string
                                                  default: null
                                                  description: >-
                                                    ID in the connected ATS. This might be
                                                    null as some systems only use the name
                                                    to identify the option.
                                                  required: []
                                                name:
                                                  type: string
                                                  description: Content of the question option.
                                                  required: []
                                              required:
                                                - id
                                                - name
                                            required: []
                                          type:
                                            type: string
                                            enum:
                                              - MULTI_SELECT
                                            required: []
                                        required:
                                          - options
                                          - type
                                      - type: object
                                        properties:
                                          type:
                                            type: string
                                            enum:
                                              - INFORMATION
                                            description: This is just a text block.
                                            required: []
                                        required:
                                          - type
                                      - type: object
                                        properties:
                                          raw_question:
                                            format: any
                                            description: >-
                                              We pass the original question data along
                                              so you can handle it.
                                            required: []
                                          type:
                                            type: string
                                            enum:
                                              - UNKNOWN
                                            description: >-
                                              When we're not able to map a specific
                                              question type yet, we will return this
                                              type. Every `UNKNOWN` question will also
                                              be parsed and unified by us at some
                                              point. This is just a temporary
                                              workaround so you still get all
                                              questions.
                                            required: []
                                        required:
                                          - type
                                    required: []
                                required:
                                  - id
                                  - remote_id
                                  - title
                                  - description
                                  - format
                                example:
                                  id: 26vafvWSRmbhNcxJYqjCzuJg
                                  remote_id: 48b4d36a-1d4b-4c50-ada7-9519078e65b4
                                  title: Which is your primary programming language?
                                  description: >-
                                    Please enter the language you are most
                                    comfortable with.
                                  format:
                                    display_type: SINGLE_LINE
                                    max_length: null
                                    type: TEXT
                              - type: object
                                properties:
                                  index:
                                    nullable: true
                                    type: integer
                                    format: int64
                                    minimum: -9007199254740991
                                    exclusiveMinimum: false
                                    maximum: 9007199254740991
                                    exclusiveMaximum: false
                                    default: null
                                    required: []
                                  required:
                                    nullable: true
                                    type: boolean
                                    required: []
                                required:
                                  - index
                                  - required
                                example:
                                  index: 0
                                  required: true
                            required: []
                          required: []
                        job_postings:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                required: []
                              remote_id:
                                nullable: true
                                type: string
                                required: []
                              description_html:
                                nullable: true
                                type: string
                                required: []
                              status:
                                nullable: true
                                type: string
                                enum:
                                  - ACTIVE
                                  - INACTIVE
                                  - DRAFT
                                required: []
                              visibility:
                                nullable: true
                                type: string
                                enum:
                                  - PUBLIC
                                  - INTERNAL
                                  - UNLISTED
                                required: []
                              remote_data:
                                nullable: true
                                type: object
                                additionalProperties:
                                  format: any
                                description: >-
                                  Includes the data fetched from the remote
                                  system.

                                  Please be aware that including this in you scope
                                  config might violate other

                                  scopes that are set.


                                  Remote data always has the endpoint path that we
                                  got the data from as the

                                  top level key. For example, it could look like:
                                  `{ "/companies": { ... }}`
                                      
                                  This is not available on all plans. Reach out to
                                  Kombo if you need it.
                                required: []
                            required:
                              - id
                              - remote_id
                              - description_html
                              - status
                              - visibility
                              - remote_data
                            example:
                              id: 26vafvWSRmbhNcxJYqjCzuJg
                              remote_id: 48b4d36a-1d4b-4c50-ada7-9519078e65b4
                              description_html: <p>We are looking for a Frontend Engineer.</p>
                              status: ACTIVE
                              visibility: PUBLIC
                              remote_data: null
                          required: []
                        hiring_team:
                          type: array
                          items:
                            allOf:
                              - type: object
                                properties:
                                  id:
                                    type: string
                                    required: []
                                  remote_id:
                                    nullable: true
                                    type: string
                                    required: []
                                  first_name:
                                    nullable: true
                                    type: string
                                    description: First name of the user.
                                    required: []
                                  last_name:
                                    nullable: true
                                    type: string
                                    description: Last name of the user.
                                    required: []
                                  email:
                                    nullable: true
                                    type: string
                                    format: email
                                    description: >-
                                      Email of the user. If the email address is
                                      invalid, it will be set to null.
                                    required: []
                                required:
                                  - id
                                  - remote_id
                                  - first_name
                                  - last_name
                                  - email
                                example:
                                  id: 26vafvWSRmbhNcxJYqjCzuJg
                                  remote_id: '32'
                                  first_name: John
                                  last_name: Doe
                                  email: john.doe@kombo.dev
                              - type: object
                                properties:
                                  hiring_team_roles:
                                    type: array
                                    items:
                                      type: string
                                      enum:
                                        - RECRUITER
                                        - HIRING_MANAGER
                                      example: RECRUITER
                                    description: >-
                                      Array of the roles of the user for this
                                      specific job. Currently only `RECRUITER` and
                                      `HIRING_MANAGER` are mapped into our unified
                                      schema.
                                    required: []
                                required:
                                  - hiring_team_roles
                            required: []
                          required: []
                      required:
                        - stages
                        - screening_questions
                        - job_postings
                        - hiring_team
                      description: >-
                        The hiring team allows you to sync users into your system
                        who can access the job and its applications.
                  required: []
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 26vafvWSRmbhNcxJYqjCzuJg
                  remote_id: '32'
                  name: Backend Engineer
                  job_code: BE-2021-01
                  description: >-
                    <p>Kombo is hiring engineers! If you are reading this and you
                    are located in Berlin, Germany, feel free to contact us about
                    this position.</p>
                  confidential: false
                  weekly_hours: 37
                  employment_type: FULL_TIME
                  status: OPEN
                  visibility: PUBLIC
                  category: Technical Job
                  department: Engineering
                  post_url: https://jobs.example.com/post/159829112
                  experience_level: Mid-Senior
                  remote_work_status: HYBRID
                  salary_amount: 4200
                  salary_amount_from: null
                  salary_amount_to: null
                  salary_currency: EUR
                  salary_period: MONTH
                  location:
                    city: Berlin
                    country: DE
                    raw: Berlin, Germany
                    state: Berlin
                    street_1: Lohmühlenstraße 65
                    street_2: null
                    zip_code: '12435'
                  custom_fields: {}
                  opened_at: '2022-08-07T14:01:29.196Z'
                  closed_at: null
                  remote_created_at: '2022-08-07T14:01:29.196Z'
                  remote_updated_at: '2022-08-07T14:01:29.196Z'
                  contact_id: 6gT2yLMBEipd3zpezATv3Rhu
                  remote_data: null
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
                  stages:
                    - id: 26vafvWSRmbhNcxJYqjCzuJg
                      remote_id: '32'
                      name: Initial Screening
                      index: 0
                  screening_questions:
                    - id: 26vafvWSRmbhNcxJYqjCzuJg
                      remote_id: 48b4d36a-1d4b-4c50-ada7-9519078e65b4
                      title: Which is your primary programming language?
                      description: Please enter the language you are most comfortable with.
                      format:
                        display_type: SINGLE_LINE
                        max_length: null
                        type: TEXT
                      index: 0
                      required: true
                  job_postings:
                    - id: 26vafvWSRmbhNcxJYqjCzuJg
                      remote_id: 48b4d36a-1d4b-4c50-ada7-9519078e65b4
                      description_html: <p>We are looking for a Frontend Engineer.</p>
                      status: ACTIVE
                      visibility: PUBLIC
                      remote_data: null
                  hiring_team:
                    - id: 26vafvWSRmbhNcxJYqjCzuJg
                      remote_id: '32'
                      first_name: John
                      last_name: Doe
                      email: john.doe@kombo.dev
                      hiring_team_roles:
                        - RECRUITER
        required:
          - status
          - data
      GetAtsJobsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsJobsJobIdApplicationsParameterJobId:
        type: string
        description: >-
          Kombo ID or Remote ID of the Job this candidate should apply for. If you
          want to use the ID of the integrated system (remote_id) you need to
          prefix the id with "remote:". You can use the remote ID if you do not
          want to sync jobs.
        required: []
      PostAtsJobsJobIdApplicationsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    required: []
                  remote_id:
                    nullable: true
                    type: string
                    required: []
                  outcome:
                    nullable: true
                    type: string
                    enum:
                      - PENDING
                      - HIRED
                      - DECLINED
                    description: >-
                      Parsed status of the application. If Kombo identifies that
                      the application was accepted and the candidate hired, it
                      will be `HIRED`. If the application was rejected or the
                      candidate declined, it will be `DECLINED`. If the
                      application is still in process, it will be `PENDING`.

                      Kombo will always try to deliver this information as
                      reliably as possible.
                    required: []
                  rejection_reason_name:
                    nullable: true
                    type: string
                    description: Reason for the rejection of the candidate.
                    required: []
                  current_stage_id:
                    nullable: true
                    type: string
                    description: ID of the current application stage
                    required: []
                  job_id:
                    nullable: true
                    type: string
                    required: []
                  candidate_id:
                    nullable: true
                    type: string
                    required: []
                  custom_fields:
                    nullable: true
                    type: object
                    additionalProperties:
                      format: any
                    required: []
                  changed_at:
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required: []
                  remote_deleted_at:
                    nullable: true
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required: []
                  remote_created_at:
                    nullable: true
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required: []
                  remote_updated_at:
                    nullable: true
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required: []
                  remote_data:
                    nullable: true
                    type: object
                    additionalProperties:
                      format: any
                    description: >-
                      Includes the data fetched from the remote system.

                      Please be aware that including this in you scope config
                      might violate other

                      scopes that are set.


                      Remote data always has the endpoint path that we got the
                      data from as the

                      top level key. For example, it could look like: `{
                      "/companies": { ... }}`
                          
                      This is not available on all plans. Reach out to Kombo if
                      you need it.
                    required: []
                required:
                  - id
                  - remote_id
                  - outcome
                  - rejection_reason_name
                  - current_stage_id
                  - job_id
                  - candidate_id
                  - custom_fields
                  - changed_at
                  - remote_deleted_at
                  - remote_created_at
                  - remote_updated_at
                  - remote_data
                example:
                  id: 26vafvWSRmbhNcxJYqjCzuJg
                  remote_id: '32'
                  outcome: HIRED
                  rejection_reason_name: Any text string
                  current_stage_id: 5J7L4b48wBfffYwek9Az9pkM
                  job_id: H5daSm8e85Dmvmne3wLeCPhX
                  candidate_id: H77fDF8uvEzGNPRubiz5DvQ7
                  custom_fields: {}
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
                  remote_created_at: '2022-08-07T14:01:29.196Z'
                  remote_updated_at: '2022-08-07T14:01:29.196Z'
                  remote_data: null
              - type: object
                properties:
                  current_stage:
                    nullable: true
                    type: object
                    properties:
                      id:
                        type: string
                        required: []
                      name:
                        nullable: true
                        type: string
                        required: []
                      remote_id:
                        nullable: true
                        type: string
                        required: []
                    required:
                      - id
                      - name
                      - remote_id
                    example:
                      id: 26vafvWSRmbhNcxJYqjCzuJg
                      name: Initial Screening
                      remote_id: '32'
                  job:
                    nullable: true
                    type: object
                    properties:
                      id:
                        type: string
                        description: >-
                          The globally unique ID of this object generated by
                          Kombo. We recommend using this as a stable primary key
                          for syncing.
                        required: []
                      name:
                        nullable: true
                        type: string
                        description: Title of the job.
                        required: []
                      remote_id:
                        type: string
                        description: >-
                          The raw ID of the object in the remote system. We don't
                          recommend using this as a primary key on your side as it
                          might sometimes be compromised of multiple identifiers
                          if a system doesn't provide a clear primary key.
                        required: []
                    required:
                      - id
                      - name
                      - remote_id
                    example:
                      id: 26vafvWSRmbhNcxJYqjCzuJg
                      name: Backend Engineer
                      remote_id: '32'
                  candidate:
                    nullable: true
                    allOf:
                      - type: object
                        properties:
                          id:
                            type: string
                            required: []
                          remote_id:
                            type: string
                            required: []
                          first_name:
                            nullable: true
                            type: string
                            description: First name of the candidate.
                            required: []
                          last_name:
                            nullable: true
                            type: string
                            description: Last name of the candidate.
                            required: []
                          company:
                            nullable: true
                            type: string
                            description: The current company of the candidate.
                            required: []
                          title:
                            nullable: true
                            type: string
                            description: The current job title of the candidate.
                            required: []
                          confidential:
                            nullable: true
                            type: boolean
                            description: >-
                              Whether the candidate's profile is confidential in
                              the ATS.
                            required: []
                          source:
                            nullable: true
                            type: string
                            required: []
                          phone_numbers:
                            nullable: true
                            type: array
                            items:
                              type: object
                              properties:
                                phone_number:
                                  type: string
                                  required: []
                                type:
                                  nullable: true
                                  type: string
                                  default: null
                                  description: >-
                                    Kombo exposes type information through this
                                    field. If we don't get any information from
                                    the tool, we will set this to `null`.
                                  required: []
                              required:
                                - phone_number
                            default: []
                            description: A list of phone numbers of the candidate.
                            required: []
                          email_addresses:
                            nullable: true
                            type: array
                            items:
                              type: object
                              properties:
                                email_address:
                                  nullable: true
                                  type: string
                                  format: email
                                  required: []
                                type:
                                  nullable: true
                                  type: string
                                  description: >-
                                    Kombo exposes type information through this
                                    field. If we don't get any information from
                                    the tool, we will set this to `null`.
                                  required: []
                              required:
                                - type
                            default: []
                            description: >-
                              A list of email addresses of the candidate with an
                              optional type. If an email address is invalid, it
                              will be filtered out.
                            required: []
                          social_media:
                            nullable: true
                            type: array
                            items:
                              type: object
                              properties:
                                link:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                                type:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                                username:
                                  nullable: true
                                  type: string
                                  default: null
                                  required: []
                              required: []
                            default: []
                            description: List of social media accounts of the candidate.
                            required: []
                          location:
                            nullable: true
                            type: object
                            properties:
                              city:
                                nullable: true
                                type: string
                                default: null
                                required: []
                              country:
                                nullable: true
                                type: string
                                default: null
                                description: >-
                                  Contains the ISO2 country code if possible. If
                                  not, it contains the original value.
                                required: []
                              raw:
                                nullable: true
                                type: string
                                default: null
                                description: >-
                                  If we have address data, this is filled with the
                                  raw address string.
                                required: []
                              state:
                                nullable: true
                                type: string
                                default: null
                                required: []
                              street_1:
                                nullable: true
                                type: string
                                default: null
                                description: >-
                                  If we can parse the address data, this field
                                  contains the first part of the street
                                  information.
                                required: []
                              street_2:
                                nullable: true
                                type: string
                                default: null
                                required: []
                              zip_code:
                                nullable: true
                                type: string
                                default: null
                                required: []
                            description: Location of the candidate.
                            required: []
                          custom_fields:
                            nullable: true
                            type: object
                            additionalProperties:
                              format: any
                            required: []
                          remote_created_at:
                            nullable: true
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: >-
                                https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                            required: []
                          remote_updated_at:
                            nullable: true
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: >-
                                https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                            required: []
                          remote_data:
                            nullable: true
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Includes the data fetched from the remote system.

                              Please be aware that including this in you scope
                              config might violate other

                              scopes that are set.


                              Remote data always has the endpoint path that we got
                              the data from as the

                              top level key. For example, it could look like: `{
                              "/companies": { ... }}`
                                  
                              This is not available on all plans. Reach out to
                              Kombo if you need it.
                            required: []
                          changed_at:
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: >-
                                https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                            required: []
                          remote_deleted_at:
                            nullable: true
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: >-
                                https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                            required: []
                        required:
                          - id
                          - remote_id
                          - first_name
                          - last_name
                          - company
                          - title
                          - confidential
                          - source
                          - phone_numbers
                          - email_addresses
                          - social_media
                          - location
                          - custom_fields
                          - remote_created_at
                          - remote_updated_at
                          - remote_data
                          - changed_at
                          - remote_deleted_at
                        example:
                          id: 26vafvWSRmbhNcxJYqjCzuJg
                          remote_id: '32'
                          first_name: John
                          last_name: Doe
                          company: Acme, Inc.
                          title: Head of Marketing
                          confidential: false
                          source: Employee Referral
                          phone_numbers:
                            - phone_number: +1-541-754-3010
                              type: HOME
                          email_addresses:
                            - email_address: john.doe@example.com
                              type: PRIVATE
                          social_media:
                            - link: https://www.youtube.com/watch?v=dQw4w9WgXcQ
                              type: YOUTUBE
                              username: null
                          location:
                            city: Berlin
                            country: DE
                            raw: Berlin, Germany
                            state: Berlin
                            street_1: Lohmühlenstraße 65
                            street_2: null
                            zip_code: '12435'
                          custom_fields: {}
                          remote_created_at: '2022-04-02T00:00:00.000Z'
                          remote_updated_at: '2022-04-04T00:00:00.000Z'
                          remote_data: null
                          changed_at: '2022-04-04T00:00:00.000Z'
                          remote_deleted_at: null
                      - type: object
                        properties:
                          tags:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  required: []
                                name:
                                  nullable: true
                                  type: string
                                  required: []
                                remote_id:
                                  nullable: true
                                  type: string
                                  required: []
                              required:
                                - id
                                - name
                                - remote_id
                              example:
                                id: 26vafvWSRmbhNcxJYqjCzuJg
                                name: High Potential
                                remote_id: '32'
                            required: []
                        required:
                          - tags
                    required: []
                required:
                  - current_stage
                  - job
                  - candidate
            required: []
          warnings:
            type: array
            items:
              type: object
              properties:
                message:
                  type: string
                  required: []
              required:
                - message
            required: []
        required:
          - status
          - data
          - warnings
      PostAtsJobsJobIdApplicationsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostAtsJobsJobIdApplicationsRequestBody:
        allOf:
          - type: object
            properties:
              stage_id:
                type: string
                description: >-
                  Stage this candidate should be in. If left out, the default
                  stage for this job will be used. You can obtain the possible
                  `stage_id`s from the `get-jobs` endpoint.
              candidate:
                type: object
                properties:
                  first_name:
                    type: string
                  last_name:
                    type: string
                  email_address:
                    type: string
                    format: email
                    description: >-
                      The primary email address this application will be created
                      with.
                  company:
                    type: string
                    description: The company where the applicant is currently working.
                  title:
                    type: string
                    description: The current job title of the applicant.
                  phone_number:
                    type: string
                  location:
                    type: object
                    properties:
                      city:
                        type: string
                      country:
                        type: string
                        pattern: /^[A-Z]{2}$/
                        description: >-
                          The uppercase two-letter ISO country (e.g., `DE`) of the
                          applicant.
                    required:
                      - country
                  gender:
                    type: string
                    enum:
                      - MALE
                      - FEMALE
                      - OTHER
                    description: >-
                      The gender of the applicant. Must be one of `MALE`,
                      `FEMALE`, or `OTHER`.
                  availability_date:
                    description: The date the applicant is available to start working.
                    type: string
                    format: date-time
                    pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                  salary_expectations:
                    type: object
                    properties:
                      period:
                        type: string
                        enum:
                          - MONTH
                          - YEAR
                        description: >-
                          The period of the salary expectations. Must be one of
                          `MONTH` or `YEAR`.
                      amount:
                        type: number
                        format: double
                        minimum: 5.e-324
                        exclusiveMinimum: false
                        maximum: 1.7976931348623157e+308
                        exclusiveMaximum: false
                        description: The amount of the salary expectations.
                    required:
                      - period
                      - amount
                    description: >-
                      The salary expectations of the applicant. We will
                      automatically convert the amount to a format that is
                      suitable for the ATS you are using. For example, if you are
                      using monthly salary expectations, we will convert the
                      amount to a yearly salary if the ATS expects yearly salary
                      expectations.
                  social_links:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                          format: url
                      required:
                        - url
                    default: []
                    description: >-
                      A list of social media links of the applicant. The links
                      must be valid URLs.
                required:
                  - first_name
                  - last_name
                  - email_address
              attachments:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        name:
                          type: string
                          description: Name of the file you want to upload.
                        content_type:
                          type: string
                          pattern: /^[\w.-]+\/[\w.-]+$/
                          description: >-
                            Content/MIME type of the file (e.g.,
                            `application/pdf`). This is required if you provide
                            `data` and optional if you provide `data_url`.
                        data:
                          type: string
                          description: >-
                            Base64-encoded contents of the file you want to
                            upload. You must provide either this or `data_url`.
                        data_url:
                          type: string
                          format: url
                          description: >-
                            Publicly accessible URL to the file you want to
                            upload. You must provide either this or `data`.
                      required:
                        - name
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - CV
                            - COVER_LETTER
                            - OTHER
                      required:
                        - type
                default: []
                description: >-
                  Array of the attachments you would like to upload. The first CV
                  in the attachments will be treated as the resume of the
                  candidate when the tool allows previewing a resume.
              source:
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      Name of the source (e.g., `"Example Job Board"`).


                      Note that this **only** works for ATS systems that support
                      creating a source through the API right now. This includes
                      Breezy HR, Fountain, Pinpoint, RECRU, Recruitee, Sage HR,
                      and Haufe Umantis. For all other ATSs, the source will be
                      ignored at the moment.
                description: >-
                  **(⚠️ Deprecated - Use [automatic source
                  writing](/ats/features/application-attribution#automatic-attribution)
                  instead)** Optional source information that will be attached to
                  the candidate. If

                  you're a job board or recruiting service, you can use this to
                  make sure your

                  customers can see which candidates came from you.


                  This is deprecated because writing sources requires users to do
                  some setup in most ATSs.
              gdpr_consent:
                type: object
                properties:
                  expires_at:
                    description: >-
                      Until when the candidate has granted the company they're
                      applying to permission to process their personal data.
                    type: string
                    format: date-time
                    pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                  given:
                    type: boolean
                    description: Whether the candidate has given consent.
                description: >-
                  Optional GDPR consent information required in some jurisdictions
                  (like the Czech Republic or Slovakia).
              remote_fields:
                allOf:
                  - type: object
                    properties:
                      successfactors:
                        type: object
                        properties:
                          Candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to SuccessFactor's
                              `Candidate` object.
                          JobApplication:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to SuccessFactor's
                              `JobApplication` object.
                          copyJobApplicationAttachments:
                            type: boolean
                            description: >-
                              If set to true, we will copy custom attachments from
                              the JobApplication to the Candidate.
                        description: Fields specific to SAP SuccessFactors.
                      teamtailor:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Teamtailor's
                              `Candidate` object.
                      greenhouse:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Greenhouse's
                              `Candidate` object.
                          application:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Greenhouse's
                              `Application` object.
                        description: Fields specific to Greenhouse.
                      lever:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Lever's
                              `Candidate` object. Note: make sure to submit the
                              keys and values in the correct form data format.
                        description: Fields specific to Lever.
                      workable:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Workable's
                              `Candidate` object.
                        description: Fields specific to Workable.
                      bullhorn:
                        type: object
                        properties:
                          candidate:
                            type: object
                            additionalProperties:
                              format: any
                            description: >-
                              Fields that we will pass through to Bullhorn's
                              `Candidate` object.
                        description: Fields specific to Bullhorn.
                    description: >-
                      Additional fields that we will pass through to specific ATS
                      systems.
                  - type: object
                    properties:
                      greenhouse:
                        type: object
                        properties:
                          post_headers:
                            type: object
                            properties:
                              On-Behalf-Of:
                                nullable: true
                                type: string
                                default: null
                                description: >-
                                  ID of the the user that will show up as having
                                  performed the action in Greenhouse. We already
                                  pass a value by default, but you can use this to
                                  override it.
                            description: >-
                              Headers we will pass with `POST` requests to
                              Greenhouse.
                        description: Fields specific to Greenhouse.
                    description: >-
                      Additional fields that we will pass through to specific ATS
                      systems.
                description: >-
                  Additional fields that we will pass through to specific ATS
                  systems.
              screening_question_answers:
                type: array
                items:
                  type: object
                  properties:
                    question_id:
                      type: string
                      description: >-
                        ID of the question returned by the Kombo API. We'll report
                        a warning in the logs if the question can't be found on
                        the job.
                    answer:
                      oneOf:
                        - type: string
                          description: >-
                            Answer to a `TEXT` question or the option ID of the
                            answer to a `SINGLE_SELECT` question.
                        - type: boolean
                          description: Answer to a `BOOLEAN` question.
                        - type: number
                          format: double
                          minimum: 5.e-324
                          exclusiveMinimum: false
                          maximum: 1.7976931348623157e+308
                          exclusiveMaximum: false
                          description: Answer to a `NUMBER` question.
                        - type: array
                          items:
                            type: string
                          description: >-
                            Answer to a `MULTI_SELECT` question. The array
                            elements are the IDs of the selected options.
                        - description: >-
                            Answer to a `DATE` question as an ISO 8601 date
                            string.
                          type: string
                          format: date-time
                          pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                          externalDocs:
                            url: >-
                              https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                        - type: object
                          properties:
                            name:
                              type: string
                              description: Name of the file you want to upload.
                            content_type:
                              type: string
                              pattern: /^[\w.-]+\/[\w.-]+$/
                              description: >-
                                Content/MIME type of the file (e.g.,
                                `application/pdf`). This is required if you
                                provide `data` and optional if you provide
                                `data_url`.
                            data:
                              type: string
                              description: >-
                                Base64-encoded contents of the file you want to
                                upload. You must provide either this or
                                `data_url`.
                            data_url:
                              type: string
                              format: url
                              description: >-
                                Publicly accessible URL to the file you want to
                                upload. You must provide either this or `data`.
                          required:
                            - name
                          description: Answer to a `FILE` question.
                      description: >-
                        Answer to a question. This will be validated based on the
                        question format and throw an error if the answer is
                        invalid. Here is a description of each question type and
                        the required answer format:


                        `TEXT` - Simply provide a "string" answer.


                        `SINGLE_SELECT` - Provide the ID of the answer as a
                        string.


                        `MULTI_SELECT` - Provide a string array containing the
                        question IDs of the selected options.


                        `BOOLEAN` - Either `true` or `false`.


                        `NUMBER` - A number.


                        `DATE` - Provide the answer as an ISO 8601 date string.


                        `FILE` - Please select Option 6 in the dropdown above to
                        see the required format.
                  required:
                    - question_id
                    - answer
                description: >-
                  Array of answers to screening questions. Currently, not all
                  question types are supported and unsupported ones will not be
                  submitted.


                  The available questions a job can be retrieved from the get jobs
                  endpoint. The answers will be validated based on the format of
                  the the questions. Make sure to follow this schema to avoid
                  errors.
                example:
                  - question_id: D8yPrjXXvA2XeBksTmrVvKSn
                    answer: 'Yes'
            required:
              - candidate
            example:
              candidate:
                first_name: Frank
                last_name: Doe
                company: Acme Inc.
                title: Head of Integrations
                email_address: frank.doe@example.com
                phone_number: +1-541-754-3010
                gender: MALE
                salary_expectations:
                  amount: 100000
                  period: YEAR
                availability_date: '2021-01-01'
                location:
                  city: New York
                  country: US
              stage_id: 8x3YKRDcuRnwShdh96ShBNn1
              attachments:
                - name: Frank Doe CV.txt
                  data: >-
                    SGkgdGhlcmUsIEtvbWJvIGlzIGN1cnJlbnRseSBoaXJpbmcgZW5naW5lZXJzIHRoYXQgbG92ZSB0byB3b3JrIG9uIGRldmVsb3BlciBwcm9kdWN0cy4=
                  type: CV
                  content_type: text/plain
              screening_question_answers:
                - question_id: 3phFBNXRweGnDmsU9o2vdPuQ
                  answer: 'Yes'
                - question_id: EYJjhMQT3LtVKXnTbnRT8s6U
                  answer:
                    - GUzE666zfyjeoCJX6A8n7wh6
                    - 5WPHzzKAv8cx97KtHRUV96U8
                    - 7yZfKGzWigXxxRTygqAfHvyE
      GetAtsUsersParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetAtsUsersParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetAtsUsersParameterUpdatedAfter:
        description: >-
          Filter the entries based on the modification date in format
          YYYY-MM-DDTHH:mm:ss.sssZ. If you want to track entry deletion, also set
          the `include_deleted=true` query parameter, because otherwise, deleted
          entries will be hidden.
        type: string
        format: date-time
        pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
        externalDocs:
          url: >-
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
        required: []
      GetAtsUsersParameterIncludeDeleted:
        type: string
        enum:
          - 'true'
          - 'false'
        default: 'false'
        description: >-
          By default, deleted entries are not returned. Use the `include_deleted`
          query param to include deleted entries too.
        required: []
      GetAtsUsersParameterIds:
        type: string
        description: >-
          Filter by a comma-separated list of IDs such as
          `222k7eCGyUdgt2JWZDNnkDs3,B5DVmypWENfU6eMe6gYDyJG3`. Those IDs are
          validated to be 24 characters long and to exist for this integration in
          the database. If any of the IDs are don't exist, the endpoint will
          return a 404 error.
        required: []
      GetAtsUsersParameterRemoteIds:
        type: string
        description: Filter by a comma-separated list of remote IDs.
        required: []
      GetAtsUsersSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                description: >-
                  Cursor string that can be passed to the `cursor` query parameter
                  to get the next page. If this is `null`, then there are no more
                  pages.
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    remote_id:
                      nullable: true
                      type: string
                      required: []
                    first_name:
                      nullable: true
                      type: string
                      description: First name of the user.
                      required: []
                    last_name:
                      nullable: true
                      type: string
                      description: Last name of the user.
                      required: []
                    email:
                      nullable: true
                      type: string
                      format: email
                      description: >-
                        Email of the user. If the email address is invalid, it
                        will be set to null.
                      required: []
                    remote_data:
                      nullable: true
                      type: object
                      additionalProperties:
                        format: any
                      description: >-
                        Includes the data fetched from the remote system.

                        Please be aware that including this in you scope config
                        might violate other

                        scopes that are set.


                        Remote data always has the endpoint path that we got the
                        data from as the

                        top level key. For example, it could look like: `{
                        "/companies": { ... }}`
                            
                        This is not available on all plans. Reach out to Kombo if
                        you need it.
                      required: []
                    changed_at:
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    remote_deleted_at:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                  required:
                    - id
                    - remote_id
                    - first_name
                    - last_name
                    - email
                    - remote_data
                    - changed_at
                    - remote_deleted_at
                  example:
                    id: 26vafvWSRmbhNcxJYqjCzuJg
                    remote_id: '32'
                    first_name: John
                    last_name: Doe
                    email: john.doe@kombo.dev
                    remote_data: null
                    changed_at: '2022-08-07T14:01:29.196Z'
                    remote_deleted_at: null
                required: []
            required:
              - next
              - results
            example:
              next: >-
                eyJwYWdlIjoxMiwibm90ZSI6InRoaXMgaXMganVzdCBhbiBleGFtcGxlIGFuZCBub3QgcmVwcmVzZW50YXRpdmUgZm9yIGEgcmVhbCBjdXJzb3IhIn0=
              results:
                - id: 26vafvWSRmbhNcxJYqjCzuJg
                  remote_id: '32'
                  first_name: John
                  last_name: Doe
                  email: john.doe@kombo.dev
                  remote_data: null
                  changed_at: '2022-08-07T14:01:29.196Z'
                  remote_deleted_at: null
        required:
          - status
          - data
      GetAtsUsersErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      GetAssessmentPackagesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              packages:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    name:
                      type: string
                      required: []
                    description:
                      type: string
                      required: []
                    updated_at:
                      nullable: true
                      description: YYYY-MM-DDTHH:mm:ss.sssZ
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    type:
                      nullable: true
                      type: string
                      enum:
                        - BEHAVIORAL
                        - VIDEO_INTERVIEW
                        - SKILLS_TEST
                        - BACKGROUND_CHECK
                        - REFERENCE_CHECK
                      required: []
                  required:
                    - id
                    - name
                    - description
                    - updated_at
                    - type
                required: []
            required:
              - packages
            example:
              packages:
                - id: '1001'
                  name: TypeScript
                  description: TypeScript coding skills assessments
                  updated_at: '2023-06-29T18:47:40.890Z'
                  type: SKILLS_TEST
        required:
          - status
          - data
      GetAssessmentPackagesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PutAssessmentPackagesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PutAssessmentPackagesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PutAssessmentPackagesRequestBody:
        allOf:
          - type: object
            properties:
              packages:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: A unique identifier for the assessment package.
                    type:
                      type: string
                      enum:
                        - BEHAVIORAL
                        - VIDEO_INTERVIEW
                        - SKILLS_TEST
                        - BACKGROUND_CHECK
                        - REFERENCE_CHECK
                    name:
                      type: string
                      description: The name of the assessment package.
                    description:
                      type: string
                      description: >-
                        Description about the package. Some ATSs will display this
                        in their UI.
                  required:
                    - id
                    - type
                    - name
                    - description
            required:
              - packages
            example:
              packages:
                - id: '1001'
                  type: SKILLS_TEST
                  name: TypeScript
                  description: TypeScript coding skills assessments
                - id: '1002'
                  type: VIDEO_INTERVIEW
                  name: Video Interview
                  description: Video interview to assess communication skills
      GetAssessmentOrdersOpenParameterCursor:
        type: string
        description: >-
          An optional cursor string used for pagination. This can be retrieved
          from the `next` property of the previous page response.
        required: []
      GetAssessmentOrdersOpenParameterPageSize:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
        maximum: 250
        exclusiveMaximum: false
        default: 100
        description: The number of results to return per page.
        required: []
      GetAssessmentOrdersOpenSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              next:
                nullable: true
                type: string
                required: []
              results:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    package_id:
                      type: string
                      required: []
                    candidate:
                      type: object
                      properties:
                        email:
                          type: string
                          required: []
                        first_name:
                          nullable: true
                          type: string
                          required: []
                        last_name:
                          nullable: true
                          type: string
                          required: []
                        phone:
                          nullable: true
                          type: string
                          required: []
                        remote_id:
                          nullable: true
                          type: string
                          required: []
                      required:
                        - email
                  required:
                    - id
                    - package_id
                    - candidate
                required: []
            required:
              - next
              - results
        required:
          - status
          - data
      GetAssessmentOrdersOpenErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PutAssessmentOrdersAssessmentOrderIdResultParameterAssessmentOrderId:
        type: string
        required: []
      PutAssessmentOrdersAssessmentOrderIdResultSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PutAssessmentOrdersAssessmentOrderIdResultErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PutAssessmentOrdersAssessmentOrderIdResultRequestBody:
        allOf:
          - type: object
            properties:
              status:
                type: string
                enum:
                  - COMPLETED
                  - CANCELLED
                  - OPEN
                description: >-
                  Status of the assessment. Must be one of `COMPLETE` or
                  `CANCELLED`.
              result_url:
                type: string
                format: url
              completed_at:
                description: YYYY-MM-DDTHH:mm:ss.sssZ
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              score:
                type: number
                format: double
                minimum: 5.e-324
                exclusiveMinimum: false
                maximum: 1.7976931348623157e+308
                exclusiveMaximum: false
              max_score:
                type: number
                format: double
                minimum: 5.e-324
                exclusiveMinimum: false
                maximum: 1.7976931348623157e+308
                exclusiveMaximum: false
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                    value:
                      type: string
                  required:
                    - field
                    - value
                default: []
            required:
              - status
              - result_url
              - completed_at
            example:
              status: COMPLETED
              score: 90
              max_score: 100
              result_url: https://example.com
              completed_at: '2023-04-04T00:00:00.000Z'
              attributes:
                - field: remarks
                  value: Test completed with passing score
      PostConnectCreateLinkSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              link:
                type: string
                format: url
                required: []
            required:
              - link
            example:
              link: >-
                https://connect.kombo.dev/v1?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.SWYgeW91IGFyZSByZWFkaW5nIHRoaXMsIHdlIHdvdWxkIGxpa2UgdG8gbGV0IHlvdSBrbm93IHRoYXQgd2UgYXJlIGhpcmluZyBwZW9wbGUgbGlrZSB5b3UgOikuIFJlYWNoIG91dCB0byBhbGV4QGtvbWJvLmRldiB0byBnZXQgaW4gY29udGFjdCBhbmQgdGVsbCBoaW0geW91IGNvbWUgZnJvbSB0aGUgSldUIDsp._hhX5YTtHfLn9ZC806dZceRn2whzxHyrhft1ONzNgOE
        required:
          - status
          - data
      PostConnectCreateLinkErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostConnectCreateLinkRequestBody:
        allOf:
          - type: object
            properties:
              end_user_email:
                type: string
                format: email
                description: The email of the user this link is meant for.
              end_user_organization_name:
                type: string
                minLength: 1
                description: The name of the user's organization.
              end_user_origin_id:
                nullable: true
                type: string
                minLength: 1
                description: The id the user/organization has in your own database.
                default: null
              remote_environment:
                nullable: true
                type: string
                default: null
                description: >-
                  If the tool you want to connect offers different environments,
                  you can specify which one you want to connect to here. If you
                  don't specify this, we'll assume you want to use the production
                  environment. Note that this can only be used if you've also
                  specified a tool through `integration_tool`.
              integration_category:
                type: string
                enum:
                  - HRIS
                  - ATS
                  - ASSESSMENT
                default: HRIS
                description: Category of the integration you want your customer to create.
              integration_tool:
                nullable: true
                type: string
                enum:
                  - personio
                  - workday
                  - workdaycustomreport
                  - workdaycustomreportsftp
                  - successfactors
                  - smartrecruiters
                  - factorial
                  - oraclerecruiting
                  - lever
                  - icims
                  - cornerstonetalentlink
                  - recruitee
                  - greenhouse
                  - greenhousejobboard
                  - teamtailor
                  - ashby
                  - onlyfy
                  - ukgpro
                  - rexx
                  - afas
                  - bamboohr
                  - bullhorn
                  - bullhornlogin
                  - workable
                  - payfitcustomer
                  - payfitpartner
                  - payfit
                  - fountain
                  - kenjo
                  - heavenhr
                  - hibob
                  - softgarden
                  - cezannehr
                  - entraid
                  - azuread
                  - googleworkspace
                  - pinpoint
                  - welcometothejungle
                  - dvinci
                  - join
                  - deel
                  - remotecom
                  - jobvite
                  - okta
                  - sagehr
                  - humaans
                  - traffit
                  - erecruiter
                  - eurecia
                  - umantis
                  - jobylon
                  - oraclehcm
                  - taleez
                  - officient
                  - sesamehr
                  - charliehr
                  - hrworks
                  - abacus
                  - otys
                  - zohopeople
                  - gusto
                  - breathehr
                  - catalystone
                  - mirus
                  - alexishr
                  - eploy
                  - rippling
                  - sapling
                  - nmbrs
                  - heyrecruit
                  - peoplehr
                  - recruhr
                  - jazzhr
                  - lucca
                  - bite
                  - zelt
                  - planday
                  - homerun
                  - haileyhr
                  - silae
                  - mysolution
                  - carerix
                  - datev
                  - datevlug
                  - sympa
                  - breezyhr
                  - flatchr
                  - applicantstack
                  - talentsoft
                  - talentsoftcustomer
                  - concludis
                  - iriscascade
                  - sandbox
                  - sftp
                default: null
                description: Pre-define a tool this integration link can be used for.
              language:
                type: string
                enum:
                  - en
                  - de
                  - fr
                default: en
                description: Language of the connection flow UI.
              scope_config_id:
                nullable: true
                type: string
                default: null
                description: >-
                  Specify a scope config that should be used for this integration.
                  This is an advanced feature, only use it if you know what you're
                  doing!
              enable_filtering:
                type: boolean
                default: false
                description: >-
                  Enable the (filtering
                  feature)[https://docs.kombo.dev/other/filtering] for the
                  integration. HRIS only.
            required:
              - end_user_email
              - end_user_organization_name
            example:
              end_user_email: test@example.com
              end_user_organization_name: Test Inc.
              integration_category: HRIS
              integration_tool: personio
              end_user_origin_id: '123'
              language: en
      GetConnectIntegrationByTokenTokenParameterToken:
        type: string
        required: []
      GetConnectIntegrationByTokenTokenSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              tool:
                type: string
                required: []
              id:
                type: string
                required: []
              end_user_origin_id:
                nullable: true
                type: string
                required: []
              end_user_organization_name:
                type: string
                required: []
              end_user_email:
                nullable: true
                type: string
                format: email
                required: []
            required:
              - tool
              - id
              - end_user_origin_id
              - end_user_organization_name
              - end_user_email
            example:
              tool: personio
              id: personio:CBNMt7dSNCzBdnRTx87dev4E
              end_user_origin_id: '36123'
              end_user_organization_name: Acme, Inc.
              end_user_email: user@example.com
        required:
          - status
          - data
      GetConnectIntegrationByTokenTokenErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostConnectActivateIntegrationSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              tool:
                type: string
                required: []
              id:
                type: string
                required: []
              end_user_origin_id:
                nullable: true
                type: string
                required: []
              end_user_organization_name:
                type: string
                required: []
              end_user_email:
                nullable: true
                type: string
                format: email
                required: []
            required:
              - tool
              - id
              - end_user_origin_id
              - end_user_organization_name
              - end_user_email
            example:
              tool: personio
              id: personio:CBNMt7dSNCzBdnRTx87dev4E
              end_user_origin_id: '36123'
              end_user_organization_name: Acme, Inc.
              end_user_email: user@example.com
        required:
          - status
          - data
      PostConnectActivateIntegrationErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostConnectActivateIntegrationRequestBody:
        allOf:
          - type: object
            properties:
              token:
                type: string
            required:
              - token
      PostCustomDatevPassthroughSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PostCustomDatevPassthroughErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostCustomDatevPassthroughRequestBody:
        allOf:
          - type: object
            properties:
              file_content:
                type: string
                minLength: 1
              accounting_month:
                description: YYYY-MM-DDTHH:mm:ss.sssZ
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              target_system:
                type: string
                enum:
                  - LODAS
              file_type:
                type: string
                enum:
                  - STAMMDATEN
                  - BEWEGUNGSDATEN
              file_name:
                type: string
            required:
              - file_content
              - accounting_month
              - target_system
              - file_type
              - file_name
      PutCustomDatevEmployeesEmployeeIdPreparePayrollParameterEmployeeId:
        type: string
        description: >-
          ID of the employee that should be updated. You can use their Kombo `id`
          or their ID in the remote system by prefixing it with `remote:` (e.g.,
          `remote:12312`)
        required: []
      PutCustomDatevEmployeesEmployeeIdPreparePayrollSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PutCustomDatevEmployeesEmployeeIdPreparePayrollErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PutCustomDatevEmployeesEmployeeIdPreparePayrollRequestBody:
        allOf:
          - type: object
            properties:
              payroll_run:
                type: object
                properties:
                  date:
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                    externalDocs:
                      url: >-
                        https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                required:
                  - date
              hourly_payments:
                type: array
                items:
                  type: object
                  properties:
                    hours:
                      type: number
                      format: double
                      minimum: 5.e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                      description: Number of hours this employee has worked.
                    lohnart:
                      type: number
                      format: double
                      minimum: 5.e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                      description: >-
                        The "Lohnart" (payment-type) in DATEV. Make sure a Lohnart
                        is selected that actually supports hours.
                  required:
                    - hours
                    - lohnart
                description: >-
                  Add entries for all the hourly calculated supplements here. For
                  example you can write "Overtime" or "Work on Holidays" (in hours
                  here). Unfortunately, DATEV doens't allow showing a lable for
                  the entries.
              fixed_payments:
                type: array
                items:
                  type: object
                  properties:
                    amount:
                      type: number
                      format: double
                      minimum: 5.e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                    lohnart:
                      type: number
                      format: double
                      minimum: 5.e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                      description: >-
                        The "Lohnart" (payment-type) in DATEV. Make sure a Lohnart
                        is selected that actually supports fixed payments (no
                        hourly modifier).
                  required:
                    - amount
                    - lohnart
                description: >-
                  Add entries for all the fixed supplements here. For example you
                  can write "Bonuses" (in Euros here). Unfortunately, DATEV
                  doens't allow showing a lable for the entries.
              custom_lodas:
                type: array
                items:
                  type: object
                  properties:
                    amount:
                      type: number
                      format: double
                      minimum: 5.e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                      description: This amount value will be mapped to Datev "Wert" field.
                    lohnart:
                      type: number
                      format: double
                      minimum: 5.e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                      description: Choose a valid Lodas Lohnart.
                    bearbeitungsschluessel:
                      type: number
                      format: double
                      minimum: 5.e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                      description: >-
                        Choose a valid Lodas Bearbeitungsschlüssel. We list the
                        valid Bearbeitungsschlüssel
                        [here](https://storage.googleapis.com/kombo-assets/integrations/datev/lodas_bs.json).
                  required:
                    - amount
                    - lohnart
                    - bearbeitungsschluessel
                default: []
                description: >-
                  Add custom entries to the DATEV Lodas Standard
                  Erfassungstabelle.
            required:
              - payroll_run
              - hourly_payments
              - fixed_payments
            example:
              payroll_run:
                date: '2022-05-01'
              fixed_payments:
                - amount: 560
                  lohnart: 100
              hourly_payments:
                - hours: 14
                  lohnart: 200
                - hours: 16
                  lohnart: 232
              custom_lodas:
                - amount: 8
                  lohnart: 300
                  bearbeitungsschluessel: 4
      PutCustomDatevEmployeesEmployeeIdCompensationsParameterEmployeeId:
        type: string
        description: >-
          ID of the employee that should be updated. You can use their Kombo `id`
          or their ID in the remote system by prefixing it with `remote:` (e.g.,
          `remote:12312`)
        required: []
      PutCustomDatevEmployeesEmployeeIdCompensationsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PutCustomDatevEmployeesEmployeeIdCompensationsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PutCustomDatevEmployeesEmployeeIdCompensationsRequestBody:
        allOf:
          - type: object
            properties:
              effective_date:
                description: >-
                  Date from which the submitted compensations should be valid.
                  Please note that it might not be possible to set compensations
                  for the past if the payroll was already run.
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              compensations:
                type: array
                items:
                  type: object
                  properties:
                    amount:
                      type: number
                      format: double
                      minimum: 5.e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                      description: The amount that this employee will be paid.
                    currency:
                      type: string
                      enum:
                        - EUR
                      description: >-
                        The currency in which the employee gets paid. Currently,
                        only euro is supported as integrated systems only work
                        with Euro.
                    period:
                      type: string
                      enum:
                        - HOUR
                        - MONTH
                      description: >-
                        The period for which the specified amount is paid.
                        Currently, integrated systems only support "HOUR" and
                        "MONTH".
                    lohnart:
                      type: integer
                      format: int64
                      minimum: 1
                      exclusiveMinimum: false
                      maximum: 9999
                      exclusiveMaximum: false
                      description: >-
                        The Lohnart that should be used for this compensation. If
                        not specified, the default Lohnart that was requested in
                        the connection flow will be used. Generally Lohnart is
                        only available for monthly compensations.
                  required:
                    - amount
                    - currency
                    - period
            required:
              - effective_date
              - compensations
            example:
              effective_date: '2022-12-01'
              compensations:
                - amount: 4500
                  currency: EUR
                  period: MONTH
                  lohnart: 200
                - amount: 30
                  currency: EUR
                  period: HOUR
      GetCustomDatevDataPushesSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              data_pushes:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      required: []
                    type:
                      type: string
                      enum:
                        - GENERAL
                        - PAYROLL
                      description: Type of the executed data push.
                      required: []
                    created_at:
                      description: Date when the push-data endpoint was called.
                      type: string
                      format: date-time
                      externalDocs:
                        url: >-
                          https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      required: []
                    upload_jobs:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            required: []
                          file_name:
                            type: string
                            required: []
                          state:
                            type: string
                            enum:
                              - FAILED
                              - UPLOADED
                              - IMPORTED
                              - CORRUPTED
                              - DELETED
                              - AUTO_DELETED
                            description: >-
                              If we were not able to send the file to DATEV, we
                              will set the state "FAILED". The other values are
                              synced from DATEV for the respective import jobs.
                            required: []
                          file:
                            type: string
                            description: Actual content of the file.
                            required: []
                        required:
                          - id
                          - file_name
                          - state
                          - file
                      description: >-
                        List of all the submitted files. This can include multiple
                        files if data was edited for multiple months.
                      required: []
                  required:
                    - id
                    - type
                    - created_at
                    - upload_jobs
                required: []
            required:
              - data_pushes
        required:
          - status
          - data
      GetCustomDatevDataPushesErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostCustomDatevPushDataGeneralSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              files:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      required: []
                    content:
                      type: string
                      required: []
                  required:
                    - name
                    - content
                required: []
            required:
              - files
        required:
          - status
          - data
      PostCustomDatevPushDataGeneralErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostCustomDatevPushDataGeneralRequestBody:
        type: object
      PostCustomDatevPushDataPayrollSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties:
              files:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      required: []
                    content:
                      type: string
                      required: []
                  required:
                    - name
                    - content
                required: []
            required:
              - files
        required:
          - status
          - data
      PostCustomDatevPushDataPayrollErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostCustomDatevPushDataPayrollRequestBody:
        allOf:
          - type: object
            properties:
              payroll_month:
                description: >-
                  Specify the month for which the payroll data should be
                  submitted. The date must be specified as the first day of a
                  month (e.g. 2022-12-01).
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
            required:
              - payroll_month
      PostCustomSilaeEmployeesEmployeeIdPayrollSupplementsParameterEmployeeId:
        type: string
        description: >-
          ID of the employee that should be updated. You can use their Kombo `id`
          or their ID in the remote system by prefixing it with `remote:` (e.g.,
          `remote:12312`)
        required: []
      PostCustomSilaeEmployeesEmployeeIdPayrollSupplementsSuccessfulResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - success
            required: []
          data:
            type: object
            properties: {}
            required: []
        required:
          - status
          - data
      PostCustomSilaeEmployeesEmployeeIdPayrollSupplementsErrorResponse:
        type: object
        properties:
          status:
            type: string
            enum:
              - error
            required: []
          error:
            type: object
            properties:
              message:
                type: string
                required: []
            required:
              - message
        required:
          - status
          - error
      PostCustomSilaeEmployeesEmployeeIdPayrollSupplementsRequestBody:
        allOf:
          - type: object
            properties:
              supplement_code:
                type: string
                description: The ID code of the supplement that you want to add to Silae.
              effective_date:
                description: Date from which the submitted supplement should be active.
                type: string
                format: date-time
                pattern: ^\d{4}-\d{2}-\d{2}(T\d{2}:\d{2}:\d{2}(\.\d+)?)?Z?$
                externalDocs:
                  url: >-
                    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
              element_amount:
                type: number
                format: double
                minimum: 5.e-324
                exclusiveMinimum: false
                maximum: 1.7976931348623157e+308
                exclusiveMaximum: false
                description: The amount of the supplement if it requires a number.
              element_string:
                type: string
                description: The string of the supplement if it requires a string.
            required:
              - supplement_code
              - effective_date
            example:
              supplement_code: '200'
              effective_date: '2024-01-14'
              element_amount: 6
    responses: {}
    parameters: {}
    examples: {}
    requestBodies: {}
    headers: {}
    securitySchemes:
      ApiKey:
        type: http
        scheme: bearer
        description: >-
          Create an API key on the [Secrets](https://app.kombo.dev/secrets) page
          in the Kombo dashboard.
    links: {}
    callbacks: {}
  tags:
    - name: General
    - name: Kombo Connect
      description: >-
        Endpoints for Kombo Connect, our end-user-facing flow for setting up new
        integrations.
    - name: Unified HRIS API
      description: Unified endpoints to access all the HR concepts you might need.
    - name: Unified ATS API
      description: Unified endpoints to access all the ATS concepts you might need.
    - name: Unified ATS-Assessment API
      description: >-
        Unified endpoints to operate Assessments for many applicant tracking
        systems.
  servers:
    - url: https://api.kombo.dev/v1
  security:
    - ApiKey: []
konfigCliVersion: 1.38.61
