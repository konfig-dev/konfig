publishJson:
  company: Gusto
  serviceName: App Integrations
  sdkName: gusto-app-integrations-{language}-sdk
  clientName: GustoAppIntegrations
  metaDescription: >-
    Launched in 2011 as ZenPayroll, Gusto serves more than 300,000 businesses
    nationwide. Each year we process tens of billions of dollars of payroll and
    provide employee benefits—like health insurance and 401(k) accounts—while
    helping companies create incredible work places.


    Through one refreshingly easy, integrated platform, we automate and simplify
    your payroll, benefits, and HR, all while providing expert support. You and
    your employees will get the peace of mind you need to do your best work.
  apiStatusUrls: inherit
  homepage: gusto.com
  developerDocumentation: docs.gusto.com/app-integrations/docs/introduction
  categories:
    - payroll
    - hr
    - benefits
    - human_resources
    - health_insurance
    - compliance
rawSpecString: |
  openapi: 3.0.0
  tags:
    - name: Introspection
    - name: Companies
    - name: Flows
    - name: Locations
    - name: Bank Accounts
    - name: Payment Configs
    - name: Pay Schedules
    - name: Employees
    - name: Employee Tax Setup
    - name: Employee Payment Method
    - name: Employee Employments
    - name: Employee Addresses
    - name: Jobs and Compensations
    - name: Earning Types
    - name: Contractor Payment Method
    - name: Contractor Payments
    - name: Contractors
    - name: Payrolls
    - name: Company Forms
    - name: Employee Forms
    - name: Company Benefits
    - name: Employee Benefits
    - name: Garnishments
    - name: Federal Tax Details
    - name: Industry Selection
    - name: Signatories
    - name: External Payrolls
    - name: Tax Requirements
    - name: Contractor Forms
    - name: Time Off Policies
    - name: Holiday Pay Policies
    - name: Departments
    - name: Generated Documents
    - name: Notifications
    - name: Webhooks
    - name: Events
    - name: Invoices
    - name: Recovery Cases
    - name: ACH Transactions
  info:
    title: Gusto API
    version: '2024-04-01'
    termsOfService: https://gusto.com/about/terms/developer-terms-of-service
    description: Welcome to Gusto's Embedded Payroll API documentation!
    contact:
      name: Developer Relations
      email: developer@gusto.com
  servers:
    - url: https://api.gusto-demo.com
      description: Demo
    - description: Production
      url: https://api.gusto.com
  paths:
    /v1/token_info:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get info about the current access token
        tags:
          - Introspection
        responses:
          '200':
            description: Example response
            content:
              application/json:
                schema:
                  description: ''
                  type: object
                  properties:
                    scope:
                      type: string
                      description: Space delimited string of accessible scopes.
                    resource:
                      type: object
                      description: Information about the token resource.
                      properties:
                        type:
                          type: string
                          description: Type of object
                        uuid:
                          type: string
                          description: UUID of object
                examples:
                  Example:
                    value:
                      scope: companies:read companies:write employees:read
                      resource:
                        type: Company
                        uuid: 5eca5127-6048-43ad-91ee-b56a0c34bc85
        operationId: get-v1-token-info
        description: >-
          Returns scope and resource information associated with the current
          access token.
        parameters:
          - $ref: '#/components/parameters/VersionHeader'
    /oauth/token:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: refresh-access-token
        summary: Refresh access token
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                required:
                  - client_id
                  - client_secret
                  - grant_type
                  - refresh_token
                properties:
                  client_id:
                    type: string
                    description: Your client id
                  client_secret:
                    type: string
                    description: Your client secret
                  redirect_uri:
                    type: string
                    description: The redirect URI you set up via the Developer Portal
                  refresh_token:
                    type: string
                    description: The `refresh_token` being exchanged for an access token code
                  grant_type:
                    type: string
                    description: this should be the literal string 'refresh_token'
        tags:
          - Introspection
        responses:
          '200':
            $ref: '#/components/responses/Authentication-Object'
        description: >-
          Exchange a refresh token for a new access token.


          The previous `refresh_token` will be revoked on the first usage of the
          new `access_token`.


          The `expires_in` value is provided in seconds from when the
          `access_token` was generated.
        security:
          - SystemAccessAuth: []
        parameters:
          - $ref: '#/components/parameters/VersionHeader'
    /v1/provision:
      post:
        x-gusto-integration-type:
          - app-integrations
        summary: Create a company
        tags:
          - Companies
        responses:
          '201':
            description: OK
            content:
              application/json:
                schema:
                  description: ''
                  type: object
                  properties:
                    account_claim_url:
                      type: string
                      description: >-
                        A URL where the user should be redirected to complete
                        their account setup inside of Gusto.
                      readOnly: true
                examples:
                  Example:
                    value:
                      account_claim_url: https://app.gusto.com/claim_account/3456789
          '401':
            description: Authorization information is missing or invalid.
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-provision
        description: >-
          ### Overview

          The company provisioning API provides a way to create a Gusto company as
          part of your integration. When you successfully call the API, the API
          does the following:

          * Creates a new company in Gusto.

          * Creates a new user in Gusto.

          * Makes the new user the primary payroll administrator of the new
          company.

          * Sends a welcome email to the new user.

          In the response, you will receive an account claim URL. Redirect the
          user to this URL to complete their account setup inside of Gusto


          > 📘 System Access Authentication

          >

          > This endpoint uses the [Bearer Auth scheme with the system-level
          access token in the HTTP Authorization
          header](https://docs.gusto.com/embedded-payroll/docs/system-access).
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  user:
                    type: object
                    description: >-
                      Information for the user who will be the primary payroll
                      administrator for the new company.
                    required:
                      - first_name
                      - last_name
                      - email
                    properties:
                      first_name:
                        type: string
                        description: >-
                          The first name of the user who will be the primary
                          payroll admin.
                      last_name:
                        type: string
                        description: >-
                          The last name of the user who will be the primary
                          payroll admin.
                      email:
                        type: string
                        description: >-
                          The email of the user who will be the primary payroll
                          admin.
                      phone:
                        type: string
                        description: >-
                          The phone number of the user who will be the primary
                          payroll admin.
                  company:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: The legal name of the company.
                      trade_name:
                        type: string
                        description: The name of the company.
                      ein:
                        type: string
                        description: The employer identification number (EIN) of the company.
                      states:
                        type: array
                        description: >-
                          The states in which the company operates. States should
                          be included by their two letter code, i.e. NY for New
                          York. 
                        items:
                          type: string
                      number_employees:
                        type: number
                        description: The number of employees in the company.
                      addresses:
                        type: array
                        uniqueItems: false
                        description: >-
                          The locations for the company. This includes mailing,
                          work, and filing addresses.
                        items:
                          type: object
                          properties:
                            street_1:
                              type: string
                            street_2:
                              type: string
                              nullable: true
                            city:
                              type: string
                            zip:
                              type: string
                            state:
                              type: string
                            phone:
                              type: string
                            is_primary:
                              type: string
                              description: >-
                                Whether or not this is a primary address for the
                                company. If set to true, the address will be used
                                as the mailing and filing address for the company
                                and will be added as a work location. If set to
                                false or not included, the address will only be
                                added as a work location for the company. If
                                multiple addresses are included, only one should
                                be marked as primary.
                required:
                  - user
                  - company
              examples:
                Example:
                  value:
                    user:
                      first_name: Frank
                      last_name: Ocean
                      email: frank@example.com
                      phone: '2345558899'
                    company:
                      name: Frank's Ocean, LLC
                      trade_name: Frank’s Ocean
                      tier: complete
                      ein: '123456789'
                      states:
                        - CO
                        - CA
                      number_employees: 8
                      addresses:
                        - street_1: 1201 16th Street Mall
                          street_2: Suite 350
                          city: Denver
                          zip: '80202'
                          state: CO
                          phone: '2345678900'
                          is_primary: 'true'
                        - street_1: 525 20th Street
                          city: San Francisco
                          zip: '94107'
                          state: CA
                          phone: '2345678901'
          description: ''
        security:
          - SystemAccessAuth: []
        parameters:
          - $ref: '#/components/parameters/VersionHeader'
    /v1/companies/{company_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a company
        operationId: get-v1-companies
        description: >-
          Get a company.         

          The employees:read scope is required to return home_address and non-work
          locations.         

          The company_admin:read scope is required to return
          primary_payroll_admin.         

          The signatories:read scope is required to return
          primary_signatory.         


          scope: `companies:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Company-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        tags:
          - Companies
    /v1/companies/{company_id}/custom_fields:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get the custom fields of a company
        description: >-
          Returns a list of the custom fields of the company. Useful when you need
          to know the schema of custom fields for an entire company


          scope: `companies:read`
        operationId: get-v1-companies-company_id-custom_fields
        tags:
          - Companies
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Company-Custom-Field-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
    /v1/companies/{company_id}/locations:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create a company location
        responses:
          '201':
            $ref: '#/components/responses/Location-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-companies-company_id-locations
        description: >-
          Company locations represent all addresses associated with a company.
          These can be filing addresses, mailing addresses, and/or work locations;
          one address may serve multiple, or all, purposes.


          Since all company locations are subsets of locations, retrieving or
          updating an individual record should be done via the locations
          endpoints.


          scope: `companies.write`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  phone_number:
                    type: string
                    pattern: '[0-9]{10}'
                  street_1:
                    type: string
                  street_2:
                    type: string
                    nullable: true
                  city:
                    type: string
                  state:
                    type: string
                  zip:
                    type: string
                  country:
                    type: string
                    default: USA
                  mailing_address:
                    type: boolean
                    description: Specify if this location is the company's mailing address.
                  filing_address:
                    type: boolean
                    description: Specify if this location is the company's filing address.
                required:
                  - phone_number
                  - street_1
                  - city
                  - state
                  - zip
              examples:
                Example:
                  value:
                    phone_number: '8009360383'
                    street_1: 425 2nd Street
                    street_2: Suite 602
                    city: San Francisco
                    state: CA
                    zip: '94107'
                    country: USA
            application/xml:
              schema:
                description: ''
                type: object
                properties:
                  phone_number:
                    type: string
                    minLength: 1
                  street_1:
                    type: string
                    minLength: 1
                  street_2:
                    type: string
                    nullable: true
                    minLength: 1
                  city:
                    type: string
                    minLength: 1
                  state:
                    type: string
                    minLength: 1
                  zip:
                    type: string
                    minLength: 1
                  country:
                    type: string
                    minLength: 1
                required:
                  - phone_number
                  - street_1
                  - street_2
                  - city
                  - state
                  - zip
                  - country
              examples:
                Example:
                  value:
                    phone_number: '8009360383'
                    street_1: 425 2nd Street
                    street_2: Suite 602
                    city: San Francisco
                    state: CA
                    zip: '94107'
                    country: USA
          description: Create a company location.
        tags:
          - Locations
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get company locations
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Location-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-locations
        description: >-
          Company locations represent all addresses associated with a company.
          These can be filing addresses, mailing addresses, and/or work locations;
          one address may serve multiple, or all, purposes.


          Since all company locations are subsets of locations, retrieving or
          updating an individual record should be done via the locations
          endpoints.


          scope: `companies:read`
        tags:
          - Locations
    /v1/locations/{location_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a location
        responses:
          '200':
            $ref: '#/components/responses/Location-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-locations-location_id
        description: |-
          Get a location.

          scope: `companies:read`
        parameters:
          - $ref: '#/components/parameters/location_id'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Locations
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update a location
        responses:
          '200':
            $ref: '#/components/responses/Location-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-locations-location_id
        description: |-
          Update a location.

          scope: `companies.write`
        parameters:
          - $ref: '#/components/parameters/location_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Versionable-Required'
                  - type: object
                    description: ''
                    properties:
                      phone_number:
                        type: string
                        pattern: '[0-9]{10}'
                      street_1:
                        type: string
                      street_2:
                        type: string
                        nullable: true
                      city:
                        type: string
                      state:
                        type: string
                      zip:
                        type: string
                      country:
                        type: string
                      mailing_address:
                        type: boolean
                        description: >-
                          For a company location, specify if this location is the
                          company's mailing address. A company has a single
                          mailing address, so this designation will override any
                          previous selection.
                      filing_address:
                        type: boolean
                        description: >-
                          For a company location, specify if this location is the
                          company's filing address. A company has a single filing
                          address, so this designation will override any previous
                          selection.
              examples:
                Example:
                  value:
                    version: 1928d0c378e519e9c03fb959bc959a6b
                    phone_number: '8009360383'
                    street_1: 425 2nd Street
                    street_2: Suite 602
                    city: San Francisco
                    state: CA
                    zip: '94107'
                    country: USA
          description: Update a location
        tags:
          - Locations
    /v1/locations/{location_uuid}/minimum_wages:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get minimum wages for a location
        responses:
          '200':
            $ref: '#/components/responses/Minimum-Wage-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-locations-location_uuid-minimum_wages
        description: |-
          Get minimum wages for a location

          scope: `companies:read`
        parameters:
          - $ref: '#/components/parameters/location_uuid'
          - $ref: '#/components/parameters/effective_date'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Locations
    /v1/companies/{company_id}/pay_schedules:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get the pay schedules for a company
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Pay-Schedule-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-pay_schedules
        description: >-
          The pay schedule object in Gusto captures the details of when employees
          work and when they should be paid. A company can have multiple pay
          schedules.


          scope: `pay_schedules:read`
        tags:
          - Pay Schedules
    /v1/companies/{company_id}/pay_schedules/{pay_schedule_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a pay schedule
        responses:
          '200':
            $ref: '#/components/responses/Pay-Schedule-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-pay_schedules-pay_schedule_id
        description: >-
          The pay schedule object in Gusto captures the details of when employees
          work and when they should be paid. A company can have multiple pay
          schedules.


          scope: `pay_schedules:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/pay_schedule_id'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Pay Schedules
    /v1/companies/{company_id}/pay_periods:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get pay periods for a company
        tags:
          - Pay Schedules
        responses:
          '200':
            $ref: '#/components/responses/Pay-Period-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-pay_periods
        description: >-
          Pay periods are the foundation of payroll. Compensation, time &
          attendance, taxes, and expense reports all rely on when they happened.
          To begin submitting information for a given payroll, we need to agree on
          the time period.


          By default, this endpoint returns pay periods starting from 6 months ago
          to the date today.  Use the `start_date` and `end_date` parameters to
          change the scope of the response.  End dates can be up to 3 months in
          the future and there is no limit on start dates.


          Starting in version '2023-04-01', the eligible_employees attribute was
          removed from the response.  The eligible employees for a payroll are
          determined by the employee_compensations returned from the
          payrolls#prepare endpoint.


          scope: `payrolls:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/start_date'
          - $ref: '#/components/parameters/end_date'
          - $ref: '#/components/parameters/payroll_types'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/companies/{company_id}/pay_periods/unprocessed_termination_pay_periods:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get termination pay periods for a company
        tags:
          - Pay Schedules
        responses:
          '200':
            $ref: '#/components/responses/Unprocessed-Termination-Pay-Period-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-unprocessed_termination_pay_periods
        description: >-
          When a payroll admin terminates an employee and selects "Dismissal
          Payroll" as the employee's final payroll, their last pay period will
          appear on the list.


          This endpoint returns the unprocessed pay periods for past and future
          terminated employees in a given company.


          scope: `payrolls:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/companies/{company_id}/pay_schedules/assignments:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get pay schedule assignments for a company
        responses:
          '200':
            $ref: '#/components/responses/Pay-Schedule-Assignment-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-pay_schedules-assignments
        description: >-
          This endpoint returns the current pay schedule assignment for a company,
          with pay schedule and employee/department mappings depending on the pay
          schedule type.


          scope: `pay_schedules:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Pay Schedules
    /v1/companies/{company_id}/employees:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create an employee
        operationId: post-v1-employees
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  first_name:
                    type: string
                  middle_initial:
                    type: string
                  last_name:
                    type: string
                  date_of_birth:
                    type: string
                  email:
                    type: string
                  ssn:
                    type: string
                    pattern: '[0-9]{9}'
                  self_onboarding:
                    type: boolean
                    description: >-
                      If true, employee is expected to self-onboard. If false,
                      payroll admin is expected to enter in the employee's
                      onboarding information
                required:
                  - first_name
                  - last_name
              examples:
                Example:
                  value:
                    first_name: Soren
                    middle_initial: A
                    last_name: Kierkegaard
                    date_of_birth: '1995-05-05'
                    email: knight0faith@example.com
                    ssn: '123456294'
          description: Create an employee.
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/VersionHeader'
        description: |-
          Create an employee.

          scope: `employees:manage`
        responses:
          '201':
            $ref: '#/components/responses/Employee-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        tags:
          - Employees
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get employees of a company
        operationId: get-v1-companies-company_id-employees
        parameters:
          - $ref: '#/components/parameters/company_id'
          - schema:
              type: boolean
            in: query
            name: terminated
            description: Filters employees by the provided boolean
          - in: query
            name: include
            schema:
              type: string
              enum:
                - all_compensations
                - custom_fields
            description: >-
              Include the requested attribute(s) in each employee response,
              multiple options are comma separated. Available options:

              - all_compensations: Include all effective dated compensations for
              each job instead of only the current compensation

              - custom_fields: Include employees' custom fields
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - $ref: '#/components/parameters/VersionHeader'
        description: >-
          Get all of the employees, onboarding, active and terminated, for a given
          company.


          scope: `employees:read`
        responses:
          '200':
            $ref: '#/components/responses/Employee-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        tags:
          - Employees
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties: {}
    /v1/companies/{company_uuid}/departments:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: post-departments
        summary: Create a department
        tags:
          - Departments
        description: |-
          Create a department

          scope: `departments:write`
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
              examples:
                Example:
                  value:
                    title: Stage Hand
        parameters:
          - $ref: '#/components/parameters/company_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '201':
            $ref: '#/components/responses/Department-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get all departments of a company
        operationId: get-companies-departments
        parameters:
          - $ref: '#/components/parameters/company_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        description: >-
          Get all of the departments for a given company with the employees and
          contractors assigned to that department.


          scope: `departments:read`
        responses:
          '200':
            $ref: '#/components/responses/Department-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        tags:
          - Departments
    /v1/departments/{department_uuid}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: get-department
        summary: Get a department
        tags:
          - Departments
        description: |
          Get a department given the UUID

          scope: `departments:read`
        parameters:
          - $ref: '#/components/parameters/department_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Department-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: put-departments
        summary: Update a department
        tags:
          - Departments
        description: |-
          Update a department

          scope: `departments:write`
        parameters:
          - $ref: '#/components/parameters/department_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                  title:
                    type: string
                required:
                  - version
              examples:
                Example:
                  value:
                    version: db0edd04aaac4506f7edab03ac855d56
                    title: Backup Dancer
        responses:
          '200':
            $ref: '#/components/responses/Department-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: delete-department
        summary: Delete a department
        tags:
          - Departments
        description: >
          Delete a department. You cannot delete a department until all employees
          and contractors have been removed.


          scope: `departments:write`
        parameters:
          - $ref: '#/components/parameters/department_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
    /v1/departments/{department_uuid}/add:
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: put-add-people-to-department
        summary: Add people to a department
        tags:
          - Departments
        description: |
          Add employees and contractors to a department

          scope: `departments:write`
        parameters:
          - $ref: '#/components/parameters/department_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                  employees:
                    type: array
                    description: Array of employees to add to the department
                    items:
                      properties:
                        uuid:
                          type: string
                  contractors:
                    type: array
                    description: Array of contractors to add to the department
                    items:
                      properties:
                        uuid:
                          type: string
        responses:
          '200':
            $ref: '#/components/responses/Department-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
    /v1/departments/{department_uuid}/remove:
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: put-remove-people-from-department
        summary: Remove people from a department
        tags:
          - Departments
        description: |
          Remove employees and contractors from a department

          scope: `departments:write`
        parameters:
          - $ref: '#/components/parameters/department_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                  employees:
                    type: array
                    description: Array of employees to remove from a department
                    items:
                      properties:
                        uuid:
                          type: string
                  contractors:
                    type: array
                    description: Array of contractors to remove from a department
                    items:
                      properties:
                        uuid:
                          type: string
        responses:
          '200':
            $ref: '#/components/responses/Department-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
    /v1/employees/{employee_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get an employee
        operationId: get-v1-employees
        description: |
          Get an employee.

          scope: `employees:read`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - in: query
            name: include
            schema:
              type: string
              enum:
                - all_compensations
                - custom_fields
            description: >-
              Include the requested attribute(s) in each employee response,
              multiple options are comma separated. Available options:

              - all_compensations: Include all effective dated compensations for
              each job instead of only the current compensation

              - custom_fields: Include employees' custom fields
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Employee-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        tags:
          - Employees
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update an employee
        operationId: put-v1-employees
        description: |-
          Update an employee.

          scope: `employees:write`
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                  first_name:
                    type: string
                  middle_initial:
                    type: string
                  last_name:
                    type: string
                  date_of_birth:
                    type: string
                  email:
                    type: string
                  ssn:
                    type: string
                    pattern: '[0-9]{9}'
                  two_percent_shareholder:
                    type: boolean
                    description: >-
                      Whether the employee is a two percent shareholder of the
                      company. This field only applies to companies with an S-Corp
                      entity type.
                required:
                  - version
              examples:
                Example:
                  value:
                    version: db0edd04aaac4506f7edab03ac855d56
                    first_name: Soren
                    middle_initial: A
                    last_name: Kierkegaard
                    date_of_birth: '1995-05-05'
                    email: knight0faith@example.com
                    ssn: '123456294'
                    two_percent_shareholder: false
          description: Update an employee.
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Employee-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        tags:
          - Employees
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete an onboarding employee
        operationId: delete-v1-employee
        description: >-
          Use this endpoint to delete an employee who is in onboarding. Deleting

          an onboarded employee is not allowed. Please check out the Terminations
          api

          if you need to terminate an onboarded employee.


          scope: `employees:manage`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        tags:
          - Employees
    /v1/employees/{employee_id}/terminations:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create an employee termination
        tags:
          - Employee Employments
        responses:
          '201':
            $ref: '#/components/responses/Termination-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-employees-employee_id-terminations
        description: >-
          Terminations are created whenever an employee is scheduled to leave the
          company. The only things required are an effective date (their last day
          of work) and whether they should receive their wages in a one-off
          termination payroll or with the rest of the company.


          Note that some states require employees to receive their final wages
          within 24 hours (unless they consent otherwise,) in which case running a
          one-off payroll may be the only option.


          scope: `employments:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  effective_date:
                    type: string
                    description: The employee's last day of work.
                  run_termination_payroll:
                    type: boolean
                    description: >-
                      If true, the employee should receive their final wages via
                      an off-cycle payroll. If false, they should receive their
                      final wages on their current pay schedule.
                required:
                  - effective_date
              examples:
                Example:
                  value:
                    effective_date: '2020-06-30'
                    run_termination_payroll: true
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get terminations for an employee
        tags:
          - Employee Employments
        responses:
          '200':
            $ref: '#/components/responses/Termination-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-employees-employee_id-terminations
        description: >-
          Terminations are created whenever an employee is scheduled to leave the
          company. The only things required are an effective date (their last day
          of work) and whether they should receive their wages in a one-off
          termination payroll or with the rest of the company.


          Note that some states require employees to receive their final wages
          within 24 hours (unless they consent otherwise,) in which case running a
          one-off payroll may be the only option.


          scope: `employments:read`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete an employee termination
        operationId: delete-v1-employees-employee_id-terminations
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Employment-Not-Found-Error-Object'
        description: |-
          Delete an employee termination.

          scope: `employments:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Employee Employments
    /v1/terminations/{employee_id}:
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update an employee termination
        tags:
          - Employee Employments
        responses:
          '200':
            $ref: '#/components/responses/Termination-Object'
          '404':
            $ref: '#/components/responses/Employment-Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-terminations-employee_id
        description: >-
          Terminations are created whenever an employee is scheduled to leave the
          company. The only things required are an effective date (their last day
          of work) and whether they should receive their wages in a one-off
          termination payroll or with the rest of the company.


          Note that some states require employees to receive their final wages
          within 24 hours (unless they consent otherwise,) in which case running a
          one-off payroll may be the only option.


          scope: `employments:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Versionable-Required'
                  - type: object
                    description: ''
                    properties:
                      effective_date:
                        type: string
                        description: The employee's last day of work.
                      run_termination_payroll:
                        type: boolean
                        description: >-
                          If true, the employee should receive their final wages
                          via an off-cycle payroll. If false, they should receive
                          their final wages on their current pay schedule.
                    required:
                      - effective_date
              examples:
                Example:
                  value:
                    version: 1928d0c378e519e9c03fb959bc959a6b
                    effective_date: '2020-06-30'
                    run_termination_payroll: true
    /v1/employees/{employee_id}/rehire:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create an employee rehire
        tags:
          - Employee Employments
        responses:
          '201':
            $ref: '#/components/responses/Rehire-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-employees-employee_id-rehire
        description: >-
          Rehire is created whenever an employee is scheduled to return to the
          company.


          scope: `employments:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rehire-Body'
              examples:
                Example:
                  value:
                    effective_date: '2023-06-30'
                    work_location_uuid: b6ae9d93-d4b8-4119-8c96-dba595dd8c30
                    file_new_hire_report: true
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update an employee rehire
        tags:
          - Employee Employments
        responses:
          '200':
            $ref: '#/components/responses/Rehire-Object'
          '404':
            $ref: '#/components/responses/Employment-Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-employees-employee_id-rehire
        description: |-
          Update an employee's rehire.

          scope: `employments:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Versionable-Required'
                  - $ref: '#/components/schemas/Rehire-Body'
              examples:
                Example:
                  value:
                    version: 1928d0c378e519e9c03fb959bc959a6b
                    effective_date: '2023-06-30'
                    work_location_uuid: b6ae9d93-d4b8-4119-8c96-dba595dd8c30
                    file_new_hire_report: true
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get an employee rehire
        tags:
          - Employee Employments
        responses:
          '200':
            $ref: '#/components/responses/Rehire-Object'
          '404':
            $ref: '#/components/responses/Employment-Not-Found-Error-Object'
        operationId: get-v1-employees-employee_id-rehire
        description: >-
          Retrieve an employee's rehire, which contains information on when the
          employee returns to work.


          scope: `employments:read`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete an employee rehire
        description: >-
          Delete an employee rehire. An employee rehire cannot be deleted if it's
          active (past effective date).


          scope: `employments:write`
        operationId: delete-v1-employees-employee_id-rehire
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Employment-Not-Found-Error-Object'
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Employee Employments
    /v1/employees/{employee_id}/employment_history:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get employment history for an employee
        tags:
          - Employee Employments
        responses:
          '200':
            $ref: '#/components/responses/Employment-History-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-employees-employee_id-employment_history
        description: >-
          Retrieve the employment history for a given employee, which includes
          termination and rehire.


          scope: `employments:read`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/employees/{employee_id}/home_addresses:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get an employee's home addresses
        tags:
          - Employee Addresses
        responses:
          '200':
            $ref: '#/components/responses/Employee-Address-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-employees-employee_id-home_addresses
        description: >-
          The home address of an employee is used to determine certain tax
          information about them. Addresses are geocoded on create and update to
          ensure validity.


          Supports home address effective dating and courtesy withholding.


          scope: `employees:read`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create an employee's home address
        tags:
          - Employee Addresses
        responses:
          '200':
            $ref: '#/components/responses/Employee-Address-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-employees-employee_id-home_addresses
        description: >-
          The home address of an employee is used to determine certain tax
          information about them. Addresses are geocoded on create and update to
          ensure validity.


          Supports home address effective dating and courtesy withholding.


          scope: `employees:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  street_1:
                    type: string
                  street_2:
                    type: string
                    nullable: true
                  city:
                    type: string
                  state:
                    type: string
                  zip:
                    type: string
                  effective_date:
                    type: string
                    format: date
                  courtesy_withholding:
                    type: boolean
                required:
                  - version
              examples:
                Example:
                  value:
                    street_1: 300 3rd Street
                    street_2: null
                    city: San Francisco
                    state: CA
                    zip: '94107'
                    effective_date: '2021-01-01'
                    courtesy_withholding: true
    /v1/home_addresses/{home_address_uuid}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get an employee's home address
        tags:
          - Employee Addresses
        responses:
          '200':
            $ref: '#/components/responses/Employee-Address-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-home_addresses-home_address_uuid
        description: >-
          The home address of an employee is used to determine certain tax
          information about them. Addresses are geocoded on create and update to
          ensure validity.


          Supports home address effective dating and courtesy withholding.


          scope: `employees:read`
        parameters:
          - $ref: '#/components/parameters/home_address_uuid'
          - $ref: '#/components/parameters/VersionHeader'
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update an employee's home address
        tags:
          - Employee Addresses
        responses:
          '200':
            $ref: '#/components/responses/Employee-Address-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-home_addresses-home_address_uuid
        description: >-
          The home address of an employee is used to determine certain tax
          information about them. Addresses are geocoded on create and update to
          ensure validity.


          Supports home address effective dating and courtesy withholding.


          scope: `employees:write`
        parameters:
          - $ref: '#/components/parameters/home_address_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                  street_1:
                    type: string
                  street_2:
                    type: string
                    nullable: true
                  city:
                    type: string
                  state:
                    type: string
                  zip:
                    type: string
                  effective_date:
                    type: string
                    format: date
                  courtesy_withholding:
                    type: boolean
                required:
                  - version
              examples:
                Example:
                  value:
                    version: fe75bd065ff48b91c35fe8ff842f986c
                    street_1: 300 3rd Street
                    street_2: null
                    city: San Francisco
                    state: CA
                    zip: '94107'
                    effective_date: '2021-01-01'
                    courtesy_withholding: true
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete an employee's home address
        tags:
          - Employee Addresses
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: delete-v1-home_addresses-home_address_uuid
        description: >-
          Used for deleting an employee's home address.  Cannot delete the
          employee's active home address.


          scope: `employees:write`
        parameters:
          - $ref: '#/components/parameters/home_address_uuid'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/employees/{employee_id}/work_addresses:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get an employee's work addresses
        tags:
          - Employee Addresses
        responses:
          '200':
            $ref: '#/components/responses/Employee-Work-Address-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-employees-employee_id-work_addresses
        description: >-
          Returns a list of an employee's work addresses. Each address includes
          its effective date and a boolean

          signifying if it is the currently active work address.


          scope: `employees:read`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create an employee work address
        tags:
          - Employee Addresses
        operationId: post-v1-employees-employee_id-work_addresses
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        description: >-
          The work address of an employee describes when an employee began working
          at an associated company location.


          scope: `employees:manage`
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  location_uuid:
                    type: string
                    description: Reference to a company location
                  effective_date:
                    type: string
                    format: date
                    description: Date the employee began working at the company location
              examples:
                Example:
                  value:
                    location_uuid: 6a119be7-b4b0-4e27-aaa0-89d5f2524635
                    effective_date: '2023-05-15'
        responses:
          '201':
            description: Example response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Employee-Work-Address'
                examples:
                  Example:
                    value:
                      uuid: 56260b3d-c375-415c-b77a-75d99f717193
                      employee_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                      street_1: 644 Fay Vista
                      street_2: Suite 842
                      city: Richmond
                      state: VA
                      zip: '23218'
                      country: USA
                      active: false
                      effective_date: '2021-01-01'
                      courtesy_withholding: true
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
    /v1/work_addresses/{work_address_uuid}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get an employee work address
        tags:
          - Employee Addresses
        operationId: get-v1-work_addresses-work_address_uuid
        description: |-
          The work address of an employee is used for payroll tax purposes.

          scope: `employees:read`
        parameters:
          - $ref: '#/components/parameters/work_address_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            description: Example response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Employee-Work-Address'
                examples:
                  Example:
                    value:
                      uuid: 34925ef7-6234-440d-83b8-788a24d0d69a
                      employee_uuid: 2363b9c0-6625-4425-9261-47627fd68783
                      location_uuid: aba6d0fd-7294-4997-b1a4-bc9268c45932
                      effective_date: '2023-05-15'
                      active: true
                      version: 6a22da647ed391f184a212e6e83a541d
                      street_1: 977 Marks Viaduct
                      street_2: null
                      city: Pink Hill
                      state: NC
                      zip: '28572'
                      country: USA
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update an employee work address
        tags:
          - Employee Addresses
        operationId: put-v1-work_addresses-work_address_uuid
        description: |-
          The work address of an employee is used for payroll tax purposes.

          scope: `employees:manage`
        parameters:
          - $ref: '#/components/parameters/work_address_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  location_uuid:
                    type: string
                    description: Reference to a company location
                  effective_date:
                    type: string
                    format: date
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
              examples:
                Example:
                  value:
                    location_uuid: 6a119be7-b4b0-4e27-aaa0-89d5f2524635
                    effective_date: '2023-05-15'
                    version: e6db1baa29d3df1eb307ff6a12c778da
        responses:
          '200':
            description: Example response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Employee-Work-Address'
                examples:
                  Example:
                    value:
                      uuid: 34925ef7-6234-440d-83b8-788a24d0d69a
                      employee_uuid: 2363b9c0-6625-4425-9261-47627fd68783
                      location_uuid: aba6d0fd-7294-4997-b1a4-bc9268c45932
                      effective_date: '2023-05-15'
                      active: true
                      version: 6a22da647ed391f184a212e6e83a541d
                      street_1: 977 Marks Viaduct
                      street_2: null
                      city: Pink Hill
                      state: NC
                      zip: '28572'
                      country: USA
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete an employee's work address
        tags:
          - Employee Addresses
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: delete-v1-work_addresses-work_address_uuid
        description: >-
          Used for deleting an employee's work address.  Cannot delete the
          employee's active work address.


          scope: `employees:manage`
        parameters:
          - $ref: '#/components/parameters/work_address_uuid'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/employees/{employee_id}/custom_fields:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get an employee's custom fields
        tags:
          - Employees
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    custom_fields:
                      type: array
                      items:
                        $ref: '#/components/schemas/Employee-Custom-Field'
                examples:
                  Example:
                    value:
                      custom_fields:
                        - id: ee515986-f3ca-49da-b576-2691b95262f9
                          company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                          name: employee_level
                          description: Employee Level
                          type: text
                          value: '2'
                          selection_options: null
                        - id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59
                          company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                          name: t-shirt size
                          description: What is your t-shirt size?
                          type: text
                          value: md
                          selection_options: null
                        - id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59
                          company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                          name: favorite fruit
                          description: Which is your favorite fruit?
                          type: radio
                          value: apple
                          selection_options:
                            - apple
                            - banana
                            - orange
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-employees-employee_id-custom_fields
        description: |-
          Returns a list of the employee's custom fields.

          scope: `employees:read`
    /v1/employees/{employee_id}/jobs:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create a job
        responses:
          '201':
            $ref: '#/components/responses/Job-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-jobs-job_id
        description: |-
          Create a job.

          scope: `jobs:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  title:
                    type: string
                    description: The job title
                  hire_date:
                    type: string
                    description: The date when the employee was hired or rehired for the job.
                  two_percent_shareholder:
                    type: boolean
                    description: Whether the employee owns at least 2% of the company.
                  state_wc_covered:
                    type: boolean
                    description: >-
                      Whether this job is eligible for workers' compensation
                      coverage in the state of Washington (WA).
                  state_wc_class_code:
                    type: string
                    description: >-
                      The risk class code for workers' compensation in Washington
                      state. Please visit [Washington state's Risk Class
                      page](https://www.lni.wa.gov/insurance/rates-risk-classes/risk-classes-for-workers-compensation/risk-class-lookup#/)
                      to learn more.
                required:
                  - title
                  - hire_date
              examples:
                Example:
                  value:
                    title: Regional Manager
                    hire_date: '2020-12-21'
          description: Create a job.
        tags:
          - Jobs and Compensations
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get jobs for an employee
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - in: query
            name: include
            schema:
              type: string
              enum:
                - all_compensations
            description: >-
              Available options:

              - all_compensations: Include all effective dated compensations for
              each job instead of only the current compensation
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Job-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-employees-employee_id-jobs
        description: |-
          Get all of the jobs that an employee holds.

          scope: `jobs:read`
        tags:
          - Jobs and Compensations
    /v1/employees/{employee_uuid}/time_off_activities:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get employee time off activities
        responses:
          '200':
            $ref: '#/components/responses/Time-Off-Activity-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-version-employees-time_off_activities
        parameters:
          - $ref: '#/components/parameters/employee_uuid'
          - $ref: '#/components/parameters/time_off_type'
          - $ref: '#/components/parameters/VersionHeader'
        description: |-
          Get employee time off activities.

          scope: `employee_time_off_activities:read`
        tags:
          - Employees
    /v1/jobs/{job_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a job
        responses:
          '200':
            $ref: '#/components/responses/Job-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-jobs-job_id
        parameters:
          - $ref: '#/components/parameters/job_id'
          - in: query
            name: include
            schema:
              type: string
              enum:
                - all_compensations
            description: >-
              Available options:

              - all_compensations: Include all effective dated compensations for
              the job instead of only the current compensation
          - $ref: '#/components/parameters/VersionHeader'
        description: |-
          Get a job.

          scope: `jobs:read`
        tags:
          - Jobs and Compensations
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update a job
        responses:
          '200':
            $ref: '#/components/responses/Job-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-jobs-job_id
        description: |-
          Update a job.

          scope: `jobs:write`
        parameters:
          - $ref: '#/components/parameters/job_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                  title:
                    type: string
                    description: The job title
                  hire_date:
                    type: string
                    description: The date when the employee was hired or rehired for the job.
                  two_percent_shareholder:
                    type: boolean
                    description: Whether the employee owns at least 2% of the company.
                  state_wc_covered:
                    type: boolean
                    description: >-
                      Whether this job is eligible for workers' compensation
                      coverage in the state of Washington (WA).
                  state_wc_class_code:
                    type: string
                    description: >-
                      The risk class code for workers' compensation in Washington
                      state. Please visit [Washington state's Risk Class
                      page](https://www.lni.wa.gov/insurance/rates-risk-classes/risk-classes-for-workers-compensation/risk-class-lookup#/)
                      to learn more.
                required:
                  - version
              examples:
                Example:
                  value:
                    version: gr78930htutrz444kuytr3s5hgxykuveb523fwl8sir
                    title: Regional Manager
                    hire_date: '2020-12-21'
          description: Update a job.
        tags:
          - Jobs and Compensations
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete an individual job
        tags:
          - Jobs and Compensations
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: delete-v1-jobs-job_id
        description: |-
          Deletes a specific job that an employee holds.

          scope: `jobs:write`
        parameters:
          - $ref: '#/components/parameters/job_id'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/jobs/{job_id}/compensations:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get compensations for a job
        parameters:
          - $ref: '#/components/parameters/job_id'
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - in: query
            name: include
            schema:
              type: string
              enum:
                - all_compensations
            description: >-
              Available options:

              - all_compensations: Include all effective dated compensations for
              each job instead of only the current compensation
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Compensation-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-jobs-job_id-compensations
        description: >-
          Compensations contain information on how much is paid out for a job.
          Jobs may have many compensations, but only one that is active. The
          current compensation is the one with the most recent `effective_date`.
          By default the API returns only the current compensation - see the
          `include` query parameter for retrieving all compensations.


          Note: Currently the API does not support creating multiple compensations
          per job - creating a compensation with the same `job_uuid` as another
          will fail with a relevant error.


          Use `flsa_status` to determine if an employee is eligible for overtime.


          scope: `jobs:read`
        tags:
          - Jobs and Compensations
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create a compensation
        responses:
          '201':
            $ref: '#/components/responses/Compensation-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-compensations-compensation_id
        description: >-
          Compensations contain information on how much is paid out for a job.
          Jobs may have many compensations, but only one that is active. The
          current compensation is the one with the most recent `effective_date`.


          scope: `jobs:write`
        parameters:
          - $ref: '#/components/parameters/job_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  rate:
                    type: string
                    description: The dollar amount paid per payment unit.
                  payment_unit:
                    type: string
                    description: >-
                      The unit accompanying the compensation rate. If the employee
                      is an owner, rate should be 'Paycheck'.
                    enum:
                      - Hour
                      - Week
                      - Month
                      - Year
                      - Paycheck
                  effective_date:
                    type: string
                    description: The date when the compensation takes effect.
                  flsa_status:
                    $ref: '#/components/schemas/Flsa-Status-Type'
                  adjust_for_minimum_wage:
                    type: boolean
                    description: >-
                      Determines whether the compensation should be adjusted for
                      minimum wage. Only applies to Nonexempt employees.
                  minimum_wages:
                    type: array
                    items:
                      type: object
                      description: >-
                        The minimum wage record you want to apply to the
                        compensation
                      properties:
                        uuid:
                          type: string
                          description: >-
                            The UUID of the minimum wage record. Required if
                            adjust_for_minimum_wage set to true
                required:
                  - payment_unit
                  - flsa_status
              examples:
                Exempt:
                  value:
                    rate: '60000.00'
                    payment_unit: Year
                    flsa_status: Exempt
                Minimum Wage Adjusted:
                  value:
                    effective_date: '2023-01-01'
                    rate: '7.00'
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    adjust_for_minimum_wage: true
                    minimum_wages:
                      - uuid: 340832db-ab28-4112-9e10-28dd1711835f
        tags:
          - Jobs and Compensations
    /v1/compensations/{compensation_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a compensation
        responses:
          '200':
            $ref: '#/components/responses/Compensation-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-compensations-compensation_id
        description: >
          Compensations contain information on how much is paid out for a job.
          Jobs may have many compensations, but only one that is active. The
          current compensation is the one with the most recent `effective_date`.


          scope: `jobs:read`
        parameters:
          - $ref: '#/components/parameters/compensation_id'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Jobs and Compensations
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update a compensation
        tags:
          - Jobs and Compensations
        responses:
          '200':
            $ref: '#/components/responses/Compensation-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-compensations-compensation_id
        description: >-
          Compensations contain information on how much is paid out for a job.
          Jobs may have many compensations, but only one that is active. The
          current compensation is the one with the most recent `effective_date`.


          scope: `jobs:write`
        parameters:
          - $ref: '#/components/parameters/compensation_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                  rate:
                    type: string
                    description: The dollar amount paid per payment unit.
                  payment_unit:
                    type: string
                    description: >-
                      The unit accompanying the compensation rate. If the employee
                      is an owner, rate should be 'Paycheck'.
                    enum:
                      - Hour
                      - Week
                      - Month
                      - Year
                      - Paycheck
                  flsa_status:
                    $ref: '#/components/schemas/Flsa-Status-Type'
                  adjust_for_minimum_wage:
                    type: boolean
                    description: >-
                      Determines whether the compensation should be adjusted for
                      minimum wage. Only applies to Nonexempt employees.
                  minimum_wages:
                    type: array
                    items:
                      type: object
                      description: >-
                        The minimum wage record you want to apply to the
                        compensation
                      properties:
                        uuid:
                          type: string
                          description: >-
                            The UUID of the minimum wage record. Required if
                            adjust_for_minimum_wage set to true
                required:
                  - version
              examples:
                Exempt:
                  value:
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    rate: '60000.00'
                    payment_unit: Year
                    flsa_status: Exempt
                Minimum Wage Adjusted:
                  value:
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    rate: '7.00'
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    adjust_for_minimum_wage: true
                    minimum_wages:
                      - uuid: 340832db-ab28-4112-9e10-28dd1711835f
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete a compensation
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: delete-v1-compensations-compensation_id
        description: >
          Compensations contain information on how much is paid out for a job.
          Jobs may have many compensations, but only one that is active. The
          current compensation is the one with the most recent `effective_date`.
          This endpoint deletes a compensation for a job that hasn't been
          processed on payroll.


          scope: `jobs:write`
        parameters:
          - $ref: '#/components/parameters/compensation_id'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Jobs and Compensations
    /v1/companies/{company_id}/earning_types:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create a custom earning type
        tags:
          - Earning Types
        responses:
          '201':
            $ref: '#/components/responses/Earning-Type-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-companies-company_id-earning_types
        description: >-
          Create a custom earning type.


          If an inactive earning type exists with the same name, this will
          reactivate it instead of creating a new one.


          scope: `payrolls:write`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the custom earning type.
                required:
                  - name
              examples:
                Example:
                  value:
                    name: Gym Membership Stipend
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get all earning types for a company
        tags:
          - Earning Types
        responses:
          '200':
            $ref: '#/components/responses/Earning-Type-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-earning_types
        description: >-
          A payroll item in Gusto is associated to an earning type to name the
          type of earning described by the payroll item.


          #### Default Earning Type

          Certain earning types are special because they have tax considerations.
          Those earning types are mostly the same for every company depending on
          its legal structure (LLC, Corporation, etc.)


          #### Custom Earning Type

          Custom earning types are all the other earning types added specifically
          for a company.


          scope: `payrolls:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/companies/{company_id}/earning_types/{earning_type_uuid}:
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update an earning type
        tags:
          - Earning Types
        responses:
          '200':
            $ref: '#/components/responses/Earning-Type-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-companies-company_id-earning_types-earning_type_uuid
        description: |-
          Update an earning type.

          scope: `payrolls:write`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/earning_type_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The name of the custom earning type.
              examples:
                Example:
                  value:
                    name: Gym Membership Stipend
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Deactivate an earning type
        tags:
          - Earning Types
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: delete-v1-companies-company_id-earning_types-earning_type_uuid
        description: |-
          Deactivate an earning type.

          scope: `payrolls:write`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/earning_type_uuid'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/companies/{company_id}/contractors:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create a contractor
        tags:
          - Contractors
        responses:
          '201':
            $ref: '#/components/responses/Contractor-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-companies-company_id-contractors
        description: |-
          Create an individual or business contractor.

          scope: `contractors:manage`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Contractor-Body'
                  - required:
                      - type
                      - wage_type
                      - start_date
              examples:
                Create an Individual contractor:
                  value:
                    type: Individual
                    wage_type: Fixed
                    first_name: Johnson
                    last_name: Johnson
                    start_date: '2020-04-01'
                    self_onboarding: true
                    email: johnson@johnson.com
                    file_new_hire_report: true,
                    work_state: CA
                Create a Business contractor:
                  value:
                    type: Business
                    wage_type: Fixed
                    business_name: Johnson-Johnson Contractors
                    start_date: '2020-04-01'
          description: Create an individual or business contractor.
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get contractors of a company
        tags:
          - Contractors
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Contractor-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-contractors
        description: >-
          Get all contractors, active and inactive, individual and business, for a
          company.


          scope: `contractors:read`
    /v1/contractors/{contractor_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a contractor
        tags:
          - Contractors
        responses:
          '200':
            $ref: '#/components/responses/Contractor-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-contractors-contractor_id
        description: |-
          Get a contractor.

          scope: `contractors:read`
        parameters:
          - $ref: '#/components/parameters/contractor_id'
          - $ref: '#/components/parameters/VersionHeader'
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update a contractor
        tags:
          - Contractors
        responses:
          '200':
            $ref: '#/components/responses/Contractor-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-contractors-contractor_id
        parameters:
          - $ref: '#/components/parameters/contractor_id'
          - $ref: '#/components/parameters/VersionHeader'
        description: >-
          Update a contractor.


          scope: `contractors:write`


          > 🚧 Warning

          >

          > Watch out when changing a contractor's type (when the contractor is
          finished onboarding). Specifically, changing contractor type can be
          dangerous since Gusto won’t recognize and file two separate 1099s if
          they simply change from business to individual
        requestBody:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Versionable-Required'
                  - $ref: '#/components/schemas/Contractor-Body'
              examples:
                Update an Individual Contractor:
                  value:
                    version: b48c46abfed1487b873b442334b3c4ff
                    start_date: '2021-01-01'
                    first_name: Chanel
                    last_name: Boyle
                    middle_initial: X
                    wage_type: Hourly
                    hourly_rate: '20.00'
                    is_active: true
                Update a Business Contractor:
                  value:
                    version: b48c46abfed1487b873b442334b3c4ff
                    start_date: '2020-01-11'
                    business_name: Contracting Solutions
                    ein: '991113334'
                    wage_type: Fixed
                    is_active: false
          description: ''
    /v1/webhook_subscriptions:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create a webhook subscription
        responses:
          '201':
            $ref: '#/components/responses/Webhook-Subscription-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-webhook-subscription
        description: >-
          Create a webhook subscription to receive events of the specified
          subscription_types whenever there is a state change.


          > 📘 System Access Authentication

          >

          > This endpoint uses the [Bearer Auth scheme with the system-level
          access token in the HTTP Authorization
          header](https://docs.gusto.com/embedded-payroll/docs/system-access).


          scope: `webhook_subscriptions:write`
        security:
          - SystemAccessAuth: []
        parameters:
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  url:
                    type: string
                  subscription_types:
                    type: array
                    items:
                      type: string
                      enum:
                        - BankAccount
                        - Company
                        - CompanyBenefit
                        - Contractor
                        - ContractorPayment
                        - Employee
                        - EmployeeBenefit
                        - EmployeeJobCompensation
                        - ExternalPayroll
                        - Form
                        - Location
                        - Notification
                        - Payroll
                        - PaySchedule
                        - Signatory
                required:
                  - url
                  - subscription_types
              examples:
                Example:
                  value:
                    url: https://partner-app.com/subscriber
                    subscription_types:
                      - Company
                      - Employee
          description: ''
        tags:
          - Webhooks
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: List webhook subscriptions
        tags:
          - Webhooks
        responses:
          '200':
            $ref: '#/components/responses/Webhook-Subscriptions-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-webhook-subscriptions
        description: >-
          Returns all webhook subscriptions associated with the provided Partner
          API token.


          > 📘 System Access Authentication

          >

          > This endpoint uses the [Bearer Auth scheme with the system-level
          access token in the HTTP Authorization
          header](https://docs.gusto.com/embedded-payroll/docs/system-access).


          scope: `webhook_subscriptions:read`
        security:
          - SystemAccessAuth: []
        parameters:
          - $ref: '#/components/parameters/VersionHeader'
    /v1/webhook_subscriptions/{webhook_subscription_uuid}:
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update a webhook subscription
        responses:
          '200':
            $ref: '#/components/responses/Webhook-Subscription-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-webhook-subscription-uuid
        description: >
          Updates the Webhook Subscription associated with the provided UUID.


          > 📘 System Access Authentication

          >

          > This endpoint uses the [Bearer Auth scheme with the system-level
          access token in the HTTP Authorization
          header](https://docs.gusto.com/embedded-payroll/docs/system-access).


          scope: `webhook_subscriptions:write`
        parameters:
          - $ref: '#/components/parameters/webhook_subscription_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        security:
          - SystemAccessAuth: []
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  subscription_types:
                    type: array
                    items:
                      type: string
                      enum:
                        - BankAccount
                        - Company
                        - CompanyBenefit
                        - Contractor
                        - ContractorPayment
                        - Employee
                        - EmployeeBenefit
                        - EmployeeJobCompensation
                        - ExternalPayroll
                        - Form
                        - Location
                        - Notification
                        - Payroll
                        - PaySchedule
                        - Signatory
                required:
                  - subscription_types
              examples:
                Example:
                  value:
                    subscription_types:
                      - Company
                      - Employee
          description: ''
        tags:
          - Webhooks
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a webhook subscription
        responses:
          '200':
            $ref: '#/components/responses/Webhook-Subscription-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-webhook-subscription-uuid
        description: >
          Returns the Webhook Subscription associated with the provided UUID.


          > 📘 System Access Authentication

          >

          > This endpoint uses the [Bearer Auth scheme with the system-level
          access token in the HTTP Authorization
          header](https://docs.gusto.com/embedded-payroll/docs/system-access).


          scope: `webhook_subscriptions:read`
        parameters:
          - $ref: '#/components/parameters/webhook_subscription_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        security:
          - SystemAccessAuth: []
        tags:
          - Webhooks
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete a webhook subscription
        responses:
          '204':
            description: The resource was deleted successfully.
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: delete-v1-webhook-subscription-uuid
        description: >
          Deletes the Webhook Subscription associated with the provided UUID.


          > 📘 System Access Authentication

          >

          > This endpoint uses the [Bearer Auth scheme with the system-level
          access token in the HTTP Authorization
          header](https://docs.gusto.com/embedded-payroll/docs/system-access).


          scope: `webhook_subscriptions:write`
        parameters:
          - $ref: '#/components/parameters/webhook_subscription_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        security:
          - SystemAccessAuth: []
        tags:
          - Webhooks
    /v1/webhook_subscriptions/{webhook_subscription_uuid}/verify:
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Verify the webhook subscription
        responses:
          '200':
            $ref: '#/components/responses/Webhook-Subscription-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-verify-webhook-subscription-uuid
        description: >
          When a webhook subscription is created, a `verification_token` is POSTed
          to the registered webhook subscription URL. This `verify` endpoint needs
          to be called with `verification_token` before webhook events can be sent
          to the registered webhook URL.


          Use the
          /v1/webhook_subscriptions/{webhook_subscription_uuid}/request_verification_token
          API to resend the `verification_token` to the Subscriber.


          > 📘 System Access Authentication

          >

          > This endpoint uses the [Bearer Auth scheme with the system-level
          access token in the HTTP Authorization
          header](https://docs.gusto.com/embedded-payroll/docs/system-access).


          scope: `webhook_subscriptions:write`
        parameters:
          - $ref: '#/components/parameters/webhook_subscription_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        security:
          - SystemAccessAuth: []
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  verification_token:
                    type: string
                    description: The token POSTed to the Subscription URL.
                required:
                  - verification_token
              examples:
                Example:
                  value:
                    verification_token: asefasedfe23e234easd
          description: ''
        tags:
          - Webhooks
    /v1/webhook_subscriptions/{webhook_subscription_uuid}/request_verification_token:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Request the webhook subscription verification_token
        responses:
          '200':
            description: >-
              No Content. The `verification_token` is POSTed to the Subscription
              URL.
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-webhook-subscription-verification-token-uuid
        description: >
          Request that the webhook subscription `verification_token` be POSTed to
          the Subscription URL.


          > 📘 System Access Authentication

          >

          > This endpoint uses the [Bearer Auth scheme with the system-level
          access token in the HTTP Authorization
          header](https://docs.gusto.com/embedded-payroll/docs/system-access).


          scope: `webhook_subscriptions:read`
        parameters:
          - $ref: '#/components/parameters/webhook_subscription_uuid'
          - $ref: '#/components/parameters/VersionHeader'
        security:
          - SystemAccessAuth: []
        tags:
          - Webhooks
    /v1/companies/{company_id}/payrolls:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get all payrolls for a company
        tags:
          - Payrolls
        responses:
          '200':
            $ref: '#/components/responses/Payroll-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-payrolls
        description: >-
          Returns a list of payrolls for a company. You can change the payrolls
          returned by updating the processing_status, payroll_types, start_date, &
          end_date params.


          By default, will return processed, regular payrolls for the past 6
          months.


          Notes:

          * Dollar amounts are returned as string representations of numeric
          decimals, are represented to the cent.

          * end_date can be at most 3 months in the future and start_date and
          end_date can't be more than 1 year apart.


          scope: `payrolls:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - schema:
              type: string
              enum:
                - unprocessed
                - processed
            in: query
            name: processing_statuses
            description: >-
              Whether to include processed and/or unprocessed payrolls in the
              response, defaults to processed, for multiple attributes comma
              separate the values, i.e.
              `?processing_statuses=processed,unprocessed`
          - schema:
              type: string
              enum:
                - regular
                - off_cycle
                - external
            in: query
            name: payroll_types
            description: >-
              Whether to include regular and/or off_cycle payrolls in the
              response, defaults to regular, for multiple attributes comma
              separate the values, i.e. `?payroll_types=regular,off_cycle`
          - schema:
              type: string
              enum:
                - totals
                - payroll_status_meta
            in: query
            name: include
            description: >-
              Include the requested attribute in the response. In v2023-04-01
              totals are no longer included by default. For multiple attributes
              comma separate the values, i.e.
              `?include=totals,payroll_status_meta`
          - schema:
              type: string
            in: query
            name: start_date
            description: Return payrolls whose pay period is after the start date
          - schema:
              type: string
            in: query
            name: end_date
            description: Return payrolls whose pay period is before the end date
          - $ref: '#/components/parameters/VersionHeader'
    /v1/companies/{company_id}/payrolls/{payroll_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a single payroll
        tags:
          - Payrolls
        responses:
          '200':
            $ref: '#/components/responses/Payroll-Show-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-payrolls-payroll_id
        description: >-
          Returns a payroll. If payroll is calculated or processed, will return
          employee_compensations and totals.


          Notes:

          * Hour and dollar amounts are returned as string representations of
          numeric decimals.

          * Hours are represented to the thousands place; dollar amounts are
          represented to the cent.

          * Every eligible compensation is returned for each employee. If no data
          has yet be inserted for a given field, it defaults to “0.00” (for fixed
          amounts) or “0.000” (for hours ).

          * When include parameter with benefits value is passed,
          employee_benefits:read scope is required to return benefits
            * Benefits containing PHI are only visible with the `employee_benefits:read:phi` scope

          scope: `payrolls:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/payroll_id'
          - schema:
              type: string
              enum:
                - benefits
                - deductions
                - taxes
                - payroll_status_meta
            in: query
            name: include
            description: >-
              Include the requested attribute in the response, for multiple
              attributes comma separate the values, i.e.
              `?include=benefits,deductions,taxes`
          - $ref: '#/components/parameters/VersionHeader'
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update a payroll by ID
        tags:
          - Payrolls
        responses:
          '200':
            $ref: '#/components/responses/Payroll-Update-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-companies-company_id-payrolls
        description: >-
          This endpoint allows you to update information for one or more employees
          for a specific **unprocessed** payroll.  You can think of the
          **unprocessed**

          payroll object as a template of fields that you can update.  You cannot
          modify the structure of the payroll object through this endpoint, only
          values

          of the fields included in the payroll.  If you do not include specific
          employee compensations or fixed/hourly compensations in your request
          body, they

          will not be removed from the payroll.


          scope: `payrolls:write`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/payroll_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  employee_compensations:
                    type: array
                    items:
                      type: object
                      description: ''
                      properties:
                        employee_uuid:
                          type: string
                          description: The UUID of the employee.
                        version:
                          type: string
                          description: >-
                            The current version of this employee compensation from
                            the prepared payroll. See the [versioning
                            guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)
                            for information on how to use this field.
                        excluded:
                          type: boolean
                          description: >-
                            This employee will be excluded from payroll
                            calculation and will not be paid for the payroll.
                        payment_method:
                          type: string
                          description: >-
                            The employee's compensation payment method. Invalid
                            values will be ignored.
                          enum:
                            - Direct Deposit
                            - Check
                        memo:
                          type: string
                          description: >-
                            Custom text that will be printed as a personal note to
                            the employee on a paystub.
                        fixed_compensations:
                          type: array
                          items:
                            type: object
                            description: >-
                              An array of fixed compensations for the employee.
                              Fixed compensations include tips, bonuses, and one
                              time reimbursements.
                            properties:
                              name:
                                type: string
                                description: >-
                                  The name of the compensation. This also serves
                                  as the unique, immutable identifier for this
                                  compensation.
                              amount:
                                type: string
                                description: >-
                                  The amount of the compensation for the pay
                                  period.
                              job_uuid:
                                type: integer
                                description: The UUID of the job for the compensation.
                        hourly_compensations:
                          type: array
                          items:
                            type: object
                            description: >-
                              An array of hourly compensations for the employee.
                              Hourly compensations include regular, overtime, and
                              double overtime hours.
                            properties:
                              name:
                                type: string
                                description: >-
                                  The name of the compensation. This also serves
                                  as the unique, immutable identifier for this
                                  compensation.
                              hours:
                                type: string
                                description: >-
                                  The number of hours to be compensated for this
                                  pay period.
                              job_uuid:
                                type: integer
                                description: The UUIDs of the job for the compensation.
                        paid_time_off:
                          type: array
                          description: >-
                            An array of all paid time off the employee is eligible
                            for this pay period. Each paid time off object can be
                            the name or the specific policy_uuid.
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: >-
                                  The name of the PTO. This also serves as the
                                  unique, immutable identifier for the PTO. Must
                                  pass in name or policy_uuid but not both.
                              hours:
                                type: string
                                description: >-
                                  The hours of this PTO taken during the pay
                                  period.
                              policy_uuid:
                                type: string
                                description: >-
                                  The uuid of the PTO policy. Must pass in name or
                                  policy_uuid but not both.
                              final_payout_unused_hours_input:
                                type: string
                                description: >-
                                  The outstanding hours paid upon termination.
                                  This field is only applicable for termination
                                  payrolls.
                required:
                  - employee_compensations
    /v1/companies/{company_id}/payrolls/{payroll_id}/prepare:
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Prepare a payroll for update
        tags:
          - Payrolls
        responses:
          '200':
            $ref: '#/components/responses/Payroll-Update-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: put-v1-companies-company_id-payrolls-payroll_id-prepare
        description: >-
          This endpoint will build the payroll and get it ready for making
          updates. This includes adding/removing eligible employees from the
          Payroll and updating the check_date, payroll_deadline, and
          payroll_status_meta dates & times.


          Notes:
           * Will null out calculated_at & totals if a payroll has already been calculated.
           * Will return the version param used for updating the payroll

          scope: `payrolls:write`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/payroll_id'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/payrolls/{payroll_id}/employees/{employee_id}/calculate_accruing_time_off_hours:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Calculate accruing time off hours
        tags:
          - Time Off Policies
        responses:
          '200':
            $ref: '#/components/responses/Accruing-Time-Off-Hour-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-payrolls-payroll_id-calculate_accruing_time_off_hours
        description: >-
          Returns a list of accruing time off for each time off policy associated
          with the employee.


          Factors affecting the accrued hours:
            * the time off policy accrual method (whether they get pay per hour worked, per hour paid, with / without overtime, accumulate time off based on pay period / calendar year / anniversary)
            * how many hours of work during this pay period
            * how many hours of PTO / sick hours taken during this pay period (for per hour paid policies only)
            * company pay schedule frequency (for per pay period)

          If none of the parameters is passed in, the accrued time off hour will
          be 0.


          scope: `payrolls:read`
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  regular_hours_worked:
                    type: number
                    description: regular hours worked in this pay period
                  overtime_hours_worked:
                    type: number
                    description: overtime hours worked in this pay period
                  double_overtime_hours_worked:
                    type: number
                    description: double overtime hours worked in this pay period
                  pto_hours_used:
                    type: number
                    description: paid time off hours used in this pay period
                  sick_hours_used:
                    type: number
                    description: sick hours used in this pay period
              examples:
                Example:
                  value:
                    regular_hours_worked: 30.25
                    overtime_hours_worked: 10
                    double_overtime_hours_worked: 0
                    pto_hours_used: 5.5
                    sick_hours_used: 0
        parameters:
          - $ref: '#/components/parameters/payroll_id'
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/companies/{company_id}/contractor_payments:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get contractor payments for a company
        tags:
          - Contractor Payments
        responses:
          '200':
            description: A JSON object containing contractor payments information
            content:
              application/json:
                schema:
                  oneOf:
                    - $ref: '#/components/schemas/Contractor-Payment-Summary'
                    - $ref: '#/components/schemas/Contractor-Payment-Summary-By-Dates'
                examples:
                  Example:
                    value:
                      total:
                        reimbursements: '110.0'
                        wages: '1840.0'
                      contractor_payments:
                        - contractor_id: 1234
                          reimbursement_total: '110.0'
                          wage_total: '1840.0'
                          payments:
                            - id: 04552eb9-7829-4b18-ae96-6983552948df
                              bonus: '20.0'
                              date: '2020-10-19'
                              hours: '40.0'
                              payment_method: Direct Deposit
                              reimbursement: '100.0'
                              hourly_rate: '18.0'
                              may_cancel: true
                              wage: '0.0'
                              wage_type: Hourly
                              wage_total: '740.00'
                              contractor_id: 1234
                              contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                            - id: 25cfeb96-17fc-4fdf-8941-57f3fb9eea00
                              bonus: '100.0'
                              date: '2020-10-19'
                              hours: '0.00'
                              payment_method: Direct Deposit
                              reimbursement: '10.0'
                              hourly_rate: '0.0'
                              may_cancel: true
                              wage: '1000.0'
                              wage_type: Fixed
                              wage_total: '1100.0'
                              contractor_id: 1234
                              contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-contractor_payments
        description: >-
          Returns an object containing individual contractor payments, within a
          given time period, including totals.


          scope: `payrolls:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - schema:
              type: string
              example: '2020-01-01'
            in: query
            name: start_date
            description: The time period for which to retrieve contractor payments
            required: true
          - schema:
              type: string
              example: '2020-12-31'
            in: query
            name: end_date
            description: The time period for which to retrieve contractor payments
            required: true
          - schema:
              type: string
            in: query
            name: contractor_uuid
            description: >-
              The UUID of the contractor. When specified, will load all payments
              for that contractor.
          - schema:
              type: boolean
            in: query
            name: group_by_date
            description: >-
              Display contractor payments results group by check date if set to
              true.
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/companies/{company_id}/contractor_payments/{contractor_payment_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a single contractor payment
        tags:
          - Contractor Payments
        responses:
          '200':
            $ref: '#/components/responses/Contractor-Payment-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-contractor_payment-contractor-payment
        description: |-
          Returns a single contractor payments

          scope: `payrolls:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/contractor_payment_id'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/companies/{company_id}/company_benefits:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create a company benefit
        tags:
          - Company Benefits
        responses:
          '201':
            $ref: '#/components/responses/Company-Benefit-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-companies-company_id-company_benefits
        description: >-
          Company benefits represent the benefits that a company is offering to
          employees. This ties together a particular supported benefit with the
          company-specific information for the offering of that benefit.


          Note that company benefits can be deactivated only when no employees are
          enrolled.


          scope: `company_benefits:write`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  benefit_type:
                    type: number
                    description: The ID of the benefit to which the company benefit belongs.
                  active:
                    type: boolean
                    default: true
                    description: Whether this benefit is active for employee participation.
                  description:
                    type: string
                    description: >-
                      The description of the company benefit.For example, a
                      company may offer multiple benefits with an ID of 1 (for
                      Medical Insurance). The description would show something
                      more specific like “Kaiser Permanente” or “Blue Cross/ Blue
                      Shield”.
                  responsible_for_employer_taxes:
                    type: boolean
                    description: >-
                      Whether the employer is subject to pay employer taxes when
                      an employee is on leave. Only applicable to third party sick
                      pay benefits.
                  responsible_for_employee_w2:
                    type: boolean
                    description: >-
                      Whether the employer is subject to file W-2 forms for an
                      employee on leave. Only applicable to third party sick pay
                      benefits.
                required:
                  - benefit_id
                  - description
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get benefits for a company
        tags:
          - Company Benefits
        responses:
          '200':
            $ref: '#/components/responses/Company-Benefit-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-companies-company_id-company_benefits
        description: >-
          Company benefits represent the benefits that a company is offering to
          employees. This ties together a particular supported benefit with the
          company-specific information for the offering of that benefit.


          Note that company benefits can be deactivated only when no employees are
          enrolled.


          Benefits containing PHI are only visible to applications with the
          `company_benefits:read:phi` scope.


          scope: `company_benefits:read`
        parameters:
          - $ref: '#/components/parameters/company_id'
          - schema:
              type: boolean
            in: query
            name: enrollment_count
            description: Whether to return employee enrollment count
          - $ref: '#/components/parameters/VersionHeader'
    /v1/company_benefits/{company_benefit_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a company benefit
        tags:
          - Company Benefits
        responses:
          '200':
            $ref: '#/components/responses/Company-Benefit-With-Employee-Benefits-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-company_benefits-company_benefit_id
        description: >-
          Company benefits represent the benefits that a company is offering to
          employees. This ties together a particular supported benefit with the
          company-specific information for the offering of that benefit.


          Note that company benefits can be deactivated only when no employees are
          enrolled.


          When with_employee_benefits parameter with true value is passed,
          employee_benefits:read scope is required to return employee_benefits.


          scope: `company_benefits:read`
        parameters:
          - $ref: '#/components/parameters/company_benefit_id'
          - schema:
              type: boolean
            in: query
            name: with_employee_benefits
            description: Whether to return employee benefits associated with the benefit
          - $ref: '#/components/parameters/VersionHeader'
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update a company benefit
        tags:
          - Company Benefits
        responses:
          '200':
            $ref: '#/components/responses/Company-Benefit-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-company_benefits-company_benefit_id
        description: >-
          Company benefits represent the benefits that a company is offering to
          employees. This ties together a particular supported benefit with the
          company-specific information for the offering of that benefit.


          Note that company benefits can be deactivated only when no employees are
          enrolled.


          scope: `company_benefits:write`
        parameters:
          - $ref: '#/components/parameters/company_benefit_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                  active:
                    type: boolean
                    description: >-
                      Whether this benefit is active for employee participation.
                      Company benefits may only be deactivated if no employees are
                      actively participating.
                  description:
                    type: string
                    description: >-
                      The description of the company benefit.For example, a
                      company may offer multiple benefits with an ID of 1 (for
                      Medical Insurance). The description would show something
                      more specific like “Kaiser Permanente” or “Blue Cross/ Blue
                      Shield”.
                required:
                  - version
              examples:
                Example:
                  value:
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    active: false
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete a company benefit
        tags:
          - Company Benefits
        operationId: delete-v1-company_benefits-company_benefit_id
        description: |-
          The following must be true in order to delete a company benefit
            - There are no employee benefits associated with the company benefit
            - There are no payroll items associated with the company benefit
            - The benefit is not managed by a Partner or by Gusto (type must be 'External')

          scope: `company_benefits:write`
        parameters:
          - $ref: '#/components/parameters/company_benefit_id'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '204':
            description: No content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            description: Unprocessable Entity
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: object
                      properties:
                        base:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              message:
                                type: string
                              full_message:
                                type: string
                examples:
                  Example:
                    value:
                      errors:
                        base:
                          - type: error type
                            message: This is an error message
                            full_message: This is a more descriptive error message
    /v1/benefits:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get all benefits supported by Gusto
        responses:
          '200':
            $ref: '#/components/responses/Supported-Benefit-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-benefits
        description: >-
          Returns all benefits supported by Gusto.


          The benefit object in Gusto contains high level information about a
          particular benefit type and its tax considerations. When companies
          choose to offer a benefit, they are creating a Company Benefit object
          associated with a particular benefit.


          scope: `benefits:read`
        tags:
          - Company Benefits
        parameters:
          - $ref: '#/components/parameters/VersionHeader'
    /v1/benefits/{benefit_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: get-v1-benefits-benefit_id
        summary: Get a supported benefit by ID
        description: >-
          Returns a benefit supported by Gusto.


          The benefit object in Gusto contains high level information about a
          particular benefit type and its tax considerations. When companies
          choose to offer a benefit, they are creating a Company Benefit object
          associated with a particular benefit.


          scope: `benefits:read`
        parameters:
          - $ref: '#/components/parameters/benefit_id'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Company Benefits
        responses:
          '200':
            $ref: '#/components/responses/Supported-Benefit-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
    /v1/company_benefits/{company_benefit_id}/summary:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: get-v1-benefits-company_benefit_id-summary
        summary: Get company benefit summary by company benefit id.
        description: >-
          Returns summary benefit data for the requested company benefit id.


          Benefits containing PHI are only visible to applications with the
          `company_benefits:read:phi` scope.


          scope: `company_benefits:read`
        parameters:
          - $ref: '#/components/parameters/company_benefit_id'
          - schema:
              type: string
              example: '2022-01-01'
            in: query
            name: start_date
            description: The start date for which to retrieve company benefit summary
          - schema:
              type: string
              example: '2022-12-31'
            in: query
            name: end_date
            description: The end date for which to retrieve company benefit summary
          - schema:
              type: boolean
            in: query
            name: detailed
            description: Display employee payroll item summary
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Company Benefits
        responses:
          '200':
            $ref: '#/components/responses/Benefit-Summary-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
    /v1/benefits/{benefit_id}/requirements:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        operationId: get-v1-benefits-benefits_id-requirements
        summary: Get benefit fields requirements by ID
        description: |-
          Returns field requirements for the requested benefit type.

          scope: `benefits:read`
        parameters:
          - $ref: '#/components/parameters/benefit_id'
          - $ref: '#/components/parameters/VersionHeader'
        tags:
          - Company Benefits
        responses:
          '200':
            $ref: '#/components/responses/Benefit-Type-Requirements-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
    /v1/employees/{employee_id}/employee_benefits:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create an employee benefit
        tags:
          - Employee Benefits
        responses:
          '201':
            $ref: '#/components/responses/Employee-Benefit-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-employees-employee_id-employee_benefits
        description: >-
          Employee benefits represent an employee enrolled in a particular company
          benefit. It includes information specific to that employee’s enrollment.


          scope: `employee_benefits:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  company_benefit_uuid:
                    type: string
                    description: The UUID of the company benefit.
                  active:
                    type: boolean
                    default: true
                    description: Whether the employee benefit is active.
                  employee_deduction:
                    type: string
                    default: '0.00'
                    description: >-
                      The amount to be deducted, per pay period, from the
                      employee's pay.
                  deduct_as_percentage:
                    type: boolean
                    default: false
                    description: >-
                      Whether the employee deduction amount should be treated as a
                      percentage to be deducted from each payroll.
                  employee_deduction_annual_maximum:
                    type: string
                    description: >-
                      The maximum employee deduction amount per year. A null value
                      signifies no limit.
                    nullable: true
                  contribution:
                    type: object
                    description: >-
                      An object representing the company contribution type and
                      value.
                    properties:
                      type:
                        type: string
                        description: >-
                          The company contribution scheme.


                          `amount`: The company contributes a fixed amount per
                          payroll. If elective is true, the contribution is
                          matching, dollar-for-dollar.


                          `percentage`: The company contributes a percentage of
                          the payroll amount per payroll period. If elective is
                          true, the contribution is matching, dollar-for-dollar.


                          `tiered`: The size of the company contribution
                          corresponds to the size of the employee deduction
                          relative to a tiered matching scheme.
                        enum:
                          - tiered
                          - percentage
                          - amount
                      value:
                        description: >-
                          For the `amount` and `percentage` contribution types,
                          the value of the corresponding amount or percentage.


                          For the `tiered` contribution type, an array of tiers.
                        oneOf:
                          - type: string
                            description: >-
                              For the `amount` and `percentage` contribution
                              types, the value of the corresponding amount or
                              percentage.
                          - type: array
                            description: For `tiered` contribution types, an array of tiers.
                            items:
                              type: object
                              description: A single tier of a tiered matching scheme.
                              properties:
                                rate:
                                  type: string
                                  description: >-
                                    The percentage of employee deduction within
                                    this tier the company contribution will match.
                                threshold:
                                  type: string
                                  description: >-
                                    The percentage threshold at which this tier
                                    ends (inclusive).


                                    For example, a value of "5" means the company
                                    contribution will match employee deductions
                                    from the previous tier's threshold up to and
                                    including 5% of payroll.


                                    If this is the first tier, a value of "5"
                                    means the company contribution will match
                                    employee deductions from 0% up to and
                                    including 5% of payroll.
                  elective:
                    type: boolean
                    description: >-
                      Whether the company contribution is elective (aka
                      "matching"). For `tiered`, `elective_amount`, and
                      `elective_percentage` contribution types this is ignored and
                      assumed to be `true`.
                    default: false
                  company_contribution_annual_maximum:
                    type: string
                    description: >-
                      The maximum company contribution amount per year. A null
                      value signifies no limit.
                    nullable: true
                  limit_option:
                    type: string
                    description: >-
                      Some benefits require additional information to determine
                      their limit. For example, for an HSA benefit, the limit
                      option should be either "Family" or "Individual". For a
                      Dependent Care FSA benefit, the limit option should be
                      either "Joint Filing or Single" or "Married and Filing
                      Separately".
                    nullable: true
                  catch_up:
                    type: boolean
                    default: false
                    description: >-
                      Whether the employee should use a benefit’s "catch up" rate.
                      Only Roth 401k and 401k benefits use this value for
                      employees over 50.
                  coverage_amount:
                    type: string
                    description: >-
                      The amount that the employee is insured for. Note: company
                      contribution cannot be present if coverage amount is set.
                    nullable: true
                  coverage_salary_multiplier:
                    type: string
                    default: '0.00'
                    description: >-
                      The coverage amount as a multiple of the employee’s salary.
                      Only applicable for Group Term Life benefits. Note: cannot
                      be set if coverage amount is also set.
                  deduction_reduces_taxable_income:
                    type: string
                    enum:
                      - unset
                      - reduces_taxable_income
                      - does_not_reduce_taxable_income
                      - null
                    description: >-
                      Whether the employee deduction reduces taxable income or
                      not. Only valid for Group Term Life benefits. Note: when the
                      value is not "unset", coverage amount and coverage salary
                      multiplier are ignored.
                    nullable: true
                  company_contribution:
                    type: string
                    default: '0.00'
                    description: The amount to be paid, per pay period, by the company.
                    deprecated: true
                  contribute_as_percentage:
                    type: boolean
                    default: false
                    description: >-
                      Whether the company contribution amount should be treated as
                      a percentage to be deducted from each payroll.
                    deprecated: true
                required:
                  - company_benefit_uuid
              examples:
                Example:
                  value:
                    company_benefit_uuid: f68abb42-431e-4392-bc3f-2795627e00f3
                    active: true
                    employee_deduction: '100.00'
                    contribution:
                      type: amount
                      value: '100.00'
          description: ''
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get all benefits for an employee
        tags:
          - Employee Benefits
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Employee-Benefit-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-employees-employee_id-employee_benefits
        description: >-
          Employee benefits represent an employee enrolled in a particular company
          benefit. It includes information specific to that employee’s enrollment.


          Returns an array of all employee benefits for this employee


          Benefits containing PHI are only visible to applications with the
          `employee_benefits:read:phi` scope.


          scope: `employee_benefits:read`
    /v1/employee_benefits/{employee_benefit_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get an employee benefit
        tags:
          - Employee Benefits
        responses:
          '200':
            $ref: '#/components/responses/Employee-Benefit-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-employee_benefits-employee_benefit_id
        description: >-
          Employee benefits represent an employee enrolled in a particular company
          benefit. It includes information specific to that employee’s enrollment.


          Benefits containing PHI are only visible to applications with the
          `employee_benefits:read:phi` scope.


          scope: `employee_benefits:read`
        parameters:
          - $ref: '#/components/parameters/employee_benefit_id'
          - $ref: '#/components/parameters/VersionHeader'
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update an employee benefit
        tags:
          - Employee Benefits
        responses:
          '200':
            $ref: '#/components/responses/Employee-Benefit-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-employee_benefits-employee_benefit_id
        description: >-
          Employee benefits represent an employee enrolled in a particular company
          benefit. It includes information specific to that employee’s enrollment.


          scope: `employee_benefits:write`
        parameters:
          - $ref: '#/components/parameters/employee_benefit_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                  active:
                    type: boolean
                    description: Whether the employee benefit is active.
                  employee_deduction:
                    type: string
                    default: '0.00'
                    description: >-
                      The amount to be deducted, per pay period, from the
                      employee's pay.
                  deduct_as_percentage:
                    type: boolean
                    description: >-
                      Whether the employee deduction amount should be treated as a
                      percentage to be deducted from each payroll.
                  employee_deduction_annual_maximum:
                    type: string
                    description: >-
                      The maximum employee deduction amount per year. A null value
                      signifies no limit.
                    nullable: true
                  contribution:
                    type: object
                    description: >-
                      An object representing the type and value of the company
                      contribution.
                    properties:
                      type:
                        type: string
                        description: >-
                          The company contribution scheme.


                          `amount`: The company contributes a fixed amount per
                          payroll. If elective is true, the contribution is
                          matching, dollar-for-dollar.


                          `percentage`: The company contributes a percentage of
                          the payroll amount per payroll period. If elective is
                          true, the contribution is matching, dollar-for-dollar.


                          `tiered`: The size of the company contribution
                          corresponds to the size of the employee deduction
                          relative to a tiered matching scheme.
                        enum:
                          - amount
                          - percentage
                          - tiered
                      value:
                        description: >-
                          For the `amount` and `percentage` contribution types,
                          the value of the corresponding amount or percentage.


                          For the `tiered` contribution type, an array of tiers.
                        oneOf:
                          - type: string
                            description: >-
                              For the `amount` and `percentage` contribution
                              types, the value of the corresponding amount or
                              percentage.
                          - type: array
                            description: For `tiered` contribution types, an array of tiers.
                            items:
                              type: object
                              description: A single tier of a tiered matching scheme.
                              properties:
                                rate:
                                  type: string
                                  description: >-
                                    The percentage of employee deduction within
                                    this tier the company contribution will match.
                                threshold:
                                  type: string
                                  description: >-
                                    The percentage threshold at which this tier
                                    ends (inclusive).


                                    For example, a value of "5" means the company
                                    contribution will match employee deductions
                                    from the previous tier's threshold up to and
                                    including 5% of payroll.


                                    If this is the first tier, a value of "5"
                                    means the company contribution will match
                                    employee deductions from 0% up to and
                                    including 5% of payroll.
                  elective:
                    type: boolean
                    description: >-
                      Whether the company contribution is elective (aka
                      "matching"). For `tiered`, `elective_amount`, and
                      `elective_percentage` contribution types this is ignored and
                      assumed to be `true`.
                    default: false
                  company_contribution_annual_maximum:
                    type: string
                    description: >-
                      The maximum company contribution amount per year. A null
                      value signifies no limit.
                    nullable: true
                  limit_option:
                    type: string
                    description: >-
                      Some benefits require additional information to determine
                      their limit. For example, for an HSA benefit, the limit
                      option should be either "Family" or "Individual". For a
                      Dependent Care FSA benefit, the limit option should be
                      either "Joint Filing or Single" or "Married and Filing
                      Separately".
                    nullable: true
                  catch_up:
                    type: boolean
                    default: false
                    description: >-
                      Whether the employee should use a benefit’s "catch up" rate.
                      Only Roth 401k and 401k benefits use this value for
                      employees over 50.
                  coverage_amount:
                    type: string
                    description: >-
                      The amount that the employee is insured for. Note: company
                      contribution cannot be present if coverage amount is set.
                    nullable: true
                  deduction_reduces_taxable_income:
                    type: string
                    default: unset
                    enum:
                      - unset
                      - reduces_taxable_income
                      - does_not_reduce_taxable_income
                      - null
                    description: >-
                      Whether the employee deduction reduces taxable income or
                      not. Only valid for Group Term Life benefits. Note: when the
                      value is not "unset", coverage amount and coverage salary
                      multiplier are ignored.
                    nullable: true
                  coverage_salary_multiplier:
                    type: string
                    default: '0.00'
                    description: >-
                      The coverage amount as a multiple of the employee’s salary.
                      Only applicable for Group Term Life benefits. Note: cannot
                      be set if coverage amount is also set.
                  company_contribution:
                    type: string
                    default: '0.00'
                    description: The amount to be paid, per pay period, by the company.
                    deprecated: true
                  contribute_as_percentage:
                    type: boolean
                    default: false
                    description: >-
                      Whether the company contribution amount should be treated as
                      a percentage to be deducted from each payroll.
                    deprecated: true
                required:
                  - version
              examples:
                Example:
                  value:
                    version: 09j3d29jqdpj92109j9j2d90dq
                    employee_deduction: '250.00'
      delete:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Delete an employee benefit
        tags:
          - Employee Benefits
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: delete-v1-employee_benefits-employee_benefit_id
        description: >-
          Employee benefits represent an employee enrolled in a particular company
          benefit. It includes information specific to that employee’s enrollment.


          scope: `employee_benefits:write`
        parameters:
          - $ref: '#/components/parameters/employee_benefit_id'
          - $ref: '#/components/parameters/VersionHeader'
    /v1/employees/{employee_id}/ytd_benefit_amounts_from_different_company:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create year-to-date benefit amounts from a different company
        tags:
          - Employee Benefits
        operationId: post-employee-ytd-benefit-amounts-from-different-company
        description: >-
          Year-to-date benefit amounts from a different company represents the
          amount of money added to an employee's plan during a current year, made
          outside of the current contribution when they were employed at a
          different company.


          This endpoint only supports passing outside contributions for 401(k)
          benefits.


          scope: `employee_benefits:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          $ref: >-
            #/components/requestBodies/post-employee-ytd-benefit-amounts-from-different-company
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
    /v1/employees/{employee_id}/garnishments:
      post:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Create a garnishment
        tags:
          - Garnishments
        responses:
          '201':
            $ref: '#/components/responses/Garnishment-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: post-v1-employees-employee_id-garnishments
        description: >-
          Garnishments, or employee deductions, are fixed amounts or percentages
          deducted from an employee’s pay. They can be deducted a specific number
          of times or on a recurring basis. Garnishments can also have maximum
          deductions on a yearly or per-pay-period bases. Common uses for
          garnishments are court-ordered payments for child support or back taxes.
          Some companies provide loans to their employees that are repaid via
          garnishments.


          scope: `garnishments:write`
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  active:
                    type: boolean
                    default: true
                    description: Whether or not this garnishment is currently active.
                  amount:
                    type: string
                    format: float
                    readOnly: false
                    description: >-
                      The amount of the garnishment. Either a percentage or a
                      fixed dollar amount. Represented as a float, e.g. "8.00".
                  description:
                    type: string
                    readOnly: false
                    description: The description of the garnishment.
                  court_ordered:
                    type: boolean
                    readOnly: false
                    description: Whether the garnishment is court ordered.
                  times:
                    type: integer
                    readOnly: false
                    default: null
                    nullable: true
                    description: >-
                      The number of times to apply the garnishment. Ignored if
                      recurring is true.
                  recurring:
                    type: boolean
                    readOnly: false
                    default: false
                    description: Whether the garnishment should recur indefinitely.
                  annual_maximum:
                    format: float
                    readOnly: false
                    default: null
                    nullable: true
                    description: >-
                      The maximum deduction per annum. A null value indicates no
                      maximum. Represented as a float, e.g. "200.00".
                    type: string
                  pay_period_maximum:
                    type: string
                    format: float
                    default: null
                    nullable: true
                    description: >-
                      The maximum deduction per pay period. A null value indicates
                      no maximum. Represented as a float, e.g. "16.00".
                  deduct_as_percentage:
                    type: boolean
                    readOnly: false
                    default: false
                    description: >-
                      Whether the amount should be treated as a percentage to be
                      deducted per pay period.
                required:
                  - amount
                  - description
                  - court_ordered
              examples:
                Example:
                  value:
                    amount: '150.00'
                    description: Back taxes
                    court_ordered: true
                    recurring: true
                    deduct_as_percentage: false
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get garnishments for an employee
        tags:
          - Garnishments
        parameters:
          - $ref: '#/components/parameters/employee_id'
          - $ref: '#/components/parameters/pageParam'
          - $ref: '#/components/parameters/perParam'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Garnishment-List'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-employees-employee_id-garnishments
        description: >-
          Garnishments, or employee deductions, are fixed amounts or percentages
          deducted from an employee’s pay. They can be deducted a specific number
          of times or on a recurring basis. Garnishments can also have maximum
          deductions on a yearly or per-pay-period bases. Common uses for
          garnishments are court-ordered payments for child support or back taxes.
          Some companies provide loans to their employees that are repaid via
          garnishments.


          scope: `garnishments:read`
    /v1/garnishments/{garnishment_id}:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get a garnishment
        tags:
          - Garnishments
        responses:
          '200':
            $ref: '#/components/responses/Garnishment-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
        operationId: get-v1-garnishments-garnishment_id
        description: >-
          Garnishments, or employee deductions, are fixed amounts or percentages
          deducted from an employee’s pay. They can be deducted a specific number
          of times or on a recurring basis. Garnishments can also have maximum
          deductions on a yearly or per-pay-period bases. Common uses for
          garnishments are court-ordered payments for child support or back taxes.
          Some companies provide loans to their employees that are repaid via
          garnishments.


          scope: `garnishments:read`
        parameters:
          - $ref: '#/components/parameters/garnishment_id'
          - $ref: '#/components/parameters/VersionHeader'
      put:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Update a garnishment
        tags:
          - Garnishments
        responses:
          '200':
            $ref: '#/components/responses/Garnishment-Object'
          '404':
            $ref: '#/components/responses/Not-Found-Error-Object'
          '422':
            $ref: '#/components/responses/Unprocessable-Entity-Error-Object'
        operationId: put-v1-garnishments-garnishment_id
        description: >-
          Garnishments, or employee deductions, are fixed amounts or percentages
          deducted from an employee’s pay. They can be deducted a specific number
          of times or on a recurring basis. Garnishments can also have maximum
          deductions on a yearly or per-pay-period bases. Common uses for
          garnishments are court-ordered payments for child support or back taxes.
          Some companies provide loans to their employees that are repaid via
          garnishments.


          scope: `garnishments:write`
        parameters:
          - $ref: '#/components/parameters/garnishment_id'
          - $ref: '#/components/parameters/VersionHeader'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  active:
                    type: boolean
                    default: true
                    description: Whether or not this garnishment is currently active.
                  amount:
                    type: string
                    format: float
                    readOnly: false
                    description: >-
                      The amount of the garnishment. Either a percentage or a
                      fixed dollar amount. Represented as a float, e.g. "8.00".
                  description:
                    type: string
                    readOnly: false
                    description: The description of the garnishment.
                  court_ordered:
                    type: boolean
                    readOnly: false
                    description: Whether the garnishment is court ordered.
                  times:
                    type: integer
                    readOnly: false
                    default: null
                    nullable: true
                    description: >-
                      The number of times to apply the garnishment. Ignored if
                      recurring is true.
                  recurring:
                    type: boolean
                    readOnly: false
                    default: false
                    description: Whether the garnishment should recur indefinitely.
                  annual_maximum:
                    format: float
                    readOnly: false
                    default: null
                    nullable: true
                    description: >-
                      The maximum deduction per annum. A null value indicates no
                      maximum. Represented as a float, e.g. "200.00".
                    type: string
                  pay_period_maximum:
                    type: string
                    format: float
                    default: null
                    nullable: true
                    description: >-
                      The maximum deduction per pay period. A null value indicates
                      no maximum. Represented as a float, e.g. "16.00".
                  deduct_as_percentage:
                    type: boolean
                    readOnly: false
                    default: false
                    description: >-
                      Whether the amount should be treated as a percentage to be
                      deducted per pay period.
                  version:
                    type: string
                    description: >-
                      The current version of the object. See the [versioning
                      guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
                      for information on how to use this field.
                required:
                  - version
              examples:
                Example:
                  value:
                    version: 52b7c567242cb7452e89ba2bc02cb476
                    active: false
    /v1/events:
      get:
        x-gusto-integration-type:
          - embedded
          - app-integrations
        summary: Get all events
        tags:
          - Events
        operationId: get-events
        description: >-
          Fetch all events, going back up to 30 days, that your partner
          application has the required scopes for. Note that a partner does NOT
          have to have verified webhook subscriptions in order to utilize this
          endpoint.


          > 📘 System Access Authentication

          >

          > This endpoint uses the [Bearer Auth scheme with the system-level
          access token in the HTTP Authorization
          header](https://docs.gusto.com/embedded-payroll/docs/system-access).


          scope: `events:read`
        security:
          - SystemAccessAuth: []
        parameters:
          - $ref: '#/components/parameters/starting_after_uuid'
          - $ref: '#/components/parameters/resource_uuid'
          - $ref: '#/components/parameters/limit'
          - $ref: '#/components/parameters/event_type'
          - $ref: '#/components/parameters/VersionHeader'
        responses:
          '200':
            $ref: '#/components/responses/Event-List'
  components:
    parameters:
      pageParam:
        schema:
          type: number
        in: query
        name: page
        description: >-
          The page that is requested. When unspecified, will load all objects
          unless endpoint forces pagination.
      page:
        schema:
          type: number
        in: query
        name: page
        description: The page that is requested. When unspecified, will load the first page.
      perParam:
        schema:
          type: number
        in: query
        name: per
        description: Number of objects per page. For majority of endpoints will default to 25
      start_date:
        in: query
        name: start_date
        schema:
          type: string
          example: '2020-01-01'
      end_date:
        in: query
        name: end_date
        schema:
          type: string
          example: '2020-01-31'
      bank_account_uuid:
        name: bank_account_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the bank account
      benefit_id:
        schema:
          type: string
        name: benefit_id
        in: path
        required: true
        description: The benefit type in Gusto.
      compensation_id:
        schema:
          type: string
        name: compensation_id
        in: path
        required: true
        description: The UUID of the compensation
      company_benefit_id:
        schema:
          type: string
        name: company_benefit_id
        in: path
        required: true
        description: The UUID of the company benefit
      company_id:
        name: company_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the company
      company_uuid:
        name: company_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the company
      contractor_id:
        name: contractor_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the contractor
      contractor_uuid:
        name: contractor_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the contractor
      contractor_payment_id:
        name: contractor_payment_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the contractor payment
      contractor_payment_uuid:
        name: contractor_payment_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the contractor payment
      department_uuid:
        name: department_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the department
      earning_type_uuid:
        schema:
          type: string
        name: earning_type_uuid
        in: path
        required: true
        description: The UUID of the earning type
      effective_date:
        in: query
        name: effective_date
        required: false
        schema:
          type: string
          example: '2020-01-31'
      employee_benefit_id:
        name: employee_benefit_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the employee benefit.
      employee_id:
        name: employee_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the employee
      employee_uuid:
        name: employee_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the employee
      event_type:
        name: event_type
        in: query
        required: false
        schema:
          type: string
        description: >-
          A string containing the exact event name (e.g. `employee.created`), or
          use a wildcard match to filter for a group of events (e.g. `employee.*`,
          `*.created`, `notification.*.created` etc.)
      external_payroll_id:
        name: external_payroll_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the external payroll
      form_id:
        name: form_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the form
      garnishment_id:
        name: garnishment_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the garnishment
      home_address_uuid:
        name: home_address_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the home address
      work_address_uuid:
        name: work_address_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the work address
      job_id:
        schema:
          type: string
        name: job_id
        in: path
        required: true
        description: The UUID of the job
      limit:
        name: limit
        in: query
        required: false
        schema:
          type: string
        description: >-
          Limits the number of objects returned in a single response, between 1
          and 100. The default is 25
      location_id:
        name: location_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the location
      location_uuid:
        name: location_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the location
      payroll_id:
        name: payroll_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the payroll
      payroll_uuid:
        name: payroll_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the payroll
      pay_schedule_id:
        name: pay_schedule_id
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the pay schedule
      payroll_types:
        name: payroll_types
        in: query
        required: false
        schema:
          type: string
        description: >-
          regular and/or transition. Multiple options are comma separated. The
          default is regular pay periods if nothing is passed in.
      document_type:
        name: document_type
        in: path
        required: true
        schema:
          type: string
        description: the type of document being generated
      request_uuid:
        name: request_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the Generated Document Request
      signatory_uuid:
        name: signatory_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the signatory
      starting_after_uuid:
        name: starting_after_uuid
        in: query
        required: false
        schema:
          type: string
        description: >-
          A cursor for pagination. Returns all events occuring after the specified
          UUID (exclusive)
      resource_uuid:
        name: resource_uuid
        in: query
        required: false
        schema:
          type: string
        description: >-
          The UUID of the company. If not specified, will return all events for
          all companies.
      time_off_type:
        schema:
          type: string
        required: true
        in: query
        name: time_off_type
        description: >-
          The time off type name you want to query data for. ex: 'sick' or
          'vacation'
      time_off_policy_uuid:
        name: time_off_policy_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the company time off policy
      webhook_subscription_uuid:
        name: webhook_subscription_uuid
        in: path
        required: true
        schema:
          type: string
        description: The webhook subscription UUID.
      VersionHeader:
        name: X-Gusto-API-Version
        in: header
        required: false
        description: >-
          Determines the date-based API version associated with your API call. If
          none is provided, your application's [minimum API
          version](https://docs.gusto.com/embedded-payroll/docs/api-versioning#minimum-api-version)
          is used.
        schema:
          type: string
          enum:
            - '2024-04-01'
      notification_uuid:
        name: notification_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the notification
      invoice_period:
        name: invoice_period
        in: path
        required: true
        schema:
          type: string
          example: 2020-01
        description: The month we are calculating the invoice for. Must be in YYYY-MM format
      recovery_case_uuid:
        name: recovery_case_uuid
        in: path
        required: true
        schema:
          type: string
        description: The UUID of the recovery case
      contractor_payment_uuid_query:
        name: contractor_payment_uuid
        in: query
        required: false
        schema:
          type: string
        description: The UUID of the contractor payment
      payroll_uuid_query:
        name: payroll_uuid
        in: query
        required: false
        schema:
          type: string
        description: The UUID of the payroll
      transaction_type:
        name: transaction_type
        in: query
        required: false
        schema:
          type: string
        description: >-
          Used to filter the ACH transactions to only include those with a
          specific transaction type, such as "Credit employee pay".
      payment_direction:
        name: payment_direction
        in: query
        required: false
        schema:
          type: string
        description: >-
          Used to filter the ACH transactions to only include those with a
          specific payment direction, either "credit" or "debit".
    schemas:
      Versionable-Required:
        type: object
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
        required:
          - version
      Versionable:
        type: object
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
      Employee-Address:
        allOf:
          - $ref: '#/components/schemas/Address'
          - type: object
            properties:
              uuid:
                type: string
                description: The UUID of the employee address
              employee_uuid:
                type: string
                description: The UUID of the employee
              effective_date:
                type: string
                format: date
                description: The date the employee started living at the address.
              courtesy_withholding:
                type: boolean
                description: >-
                  Determines if home taxes should be withheld and paid for
                  employee.
        example:
          uuid: 9557fe01-f8f8-4c14-a61c-ca6221a9f118
          employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
          street_1: 333 Kiera Stravenue
          street_2: Suite 391
          city: San Francisco
          state: CA
          zip: '94107'
          country: USA
          active: true
          effective_date: '2021-01-01'
          courtesy_withholding: true
      Employee-Work-Address:
        type: object
        properties:
          uuid:
            type: string
            readOnly: true
            description: The unique identifier of this work address.
          effective_date:
            type: string
            description: The date the employee began working at this location.
          active:
            type: boolean
            readOnly: true
            description: >-
              Signifies if this address is the active work address for the current
              date
          location_uuid:
            type: string
            description: UUID reference to the company location for this work address.
          employee_uuid:
            type: string
            description: UUID reference to the employee for this work address.
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          street_1:
            type: string
            readOnly: true
          street_2:
            type: string
            readOnly: true
            nullable: true
          city:
            type: string
            readOnly: true
          state:
            type: string
            readOnly: true
          zip:
            type: string
            readOnly: true
          country:
            type: string
            readOnly: true
            default: USA
        example:
          uuid: 34925ef7-6234-440d-83b8-788a24d0d69a
          employee_uuid: 2363b9c0-6625-4425-9261-47627fd68783
          location_uuid: aba6d0fd-7294-4997-b1a4-bc9268c45932
          effective_date: '2023-05-15'
          active: true
          version: 6a22da647ed391f184a212e6e83a541d
          street_1: 977 Marks Viaduct
          street_2: null
          city: Pink Hill
          state: NC
          zip: '28572'
          country: USA
      Contractor-Address:
        allOf:
          - $ref: '#/components/schemas/Address'
          - type: object
            properties:
              contractor_uuid:
                type: integer
                description: The UUID of the contractor
      Address:
        type: object
        allOf:
          - $ref: '#/components/schemas/Versionable'
          - type: object
            properties:
              street_1:
                type: string
                readOnly: false
              street_2:
                type: string
                readOnly: false
                nullable: true
              city:
                type: string
                readOnly: false
              state:
                type: string
                readOnly: false
              zip:
                type: string
                readOnly: false
              country:
                type: string
                readOnly: false
                default: USA
              active:
                type: boolean
                description: >-
                  The status of the location. Inactive locations have been
                  deleted, but may still have historical data associated with
                  them.
                readOnly: true
        example:
          street_1: 412 Kiera Stravenue
          street_2: Suite 391
          city: San Francisco
          state: CA
          zip: '94107'
          country: USA
          active: true
      Department:
        type: object
        allOf:
          - $ref: '#/components/schemas/Versionable'
          - type: object
            properties:
              uuid:
                type: string
                description: The UUID of the department
              company_uuid:
                type: string
                description: The UUID of the company
              title:
                type: string
                description: Name of the department
              employees:
                type: array
                description: Array of employees assigned to the department.
                items:
                  properties:
                    uuid:
                      type: string
              contractors:
                type: array
                description: Array of contractors assigned to the department.
                items:
                  properties:
                    uuid:
                      type: string
      Employee:
        title: Employee
        type: object
        description: The representation of an employee in Gusto.
        x-examples:
          Example:
            uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
            first_name: Nicole
            middle_initial: M
            last_name: Boehm
            email: kory7757869450111548@barton-hermiston.io
            company_uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
            manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
            version: 414dedaca594b77135e0b8d2f398516d
            department: null
            terminated: false
            two_percent_shareholder: false
            onboarded: true
            onboarding_status: onboarding_completed
            jobs:
              - uuid: 5d5e3ce5-ea8f-4885-90e5-7ebaed03f7c5
                version: 91179081a7309c9fbd31bb3cf7b9893e
                employee_uuid: a987bce1-6d06-43f8-9978-9db886f479fb
                current_compensation_uuid: 798a962f-0fcf-491e-9b71-cfa6a1db114f
                payment_unit: Hour
                primary: true
                title: Client Support Manager
                compensations:
                  - uuid: 94f17a77-cfe5-436a-af94-422bbf8248ff
                    version: 233f0096a8015e62d9795fadf1fd300d
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    job_uuid: 64711ac0-83ff-4aaf-bec1-db72f5a44e56
                    effective_date: '2021-01-20'
                    rate: '22.00'
                    adjust_for_minimum_wage: false
                rate: '22.00'
                hire_date: '2020-01-20'
            eligible_paid_time_off:
              - name: Sick Hours
                policy_name: Sick Policy
                policy_uuid: 8dc8f324-3c03-4b42-8602-02476fa21c1b
                accrual_unit: Hour
                accrual_rate: '208.0'
                accrual_method: per_hour_worked
                accrual_period: Year
                accrual_balance: '71.0'
                maximum_accrual_balance: '240.0'
                paid_at_termination: false
              - name: Vacation Hours
                policy_name: Vacation Policy
                policy_uuid: ab59de61-239f-4805-933b-0e3360ed291c
                accrual_unit: Hour
                accrual_rate: '208.0'
                accrual_period: Year
                accrual_balance: '34.0'
                maximum_accrual_balance: '240.0'
                paid_at_termination: true
            terminations: []
            custom_fields:
              - id: ee515986-f3ca-49da-b576-2691b95262f9
                company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                name: employee_level
                description: Employee Level
                type: text
                value: '2'
              - id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59
                company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                name: t-shirt size
                description: What is your t-shirt size?
                type: text
                value: md
            garnishments: []
            date_of_birth: '1996-05-08'
            has_ssn: true
            ssn: ''
            phone: '1234567890'
            preferred_first_name: Vanessa
            work_email: vanessa.boehm@example.com
        x-tags:
          - Employees
        properties:
          uuid:
            type: string
            description: The UUID of the employee in Gusto.
            readOnly: true
          first_name:
            type: string
          middle_initial:
            type: string
            nullable: true
          last_name:
            type: string
          email:
            type: string
            description: >-
              The email address of the employee. This is provided to support
              syncing users between our system and yours. You may not use this
              email address for any other purpose (e.g. marketing).
            nullable: true
          company_uuid:
            type: string
            description: The UUID of the company the employee is employed by.
            readOnly: true
          manager_uuid:
            type: string
            description: The UUID of the employee's manager.
            readOnly: true
          version:
            type: string
            description: >-
              The current version of the employee. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
            readOnly: true
          department:
            type: string
            description: The employee's department in the company.
            nullable: true
            readOnly: true
          terminated:
            type: boolean
            description: Whether the employee is terminated.
            readOnly: true
          two_percent_shareholder:
            type: boolean
            description: >-
              Whether the employee is a two percent shareholder of the company.
              This field only applies to companies with an S-Corp entity type.
          onboarded:
            type: boolean
            description: Whether the employee has completed onboarding.
            readOnly: true
          onboarding_status:
            type: string
            description: The current onboarding status of the employee
            enum:
              - onboarding_completed
              - admin_onboarding_incomplete
              - self_onboarding_pending_invite
              - self_onboarding_invited
              - self_onboarding_invited_started
              - self_onboarding_invited_overdue
              - self_onboarding_completed_by_employee
              - self_onboarding_awaiting_admin_review
            readOnly: true
          jobs:
            type: array
            items:
              $ref: '#/components/schemas/Job'
          eligible_paid_time_off:
            type: array
            items:
              $ref: '#/components/schemas/Paid-Time-Off'
          terminations:
            type: array
            items:
              $ref: '#/components/schemas/Termination'
          garnishments:
            type: array
            items:
              $ref: '#/components/schemas/Garnishment'
          custom_fields:
            type: array
            description: >-
              Custom fields are only included for the employee if the include
              param has the custom_fields value set
            items:
              $ref: '#/components/schemas/Employee-Custom-Field'
          date_of_birth:
            type: string
            nullable: true
            readOnly: true
          has_ssn:
            type: boolean
            description: Indicates whether the employee has an SSN in Gusto.
          ssn:
            type: string
            description: Deprecated. This field always returns an empty string.
          phone:
            type: string
          preferred_first_name:
            type: string
            description: ''
          payment_method:
            type: string
            description: The employee's payment method
            enum:
              - Direct Deposit
              - Check
            default: Check
            nullable: false
          work_email:
            type: string
            description: >-
              The work email address of the employee. This is provided to support
              syncing users between our system and yours. You may not use this
              email address for any other purpose (e.g. marketing).
            nullable: true
          current_employment_status:
            type: string
            description: >-
              The current employment status of the employee. Full-time employees
              work 30+ hours per week. Part-time employees are split into two
              groups: those that work 20-29 hours a week, and those that work
              under 20 hours a week. Variable employees have hours that vary each
              week. Seasonal employees are hired for 6 months of the year or less.
            enum:
              - full_time
              - part_time_under_twenty_hours
              - part_time_twenty_plus_hours
              - variable
              - seasonal
            nullable: true
            readOnly: true
        readOnly: true
      Employee-Onboarding-Status:
        description: The representation of an employee's onboarding status.
        type: object
        title: Employee-Onboarding-Status
        x-examples:
          Example - Employee Onboarding by Admin:
            uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
            onboarding_status: admin_onboarding_incomplete
            onboarding_steps:
              - title: Personal details
                id: personal_details
                required: true
                completed: false
                requirements: []
              - title: Enter compensation details
                id: compensation_details
                required: true
                completed: false
                requirements: []
              - title: Add work address
                id: add_work_address
                required: true
                completed: false
                requirements: []
              - title: Add home address
                id: add_home_address
                required: true
                completed: false
                requirements: []
              - title: Enter federal tax withholdings
                id: federal_tax_setup
                required: true
                completed: false
                requirements: []
              - title: Enter state tax information
                id: state_tax_setup
                required: true
                completed: false
                requirements:
                  - add_work_address
                  - add_home_address
              - title: Direct deposit setup
                id: direct_deposit_setup
                required: false
                completed: false
                requirements: []
              - title: Employee form signing
                id: employee_form_signing
                required: true
                completed: false
                requirements:
                  - federal_tax_setup
                  - state_tax_setup
              - title: File new hire report
                id: file_new_hire_report
                required: true
                completed: false
                requirements:
                  - add_work_address
          Example - Employee Self-Onboarding:
            uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
            onboarding_status: self_onboarding_invited
            onboarding_steps:
              - title: Personal details
                id: personal_details
                required: true
                completed: false
                requirements: []
              - title: Enter compensation details
                id: compensation_details
                required: true
                completed: false
                requirements: []
              - title: Add work address
                id: add_work_address
                required: true
                completed: false
                requirements: []
              - title: Add home address
                id: add_home_address
                required: true
                completed: false
                requirements: []
              - title: Enter federal tax withholdings
                id: federal_tax_setup
                required: true
                completed: false
                requirements: []
              - title: Enter state tax information
                id: state_tax_setup
                required: true
                completed: false
                requirements:
                  - add_work_address
                  - add_home_address
              - title: Direct deposit setup
                id: direct_deposit_setup
                required: true
                completed: false
                requirements: []
              - title: Employee form signing
                id: employee_form_signing
                required: true
                completed: false
                requirements:
                  - federal_tax_setup
                  - state_tax_setup
              - title: Admin review
                id: admin_review
                required: true
                completed: false
                requirements:
                  - personal_details
                  - compensation_details
                  - add_home_address
                  - add_work_address
                  - federal_tax_setup
                  - state_tax_setup
        x-tags:
          - Employees
        properties:
          uuid:
            type: string
            description: Unique identifier for this employee.
          onboarding_status:
            type: string
            description: One of the "onboarding_status" enum values.
          onboarding_steps:
            type: array
            description: List of steps required to onboard an employee.
            items:
              title: Onboarding step
              type: object
              properties:
                title:
                  type: string
                  description: User-friendly description of the onboarding step.
                id:
                  type: string
                  description: String identifier for the onboarding step.
                required:
                  type: boolean
                  description: When true, this step has been completed.
                completed:
                  type: boolean
                  description: When true, this step has been completed.
                requirements:
                  type: array
                  description: A list of onboarding steps required to begin this step.
                  items:
                    type: string
      Company-Address:
        description: The representation of a company's address in Gusto.
        type: object
        x-tags:
          - Locations
        title: ''
        x-examples:
          Company Address:
            street_1: 412 Kiera Stravenue
            street_2: Suite 391
            city: San Francisco
            state: CA
            zip: '94107'
            country: USA
            active: true
        properties:
          street_1:
            type: string
            readOnly: false
          street_2:
            type: string
            readOnly: false
            nullable: true
          city:
            type: string
            readOnly: false
          state:
            type: string
            readOnly: false
          zip:
            type: string
            readOnly: false
          country:
            type: string
            readOnly: false
            default: USA
          active:
            type: boolean
            description: >-
              The status of the location. Inactive locations have been deleted,
              but may still have historical data associated with them.
            readOnly: true
      Location:
        description: The representation of an address in Gusto.
        type: object
        x-examples:
          Company Location:
            company_uuid: 768a1043-f6bf-4f0b-a606-98465ea01ad7
            version: 7d9753112507b9dda4fb97910f39b06e
            phone_number: '5825710808'
            uuid: 064a4107-c9f4-4fad-acbf-f12cd81c0d6c
            street_1: 412 Kiera Stravenue
            street_2: Suite 391
            city: San Francisco
            state: CA
            zip: '94107'
            country: USA
            active: true
            created_at: '2023-09-12T16:42:25.000-07:00'
            updated_at: '2023-09-12T16:42:25.000-07:00'
        x-tags:
          - Locations
        title: ''
        properties:
          uuid:
            type: string
            description: The UUID of the location object.
            readOnly: true
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          company_uuid:
            type: string
            description: >-
              The UUID for the company to which the location belongs. Only
              included if the location belongs to a company.
            readOnly: true
          phone_number:
            type: string
            readOnly: false
            description: >-
              The phone number for the location. Required for company locations.
              Optional for employee locations.
          street_1:
            type: string
            readOnly: false
          street_2:
            type: string
            readOnly: false
            nullable: true
          city:
            type: string
            readOnly: false
          state:
            type: string
            readOnly: false
          zip:
            type: string
            readOnly: false
          country:
            type: string
            readOnly: false
            default: USA
          active:
            type: boolean
            description: >-
              The status of the location. Inactive locations have been deleted,
              but may still have historical data associated with them.
            readOnly: true
          mailing_address:
            type: boolean
            description: >-
              Specifies if the location is the company's mailing address. Only
              included if the location belongs to a company.
            nullable: true
          filing_address:
            description: >-
              Specifies if the location is the company's filing address. Only
              included if the location belongs to a company.
            type: boolean
            nullable: true
          created_at:
            type: string
            description: Datetime for when location is created
          updated_at:
            type: string
            description: Datetime for when location is updated
      Paid-Time-Off:
        type: object
        description: The representation of paid time off in Gusto.
        properties:
          name:
            type: string
            description: The name of the paid time off type.
            enum:
              - Vacation Hours
              - Sick Hours
              - Holiday Hours
            readOnly: true
          policy_name:
            type: string
            description: The name of the time off policy.
            readOnly: true
          policy_uuid:
            type: string
            description: The UUID of the time off policy.
            readOnly: true
          accrual_unit:
            type: string
            example: Hour
            description: The unit the PTO type is accrued in.
            readOnly: true
          accrual_rate:
            type: string
            description: The number of accrual units accrued per accrual period.
            readOnly: true
          accrual_method:
            type: string
            example: unlimited
            description: The accrual method of the time off policy
            readOnly: true
          accrual_period:
            type: string
            example: Year
            description: The frequency at which the PTO type is accrued.
            readOnly: true
          accrual_balance:
            type: string
            description: The number of accrual units accrued.
            readOnly: true
          maximum_accrual_balance:
            type: string
            nullable: true
            description: >-
              The maximum number of accrual units allowed. A null value signifies
              no maximum.
            readOnly: true
          paid_at_termination:
            type: boolean
            description: >-
              Whether the accrual balance is paid to the employee upon
              termination.
            readOnly: true
        x-examples:
          Example:
            name: Sick Hours
            policy_name: Sick Policy
            policy_uuid: 8dc8f324-3c03-4b42-8602-02476fa21c1b
            accrual_unit: Hour
            accrual_rate: '208.0'
            accrual_period: Year
            accrual_balance: '64.0'
            maximum_accrual_balance: '240.0'
            paid_at_termination: false
        x-tags:
          - Payrolls
      Garnishment:
        description: >-
          Garnishments, or employee deductions, are fixed amounts or percentages
          deducted from an employee’s pay. They can be deducted a specific number
          of times or on a recurring basis. Garnishments can also have maximum
          deductions on a yearly or per-pay-period bases. Common uses for
          garnishments are court-ordered payments for child support or back taxes.
          Some companies provide loans to their employees that are repaid via
          garnishments.
        type: object
        x-examples:
          Example:
            uuid: 4c7841a2-1363-497e-bc0f-664703c7484f
            version: 52b7c567242cb7452e89ba2bc02cb476
            employee_uuid: a6b53294-f871-4db2-bbd4-8c3d1fe56440
            active: true
            amount: '8.00'
            description: Company loan to employee
            court_ordered: false
            times: 5
            recurring: false
            annual_maximum: null
            pay_period_maximum: '100.00'
            deduct_as_percentage: true
        properties:
          uuid:
            type: string
            description: The UUID of the garnishment in Gusto.
            readOnly: true
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          employee_uuid:
            type: integer
            description: The UUID of the employee to which this garnishment belongs.
            readOnly: true
          active:
            type: boolean
            default: true
            description: Whether or not this garnishment is currently active.
          amount:
            type: string
            format: float
            readOnly: false
            description: >-
              The amount of the garnishment. Either a percentage or a fixed dollar
              amount. Represented as a float, e.g. "8.00".
          description:
            type: string
            readOnly: false
            description: The description of the garnishment.
          court_ordered:
            type: boolean
            readOnly: false
            description: Whether the garnishment is court ordered.
          times:
            type: integer
            nullable: true
            readOnly: false
            default: null
            description: >-
              The number of times to apply the garnishment. Ignored if recurring
              is true.
          recurring:
            type: boolean
            readOnly: false
            default: false
            description: Whether the garnishment should recur indefinitely.
          annual_maximum:
            format: float
            readOnly: false
            default: null
            description: >-
              The maximum deduction per annum. A null value indicates no maximum.
              Represented as a float, e.g. "200.00".
            type: string
            nullable: true
          pay_period_maximum:
            type: string
            nullable: true
            format: float
            default: null
            description: >-
              The maximum deduction per pay period. A null value indicates no
              maximum. Represented as a float, e.g. "16.00".
          deduct_as_percentage:
            type: boolean
            readOnly: false
            default: false
            description: >-
              Whether the amount should be treated as a percentage to be deducted
              per pay period.
      Termination:
        type: object
        description: The representation of a termination in Gusto.
        properties:
          uuid:
            type: string
            description: The UUID of the termination object.
            readOnly: true
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          employee_uuid:
            type: integer
            description: The UUID of the employee to which this termination is attached.
            readOnly: true
          active:
            type: boolean
            description: Whether the employee's termination has gone into effect.
            readOnly: true
          cancelable:
            type: boolean
            description: >-
              Whether the employee's termination is cancelable. Cancelable is true
              if `run_termination_payroll` is false and `effective_date` is in the
              future.
            readOnly: true
          effective_date:
            type: string
            readOnly: false
            description: The employee's last day of work.
          run_termination_payroll:
            type: boolean
            readOnly: false
            description: >-
              If true, the employee should receive their final wages via an
              off-cycle payroll. If false, they should receive their final wages
              on their current pay schedule.
        x-examples:
          example-1:
            uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
            employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
            version: d487dd0b55dfcacdd920ccbdaeafa351
            active: true
            cancelable: true
            effective_date: '2020-03-10'
            run_termination_payroll: false
        x-tags:
          - Terminations
      Rehire-Body:
        type: object
        properties:
          effective_date:
            type: string
            description: The day when the employee returns to work.
          file_new_hire_report:
            type: boolean
            description: >-
              The boolean flag indicating whether Gusto will file a new hire
              report for the employee.
          work_location_uuid:
            type: string
            description: The uuid of the employee's work location.
          employment_status:
            type: string
            description: >-
              The employee's employment status. Supplying an invalid option will
              set the employment_status to *not_set*.
            enum:
              - part_time
              - full_time
              - part_time_eligible
              - variable
              - seasonal
              - not_set
          two_percent_shareholder:
            type: boolean
            description: >-
              Whether the employee is a two percent shareholder of the company.
              This field only applies to companies with an S-Corp entity type.
        required:
          - effective_date
          - file_new_hire_report
          - work_location_uuid
      Pay-Schedule-Assignment-Body:
        type: object
        properties:
          type:
            type: string
            enum:
              - single
              - hourly_salaried
              - by_employee
              - by_department
            description: The pay schedule assignment type.
          hourly_pay_schedule_uuid:
            type: string
            description: Pay schedule for hourly employees.
          salaried_pay_schedule_uuid:
            type: string
            description: Pay schedule for salaried employees.
          default_pay_schedule_uuid:
            type: string
            description: Default pay schedule for employees.
          employees:
            type: array
            description: List of employees and their pay schedules.
            items:
              type: object
              properties:
                employee_uuid:
                  type: string
                  description: Employee UUID
                pay_schedule_uuid:
                  type: string
                  description: Pay schedule UUID
          departments:
            type: array
            description: List of departments and their pay schedules.
            items:
              type: object
              properties:
                department_uuid:
                  type: string
                  description: Department UUID
                pay_schedule_uuid:
                  type: string
                  description: Pay schedule UUID
        required:
          - type
      Flsa-Status-Type:
        type: string
        enum:
          - Exempt
          - Salaried Nonexempt
          - Nonexempt
          - Owner
          - Commission Only Exempt
          - Commission Only Nonexempt
        description: >-
          The FLSA status for this compensation. Salaried ('Exempt') employees are
          paid a fixed salary every pay period. Salaried with overtime ('Salaried
          Nonexempt') employees are paid a fixed salary every pay period, and
          receive overtime pay when applicable. Hourly ('Nonexempt') employees are
          paid for the hours they work, and receive overtime pay when applicable.
          Commissioned employees ('Commission Only Exempt') earn wages based only
          on commission. Commissioned with overtime ('Commission Only Nonexempt')
          earn wages based on commission, and receive overtime pay when
          applicable. Owners ('Owner') are employees that own at least twenty
          percent of the company. 
      Compensation:
        type: object
        description: The representation of compensation in Gusto.
        x-examples:
          Example:
            uuid: 910b675b-af99-404e-b8d8-562a72b76b44
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
            job_uuid: fe9d72aa-11aa-4f6c-ba3b-4de14598cff6
            rate: '70.00'
            payment_unit: Hour
            flsa_status: Nonexempt
            effective_date: '2020-12-11'
            adjust_for_minimum_wage: false
        x-tags:
          - Jobs and Compensations
        properties:
          uuid:
            type: string
            description: The UUID of the compensation in Gusto.
            readOnly: true
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          job_uuid:
            type: string
            description: The UUID of the job to which the compensation belongs.
            readOnly: true
          rate:
            type: string
            readOnly: false
            description: The dollar amount paid per payment unit.
          payment_unit:
            type: string
            readOnly: false
            description: >-
              The unit accompanying the compensation rate. If the employee is an
              owner, rate should be 'Paycheck'.
            enum:
              - Hour
              - Week
              - Month
              - Year
              - Paycheck
          flsa_status:
            $ref: '#/components/schemas/Flsa-Status-Type'
          effective_date:
            type: string
            readOnly: false
            description: >-
              The effective date for this compensation. For the first
              compensation, this defaults to the job's hire date.
          adjust_for_minimum_wage:
            type: boolean
            description: >-
              Indicates if the compensation could be adjusted to minimum wage
              during payroll calculation.
            readOnly: true
      Form:
        title: Form
        type: object
        properties:
          uuid:
            type: string
            description: The UUID of the form
            readOnly: true
          name:
            type: string
            description: The type identifier of the form
            readOnly: true
          title:
            type: string
            description: The title of the form
            readOnly: true
          description:
            type: string
            description: The description of the form
            readOnly: true
          draft:
            type: boolean
            description: >-
              If the form is in a draft state. E.g. End of year tax forms may be
              provided in a draft state prior to being finalized.
            readOnly: true
          year:
            type: integer
            description: >-
              The year of this form. For some forms, e.g. tax forms, this is the
              year which the form represents. A W2 for January - December 2022
              would be delivered in January 2023 and have a year value of 2022.
              This value is nullable and will not be present on all forms.
            readOnly: true
            nullable: true
          quarter:
            type: integer
            description: >-
              The quarter of this form. For some forms, e.g. tax forms, this is
              the calendar quarter which this form represents. An Employer's
              Quarterly Federal Tax Return (Form 941) for April, May, June 2022
              would have a quarter value of 2 (and a year value of 2022). This
              value is nullable and will not be present on all forms.
            readOnly: true
            nullable: true
          requires_signing:
            type: boolean
            description: >-
              A boolean flag that indicates whether the form needs signing or not.
              Note that this value will change after the form is signed.
            readOnly: true
        x-examples:
          Example:
            uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
            name: company_direct_deposit
            title: Direct Deposit Authorization
            description: >-
              We need you to sign paperwork to authorize us to debit and credit
              your bank account and file and pay your taxes.
            requires_signing: true
        x-tags:
          - Forms
      Form_1099:
        title: Form
        type: object
        properties:
          uuid:
            type: string
            description: The UUID of the form
            readOnly: true
          name:
            type: string
            description: The type identifier of the form
            readOnly: true
          title:
            type: string
            description: The title of the form
            readOnly: true
          description:
            type: string
            description: The description of the form
            readOnly: true
          draft:
            type: boolean
            description: >-
              If the form is in a draft state. E.g. End of year tax forms may be
              provided in a draft state prior to being finalized.
            readOnly: true
          year:
            type: integer
            description: >-
              The year of this form. For some forms, e.g. tax forms, this is the
              year which the form represents. A 1099 for January - December 2022
              would be delivered in January 2023 and have a year value of 2022.
              This value is nullable and will not be present on all forms.
            readOnly: true
            nullable: true
          quarter:
            type: integer
            description: >-
              The quarter of this form. This value is currently always null since
              it is not present on any contractor forms.
            readOnly: true
            nullable: true
          requires_signing:
            type: boolean
            description: >-
              A boolean flag that indicates whether the form needs signing or not.
              Note that this value will change after the form is signed.
            readOnly: true
          contractor_uuid:
            type: string
            description: The contractor UUID
            readOnly: true
        x-examples:
          Example:
            uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
            name: US_1099
            title: 'Form 1099: 2020'
            description: Form 1099 records your annual income as a contractor.
            draft: false
            requires_signing: false
            year: 2020
            quarter: null
            contractor_uuid: 123dd616-6dbc-4724-938a-403f6217a933
        x-tags:
          - Forms
      Form-Pdf:
        title: Form Pdf
        type: object
        properties:
          uuid:
            type: string
            description: the UUID of the form
            readOnly: true
          document_url:
            type: string
            description: the URL of the form
      Industry:
        title: Industry
        type: object
        properties:
          company_uuid:
            type: string
            description: Company uuid
            readOnly: true
          naics_code:
            type: string
            description: >-
              North American Industry Classification System (NAICS) is used to
              classify businesses with a six digit number based on the primary
              type of work the business performs.
            readOnly: true
          sic_codes:
            type: array
            description: >-
              A list of Standard Industrial Classification (SIC) codes, which are
              four digit number that categorize the industries that companies
              belong to based on their business activities.
            readOnly: true
            items:
              type: string
          title:
            type: string
            description: Industry title
            readOnly: true
        x-examples:
          Example:
            company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
            naics_code: '611420'
            sic_codes:
              - '8243'
            title: Computer Training
        x-tags:
          - Industry
      Job:
        title: Job
        type: object
        properties:
          uuid:
            type: string
            description: The UUID of the job.
            readOnly: true
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          employee_uuid:
            type: string
            description: The UUID of the employee to which the job belongs.
            readOnly: true
          hire_date:
            type: string
            readOnly: false
            description: The date when the employee was hired or rehired for the job.
          title:
            type: string
            readOnly: false
            default: null
            nullable: true
            description: The title for the job.
          primary:
            type: boolean
            description: >-
              Whether this is the employee's primary job. The value will be set to
              true unless an existing job exists for the employee.
            readOnly: true
          rate:
            type: string
            description: The current compensation rate of the job.
            readOnly: true
          payment_unit:
            type: string
            description: The payment unit of the current compensation for the job.
            readOnly: true
          current_compensation_uuid:
            type: string
            description: The UUID of the current compensation of the job.
            readOnly: true
          two_percent_shareholder:
            type: boolean
            description: Whether the employee owns at least 2% of the company.
            readOnly: false
          state_wc_covered:
            type: boolean
            description: >-
              Whether this job is eligible for workers' compensation coverage in
              the state of Washington (WA).
            readOnly: false
          state_wc_class_code:
            type: string
            description: >-
              The risk class code for workers' compensation in Washington state.
              Please visit [Washington state's Risk Class
              page](https://www.lni.wa.gov/insurance/rates-risk-classes/risk-classes-for-workers-compensation/risk-class-lookup#/)
              to learn more.
            readOnly: false
          compensations:
            type: array
            items:
              $ref: '#/components/schemas/Compensation'
            readOnly: true
        description: The representation of a job in Gusto.
        x-examples:
          Example:
            uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
            version: d0e719137f89ca3dd334dd4cc248ffbb
            employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
            current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
            payment_unit: Year
            primary: true
            title: Account Director
            compensations:
              - uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                version: 994b75511d1debac5d7e2ddeae13679f
                payment_unit: Year
                flsa_status: Exempt
                job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                effective_date: '2021-01-20'
                rate: '78000.00'
                adjust_for_minimum_wage: false
            rate: '78000.00'
            hire_date: '2020-01-20'
        x-tags:
          - Jobs and Compensations
      External-Payroll:
        description: The representation of an external payroll.
        type: object
        x-tags:
          - External Payrolls
        title: ''
        properties:
          uuid:
            type: string
            description: The UUID of the external payroll.
            readOnly: true
          company_uuid:
            type: string
            description: The UUID of the company.
            readOnly: true
          check_date:
            type: string
            description: External payroll's check date.
            readOnly: true
          payment_period_start_date:
            type: string
            description: External payroll's pay period start date.
            readOnly: true
          payment_period_end_date:
            type: string
            description: External payroll's pay period end date.
            readOnly: true
          status:
            type: string
            enum:
              - unprocessed
              - processed
            description: >-
              The status of the external payroll. The status will be `unprocessed`
              when the external payroll is created and transition to `processed`
              once tax liabilities are entered and finalized.  Once in the
              `processed` status all actions that can edit an external payroll
              will be disabled.
            readOnly: true
          external_payroll_items:
            type: array
            description: External payroll items for employees
            readOnly: true
            items:
              type: object
              properties:
                employee_uuid:
                  type: string
                earnings:
                  type: array
                  items:
                    type: object
                    properties:
                      amount:
                        type: string
                        format: float
                      hours:
                        type: string
                        format: float
                      earning_type:
                        type: string
                      earning_id:
                        type: integer
                benefits:
                  type: array
                  items:
                    type: object
                    properties:
                      benefit_id:
                        type: integer
                      company_contribution_amount:
                        type: string
                        format: float
                      employee_deduction_amount:
                        type: string
                        format: float
                taxes:
                  type: array
                  items:
                    type: object
                    properties:
                      tax_id:
                        type: integer
                      amount:
                        type: string
                        format: float
          applicable_earnings:
            type: array
            description: Applicable earnings based on company provisioning.
            readOnly: true
            items:
              type: object
              properties:
                earning_type:
                  type: string
                earning_id:
                  type: number
                name:
                  type: string
                input_type:
                  type: string
                category:
                  type: string
          applicable_benefits:
            type: array
            description: Applicable benefits based on company provisioning.
            readOnly: true
            items:
              type: object
              properties:
                id:
                  type: integer
                description:
                  type: string
                active:
                  type: boolean
          applicable_taxes:
            type: array
            description: Applicable taxes based on company provisioning.
            readOnly: true
            items:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                employer_tax:
                  type: boolean
                  description: >-
                    Some taxes may have an amount withheld from the employee and
                    an amount withheld from the employer, e.g. Social Security. A
                    `true` value indicates this is the employer's amount.
                resident_tax:
                  type: boolean
                  description: >-
                    Some taxes may have different rates or reporting requirements
                    depending on if the employee is a resident or non-resident of
                    the tax jurisdiction.
          metadata:
            type: object
            description: Stores metadata of the external payroll.
            readOnly: true
            properties:
              deletable:
                type: boolean
                description: Determines if the external payroll can be deleted.
                readOnly: true
        x-examples:
          Example:
            uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
            company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
            check_date: '2022-06-03'
            payment_period_start_date: '2022-05-15'
            payment_period_end_date: '2022-05-30'
            status: unprocessed
            external_payroll_items:
              - employee_uuid: 44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca
                earnings:
                  - amount: 10000
                    hours: 0
                    earning_type: CompanyPayType
                    earning_id: 1
                  - amount: 500
                    hours: 0
                    earning_type: CompanyEarningType
                    earning_id: 4
                benefits:
                  - benefit_id: 22
                    company_contribution_amount: 100
                    employee_deduction_amount: 50
                  - benefit_id: 25
                    company_contribution_amount: 0
                    employee_deduction_amount: 300
                taxes:
                  - tax_id: 1
                    amount: 400
                  - tax_id: 2
                    amount: 60
            applicable_earnings:
              - earning_type: CompanyPayType
                earning_id: 1
                name: Regular Wages
                input_type: amount
                category: default
              - earning_type: CompanyEarningType
                earning_id: 4
                name: Cash Tips
                input_type: amount
                category: default
            applicable_benefits:
              - id: 22
                description: Kaiser
                active: true
              - id: 25
                description: HSA
                active: true
            applicable_taxes:
              - id: 1
                name: Federal Income Tax
                employer_tax: false
                resident_tax: false
              - id: 2
                name: Social Security
                employer_tax: false
                resident_tax: false
            metadata:
              deletable: true
      Webhook-Subscription:
        description: The representation of webhook subscription.
        type: object
        x-tags:
          - Webhooks
        title: ''
        properties:
          uuid:
            type: string
            description: The UUID of the webhook subscription.
            readOnly: true
          url:
            type: string
            description: The webhook subscriber URL. Updates will be POSTed to this URL.
            readOnly: true
          status:
            type: string
            enum:
              - pending
              - verified
              - removed
            description: The status of the webhook subscription.
            readOnly: true
          subscription_types:
            type: array
            description: Receive updates for these types.
            readOnly: false
            items:
              type: string
              enum:
                - BankAccount
                - Company
                - CompanyBenefit
                - Contractor
                - ContractorPayment
                - Employee
                - EmployeeBenefit
                - EmployeeJobCompensation
                - ExternalPayroll
                - Form
                - Location
                - Notification
                - Payroll
                - PaySchedule
                - Signatory
        x-examples:
          Example:
            uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
            url: https://partner-app.com/subscriber
            status: verified
            subscription_types:
              - BankAccount
              - Company
              - CompanyBenefit
              - Contractor
              - ContractorPayment
              - Employee
              - EmployeeBenefit
              - EmployeeJobCompensation
              - ExternalPayroll
              - Form
              - Location
              - Notification
              - Payroll
              - PaySchedule
              - Signatory
      External-Payroll-Basic:
        description: The representation of an external payroll with minimal information.
        type: object
        x-tags:
          - External Payrolls
        title: ''
        properties:
          uuid:
            type: string
            description: The UUID of the external payroll.
            readOnly: true
          company_uuid:
            type: string
            description: The UUID of the company.
            readOnly: true
          check_date:
            type: string
            description: External payroll's check date.
            readOnly: true
          payment_period_start_date:
            type: string
            description: External payroll's pay period start date.
            readOnly: true
          payment_period_end_date:
            type: string
            description: External payroll's pay period end date.
            readOnly: true
          status:
            type: string
            enum:
              - unprocessed
              - processed
            description: >-
              The status of the external payroll. The status will be `unprocessed`
              when the external payroll is created and transition to `processed`
              once tax liabilities are entered and finalized.  Once in the
              `processed` status all actions that can edit an external payroll
              will be disabled.
            readOnly: true
        x-examples:
          Example:
            uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
            company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
            check_date: '2022-06-03'
            payment_period_start_date: '2022-05-15'
            payment_period_end_date: '2022-05-30'
      External-Payroll-Tax-Suggestions:
        description: The representation of an external payroll with minimal information.
        type: object
        x-tags:
          - External Payrolls
        title: ''
        properties:
          employee_uuid:
            type: string
            description: The UUID of the employee.
            readOnly: true
          tax_suggestions:
            type: object
            description: Possible tax liabilities selections.
            readOnly: true
            properties:
              tax_id:
                type: integer
                description: The ID of the tax.
                readOnly: true
              amount:
                type: string
                description: Calculated tax amount.
                readOnly: true
        x-examples:
          Example:
            employee_uuid: d21848d5-446f-48a8-9430-30fbefeabda4
            tax_suggestions:
              - tax_id: 1
                amount: 500
              - tax_id: 2
                amount: 100
              - tax_id: 4
                amount: 30
      Tax-Liabilities-Selections:
        description: The representation of tax liabilities selections.
        type: object
        x-tags:
          - External Payrolls
        title: ''
        properties:
          tax_id:
            type: integer
            description: The ID of the tax.
            readOnly: true
          tax_name:
            type: string
            description: The name of the tax.
            readOnly: true
          last_unpaid_external_payroll_uuid:
            type: string
            description: The UUID of last unpaid external payroll.
            nullable: true
            readOnly: true
          possible_liabilities:
            type: object
            description: Possible tax liabilities selections.
            readOnly: true
            properties:
              liability_amount:
                type: string
                description: Liability amount.
                readOnly: true
              payroll_check_date:
                type: string
                description: The external payroll check date.
                readOnly: true
              external_payroll_uuid:
                type: string
                description: The UUID of the external payroll.
                readOnly: true
        x-examples:
          Example:
            tax_id: 1
            tax_name: Federal Income Tax
            last_unpaid_external_payroll_uuid: null
            possible_liabilities:
              - liability_amount: 0
                payroll_check_date: null
                external_payroll_uuid: null
              - liability_amount: 3000
                payroll_check_date: '2022-06-01'
                external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
      Admin:
        title: Admin
        type: object
        description: The representation of an admin user in Gusto.
        x-examples:
          Example:
            uuid: 987058cc-23ee-46e9-81ef-5cee086cceca
            first_name: John
            last_name: Smith
            email: jsmith99@gmail.com
        properties:
          uuid:
            type: string
            description: The unique id of the admin.
          email:
            type: string
            description: >-
              The email of the admin for Gusto's system. If the email matches an
              existing user, this will create an admin account for them.
          first_name:
            type: string
            description: The first name of the admin.
          last_name:
            type: string
            description: The last name of the admin.
        x-tags:
          - Admins
      Company:
        title: Company
        type: object
        description: The representation of a company in Gusto.
        properties:
          ein:
            type: string
            description: The Federal Employer Identification Number of the company.
            readOnly: true
          entity_type:
            type: string
            description: The tax payer type of the company.
            enum:
              - C-Corporation
              - S-Corporation
              - Sole proprietor
              - LLC
              - LLP
              - Limited partnership
              - Co-ownership
              - Association
              - Trusteeship
              - General partnership
              - Joint venture
              - Non-Profit
            readOnly: true
          tier:
            type: string
            description: >-
              The Gusto product tier of the company (not applicable to Embedded
              partner managed companies).
            nullable: true
            readOnly: true
            enum:
              - simple
              - plus
              - premium
              - core
              - complete
              - concierge
              - contractor_only
              - basic
          is_suspended:
            type: boolean
            description: >-
              Whether or not the company is suspended in Gusto. Suspended
              companies may not run payroll.
          company_status:
            type: string
            description: >-
              The status of the company in Gusto. "Approved" companies may run
              payroll with Gusto. "Not Approved" companies may not yet run payroll
              with Gusto. In order to run payroll, the company may need to
              complete onboarding or contact support. "Suspended" companies may
              not run payroll with Gusto. In order to unsuspend their account, the
              company must contact support.
            enum:
              - Approved
              - Not Approved
              - Suspended
            readOnly: true
          uuid:
            type: string
            description: A unique identifier of the company in Gusto.
            readOnly: true
          name:
            type: string
            description: The name of the company.
            readOnly: true
          slug:
            type: string
            description: The slug of the name of the company.
            readOnly: true
          trade_name:
            type: string
            description: The trade name of the company.
            readOnly: true
          is_partner_managed:
            type: boolean
            description: Whether the company is fully managed by a partner via the API
            readOnly: true
          pay_schedule_type:
            type: string
            enum:
              - single
              - hourly_salaried
              - by_employee
              - by_department
            description: The pay schedule assignment type.
            readOnly: true
          join_date:
            type: string
            description: Company's first invoiceable event date
            readOnly: true
          funding_type:
            type: string
            description: Company's default funding type
            enum:
              - ach
              - reverse_wire
              - wire_in
              - brex
          locations:
            type: array
            uniqueItems: false
            description: The locations of the company.
            items:
              $ref: '#/components/schemas/Company-Address'
            readOnly: true
          compensations:
            type: object
            description: The available company-wide compensation rates for the company.
            properties:
              hourly:
                type: array
                uniqueItems: true
                description: The available hourly compensation rates for the company.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the hourly compensation rate.
                      example: Overtime
                      readOnly: true
                    multiple:
                      type: number
                      description: >-
                        The amount multiplied by the base rate of a job to
                        calculate compensation.
                      example: 1.5
                      readOnly: true
                  readOnly: true
                readOnly: true
              fixed:
                type: array
                uniqueItems: true
                description: The available fixed compensation rates for the company.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the fixed compensation.
                      example: Bonus
                  readOnly: true
                readOnly: true
              paid_time_off:
                type: array
                uniqueItems: true
                description: The available types of paid time off for the company.
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Vacation Hours
                      description: The name of the paid time off type.
                      readOnly: true
                  readOnly: true
                readOnly: true
            readOnly: true
          primary_signatory:
            type: object
            description: The primary signatory of the company.
            properties:
              first_name:
                type: string
                readOnly: true
              middle_initial:
                type: string
                readOnly: true
              last_name:
                type: string
                readOnly: true
              phone:
                type: string
                readOnly: true
              email:
                type: string
                readOnly: true
              home_address:
                type: object
                properties:
                  street_1:
                    type: string
                    readOnly: true
                  street_2:
                    type: string
                    nullable: true
                    readOnly: true
                  city:
                    type: string
                    readOnly: true
                  state:
                    type: string
                    readOnly: true
                  zip:
                    type: string
                    readOnly: true
                  country:
                    type: string
                    readOnly: true
                readOnly: true
            readOnly: true
          primary_payroll_admin:
            type: object
            description: The primary payroll admin of the company.
            properties:
              first_name:
                type: string
                readOnly: true
              last_name:
                type: string
                readOnly: true
              phone:
                type: string
                readOnly: true
              email:
                type: string
                readOnly: true
        x-examples:
          Example:
            ein: 00-0000001
            entity_type: C-Corporation
            tier: complete
            is_suspended: false
            company_status: Approved
            name: Shoppe Studios LLC
            trade_name: Record Shoppe
            is_partner_managed: false
            pay_schedule_type: by_department
            locations:
              - street_1: 412 Kiera Stravenue
                street_2: Suite 391
                city: San Francisco
                state: CA
                zip: '94107'
                country: USA
                active: true
              - street_1: 644 Fay Vista
                street_2: Suite 842
                city: Richmond
                state: VA
                zip: '23218'
                country: USA
                active: true
            compensations:
              hourly:
                - name: Overtime
                  multiple: 1.5
                - name: Double overtime
                  multiple: 2
                - name: Regular
                  multiple: 1
                - name: Outstanding vacation
                  multiple: 1
                - name: Holiday
                  multiple: 1
                - name: Emergency sick - self care
                  multiple: 1
                - name: Emergency sick - caring for others
                  multiple: 1
                - name: FMLA Public Health Emergency Leave
                  multiple: 1
                - name: Regular Hours
                  multiple: 1
              fixed:
                - name: Bonus
                - name: Commission
                - name: Paycheck Tips
                - name: Cash Tips
                - name: Correction Payment
                - name: Severance
                - name: Minimum Wage Adjustment
                - name: Reimbursement
              paid_time_off:
                - name: Vacation Hours
                - name: Sick Hours
                - name: Holiday Hours
            primary_signatory:
              first_name: Alda
              middle_initial: ''
              last_name: Carter
              phone: null
              email: louie.hessel7757869450111547@zemlak.biz
              home_address:
                street_1: 524 Roob Divide
                street_2: Suite 565
                city: San Francisco
                state: CA
                zip: '94107'
                country: USA
            primary_payroll_admin:
              first_name: Ian
              last_name: Labadie
              phone: 1-565-710-7559
              email: louie.hessel7757869450111547@zemlak.biz
        x-tags:
          - Companies
      Company-Onboarding-Status:
        description: The representation of a company's onboarding status
        type: object
        title: ''
        x-examples:
          Example:
            uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
            onboarding_completed: false
            onboarding_steps:
              - title: Add Your Company's Addresses
                id: add_addresses
                required: true
                completed: true
                skippable: false
                requirements: []
              - title: Add Your Employees
                id: add_employees
                required: true
                completed: true
                skippable: true
                requirements:
                  - add_addresses
              - title: Enter Your Federal Tax Information
                id: federal_tax_setup
                required: true
                completed: true
                skippable: false
                requirements:
                  - add_addresses
                  - add_employees
              - title: Add Your Bank Account
                id: add_bank_info
                required: true
                completed: true
                skippable: false
                requirements: []
              - title: Select a Pay Schedule
                id: payroll_schedule
                required: true
                completed: false
                skippable: false
                requirements: []
              - title: Sign Documents
                id: sign_all_forms
                required: true
                completed: false
                skippable: false
                requirements:
                  - add_employees
                  - federal_tax_setup
                  - state_setup
                  - add_bank_info
                  - payroll_schedule
              - title: Verify Your Bank Account
                id: verify_bank_info
                required: true
                completed: false
                skippable: false
                requirements:
                  - add_bank_info
        x-tags:
          - Companies
        properties:
          uuid:
            type: string
            description: the UUID of the company
          onboarding_completed:
            type: boolean
            description: a boolean flag for the company's onboarding status
          onboarding_steps:
            type: array
            description: a list of company onboarding steps
            items:
              title: Onboarding step
              type: object
              properties:
                title:
                  type: string
                  description: The display name of the onboarding step
                id:
                  type: string
                  description: The string identifier for each onboarding step
                required:
                  type: boolean
                  description: >-
                    The boolean flag indicating whether the step is required or
                    optional
                completed:
                  type: boolean
                  description: >-
                    The boolean flag indicating whether the step is completed or
                    not.
                skippable:
                  type: boolean
                  description: >-
                    The boolean flag indicating whether the step can be skipped or
                    not.
                requirements:
                  type: array
                  description: >-
                    A list of onboarding step that are required to be completed in
                    order to proceed with the current onboarding step.
                  items:
                    type: string
          '':
            type: string
      Payment-Configs:
        title: Payment-Configs
        type: object
        properties:
          company_uuid:
            type: string
            description: Company uuid
            readOnly: true
          partner_uuid:
            type: string
            description: Partner uuid
            readOnly: true
          fast_payment_limit:
            type: string
            description: Payment limit for 1-day or 2-day payroll
            readOnly: true
          payment_speed:
            type: string
            description: Payment speed for 1-day, 2-day, 4-day
            readOnly: true
        x-examples:
          Example:
            company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
            partner_uuid: 556f05d0-48e0-4c47-bce5-db9aea923043
            fast_payment_limit: '5000'
            payment_speed: 2-day
        x-tags:
          - Payment Configs
      Contractor-Body:
        type: object
        properties:
          type:
            type: string
            description: The contractor type.
            default: Individual
            enum:
              - Individual
              - Business
          wage_type:
            type: string
            description: |
              The contractor’s wage type.
            enum:
              - Fixed
              - Hourly
          start_date:
            type: string
            description: |
              The day when the contractor will start working for the company.
            example: '2020-01-11'
          hourly_rate:
            type: string
            description: >-
              The contractor’s hourly rate. This attribute is required if the
              wage_type is `Hourly`.
            example: '40.0'
          self_onboarding:
            type: boolean
            default: false
            description: >-
              Whether the contractor or the payroll admin will complete onboarding
              in Gusto.

              Self-onboarding is recommended so that contractors receive Gusto
              accounts.

              If self_onboarding is true, then email is required.
          email:
            type: string
            description: The contractor’s email address.
          first_name:
            type: string
            description: >-
              The contractor’s first name.

              This attribute is required for `Individual` contractors and will be
              ignored for `Business` contractors.
          last_name:
            type: string
            description: >-
              The contractor’s last name.

              This attribute is required for `Individual` contractors and will be
              ignored for `Business` contractors.
          middle_initial:
            type: string
            description: >-
              The contractor’s middle initial.

              This attribute is optional for `Individual` contractors and will be
              ignored for `Business` contractors.
          file_new_hire_report:
            type: boolean
            default: false
            description: >-
              The boolean flag indicating whether Gusto will file a new hire
              report for the contractor.

              This attribute is optional for `Individual` contractors and will be
              ignored for `Business` contractors.
          work_state:
            type: string
            nullable: true
            description: >-
              State where the contractor will be conducting the majority of their
              work for the company.

              This value is used when generating the new hire report.

              This attribute is required for `Individual` contractors if
              `file_new_hire_report` is true and will be ignored for `Business`
              contractors.
          ssn:
            type: string
            pattern: '[0-9]{9}'
            description: >-
              This attribute is optional for `Individual` contractors and will be
              ignored for `Business` contractors.

              Social security number is needed to file the annual 1099 tax form.
          business_name:
            type: string
            description: >-
              The name of the contractor business. This attribute is required for
              `Business` contractors and will be ignored for `Individual`
              contractors.
          ein:
            type: string
            description: >-
              The employer identification number of the contractor business.

              This attribute is optional for `Business` contractors and will be
              ignored for `Individual` contractors.
          is_active:
            type: boolean
            description: The status of the contractor.
      Contractor:
        description: The representation of a contractor (individual or business) in Gusto.
        type: object
        properties:
          uuid:
            type: string
            description: The UUID of the contractor in Gusto.
            readOnly: true
          company_uuid:
            type: string
            description: The UUID of the company the contractor is employed by.
            readOnly: true
          wage_type:
            type: string
            enum:
              - Fixed
              - Hourly
            description: The contractor's wage type, either "Fixed" or "Hourly".
          is_active:
            type: boolean
            default: true
            description: The status of the contractor with the company.
            readOnly: true
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          type:
            type: string
            enum:
              - Individual
              - Business
            description: 'The contractor''s type, either "Individual" or "Business". '
          first_name:
            type: string
            nullable: true
            description: >-
              The contractor’s first name. This attribute is required for
              “Individual” contractors and will be ignored for “Business”
              contractors.
          last_name:
            type: string
            nullable: true
            description: >-
              The contractor’s last name. This attribute is required for
              “Individual” contractors and will be ignored for “Business”
              contractors.
          middle_initial:
            type: string
            nullable: true
            description: >-
              The contractor’s middle initial. This attribute is optional for
              “Individual” contractors and will be ignored for “Business”
              contractors.
          business_name:
            type: string
            nullable: true
            description: >-
              The name of the contractor business. This attribute is required for
              “Business” contractors and will be ignored for “Individual”
              contractors.
          ein:
            type: string
            nullable: true
            description: >-
              The Federal Employer Identification Number of the contractor
              business. This attribute is optional for “Business” contractors and
              will be ignored for “Individual” contractors.
          has_ein:
            type: boolean
            nullable: true
            description: Whether company's Employer Identification Number (EIN) is present
          email:
            type: string
            nullable: true
            description: >-
              The contractor’s email address. This attribute is optional for
              “Individual” contractors and will be ignored for “Business”
              contractors. 
          start_date:
            type: string
            description: The contractor's start date.
            readOnly: true
          address:
            type: object
            description: The contractor’s home address.
            properties:
              street_1:
                type: string
                readOnly: true
              street_2:
                type: string
                nullable: true
                readOnly: true
              city:
                type: string
                readOnly: true
              state:
                type: string
                readOnly: true
              zip:
                type: string
                readOnly: true
              country:
                type: string
                readOnly: true
            readOnly: true
          hourly_rate:
            type: string
            example: '50.0'
            description: >-
              The contractor’s hourly rate. This attribute is required if the
              wage_type is “Hourly”.
          file_new_hire_report:
            type: boolean
            default: false
            description: >-
              The boolean flag indicating whether Gusto will file a new hire
              report for the contractor
          work_state:
            type: string
            nullable: true
            description: >-
              State where the contractor will be conducting the majority of their
              work for the company.

              This value is used when generating the new hire report.
          onboarded:
            type: boolean
            description: The updated onboarding status for the contractor
          onboarding_status:
            type: string
            description: One of the "onboarding_status" enum values.
            enum:
              - onboarding_completed
              - admin_onboarding_review
              - admin_onboarding_incomplete
        x-tags:
          - Contractors
      Contractor-Onboarding-Status:
        description: The representation of an contractor's onboarding status.
        type: object
        title: Contractor-Onboarding-Status
        x-tags:
          - Contractor
        properties:
          uuid:
            type: string
            description: Unique identifier for this contractor.
          onboarding_status:
            type: string
            description: One of the "onboarding_status" enum values.
            enum:
              - onboarding_completed
              - admin_onboarding_review
              - admin_onboarding_incomplete
          onboarding_steps:
            type: array
            description: List of steps required to onboard a contractor.
            items:
              title: Onboarding step
              type: object
              properties:
                title:
                  type: string
                  description: User-friendly description of the onboarding step.
                id:
                  type: string
                  description: String identifier for the onboarding step.
                required:
                  type: boolean
                  description: When true, this step is required.
                completed:
                  type: boolean
                  description: When true, this step has been completed.
                requirements:
                  type: array
                  description: A list of onboarding steps required to begin this step.
                  items:
                    type: string
      Contractor-Payment:
        description: The representation of a single contractor payment.
        type: object
        x-examples:
          Example:
            uuid: 04552eb9-7829-4b18-ae96-6983552948df
            bonus: '20.0'
            date: '2020-10-19'
            hours: '40.0'
            payment_method: Direct Deposit
            reimbursement: '100.0'
            hourly_rate: '18.0'
            may_cancel: true
            status: Funded
            wage: '0.0'
            wage_type: Hourly
            wage_total: '740.00'
        title: Contractor Payment
        properties:
          uuid:
            type: string
            description: The unique identifier of the contractor payment in Gusto.
            readOnly: true
          contractor_uuid:
            type: string
            description: The UUID of the contractor.
            readOnly: true
          bonus:
            type: string
            description: The bonus amount in the payment.
            readOnly: true
          date:
            type: string
            description: The payment date.
            readOnly: true
          hours:
            type: string
            description: The number of hours worked for the payment.
            readOnly: true
          payment_method:
            type: string
            description: The payment method.
            enum:
              - Direct Deposit
              - Check
              - Historical Payment
              - Correction Payment
            readOnly: true
          reimbursement:
            type: string
            description: The reimbursement amount in the payment.
            readOnly: true
          status:
            type: string
            description: Contractor payment status
            enum:
              - Funded
              - Unfunded
          hourly_rate:
            type: string
            description: The rate per hour worked for the payment.
            readOnly: true
          may_cancel:
            type: boolean
            description: Determine if the contractor payment can be cancelled.
            readOnly: true
          wage:
            type: string
            description: The fixed wage of the payment, regardless of hours worked.
            readOnly: true
          wage_type:
            type: string
            description: The wage type for the payment.
            enum:
              - Hourly
              - Fixed
            readOnly: true
          wage_total:
            type: string
            description: (hours * hourly_rate) + wage + bonus
            readOnly: true
        x-tags:
          - Contractor Payments
      Contractor-Payment-Summary:
        description: >-
          The representation of the summary of contractor payments for a given
          company in a given time period.
        type: object
        x-examples:
          Example:
            total:
              reimbursements: '110.0'
              wages: '1840.0'
            contractor_payments:
              - contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                reimbursement_total: '110.0'
                wage_total: '1840.0'
                payments:
                  - uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    bonus: '20.0'
                    date: '2020-10-19'
                    hours: '40.0'
                    payment_method: Direct Deposit
                    reimbursement: '100.0'
                    hourly_rate: '18.0'
                    may_cancel: true
                    wage: '0.0'
                    wage_type: Hourly
                    wage_total: '740.00'
                  - uuid: 25cfeb96-17fc-4fdf-8941-57f3fb9eea00
                    contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    bonus: '100.0'
                    date: '2020-10-19'
                    hours: '0.00'
                    payment_method: Direct Deposit
                    reimbursement: '10.0'
                    hourly_rate: '0.0'
                    may_cancel: true
                    wage: '1000.0'
                    wage_type: Fixed
                    wage_total: '1100.0'
        properties:
          total:
            type: object
            description: >-
              The wage and reimbursement totals for all contractor payments within
              a given time period.
            properties:
              reimbursements:
                type: string
                description: >-
                  The total reimbursements for contractor payments within a given
                  time period.
                readOnly: true
              wages:
                type: string
                description: >-
                  The total wages for contractor payments within a given time
                  period.
                readOnly: true
            readOnly: true
          contractor_payments:
            type: array
            uniqueItems: false
            description: >-
              The individual contractor payments, within a given time period,
              grouped by contractor.
            items:
              type: object
              description: ''
              properties:
                contractor_uuid:
                  type: number
                  description: The UUID of the contractor.
                  readOnly: true
                reimbursement_total:
                  type: string
                  description: >-
                    The total reimbursements for the contractor within a given
                    time period.
                  readOnly: true
                wage_total:
                  type: string
                  description: The total wages for the contractor within a given time period.
                  readOnly: true
                payments:
                  type: array
                  uniqueItems: false
                  description: |
                    The contractor’s payments within a given time period.
                  items:
                    $ref: '#/components/schemas/Contractor-Payment'
                  readOnly: true
              readOnly: true
            readOnly: true
        x-tags:
          - Contractor Payments
      Contractor-Payment-Summary-By-Dates:
        description: >-
          The representation of the summary of contractor payments for a given
          company in a given time period.
        type: object
        x-examples:
          Example:
            total:
              reimbursements: '110.0'
              wages: '1840.0'
            contractor_payments:
              - check_date: '2020-10-19'
                reimbursement_total: '110.0'
                wage_total: '1840.0'
                payments:
                  - uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    bonus: '20.0'
                    date: '2020-10-19'
                    hours: '40.0'
                    payment_method: Direct Deposit
                    reimbursement: '100.0'
                    hourly_rate: '18.0'
                    wage: '0.0'
                    wage_type: Hourly
                    wage_total: '740.00'
                  - uuid: 25cfeb96-17fc-4fdf-8941-57f3fb9eea00
                    contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                    bonus: '100.0'
                    date: '2020-10-19'
                    hours: '0.00'
                    payment_method: Direct Deposit
                    reimbursement: '10.0'
                    hourly_rate: '0.0'
                    wage: '1000.0'
                    wage_type: Fixed
                    wage_total: '1100.0'
        properties:
          total:
            type: object
            description: >-
              The wage and reimbursement totals for all contractor payments within
              a given time period.
            properties:
              reimbursements:
                type: string
                description: >-
                  The total reimbursements for contractor payments within a given
                  time period.
                readOnly: true
              wages:
                type: string
                description: >-
                  The total wages for contractor payments within a given time
                  period.
                readOnly: true
            readOnly: true
          contractor_payments:
            type: array
            uniqueItems: false
            description: >-
              The individual contractor payments, within a given time period,
              grouped by check date.
            items:
              type: object
              description: ''
              properties:
                contractor_uuid:
                  type: string
                  description: The UUID of the contractor.
                  readOnly: true
                check_date:
                  type: string
                  description: The payment check date.
                  readOnly: true
                reimbursement_total:
                  type: string
                  description: >-
                    The total reimbursements for the contractor within a given
                    time period.
                  readOnly: true
                wage_total:
                  type: string
                  description: The total wages for the contractor within a given time period.
                  readOnly: true
                payments:
                  type: array
                  uniqueItems: false
                  description: |
                    The contractor’s payments within a given time period.
                  items:
                    $ref: '#/components/schemas/Contractor-Payment'
                  readOnly: true
              readOnly: true
            readOnly: true
        x-tags:
          - Contractor Payments
      Contractor-Payment-Method:
        title: Contractor-Payment-Method
        type: object
        x-examples:
          Example-1:
            value:
              version: 63859768485e218ccf8a449bb60f14ed
              type: Direct Deposit
              split_by: Percentage
              splits:
                - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                  name: BoA Checking Account
                  priority: 1
                  split_amount: 100
          Example-2:
            value:
              version: 63859768485e218ccf8a449bb60f14ed
              type: Check
        description: ''
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          type:
            type: string
            enum:
              - Direct Deposit
              - Check
            description: >-
              The payment method type. If type is Check, then split_by and splits
              do not need to be populated. If type is Direct Deposit, split_by and
              splits are required.
          split_by:
            type: string
            enum:
              - Amount
              - Percentage
            description: >-
              Describes how the payment will be split. If split_by is Percentage,
              then the split amounts must add up to exactly 100. If split_by is
              Amount, then the last split amount must be nil to capture the
              remainder.
            nullable: true
          splits:
            type: array
            nullable: true
            items:
              $ref: '#/components/schemas/Payment-Method-Bank-Account'
        x-tags:
          - Contractor Payment Method
      Payment-Method-Bank-Account:
        type: object
        description: Representation of a bank account item
        properties:
          uuid:
            type: string
            description: The bank account ID
          name:
            type: string
            description: The bank account name
          hidden_account_number:
            type: string
            description: Masked bank account number
          priority:
            type: integer
            description: >-
              The order of priority for each payment split, with priority 1 being
              the first bank account paid. Priority must be unique and sequential.
          split_amount:
            description: The cents amount allocated for each payment split
            type: integer
            nullable: true
      Time-Off-Request:
        title: Time-Off-Request
        type: object
        x-examples:
          Example:
            id: '1'
            status: approved
            employee_note: Vacation at Disney World!
            employer_note: But Universal has Harry Potter World...
            days:
              '2019-06-01': '4.000'
              '2019-06-02': '8.000'
              '2019-06-03': '2.000'
            request_type: vacation
            employee:
              id: '234567'
              full_name: Jessica Gusto
            approver:
              id: '345678'
              full_name: Karen Gusto
            initiator:
              id: '234567'
              full_name: Jessica Gusto
        description: 'The representation of a time off request. '
        x-tags:
          - Time Off Requests
        properties:
          id:
            type: integer
            description: The ID of the time off request.
            readOnly: true
          status:
            type: string
            description: The status of the time off request.
            enum:
              - pending
              - approved
              - denied
            readOnly: true
          employee_note:
            type: string
            description: >-
              A note about the time off request, from the employee to the
              employer.
            readOnly: true
          employer_note:
            type: string
            description: >-
              A note about the time off request, from the employer to the
              employee.
            readOnly: true
          request_type:
            type: string
            description: The type of time off request.
            enum:
              - vacation
              - sick
            readOnly: true
          days:
            description: >-
              An object that represents the days in the time off request. The keys
              of the object are the dates, formatted as a YYYY-MM-DD string. The
              values of the object are the number of hours requested off for each
              day, formatted as a string representation of a numeric decimal to
              the thousands place.
            type: object
            readOnly: true
          employee:
            type: object
            description: ''
            properties:
              id:
                type: string
                description: The ID of the employee the time off request is for.
                readOnly: true
              full_name:
                type: string
                description: The full name of the employee the time off request is for.
                readOnly: true
            readOnly: true
          initiator:
            type: object
            nullable: true
            description: ''
            properties:
              id:
                type: string
                description: The ID of the employee who initiated the time off request.
                readOnly: true
              full_name:
                type: string
                description: >-
                  The full name of the employee who initiated the time off
                  request.
                readOnly: true
            readOnly: true
          approver:
            type: object
            nullable: true
            description: This value will be null if the request has not been approved.
            properties:
              id:
                type: string
                description: The ID of the employee who approved the time off request.
                readOnly: true
              full_name:
                type: string
                description: The full name of the employee who approved the time off request.
                readOnly: true
            readOnly: true
      Unprocessable-Entity-Error-Object:
        description: >
          Unprocessable Entity
            
          This may happen when the body of your request contains errors such as
          `invalid_attribute_value`, or the request fails due to an
          `invalid_operation`. See the [Errors
          Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)
          guide for more details.
        type: object
        properties:
          errors:
            type: array
            items:
              type: object
              properties:
                error_key:
                  type: string
                  description: >-
                    Specifies where the error occurs. Typically this key
                    identifies the attribute/parameter related to the error.
                category:
                  type: string
                  description: >-
                    Specifies the type of error. The category provides error
                    groupings and can be used to build custom error handling in
                    your integration.
                message:
                  type: string
                  description: >-
                    Provides details about the error - generally this message can
                    be surfaced to an end user.
                metadata:
                  type: object
                  description: >-
                    Contains relevant data to identify the resource in question
                    when applicable. For example, to identify an entity
                    `entity_type` and `entity_uuid` will be provided.
      Payroll-Blockers-Error:
        description: >-
          Payroll Blockers Error


          For detailed information, see the [Payroll Blockers
          guide](https://docs.gusto.com/embedded-payroll/docs/payroll-blockers)
        type: object
        properties:
          errors:
            type: array
            items:
              type: object
              properties:
                error_key:
                  type: string
                  description: The string "base"
                category:
                  type: string
                  description: The string "payroll_blocker"
                message:
                  type: string
                  description: Human readable description of the payroll blocker
                metadata:
                  type: object
                  properties:
                    key:
                      type: string
                      description: >-
                        A categorization of the payroll blocker, e.g.
                        "geocode_error"
      Authentication:
        description: ''
        type: object
        properties:
          access_token:
            type: string
            description: >-
              A new access token that can be used for subsequent authenticated
              requests
          token_type:
            type: string
            default: bearer
            description: The literal string 'bearer'
          expires_in:
            type: number
            default: 7200
            description: >-
              The TTL of this token. After this amount of time, you must hit the
              refresh token endpoint to continue making authenticated requests.
          refresh_token:
            type: string
            description: >-
              A token that must be passed to the refresh token endpoint to get a
              new authenticated token.
          created_at:
            type: string
            description: Datetime for when the new access token is created.
          scope:
            type: string
            description: All of the scopes for which the access token provides access.
      Pay-Schedule:
        type: object
        title: Pay Schedule
        x-examples:
          Example:
            uuid: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
            frequency: Twice per month
            anchor_pay_date: '2020-05-15'
            anchor_end_of_pay_period: '2020-05-08'
            day_1: 15
            day_2: 31
            name: Engineering
            auto_pilot: false
            custom_name: A new monthly pay schedule
        description: The representation of a pay schedule.
        properties:
          uuid:
            type: string
            description: The unique identifier of the pay schedule in Gusto.
            readOnly: true
          frequency:
            type: string
            description: >-
              The frequency that employees on this pay schedule are paid with
              Gusto.
            enum:
              - Every week
              - Every other week
              - Twice per month
              - Monthly
              - Quarterly
              - Annually
            readOnly: true
          anchor_pay_date:
            type: string
            description: >-
              The first date that employees on this pay schedule are paid with
              Gusto.
            readOnly: true
          anchor_end_of_pay_period:
            type: string
            description: >-
              The last date of the first pay period. This can be the same date as
              the anchor pay date.
            readOnly: true
          day_1:
            type: integer
            nullable: true
            description: >-
              An integer between 1 and 31 indicating the first day of the month
              that employees are paid. This field is only relevant for pay
              schedules with the “Twice per month” and “Monthly” frequencies. It
              will be null for pay schedules with other frequencies.
            readOnly: true
          day_2:
            type: integer
            nullable: true
            description: >-
              An integer between 1 and 31 indicating the second day of the month
              that employees are paid. This field is the second pay date for pay
              schedules with the "Twice per month" frequency. For semi-monthly pay
              schedules, this field should be set to 31. For months shorter than
              31 days, we will set the second pay date to the last day of the
              month. It will be null for pay schedules with other frequencies.
            readOnly: true
          name:
            type: string
            nullable: true
            description: >-
              This field will be hourly when the pay schedule is for hourly
              employees, salaried when the pay schedule is for salaried employees,
              the department name if pay schedule is by department, and null when
              the pay schedule is for all employees.
            readOnly: true
          custom_name:
            type: string
            description: >-
              A custom name for a pay schedule, defaults to the pay frequency
              description.
            readOnly: true
          auto_pilot:
            type: boolean
            description: >-
              With Autopilot® enabled, payroll will run automatically one day
              before your payroll deadlines.
          active:
            type: boolean
            description: >-
              Whether this pay schedule is associated with any employees. A pay
              schedule is inactive when it's unassigned.
            readOnly: true
        x-tags:
          - Pay Schedules
      Company-Bank-Account:
        description: The company bank account
        type: object
        x-examples:
          Example:
            uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
            company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
            account_type: Checking
            routing_number: '851070439'
            hidden_account_number: XXXX4087
            verification_status: verified
            verification_type: bank_deposits
            name: Employer Funding Account
        x-tags:
          - Company Bank Accounts
        properties:
          uuid:
            type: string
            description: UUID of the bank account
          company_uuid:
            type: string
            description: UUID of the company
          account_type:
            type: string
            description: Bank account type
            enum:
              - Checking
              - Savings
          routing_number:
            type: string
            description: The bank account's routing number
          hidden_account_number:
            type: string
            description: Masked bank account number
          verification_status:
            type: string
            enum:
              - awaiting_deposits
              - ready_for_verification
              - verified
            description: >-
              The verification status of the bank account.


              'awaiting_deposits' means the bank account is just created and money
              is being transferred.

              'ready_for_verification' means the micro-deposits are completed and
              the verification process can begin by using the verify endpoint.

              'verified' means the bank account is verified.
          verification_type:
            type: string
            enum:
              - bank_deposits
              - plaid
              - plaid_external
            description: >-
              The verification type of the bank account.


              'bank_deposits' means the bank account is connected by entering
              routing and accounting numbers and verifying through micro-deposits.

              'plaid' means the bank account is connected through Plaid.
          plaid_status:
            type: string
            enum:
              - connected
              - disconnected
            description: >-
              The Plaid connection status of the bank account. Only applies when
              verification type is Plaid.
          last_cached_balance:
            type: string
            description: >-
              The last fetch balance for the bank account. Please be aware that
              this amount does not reflect the most up-to-date balance and only
              applies when the verification type is Plaid.
          balance_fetched_date:
            type: string
            description: >-
              The balance fetch date associated with the last_cached_balance. Only
              applies when verification type is Plaid.
          name:
            type: string
            description: Name of bank account
      Benefit-Type-Requirements:
        description: ''
        type: object
        x-tags:
          - Company Benefits
        properties:
          employee_deduction:
            type: object
            description: ''
            properties:
              required:
                type: boolean
              editable:
                type: boolean
              default_value:
                type: object
                properties:
                  value:
                    type: string
                  type:
                    type: string
              choices:
                type: array
                items:
                  type: string
          contribution:
            type: object
            description: ''
            properties:
              required:
                type: boolean
              editable:
                type: boolean
              default_value:
                type: object
                properties:
                  value:
                    type: string
                  type:
                    type: string
              choices:
                type: array
                items:
                  type: string
          deduct_as_percentage:
            type: object
            description: ''
            properties:
              required:
                type: boolean
              editable:
                type: boolean
              default_value:
                type: object
                properties:
                  value:
                    type: string
                  type:
                    type: string
              choices:
                type: array
                items:
                  type: string
          catch_up:
            type: object
            description: ''
            properties:
              required:
                type: boolean
              editable:
                type: boolean
              default_value:
                type: object
                properties:
                  value:
                    type: string
                  type:
                    type: string
              choices:
                type: array
                items:
                  type: string
          limit_option:
            type: object
            description: ''
            properties:
              required:
                type: boolean
              editable:
                type: boolean
              default_value:
                type: object
                properties:
                  value:
                    type: string
                  type:
                    type: string
              choices:
                type: array
                items:
                  type: string
          company_contribution_annual_maximum:
            type: object
            description: ''
            properties:
              required:
                type: boolean
              editable:
                type: boolean
              default_value:
                type: object
                properties:
                  value:
                    type: string
                  type:
                    type: string
              choices:
                type: array
                items:
                  type: string
          coverage_salary_multiplier:
            type: object
            description: ''
            properties:
              required:
                type: boolean
              editable:
                type: boolean
              default_value:
                type: object
                properties:
                  value:
                    type: string
                  type:
                    type: string
              choices:
                type: array
                items:
                  type: string
          coverage_amount:
            type: object
            description: ''
            properties:
              required:
                type: boolean
              editable:
                type: boolean
              default_value:
                type: object
                properties:
                  value:
                    type: string
                  type:
                    type: string
              choices:
                type: array
                items:
                  type: string
      Benefit-Summary:
        description: ''
        type: object
        x-tags:
          - Company Benefits
        properties:
          start_date:
            type: string
            description: The start date of benefit summary.
          end_date:
            type: string
            description: The end date of benefit summary.
          description:
            type: string
            description: Description of the benefit.
          company_benefit_deduction:
            type: string
            description: >-
              The aggregate of employee deduction for all employees given the
              period of time and benefit type.
          company_benefit_contribution:
            type: string
            description: >-
              The aggregate of company contribution for all employees given the
              period of time and benefit type.
          employees:
            type: object
            description: ''
            properties:
              uuid:
                type: string
                description: The UUID of the employee
              company_benefit_deduction:
                type: string
                description: >-
                  The aggregate of employee deduction for all employees given the
                  period of time and benefit type.
              company_benefit_contribution:
                type: string
                description: >-
                  The aggregate of company contribution for all employees given
                  the period of time and benefit type.
              benefit_deduction:
                type: string
                description: >-
                  Sum of employee benefit deduction given the period of time for
                  this specific employee.
              benefit_contribution:
                type: string
                description: >-
                  Sum of company contribution given the period of time for this
                  specific employee.
              gross_pay:
                type: string
                description: Gross pay of this pay check.
              payroll_benefits:
                type: object
                properties:
                  payroll_uuid:
                    type: string
                  payroll_type:
                    type: string
                    description: Whether it is regular or bonus payroll
                  check_date:
                    type: string
                  gross_pay:
                    type: string
                  company_benefit_deduction:
                    type: string
                  company_benefit_contribution:
                    type: string
                  pay_period:
                    type: object
                    properties:
                      start_date:
                        type: string
                      end_date:
                        type: string
      Supported-Benefit:
        description: ''
        type: object
        properties:
          benefit_type:
            type: number
            description: The benefit type in Gusto.
            readOnly: true
          name:
            type: string
            description: The name of the benefit.
            readOnly: true
          description:
            type: string
            description: The description of the benefit.
            readOnly: true
          pretax:
            type: boolean
            description: >-
              Whether the benefit is deducted before tax calculations, thus
              reducing one’s taxable income
            readOnly: true
          posttax:
            type: boolean
            description: Whether the benefit is deducted after tax calculations.
            readOnly: true
          imputed:
            type: boolean
            description: Whether the benefit is considered imputed income.
            readOnly: true
          healthcare:
            type: boolean
            description: Whether the benefit is healthcare related.
            readOnly: true
          retirement:
            type: boolean
            description: Whether the benefit is associated with retirement planning.
            readOnly: true
          yearly_limit:
            type: boolean
            description: Whether the benefit has a government mandated yearly limit.
            readOnly: true
          category:
            type: string
            description: Category where the benefit belongs to.
            readOnly: true
        x-examples:
          Example:
            benefit_type: 1
            name: Medical Insurance
            description: Deductions and contributions for Medical Insurance
            pretax: true
            posttax: false
            imputed: false
            healthcare: true
            retirement: false
            yearly_limit: false
            category: Health
      Company-Benefit-With-Employee-Benefits:
        description: The representation of a company benefit.
        type: object
        x-examples:
          Example:
            uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
            benefit_type: 1
            active: true
            description: Kaiser Permanente
            deletable: true
            supports_percentage_amounts: true
            responsible_for_employer_taxes: false
            responsible_for_employee_w2: false
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          uuid:
            type: string
            description: The UUID of the company benefit.
            readOnly: true
          benefit_type:
            type: number
            description: >-
              The type of the benefit to which the company benefit belongs (same
              as benefit_id).
            readOnly: true
          active:
            type: boolean
            default: true
            description: >-
              Whether this benefit is active for employee participation. Company
              benefits may only be deactivated if no employees are actively
              participating.
          description:
            type: string
            minLength: 1
            description: >-
              The description of the company benefit.For example, a company may
              offer multiple benefits with an ID of 1 (for Medical Insurance). The
              description would show something more specific like “Kaiser
              Permanente” or “Blue Cross/ Blue Shield”.
          deletable:
            type: boolean
            description: >-
              Whether this company benefit can be deleted. Deletable will be set
              to true if the benefit has not been used in payroll, has no employee
              benefits associated, and the benefit is not owned by Gusto or a
              Partner
          supports_percentage_amounts:
            type: boolean
            description: >-
              Whether employee deductions and company contributions can be set as
              percentages of payroll for an individual employee. This is
              determined by the type of benefit and is not configurable by the
              company.
            readOnly: true
          responsible_for_employer_taxes:
            type: boolean
            description: >-
              Whether the employer is subject to pay employer taxes when an
              employee is on leave. Only applicable to third party sick pay
              benefits.
          responsible_for_employee_w2:
            type: boolean
            description: >-
              Whether the employer is subject to file W-2 forms for an employee on
              leave. Only applicable to third party sick pay benefits.
          employee_benefits:
            type: array
            items:
              type: object
              properties:
                employee_uuid:
                  type: string
                  description: The UUID of the employee to which the benefit belongs.
                company_benefit_uuid:
                  type: string
                  description: The UUID of the company benefit.
                active:
                  type: boolean
                  default: true
                  description: Whether the employee benefit is active.
                deduct_as_percentage:
                  type: boolean
                  default: false
                  description: >-
                    Whether the employee deduction amount should be treated as a
                    percentage to be deducted from each payroll.
                employee_deduction:
                  type: string
                  default: '0.00'
                  description: >-
                    The amount to be deducted, per pay period, from the employee's
                    pay.
                company_contribution:
                  type: string
                  description: The value of the company contribution
                uuid:
                  type: string
                contribution:
                  type: object
                  description: >-
                    An object representing the type and value of the company
                    contribution.
                  properties:
                    type:
                      type: string
                      description: >-
                        The company contribution scheme.


                        "amount": The company contributes a fixed amount per
                        payroll. If elective is true, the contribution is
                        matching, dollar-for-dollar.


                        "percentage": The company contributes a percentage of the
                        payroll amount per payroll period. If elective is true,
                        the contribution is matching, dollar-for-dollar.


                        "tiered": The company contribution varies according to the
                        size of the employee deduction.
                    value:
                      description: >-
                        For the `amount` and `percentage` contribution types, the
                        value of the corresponding amount or percentage.


                        For the `tiered` contribution type, an array of tiers.
                      oneOf:
                        - type: string
                        - type: object
                          properties:
                            tiers:
                              type: array
                              description: ''
                              items:
                                type: object
                                description: A single tier of a tiered matching scheme.
                                properties:
                                  rate:
                                    type: string
                                    description: >-
                                      The percentage of employee deduction within
                                      this tier the company contribution will
                                      match.
                                  threshold:
                                    type: string
                                    description: >-
                                      The percentage threshold at which this tier
                                      ends (inclusive).


                                      For example, a value of "5" means the
                                      company contribution will match employee
                                      deductions from the previous tier's
                                      threshold up to and including 5% of payroll.


                                      If this is the first tier, a value of "5"
                                      means the company contribution will match
                                      employee deductions from 0% up to and
                                      including 5% of payroll.
                                  threshold_delta:
                                    type: string
                                    description: >-
                                      The step up difference between this tier's
                                      threshold and the previous tier's threshold.
                                      In the first tier, this is equivalent to
                                      threshold.
      Company-Benefit:
        description: The representation of a company benefit.
        type: object
        x-examples:
          Example:
            uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
            version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
            benefit_type: 1
            active: true
            description: Kaiser Permanente
            deletable: true
            supports_percentage_amounts: true
            responsible_for_employer_taxes: false
            responsible_for_employee_w2: false
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          uuid:
            type: string
            description: The UUID of the company benefit.
            readOnly: true
          benefit_type:
            type: number
            description: The type of the benefit to which the company benefit belongs.
            readOnly: true
          active:
            type: boolean
            default: true
            description: >-
              Whether this benefit is active for employee participation. Company
              benefits may only be deactivated if no employees are actively
              participating.
          description:
            type: string
            minLength: 1
            description: >-
              The description of the company benefit.For example, a company may
              offer multiple benefits with an ID of 1 (for Medical Insurance). The
              description would show something more specific like “Kaiser
              Permanente” or “Blue Cross/ Blue Shield”.
          deletable:
            type: boolean
            description: >-
              Whether this company benefit can be deleted. Deletable will be set
              to true if the benefit has not been used in payroll, has no employee
              benefits associated, and the benefit is not owned by Gusto or a
              Partner
          supports_percentage_amounts:
            type: boolean
            description: >-
              Whether employee deductions and company contributions can be set as
              percentages of payroll for an individual employee. This is
              determined by the type of benefit and is not configurable by the
              company.
            readOnly: true
          responsible_for_employer_taxes:
            type: boolean
            description: >-
              Whether the employer is subject to pay employer taxes when an
              employee is on leave. Only applicable to third party sick pay
              benefits.
          responsible_for_employee_w2:
            type: boolean
            description: >-
              Whether the employer is subject to file W-2 forms for an employee on
              leave. Only applicable to third party sick pay benefits.
      Earning-Type:
        description: ''
        type: object
        x-examples:
          Example:
            name: Cash Tips
            uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
        properties:
          name:
            type: string
            description: The name of the earning type.
          uuid:
            type: string
            description: The ID of the earning type.
            readOnly: true
        x-tags:
          - Earning Types
      Employee-Benefit:
        description: The representation of an employee benefit.
        type: object
        title: ''
        x-examples:
          Example:
            version: 09j3d29jqdpj92109j9j2d90dq
            employee_uuid: 73274962-63ce-4e5c-b689-1df8d4df09f4
            company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
            active: true
            uuid: e91ca856-a915-4339-9b18-29f9cd66b031
            employee_deduction: '100.00'
            company_contribution: '100.00'
            employee_deduction_annual_maximum: '200.00'
            company_contribution_annual_maximum: '200.00'
            limit_option: null
            retirement_loan_identifier: null
            deduct_as_percentage: false
            contribute_as_percentage: false
            catch_up: false
            coverage_amount: null
            deduction_reduces_taxable_income: null
            coverage_salary_multiplier: '0.00'
            contribution:
              type: amount
              value: '100.00'
            elective: false
          Tiered Example:
            version: 09j3d29jqdpj92109j9j2d90dq
            employee_uuid: 73274962-63ce-4e5c-b689-1df8d4df09f4
            company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
            active: true
            uuid: e91ca856-a915-4339-9b18-29f9cd66b031
            employee_deduction: '100.00'
            employee_deduction_annual_maximum: '200.00'
            company_contribution_annual_maximum: '200.00'
            limit_option: null
            deduct_as_percentage: false
            catch_up: false
            coverage_amount: null
            deduction_reduces_taxable_income: null
            coverage_salary_multiplier: '0.00'
            elective: true
            contribution:
              type: tiered
              value:
                tiers:
                  - rate: '100.0'
                    threshold: '2.0'
                    threshold_delta: '2.0'
                  - rate: '50.0'
                    threshold: '5.0'
                    threshold_delta: '3.0'
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          employee_uuid:
            type: string
            description: The UUID of the employee to which the benefit belongs.
            readOnly: true
          company_benefit_uuid:
            type: string
            description: The UUID of the company benefit.
            readOnly: true
          active:
            type: boolean
            default: true
            description: Whether the employee benefit is active.
          uuid:
            type: string
            description: The UUID of the employee benefit.
            readOnly: true
          employee_deduction:
            type: string
            default: '0.00'
            description: The amount to be deducted, per pay period, from the employee's pay.
          deduct_as_percentage:
            type: boolean
            default: false
            description: >-
              Whether the employee deduction amount should be treated as a
              percentage to be deducted from each payroll.
          employee_deduction_annual_maximum:
            type: string
            description: >-
              The maximum employee deduction amount per year. A null value
              signifies no limit.
            nullable: true
          contribution:
            type: object
            description: >-
              An object representing the type and value of the company
              contribution.
            properties:
              type:
                type: string
                description: >-
                  The company contribution scheme.


                  "amount": The company contributes a fixed amount per payroll. If
                  elective is true, the contribution is matching,
                  dollar-for-dollar.


                  "percentage": The company contributes a percentage of the
                  payroll amount per payroll period. If elective is true, the
                  contribution is matching, dollar-for-dollar.


                  "tiered": The company contribution varies according to the size
                  of the employee deduction.
              value:
                description: >-
                  For the `amount` and `percentage` contribution types, the value
                  of the corresponding amount or percentage.


                  For the `tiered` contribution type, an array of tiers.
                oneOf:
                  - type: string
                  - type: object
                    properties:
                      tiers:
                        type: array
                        description: ''
                        items:
                          type: object
                          description: A single tier of a tiered matching scheme.
                          properties:
                            rate:
                              type: string
                              description: >-
                                The percentage of employee deduction within this
                                tier the company contribution will match.
                            threshold:
                              type: string
                              description: >-
                                The percentage threshold at which this tier ends
                                (inclusive).


                                For example, a value of "5" means the company
                                contribution will match employee deductions from
                                the previous tier's threshold up to and including
                                5% of payroll.


                                If this is the first tier, a value of "5" means
                                the company contribution will match employee
                                deductions from 0% up to and including 5% of
                                payroll.
                            threshold_delta:
                              type: string
                              description: >-
                                The step up difference between this tier's
                                threshold and the previous tier's threshold. In
                                the first tier, this is equivalent to threshold.
          elective:
            type: boolean
            description: >-
              Whether the company contribution is elective (aka matching). For
              "tiered" contribution types, this is always true.
            default: false
          company_contribution_annual_maximum:
            type: string
            description: >-
              The maximum company contribution amount per year. A null value
              signifies no limit.
            nullable: true
          limit_option:
            type: string
            description: >-
              Some benefits require additional information to determine their
              limit. For example, for an HSA benefit, the limit option should be
              either "Family" or "Individual". For a Dependent Care FSA benefit,
              the limit option should be either "Joint Filing or Single" or
              "Married and Filing Separately".
            nullable: true
          catch_up:
            type: boolean
            default: false
            description: >-
              Whether the employee should use a benefit’s "catch up" rate. Only
              Roth 401k and 401k benefits use this value for employees over 50.
          retirement_loan_identifier:
            type: string
            description: Identifier for a 401(k) loan assigned by the 401(k) provider
          coverage_amount:
            type: string
            description: >-
              The amount that the employee is insured for. Note: company
              contribution cannot be present if coverage amount is set.
            nullable: true
          deduction_reduces_taxable_income:
            type: string
            default: unset
            enum:
              - unset
              - reduces_taxable_income
              - does_not_reduce_taxable_income
              - null
            description: >-
              Whether the employee deduction reduces taxable income or not. Only
              valid for Group Term Life benefits. Note: when the value is not
              "unset", coverage amount and coverage salary multiplier are ignored.
            nullable: true
          coverage_salary_multiplier:
            type: string
            default: '0.00'
            description: >-
              The coverage amount as a multiple of the employee’s salary. Only
              applicable for Group Term Life benefits. Note: cannot be set if
              coverage amount is also set.
          company_contribution:
            type: string
            default: '0.00'
            description: >-
              The amount to be paid, per pay period, by the company. This field
              will not appear for tiered contribution types.
            deprecated: true
          contribute_as_percentage:
            type: boolean
            default: false
            description: >-
              Whether the company_contribution value should be treated as a
              percentage to be added to each payroll. This field will not appear
              for tiered contribution types.
            deprecated: true
      Employee-Pay-Stub:
        description: The representation of an employee pay stub information.
        type: object
        properties:
          uuid:
            type: string
            description: The UUID of the employee pay stub.
            readOnly: true
          check_date:
            type: string
            description: The check date of the pay stub.
            readOnly: true
          gross_pay:
            type: string
            description: The gross pay amount for the pay stub.
            readOnly: true
          net_pay:
            type: string
            description: The net pay amount for the pay stub.
            readOnly: true
          payroll_uuid:
            type: string
            description: A unique identifier of the payroll to which the pay stub belongs.
            readOnly: true
          check_amount:
            type: string
            description: The check amount for the pay stub.
            readOnly: true
        x-tags:
          - Payrolls
      Pay-Period:
        description: The representation of a pay period.
        type: object
        properties:
          start_date:
            type: string
            description: The start date, inclusive, of the pay period.
            readOnly: true
          end_date:
            type: string
            minLength: 1
            description: The end date, inclusive, of the pay period.
          pay_schedule_uuid:
            type: string
            description: >-
              A unique identifier of the pay schedule to which the pay period
              belongs.
            readOnly: true
          payroll:
            type: object
            description: Information about the payroll for the pay period.
            properties:
              payroll_uuid:
                type: string
                readOnly: true
                description: The UUID of the payroll for this pay period.
              check_date:
                type: string
                description: >-
                  The date on which employees will be paid for the payroll if the
                  payroll is submitted on time.
                readOnly: true
              processed:
                type: boolean
                readOnly: true
                description: >-
                  Whether or not the payroll has been successfully processed. Note
                  that processed payrolls cannot be updated. Additionally, a
                  payroll is not guaranteed to be processed just because the
                  payroll deadline has passed. Late payrolls are not uncommon.
                  Conversely, users may choose to run payroll before the payroll
                  deadline.
              payroll_deadline:
                type: string
                format: date-time
                description: >-
                  The date by which payroll should be run for employees to be paid
                  on time. Payroll data, such as time and attendance data, should
                  be submitted on or before this date.
                readOnly: true
              payroll_type:
                type: string
                description: Whether it is regular pay period or transition pay period.
                enum:
                  - regular
                  - transition
                readOnly: true
            readOnly: true
        x-tags:
          - Payrolls
      Created-At-Type:
        type: string
        format: date-time
        description: Datetime for when the resource was created.
        readOnly: true
      Off-Cycle-Reason-Type:
        type: string
        description: The off-cycle reason. Only included for off-cycle payrolls.
        readOnly: true
        nullable: true
        enum:
          - Benefit reversal
          - Bonus
          - Correction
          - Dismissed employee
          - Hired employee
          - Wage correction
          - Tax reconciliation
          - Reversal
          - Disability insurance distribution
          - Transition from old pay schedule
      Payroll-Employee-Compensations-Type:
        type: array
        uniqueItems: false
        items:
          type: object
          properties:
            employee_uuid:
              type: string
              description: The UUID of the employee.
              readOnly: true
            excluded:
              type: boolean
              description: >-
                This employee will be excluded from payroll calculation and will
                not be paid for the payroll. Cancelling a payroll would reset all
                employees' excluded back to false.
              readOnly: true
            version:
              type: string
              description: >-
                The current version of this employee compensation. This field is
                only available for prepared payrolls. See the [versioning
                guide](https://docs.gusto.com/embedded-payroll/docs/idempotency)
                for information on how to use this field.
            gross_pay:
              type: string
              description: >-
                The employee's gross pay, equal to regular wages + cash tips +
                payroll tips + any other additional earnings, excluding imputed
                income. This value is only available for processed payrolls.
              nullable: true
              readOnly: true
            net_pay:
              type: string
              description: >-
                The employee's net pay, equal to gross_pay - employee taxes -
                employee deductions or garnishments - cash tips. This value is
                only available for processed payrolls.
              nullable: true
              readOnly: true
            check_amount:
              type: string
              description: >-
                The employee's check amount, equal to net_pay + reimbursements.
                This value is only available for processed payrolls.
              nullable: true
              readOnly: true
            payment_method:
              type: string
              description: The employee's compensation payment method.
              enum:
                - Check
                - Direct Deposit
              nullable: true
            memo:
              type: string
              description: >-
                Custom text that will be printed as a personal note to the
                employee on a paystub.
              nullable: true
              readOnly: true
            fixed_compensations:
              type: array
              uniqueItems: false
              description: >-
                An array of fixed compensations for the employee. Fixed
                compensations include tips, bonuses, and one time reimbursements.
                If this payroll has been processed, only fixed compensations with
                a value greater than 0.00 are returned. For an unprocessed
                payroll, all active fixed compensations are returned.
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      The name of the compensation. This also serves as the
                      unique, immutable identifier for this compensation.
                  amount:
                    type: string
                    description: The amount of the compensation for the pay period.
                  job_uuid:
                    type: string
                    description: The UUID of the job for the compensation.
                    readOnly: true
            hourly_compensations:
              type: array
              uniqueItems: false
              description: >-
                An array of hourly compensations for the employee. Hourly
                compensations include regular, overtime, and double overtime
                hours. If this payroll has been processed, only hourly
                compensations with a value greater than 0.00 are returned. For an
                unprocessed payroll, all active hourly compensations are returned.
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      The name of the compensation. This also serves as the
                      unique, immutable identifier for this compensation.
                  hours:
                    type: string
                    description: The number of hours to be compensated for this pay period.
                  amount:
                    type: string
                    description: >-
                      The amount of the compensation. This field is only available
                      after the payroll is calculated and cannot be used for
                      updating hourly compensations.
                  job_uuid:
                    type: string
                    description: The UUID of the job for the compensation.
                    readOnly: true
                  compensation_multiplier:
                    type: number
                    description: >-
                      The amount multiplied by the base rate to calculate total
                      compensation per hour worked.
                    readOnly: true
            paid_time_off:
              type: array
              uniqueItems: false
              description: >-
                An array of all paid time off the employee is eligible for this
                pay period.
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: >-
                      The name of the PTO. This also serves as the unique,
                      immutable identifier for the PTO.
                  hours:
                    type: string
                    description: The hours of this PTO taken during the pay period.
                  final_payout_unused_hours_input:
                    type: string
                    description: >-
                      The outstanding hours paid upon termination. This field is
                      only applicable for termination payrolls.
            benefits:
              type: array
              uniqueItems: false
              description: >-
                An array of employee benefits for the pay period. Benefits are
                only included for processed payroll when the include parameter is
                present.
              items:
                type: object
                properties:
                  name:
                    type: string
                    readOnly: true
                  employee_deduction:
                    type: string
                    readOnly: true
                  company_contribution:
                    type: string
                    readOnly: true
                  imputed:
                    type: boolean
                readOnly: true
              readOnly: true
            deductions:
              type: array
              uniqueItems: false
              description: >-
                An array of employee deductions for the pay period. Deductions are
                only included for processed payroll when the include parameter is
                present.
              items:
                type: object
                properties:
                  name:
                    type: string
                    readOnly: true
                  amount:
                    type: string
                    readOnly: true
                readOnly: true
              readOnly: true
            taxes:
              type: array
              uniqueItems: false
              description: >-
                An array of employer and employee taxes for the pay period. Only
                included for processed or calculated payrolls when `taxes` is
                present in the `include` parameter.
              items:
                type: object
                properties:
                  name:
                    type: string
                    minLength: 1
                  employer:
                    type: boolean
                  amount:
                    type: string
                    minLength: 1
                required:
                  - name
                  - employer
                  - amount
                readOnly: true
              readOnly: true
      Payroll-Totals-Type:
        type: object
        description: The subtotals for the payroll.
        properties:
          company_debit:
            type: string
            description: The total company debit for the payroll.
            readOnly: true
          net_pay_debit:
            type: string
            minLength: 1
            description: The total company net pay for the payroll.
          tax_debit:
            type: string
            description: The total tax debit for the payroll.
            readOnly: true
          reimbursement_debit:
            type: string
            description: The total reimbursement debit for the payroll.
            readOnly: true
          child_support_debit:
            type: string
            description: The total child support debit for the payroll.
            readOnly: true
          reimbursements:
            type: string
            description: The total reimbursements for the payroll.
            readOnly: true
          net_pay:
            type: string
            description: The net pay amount for the payroll.
            readOnly: true
          gross_pay:
            type: string
            description: The gross pay amount for the payroll.
            readOnly: true
          employee_bonuses:
            type: string
            description: The total employee bonuses amount for the payroll.
            readOnly: true
          employee_commissions:
            type: string
            description: The total employee commissions amount for the payroll.
            readOnly: true
          employee_cash_tips:
            type: string
            description: The total employee cash tips amount for the payroll.
            readOnly: true
          employee_paycheck_tips:
            type: string
            description: The total employee paycheck tips amount for the payroll.
            readOnly: true
          additional_earnings:
            type: string
            description: The total additional earnings amount for the payroll.
            readOnly: true
          owners_draw:
            type: string
            description: The total owner's draw for the payroll.
            readOnly: true
          check_amount:
            type: string
            description: The total check amount for the payroll.
            readOnly: true
          employer_taxes:
            type: string
            description: The total amount of employer paid taxes for the payroll.
            readOnly: true
          employee_taxes:
            type: string
            description: The total amount of employee paid taxes for the payroll.
            readOnly: true
          benefits:
            type: string
            description: The total amount of company contributed benefits for the payroll.
            readOnly: true
          employee_benefits_deductions:
            type: string
            description: The total amount of employee deducted benefits for the payroll.
            readOnly: true
          deferred_payroll_taxes:
            type: string
            description: >-
              The total amount of payroll taxes deferred for the payroll, such as
              allowed by the CARES act.
            readOnly: true
          other_deductions:
            type: string
            description: The total amount of deductions for the payroll.
        readOnly: true
      Payroll-Company-Taxes-Type:
        type: array
        uniqueItems: false
        description: >-
          An array of taxes applicable to this payroll in addition to taxes
          included in `employee_compensations`. Only included for processed or
          calculated payrolls when `taxes` is present in the `include` parameter.
        items:
          type: object
          properties:
            name:
              type: string
              description: The tax name
            employer:
              type: boolean
              description: Whether this tax is an employer or employee tax
            amount:
              type: string
              description: The amount of this tax for the payroll
      Payroll-Payment-Speed-Changed-Type:
        type: object
        description: >-
          Only applicable when a payroll is moved to four day processing instead
          of fast ach.
        properties:
          original_check_date:
            type: string
            description: Original check date when fast ach applies.
            readOnly: true
          current_check_date:
            type: string
            description: Current check date.
            readOnly: true
          original_debit_date:
            type: number
            description: Original debit date when fast ach applies.
            readOnly: true
          current_debit_date:
            type: string
            description: Current debit date.
            readOnly: true
          reason:
            type: string
            description: The reason why the payroll is moved to four day.
            readOnly: true
      Payroll-Payroll-Status-Meta-Type:
        type: object
        description: Information about the payroll's status and expected dates
        properties:
          cancellable:
            type: boolean
            description: true if the payroll may be cancelled
            readOnly: true
          expected_check_date:
            type: string
            description: The date an employee will be paid if the payroll is submitted now
            readOnly: true
          initial_check_date:
            type: string
            description: The normal check date for the associated pay period
            readOnly: true
          expected_debit_time:
            type: string
            description: >-
              The time the employer's account will be debited if the payroll is
              submitted now
            readOnly: true
          payroll_late:
            type: boolean
            description: expected_check_date > initial_check_date
            readOnly: true
          initial_debit_cutoff_time:
            type: string
            description: >-
              Payroll must be submitted at or before this time to avoid late
              payroll
            readOnly: true
      Payroll-Pay-Period-Type:
        type: object
        properties:
          start_date:
            type: string
            description: The start date, inclusive, of the pay period.
            readOnly: true
          end_date:
            type: string
            description: The start date, inclusive, of the pay period.
            readOnly: true
          pay_schedule_uuid:
            type: string
            description: The UUID of the pay schedule for the payroll.
            readOnly: true
            nullable: true
        readOnly: true
      Payroll-Withholding-Pay-Period-Type:
        type: string
        description: >-
          The payment schedule tax rate the payroll is based on. Only included for
          off-cycle payrolls.
        readOnly: true
        nullable: false
        enum:
          - Every week
          - Every other week
          - Twice per month
          - Monthly
          - Quarterly
          - Semiannually
          - Annually
      Payroll-Deadline-Type:
        type: string
        format: date-time
        description: >-
          A timestamp that is the deadline for the payroll to be run in order for
          employees to be paid on time.
        readOnly: true
      Payroll-Check-Date-Type:
        type: string
        description: The date on which employees will be paid for the payroll.
        readOnly: true
      Payroll-Processed-Type:
        type: boolean
        description: >-
          Whether or not the payroll has been successfully processed. Note that
          processed payrolls cannot be updated. Additionally, a payroll is not
          guaranteed to be processed just because the payroll deadline has passed.
          Late payrolls are not uncommon. Conversely, users may choose to run
          payroll before the payroll deadline.
        readOnly: true
      Payroll-Processed-Date-Type:
        type: string
        description: >-
          The date at which the payroll was processed. Null if the payroll isn't
          processed yet.
        readOnly: true
      Payroll-Calculated-At-Type:
        type: string
        description: >-
          A timestamp of the last valid payroll calculation. Null is there isn't a
          valid calculation.
        readOnly: true
      Payroll-Payroll-Uuid-Type:
        type: string
        description: The UUID of the payroll.
        readOnly: true
      Payroll-Company-Uuid-Type:
        type: string
        description: The UUID of the company for the payroll.
        readOnly: true
      Payroll-Off-Cycle-Type:
        type: boolean
        description: Indicates whether the payroll is an off-cycle payroll
        readOnly: true
      Payroll-External-Type:
        type: boolean
        description: Indicates whether the payroll is an external payroll
        readOnly: true
      Payroll-Final-Termination-Payroll-Type:
        type: boolean
        description: >-
          Indicates whether the payroll is the final payroll for a terminated
          employee. Only included for off-cycle payrolls.
        readOnly: true
      Payroll-Skip-Regular-Deductions-Type:
        type: boolean
        description: >-
          Block regular deductions and contributions for this payroll.  Only
          included for off-cycle payrolls.
        readOnly: true
        nullable: false
      Payroll-Fixed-Withholding-Rate-Type:
        type: boolean
        description: >-
          Enable taxes to be withheld at the IRS's required rate of 22% for
          federal income taxes. State income taxes will be taxed at the state's
          supplemental tax rate. Otherwise, we'll sum the entirety of the
          employee's wages and withhold taxes on the entire amount at the rate for
          regular wages. Only included for off-cycle payrolls.
        readOnly: true
        nullable: false
      Payroll-Fixed-Compensation-Types-Type:
        type: array
        items:
          type: object
          readOnly: true
          properties:
            name:
              description: The name of an available type of fixed compensation.
              type: string
              readOnly: true
      Payroll:
        description: ''
        type: object
        x-tags:
          - Payrolls
        properties:
          payroll_deadline:
            $ref: '#/components/schemas/Payroll-Deadline-Type'
          check_date:
            $ref: '#/components/schemas/Payroll-Check-Date-Type'
          processed:
            $ref: '#/components/schemas/Payroll-Processed-Type'
          processed_date:
            $ref: '#/components/schemas/Payroll-Processed-Date-Type'
          calculated_at:
            $ref: '#/components/schemas/Payroll-Calculated-At-Type'
          payroll_uuid:
            $ref: '#/components/schemas/Payroll-Payroll-Uuid-Type'
          company_uuid:
            $ref: '#/components/schemas/Payroll-Company-Uuid-Type'
          off_cycle:
            $ref: '#/components/schemas/Payroll-Off-Cycle-Type'
          off_cycle_reason:
            $ref: '#/components/schemas/Off-Cycle-Reason-Type'
          external:
            $ref: '#/components/schemas/Payroll-External-Type'
          final_termination_payroll:
            $ref: '#/components/schemas/Payroll-Final-Termination-Payroll-Type'
          withholding_pay_period:
            $ref: '#/components/schemas/Payroll-Withholding-Pay-Period-Type'
          skip_regular_deductions:
            $ref: '#/components/schemas/Payroll-Skip-Regular-Deductions-Type'
          fixed_withholding_rate:
            $ref: '#/components/schemas/Payroll-Fixed-Withholding-Rate-Type'
          pay_period:
            $ref: '#/components/schemas/Payroll-Pay-Period-Type'
          payroll_status_meta:
            $ref: '#/components/schemas/Payroll-Payroll-Status-Meta-Type'
          totals:
            $ref: '#/components/schemas/Payroll-Totals-Type'
          employee_compensations:
            $ref: '#/components/schemas/Payroll-Employee-Compensations-Type'
          company_taxes:
            $ref: '#/components/schemas/Payroll-Company-Taxes-Type'
          payment_speed_changed:
            $ref: '#/components/schemas/Payroll-Payment-Speed-Changed-Type'
          created_at:
            $ref: '#/components/schemas/Created-At-Type'
      Payroll-Prepared:
        description: ''
        type: object
        x-tags:
          - Payrolls
        properties:
          payroll_deadline:
            $ref: '#/components/schemas/Payroll-Deadline-Type'
          check_date:
            $ref: '#/components/schemas/Payroll-Check-Date-Type'
          processed:
            $ref: '#/components/schemas/Payroll-Processed-Type'
          processed_date:
            $ref: '#/components/schemas/Payroll-Processed-Date-Type'
          calculated_at:
            $ref: '#/components/schemas/Payroll-Calculated-At-Type'
          payroll_uuid:
            $ref: '#/components/schemas/Payroll-Payroll-Uuid-Type'
          company_uuid:
            $ref: '#/components/schemas/Payroll-Company-Uuid-Type'
          off_cycle:
            $ref: '#/components/schemas/Payroll-Off-Cycle-Type'
          off_cycle_reason:
            $ref: '#/components/schemas/Off-Cycle-Reason-Type'
          external:
            $ref: '#/components/schemas/Payroll-External-Type'
          final_termination_payroll:
            $ref: '#/components/schemas/Payroll-Final-Termination-Payroll-Type'
          withholding_pay_period:
            $ref: '#/components/schemas/Payroll-Withholding-Pay-Period-Type'
          skip_regular_deductions:
            $ref: '#/components/schemas/Payroll-Skip-Regular-Deductions-Type'
          fixed_withholding_rate:
            $ref: '#/components/schemas/Payroll-Fixed-Withholding-Rate-Type'
          pay_period:
            $ref: '#/components/schemas/Payroll-Pay-Period-Type'
          payroll_status_meta:
            $ref: '#/components/schemas/Payroll-Payroll-Status-Meta-Type'
          employee_compensations:
            $ref: '#/components/schemas/Payroll-Employee-Compensations-Type'
          payment_speed_changed:
            $ref: '#/components/schemas/Payroll-Payment-Speed-Changed-Type'
          created_at:
            $ref: '#/components/schemas/Created-At-Type'
          fixed_compensation_types:
            $ref: '#/components/schemas/Payroll-Fixed-Compensation-Types-Type'
      Payroll-Minimal:
        description: ''
        type: object
        x-tags:
          - Payrolls
        properties:
          payroll_deadline:
            $ref: '#/components/schemas/Payroll-Deadline-Type'
          check_date:
            $ref: '#/components/schemas/Payroll-Check-Date-Type'
          processed:
            $ref: '#/components/schemas/Payroll-Processed-Type'
          processed_date:
            $ref: '#/components/schemas/Payroll-Processed-Date-Type'
          calculated_at:
            $ref: '#/components/schemas/Payroll-Calculated-At-Type'
          payroll_uuid:
            $ref: '#/components/schemas/Payroll-Payroll-Uuid-Type'
          company_uuid:
            $ref: '#/components/schemas/Payroll-Company-Uuid-Type'
          off_cycle:
            $ref: '#/components/schemas/Payroll-Off-Cycle-Type'
          off_cycle_reason:
            $ref: '#/components/schemas/Off-Cycle-Reason-Type'
          external:
            $ref: '#/components/schemas/Payroll-External-Type'
          final_termination_payroll:
            $ref: '#/components/schemas/Payroll-Final-Termination-Payroll-Type'
          withholding_pay_period:
            $ref: '#/components/schemas/Payroll-Withholding-Pay-Period-Type'
          skip_regular_deductions:
            $ref: '#/components/schemas/Payroll-Skip-Regular-Deductions-Type'
          fixed_withholding_rate:
            $ref: '#/components/schemas/Payroll-Fixed-Withholding-Rate-Type'
          pay_period:
            $ref: '#/components/schemas/Payroll-Pay-Period-Type'
          payroll_status_meta:
            $ref: '#/components/schemas/Payroll-Payroll-Status-Meta-Type'
          totals:
            $ref: '#/components/schemas/Payroll-Totals-Type'
          payment_speed_changed:
            $ref: '#/components/schemas/Payroll-Payment-Speed-Changed-Type'
          created_at:
            $ref: '#/components/schemas/Created-At-Type'
      Payroll-Blocker:
        type: object
        properties:
          key:
            type: string
            description: The unique identifier of the reason
          message:
            type: string
            description: User-friendly message describing the payroll blocker.
      Payroll-Check:
        type: object
        properties:
          payroll_uuid:
            type: string
            description: A unique identifier of the payroll.
          printing_format:
            type: string
            description: The format the checks will be printed.
          starting_check_number:
            type: string
            description: The starting check number for the checks being printed.
          request_uuid:
            type: string
            description: A unique identifier of the Generated Document request
          status:
            type: string
            description: Current status of the Generated Document
        x-examples:
          example-1:
            payroll_uuid: a83d0bd8-7d20-43b9-834c-6d514ef6cb20
            printing_format: top
            starting_check_number: '10'
            request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
            status: pending
      Generated-Document:
        type: object
        properties:
          request_uuid:
            type: string
            description: A unique identifier of the Generated Document request
          status:
            type: string
            description: Current status of the Generated Document
          document_urls:
            type: array
            description: The array of urls to access the documents.
            items:
              type: string
        x-examples:
          example-1:
            status: succeeded
            document_urls:
              - https://document.url.com
            request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
      Payroll-Receipt:
        type: object
        properties:
          payroll_uuid:
            type: string
            description: A unique identifier of the payroll receipt.
          company_uuid:
            type: string
            description: A unique identifier of the company for the payroll.
          name_of_sender:
            type: string
            description: The name of the company by whom the payroll was paid
          name_of_recipient:
            type: string
            description: Always the fixed string "Payroll Recipients"
          recipient_notice:
            type: string
            description: >-
              Always the fixed string "Payroll recipients include the employees
              listed below plus the tax agencies for the taxes listed below."
          debit_date:
            type: string
            description: The debit or funding date for the payroll
          license:
            type: string
            description: >-
              Always the fixed string "ZenPayroll, Inc., dba Gusto is a licensed
              money transmitter. For more about Gusto’s licenses and your
              state-specific rights to request information, submit complaints,
              dispute errors, or cancel transactions, visit our license page."
          license_uri:
            type: string
            description: >-
              URL for the license information for the licensed payroll processor.
              Always the fixed string "https://gusto.com/about/licenses"
          right_to_refund:
            type: string
            description: ''
          liability_of_licensee:
            type: string
            description: ''
          totals:
            type: object
            description: The subtotals for the payroll.
            properties:
              company_debit:
                type: string
                description: The total company debit for the payroll.
              net_pay_debit:
                type: string
                description: The total company net pay for the payroll.
              child_support_debit:
                type: string
                description: The total child support debit for the payroll.
              reimbursement_debit:
                type: string
                description: The total reimbursements for the payroll.
              tax_debit:
                type: string
                description: The total tax debit for the payroll.
          taxes:
            type: array
            description: An array of totaled employer and employee taxes for the pay period.
            items:
              type: object
              properties:
                name:
                  type: string
                  description: The amount paid for this tax.
                amount:
                  type: string
                  description: >-
                    The total amount paid by both employer and employee for this
                    tax.
          employee_compensations:
            type: array
            description: An array of employee compensations and withholdings for this payroll
            items:
              type: object
              properties:
                employee_uuid:
                  type: string
                  description: The UUID of the employee.
                employee_first_name:
                  type: string
                  description: The first name of the employee.
                employee_last_name:
                  type: string
                  description: The last name of the employee.
                payment_method:
                  type: string
                  description: >-
                    The employee's compensation payment method.\n\n`Check` `Direct
                    Deposit`
                net_pay:
                  type: string
                  description: >-
                    The employee's net pay. Net pay paid by check is available for
                    reference but is not included in the
                    `["totals"]["net_pay_debit"]` amount.
                total_tax:
                  type: string
                  description: The total of employer and employee taxes for the pay period.
                total_garnishments:
                  type: string
                  description: The total garnishments for the pay period.
                child_support_garnishment:
                  type: string
                  description: The total child support garnishment for the pay period.
                total_reimbursement:
                  type: string
                  description: The total reimbursement for the pay period.
          licensee:
            type: object
            description: The licensed payroll processor
            properties:
              name:
                type: string
                description: Always the fixed string "Gusto, Zenpayroll Inc."
              address:
                type: string
                description: Always the fixed string "525 20th St"
              city:
                type: string
                description: Always the fixed string "San Francisco"
              state:
                type: string
                description: Always the fixed string "CA"
              postal_code:
                type: string
                description: Always the fixed string "94107"
              phone_number:
                type: string
                description: Always the fixed string "4157778888"
        x-examples:
          example-1:
            totals:
              company_debit: '1080.47'
              net_pay_debit: '748.34'
              child_support_debit: '100.0'
              reimbursement_debit: '50.0'
              tax: '182.13'
            taxes:
              - name: Federal Income Tax
                amount: '30.36'
              - name: Social Security
                amount: '104.54'
              - name: Medicare
                amount: '24.46'
              - name: Additional Medicare
                amount: '0.0'
              - name: TX SUTA
                amount: '22.77'
              - name: FUTA
                amount: '0.0'
            employee_compensations:
              - employee_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
                employee_first_name: Patricia
                employee_last_name: Hamill
                payment_method: Direct Deposit
                net_pay: '748.34'
                total_tax: '182.13'
                total_garnishments: '0.0'
                child_support_garnishment: '100.0'
                total_reimbursement: '50.0'
            licensee:
              name: Gusto, Zenpayroll Inc.
              address: 525 20th St
              city: San Francisco
              state: CA
              postal_code: '94107'
              phone_number: '4157778888'
            payroll_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
            company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
            name_of_sender: Torp and Sons and Sons
            name_of_recipient: Payroll Recipients
            recipient_notice: >-
              Payroll recipients include the employees listed below plus the tax
              agencies for the taxes listed below.
            debit_date: '2022-06-02'
            license: >-
              ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For
              more about Gusto’s licenses and your state-specific rights to
              request information, submit complaints, dispute errors, or cancel
              transactions, visit our license page.
            license_uri: https://gusto.com/about/licenses
            right_to_refund: https://gusto.com/about/licenses
            liability_of_licensee: https://gusto.com/about/licenses
      Payroll-Reversal:
        type: object
        properties:
          reversed_payroll_uuid:
            type: string
            description: The UUID for the payroll run being reversed.
          reversal_payroll_uuid:
            type: string
            description: The UUID of the payroll where the reversal was applied.
          reason:
            type: string
            description: A reason provided by the admin who created the reversal.
          approved_at:
            type: string
            description: Timestamp of when the reversal was approved.
            nullable: true
          category:
            type: string
            description: Category chosen by the admin who requested the reversal.
            items:
              type: integer
          reversed_employee_uuids:
            type: array
            description: Array of affected employee UUIDs.
            items:
              type: string
      Gross-Up-Pay:
        type: object
        properties:
          gross_up:
            type: string
            description: Gross up earnings.
      Contractor-Payment-Receipt:
        type: object
        x-examples:
          example-1:
            contractor_payment_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
            company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
            name_of_sender: Torp and Sons and Sons
            name_of_recipient: Patricia Hamill
            debit_date: '2022-06-02'
            totals:
              company_debit: '748.34'
            contractor_payments:
              - contractor_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
                contractor_first_name: Patricia
                contractor_last_name: Hamill
                contractor_business_name: ''
                contractor_type: Individual
                payment_method: Direct Deposit
                wage: '448.34'
                bonus: '248.00'
                reimbursement: '100.00'
            licensee:
              name: Gusto, Zenpayroll Inc.
              address: 525 20th St
              city: San Francisco
              state: CA
              postal_code: '94107'
              phone_number: '4157778888'
            license: >-
              ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For
              more about Gusto’s licenses and your state-specific rights to
              request information, submit complaints, dispute errors, or cancel
              transactions, visit our license page.
            license_uri: https://gusto.com/about/licenses
            right_to_refund: https://gusto.com/about/licenses
            liability_of_licensee: https://gusto.com/about/licenses
        properties:
          contractor_payment_uuid:
            type: string
            description: A unique identifier of the contractor payment receipt.
          company_uuid:
            type: string
            description: A unique identifier of the company making the contractor payment.
          name_of_sender:
            type: string
            description: The name of the company making the contractor payment.
          name_of_recipient:
            type: string
            description: The individual or company name of the contractor receiving payment.
          debit_date:
            type: string
            description: The debit date for the contractor payment.
            format: date
            example: '2022-05-30'
          license:
            type: string
            description: >-
              Always the fixed string "ZenPayroll, Inc., dba Gusto is a licensed
              money transmitter. For more about Gusto’s licenses and your
              state-specific rights to request information, submit complaints,
              dispute errors, or cancel transactions, visit our license page."
          license_uri:
            type: string
            description: >-
              URL for the license information for the licensed payroll processor.
              Always the fixed string "https://gusto.com/about/licenses"
          right_to_refund:
            type: string
            description: >-
              URL for information related to right to refund. Always the fixed
              string "https://gusto.com/about/licenses"
          liability_of_licensee:
            type: string
            description: >-
              URL for information related to right to liability of licensee.
              Always the fixed string "https://gusto.com/about/licenses"
          totals:
            type: object
            description: The subtotals for the contractor payment.
            properties:
              company_debit:
                type: string
                description: The total company debit for the contractor payment.
          contractor_payments:
            type: array
            description: An array of contractor payments for this contractor payment.
            items:
              type: object
              properties:
                contractor_uuid:
                  type: string
                  description: The UUID of the contractor.
                contractor_first_name:
                  type: string
                  description: >-
                    The first name of the contractor. Applies when
                    `contractor_type` is `Individual`.
                contractor_last_name:
                  type: string
                  description: >-
                    The last name of the contractor.  Applies when
                    `contractor_type` is `Individual`.
                contractor_business_name:
                  type: string
                  description: >-
                    The business name of the employee. Applies when
                    `contractor_type` is `Business`.
                contractor_type:
                  type: string
                  description: |-
                    The type of contractor.

                    `Individual` `Business`
                payment_method:
                  type: string
                  description: >-
                    The payment method.


                    `Direct Deposit` `Check` `Historical Payment` `Correction
                    Payment`
                wage:
                  type: string
                  description: The fixed wage of the payment, regardless of hours worked.
                bonus:
                  type: string
                  description: The bonus amount in the payment.
                reimbursement:
                  type: string
                  description: The reimbursement amount in the payment.
          licensee:
            type: object
            description: The licensed payroll processor
            properties:
              name:
                type: string
                description: Always the fixed string "Gusto, Zenpayroll Inc."
              address:
                type: string
                description: Always the fixed string "525 20th St"
              city:
                type: string
                description: Always the fixed string "San Francisco"
              state:
                type: string
                description: Always the fixed string "CA"
              postal_code:
                type: string
                description: Always the fixed string "94107"
              phone_number:
                type: string
                description: Always the fixed string "4157778888"
      Custom-Field-Type:
        type: string
        description: Input type for the custom field.
        enum:
          - text
          - currency
          - number
          - date
          - radio
        x-tags:
          - Custom Fields
      Employee-Custom-Field:
        type: object
        x-examples:
          Employee Level:
            id: ae4e2cd5-e9b6-40f9-88a1-415a02365dd0
            company_custom_field_id: da84500d-d05c-4e4f-bcf2-43152ca33278
            name: employee_level
            description: Employee Level
            value: '2'
        description: A custom field of an employee
        x-tags:
          - Custom Fields
        properties:
          id:
            type: string
          company_custom_field_id:
            type: string
            description: >-
              This is the id of the response object from when you get the company
              custom fields
          name:
            type: string
          type:
            $ref: '#/components/schemas/Custom-Field-Type'
          description:
            type: string
          value:
            type: string
          selection_options:
            type: array
            description: An array of options for fields of type radio. Otherwise, null.
            nullable: true
            items:
              type: string
        required:
          - id
          - company_custom_field_id
          - name
          - type
          - value
      Company-Custom-Field:
        type: object
        description: A custom field on a company
        x-tags:
          - Custom Fields
        properties:
          uuid:
            type: string
            description: UUID of the company custom field
          name:
            type: string
            description: Name of the company custom field
          type:
            $ref: '#/components/schemas/Custom-Field-Type'
          description:
            type: string
            description: Description of the company custom field
          selection_options:
            type: array
            description: An array of options for fields of type radio. Otherwise, null.
            nullable: true
            items:
              type: string
        required:
          - uuid
          - name
          - type
      Rehire:
        type: object
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
              for information on how to use this field.
          effective_date:
            type: string
            description: The day when the employee returns to work.
          file_new_hire_report:
            type: boolean
            description: >-
              The boolean flag indicating whether Gusto will file a new hire
              report for the employee.
          work_location_uuid:
            type: string
            description: The uuid of the employee's work location.
          employment_status:
            type: string
            description: >-
              The employee's employment status. Supplying an invalid option will
              set the employment_status to *not_set*.
            enum:
              - part_time
              - full_time
              - part_time_eligible
              - variable
              - seasonal
              - not_set
          two_percent_shareholder:
            type: boolean
            description: >-
              Whether the employee is a two percent shareholder of the company.
              This field only applies to companies with an S-Corp entity type.
          employee_uuid:
            type: string
            description: The UUID of the employee.
            readOnly: true
          active:
            type: boolean
            description: Whether the employee's rehire has gone into effect.
            readOnly: true
        x-examples:
          example-1:
            version: 2e930d43acbdb241f8f14a2d531fa417
            employee_uuid: 8c290660-b6c9-4ad7-9f6e-ea146aaf79e8
            active: false
            effective_date: '2024-06-30'
            employment_status: seasonal
            file_new_hire_report: false
            work_location_uuid: 8cb87e2e-5b30-4c13-a4f4-bfffcbed1188
            two_percent_shareholder: false
      Signatory:
        description: The representation of a company's signatory
        type: object
        title: Signatory
        x-tags:
          - Signatories
        properties:
          uuid:
            type: string
          first_name:
            type: string
            nullable: true
          last_name:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          phone:
            type: string
            nullable: true
          email:
            type: string
          birthday:
            type: string
            nullable: true
          is_admin:
            type: boolean
            description: >-
              Whether or not the signatory is also the payroll admin of the
              company.
          has_ssn:
            type: boolean
            description: Indicates whether the signatory has an SSN in Gusto.
          version:
            type: string
            description: >-
              The current version of the signatory. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          identity_verification_status:
            type: string
            enum:
              - Pass
              - Fail
              - Skipped
            description: >-
              |   |   |

              |---|---|

              |__Status__| __Description__ |

              | Pass | Signatory can sign all forms |

              | Fail | Signatory cannot sign forms |

              | Skipped | Signatory cannot sign Form 8655 until the form is
              manually uploaded as wet-signed |

              | null | Identity verification process has not been completed |
            nullable: true
          home_address:
            type: object
            nullable: true
            properties:
              street_1:
                type: string
              street_2:
                type: string
              city:
                type: string
              state:
                type: string
              zip:
                type: string
              country:
                type: string
                default: USA
      Flow:
        description: The representation of a flow in Gusto white-label UI.
        type: object
        x-examples:
          Example:
            url: >-
              https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ
            expires_at: '2021-12-28 04:25:48'
        title: Flow
        x-tags:
          - Flows
        properties:
          url:
            type: string
          expires_at:
            type: string
      Unprocessed-Termination-Pay-Period:
        description: The representation of an unprocessed termination pay period.
        type: object
        properties:
          start_date:
            type: string
            description: The start date of the pay period.
            readOnly: true
          end_date:
            type: string
            description: The end date of the pay period.
          check_date:
            type: string
            description: The check date of the pay period.
            readOnly: true
          debit_date:
            type: string
            description: The debit date of the pay period.
          employee_name:
            type: string
            description: The full name of the employee.
          employee_uuid:
            type: string
            description: A unique identifier of the employee.
          pay_schedule_uuid:
            type: string
            description: >-
              A unique identifier of the pay schedule to which the pay period
              belongs.
        x-tags:
          - Employee Employments
      Pay-Schedule-Assignment:
        description: The representation of a pay schedule assignment.
        type: object
        x-examples:
          example-1:
            type: by_employee
            employees:
              employee_uuid: f0238368-f2cf-43e2-9a07-b0265f2cec69
              pay_schedule_uuid: c277ac52-9871-4a96-a1e6-0c449684602a
        properties:
          type:
            type: string
            enum:
              - single
              - hourly_salaried
              - by_employee
              - by_department
            description: The pay schedule assignment type.
            readOnly: true
          hourly_pay_schedule_uuid:
            type: string
            description: Pay schedule for hourly employees.
            readOnly: true
            nullable: true
          salaried_pay_schedule_uuid:
            type: string
            description: Pay schedule for salaried employees.
            readOnly: true
            nullable: true
          default_pay_schedule_uuid:
            type: string
            description: Default pay schedule for employees.
            readOnly: true
            nullable: true
          employees:
            type: array
            description: List of employees and their pay schedules.
            readOnly: true
            nullable: true
            items:
              $ref: '#/components/schemas/Pay-Schedule-Assignment-Employee'
          departments:
            type: array
            description: List of departments and their pay schedules.
            readOnly: true
            nullable: true
            items:
              $ref: '#/components/schemas/Pay-Schedule-Assignment-Department'
        x-tags:
          - Pay Schedules
      Pay-Schedule-Assignment-Employee:
        type: object
        x-examples:
          example-1:
            employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
            pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
        properties:
          employee_uuid:
            type: string
            description: The UUID of the employee.
          pay_schedule_uuid:
            type: string
            description: The employee's pay schedule UUID.
        x-tags:
          - Pay Schedules
      Pay-Schedule-Assignment-Department:
        type: object
        x-examples:
          example-1:
            department_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
            pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
        properties:
          department_uuid:
            type: string
            description: The UUID of the department.
          pay_schedule_uuid:
            type: string
            description: The department's pay schedule UUID.
        x-tags:
          - Pay Schedules
      Pay-Schedule-Assignment-Preview:
        description: The representation of a pay schedule assignment preview.
        type: object
        x-examples:
          example-1:
            type: hourly_salaried
            employee_changes:
              employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
              first_name: Penny
              last_name: Parker
              pay_frequency: Twice per month — Salaried pay schedule
              first_pay_period:
                pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
                start_date: '2023-07-01'
                end_date: '2023-08-01'
                check_date: '2023-08-02'
              transition_pay_period:
                start_date: '2023-06-20'
                end_date: '2023-06-30'
        properties:
          type:
            type: string
            enum:
              - single
              - hourly_salaried
              - by_employee
              - by_department
            description: The pay schedule assignment type.
            readOnly: true
          employee_changes:
            type: array
            description: >-
              A list of pay schedule changes including pay period and transition
              pay period.
            items:
              $ref: '#/components/schemas/Pay-Schedule-Assignment-Employee-Change'
        x-tags:
          - Pay Schedules
      Pay-Schedule-Assignment-Employee-Change:
        type: object
        x-examples:
          example-1:
            employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
            first_name: Penny
            last_name: Parker
            pay_frequency: Twice per month — Salaried pay schedule
            first_pay_period:
              pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
              start_date: '2023-07-01'
              end_date: '2023-08-01'
              check_date: '2023-08-02'
            transition_pay_period:
              start_date: '2023-06-20'
              end_date: '2023-06-30'
        properties:
          employee_uuid:
            type: string
            description: The UUID of the employee.
            readOnly: true
          first_name:
            type: string
            description: The employee's first name.
            readOnly: true
          last_name:
            type: string
            description: The employee's last name.
            readOnly: true
          pay_frequency:
            type: string
            description: New pay schedule frequency and name.
            readOnly: true
          first_pay_period:
            $ref: '#/components/schemas/Pay-Schedule-Assignment-Pay-Period'
          transition_pay_period:
            $ref: '#/components/schemas/Pay-Schedule-Assignment-Transition-Pay-Period'
        x-tags:
          - Pay Schedules
      Pay-Schedule-Assignment-Pay-Period:
        description: Pay schedule assignment first pay period information.
        type: object
        x-examples:
          example-1:
            pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
            start_date: '2023-07-01'
            end_date: '2023-08-01'
            check_date: '2023-08-02'
        properties:
          pay_schedule_uuid:
            type: string
            description: The pay schedule UUID.
          start_date:
            type: string
            description: Pay period start date.
          end_date:
            type: string
            description: Pay period end date.
          check_date:
            type: string
            description: Pay period check date.
        x-tags:
          - Pay Schedules
      Pay-Schedule-Assignment-Transition-Pay-Period:
        description: Pay schedule assignment transition pay period information.
        type: object
        x-examples:
          example-1:
            start_date: '2023-07-01'
            end_date: '2023-08-01'
        properties:
          start_date:
            type: string
            description: Pay period start date.
          end_date:
            type: string
            description: Pay period end date.
        x-tags:
          - Pay Schedules
      Accruing-Time-Off-Hour:
        description: The representation of an unprocessed termination pay period.
        type: object
        properties:
          time_off_policy_uuid:
            type: string
            description: A unique identifier of the time off policy.
          hours:
            type: string
            description: Hours accrued during this pay period.
      Employee-Federal-Tax:
        title: Employee-Federal-Tax
        type: object
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          filing_status:
            type: string
            description: >-
              It determines which tax return form an individual will use and is an
              important factor in computing taxable income. One of:

              - Single

              - Married

              - Head of Household

              - Exempt from withholding

              - Married, but withhold as Single (does not apply to rev_2020_w4
              form)
          extra_withholding:
            type: string
            description: >-
              An employee can request an additional amount to be withheld from
              each paycheck.
          two_jobs:
            type: boolean
            description: >-
              If there are only two jobs (i.e., you and your spouse each have a
              job, or you have two), you can set it to true.
          dependents_amount:
            type: string
            description: >-
              A dependent is a person other than the taxpayer or spouse who
              entitles the taxpayer to claim a dependency exemption.
          other_income:
            type: string
            description: Other income amount.
          deductions:
            type: string
          w4_data_type:
            type: string
            description: The version of w4 form.
            enum:
              - pre_2020_w4
              - rev_2020_w4
          federal_withholding_allowance:
            type: string
            description: |-
              *does not apply to rev_2020_w4 form*

              An exemption from paying a certain amount of income tax.
          additional_withholding:
            type: boolean
            description: '*does not apply to rev_2020_w4 form*'
        x-examples:
          Example:
            value:
              version: 56a489ce86ed6c1b0f0cecc4050a0b01
              filing_status: Single
              extra_withholding: '0.0'
              two_jobs: true
              dependents_amount: '0.0'
              other_income: '0.0'
              deductions: '0.0'
              w4_data_type: rev_2020_w4
        x-tags:
          - Employee Tax Setup
      Employee-State-Tax:
        title: Employee-State-Tax
        type: object
        x-examples:
          example-1:
            employee_uuid: 2005e601-3c78-410a-9d40-b960ae130383
            state: CA
            questions:
              - label: Filing Status
                description: >
                  The Head of Household status applies to unmarried individuals
                  who have a relative living with them in their home. If unsure,
                  read the <a target='_blank' data-bypass rel='noopener
                  noreferrer' tabindex='99'
                  href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA
                  Filing Status explanation</a>.
                key: filing_status
                input_question_format:
                  type: Select
                  options:
                    - value: S
                      label: Single
                    - value: M
                      label: Married one income
                    - value: MD
                      label: Married dual income
                    - value: H
                      label: Head of household
                    - value: E
                      label: Do Not Withhold
                answers:
                  - value: S
                    valid_from: '2010-01-01'
                    valid_up_to: null
              - label: Withholding Allowance
                description: >
                  This value is needed to calculate the employee's CA income tax
                  withholding. If unsure, use the <a target='_blank' data-bypass
                  rel='noopener noreferrer' tabindex='99'
                  href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4
                  form</a> to calculate the value manually.
                key: withholding_allowance
                input_question_format:
                  type: Number
                answers:
                  - value: 1
                    valid_from: '2010-01-01'
                    valid_up_to: null
              - label: Additional Withholding
                description: >-
                  You can withhold an additional amount of California income taxes
                  here.
                key: additional_withholding
                input_question_format:
                  type: Currency
                answers:
                  - value: '0.0'
                    valid_from: '2010-01-01'
                    valid_up_to: null
              - label: File a New Hire Report?
                description: >-
                  State law requires you to file a new hire report within 20 days
                  of hiring or re-hiring an employee.
                key: file_new_hire_report
                input_question_format:
                  type: Select
                options:
                  - value: true
                    label: Yes, file the state new hire report for me.
                  - value: false
                    label: No, I have already filed.
                answers:
                  - value: true
                    valid_from: '2010-01-01'
                    valid_up_to: null
        x-tags:
          - Employee Tax Setup
        properties:
          employee_uuid:
            type: string
            description: The employee's uuid
          state:
            type: string
            description: Two letter US state abbreviation
          file_new_hire_report:
            type: boolean
          is_work_state:
            type: boolean
          questions:
            type: array
            items:
              $ref: '#/components/schemas/Employee-State-Tax-Question'
        required:
          - employee_uuid
          - state
          - questions
      Employee-State-Tax-Question:
        title: Employee-State-Tax-Question
        type: object
        x-examples:
          example-1:
            label: Filing Status
            description: >
              The Head of Household status applies to unmarried individuals who
              have a relative living with them in their home. If unsure, read the
              <a target='_blank' data-bypass rel='noopener noreferrer'
              tabindex='99'
              href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA
              Filing Status explanation</a>.
            key: filing_status
            input_question_format:
              type: Select
              options:
                - value: S
                  label: Single
                - value: M
                  label: Married one income
                - value: MD
                  label: Married dual income
                - value: H
                  label: Head of household
                - value: E
                  label: Do Not Withhold
            answers:
              - value: S
                valid_from: '2010-01-01'
                valid_up_to: null
        x-tags:
          - Employee Tax Setup
        properties:
          label:
            type: string
            description: A short title for the question
          description:
            type: string
            description: >-
              An explaination of the question - this may contain inline html
              formatted links.
          key:
            type: string
            description: >-
              A unique identifier of the question (for the given state) - used for
              updating the answer.
          input_question_format:
            $ref: '#/components/schemas/Employee-State-Tax-Input-Question-Format'
          answers:
            type: array
            items:
              $ref: '#/components/schemas/Employee-State-Tax-Answer'
        required:
          - label
          - description
          - key
          - input_question_format
          - answers
      Employee-State-Tax-Answer:
        title: Employee-State-Tax-Answer
        type: object
        x-examples:
          example-1:
            value: '0.0'
            valid_from: '2010-01-01'
            valid_up_to: null
        x-tags:
          - Employee Tax Setup
        properties:
          value:
            type: string
            description: >-
              The answer to the corresponding question - this may be a string,
              number, boolean, or null.
          valid_from:
            type: string
            description: The effective date of the answer - currently always “2010-01-01”.
          valid_up_to:
            description: The effective end date of the answer - currently always null.
            nullable: true
      Employee-State-Tax-Input-Question-Format:
        title: Employee-State-Tax-Input-Question-Format
        type: object
        x-examples:
          select-example:
            type: Select
            options:
              - value: S
                label: Single
              - value: M
                label: Married one income
              - value: MD
                label: Married dual income
              - value: H
                label: Head of household
              - value: E
                label: Do Not Withhold
          number-example:
            type: Number
        x-tags:
          - Employee Tax Setup
        properties:
          type:
            type: string
            description: >-
              Describes the type of question - Text, Number, Select, Currency,
              Date
          options:
            type: array
            uniqueItems: true
            description: For "Select" type questions, the allowed values and display labels.
            items:
              type: object
              properties:
                value:
                  description: An allowed value to answer the question
                  type: string
                label:
                  type: string
                  description: A display label that corresponds to the answer value
              required:
                - label
        required:
          - type
      Federal-Tax-Details:
        title: Federal-Tax-Details
        type: object
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          tax_payer_type:
            type: string
            description: |-
              What type of tax entity the company is. One of:
              - C-Corporation
              - S-Corporation
              - Sole proprietor
              - LLC
              - LLP
              - Limited partnership
              - Co-ownership
              - Association
              - Trusteeship
              - General partnership
              - Joint venture
              - Non-Profit
          taxable_as_scorp:
            type: boolean
            description: >-
              Whether the company is taxed as an S-Corporation. Tax payer types
              that may be taxed as an S-Corporation include:

              - S-Corporation

              - C-Corporation

              - LLC
          filing_form:
            type: string
            description: |-
              The form used by the company for federal tax filing. One of:
              - 941 (Quarterly federal tax return form)
              - 944 (Annual federal tax return form)
          has_ein:
            type: boolean
            description: Whether company's Employer Identification Number (EIN) is present
          ein_verified:
            type: boolean
            description: >-
              Whether the EIN was able to be verified as a valid EIN with the
              IRS. 
          legal_name:
            type: string
            description: The legal name of the company
        x-examples:
          Example:
            value:
              version: string
              tax_payer_type: string
              taxable_as_scorp: false
              filing_form: string
              has_ein: true
              ein_verified: true
              legal_name: string
        x-tags:
          - Federal Tax Details
      Employee-Bank-Account:
        title: Employee-Bank-Account
        type: object
        x-examples:
          Example:
            value:
              uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
              employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
              name: BoA Checking Account
              routing_number: '266905059'
              hidden_account_number: XXXX1207
              account_type: Checking
        properties:
          uuid:
            type: string
            description: UUID of the bank account
          employee_uuid:
            type: string
            description: UUID of the employee
          account_type:
            type: string
            enum:
              - Checking
              - Savings
            description: Bank account type
          name:
            type: string
            description: Name for the bank account
          routing_number:
            type: string
            description: The bank account's routing number
          hidden_account_number:
            type: string
            description: Masked bank account number
        x-tags:
          - Employee Payment Method
      Contractor-Bank-Account:
        title: Contractor-Bank-Account
        type: object
        x-examples:
          Example:
            value:
              uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
              employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
              name: BoA Checking Account
              routing_number: '266905059'
              hidden_account_number: XXXX1207
              account_type: Checking
        x-tags:
          - Contractor Payment Method
        properties:
          uuid:
            type: string
            description: UUID of the bank account
          contractor_uuid:
            type: string
            description: UUID of the employee
          account_type:
            type: string
            enum:
              - Checking
              - Savings
            description: Bank account type
          name:
            type: string
            description: Name for the bank account
          routing_number:
            type: string
            description: The bank account's routing number
          hidden_account_number:
            type: string
            description: Masked bank account number
      Employee-Payment-Method:
        title: Employee-Payment-Method
        type: object
        x-examples:
          Example-1:
            value:
              version: 63859768485e218ccf8a449bb60f14ed
              type: Direct Deposit
              split_by: Amount
              splits:
                - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                  name: BoA Checking Account
                  priority: 1
                  split_amount: 500
                - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
                  name: Chase Checking Account
                  priority: 2
                  split_amount: 1000
                - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                  name: US Bank Checking Account
                  priority: 3
                  split_amount: null
          Example-2:
            value:
              version: 63859768485e218ccf8a449bb60f14ed
              type: Direct Deposit
              split_by: Percentage
              splits:
                - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                  name: BoA Checking Account
                  priority: 1
                  split_amount: 60
                - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
                  name: Chase Checking Account
                  priority: 2
                  split_amount: 40
          Example-3:
            value:
              version: 63859768485e218ccf8a449bb60f14ed
              type: Check
        description: ''
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for
              information on how to use this field.
          type:
            type: string
            enum:
              - Direct Deposit
              - Check
            description: >-
              The payment method type. If type is Check, then split_by and splits
              do not need to be populated. If type is Direct Deposit, split_by and
              splits are required.
          split_by:
            type: string
            enum:
              - Amount
              - Percentage
            description: >-
              Describes how the payment will be split. If split_by is Percentage,
              then the split amounts must add up to exactly 100. If split_by is
              Amount, then the last split amount must be nil to capture the
              remainder.
            nullable: true
          splits:
            type: array
            nullable: true
            items:
              $ref: '#/components/schemas/Payment-Method-Bank-Account'
        x-tags:
          - Employee Payment Method
      Tax-Requirement:
        type: object
        x-examples:
          ga-withholding-requirement-example:
            key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
            applicable_if: []
            label: Withholding Number
            description: >-
              If you have run payroll in the past in GA, find your withholding
              number on notices received from the Georgia Department of Revenue,
              or call the agency at (877) 423-6711. If you don’t have a number
              yet, you should <a target='_blank' data-bypass
              href='https://gtc.dor.ga.gov/_/#1'>register the business online</a>.
              The last two characters of your ID must be upper case letters.
            value: 1233214-AB
            metadata:
              type: account_number
              mask: '#######-^^'
              prefix: null
        properties:
          key:
            $ref: '#/components/schemas/Tax-Requirement-Key'
          applicable_if:
            type: array
            description: >-
              An array of references to other requirements within the requirement
              set. This requirement is only applicable if all referenced
              requirements have values matching the corresponding `value`. The
              primary use-case is dynamically hiding and showing requirements as
              values change. E.g. Show Requirement-B when Requirement-A has been
              answered with `false`. To be explicit, an empty array means the
              requirement is applicable.
            items:
              type: object
              properties:
                key:
                  $ref: '#/components/schemas/Tax-Requirement-Key'
                value:
                  description: The required value of the requirement identified by `key`
                  oneOf:
                    - type: boolean
                    - type: string
                    - type: number
          label:
            type: string
            description: A customer facing description of the requirement
          description:
            type: string
            description: A more detailed customer facing description of the requirement
          value:
            type: string
            description: The "answer"
          metadata:
            $ref: '#/components/schemas/Tax-Requirement-Metadata'
      Tax-Requirement-Metadata:
        type: object
        x-examples:
          select-example:
            type: select
            options:
              - label: Semiweekly
                value: Semi-weekly
              - label: Monthly
                value: Monthly
              - label: Quarterly
                value: Quarterly
          tax_rate-example:
            metadata:
              type: tax_rate
              validation:
                type: min_max
                min: '0.0004'
                max: '0.081'
          radio-example:
            metadata:
              type: radio
              options:
                - label: >-
                    No, we cannot reimburse the state—we have to pay SUI taxes
                    quarterly
                  short_label: Not Reimbursable
                  value: false
                - label: >-
                    Yes, we can reimburse the state if an employee collects SUI
                    benefits—we don’t have to pay SUI taxes quarterly
                  short_label: Reimbursable
                  value: true
          account_number-example:
            metadata:
              type: account_number
              mask: '######-##'
              prefix: null
        properties:
          type:
            type: string
            enum:
              - text
              - currency
              - radio
              - select
              - percent
              - account_number
              - tax_rate
              - workers_compensation_rate
            description: >
              Describes the type of requirement - each type may have additional
              metadata properties to describe possible values, formats, etc.


              - `text`: free-text input, no additional requirements

              - `currency`: a value representing a dollar amount, e.g. `374.55`
              representing `$374.55`

              - `radio`: choose one of options provided, see `options`

              - `select`: choose one of options provided, see `options`

              - `percent`: A decimal value representing a percentage, e.g. `0.034`
              representing `3.4%`

              - `account_number`: An account number for a tax agency, more
              information provided by `mask` and `prefix`

              - `tax_rate`: A decimal value representing a tax rate, e.g. `0.034`
              representing a tax rate of `3.4%`, see `validation` for additional
              validation guidance

              - `workers_compensation_rate`: A decimal value representing a
              percentage, see `risk_class_code`, `risk_class_description`, and
              `rate_type`
            readOnly: true
          options:
            type: array
            description: >-
              [for `select` or `radio`] An array of objects describing the
              possible values.
            items:
              type: object
              properties:
                label:
                  type: string
                  description: A customer facing label for the answer
                value:
                  type: string
                  description: The actual value to be submitted
                short_label:
                  type: string
                  description: A less verbose label that may sometimes be available
              required:
                - label
                - value
          risk_class_code:
            type: string
            description: >-
              [for `workers_compensation_rate`] The industry risk class code for
              the rate being requested
          risk_class_description:
            type: string
            description: >-
              [for `workers_compensation_rate`] A description of the industry risk
              class for the rate being requested
          rate_type:
            type: string
            description: >
              [for `workers_compensation_rate`] The type of rate being collected.
              Either:
               - `percent`: A percentage formatted as a decimal, e.g. `0.01` for 1%
               - `currency_per_hour`: A dollar amount per hour, e.g. `3.24` for $3.24/hr
            enum:
              - percent
              - currency_per_hour
          mask:
            type: string
            description: >
              [for `account_number`] A pattern describing the format of the
              account number


              The mask is a sequence of characters representing the requirements
              of the actual account number. Each character in the mask represents
              a single character in the account number as follows:

              - `#`: a digit (`\d`)

              - `@`: a upper or lower case letter (`[a-zA-Z]`)

              - `^`: an uppercase letter (`[A-Z]`)

              - `%`: a digit or uppercase letter (`[0-9A-Z]`)

              - any other character represents the literal character


              Examples:

              - mask: `WHT-######` represents `WHT-` followed by 5 digits, e.g.
              `WHT-33421`

              - mask: `%####-^^` supports values of `75544-AB` and `Z7654-HK`
          prefix:
            type: string
            description: >-
              [for `account_number`] A value that precedes the value to be
              collected - useful for display, but should not be submitted as part
              of the value. E.g. some tax agencies use an account number that is a
              company's federal ein plus two digits. In that case the mask would
              be `##` and the prefix `XXXXX1234`.
          validation:
            type: object
            description: '[for `tax_rate`] Describes the validation required for the tax rate'
            properties:
              type:
                type: string
                description: Describes the type of tax_rate validation rule
                enum:
                  - one_of
                  - min_max
              min:
                type: string
                description: '[for `min_max`] The inclusive lower bound of the tax rate'
              max:
                type: string
                description: '[for `min_max`] The inclusive upper bound of the tax rate'
              rates:
                type: array
                description: >
                  [for `one_of`] The possible, unformatted tax rates for
                  selection.

                  - e.g. ["0.0", "0.001"] representing 0% and 0.1%
                items:
                  type: string
            required:
              - type
        required:
          - type
        description: ''
      Tax-Requirement-Set:
        type: object
        x-examples:
          tax-requirements-set-ga-registrations-example:
            state: GA
            key: registrations
            label: Registrations
            effective_from: null
            requirements:
              - key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
                applicable_if: []
                label: Withholding Number
                description: >-
                  If you have run payroll in the past in GA, find your withholding
                  number on notices received from the Georgia Department of
                  Revenue, or call the agency at (877) 423-6711. If you don’t have
                  a number yet, you should <a target='_blank' data-bypass
                  href='https://gtc.dor.ga.gov/_/#1'>register the business
                  online</a>. The last two characters of your ID must be upper
                  case letters.
                value: 1233214-AB
                metadata:
                  type: account_number
                  mask: '#######-^^'
                  prefix: null
              - key: 6c0911ab-5860-412e-bdef-6437cd881df5
                applicable_if: []
                label: DOL Account Number
                description: >-
                  If you have run payroll in the past in GA, find your DOL account
                  number on notices received from the Georgia Department of Labor,
                  or call the agency at (404) 232-3300. If you don’t have an
                  account number yet, please <a target='_blank' data-bypass
                  href='https://support.gusto.com/hc/en-us/articles/210139038#registerdol'>follow
                  the instructions here</a> to register your business with the
                  Georgia Dept. of Labor.
                value: 474747-88
                metadata:
                  type: account_number
                  mask: '######-##'
                  prefix: null
        description: ''
        properties:
          state:
            $ref: '#/components/schemas/State'
          key:
            $ref: '#/components/schemas/Tax-Requirement-Set-Key'
          label:
            type: string
            description: Customer facing label for the requirement set, e.g. "Registrations"
          effective_from:
            $ref: '#/components/schemas/Tax-Requirement-Effective-From'
          requirements:
            type: array
            items:
              $ref: '#/components/schemas/Tax-Requirement'
      Tax-Requirements-State:
        title: Tax-Requirements-State
        type: object
        x-examples:
          tax-requirements-state-ga-example:
            company_uuid: 6c14eac3-0da2-474d-bda1-786b3602d381
            state: GA
            requirement_sets:
              - state: GA
                key: registrations
                label: Registrations
                effective_from: null
                requirements:
                  - key: 71653ec0-00b5-4c66-a58b-22ecf21704c5
                    applicable_if: []
                    label: Withholding Number
                    description: >-
                      If you have run payroll in the past in GA, find your
                      withholding number on notices received from the Georgia
                      Department of Revenue, or call the agency at (877) 423-6711.
                      If you don’t have a number yet, you should <a
                      target='_blank' data-bypass
                      href='https://gtc.dor.ga.gov/_/#1'>register the business
                      online</a>. The last two characters of your ID must be upper
                      case letters.
                    value: 1233214-AB
                    metadata:
                      type: account_number
                      mask: '#######-^^'
                      prefix: null
                  - key: 6c0911ab-5860-412e-bdef-6437cd881df5
                    applicable_if: []
                    label: DOL Account Number
                    description: >-
                      If you have run payroll in the past in GA, find your DOL
                      account number on notices received from the Georgia
                      Department of Labor, or call the agency at (404) 232-3300.
                      If you don’t have an account number yet, please <a
                      target='_blank' data-bypass
                      href='https://support.gusto.com/hc/en-us/articles/210139038#registerdol'>follow
                      the instructions here</a> to register your business with the
                      Georgia Dept. of Labor.
                    value: 474747-88
                    metadata:
                      type: account_number
                      mask: '######-##'
                      prefix: null
              - state: GA
                key: taxrates
                label: Tax Rates
                effective_from: '2022-01-01'
                requirements:
                  - key: suireimbursable
                    applicable_if: []
                    label: SUI Reimburser
                    description: >-
                      Instead of paying state unemployment insurance (SUI) taxes
                      quarterly, some businesses (like non-profits or government
                      organizations) may be allowed to reimburse the state if one
                      of their employees collects unemployment benefits.
                    value: false
                    metadata:
                      type: radio
                      options:
                        - label: >-
                            No, we cannot reimburse the state—we have to pay SUI
                            taxes quarterly
                          short_label: Not Reimbursable
                          value: false
                        - label: >-
                            Yes, we can reimburse the state if an employee
                            collects SUI benefits—we don’t have to pay SUI taxes
                            quarterly
                          short_label: Reimbursable
                          value: true
                  - key: e0ac2284-8d30-4100-ae23-f85f9574868b
                    applicable_if:
                      - key: suireimbursable
                        value: false
                    label: Total Tax Rate
                    description: >-
                      Haven't received your assigned rate yet? <a target='_blank'
                      data-bypass
                      href='https://support.gusto.com/article/106622236100000/State-unemployment-insurance-(SUI)-tax'>Find
                      the new employer rate</a> and enter it here.
                    value: '0.05'
                    metadata:
                      type: tax_rate
                      validation:
                        type: min_max
                        min: '0.0004'
                        max: '0.081'
              - state: GA
                key: depositschedules
                label: Deposit Schedules
                effective_from: '2022-01-01'
                requirements:
                  - key: 6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c
                    applicable_if: []
                    label: Deposit Schedule
                    description: >-
                      Georgia rejects payments made on the wrong schedule. GA
                      employers receive their schedule on a registration
                      verification letter after registering with the Georgia Dept.
                      of Revenue. If you are unsure, call the agency at (877)
                      423-6711. If you did not register your business yet, please
                      <a target='_blank' data-bypass
                      href='https://gtc.dor.ga.gov/_/#2'>register the business
                      with the Georgia Dept. of Revenue</a>.
                    value: Monthly
                    metadata:
                      type: select
                      options:
                        - label: Semiweekly
                          value: Semi-weekly
                        - label: Monthly
                          value: Monthly
                        - label: Quarterly
                          value: Quarterly
              - state: GA
                key: depositschedules
                label: Deposit Schedules
                effective_from: '2022-07-01'
                requirements:
                  - key: 6ddfcbeb-94d3-4003-bfc2-8c6e1ca9f70c
                    applicable_if: []
                    label: Deposit Schedule
                    description: >-
                      Georgia rejects payments made on the wrong schedule. GA
                      employers receive their schedule on a registration
                      verification letter after registering with the Georgia Dept.
                      of Revenue. If you are unsure, call the agency at (877)
                      423-6711. If you did not register your business yet, please
                      <a target='_blank' data-bypass
                      href='https://gtc.dor.ga.gov/_/#2'>register the business
                      with the Georgia Dept. of Revenue</a>.
                    value: Monthly
                    metadata:
                      type: select
                      options:
                        - label: Semiweekly
                          value: Semi-weekly
                        - label: Monthly
                          value: Monthly
                        - label: Quarterly
                          value: Quarterly
        description: ''
        properties:
          company_uuid:
            type: string
          state:
            $ref: '#/components/schemas/State'
          requirement_sets:
            type: array
            items:
              $ref: '#/components/schemas/Tax-Requirement-Set'
      Tax-Requirement-Set-Key:
        title: Tax-Requirement-Set-Key
        type: string
        description: >-
          An identifier for a set of requirements. A list of requirement sets can
          contain multiple sets with the same `key` and different `effective_from`
          values.
      Tax-Requirement-Key:
        title: Tax-Requirement-Key
        type: string
        description: >-
          An identifier for an individual requirement. Uniqueness is guaranteed
          within a requirement set.
      Tax-Requirement-Effective-From:
        title: Tax-Requirement-Effective-From
        type: string
        description: >-
          An ISO 8601 formatted date representing the date values became
          effective. Some requirement sets are effective dated, while others are
          not. Multiple requirement sets for the same state/key can/will exist
          with unique effective dates. If a requirement set is has an
          `effective_from` value, all requirement sets with the same key will also
          have an `effective_from` value.
        nullable: true
      State:
        title: State
        type: string
        description: >-
          One of the two-letter state abbreviations for the fifty United States
          and the District of Columbia (DC)
      Time-Off-Policy:
        type: object
        x-examples:
          example:
            uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
            company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
            name: test policy
            policy_type: vacation
            accrual_method: unlimited
            is_active: true
            employees:
              - uuid: c61d1895-5cf8-4217-88c8-20d7c3132a04
        description: Representation of a Time Off Policy
        properties:
          uuid:
            type: string
            description: Unique identifier of a time off policy
          company_uuid:
            type: string
            description: Unique identifier for the company owning the time off policy
          name:
            type: string
            description: Name of the time off policy
          policy_type:
            type: string
            description: Type of the time off policy
            enum:
              - vacation
              - sick
          accrual_method:
            type: string
            description: Policy time off accrual method
          accrual_rate:
            type: string
            format: float
            description: >-
              The rate at which the time off hours will accrue for an employee on
              the policy. Represented as a float, e.g. "40.0".
          accrual_rate_unit:
            type: string
            format: float
            description: >-
              The number of hours an employee has to work or be paid for to accrue
              the number of hours set in the accrual rate. Only used for hourly
              policies (per_hour_paid, per_hour_paid_no_overtime, per_hour_work,
              per_hour_worked_no_overtime). Represented as a float, e.g. "40.0".
          paid_out_on_termination:
            type: boolean
            description: >-
              Boolean representing if an employees accrued time off hours will be
              paid out on termination
          accrual_waiting_period_days:
            type: integer
            description: >-
              Number of days before an employee on the policy will begin accruing
              time off hours
          carryover_limit_hours:
            type: string
            format: float
            description: >-
              The max number of hours and employee can carryover from one year to
              the next
          max_accrual_hours_per_year:
            type: string
            format: float
            description: The max number of hours and employee can accrue in a year
          max_hours:
            type: string
            format: float
            description: The max number of hours an employee can accrue
          complete:
            type: boolean
            description: boolean representing if a policy has completed configuration
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
              for information on how to use this field.
          is_active:
            type: boolean
            description: boolean representing if a policy is active or not
          employees:
            type: array
            description: List of employee UUIDs under a time off policy
            items:
              type: object
              properties:
                uuid:
                  type: string
        required:
          - uuid
          - company_uuid
          - name
          - policy_type
          - accrual_method
          - is_active
          - employees
      Time-Off-Activity:
        type: object
        x-examples:
          example:
            policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
            time_off_type: vacation
            policy_name: Paid Time Off
            event_type: TimeOffEvent::AddToPolicy
            event_description: 'Added to policy: Vacation Per Hour Worked'
            effective_time: '2022-09-27T13:43:03.000-07:00'
            balance: '0.0'
            balance_change: '0.0'
        description: Representation of a Time Off Activity
        properties:
          policy_uuid:
            type: string
            description: unique identifier of a time off policy
          time_off_type:
            type: string
            description: Type of the time off activity
            enum:
              - vacation
              - sick
          policy_name:
            type: string
            description: The name of the time off policy for this activity
          event_type:
            type: string
            description: The type of the time off event/activity
          event_description:
            type: string
            description: A description for the time off event/activity
          effective_time:
            type: string
            description: The datetime of the time off activity
          balance:
            type: string
            format: float
            description: The time off balance at the time of the activity
          balance_change:
            type: string
            format: float
            description: The amount the time off balance changed as a result of the activity
      Holiday-Pay-Policy:
        type: object
        x-examples:
          example:
            version: 1b37938b017c7fd7116bada007072290
            company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
            federal_holidays:
              new_years_day:
                selected: true
                name: New Year's Day
                date: January 1
              mlk_day:
                selected: true
                name: Martin Luther King, Jr. Day
                date: Third Monday in January
              presidents_day:
                selected: false
                name: Presidents' Day
                date: Third Monday in February
              memorial_day:
                selected: true
                name: Memorial Day
                date: Last Monday in May
              juneteenth:
                selected: false
                name: Juneteenth
                date: June 19
              independence_day:
                selected: true
                name: Independence Day
                date: July 4
              labor_day:
                selected: false
                name: Labor Day
                date: First Monday in September
              columbus_day:
                selected: false
                name: Columbus Day (Indigenous Peoples' Day)
                date: Second Monday in October
              veterans_day:
                selected: true
                name: Veterans Day
                date: November 11
              thanksgiving:
                selected: true
                name: Thanksgiving
                date: Fourth Thursday in November
              christmas_day:
                selected: true
                name: Christmas Day
                date: December 25
            employees:
              uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
        description: Representation of a Holiday Pay Policy
        properties:
          version:
            type: string
            description: >-
              The current version of the object. See the [versioning
              guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer)
              for information on how to use this field.
          company_uuid:
            type: string
            description: A unique identifier for the company owning the holiday pay policy
          federal_holidays:
            type: array
            description: List of the eleven supported federal holidays and their details
            items:
              type: object
              properties:
                new_years_day:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
                mlk_day:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
                presidents_day:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
                memorial_day:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
                juneteenth:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
                independence_day:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
                labor_day:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
                columbus_day:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
                veterans_day:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
                thanksgiving:
                  type: object
                  properties:
                    selected:
                      type: boolean
                    name:
                      type: string
                    date:
                      type: string
          employees:
            type: array
            description: List of employee uuids under a time off policy
            items:
              type: object
              properties:
                uuid:
                  type: string
        required:
          - version
          - company_uuid
          - federal_holidays
          - employees
      Paid-Holidays:
        type: object
        description: >-
          Representation of a company's paid holidays as descibed by their Holiday
          Pay Policy
        properties:
          schema:
            type: object
            properties:
              holiday_key:
                type: string
                description: the holiday's identifier
              holiday_name:
                type: string
                description: the holiday's official name
              start_date:
                type: string
                description: the holiday's start date (YYYY-MM-DD)
              end_date:
                type: string
                description: the holiday's end date (YYYY-MM-DD)
      Minimum-Wage:
        type: object
        x-examples:
          example:
            uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
            authority: State
            wage: '13.0'
            wage_type: Regular
            effective_date: '2022-01-01'
            notes: Employers with 6 or more employees
        description: Representation of a Minimum Wage
        properties:
          uuid:
            type: string
            description: unique identifier of a minimum wage
          wage:
            type: string
            format: float
            description: >-
              The wage rate for a minimum wage record. Represented as a float,
              e.g. "15.0".
          wage_type:
            type: string
            description: >-
              The type of wage the minimum wage applies to, e.g. "Regular",
              "Regular-Industry-Specific".
          effective_date:
            type: string
            format: date
            description: The date the minimum wage rule is effective on.
          authority:
            type: string
            description: >-
              The governing authority that created the minimum wage, e.g. "City",
              "State", or "Federal".
          notes:
            type: string
            description: Description of parties the minimum wage applies to.
        required:
          - uuid
          - wage
          - wage_type
          - effective_date
          - authority
      Notification:
        type: object
        x-examples:
          example:
            uuid: 7b1d0df1-6403-4a06-8768-c1dd7d24d27a
            company_uuid: 88f7cca1-dcad-4d20-84db-7fb80303d69f
            title: 'Action required: Additional information needed to process payroll'
            message: >-
              If we do not receive this information as soon as possible, your
              payroll may not be processed on time.
            category: information_request
            created_at: '2022-01-01T00:00:00.000Z'
        description: Representation of a notification
        properties:
          uuid:
            type: string
            description: Unique identifier of a notification.
          company_uuid:
            type: string
            description: Unique identifier of the company to which the notification belongs.
          title:
            type: string
            description: >-
              The title of the notification. This highlights the actionable
              component of the notification.
          message:
            type: string
            description: >-
              The message of the notification. This provides additional context
              for the user and recommends a specific action to resolve the
              notification.
          category:
            type: string
            description: The notification's category.
          actionable:
            type: boolean
            description: >-
              Indicates whether a notification requires action or not. If false,
              the notification provides critical information only.
          published_at:
            type: string
            description: Timestamp of when the notification was published.
          due_at:
            type: string
            description: >-
              Timestamp of when the notification is due. If the notification has
              no due date, this field will be null.
          resources:
            type: array
            description: An array of entities relevant to the notification
            items:
              type: object
              properties:
                entity_type:
                  type: string
                  description: >-
                    The type of entity being described, could be “Contractor”,
                    “Employee”, “BankAccount”, “Payroll”, “ContractorPayment”,
                    “RecoveryCase”, or “Signatory”
                entity_uuid:
                  type: string
                  description: Unique identifier of the entity
                reference_type:
                  type: string
                  description: >-
                    Optional. The type of a resource that is related to the one
                    described by entity_type and entity_uuid. For instance, if the
                    entity_type is “BankAccount”, the reference_type could be the
                    “Employee” or “Contractor” to whom the bank account belongs.
                reference_uuid:
                  type: string
                  description: Optional. Unique identifier of the reference.
              required:
                - entity_type
                - entity_uuid
      Event:
        type: object
        x-examples:
          example:
            uuid: f7397a24-57ad-4fae-b011-d258e8232900
            event_type: employee.bank_account.created
            resource_type: Company
            resource_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
            entity_type: BankAccount
            entity_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
            timestamp: 1686784995
        description: Representation of an Event
        properties:
          uuid:
            type: string
            description: Unique identifier for the event.
          event_type:
            type: string
            description: >-
              Description of the event (e.g., payroll.submitted, or
              company.form.signed).
          resource_type:
            type: string
            enum:
              - Company
            description: Name of the parent resource of the described entity.
          resource_uuid:
            type: string
            description: Unique identifier for the parent resource.
          entity_type:
            type: string
            description: Name of the entity that the event corresponds to.
          entity_uuid:
            type: string
            description: Unique identifier for the entity.
          timestamp:
            type: integer
            description: >-
              Time at which this event was created. Measured in seconds since the
              Unix epoch.
      Invoice-Data:
        type: object
        x-examples:
          example:
            active_companies:
              - company_uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                active_employees: 5
                active_contractors: 3
                initial_invoice_period: 2022-01
              - company_uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                active_employees: 0
                active_contractors: 1
                initial_invoice_period: 2023-05
        description: Representation of a partners invoice data
        properties:
          active_companies:
            type: array
            description: The list of companies that are active within the invoice period
            items:
              type: object
              properties:
                company_uuid:
                  type: string
                  description: >-
                    unique identifier for the company associated with the invoice
                    data
                active_employees:
                  type: integer
                  description: >-
                    The number of active employees the company was or will be
                    invoiced for that invoice period. Active employees are
                    calculated as the count of onboarded employees hired before
                    the end of the invoice period and not terminated before the
                    start of the invoice period.
                active_contractors:
                  type: integer
                  description: >-
                    The number of active contractors the company was or will be
                    invoiced for that invoice period. Active contractors are
                    calculated as any contractor with an active contractor payment
                    during the invoice period.
                initial_invoice_period:
                  type: string
                  description: >-
                    The first invoice period for the company. This will either be
                    the invoice period of the first invoice-able event (first
                    payroll or contractor payment) or the date they migrated to
                    embedded, whichever is later.
      Recovery-Case:
        type: object
        x-examples:
          example:
            uuid: e83d273e-4ae9-4b61-9c71-4030c2f73093
            company_uuid: c5e3e3e9-732f-4762-849e-20b5cec9036f
            status: open
            latest_error_code: R01
            original_debit_date: '2023-10-11'
            check_date: '2023-10-13'
            payroll_uuid: 210f2034-fb4a-4059-b109-6c3b5efe499d
            contractor_payment_uuids: null
            amount_outstanding: 10499.43
            event_total_amount: 5912.07
        description: Representation of a recovery case
        properties:
          uuid:
            type: string
            description: Unique identifier of an recovery case
          company_uuid:
            type: string
            description: Unique identifier of the company to which the recovery case belongs
          status:
            type: string
            description: Status of the recovery case
            enum:
              - open
              - redebit_initiated
              - recovered
              - lost
          latest_error_code:
            type: string
            description: >-
              The latest bank error code for the recovery case. See [this
              article](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-2/)
              for a complete list of ACH return codes.
          original_debit_date:
            type: string
            description: >-
              Date when funds were originally debited from the company's bank
              account
          check_date:
            type: string
            description: Check date for the associated payroll or contractor payments
          payroll_uuid:
            type: string
            description: >-
              The uuid of the associated payroll for which the recovery case was
              created. If the recovery case was created for a contractor payment,
              this field will be null.
          contractor_payment_uuids:
            type: array
            description: >-
              The uuids of the associated contractor payments for which the
              recovery case was created. If the recovery case was created for a
              payroll, this field will be null.
            items:
              type: string
          amount_outstanding:
            type: string
            description: Amount outstanding for the recovery case
          event_total_amount:
            type: string
            description: Total amount to be debited from the payroll or contractor payments
      Ach-Transaction:
        type: object
        x-examples:
          example:
            uuid: 123e4567-e89b-12d3-a456-426655440000,
            company_uuid: 456e7890-e12b-34c5-d678-901234567890,
            payment_event_type: Payroll,
            payment_event_uuid: 789e0123-e45f-67ab-c890-123456789012,
            recipient_type: Employee,
            recipient_uuid: 012e3456-f78d-90ab-12cd-345678901234,
            error_code: null,
            transaction_type: Credit employee pay,
            payment_status: submitted,
            payment_direction: credit,
            payment_event_check_date: 2023-10-02,
            payment_date: 2023-10-17,
            amount: 123.00,
            description: PAY 380654
        description: Representation of an ACH transaction
        properties:
          uuid:
            type: string
            description: Unique identifier of an ACH transaction
          company_uuid:
            type: string
            description: >-
              Unique identifier of the company to which the ACH transaction
              belongs
          payment_event_type:
            type: string
            description: The type of payment event associated with the ACH transaction
            enum:
              - Payroll
              - ContractorPayment
          payment_event_uuid:
            type: string
            description: >-
              Unique identifier for the payment event associated with the ACH
              transaction
          recipient_type:
            type: string
            description: The type of recipient associated with the ACH transaction
            enum:
              - Employee
              - Contractor
          recipient_uuid:
            type: string
            description: >-
              Unique identifier for the recipient associated with the ACH
              transaction
          error_code:
            type: string
            description: >-
              The error code associated with the ACH transaction, if any. If there
              is no error on the ACH transaction, this field will be nil. See
              [this
              article](https://engineering.gusto.com/how-ach-works-a-developer-perspective-part-2/)
              for a complete list of ACH return codes.
          transaction_type:
            type: string
            description: The type of transaction associated with the ACH transaction
          payment_status:
            type: string
            description: The status of the ACH transaction
            enum:
              - unsubmitted
              - submitted
              - successful
              - failed
          payment_direction:
            type: string
            description: The direction of the payment
            enum:
              - credit
              - debit
          payment_event_check_date:
            type: string
            description: >-
              The date of the payment event check associated with the ACH
              transaction
          payment_date:
            type: string
            description: The date of the payment associated with the ACH transaction
          amount:
            type: string
            description: >-
              The amount of money moved by the ACH transaction. This amount is
              always non-negative.
          description:
            type: string
            description: >-
              The description of the ACH transaction. Can be used to identify the
              ACH transaction on the recipient's bank statement.
    securitySchemes:
      CompanyAccessAuth:
        type: http
        scheme: bearer
        description: Company-level authentication
      SystemAccessAuth:
        type: http
        scheme: bearer
        description: System-level authentication
    responses:
      Unprocessable-Entity-Error-Object:
        description: >
          Unprocessable Entity 
            
          This may happen when the body of your request contains errors such as
          `invalid_attribute_value`, or the request fails due to an
          `invalid_operation`. See the [Errors
          Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories)
          guide for more details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
            examples:
              Example:
                value:
                  errors:
                    - error_key: base
                      category: payroll_blocker
                      message: >-
                        Company must complete all onboarding requirements in order
                        to run payroll.
                      metadata:
                        key: needs_onboarding
      Not-Found-Error-Object:
        description: >
          Not Found 
            
          The requested resource does not exist. Make sure the provided ID/UUID is
          valid.
      Employment-Not-Found-Error-Object:
        description: >-
          Not Found


          * The requested resource does not exist. Make sure the provided ID/UUID
          is valid.

          * The employee's employment is not in the right state.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unprocessable-Entity-Error-Object'
            examples:
              Example:
                value:
                  errors:
                    - error_key: employement
                      category: incorrect_state
                      message: The employee's employment is not in the right state.
      Payroll-Blockers-Error:
        description: Payroll Blockers Error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payroll-Blockers-Error'
            examples:
              Example:
                value:
                  errors:
                    - error_key: base
                      category: payroll_blocker
                      message: >-
                        Company must complete all onboarding requirements in order
                        to run payroll.
                      metadata:
                        key: needs_onboarding
      Authentication-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
            examples:
              Example:
                value:
                  access_token: 737HdeXfIqgx-NfaUFRuhV7JDe6ns6ptanJSMuQzjlc
                  token_type: bearer
                  expires_in: 7200
                  refresh_token: iEjL96L9Pndwmi-xVX3Q-xbrvvhnjHYGX87sopgGJ8E
                  scope: ach_transactions:read benefits:read companies:read
                  created_at: '2023-09-12T16:42:25.000-07:00'
      Holiday-Pay-Policy-Object:
        description: Holiday Pay Policy Object Example
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Holiday-Pay-Policy'
            examples:
              Example:
                value:
                  version: 1b37938b017c7fd7116bada007072290
                  company_uuid: b7845189-f12b-4378-918a-d2b9de3dc4ea
                  federal_holidays:
                    new_years_day:
                      selected: false
                      name: New Year's Day
                      date: January 1
                    mlk_day:
                      selected: true
                      name: Martin Luther King, Jr. Day
                      date: Third Monday in January
                    presidents_day:
                      selected: false
                      name: Presidents' Day
                      date: Third Monday in February
                    memorial_day:
                      selected: true
                      name: Memorial Day
                      date: Last Monday in May
                    juneteenth:
                      selected: false
                      name: Juneteenth
                      date: June 19
                    independence_day:
                      selected: true
                      name: Independence Day
                      date: July 4
                    labor_day:
                      selected: false
                      name: Labor Day
                      date: First Monday in September
                    columbus_day:
                      selected: false
                      name: Columbus Day (Indigenous Peoples' Day)
                      date: Second Monday in October
                    veterans_day:
                      selected: true
                      name: Veterans Day
                      date: November 11
                    thanksgiving:
                      selected: true
                      name: Thanksgiving
                      date: Fourth Thursday in November
                    christmas_day:
                      selected: true
                      name: Christmas Day
                      date: December 25
                  employees:
                    uuid: 1ca3cd25-3eda-48c6-ac88-f0e7fb91a15a
      Paid-Holidays-Object:
        description: Paid Holidays Object Example
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paid-Holidays'
            examples:
              Example:
                value:
                  holiday_key: veterans_day
                  holiday_name: Veterans Day
                  start_date: '2023-11-11'
                  end_date: '2023-11-11'
      Department-Object:
        description: Department Object Example
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
            examples:
              Example:
                value:
                  uuid: 56260b3d-c375-415c-b77a-75d99f717193
                  company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                  title: Stage Hand
                  version: d90440dd464601d1c8f4e9e240dfb7a6
                  employees:
                    - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                  contractors:
                    - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
      Department-List:
        description: List of departments
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Department'
            examples:
              Example:
                value:
                  - uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    title: Stage Hand
                    version: d90440dd464601d1c8f4e9e240dfb7a6
                    employees:
                      - uuid: 41199375-a999-4414-9f40-d9bf596b134d
                    contractors: []
                  - uuid: ec5c8a85-3233-4f39-a9f5-fb1ab7b5f5f3
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    title: Actors
                    version: 34f39a30b45d077cb83aed2df4810d74
                    employees:
                      - uuid: 7ee4aca1-814b-4034-b0f8-07f93cc679d1
                    contractors: []
                  - uuid: 1802465d-4f68-4865-920c-1307ab095f12
                    company_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    title: Band
                    version: 1fe3076d35ef7c97d0ae68c5f4df0acd
                    employees:
                      - uuid: a73955be-c009-44dc-915e-6246e2bdedbb
                    contractors:
                      - uuid: 3488549f-60e4-494f-a34a-9d8aad3aabf5
      Employee-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
            examples:
              Example:
                value:
                  uuid: 4b3f930f-82cd-48a8-b797-798686e12e5e
                  first_name: Isom
                  middle_initial: null
                  last_name: Jaskolski
                  email: dane7757869450111550@botsford.net
                  company_uuid: a007e1ab-3595-43c2-ab4b-af7a5af2e365
                  manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                  version: 1c7ba9d62c8bafbfff998ffccad5d296
                  department: Stage Hand
                  department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                  terminated: false
                  two_percent_shareholder: false
                  onboarded: true
                  onboarding_status: onboarding_completed
                  jobs:
                    - uuid: 428a653a-0745-4db4-9c80-558288d416fa
                      version: 6c0ed1521e8b86eb36bd4455a63a2dac
                      employee_uuid: f0689739-1985-49f3-b9ba-84562e71e85f
                      current_compensation_uuid: c9fd719b-8b07-48f3-8a4c-f447d2c59669
                      payment_unit: Year
                      primary: true
                      title: Client Support Director
                      compensations:
                        - uuid: 145660ed-6fcc-4211-8915-18e2786290a2
                          version: 2cd4b18662395eb53bcf80d5b5447f36
                          payment_unit: Year
                          flsa_status: Exempt
                          job_uuid: 857feae3-414e-445d-b28b-2eb3ef50155e
                          effective_date: '2021-01-20'
                          rate: '70000.00'
                          adjust_for_minimum_wage: false
                          minimum_wages: []
                      rate: '70000.00'
                      hire_date: '2020-01-20'
                  eligible_paid_time_off:
                    - name: Sick Hours
                      policy_name: Sick Policy
                      policy_uuid: 9940d205-9904-4e55-9fec-652628e84af7
                      accrual_unit: Hour
                      accrual_rate: '208.0'
                      accrual_method: per_hour_worked
                      accrual_period: Year
                      accrual_balance: '31.8'
                      maximum_accrual_balance: '240.0'
                      paid_at_termination: false
                    - name: Vacation Hours
                      policy_name: Vacation Policy
                      policy_uuid: ab59de61-239f-4805-933b-0e3360ed291c
                      accrual_unit: Hour
                      accrual_rate: '208.0'
                      accrual_period: Year
                      accrual_balance: '77.8'
                      maximum_accrual_balance: '240.0'
                      paid_at_termination: true
                  terminations: []
                  custom_fields:
                    - id: ee515986-f3ca-49da-b576-2691b95262f9
                      company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                      name: employee_level
                      description: Employee Level
                      type: text
                      value: '2'
                      selection_options: null
                    - id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59
                      company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                      name: t-shirt size
                      description: What is your t-shirt size?
                      type: text
                      value: md
                      selection_options: null
                    - id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59
                      company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                      name: favorite fruit
                      description: Which is your favorite fruit?
                      type: radio
                      value: apple
                      selection_options:
                        - apple
                        - banana
                        - orange
                  garnishments: []
                  date_of_birth: '1986-06-25'
                  has_ssn: false
                  ssn: ''
                  phone: '1234567890'
                  preferred_first_name: Angel
                  work_email: angel.jaskolski@example.com
      Employee-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee'
            examples:
              Example:
                value:
                  - uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
                    first_name: Nicole
                    middle_initial: M
                    last_name: Boehm
                    email: kory7757869450111548@barton-hermiston.io
                    company_uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                    manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                    version: 414dedaca594b77135e0b8d2f398516d
                    department: Stage Hand
                    department_uuid: 1802465d-4f68-4865-920c-1307ab095f12
                    terminated: false
                    two_percent_shareholder: false
                    onboarded: true
                    onboarding_status: onboarding_completed
                    jobs:
                      - uuid: 5d5e3ce5-ea8f-4885-90e5-7ebaed03f7c5
                        version: 91179081a7309c9fbd31bb3cf7b9893e
                        employee_uuid: a987bce1-6d06-43f8-9978-9db886f479fb
                        current_compensation_uuid: 798a962f-0fcf-491e-9b71-cfa6a1db114f
                        payment_unit: Hour
                        primary: true
                        title: Client Support Manager
                        compensations:
                          - uuid: 94f17a77-cfe5-436a-af94-422bbf8248ff
                            version: 233f0096a8015e62d9795fadf1fd300d
                            payment_unit: Hour
                            flsa_status: Nonexempt
                            job_uuid: 64711ac0-83ff-4aaf-bec1-db72f5a44e56
                            effective_date: '2021-01-20'
                            rate: '22.00'
                            adjust_for_minimum_wage: false
                            minimum_wages: []
                        rate: '22.00'
                        hire_date: '2020-01-20'
                    eligible_paid_time_off:
                      - name: Sick Hours
                        policy_name: Sick Policy
                        policy_uuid: 9940d205-9904-4e55-9fec-652628e84af7
                        accrual_unit: Hour
                        accrual_rate: '208.0'
                        accrual_method: per_hour_worked
                        accrual_period: Year
                        accrual_balance: '71.0'
                        maximum_accrual_balance: '240.0'
                        paid_at_termination: false
                      - name: Vacation Hours
                        policy_name: Vacation Policy
                        policy_uuid: 8b312f0e-30e7-4810-9c06-1177a6484f2d
                        accrual_unit: Hour
                        accrual_rate: '208.0'
                        accrual_period: Year
                        accrual_balance: '34.0'
                        maximum_accrual_balance: '240.0'
                        paid_at_termination: true
                    terminations: []
                    garnishments: []
                    date_of_birth: '1996-05-08'
                    has_ssn: true
                    ssn: ''
                    phone: '1234567890'
                    preferred_first_name: Vanessa
                    work_email: vanessa.boehm@example.com
                  - uuid: d7cb289a-af62-4120-9cd5-acda324b5c04
                    first_name: Maci
                    middle_initial: M
                    last_name: Cassin
                    email: claud_reinger7757869450111549@gutkowski.net
                    company_uuid: 4522d043-5731-406d-a129-de1808042a32
                    manager_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                    version: e867459e1360fa71e78b88142923d341
                    department: Band
                    department_uuid: 1802465d-4f68-4865-920c-1307ab095f12
                    terminated: false
                    two_percent_shareholder: false
                    onboarded: true
                    onboarding_status: onboarding_completed
                    jobs:
                      - uuid: 62a00cf7-342b-465e-a151-ecd295152be0
                        version: d0e719137f89ca3dd334dd4cc248ffbb
                        employee_uuid: 5e53e257-c8d6-45aa-aa8a-ec99283a3acd
                        current_compensation_uuid: 93e5da92-173b-4faa-a0bd-d1a8dee68be0
                        payment_unit: Year
                        primary: true
                        title: Account Director
                        compensations:
                          - uuid: 1bad5177-c4ed-432e-ab43-66055d40c3a5
                            version: 994b75511d1debac5d7e2ddeae13679f
                            payment_unit: Year
                            flsa_status: Exempt
                            job_uuid: 1214875b-f43d-4267-bf2f-a6d2c298ff3d
                            effective_date: '2021-01-20'
                            rate: '78000.00'
                            adjust_for_minimum_wage: false
                            minimum_wages: []
                        rate: '78000.00'
                        hire_date: '2020-01-20'
                    eligible_paid_time_off:
                      - name: Sick Hours
                        policy_name: Sick Policy
                        policy_uuid: 8b312f0e-30e7-4810-9c06-1177a6484f2d
                        accrual_unit: Hour
                        accrual_rate: '208.0'
                        accrual_method: per_hour_worked
                        accrual_period: Year
                        accrual_balance: '74.0'
                        maximum_accrual_balance: '240.0'
                        paid_at_termination: false
                      - name: Vacation Hours
                        policy_name: Vacation Policy
                        policy_uuid: 0d4c755e-50ac-4c54-b46e-81bdfa03da5b
                        accrual_unit: Hour
                        accrual_rate: '208.0'
                        accrual_period: Year
                        accrual_balance: '16.0'
                        maximum_accrual_balance: '240.0'
                        paid_at_termination: true
                    terminations: []
                    garnishments: []
                    custom_fields:
                      - id: ee515986-f3ca-49da-b576-2691b95262f9
                        company_custom_field_id: ea7e5d57-6abb-47d7-b654-347c142886c0
                        name: employee_level
                        description: Employee Level
                        type: text
                        value: '2'
                        selection_options: null
                      - id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59
                        company_custom_field_id: 299650e4-e970-4acf-9bf0-6f05585d20ba
                        name: t-shirt size
                        description: What is your t-shirt size?
                        type: text
                        value: md
                        selection_options: null
                      - id: 3796e08d-c2e3-434c-b4de-4ce1893e7b59
                        company_custom_field_id: 024ec137-6c92-43a3-b061-14a9720531d6
                        name: favorite fruit
                        description: Which is your favorite fruit?
                        type: radio
                        value: apple
                        selection_options:
                          - apple
                          - banana
                          - orange
                    date_of_birth: '1995-09-21'
                    has_ssn: true
                    ssn: ''
                    phone: '1234567890'
                    preferred_first_name: Denis
                    work_email: denis.cassin@example.com
      Employee-Address-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-Address'
            examples:
              Example:
                value:
                  uuid: 56260b3d-c375-415c-b77a-75d99f717193
                  employee_id: 12345
                  street_1: 644 Fay Vista
                  street_2: Suite 842
                  city: Richmond
                  state: VA
                  zip: '23218'
                  country: USA
                  active: false
                  effective_date: '2021-01-01'
                  courtesy_withholding: true
      Employee-Address-List:
        description: List of employee addresses
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee-Address'
            examples:
              Example:
                value:
                  - uuid: 56260b3d-c375-415c-b77a-75d99f717193
                    employee_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    street_1: 644 Fay Vista
                    street_2: Suite 842
                    city: Richmond
                    state: VA
                    zip: '23218'
                    country: USA
                    active: false
                    effective_date: '2021-01-01'
                    courtesy_withholding: true
                  - uuid: d9f74049-8769-4fba-8e0f-eceef2da4e6b
                    employee_uuid: 7087a288-8349-4632-b92e-bc94fb79f29e
                    street_1: 100 5th Ave
                    street_2: Suite 555
                    city: New York
                    state: NY
                    zip: '10001'
                    country: USA
                    active: true
                    effective_date: '2022-03-03'
                    courtesy_withholding: true
      Employee-Work-Address-List:
        description: List of employee work addresses
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee-Work-Address'
            examples:
              Example:
                value:
                  - uuid: fc5b87dc-8d88-400d-b2da-c3587a7e5b15
                    employee_uuid: 7597f3e3-31d4-4953-83a5-f95be78d2fe2
                    location_uuid: d9456c94-f561-40d2-afec-919da5f59196
                    effective_date: '2022-01-01'
                    active: false
                    version: 139f9769a2e543e6a1259173e1ee3b8d
                    street_1: 800 Adolfo Gardens
                    street_2: Suite 419
                    city: Bremen
                    state: AL
                    zip: '35033'
                    country: USA
                  - uuid: be1c2e24-af86-4c36-b34e-3a55dbcdbdab
                    employee_uuid: 7597f3e3-31d4-4953-83a5-f95be78d2fe2
                    location_uuid: 6a119be7-b4b0-4e27-aaa0-89d5f2524635
                    effective_date: '2023-01-01'
                    active: true
                    version: bbe8d4c741339c6b9e0e2e1c1b120816
                    street_1: 2216 Icie Villages
                    street_2: Apt. 798
                    city: Big Delta
                    state: AK
                    zip: '99737'
                    country: USA
      Company-Onboarding-Status-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company-Onboarding-Status'
            examples:
              Example:
                value:
                  uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                  onboarding_completed: false
                  onboarding_steps:
                    - title: Add Your Company's Addresses
                      id: add_addresses
                      required: true
                      completed: true
                      skippable: false
                      requirements: []
                    - title: Enter Your Federal Tax Information
                      id: federal_tax_setup
                      required: true
                      completed: true
                      skippable: false
                      requirements: []
                    - title: Select Industry
                      id: select_industry
                      required: true
                      completed: true
                      skippable: false
                      requirements:
                        - add_addresses
                        - add_employees
                    - title: Add Your Bank Account
                      id: add_bank_info
                      required: true
                      completed: true
                      skippable: false
                      requirements: []
                    - title: Add Your Employees
                      id: add_employees
                      required: true
                      completed: true
                      skippable: true
                      requirements:
                        - add_addresses
                    - title: Enter Your State Tax Information
                      id: state_setup
                      required: true
                      completed: false
                      skippable: false
                      requirements:
                        - add_addresses
                        - add_employees
                    - title: Select a Pay Schedule
                      id: payroll_schedule
                      required: true
                      completed: false
                      skippable: false
                      requirements: []
                    - title: Sign Documents
                      id: sign_all_forms
                      required: true
                      completed: false
                      skippable: false
                      requirements:
                        - add_employees
                        - federal_tax_setup
                        - state_setup
                        - add_bank_info
                        - payroll_schedule
                    - title: Verify Your Bank Account
                      id: verify_bank_info
                      required: true
                      completed: false
                      skippable: false
                      requirements:
                        - add_bank_info
      Webhook-Subscription-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook-Subscription'
            examples:
              Example:
                value:
                  uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                  url: https://the-partner-app.com/subscriber
                  status: verified
                  subscription_types:
                    - BankAccount
                    - Company
                    - CompanyBenefit
                    - Contractor
                    - ContractorPayment
                    - Employee
                    - EmployeeBenefit
                    - EmployeeJobCompensation
                    - ExternalPayroll
                    - Form
                    - Location
                    - Notification
                    - Payroll
                    - PaySchedule
                    - Signatory
      Webhook-Subscriptions-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Webhook-Subscription'
            examples:
              Example:
                value:
                  - uuid: dcceb38a-46be-4110-9d1d-1b3384c3b906
                    url: >-
                      https://6116-2603-6000-8900-3d42-58e7-f1e3-b394-1f21.ngrok.io/subscriber
                    status: pending
                    subscription_types:
                      - BankAccount
                      - Company
                      - CompanyBenefit
                      - Contractor
                      - ContractorPayment
                      - Employee
                      - EmployeeBenefit
                      - EmployeeJobCompensation
                      - ExternalPayroll
                      - Form
                      - Location
                      - Notification
                      - Payroll
                      - PaySchedule
                      - Signatory
      Company-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
            examples:
              Example:
                value:
                  ein: 00-0000001
                  entity_type: C-Corporation
                  tier: core
                  is_suspended: false
                  company_status: Approved
                  uuid: c7a07c73-a703-4462-9343-1b181182b6e0
                  name: Shoppe Studios LLC
                  trade_name: Record Shoppe
                  slug: record-shoppe
                  is_partner_managed: false
                  pay_schedule_type: by_department
                  join_date: '2023-03-01'
                  funding_type: ach
                  locations:
                    - street_1: 412 Kiera Stravenue
                      street_2: Suite 391
                      city: San Francisco
                      state: CA
                      zip: '94107'
                      country: USA
                      active: true
                    - street_1: 644 Fay Vista
                      street_2: Suite 842
                      city: Richmond
                      state: VA
                      zip: '23218'
                      country: USA
                      active: true
                  compensations:
                    hourly:
                      - name: Overtime
                        multiple: 1.5
                      - name: Double overtime
                        multiple: 2
                      - name: Regular
                        multiple: 1
                      - name: Outstanding vacation
                        multiple: 1
                      - name: Holiday
                        multiple: 1
                      - name: Emergency sick - self care
                        multiple: 1
                      - name: Emergency sick - caring for others
                        multiple: 1
                      - name: FMLA Public Health Emergency Leave
                        multiple: 1
                      - name: Regular Hours
                        multiple: 1
                    fixed:
                      - name: Bonus
                      - name: Commission
                      - name: Paycheck Tips
                      - name: Cash Tips
                      - name: Correction Payment
                      - name: Severance
                      - name: Minimum Wage Adjustment
                      - name: Reimbursement
                    paid_time_off:
                      - name: Vacation Hours
                      - name: Sick Hours
                      - name: Holiday Hours
                  primary_signatory:
                    first_name: Alda
                    middle_initial: ''
                    last_name: Carter
                    phone: 1-565-710-7558
                    email: louie.hessel7757869450111547@zemlak.biz
                    home_address:
                      street_1: 524 Roob Divide
                      street_2: Suite 565
                      city: San Francisco
                      state: CA
                      zip: '94107'
                      country: USA
                  primary_payroll_admin:
                    first_name: Ian
                    last_name: Labadie
                    phone: 1-565-710-7559
                    email: louie.hessel7757869450111547@zemlak.biz
      Signatory-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signatory'
            examples:
              Example:
                value:
                  uuid: f8c653dc-0094-41fb-8670-45d6399afade
                  first_name: Bob
                  last_name: Johnson
                  title: Owner
                  phone: '4239879876'
                  birthday: '2002-10-31'
                  email: olin.okuneva@denesik.us
                  is_admin: false
                  has_ssn: true
                  version: 49ea586f528411f5cfadfd54452b2423
                  home_address:
                    street_1: 524 Roob Divide
                    street_2: Suite 565
                    city: San Francisco
                    state: CA
                    zip: '94107'
                    country: USA
                  identity_verification_status: Skipped
      Contractor-Address-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor-Address'
            examples:
              Example:
                value:
                  version: 23323096a8015e32d9795fadf1fd300d
                  contractor_uuid: 9779767c-6044-48e0-bf68-aeb370b9a2e7
                  street_1: 999 Kiera Stravenue
                  street_2: Suite 391
                  city: San Francisco
                  state: CA
                  zip: 94107
                  country: USA
                  active: true
      Employment-History-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  hire_date:
                    type: string
                    description: The employee's start day of work for an employment.
                  termination_date:
                    type: string
                    description: The employee's last day of work for an employment.
                  file_new_hire_report:
                    type: boolean
                    description: >-
                      The boolean flag indicating whether Gusto will file a new
                      hire report for the employee.
                  two_percent_shareholder:
                    type: boolean
                    description: >-
                      Whether the employee is a two percent shareholder of the
                      company. This field only applies to companies with an S-Corp
                      entity type.
                  employment_status:
                    type: string
                    description: >-
                      The employee's employment status. Supplying an invalid
                      option will set the employment_status to *not_set*.
                    enum:
                      - part_time
                      - full_time
                      - part_time_eligible
                      - variable
                      - seasonal
                      - not_set
                x-examples:
                  example-1:
                    hire_date: '2023-01-30'
                    termination_date: '2023-03-30'
                    file_new_hire_report: false
                    two_percent_shareholder: false
                    employment_status: seasonal
            examples:
              Example:
                value:
                  - hire_date: '2023-05-30'
                    termination_date: null
                    file_new_hire_report: true
                    two_percent_shareholder: false
                    employment_status: seasonal
                  - hire_date: '2021-02-02'
                    termination_date: '2023-03-01'
                    file_new_hire_report: false
                    two_percent_shareholder: false
                    employment_status: full_time
      Rehire-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rehire'
            examples:
              Example:
                value:
                  version: 2e930d43acbdb241f8f14a2d531fa417
                  employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                  active: false
                  effective_date: '2024-01-01'
                  file_new_hire_report: false
                  work_location_uuid: d2c80d44-857b-4d4d-bce4-23ae52cc863b,
                  two_percent_shareholder: false
                  employment_status: full_time
      Unprocessed-Termination-Pay-Period-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Unprocessed-Termination-Pay-Period'
            examples:
              Example:
                value:
                  - start_date: '2023-01-11'
                    end_date: '2023-01-24'
                    check_date: '2023-01-28'
                    debit_date: '2023-01-26'
                    employee_name: Mary Warner
                    employee_uuid: 094f6ded-a790-4651-87e6-4a7f15dec7c6
                    pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                  - start_date: '2023-01-25'
                    end_date: '2023-02-07'
                    check_date: '2023-02-10'
                    debit_date: '2023-02-08'
                    employee_name: Mary Warner
                    employee_uuid: 094f6ded-a790-4651-87e6-4a7f15dec7c6
                    pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
      Accruing-Time-Off-Hour-Object:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Accruing-Time-Off-Hour'
            examples:
              Example:
                value:
                  - time_off_policy_uuid: c3a15554-f124-415d-b2c4-90b430fd8eb1
                    hours: '3.2'
                  - time_off_policy_uuid: 386fc48d-52d2-4009-87b3-368f74f6b3df
                    hours: '6.0'
      Pay-Schedule-Assignment-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pay-Schedule-Assignment'
            examples:
              Example:
                value:
                  type: by_employee
                  employees:
                    employee_uuid: f0238368-f2cf-43e2-9a07-b0265f2cec69
                    pay_schedule_uuid: c277ac52-9871-4a96-a1e6-0c449684602a
      Pay-Schedule-Assignment-Preview-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pay-Schedule-Assignment-Preview'
            examples:
              Example:
                value:
                  type: hourly_salaried
                  employee_changes:
                    employee_uuid: 43b39ada-dc49-4879-9594-fe95f67ae434
                    first_name: Penny
                    last_name: Parker
                    pay_frequency: Twice per month — Salaried pay schedule
                    first_pay_period:
                      pay_schedule_uuid: 3f029a58-155d-4c30-8361-cc266b2c1f11
                      start_date: '2023-07-01'
                      end_date: '2023-08-01'
                      check_date: '2023-08-02'
                    transition_pay_period:
                      start_date: '2023-06-20'
                      end_date: '2023-06-30'
      Benefit-Summary-Object:
        description: Benefit summary response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Benefit-Summary'
            examples:
              Example:
                value:
                  start_date: '2022-01-01'
                  end_date: '2022-12-31'
                  description: Simple IRA
                  company_benefit_deduction: 60
                  company_benefit_contribution: 30
                  employees:
                    - uuid: 54b7114f-f5e2-4f4b-911b-5cd5ad9032b0
                      company_benefit_deduction: 60
                      company_benefit_contribution: 30
                      benefit_deduction: 660
                      benefit_contribution: 330
                      gross_pay: 18000
                      payroll_benefits:
                        - payroll_uuid: 8cc3471b-9da5-47df-88ea-f238c7cb968b
                          payroll_type: Regular
                          check_date: '2022-03-01'
                          gross_pay: 3000
                          company_benefit_deduction: 10
                          company_benefit_contribution: 5
                          pay_period:
                            start_date: '2022-02-01'
                            end_date: '2022-02-28'
                        - payroll_uuid: d9d92786-722b-4bf7-bb32-79140418d349
                          payroll_type: Bonus
                          check_date: '2022-12-31'
                          gross_pay: 3000
                          company_benefit_deduction: 20
                          company_benefit_contribution: 10
                          pay_period:
                            start_date: nil
                            end_date: nil
      Company-Benefit-With-Employee-Benefits-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company-Benefit-With-Employee-Benefits'
            examples:
              Example:
                value:
                  uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                  version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                  active: true
                  description: Kaiser Permanente
                  deletable: true
                  supports_percentage_amounts: true
                  responsible_for_employer_taxes: false
                  responsible_for_employee_w2: false
                  employee_benefits:
                    - employee_uuid: ae44a0b2-3c89-41e1-91c8-5f8224a779ca
                      company_benefit_uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                      active: true
                      deduct_as_percentage: false
                      employee_deduction: 3
                      company_contribution: 0
                      uuid: 9988f241-9aee-4383-bfca-eac79cf58135
                      contribution:
                        type: amount
                        value: 0
      Employee-Pay-Stubs-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee-Pay-Stub'
            examples:
              Example:
                value:
                  - uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                    check_date: '2023-11-24'
                    gross_pay: 880
                    net_pay: 541.02
                    payroll_uuid: a039cafb-745e-4af4-bf1e-935a86fc18e0
                    check_amount: 500.2
                description: OK
      Signatory-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Signatory'
            examples:
              Example:
                value:
                  - uuid: f8c653dc-0094-41fb-8670-45d6399afade
                    first_name: Bob
                    last_name: Johnson
                    title: Owner
                    phone: '4239879876'
                    birthday: '2002-10-31'
                    email: olin.okuneva@denesik.us
                    is_admin: false
                    has_ssn: true
                    version: 49ea586f528411f5cfadfd54452b2423
                    home_address:
                      street_1: 524 Roob Divide
                      street_2: Suite 565
                      city: San Francisco
                      state: CA
                      zip: '94107'
                      country: USA
                    identity_verification_status: Skipped
      External-Payroll-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/External-Payroll'
            examples:
              Example:
                value:
                  uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                  company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
                  check_date: '2022-06-03'
                  payment_period_start_date: '2022-05-15'
                  payment_period_end_date: '2022-05-30'
                  status: unprocessed
                  external_payroll_items:
                    - employee_uuid: 44f7cba9-7a3d-4f08-b7bd-6fcf5211f8ca
                      earnings:
                        - amount: 10000
                          hours: 0
                          earning_type: CompanyPayType
                          earning_id: 1
                        - amount: 500
                          hours: 0
                          earning_type: CompanyEarningType
                          earning_id: 4
                      benefits:
                        - benefit_id: 22
                          company_contribution_amount: 100
                          employee_deduction_amount: 50
                        - benefit_id: 25
                          company_contribution_amount: 0
                          employee_deduction_amount: 300
                      taxes:
                        - tax_id: 1
                          amount: 400
                        - tax_id: 2
                          amount: 60
                  applicable_earnings:
                    - earning_type: CompanyPayType
                      earning_id: 1
                      name: Regular Wages
                      input_type: amount
                      category: default
                    - earning_type: CompanyEarningType
                      earning_id: 4
                      name: Cash Tips
                      input_type: amount
                      category: default
                  applicable_benefits:
                    - id: 22
                      description: Kaiser
                      active: true
                    - id: 25
                      description: HSA
                      active: true
                  applicable_taxes:
                    - id: 1
                      name: Federal Income Tax
                      employer_tax: false
                      resident_tax: false
                    - id: 2
                      name: Social Security
                      employer_tax: false
                      resident_tax: false
                  metadata:
                    deletable: true
      External-Payroll-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/External-Payroll-Basic'
            examples:
              Example:
                value:
                  - uuid: c5fdae57-5483-4529-9aae-f0edceed92d4
                    company_uuid: bcb305b0-2855-4025-8d22-e484a9e6b7c9
                    check_date: '2022-06-03'
                    payment_period_start_date: '2022-05-15'
                    payment_period_end_date: '2022-05-30'
                    status: unprocessed
      External-Payroll-Tax-Suggestions-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/External-Payroll-Tax-Suggestions'
            examples:
              Example:
                value:
                  - employee_uuid: d21848d5-446f-48a8-9430-30fbefeabda4
                    tax_suggestions:
                      - tax_id: 1
                        amount: 500
                      - tax_id: 2
                        amount: 100
                      - tax_id: 4
                        amount: 30
      Tax-Liabilities-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Tax-Liabilities-Selections'
            examples:
              Example:
                value:
                  - tax_id: 1
                    tax_name: Federal Income Tax
                    last_unpaid_external_payroll_uuid: null
                    possible_liabilities:
                      - liability_amount: 0
                        payroll_check_date: null
                        external_payroll_uuid: null
                      - liability_amount: 3000
                        payroll_check_date: '2022-06-01'
                        external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
                  - tax_id: 2
                    tax_name: Social Security
                    last_unpaid_external_payroll_uuid: null
                    possible_liabilities:
                      - liability_amount: 0
                        payroll_check_date: null
                        external_payroll_uuid: null
                      - liability_amount: 50
                        payroll_check_date: '2022-06-01'
                        external_payroll_uuid: 1bf1efe1-72d4-4e6e-a181-611f3ea66435
      Flow-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flow'
            examples:
              Example:
                value:
                  url: >-
                    https://flows.gusto-demo.com/flows/lO2BHHAMCScPVV9G5WEURW0Im_nP9mGYloQgjUWbenQ
                  expires_at: '2021-12-28 04:25:48'
      Form-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
            examples:
              Example:
                value:
                  uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                  name: company_direct_deposit
                  title: Direct Deposit Authorization
                  description: >-
                    We need you to sign paperwork to authorize us to debit and
                    credit your bank account and file and pay your taxes.
                  draft: false
                  requires_signing: true
      Form-Object-Pdf:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form-Pdf'
            examples:
              Example:
                value:
                  uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                  document_url: >-
                    https://app.gusto-demo.com/assets/forms/7757842065202782/original/company_direct_deposit20211007-48226-gsqo8k.pdf?1633667020
      Form-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Form'
            examples:
              Example:
                value:
                  - uuid: 48cdd5ec-a4dd-4840-a424-ad79f38d8408
                    name: company_direct_deposit
                    title: Direct Deposit Authorization
                    description: >-
                      We need you to sign paperwork to authorize us to debit and
                      credit your bank account and file and pay your taxes.
                    draft: false
                    requires_signing: true
      Industry-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Industry'
            examples:
              Example:
                value:
                  company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
                  naics_code: '611420'
                  sic_codes:
                    - '8243'
                  title: Computer Training
      Job-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
            examples:
              Example:
                value:
                  uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                  version: d0e719137f89ca3dd334dd4cc248ffbb
                  employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
                  current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                  payment_unit: Year
                  primary: true
                  title: Account Director
                  compensations:
                    - uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                      version: 994b75511d1debac5d7e2ddeae13679f
                      payment_unit: Year
                      flsa_status: Exempt
                      job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                      effective_date: '2021-01-20'
                      rate: '78000.00'
                      adjust_for_minimum_wage: false
                      minimum_wages: []
                  rate: '78000.00'
                  hire_date: '2020-01-20'
      Job-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Job'
            examples:
              Example:
                value:
                  - uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                    version: 6c0ed1521e8b86eb36bd4455a63a2dac
                    employee_uuid: 948daac8-4355-4ece-9e2a-229898accb22
                    current_compensation_uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                    payment_unit: Year
                    primary: true
                    title: Client Support Director
                    compensations:
                      - uuid: ea8b0b90-1112-4f9d-bb93-bf029bc8537a
                        version: 2cd4b18662395eb53bcf80d5b5447f36
                        payment_unit: Year
                        flsa_status: Exempt
                        job_uuid: d6d1035e-8a21-4e1d-89d5-fa894f9aff97
                        effective_date: '2021-01-20'
                        rate: '70000.00'
                        adjust_for_minimum_wage: false
                        minimum_wages: []
                    rate: '70000.00'
                    hire_date: '2020-01-20'
      Employee-Federal-Tax-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-Federal-Tax'
            examples:
              Example:
                value:
                  version: 56a489ce86ed6c1b0f0cecc4050a0b01
                  filing_status: Single
                  extra_withholding: '0.0'
                  two_jobs: true
                  dependents_amount: '0.0'
                  other_income: '0.0'
                  deductions: '0.0'
                  employee_id: 29
                  w4_data_type: rev_2020_w4
      Location-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
            examples:
              Example:
                value:
                  company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                  version: 7d9753112507b9dda4fb97910f39b06e
                  phone_number: '5825710808'
                  uuid: 04552eb9-7829-4b18-ae96-6983552948df
                  street_1: 412 Kiera Stravenue
                  street_2: Suite 391
                  city: San Francisco
                  state: CA
                  zip: '94107'
                  country: USA
                  active: true
                  filing_address: false
                  mailing_address: false
                  created_at: '2023-09-12T16:42:25.000-07:00'
                  updated_at: '2023-09-12T16:42:25.000-07:00'
      Location-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Location'
            examples:
              Example:
                value:
                  - company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    version: 7d9753112507b9dda4fb97910f39b06e
                    phone_number: '5825710808'
                    uuid: 04552eb9-7829-4b18-ae96-6983552948df
                    street_1: 412 Kiera Stravenue
                    street_2: Suite 391
                    city: San Francisco
                    state: CA
                    zip: '94107'
                    country: USA
                    active: true
                    filing_address: false
                    mailing_address: false
                    created_at: '2023-09-12T16:42:25.000-07:00'
                    updated_at: '2023-09-12T16:42:25.000-07:00'
                  - company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    version: 15e6b9680e00f3122729e64e3cef3224
                    phone_number: '2866070827'
                    uuid: fa94a2fd-11a8-4024-87ff-85c587d9d2b4
                    street_1: 644 Fay Vista
                    street_2: Suite 842
                    city: Richmond
                    state: VA
                    zip: '23218'
                    country: USA
                    active: true
                    filing_address: false
                    mailing_address: false
                    created_at: '2023-09-12T16:42:25.000-07:00'
                    updated_at: '2023-09-12T16:42:25.000-07:00'
      Contractor-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Contractor'
            examples:
              Example:
                value:
                  - uuid: c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07
                    company_uuid: b7457fec-3b76-43bb-9c6e-69cca4688942
                    wage_type: Fixed
                    is_active: false
                    version: 63859768485e218ccf8a449bb60f14ed
                    type: Individual
                    first_name: Kory
                    last_name: Gottlieb
                    middle_initial: P
                    business_name: null
                    ein: null
                    has_ein: false
                    has_ssn: true
                    department: Backup Dancer
                    department_uuid: 1802465d-4f68-4865-920c-1307ab095f12
                    email: keira.west@mckenzie.org
                    start_date: '2022-01-01'
                    file_new_hire_report: false
                    work_state: null
                    onboarded: true
                    onboarding_status: contractor_onboarding_completed
                    address:
                      street_1: 621 Jast Row
                      street_2: Apt. 281
                      city: Coral Springs
                      state: FL
                      zip: '33065'
                      country: USA
                    hourly_rate: '0.00'
                  - uuid: 183a86f4-a803-4b38-9357-cd9b78e2560c
                    company_uuid: afdd5d98-581b-4fc0-b988-706b7d23b2a5
                    wage_type: Fixed
                    is_active: true
                    version: 8aab307f1e8ed788697f8986346af559
                    type: Business
                    first_name: null
                    last_name: null
                    middle_initial: null
                    business_name: Labadie-Stroman
                    ein: XX-XXX0001
                    has_ein: true
                    has_ssn: false
                    email: jonatan@kerluke.info
                    start_date: '2022-01-01'
                    onboarded: true
                    onboarding_status: contractor_onboarding_completed
                    address:
                      street_1: 1625 Bednar Center
                      street_2: Apt. 480
                      city: Port Charlotte
                      state: FL
                      zip: '33954'
                      country: USA
                    hourly_rate: '0.00'
                    file_new_hire_report: false
                    work_state: null
                  - uuid: ea1c2d65-b622-4899-bcb7-5cd0fe0232aa
                    id: 7757515807623484
                    company_uuid: 281c763d-a2ba-4f51-b9e8-b1ed61576d62
                    company_id: 7757616923763477
                    wage_type: Fixed
                    is_active: true
                    version: b48c46abfed1487b873b442334b3c4ff
                    type: Individual
                    first_name: Chanel
                    last_name: Boyle
                    middle_initial: X
                    business_name: null
                    ein: null
                    has_ein: false
                    has_ssn: true
                    email: loyal@hettinger.biz
                    file_new_hire_report: true
                    work_state: TX
                    onboarded: true
                    onboarding_status: contractor_onboarding_completed
                    address:
                      street_1: 35913 Darrick Run
                      street_2: Apt. 913
                      city: Cypress
                      state: TX
                      zip: '77433'
                      country: USA
                    hourly_rate: '0.00'
      Contractor-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor'
            examples:
              Individual Contractor:
                value:
                  uuid: c9fc1ad3-c107-4e7b-aa21-2dd4b00a7a07
                  company_uuid: b7457fec-3b76-43bb-9c6e-69cca4688942
                  wage_type: Hourly
                  start_date: '2022-01-01'
                  is_active: false
                  version: 63859768485e218ccf8a449bb60f14ed
                  type: Individual
                  first_name: Kory
                  last_name: Gottlieb
                  middle_initial: P
                  business_name: null
                  ein: null
                  has_ein: false
                  has_ssn: true
                  department: Stage hand
                  department_uuid: 56260b3d-c375-415c-b77a-75d99f717193
                  email: keira.west@mckenzie.org
                  file_new_hire_report: true
                  work_state: FL
                  onboarded: true
                  onboarding_status: onboarding_completed
                  address:
                    street_1: 621 Jast Row
                    street_2: Apt. 281
                    city: Coral Springs
                    state: FL
                    zip: '33065'
                    country: USA
                  hourly_rate: '60.00'
              Business Contractor:
                value:
                  uuid: c7c0659c-21a6-4b4e-b74c-9252576fc68c
                  company_uuid: 0ec4ae6e-e436-460d-b63c-94a14503d16f
                  wage_type: Fixed
                  start_date: '2022-01-01'
                  is_active: true
                  version: 8aab307f1e8ed788697f8986346af559
                  type: Business
                  first_name: null
                  last_name: null
                  middle_initial: null
                  business_name: Labadie-Stroman
                  ein: XX-XXX0001
                  has_ein: true
                  has_ssn: false
                  email: jonatan@kerluke.info
                  file_new_hire_report: false
                  work_state: null
                  onboarded: false
                  onboarding_status: admin_onboarding_incomplete
                  address:
                    street_1: 1625 Bednar Center
                    street_2: Apt. 480
                    city: Port Charlotte
                    state: FL
                    zip: '33954'
                    country: USA
                  hourly_rate: '0.00'
      Contractor-Onboarding-Status-Object:
        description: Example response.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor-Onboarding-Status'
            examples:
              Example:
                value:
                  uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                  onboarding_status: admin_onboarding_incomplete
                  onboarding_steps:
                    - title: Basic details
                      id: basic_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Add an address
                      id: add_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Payment details
                      id: payment_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Sign and acknowledge documents
                      id: sign_documents
                      required: false
                      completed: false
                      requirements:
                        - basic_details,
                        - add_address
                    - title: File new hire report
                      id: file_new_hire_report
                      required: false
                      completed: false
                      requirements:
                        - basic_details
          application/xml:
            schema:
              type: object
              properties: {}
            examples:
              Example:
                value:
                  uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                  onboarding_status: admin_onboarding_incomplete
                  onboarding_steps:
                    - title: Basic details
                      id: basic_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Add an address
                      id: add_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Payment details
                      id: payment_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Sign and acknowledge documents
                      id: sign_documents
                      required: false
                      completed: false
                      requirements:
                        - basic_details,
                        - add_address
                    - title: File new hire report
                      id: file_new_hire_report
                      required: false
                      completed: false
                      requirements:
                        - basic_details
      Contractor-Payment-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor-Payment'
            examples:
              Example:
                value:
                  uuid: 04552eb9-7829-4b18-ae96-6983552948df
                  contractor_uuid: bc57832c-d8bc-43a7-ae99-3a03380ff037
                  bonus: '20.0'
                  date: '2020-10-19'
                  hours: '40.0'
                  payment_method: Direct Deposit
                  reimbursement: '100.0'
                  status: Unfunded
                  hourly_rate: '18.0'
                  may_cancel: true
                  wage: '0.0'
                  wage_type: Hourly
                  wage_total: '740.00'
      Contractor-Payment-Method-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor-Payment-Method'
            examples:
              Example:
                value:
                  version: 63859768485e218ccf8a449bb60f14ed
                  type: Direct Deposit
                  split_by: Percentage
                  splits:
                    - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                      name: BoA Checking Account
                      priority: 1
                      split_amount: 100
      Compensation-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Compensation'
            examples:
              Exempt:
                value:
                  id: 1363316536327004
                  uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                  version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                  job_id: 1123581321345589
                  job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                  rate: '60000.00'
                  payment_unit: Year
                  flsa_status: Exempt
                  effective_date: '2020-12-11'
                  adjust_for_minimum_wage: false
                  minimum_wages: []
              Minimum Wage Adjusted:
                value:
                  id: 1363316536327003
                  uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                  version: cc59bd3879d655fb940a1f6b675f2ad9
                  job_id: 1123581321345589
                  job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                  rate: '5.00'
                  payment_unit: Hour
                  flsa_status: Nonexempt
                  effective_date: '2018-12-11'
                  adjust_for_minimum_wage: true
                  minimum_wages:
                    - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                      wage: '7.25'
                      effective_date: '2018-12-11'
          application/xml:
            schema:
              type: object
              properties: {}
            examples:
              Exempt:
                value:
                  id: 1363316536327004
                  uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                  employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfde
                  version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                  job_id: 1123581321345589
                  job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                  rate: '60000.00'
                  payment_unit: Year
                  flsa_status: Exempt
                  effective_date: '2020-12-11'
                  adjust_for_minimum_wage: false
                  minimum_wages: []
              Minimum Wage Adjusted:
                value:
                  id: 1363316536327003
                  uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                  employee_uuid: be3c9d35-f17d-4431-8a90-a6537f17dfd2
                  version: cc59bd3879d655fb940a1f6b675f2ad9
                  job_id: 1123581321345589
                  job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                  rate: '5.00'
                  payment_unit: Hour
                  flsa_status: Nonexempt
                  effective_date: '2018-12-11'
                  adjust_for_minimum_wage: true
                  minimum_wages:
                    - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                      wage: '7.25'
                      effective_date: '2018-12-11'
      Compensation-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Compensation'
            examples:
              Example:
                value:
                  - uuid: db57832c-d8bc-43a7-ae99-0a04480ff037
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    rate: '70.00'
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: '2020-12-11'
                    adjust_for_minimum_wage: false
                    minimum_wages: []
                  - id: 1363316536327003
                    job_id: 1123581321345589
                    uuid: a4d9ba9c-32cc-4cc1-a5bc-6ef4cd653e7a
                    version: cc59bd3879d655fb940a1f6b675f2ad9
                    job_uuid: d8f8fbe7-496d-4b69-86f0-1e2d1b73a086
                    payment_unit: Hour
                    flsa_status: Nonexempt
                    effective_date: '2018-12-11'
                    rate: '5.00'
                    adjust_for_minimum_wage: true
                    minimum_wages:
                      - uuid: edeea5af-ecd6-4b1c-b5de-5cff2d302738
                        wage: '7.25'
                        effective_date: '2018-12-11'
      Garnishment-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Garnishment'
            examples:
              Example:
                value:
                  uuid: 96334c6c-4e01-40ac-ac1c-d2fb02a7e371
                  version: 52b7c567242cb7452e89ba2bc02cb476
                  employee_uuid: 2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6
                  active: true
                  amount: '8.00'
                  description: Company loan to employee
                  court_ordered: false
                  times: 5
                  recurring: false
                  annual_maximum: null
                  pay_period_maximum: '100.00'
                  deduct_as_percentage: true
      Garnishment-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Garnishment'
            examples:
              Example:
                value:
                  - uuid: 4c7841a2-1363-497e-bc0f-664703c7484f
                    version: 63152767c822d6b0385509b973c49dda
                    employee_uuid: a6b53294-f871-4db2-bbd4-8c3d1fe56440
                    active: true
                    amount: '100.00'
                    description: Child support
                    court_ordered: true
                    times: null
                    recurring: true
                    annual_maximum: '400.00'
                    pay_period_maximum: null
                    deduct_as_percentage: false
                  - uuid: 96334c6c-4e01-40ac-ac1c-d2fb02a7e371
                    version: 52b7c567242cb7452e89ba2bc02cb476
                    employee_uuid: 2d9c45f3-5ab9-4198-90a7-e8bea1ae3ce6
                    active: true
                    amount: '8.00'
                    description: Company loan to employee
                    court_ordered: false
                    times: 5
                    recurring: false
                    annual_maximum: null
                    pay_period_maximum: '100.00'
                    deduct_as_percentage: true
      Termination-Object:
        description: Example Response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Termination'
            examples:
              Example:
                value:
                  uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                  employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                  version: d487dd0b55dfcacdd920ccbdaeafa351
                  active: true
                  cancelable: true
                  effective_date: '2020-03-10'
                  run_termination_payroll: false
      Termination-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Termination'
            examples:
              Example:
                value:
                  - uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    employee_uuid: da441196-43a9-4d23-ad5d-f37ce6bb99c0
                    version: d487dd0b55dfcacdd920ccbdaeafa351
                    active: true
                    cancelable: true
                    effective_date: '2020-03-10'
                    run_termination_payroll: false
      Time-Off-Request-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Time-Off-Request'
            examples:
              Example:
                value:
                  id: 1
                  status: approved
                  employee_note: Vacation at Disney World!
                  employer_note: But Universal has Harry Potter World...
                  days:
                    '2019-06-01': '4.000'
                    '2019-06-02': '8.000'
                    '2019-06-03': '2.000'
                  request_type: vacation
                  employee:
                    id: '234567'
                    full_name: Jessica Gusto
                  approver:
                    id: '345678'
                    full_name: Karen Gusto
                  initiator:
                    id: '234567'
                    full_name: Jessica Gusto
      Time-Off-Request-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Time-Off-Request'
            examples:
              Example:
                value:
                  - id: 1
                    status: approved
                    employee_note: Vacation at Disney World!
                    employer_note: But Universal has Harry Potter World...
                    days:
                      '2019-06-01': '4.000'
                      '2019-06-02': '8.000'
                      '2019-06-03': '2.000'
                    request_type: vacation
                    employee:
                      id: '234567'
                      full_name: Jessica Gusto
                    approver:
                      id: '345678'
                      full_name: Karen Gusto
                    initiator:
                      id: '234567'
                      full_name: Jessica Gusto
                  - id: 2
                    status: pending
                    employee_note: Coming down with the flu
                    employer_note: ''
                    days:
                      '2019-02-01': '8.000'
                    request_type: sick
                    employee:
                      id: '654321'
                      full_name: James Gusto
                    approver: null
                    initiator:
                      id: '654321'
                      full_name: James Gusto
      Pay-Period-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Pay-Period'
            examples:
              Example:
                value:
                  - start_date: '2020-01-11'
                    end_date: '2020-01-24'
                    pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    payroll:
                      payroll_uuid: bfd8aad4-9c3f-4ca3-b072-a1b2b3ea689f
                      check_date: '2020-01-30'
                      processed: true
                      payroll_deadline: '2020-01-28'
                      payroll_type: regular
                  - start_date: '2020-12-12'
                    end_date: '2020-12-25'
                    pay_schedule_uuid: cb53db72-612f-4eb1-9b85-389e79cfa510
                    payroll:
                      payroll_uuid: 7ed29b45-4bb1-4d38-bd94-4d607d49fd21
                      check_date: '2020-12-30'
                      processed: true
                      payroll_deadline: '2020-12-28'
                      payroll_type: regular
      Pay-Schedule-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pay-Schedule'
            examples:
              Example:
                value:
                  uuid: f2a69c38-e2f9-4e31-b5c5-4754fc60a052
                  frequency: Twice per month
                  anchor_pay_date: '2020-05-15'
                  anchor_end_of_pay_period: '2020-05-08'
                  day_1: 15
                  day_2: 31
                  name: Engineering
                  custom_name: A new monthly pay schedule
                  auto_pilot: false
                  active: true
      Pay-Schedule-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Pay-Schedule'
            examples:
              Example:
                value:
                  - uuid: 2097fe08-407a-46d7-b35c-a32402a2355e
                    frequency: Twice per month
                    anchor_pay_date: '2020-05-15'
                    anchor_end_of_pay_period: '2020-05-08'
                    day_1: 15
                    day_2: 31
                    name: Engineering
                    custom_name: Engineering department pay schedule
                    auto_pilot: false
                    active: true
                  - uuid: 8fc9f556-74fa-4271-97f6-4bfbfc5a5352
                    frequency: Monthly
                    anchor_pay_date: '2020-05-31'
                    day_1: 31
                    day_2: null
                    name: Sales
                    custom_name: Sales department monthly schedule
                    auto_pilot: false
                    active: false
                  - uuid: 0e07d35a-af11-4123-bfcb-4dd5f2f12ee1
                    frequency: Monthly
                    anchor_pay_date: '2020-05-31'
                    day_1: 31
                    day_2: null
                    name: Staff
                    custom_name: Staff department pay schedule
                    auto_pilot: true
                    active: false
      Benefit-Type-Requirements-Object:
        description: Benefit type requirements response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Benefit-Type-Requirements'
            examples:
              Example:
                value:
                  employee_deduction:
                    required: true
                    editable: true
                    default_value: null
                    choices: null
                  contribution:
                    required: true
                    editable: true
                    default_value:
                      type: percentage
                      value: 2
                    choices:
                      - percentage
                  deduct_as_percentage:
                    required: true
                    editable: true
                    default_value: null
                    choices: null
                  catch_up:
                    required: true
                    editable: true
                    default_value: null
                    choices: null
                  limit_option:
                    required: false
                    editable: false
                    default_value: null
                    choices: null
                  company_contribution_annual_maximum:
                    required: false
                    editable: false
                    default_value: null
                    choices: null
                  coverage_salary_multiplier:
                    required: false
                    editable: false
                    default_value: null
                    choices: null
                  coverage_amount:
                    required: false
                    editable: false
                    default_value: null
                    choices: null
      Supported-Benefit-Object:
        description: Supported benefit response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supported-Benefit'
            examples:
              Example:
                value:
                  benefit_type: 1
                  name: Medical Insurance
                  description: Deductions and contributions for Medical Insurance
                  pretax: true
                  posttax: false
                  imputed: false
                  healthcare: true
                  retirement: false
                  yearly_limit: false
      Supported-Benefit-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Supported-Benefit'
            examples:
              Supported Benefits:
                value:
                  - benefit_type: 1
                    name: Medical Insurance
                    description: Deductions and contributions for Medical Insurance
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: true
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 2
                    name: Dental Insurance
                    description: Deductions and contributions for Dental Insurance
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: true
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 3
                    name: Vision Insurance
                    description: Deductions and contributions for Vision Insurance
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: true
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 6
                    name: Health Savings Account
                    description: >-
                      Health Savings Accounts (HSA) allow employees to be
                      reimbursed for qualified medical expenses. Contributions are
                      pre-tax and lower the total amount of tax paid by employees
                      and the employer. Employers may also make tax-free
                      contributions to employees' HSA. Remaining balances are
                      carried over in next year.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: true
                    category: Health
                  - benefit_type: 7
                    name: Health FSA
                    description: >-
                      Flexible Spending Accounts (FSA) allow employees to be
                      reimbursed for qualified medical expenses. Contributions are
                      pre-tax and lower the total amount of tax paid by employees
                      and the employer. Employers may also make tax-free
                      contributions to employees' FSA. Remaining balances are not
                      carried over in next year.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: true
                    category: Health
                  - benefit_type: 11
                    name: Dependent Care FSA
                    description: >-
                      Dependent Care FSA reimburses employees for expenses to care
                      for dependents while the employee is at work (e.g.
                      Daycares). Contributions are pre-tax and lower the total
                      amount of tax paid by employees and the employer. Employers
                      may also make tax-free contributions to employee FSA.
                      Remaining balances are not carried over to the next year.
                      Single parents or Married couples filing a joint return can
                      elect up to $5000 per year. Married couples filing separate
                      returns are limited to $2500 elections each.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: true
                    category: Health
                  - benefit_type: 8
                    name: SIMPLE IRA
                    description: >-
                      The SIMPLE IRA is a tax-deferred retirement savings plan for
                      employees. It is often used by small businesses as an
                      alternative to 401(k) due to its relatively low operating
                      cost. Employers are required to contribute a specific
                      percentage to an employee's SIMPLE IRA.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - benefit_type: 105
                    name: Roth 401(k)
                    description: >-
                      Roth 401(k) is an after-tax savings plan for employees. The
                      standard maximum is $18,000, or $24,000 for employees over
                      50 years old.
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - benefit_type: 110
                    name: Roth 403(b)
                    description: >-
                      Roth 403(b) is an after-tax savings plan for certain
                      clerics, employees of public schools, and employees of other
                      types of tax-exempt organizations. Contributions made by
                      employees are taxable for federal and state withholding.
                      Often, employers contribute additional pre-tax dollars to
                      the employee’s Roth account to encourage saving for
                      retirement.
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - benefit_type: 5
                    name: 401(k)
                    description: >-
                      401(k) is tax-deferred retirement savings plan for
                      employees. The standard maximum is $18,000, or $24,000 for
                      employees over 50 years old.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - benefit_type: 9
                    name: 403(b)
                    description: >-
                      403(b) is tax-deferred retirement savings plan for certain
                      clerics, employees of public schools, and employees of other
                      types of tax-exempt organizations.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - benefit_type: 108
                    name: SEP-IRA
                    description: >-
                      A SEP-IRA is a pre-tax retirement savings plan where only
                      the employer contributes. It is often used by small
                      businesses as an alternative to 401(k) due to its relatively
                      low operating cost. Employers are required to contribute the
                      same percentage to all enrolled employees, with a maximum
                      contribution of 25% of the employee’s compensation.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - benefit_type: 109
                    name: SARSEP
                    description: >-
                      A SARSEP is a pre-tax retirement savings plan used by small
                      businesses as an alternative to 401(k) due to its relatively
                      low operating cost. While new SARSEP plans are not
                      available, there are still some companies that are
                      grandfathered into the plan. Employers are required to
                      contribute the same percentage to all enrolled employees,
                      with a maximum contribution of 25% of the employee’s
                      compensation.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: true
                    yearly_limit: true
                    category: Savings and Retirement
                  - benefit_type: 107
                    name: Group-Term Life Insurance
                    description: >-
                      Group-Term Life Insurance for coverage in excess of $50,000
                      per employee is a taxable fringe benefit. See IRS
                      Publication 15-B to determine the dollar value of the excess
                      coverage.
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 10
                    name: Commuter Benefits (pre-tax)
                    description: >-
                      Tax-free commuter benefits for transit, vanpooling,
                      bicycling, and work-related parking costs. The annual
                      maximum contribution for this pre-tax benefit is in the IRS
                      publication 15-B.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - benefit_type: 106
                    name: Personal Use of Company Car
                    description: >-
                      When an employee uses a company-owned car for personal
                      matters, it is considered taxable benefit provided in-kind.
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - benefit_type: 111
                    name: 529 College Savings
                    description: >-
                      529 College Savings is an after-tax savings plan for
                      employees designed to encourage saving for future college
                      costs. This benefit should be reported as a taxable benefit
                      and will therefore be taxed.
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Other
                  - benefit_type: 112
                    name: Student Loan Repayment
                    description: >-
                      Student Loan Repayment is an after-tax savings plan for
                      employees to pay towards their outstanding student loans. An
                      employee can choose to set aside after-tax dollars towards
                      this benefit. These benefits should be reported as a taxable
                      benefit and will therefore be taxed.
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Other
                  - benefit_type: 998
                    name: Short Term Disability (post-tax)
                    description: >-
                      Third Party Disability or Third Party Leave are policies
                      offered by employers that pay an employee for a specific
                      life event (maternity leave, injury). All payments made to
                      employees come from a third-party, such as an insurer. For
                      more information on the taxation of these plans, please
                      refer to publication 15-A for more details.
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 999
                    name: Long Term Disability (post-tax)
                    description: >-
                      Third Party Disability or Third Party Leave are policies
                      offered by employers that pay an employee for a specific
                      life event (maternity leave, injury). All payments made to
                      employees come from a third-party, such as an insurer. For
                      more information on the taxation of these plans, please
                      refer to publication 15-A for more details.
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 996
                    name: Short Term Disability (pre-tax)
                    description: >-
                      Third Party Disability or Third Party Leave are policies
                      offered by employers that pay an employee for a specific
                      life event (maternity leave, injury). All payments made to
                      employees come from a third-party, such as an insurer. For
                      more information on the taxation of these plans, please
                      refer to publication 15-A for more details.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 997
                    name: Long Term Disability (pre-tax)
                    description: >-
                      Third Party Disability or Third Party Leave are policies
                      offered by employers that pay an employee for a specific
                      life event (maternity leave, injury). All payments made to
                      employees come from a third-party, such as an insurer. For
                      more information on the taxation of these plans, please
                      refer to publication 15-A for more details.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 991
                    name: Voluntary Short Term Disability (post-tax)
                    description: >-
                      Third Party Disability or Third Party Leave are policies
                      offered by employers that pay an employee for a specific
                      life event (maternity leave, injury). All payments made to
                      employees come from a third-party, such as an insurer. For
                      more information on the taxation of these plans, please
                      refer to publication 15-A for more details.
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 992
                    name: Voluntary Long Term Disability (post-tax)
                    description: >-
                      Third Party Disability or Third Party Leave are policies
                      offered by employers that pay an employee for a specific
                      life event (maternity leave, injury). All payments made to
                      employees come from a third-party, such as an insurer. For
                      more information on the taxation of these plans, please
                      refer to publication 15-A for more details.
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 993
                    name: Voluntary Life (post-tax)
                    description: >-
                      Third Party Disability or Third Party Leave are policies
                      offered by employers that pay an employee for a specific
                      life event (maternity leave, injury). All payments made to
                      employees come from a third-party, such as an insurer. For
                      more information on the taxation of these plans, please
                      refer to publication 15-A for more details.
                    pretax: false
                    posttax: true
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Health
                  - benefit_type: 113
                    name: Commuter Parking
                    description: >-
                      Tax-free commuter benefits allow employees to reduce their
                      monthly commuting expenses for transit, carpooling,
                      bicycling, and work-related parking costs. Please note that
                      there is an annual maximum for this pre-tax benefit. The
                      maximum dollar amount is found in IRS Publication 15-B.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - benefit_type: 114
                    name: Commuter Transit
                    description: >-
                      Tax-free commuter benefits allow employees to reduce their
                      monthly commuting expenses for transit, carpooling,
                      bicycling, and work-related parking costs. Please note that
                      there is an annual maximum for this pre-tax benefit. The
                      maximum dollar amount is found in IRS Publication 15-B.
                    pretax: true
                    posttax: false
                    imputed: false
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - benefit_type: 100
                    name: Other (taxable)
                    description: Other taxable benefit
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Other
                  - benefit_type: 201
                    name: Cell Phone (taxable)
                    description: >-
                      Employer-sponsored benefits like this are called fringe
                      benefits, and they don’t get special tax treatment—they’ll
                      be reported as taxable wages on your employees’ paystubs.
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - benefit_type: 202
                    name: Gym & Fitness (taxable)
                    description: >-
                      Employer-sponsored benefits like this are called fringe
                      benefits, and they don’t get special tax treatment—they’ll
                      be reported as taxable wages on your employees’ paystubs.
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - benefit_type: 203
                    name: Housing (taxable)
                    description: >-
                      Employer-sponsored benefits like this are called fringe
                      benefits, and they don’t get special tax treatment—they’ll
                      be reported as taxable wages on your employees’ paystubs.
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
                  - benefit_type: 204
                    name: Wellness (taxable)
                    description: >-
                      Employer-sponsored benefits like this are called fringe
                      benefits, and they don’t get special tax treatment—they’ll
                      be reported as taxable wages on your employees’ paystubs.
                    pretax: false
                    posttax: true
                    imputed: true
                    healthcare: false
                    retirement: false
                    yearly_limit: false
                    category: Transportation
      Admin-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
            examples:
              Example:
                value:
                  first_name: John
                  last_name: Smith
                  email: jsmith99@gmail.com
                  uuid: 5de11791-98fd-4587-9ed0-d5d804b8e647
      Admin-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Admin'
            examples:
              Example:
                value:
                  - first_name: Katherine
                    last_name: Johnson
                    email: Katherine@acmecorp.com
                    uuid: 987058cc-23ee-46e9-81ef-5cee086cceca
                  - first_name: Anita
                    last_name: Borg
                    email: Anita@acmecorp.com
                    uuid: 5de11791-98fd-4587-9ed0-d5d804b8e647
      Company-Benefit-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company-Benefit'
            examples:
              Example:
                value:
                  uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                  version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                  company_uuid: 881ce3f2-e3e1-49c9-8ad4-0bcf515f5618
                  benefit_type: 1
                  active: true
                  description: Kaiser Permanente
                  deletable: true
                  supports_percentage_amounts: true
                  responsible_for_employer_taxes: false
                  responsible_for_employee_w2: false
      Company-Benefit-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Company-Benefit'
            examples:
              Example:
                value:
                  - uuid: d2cec746-caee-464a-bcaf-00d93f7049c9
                    version: 98jr3289h3298hr9329gf9egskt3kagri32qqgiqe3872
                    company_uuid: 528cc543-8a41-497e-b479-23a4c5ec77ac
                    benefit_type: 1
                    active: true
                    description: Kaiser Permanente
                    deletable: true
                    supports_percentage_amounts: true
                    responsible_for_employer_taxes: false
                    responsible_for_employee_w2: false
                description: OK
      Company-Custom-Field-List:
        description: Example response
        content:
          application/json:
            schema:
              type: object
              properties:
                custom_fields:
                  type: array
                  items:
                    $ref: '#/components/schemas/Company-Custom-Field'
            examples:
              Example:
                value:
                  custom_fields:
                    - uuid: ea7e5d57-6abb-47d7-b654-347c142886c0
                      name: employee_level
                      description: Employee Level
                      type: text
                      selection_options: null
                    - uuid: 299650e4-e970-4acf-9bf0-6f05585d20ba
                      name: t-shirt size
                      description: What is your t-shirt size?
                      type: text
                      selection_options: null
                    - uuid: 024ec137-6c92-43a3-b061-14a9720531d6
                      name: favorite fruit
                      description: Which is your favorite fruit?
                      type: radio
                      selection_options:
                        - apple
                        - banana
                        - orange
      Earning-Type-List:
        description: Example response
        content:
          application/json:
            schema:
              type: object
              properties:
                default:
                  type: array
                  description: The default earning types for the company.
                  items:
                    $ref: '#/components/schemas/Earning-Type'
                custom:
                  type: array
                  description: The custom earning types for the company.
                  items:
                    $ref: '#/components/schemas/Earning-Type'
            examples:
              Example:
                value:
                  default:
                    - name: Bonus
                      uuid: b82e35c5-d7c6-4705-9e16-9f87499ade18
                    - name: Cash Tips
                      uuid: f5618c94-ed7d-4366-b2c4-ff05e430064f
                    - name: Commission
                      uuid: 60191999-004a-49d9-b163-630574433653
                    - name: Correction Payment
                      uuid: 368226e0-8e8c-48f0-bc91-aee46caafbc9
                    - name: Minimum Wage Adjustment
                      uuid: 88a2e519-9ff5-4c19-9071-6a709f3c2939
                    - name: Paycheck Tips
                      uuid: a3eaf03d-e712-4144-8f9b-71a85528adcf
                    - name: Severance
                      uuid: a6a2eba7-6c7d-4ced-bbe8-43452fbc9f63
                  custom:
                    - name: Gym Membership Stipend
                      uuid: 6b4a8efb-db90-4c13-a75f-aae11b3f4ff9
      Earning-Type-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Earning-Type'
            examples:
              Example:
                value:
                  name: Gym Membership Stipend
                  uuid: f4dc8972-8830-4c07-b623-349a04b040d7
      Employee-Benefit-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-Benefit'
            examples:
              Example:
                value:
                  version: 09j3d29jqdpj92109j9j2d90dq
                  employee_uuid: 908123091820398
                  company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                  active: true
                  uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                  employee_deduction: '100.00'
                  employee_deduction_annual_maximum: '200.00'
                  company_contribution_annual_maximum: '200.00'
                  limit_option: null
                  deduct_as_percentage: false
                  catch_up: false
                  coverage_amount: null
                  deduction_reduces_taxable_income: null
                  coverage_salary_multiplier: '0.00'
                  contribution:
                    type: amount
                    value: '100.00'
              Tiered example:
                value:
                  version: string
                  employee_uuid: 8f9f3f68-8fd3-499d-ade7-4a052e56494e
                  company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                  active: true
                  uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                  employee_deduction: '0.00'
                  deduct_as_percentage: false
                  employee_deduction_annual_maximum: string
                  contribution:
                    type: tiered
                    value:
                      tiers:
                        - rate: '5.0'
                          threshold: '2.0'
                          threshold_delta: '2.0'
                        - rate: '3.0'
                          threshold: '5.0'
                          threshold_delta: '3.0'
                  elective: false
                  company_contribution_annual_maximum: string
                  limit_option: string
                  catch_up: false
                  coverage_amount: string
                  deduction_reduces_taxable_income: unset
                  coverage_salary_multiplier: '0.00'
      Employee-Benefit-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee-Benefit'
            examples:
              Example:
                value:
                  - version: 09j3d29jqdpj92109j9j2d90dq
                    employee_uuid: 8f9f3f68-8fd3-499d-ade7-4a052e56494e
                    company_benefit_uuid: 54e37c27-43e6-4ae5-a5b2-e29895a133be
                    active: true
                    uuid: e91ca856-a915-4339-9b18-29f9cd66b031
                    employee_deduction: '100.00'
                    company_contribution: '100.00'
                    employee_deduction_annual_maximum: '200.00'
                    company_contribution_annual_maximum: '200.00'
                    limit_option: null
                    deduct_as_percentage: false
                    contribute_as_percentage: false
                    catch_up: false
                    coverage_amount: null
                    deduction_reduces_taxable_income: null
                    coverage_salary_multiplier: '0.00'
      Payroll-Update-Object:
        description: A prepared payroll
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payroll-Prepared'
            examples:
              Example:
                value:
                  payroll_deadline: '2022-02-18T22:00:00Z'
                  check_date: '2021-02-22'
                  off_cycle: false
                  external: false
                  processed: false
                  processed_date: null
                  calculated_at: null
                  payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                  company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                  created_at: '2022-02-01T22:00:00Z'
                  pay_period:
                    start_date: '2021-02-01'
                    end_date: '2021-02-15'
                    pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                  payroll_status_meta:
                    cancellable: false
                    expected_check_date: '2022-02-22'
                    initial_check_date: '2022-02-22'
                    expected_debit_time: '2022-02-18T22:00:00Z'
                    payroll_late: false
                    initial_debit_cutoff_time: '2022-02-18T22:00:00Z'
                  employee_compensations:
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7067
                      version: 4ba36d23a78c7393b4900ef38019d8ff
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                        - name: Bonus
                          amount: '100.00'
                          job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242ba5
                        - name: Reimbursement
                          amount: '100.00'
                          job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909ba
                      hourly_compensations:
                        - name: Regular Hours
                          hours: '40.000'
                          job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                          compensation_multiplier: 1
                          flsa_status: Nonexempt
                        - name: Overtime
                          hours: '15.000'
                          job_uuid: 9d3760f0-d1f9-4700-8817-0fe2dce5cf23
                          compensation_multiplier: 1.5
                          flsa_status: Nonexempt
                        - name: Double overtime
                          hours: '0.000'
                          job_uuid: b5eef9a9-4a87-4649-a80d-14878c05f44e
                          compensation_multiplier: 2
                          flsa_status: Nonexempt
                        - name: Regular Hours
                          hours: '40.000'
                          job_uuid: 332bd171-9efc-432b-abbb-a75c9dba706a
                          compensation_multiplier: 1
                          flsa_status: Nonexempt
                        - name: Overtime
                          hours: '5.000'
                          job_uuid: ca9b3dc1-57ac-4736-901a-9b1c9634b9d5
                          compensation_multiplier: 1.5
                          flsa_status: Nonexempt
                        - name: Double overtime
                          hours: '0.000'
                          job_uuid: 1bad01e2-140c-49ed-9542-2388ce4a19b3
                          compensation_multiplier: 2
                          flsa_status: Nonexempt
                      paid_time_off:
                        - name: Vacation Hours
                          hours: '20.000'
                        - name: Sick Hours
                          hours: '0.000'
                        - name: Holiday Hours
                          hours: '0.000'
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7012
                      version: ff083257a5583291fb86656ad0df1b42
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                        - name: Bonus
                          amount: '100.00'
                          job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242b34
                        - name: Reimbursement
                          amount: '100.00'
                          job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e90955
                      hourly_compensations:
                        - name: Regular Hours
                          hours: '40.000'
                          job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                          compensation_multiplier: 1
                          flsa_status: Commission Only Exempt
                      paid_time_off:
                        - name: Vacation Hours
                          hours: '20.000'
                        - name: Sick Hours
                          hours: '0.000'
                        - name: Holiday Hours
                          hours: '0.000'
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7781
                      version: 259816479e3729bf855318af9b9adddf
                      excluded: false
                      payment_method: Direct Deposit
                      fixed_compensations:
                        - name: Bonus
                          amount: '100.00'
                          job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242bab
                        - name: Reimbursement
                          amount: '100.00'
                          job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909cd
                      hourly_compensations:
                        - name: Regular Hours
                          hours: '40.000'
                          job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                          compensation_multiplier: 1
                          flsa_status: Exempt
                      paid_time_off:
                        - name: Vacation Hours
                          hours: '20.000'
                        - name: Sick Hours
                          hours: '0.000'
                        - name: Holiday Hours
                          hours: '0.000'
                  fixed_compensation_types:
                    - name: Bonus
                    - name: Commission
                    - name: Paycheck Tips
                    - name: Cash Tips
                    - name: Correction Payment
                    - name: Anniversary Bonus
                    - name: Internet Stipend
                    - name: Reimbursement
      Payroll-Show-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payroll'
            examples:
              Unprocessed:
                value:
                  payroll_deadline: '2021-02-18T22:00:00Z'
                  check_date: '2021-02-22'
                  off_cycle: false
                  external: false
                  processed: false
                  processed_date: null
                  calculated_at: null
                  payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                  company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                  created_at: '2022-02-01T22:00:00Z'
                  pay_period:
                    start_date: '2021-02-01'
                    end_date: '2021-02-15'
                    pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                  payroll_status_meta:
                    cancellable: false
                    expected_check_date: '2021-02-22'
                    initial_check_date: '2021-02-22'
                    expected_debit_time: '2021-02-18T22:00:00Z'
                    payroll_late: false
                    initial_debit_cutoff_time: '2021-02-18T22:00:00Z'
              Processed:
                value:
                  payroll_deadline: '2021-02-18T22:00:00Z'
                  check_date: '2021-02-22'
                  off_cycle: false
                  external: false
                  processed: true
                  processed_date: '2021-02-18'
                  calculated_at: '2021-02-18T12:00:00Z'
                  payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                  company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                  created_at: '2022-02-01T22:00:00Z'
                  pay_period:
                    start_date: '2021-02-01'
                    end_date: '2021-02-15'
                    pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                  totals:
                    company_debit: '121747.71'
                    net_pay_debit: '79283.80'
                    tax_debit: '42463.91'
                    reimbursement_debit: '0.00'
                    child_support_debit: '0.00'
                    reimbursements: '0.00'
                    net_pay: '81752.94'
                    gross_pay: '130635.89'
                    employee_bonuses: '0.00'
                    employee_commissions: '18536.37'
                    employee_cash_tips: '0.00'
                    employee_paycheck_tips: '0.00'
                    additional_earnings: '0.00'
                    owners_draw: '0.00'
                    check_amount: '2469.14'
                    employer_taxes: '6917.19'
                    employee_taxes: '35546.72'
                    benefits: '0.00'
                    employee_benefits_deductions: '13336.23'
                    deferred_payroll_taxes: '0.00'
                    other_deductions: '240.00'
                  company_taxes:
                    - name: MO Compensation Deduction
                      amount: '-0.92'
                      employer: true
                    - name: NY MCTMT
                      amount: '5.00'
                      employer: true
                  payroll_status_meta:
                    cancellable: false
                    expected_check_date: '2021-02-22'
                    initial_check_date: '2021-02-22'
                    expected_debit_time: '2021-02-18T22:00:00Z'
                    payroll_late: false
                    initial_debit_cutoff_time: '2021-02-18T22:00:00Z'
                  employee_compensations:
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7067
                      excluded: false
                      gross_pay: '2791.25'
                      net_pay: '1953.31'
                      check_amount: '1953.31'
                      payment_method: Direct Deposit
                      fixed_compensations:
                        - name: Bonus
                          amount: '100.00'
                          job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242ba5
                        - name: Reimbursement
                          amount: '100.00'
                          job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909ba
                      hourly_compensations:
                        - name: Regular Hours
                          hours: '40.000'
                          job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                          compensation_multiplier: 1
                          flsa_status: Nonexempt
                        - name: Overtime
                          hours: '15.000'
                          job_uuid: 9d3760f0-d1f9-4700-8817-0fe2dce5cf23
                          compensation_multiplier: 1.5
                          flsa_status: Nonexempt
                        - name: Double overtime
                          hours: '0.000'
                          job_uuid: b5eef9a9-4a87-4649-a80d-14878c05f44e
                          compensation_multiplier: 2
                          flsa_status: Nonexempt
                        - name: Regular Hours
                          hours: '40.000'
                          job_uuid: 332bd171-9efc-432b-abbb-a75c9dba706a
                          compensation_multiplier: 1
                          flsa_status: Nonexempt
                        - name: Overtime
                          hours: '5.000'
                          job_uuid: ca9b3dc1-57ac-4736-901a-9b1c9634b9d5
                          compensation_multiplier: 1.5
                          flsa_status: Nonexempt
                        - name: Double overtime
                          hours: '0.000'
                          job_uuid: 1bad01e2-140c-49ed-9542-2388ce4a19b3
                          compensation_multiplier: 2
                          flsa_status: Nonexempt
                      paid_time_off:
                        - name: Vacation Hours
                          hours: '20.000'
                        - name: Sick Hours
                          hours: '0.000'
                        - name: Holiday Hours
                          hours: '0.000'
                      benefits:
                        - name: Group Term Life
                          employee_deduction: '100.00'
                          company_contribution: '50.00'
                          imputed: true
                        - name: 401K
                          employee_deduction: '100.00'
                          company_contribution: '50.00'
                          imputed: false
                      deductions:
                        - name: Child Support
                          amount: '80.00'
                      taxes:
                        - name: Federal Income Tax
                          employer: false
                          amount: '646.69'
                        - name: Social Security
                          employer: true
                          amount: '191.25'
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7012
                      excluded: false
                      gross_pay: '2791.25'
                      net_pay: '1953.31'
                      check_amount: '1953.31'
                      payment_method: Direct Deposit
                      fixed_compensations:
                        - name: Bonus
                          amount: '100.00'
                          job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242b34
                        - name: Reimbursement
                          amount: '100.00'
                          job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e90955
                      hourly_compensations:
                        - name: Regular Hours
                          hours: '40.000'
                          job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                          compensation_multiplier: 1
                          flsa_status: Commission Only Exempt
                      paid_time_off:
                        - name: Vacation Hours
                          hours: '20.000'
                        - name: Sick Hours
                          hours: '0.000'
                        - name: Holiday Hours
                          hours: '0.000'
                      benefits:
                        - name: Group Term Life
                          employee_deduction: '100.00'
                          company_contribution: '50.00'
                          imputed: true
                        - name: 401K
                          employee_deduction: '100.00'
                          company_contribution: '50.00'
                          imputed: false
                      deductions:
                        - name: Child Support
                          amount: '80.00'
                      taxes:
                        - name: Federal Income Tax
                          employer: false
                          amount: '646.69'
                        - name: Social Security
                          employer: true
                          amount: '191.25'
                    - employee_uuid: 187412e1-3dbe-491a-bb2f-2f40323a7781
                      excluded: false
                      gross_pay: '2791.25'
                      net_pay: '1953.31'
                      check_amount: '1953.31'
                      payment_method: Direct Deposit
                      fixed_compensations:
                        - name: Bonus
                          amount: '100.00'
                          job_uuid: 94e0d15e-9ed2-4077-98f6-64554f242bab
                        - name: Reimbursement
                          amount: '100.00'
                          job_uuid: 91bc3b43-ded0-4ee7-98fe-215499e909cd
                      hourly_compensations:
                        - name: Regular Hours
                          hours: '40.000'
                          job_uuid: bd378298-3e0c-4145-904a-baadf8a91fa3
                          compensation_multiplier: 1
                          flsa_status: Exempt
                      paid_time_off:
                        - name: Vacation Hours
                          hours: '20.000'
                        - name: Sick Hours
                          hours: '0.000'
                        - name: Holiday Hours
                          hours: '0.000'
                      benefits:
                        - name: Group Term Life
                          employee_deduction: '100.00'
                          company_contribution: '50.00'
                          imputed: true
                        - name: 401K
                          employee_deduction: '100.00'
                          company_contribution: '50.00'
                          imputed: false
                      deductions:
                        - name: Child Support
                          amount: '80.00'
                      taxes:
                        - name: Federal Income Tax
                          employer: false
                          amount: '646.69'
                        - name: Social Security
                          employer: true
                          amount: '191.25'
      Payroll-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payroll-Minimal'
            examples:
              Example:
                value:
                  - payroll_deadline: '2021-02-18T22:00:00Z'
                    check_date: '2021-02-22'
                    off_cycle: false
                    external: false
                    processed: true
                    processed_date: '2021-02-18'
                    calculated_at: '2021-02-18T12:00:00Z'
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: '2021-02-01T22:00:00Z'
                    pay_period:
                      start_date: '2021-02-01'
                      end_date: '2021-02-15'
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
                    totals:
                      company_debit: '121747.71'
                      net_pay_debit: '79283.80'
                      tax_debit: '42463.91'
                      reimbursement_debit: '0.00'
                      child_support_debit: '0.00'
                      reimbursements: '0.00'
                      net_pay: '81752.94'
                      gross_pay: '130635.89'
                      employee_bonuses: '0.00'
                      employee_commissions: '18536.37'
                      employee_cash_tips: '0.00'
                      employee_paycheck_tips: '0.00'
                      additional_earnings: '0.00'
                      owners_draw: '0.00'
                      check_amount: '2469.14'
                      employer_taxes: '6917.19'
                      employee_taxes: '35546.72'
                      benefits: '0.00'
                      employee_benefits_deductions: '13336.23'
                      deferred_payroll_taxes: '0.00'
                      other_deductions: '240.00'
                  - payroll_deadline: '2021-02-28'
                    check_date: '2021-03-01'
                    off_cycle: false
                    external: false
                    processed: false
                    processed_date: nil
                    calculated_at: nil
                    payroll_uuid: b50e611d-8f3d-4f24-b001-46675f7b5777
                    company_uuid: 6bf7807c-a5a0-4f4d-b2e7-3fbb4b2299fb
                    created_at: '2022-02-01T22:00:00Z'
                    pay_period:
                      start_date: '2021-02-16'
                      end_date: '2021-03-01'
                      pay_schedule_uuid: 00ebc4a4-ec88-4435-8f45-c505bb63e501
      Payment-Configs-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment-Configs'
            examples:
              Example:
                value:
                  company_uuid: 423dd616-6dbc-4724-938a-403f6217a933
                  partner_uuid: 556f05d0-48e0-4c47-bce5-db9aea923043
                  fast_payment_limit: '5000'
                  payment_speed: 2-day
      Company-Bank-Account-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company-Bank-Account'
            examples:
              Example:
                value:
                  uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
                  company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
                  account_type: Checking
                  routing_number: '851070439'
                  hidden_account_number: XXXX4087
                  verification_status: verified
                  verification_type: bank_deposits
                  name: Employer Funding Account
      Company-Bank-Account-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Company-Bank-Account'
            examples:
              Example:
                value:
                  - uuid: 1263eae5-4411-48d9-bd6d-18ed93082e65
                    company_uuid: e2c4c0ce-2986-48b9-86cf-ec27f6ed9a36
                    account_type: Checking
                    routing_number: '851070439'
                    hidden_account_number: XXXX4087
                    verification_status: verified
                    verification_type: bank_deposits
                    name: Employer Funding Account
      Employee-Bank-Account-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-Bank-Account'
            examples:
              Example:
                value:
                  uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                  employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                  name: BoA Checking Account
                  routing_number: '266905059'
                  hidden_account_number: XXXX1207
                  account_type: Checking
      Employee-Bank-Account-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee-Bank-Account'
            examples:
              Example:
                value:
                  - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                    employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                    name: BoA Checking Account
                    routing_number: '266905059'
                    hidden_account_number: XXXX1207
                    account_type: Checking
      Employee-Payment-Method-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-Payment-Method'
            examples:
              Example:
                value:
                  version: 63859768485e218ccf8a449bb60f14ed
                  type: Direct Deposit
                  split_by: Amount
                  splits:
                    - uuid: e88f9436-b74e-49a8-87e9-777b9bfe715e
                      name: BoA Checking Account
                      priority: 1
                      split_amount: 500
                    - uuid: 0d2b7f73-05d6-4184-911d-269edeecc30a
                      name: Chase Checking Account
                      priority: 2
                      split_amount: 1000
                    - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                      name: US Bank Checking Account
                      priority: 3
                      split_amount: null
      Federal-Tax-Details-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Federal-Tax-Details'
            examples:
              Example:
                value:
                  version: string
                  tax_payer_type: string
                  taxable_as_scorp: false
                  filing_form: string
                  has_ein: true
                  ein_verified: true
                  legal_name: string
      Employee-State-Taxes-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee-State-Tax'
            examples:
              Employee-State-Taxes-List-Example:
                value:
                  employee_uuid: 92fa4d30-e284-43d0-a26e-605619c04beb
                  file_new_hire_report: false
                  is_work_state: true
                  state: CA
                  questions:
                    - label: Filing Status
                      description: >
                        The Head of Household status applies to unmarried
                        individuals who have a relative living with them in their
                        home. If unsure, read the <a target='_blank' data-bypass
                        rel='noopener noreferrer' tabindex='99'
                        href='https://www.ftb.ca.gov/file/personal/filing-status/index.html'>CA
                        Filing Status explanation</a>.
                      key: filing_status
                      input_question_format:
                        type: Select
                        options:
                          - value: S
                            label: Single
                          - value: M
                            label: Married one income
                          - value: MD
                            label: Married dual income
                          - value: H
                            label: Head of household
                          - value: E
                            label: Do Not Withhold
                      answers:
                        - value: S
                          valid_from: '2010-01-01'
                          valid_up_to: null
                    - label: Withholding Allowance
                      description: >
                        This value is needed to calculate the employee's CA income
                        tax withholding. If unsure, use the <a target='_blank'
                        data-bypass rel='noopener noreferrer' tabindex='99'
                        href='http://www.edd.ca.gov/pdf_pub_ctr/de4.pdf'>CA DE-4
                        form</a> to calculate the value manually.
                      key: withholding_allowance
                      input_question_format:
                        type: Number
                      answers:
                        - value: 1
                          valid_from: '2010-01-01'
                          valid_up_to: null
                    - label: Additional Withholding
                      description: >-
                        You can withhold an additional amount of California income
                        taxes here.
                      key: additional_withholding
                      input_question_format:
                        type: Currency
                      answers:
                        - value: '0.0'
                          valid_from: '2010-01-01'
                          valid_up_to: null
                    - label: File a New Hire Report?
                      description: >-
                        State law requires you to file a new hire report within 20
                        days of hiring or re-hiring an employee.
                      key: file_new_hire_report
                      input_question_format:
                        type: Select
                      answers:
                        - value: true
                          valid_from: '2010-01-01'
                          valid_up_to: null
      Employee-Onboarding-Status-Object:
        description: Example response.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee-Onboarding-Status'
            examples:
              Example:
                value:
                  uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                  onboarding_status: admin_onboarding_incomplete
                  onboarding_steps:
                    - title: Personal details
                      id: personal_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Add work address
                      id: add_work_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Add home address
                      id: add_home_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter federal tax withholdings
                      id: federal_tax_setup
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter state tax information
                      id: state_tax_setup
                      required: true
                      completed: false
                      requirements:
                        - add_work_address
                        - add_home_address
                    - title: Direct deposit setup
                      id: direct_deposit_setup
                      required: false
                      completed: false
                      requirements: []
                    - title: Employee form signing
                      id: employee_form_signing
                      required: true
                      completed: false
                      requirements:
                        - federal_tax_setup
                        - state_tax_setup
          application/xml:
            schema:
              type: object
              properties: {}
            examples:
              Example:
                value:
                  uuid: c44d66dc-c41b-4a60-9e25-5e93ff8583f2
                  onboarding_status: admin_onboarding_incomplete
                  onboarding_steps:
                    - title: Personal details
                      id: personal_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter compensation details
                      id: compensation_details
                      required: true
                      completed: false
                      requirements: []
                    - title: Add work address
                      id: add_work_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Add home address
                      id: add_home_address
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter federal tax withholdings
                      id: federal_tax_setup
                      required: true
                      completed: false
                      requirements: []
                    - title: Enter state tax information
                      id: state_tax_setup
                      required: true
                      completed: false
                      requirements:
                        - add_work_address
                        - add_home_address
                    - title: Direct deposit setup
                      id: direct_deposit_setup
                      required: false
                      completed: false
                      requirements: []
                    - title: Employee form signing
                      id: employee_form_signing
                      required: true
                      completed: false
                      requirements:
                        - federal_tax_setup
                        - state_tax_setup
      Payroll-Blocker-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payroll-Blocker'
            examples:
              Payroll Blockers:
                value:
                  - key: wc_pending_approval
                    message: Worker's compensation policy needs to be accepted.
                  - key: eftps_in_error
                    message: >-
                      We could not make payments to the Electronic Federal Tax
                      Payment System.
                  - key: geocode_error
                    message: >-
                      Company or employee address could not be verified. Please
                      ensure all addresses are valid.
                  - key: geocode_needed
                    message: >-
                      Company or employee address verification is missing. Please
                      ensure all addresses are entered correctly.
                  - key: pay_schedule_setup_not_complete
                    message: >-
                      Some employees don’t have a pay schedule set up yet. Please
                      complete this step to run payroll.
                  - key: invalid_signatory
                    message: >-
                      A signatory who is authorized to sign documents on behalf of
                      your company is required. Please ensure their identity
                      verification is successful.
                  - key: suspended
                    message: Company is suspended and cannot run payroll.
                  - key: soft_suspended
                    message: >-
                      Company is placed in a 'soft' suspension state and requires
                      missing/incorrect information to be corrected.
                  - key: pending_payroll_review
                    message: >-
                      Payroll is blocked. We are reviewing payroll information in
                      your account. Please contact support if you believe this is
                      an error.
                  - key: pending_recovery_case
                    message: >-
                      Payroll is blocked due to an open recovery case. Please
                      contact support if you believe this is an error.
                  - key: pending_information_request
                    message: >-
                      Payroll is blocked due to an open information request.
                      Please contact support if you believe this is an error.
                  - key: needs_approval
                    message: Company needs to be approved to run payroll.
                  - key: missing_addresses
                    message: Company must add addresses in order to run payroll.
                  - key: missing_federal_tax_setup
                    message: >-
                      Company must complete federal tax setup in order to run
                      payroll.
                  - key: missing_industry_selection
                    message: >-
                      Company must complete industry selection in order to run
                      payroll.
                  - key: missing_bank_info
                    message: Company must have a bank account in order to run payroll.
                  - key: missing_employee_setup
                    message: Company must add employees in order to run payroll.
                  - key: missing_state_tax_setup
                    message: >-
                      Company must complete state tax setup in order to run
                      payroll.
                  - key: missing_pay_schedule
                    message: Company must have a pay schedule in order to run payroll.
                  - key: missing_forms
                    message: Company forms must be signed in order to run payroll.
                  - key: missing_bank_verification
                    message: >-
                      Company bank account must be verified in order to run
                      payroll.
                  - key: missing_signatory
                    message: >-
                      Company must have a verified signatory in order to run
                      payroll.
      Generated-Document:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Generated-Document'
            examples:
              Example:
                value:
                  document_urls:
                    - https://document.url.com
                  request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
                  status: succeeded
      Notification:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
            examples:
              Example:
                value:
                  uuid: 7b1d0df1-6403-4a06-8768-c1dd7d24d27a
                  company_uuid: 88f7cca1-dcad-4d20-84db-7fb80303d69f
                  title: >-
                    Action required: Additional information needed to process
                    payroll
                  message: >-
                    If we do not receive this information as soon as possible,
                    your payroll may not be processed on time.
                  category: information_request
                  actionable: true
                  published_at: '2022-01-01T00:00:00.000Z'
      Event-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Event'
            examples:
              Example:
                value:
                  - uuid: f7397a24-57ad-4fae-b011-d258e8232900
                    event_type: employee.bank_account.created
                    resource_type: Company
                    resource_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
                    entity_type: BankAccount
                    entity_uuid: 92a20431-9489-4bde-ad27-6feb20b969d5
                    timestamp: 1686784995
      Payroll-Check:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payroll-Check'
            examples:
              Example:
                value:
                  payroll_uuid: a83d0bd8-7d20-43b9-834c-6d514ef6cb20
                  printing_format: top
                  starting_check_number: '10'
                  request_uuid: p83d0ca8-7d41-42a9-834y-7d218ef6cb20
                  status: pending
      Payroll-Receipt:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payroll-Receipt'
            examples:
              Example:
                value:
                  totals:
                    company_debit: '1080.47'
                    net_pay_debit: '748.34'
                    child_support_debit: '100.0'
                    reimbursement_debit: '50.0'
                    tax_debit: '182.13'
                  taxes:
                    - name: Federal Income Tax
                      amount: '30.36'
                    - name: Social Security
                      amount: '104.54'
                    - name: Medicare
                      amount: '24.46'
                    - name: Additional Medicare
                      amount: '0.0'
                    - name: TX SUTA
                      amount: '22.77'
                    - name: FUTA
                      amount: '0.0'
                  employee_compensations:
                    - employee_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
                      employee_first_name: Patricia
                      employee_last_name: Hamill
                      payment_method: Direct Deposit
                      net_pay: '748.34'
                      total_tax: '182.13'
                      total_garnishments: '0.0'
                      child_support_garnishment: '100.0'
                      total_reimbursement: '50.0'
                  licensee:
                    name: Gusto, Zenpayroll Inc.
                    address: 525 20th St
                    city: San Francisco
                    state: CA
                    postal_code: '94107'
                    phone_number: '4157778888'
                  payroll_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
                  company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
                  name_of_sender: Torp and Sons and Sons
                  name_of_recipient: Payroll Recipients
                  recipient_notice: >-
                    Payroll recipients include the employees listed below plus the
                    tax agencies for the taxes listed below.
                  debit_date: '2022-06-02'
                  license: >-
                    ZenPayroll, Inc., dba Gusto is a licensed money transmitter.
                    For more about Gusto’s licenses and your state-specific rights
                    to request information, submit complaints, dispute errors, or
                    cancel transactions, visit our license page.
                  license_uri: https://gusto.com/about/licenses
                  right_to_refund: https://gusto.com/about/licenses
                  liability_of_licensee: https://gusto.com/about/licenses
      Payroll-Reversal-List:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payroll-Reversal'
            examples:
              Example:
                value:
                  reversed_payroll_uuid: 09505984-8d8c-41a3-adbe-5740322ae8e9
                  reversal_payroll_uuid: 0424688e-0a2e-4cd0-ac86-42283e788fb3
                  reason: Customer Request
                  approved_at: null
                  category: convert_check_ee_requested
                  reversed_employee_uuids:
                    - 5f036964-185e-4c85-bbf2-3873e1203b30
      Gross-Up-Pay:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gross-Up-Pay'
            examples:
              Example:
                value:
                  net_pay: '1183.25'
      Contractor-Payment-Receipt:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor-Payment-Receipt'
            examples:
              Example:
                value:
                  receipt_id: 7757500935137343
                  contractor_payment_uuid: afccb970-357e-4013-81f5-85dafc74f9b6
                  name_of_recipient: Patricia Hamill
                  totals:
                    company_debit: '748.34'
                  contractor_payments:
                    - contractor_uuid: f83d0bd8-7e20-43b9-834c-6d514ef6cb47
                      contractor_first_name: Patricia
                      contractor_last_name: Hamill
                      contractor_business_name: ''
                      contractor_type: Individual
                      payment_method: Direct Deposit
                      wage: '448.34'
                      bonus: '248.00'
                      reimbursement: '100.00'
                  licensee:
                    name: Gusto, Zenpayroll Inc.
                    address: 525 20th St
                    city: San Francisco
                    state: CA
                    postal_code: '94107'
                    phone_number: '4157778888'
                  company_uuid: c827aa0d-3928-4d5a-ab1f-400641a7d2b8
                  name_of_sender: Torp and Sons and Sons
                  debit_date: '2022-06-02'
                  license: >-
                    ZenPayroll, Inc., dba Gusto is a licensed money transmitter.
                    For more about Gusto’s licenses and your state-specific rights
                    to request information, submit complaints, dispute errors, or
                    cancel transactions, visit our license page.
                  license_uri: https://gusto.com/about/licenses
                  right_to_refund: https://gusto.com/about/licenses
                  liability_of_licensee: https://gusto.com/about/licenses
      Contractor-Bank-Account-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor-Bank-Account'
            examples:
              Example:
                value:
                  uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                  employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                  name: BoA Checking Account
                  routing_number: '266905059'
                  hidden_account_number: XXXX1207
                  account_type: Checking
          application/xml:
            schema:
              type: object
              properties: {}
            examples:
              Example:
                value:
                  uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                  employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                  name: BoA Checking Account
                  routing_number: '266905059'
                  hidden_account_number: XXXX1207
                  account_type: Checking
      Contractor-Bank-Account-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Contractor-Bank-Account'
            examples:
              Example:
                value:
                  - uuid: 1531e824-8d9e-4bd8-9f90-0d04608125d7
                    employee_uuid: 9fcf1b1d-8886-4691-9283-383d3bdd4fd9
                    name: BoA Checking Account
                    routing_number: '266905059'
                    hidden_account_number: XXXX1207
                    account_type: Checking
      Time-Off-Policy-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Time-Off-Policy'
            examples:
              Unlimited Policy:
                value:
                  uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                  company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                  name: Test Vacation Unlimited Policy
                  policy_type: vacation
                  accrual_method: unlimited
                  accrual_rate: null
                  accrual_rate_unit: null
                  paid_out_on_termination: false
                  accrual_waiting_period_days: null
                  carryover_limit_hours: null
                  max_accrual_hours_per_year: null
                  max_hours: null
                  version: f5556bce3d75ec2b62bd11990aa7993a
                  is_active: true
                  complete: true
                  employees:
                    - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                    - uuid: 3633ce57-abb7-422f-8c5a-455566618e6a
                    - uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
              Fixed Policy:
                value:
                  uuid: 2439c13f-f6d7-4a93-af8c-175fd4cc7ce8
                  company_uuid: f5f7b10d-2ddb-42f6-a955-d55320ce5316
                  name: Test Vacation Fixed Policy
                  policy_type: vacation
                  accrual_method: per_anniversary_year
                  accrual_rate: '120.0'
                  accrual_rate_unit: null
                  paid_out_on_termination: true
                  accrual_waiting_period_days: 0
                  carryover_limit_hours: '240.0'
                  max_accrual_hours_per_year: '120.0'
                  max_hours: '300.0'
                  version: f5556bce3d75ec2b62bd11990aa7993a
                  is_active: true
                  complete: true
                  employees:
                    - uuid: de7a5fb3-2e0f-460a-abbf-467fe310bf5c
                      balance: '80.0'
                    - uuid: 92af03c7-a833-43ae-bae8-f67007a59b37
                      balance: '60.0'
              Hourly Policy:
                value:
                  uuid: bd5f354f-12e0-4a5e-ad1f-953bb2685ad4
                  company_uuid: 6767445f-5075-4ea4-a7f5-d5b5b93d4d60
                  name: Test Vacation Hourly Policy
                  policy_type: vacation
                  accrual_method: per_hour_paid
                  accrual_rate: '4.0'
                  accrual_rate_unit: '80.0'
                  paid_out_on_termination: true
                  accrual_waiting_period_days: 30
                  carryover_limit_hours: '200.0'
                  max_accrual_hours_per_year: '120.0'
                  max_hours: '240.0'
                  version: f5556bce3d75ec2b62bd11990aa7993a
                  is_active: true
                  complete: true
                  employees:
                    - uuid: 1ea2764d-0f1a-4f09-b1d9-3006aecf63c4
                      balance: '56.0'
                    - uuid: a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8
                      balance: '84.0'
        headers: {}
      Time-Off-Policy-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Time-Off-Policy'
            examples:
              example:
                value:
                  - uuid: 3f746cd0-dd08-408f-b712-8180c7c621e9
                    company_uuid: de83cff2-8e7a-448e-a28c-14258a9971c3
                    name: Test Vacation Unlimited Policy
                    policy_type: vacation
                    accrual_method: unlimited
                    accrual_rate: null
                    accrual_rate_unit: null
                    paid_out_on_termination: false
                    accrual_waiting_period_days: null
                    carryover_limit_hours: null
                    max_accrual_hours_per_year: null
                    max_hours: null
                    version: f5556bce3d75ec2b62bd11990aa7993a
                    is_active: true
                    complete: true
                    employees:
                      - uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                      - uuid: 3633ce57-abb7-422f-8c5a-455566618e6a
                      - uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                  - uuid: 2439c13f-f6d7-4a93-af8c-175fd4cc7ce8
                    company_uuid: f5f7b10d-2ddb-42f6-a955-d55320ce5316
                    name: Test Vacation Fixed Policy
                    policy_type: vacation
                    accrual_method: per_anniversary_year
                    accrual_rate: '120.0'
                    accrual_rate_unit: null
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 0
                    carryover_limit_hours: '240.0'
                    max_accrual_hours_per_year: '120.0'
                    max_hours: '300.0'
                    version: f5556bce3d75ec2b62bd11990aa7993a
                    is_active: true
                    complete: true
                    employees:
                      - uuid: de7a5fb3-2e0f-460a-abbf-467fe310bf5c
                        balance: '80.0'
                      - uuid: 92af03c7-a833-43ae-bae8-f67007a59b37
                        balance: '60.0'
                  - uuid: bd5f354f-12e0-4a5e-ad1f-953bb2685ad4
                    company_uuid: 6767445f-5075-4ea4-a7f5-d5b5b93d4d60
                    name: Test Vacation Hourly Policy
                    policy_type: vacation
                    accrual_method: per_hour_paid
                    accrual_rate: '4.0'
                    accrual_rate_unit: '80.0'
                    paid_out_on_termination: true
                    accrual_waiting_period_days: 30
                    carryover_limit_hours: '200.0'
                    max_accrual_hours_per_year: '120.0'
                    max_hours: '240.0'
                    version: f5556bce3d75ec2b62bd11990aa7993a
                    is_active: true
                    complete: true
                    employees:
                      - uuid: 1ea2764d-0f1a-4f09-b1d9-3006aecf63c4
                        balance: '56.0'
                      - uuid: a0db19a2-7c8f-42b4-9d4c-2e6246c3d6e8
                        balance: '84.0'
      Time-Off-Activity-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Time-Off-Activity'
            examples:
              example:
                value:
                  - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                    time_off_type: vacation
                    policy_name: Paid Time Off
                    event_type: TimeOffEvent::AddToPolicy
                    event_description: 'Added to policy: Vacation Per Hour Worked'
                    effective_time: '2022-09-27T13:43:03.000-07:00'
                    balance: '0.0'
                    balance_change: '0.0'
                  - policy_uuid: a7838f74-4c29-4b70-9bfb-02a4e3e60709
                    time_off_type: vacation
                    policy_name: Paid Time Off
                    event_type: TimeOffEvent::Accrual
                    event_description: Accrual
                    effective_time: '2022-09-27T14:43:03.000-07:00'
                    balance: '2.0'
                    balance_change: '2.0'
        headers: {}
      Minimum-Wage-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Minimum-Wage'
            examples:
              example:
                value:
                  uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
                  authority: State
                  wage: '13.0'
                  wage_type: Regular
                  effective_date: '2022-01-01'
                  notes: Employers with 6 or more employees
      Invoice-Data-Object:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice-Data'
            examples:
              example:
                value:
                  active_companies:
                    - company_uuid: 05ed3150-591e-4f8b-bfd5-55d478edd2d8
                      active_employees: 5
                      active_contractors: 3
                      initial_invoice_period: 2022-01
                    - company_uuid: 9b37429c-e540-40fb-86b3-738ca9af65c7
                      active_employees: 0
                      active_contractors: 1
                      initial_invoice_period: 2023-05
      Minimum-Wage-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Minimum-Wage'
            examples:
              Example:
                value:
                  - uuid: 70c523ff-c71e-4474-9c83-a4ea51bd54a8
                    authority: State
                    wage: '13.0'
                    wage_type: Regular
                    effective_date: '2022-01-01'
                    notes: Employers with 6 or more employees
      Recovery-Case-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Recovery-Case'
            examples:
              Example:
                value:
                  - uuid: e83d273e-4ae9-4b61-9c71-4030c2f73093
                    company_uuid: c5e3e3e9-732f-4762-849e-20b5cec9036f
                    status: open
                    latest_error_code: R01
                    original_debit_date: '2023-10-11'
                    check_date: '2023-10-13'
                    payroll_uuid: 210f2034-fb4a-4059-b109-6c3b5efe499d
                    contractor_payment_uuids: null
                    amount_outstanding: 10499.43
                    event_total_amount: 5912.07
      Ach-Transaction-List:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Ach-Transaction'
            examples:
              Example:
                value:
                  - uuid: 123e4567-e89b-12d3-a456-426655440000,
                    company_uuid: 456e7890-e12b-34c5-d678-901234567890,
                    payment_event_type: Payroll,
                    payment_event_uuid: 789e0123-e45f-67ab-c890-123456789012,
                    recipient_type: Employee,
                    recipient_uuid: 012e3456-f78d-90ab-12cd-345678901234,
                    error_code: null,
                    transaction_type: Credit employee pay,
                    payment_status: submitted,
                    payment_direction: credit,
                    payment_event_check_date: 2023-10-02,
                    payment_date: 2023-10-17,
                    amount: 123.00,
                    description: PAY 380654
    requestBodies:
      post-employee-ytd-benefit-amounts-from-different-company:
        content:
          application/json:
            schema:
              type: object
              properties:
                benefit_type:
                  type: number
                  description: The benefit type supported by Gusto.
                tax_year:
                  type: number
                  minimum: 2000
                  maximum: 2999
                  description: The tax year for which this amount applies.
                ytd_employee_deduction_amount:
                  type: string
                  default: '0.00'
                  description: >-
                    The year-to-date employee deduction made outside the current
                    company.
                ytd_company_contribution_amount:
                  type: string
                  default: '0.00'
                  description: >-
                    The year-to-date company contribution made outside the current
                    company.
              required:
                - benefit_id
                - tax_year
                - ytd_employee_deduction_amount
                - ytd_company_contribution_amount
  security:
    - CompanyAccessAuth: []
  x-readme:
    explorer-enabled: true
    proxy-enabled: true
  _id: 65f09fb916483f000fbb4870
konfigCliVersion: 1.38.37
