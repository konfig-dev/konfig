publishJson:
  company: Pay.com
  serviceName: false
  sdkName: pay-com-{language}-sdk
  clientName: PayCom
  metaDescription: >-
    Our mission at Pay.com is to create an all-inclusive economy.

    We help big entrepreneurs to move big payments. And micro-merchants to
    realize their biggest dreams.



    The company was launched in 2020 and is currently expanding with 5 global
    offices offering top-tier customer service. Find out more at www.Pay.com.
  apiStatusUrls: inherit
  homepage: pay.com
  developerDocumentation: pay.com/docs/api
  categories:
    - payments
rawSpecString: |
  openapi: 3.1.0
  info:
    title: Pay.com API
    version: '1.0'
    summary: Pay.com API
    contact:
      name: Pay.com Team
      url: https://pay.com
      email: support@pay.com
    termsOfService: https://pay.com/legal/terms-and-conditions
    description: ''
  servers:
    - url: https://api.sandbox.pay.com
      description: Test mode (Sandbox)
    - url: https://api.pay.com
      description: Live mode (Production)
  paths:
    /v1/sessions/payment:
      parameters: []
      post:
        summary: Create a Payment Session
        operationId: create-a-payment-session
        description: >-
          Create a new Payment Session


          After a Payment Session is successfully confirmed by the customer, a
          Charge (or a Hold when `capture=false`) will be created and executed
          with the payment method entered by the customer during the session.
        requestBody:
          $ref: '#/components/requestBodies/Create-Payment-Session'
        responses:
          '200':
            $ref: '#/components/responses/Create-Payment-Session'
    /v1/sessions/payment/{id}:
      parameters:
        - schema:
            type: string
            example: ps_217940156986951680
            pattern: ^ps_\d{18,20}
          name: id
          in: path
          required: true
          description: The id of the Payment Session to retrieve.
      get:
        summary: Retrieve a Payment Session
        operationId: retrieve-a-payment-session
        responses:
          '200':
            $ref: '#/components/responses/Payment-Session'
        description: >-
          Retrieves the details of a Payment Session.


          Querying the API with the unique identifier of a Payment Session that
          was returned from a previous request will return the corresponding
          Payment Session information.
    /v1/sessions/setup:
      parameters: []
      post:
        summary: Create a Setup Session
        operationId: create-a-setup-session
        description: >-
          Create a new Setup Session


          After a Setup Session is successfully confirmed by the customer, a
          Payment Method will be created and can be used to create Charges or
          Holds from the API.
        requestBody:
          $ref: '#/components/requestBodies/Create-Setup-Session'
        responses:
          '200':
            $ref: '#/components/responses/Create-Setup-Session'
    /v1/sessions/setup/{id}:
      parameters:
        - schema:
            type: string
            example: ss_217940156986951680
            pattern: ^ss_\d{18,20}
          name: id
          in: path
          required: true
          description: The id of the Setup Session to retrieve.
      get:
        summary: Retrieve a Setup Session
        operationId: retrieve-a-setup-session
        responses:
          '200':
            $ref: '#/components/responses/Setup-Session'
        description: >-
          Retrieves the details of a Setup Session.


          Querying the API with the unique identifier of a Setup Session that was
          returned from a previous request will return the corresponding Setup
          Session information.
    /v1/sessions/payment/{id}/attempts:
      parameters:
        - schema:
            type: string
            example: ps_217940156986951680
            pattern: ^ps_\d{18,20}
          name: id
          in: path
          required: true
          description: The id of the Payment Session to retrieve attempts for.
      get:
        summary: Retrieve Attempts of a Session
        operationId: retrieve-attempts-of-a-payment-session
        responses:
          '200':
            $ref: '#/components/responses/Payment-Attempts'
        description: >-
          Retrieves the details of a Payment Session.


          Querying the API with the unique identifier of a Payment Session that
          was returned from a previous request will return the corresponding
          Payment Attempts.
    /v1/sessions/setup/{id}/attempts:
      parameters:
        - schema:
            type: string
            example: ss_217940156986951680
            pattern: ^ss_\d{18,20}
          name: id
          in: path
          required: true
          description: The id of the Setup Session to retrieve attempts for.
      get:
        summary: Retrieve Attempts of a Session
        operationId: retrieve-attempts-of-a-setup-session
        responses:
          '200':
            $ref: '#/components/responses/Setup-Attempts'
        description: >-
          Retrieves the details of a Setup Session.


          Querying the API with the unique identifier of a Setup Session that was
          returned from a previous request will return the corresponding Setup
          Attempts.
    /v1/sessions/authentication/linked:
      parameters: []
      post:
        summary: Create a Linked Session
        operationId: create-a-linked-authentication-session
        description: >-
          Create a new Linked Authentication Session


          A Linked Authentication Session can be used to authenticate a Charge or
          Hold with a `requires_authentication` status.
        requestBody:
          $ref: '#/components/requestBodies/Create-a-Linked-Authentication-Session'
        responses:
          '200':
            $ref: '#/components/responses/Authentication-Session'
    /v1/sessions/authentication/independent:
      parameters: []
      post:
        summary: Create an Independent Session
        operationId: create-an-independent-authentication-session
        description: >-
          Create a new Independent Authentication Session


          An Independent Authentication Session can be used to authentication a
          payment with SCA, without proccessing a payment.
        requestBody:
          $ref: >-
            #/components/requestBodies/Create-an-Independent-Authentication-Session
        responses:
          '200':
            $ref: '#/components/responses/Authentication-Session'
    /v1/attempts/payment/{id}:
      parameters:
        - schema:
            type: string
            example: psatt_217940156986951680_0
            pattern: ^psatt_\d{18,20}_\d{1}
          name: id
          in: path
          required: true
          description: The id of the Payment Session to retrieve.
      get:
        summary: Retrieve a Payment Session
        operationId: retrieve-a-payment-attempt
        responses:
          '200':
            $ref: '#/components/responses/Payment-Attempt'
        description: >-
          Retrieves the details of a Payment Attempt.


          Querying the API with the unique identifier of a Payment Attempt that
          was returned from a previous request will return the corresponding
          Payment Attempt information.
    /v1/attempts/setup/{id}:
      parameters:
        - schema:
            type: string
            example: ssatt_217940156986951680_0
            pattern: ^ssatt_\d{18,20}_\d{1}
          name: id
          in: path
          required: true
          description: The id of the Setup Attempt to retrieve.
      get:
        summary: Retrieve a Setup Attempt
        operationId: retrieve-a-setup-attempt
        responses:
          '200':
            $ref: '#/components/responses/Setup-Attempt'
        description: >-
          Retrieves the details of a Setup Attempt.


          Querying the API with the unique identifier of a Setup Attempt that was
          returned from a previous request will return the corresponding Setup
          Attempt information.
    /v1/charges:
      post:
        summary: Create a Charge
        operationId: create-charge
        responses:
          '200':
            $ref: '#/components/responses/Charge'
        requestBody:
          $ref: '#/components/requestBodies/Create-Charge'
      parameters: []
    /v1/charges/{id}:
      parameters:
        - schema:
            type: string
            example: chrg_146231656762572800
            pattern: ^chrg_\d{18,20}
          name: id
          in: path
          required: true
          description: The id of the Charge to retrieve.
      get:
        summary: Retrieve a Charge
        tags: []
        responses:
          '200':
            $ref: '#/components/responses/Charge'
        operationId: retrieve-a-charge
        description: >-
          Retrieves the details of a Charge.


          Querying the API with the unique identifier of a Charge that was
          returned from a previous request will return the corresponding Charge
          information.
    /v1/charges/{id}/confirm:
      parameters:
        - schema:
            type: string
            example: chrg_146231656762572800
            pattern: ^chrg_\d{18,20}
          name: id
          in: path
          required: true
          description: The id of the Charge to confirm.
      post:
        summary: Confirm a Charge
        tags: []
        responses:
          '200':
            $ref: '#/components/responses/Charge'
        operationId: confirm-a-charge
        description: >-
          Confirms a Charge with status of `requires_confirmation` after
          successful authentication.
    /v1/refunds:
      post:
        summary: Create a Refund
        operationId: create-a-refund
        responses:
          '200':
            $ref: '#/components/responses/Refund'
        requestBody:
          $ref: '#/components/requestBodies/Create-Refund'
        description: >-
          Refund the funds from a Charge to the Payment Method.


          Creating a Refund will refund a Charge that has previously been
          created. 

          Funds will be returned to the Payment Method that was originally
          charged.


          You can optionally refund only part of a charge. 

          You can do so multiple times, until the entire charge has been refunded.
      parameters: []
    /v1/refunds/{id}:
      parameters:
        - schema:
            type: string
            example: rfnd_179937907841176576
            pattern: ^rfnd_\d{18,20}
          name: id
          in: path
          required: true
          description: The id of the Refund to retrieve.
      get:
        summary: Retrieve a Refund
        tags: []
        responses:
          '200':
            $ref: '#/components/responses/Refund'
        operationId: retrieve-a-refund
        description: >-
          Retrieves the details of a Refund.


          Querying the API with the unique identifier of a Refund that was
          returned from a previous request will return the corresponding Refund
          information.
    /v1/holds:
      post:
        summary: Create a Hold
        operationId: create-a-hold
        responses:
          '200':
            $ref: '#/components/responses/Hold'
        requestBody:
          $ref: '#/components/requestBodies/Create-Hold'
      parameters: []
    /v1/holds/{id}:
      parameters:
        - schema:
            type: string
            example: hld_158938670341035008
            pattern: ^hld_\d{18,20}
          name: id
          in: path
          required: true
          description: The id of the Hold to retrieve.
      get:
        summary: Retrieve a Hold
        tags: []
        responses:
          '200':
            $ref: '#/components/responses/Hold'
        operationId: retrieve-a-hold
        description: >-
          Retrieves the details of a Hold.


          Querying the API with the unique identifier of a Hold that was returned
          from a previous request will return the corresponding Hold information.
    /v1/holds/{id}/capture:
      parameters:
        - schema:
            type: string
            example: hld_158938670341035008
            pattern: ^hld_\d{18,20}
          name: id
          in: path
          required: true
          description: The identifier of the Hold to capture.
      post:
        summary: Capture a Hold
        operationId: capture-a-hold
        responses:
          '200':
            $ref: '#/components/responses/Charge'
        description: >-
          Capture the funds of an existing, uncaptured, Hold. 


          This is the second half of the two-step payment flow, where first a Hold
          was created with the `/holds` API or with a Payment Session (`capture`
          flag set to `false`).


          The API will create a Charge from the referenced Hold and response with
          the created Charge information.
        requestBody:
          $ref: '#/components/requestBodies/Capture-a-Hold'
    /v1/holds/{id}/cancel:
      parameters:
        - schema:
            type: string
            example: hld_158938670341035008
            pattern: ^hld_\d{18,20}
          name: id
          in: path
          required: true
          description: The identifier of the Hold to cancel.
      post:
        summary: Cancel a Hold
        operationId: cancel-a-hold
        responses:
          '200':
            $ref: '#/components/responses/Canceled-Hold'
        description: >-
          Cancels the hold on a funds being held by an uncaptured Hold. 


          A Hold object can be canceled when it is in the status of:
          `requires_capture`. Once canceled, the remaining `amount_capturable`
          will automatically be released and no additional charges can be created
          from the Hold. 
        parameters: []
    /v1/holds/{id}/confirm:
      parameters:
        - schema:
            type: string
            example: hld_146231656762572800
            pattern: ^hld_\d{18,20}
          name: id
          in: path
          required: true
          description: The id of the Charge to confirm.
      post:
        summary: Confirm a Hold
        tags: []
        responses:
          '200':
            $ref: '#/components/responses/Hold'
        operationId: confirm-a-hold
        description: >-
          Confirms a Hold with status of `requires_confirmation` after successful
          authentication.
    /v1/payouts:
      post:
        summary: Create a Payout
        operationId: create-a-payout
        responses:
          '200':
            $ref: '#/components/responses/Payout'
        requestBody:
          $ref: '#/components/requestBodies/Create-Payout'
      parameters: []
    /v1/payouts/{id}:
      parameters:
        - schema:
            type: string
            example: po_220442125165133824
          name: id
          in: path
          required: true
          description: The id of the Payout to retrieve.
      get:
        summary: Retrieve a Payout
        tags: []
        responses:
          '200':
            $ref: '#/components/responses/Payout'
        operationId: retrieve-a-payout
        description: >-
          Retrieves the details of a Payout.


          Querying the API with the unique identifier of a Payout that was
          returned from a previous request will return the corresponding Payout
          information.
    /v1/payment_methods:
      post:
        summary: Create a Payment Method
        operationId: create-payment-method
        responses:
          '200':
            $ref: '#/components/responses/Payment-Method'
        requestBody:
          $ref: '#/components/requestBodies/Create-Payment-Method'
    /v1/payment_methods/{id}:
      parameters:
        - schema:
            type: string
            example: pm_card_220442125165133824
          name: id
          in: path
          required: true
          description: The id of the Payment Method.
      get:
        summary: Retrieve a Payment Method
        tags: []
        responses:
          '200':
            $ref: '#/components/responses/Payment-Method'
        operationId: retrieve-a-payment-method
        description: >-
          Retrieves the details of a Payment Method.


          Querying the API with the unique identifier of a Payment Method that was
          returned from a previous request will return the corresponding Payment
          Method information.
      delete:
        summary: Delete a Payment Method
        operationId: delete-a-payment-method
        responses:
          '200':
            description: OK
        description: Delete a Payment Method.
    /v1/customers/{reference_id}/payment_methods:
      parameters:
        - schema:
            type: string
            example: 927071e4-464c-4f5d-a079-4aa097f922ca
          name: reference_id
          in: path
          required: true
          description: The reference id of the Customer to retrieve the payment methods for.
      get:
        summary: Retrieve Payment Methods
        tags: []
        responses:
          '200':
            $ref: '#/components/responses/Payment-Methods'
        operationId: retrieve-customers-payment-methods
        description: >-
          Retrieves details of all Payment Methods associated with a customer.


          Querying the API with the reference id of a customer will return the
          corresponding Payment Method information.
    /v1/customers:
      post:
        summary: Create a Customer
        operationId: create-customer
        responses:
          '200':
            $ref: '#/components/responses/Customer'
        requestBody:
          $ref: '#/components/requestBodies/Create-Customer'
    /v1/customers/{reference_id}:
      parameters:
        - schema:
            type: string
            example: 927071e4-464c-4f5d-a079-4aa097f922ca
          name: reference_id
          in: path
          required: true
          description: The reference id of the Customer.
      get:
        summary: Retrieve a Customer
        tags: []
        responses:
          '200':
            $ref: '#/components/responses/Customer'
        operationId: retrieve-a-customer
        description: >-
          Retrieves the details of a Customer


          Querying the API with the reference id of a customer will return the
          corresponding Customer information.
      delete:
        summary: Delete a Customer
        operationId: delete-a-Customer
        responses:
          '200':
            description: OK
        description: Delete a Customer
      put:
        summary: Update a Customer
        operationId: update-a-customer
        responses:
          '200':
            $ref: '#/components/responses/Customer'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  default_source:
                    type: string
                    description: >-
                      The payment method to set as the default payment method of
                      the customer.
        description: Update details of a Customer
  components:
    securitySchemes:
      x-paycom-api-key:
        name: x-paycom-api-key
        type: apiKey
        in: header
    schemas:
      Setup-Session:
        type: object
        x-internal: false
        examples:
          - id: ss_217940156986951680
            resource: setup_session
            currency: usd
            created: '2022-09-07T13:40:41.751Z'
            customer: cust_222712682678060032
            customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
            client_secret: >-
              eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJAcGF5LWNvbS9wYXltZW50LWdhdGV3YXkiLCJpYXQiOjE2Mjk2NDczMjYsImV4cCI6MTY2MTE4MzMyNiwiYXVkIjoiaGkiLCJzdWIiOiJ3ZSBsb3ZlIHlvdSA6KSJ9.XK1D0v0XjcNYoQrwOeNPemCEFA6TGuHtGflyiUTtjYs
            metadata: {}
            payment_method: null
            payment_method_details: null
            payment_method_options:
              card:
                accepted_card_brands:
                  - visa
                  - mastercard
                accepted_card_categories:
                  - consumer
                accepted_card_funding:
                  - debit
                  - credit
                accepted_card_jurisdictions:
                  - domestic
                duplicate_card_check: true
                enforce_customer_name_as_cardholder_name: false
                security_checks:
                  address_line1_check: false
                  address_postal_code_check: false
                  cvv_check: true
                request_threed_secure: challenge
            payment_method_types:
              - card
            billing_details: null
            setup_future_usage: null
            status: open
        properties:
          id:
            type: string
            description: Unique identifier for Setup Session object.
          resource:
            type: string
            description: String representing the resource type.
          billing_details:
            $ref: '#/components/schemas/Billing-Details'
            description: >-
              Billing information associated with the customer at the time of the
              Setup Session.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          client_secret:
            type: string
            description: >-
              Client secret to use with Pay Components to render the Setup
              Session.
          customer:
            type: string
            description: ID of the customer this Setup Session is for if one exists.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This should be a customer ID
              that identifies the customer in your system. Used to retrieve and
              manage your customer's saved payment methods.
          failure_code:
            type: string
          failure_reason:
            type: string
          metadata:
            type: object
            description: >-
              Set of key-value pairs that you can attach to the resource. This can
              be useful for storing additional information about the object in a
              structured format.
          payment_method:
            type: string
            description: ID of the Payment Method used in the Setup Session.
          payment_method_details:
            $ref: '#/components/schemas/Payment-Method-Details'
            description: Details about the payment method.
          payment_method_options:
            $ref: '#/components/schemas/Payment-Method-Options'
            description: Payment method specific configurations.
          payment_method_types:
            type: array
            description: >-
              The list of payment method types that this Setup Session is allowed
              to use. If this is not provided, defaults to `["card"]`.
            items:
              type: string
          setup_future_usage:
            type: string
            description: >-
              Indicates that you intend to make future payments with this payment
              method that will be used in this Payment.


              **Possible enum values:**

              `on_session`

              Use `on_session` if you intend to only reuse the payment method when
              your customer is present in your checkout flow.


              `off_session`

              Use `off_session` if your customer may or may not be present in your
              checkout flow.
          status:
            type: string
            description: Status of the Setup Session.
            enum:
              - open
              - completed
              - failed
      Authentication-Session:
        type: object
        examples:
          - id: sca_217940156986951680
            resource: authentication_session
            amount: 10000
            amount_human_readable: '100.00'
            billing_details: null
            cavv: null
            confirm: true
            charge: null
            currency: usd
            created: '2022-09-07T13:40:41.751Z'
            customer: cust_222712682678060032
            customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
            client_secret: >-
              eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJAcGF5LWNvbS9wYXltZW50LWdhdGV3YXkiLCJpYXQiOjE2Mjk2NDczMjYsImV4cCI6MTY2MTE4MzMyNiwiYXVkIjoiaGkiLCJzdWIiOiJ3ZSBsb3ZlIHlvdSA6KSJ9.XK1D0v0XjcNYoQrwOeNPemCEFA6TGuHtGflyiUTtjYs
            ds_trans_id: null
            eci: null
            flow: null
            hold: null
            metadata: {}
            payment_method: null
            payment_method_details: null
            return_url: https://example.com/callback.html
            shipping: null
            reference: null
            status: open
            url: >-
              https://sca.pay.com/authenticate?client_secret=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJAcGF5LWNvbS9wYXltZW50LWdhdGV3YXkiLCJpYXQiOjE2Mjk2NDczMjYsImV4cCI6MTY2MTE4MzMyNiwiYXVkIjoiaGkiLCJzdWIiOiJ3ZSBsb3ZlIHlvdSA6KSJ9.XK1D0v0XjcNYoQrwOeNPemCEFA6TGuHtGflyiUTtjYs
            version: null
            xid: null
        properties:
          id:
            type: string
            description: Unique identifier for Authetication Session object.
          resource:
            type: string
            description: String representing the resource type.
          amount:
            type: integer
            description: Amount, in minor units.
          amount_human_readable:
            type: string
            description: Amount in human readable format.
          billing_details:
            $ref: '#/components/schemas/Billing-Details'
            description: >-
              Billing information associated with the customer at the time of the
              Authentication Session.
          cavv:
            type: string
            description: >-
              Card authentication verification value, provided by the 3D Secure
              Provider.
          confirm:
            type: boolean
          charge:
            type: string
            description: >-
              Unique identifer of the linked Charge for a Linked Authenitcation
              Session.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          customer:
            type: string
            description: ID of the customer this Authentication Session is for if one exists.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This should be a customer ID
              that identifies the customer in your system. Used to retrieve and
              manage your customer's saved payment methods.
          client_secret:
            type: string
            description: >-
              Client secret to use with Pay Components to render the
              Authentication Session.
          ds_trans_id:
            type: string
            description: >-
              Universally unique transaction identifier assigned by the ACS to
              identify a single transaction.
          eci:
            type: string
            description: This indicator shows the value of the result of the authentication.
          flow:
            type: string
            description: The authentication flow.
            enum:
              - frictionless
              - challenge
          hold:
            type: string
            description: >-
              Unique identifer of the linked Hold for a Linked Authenitcation
              Session.
          metadata:
            type: object
            description: >-
              Set of key-value pairs that you can attach to the resource. This can
              be useful for storing additional information about the object in a
              structured format.
          payment_method:
            type: string
            description: ID of the Payment Method used in the Authenitcation Session.
          payment_method_details:
            $ref: '#/components/schemas/Payment-Method-Details'
            description: Details about the payment method.
          return_url:
            type: string
            description: A URL to return to after performing the authentication.
          shipping:
            $ref: '#/components/schemas/Shipping-Details'
            description: Shipping information of the payment.
          reference:
            description: A unique string to reference the Authentication Session.
            type: string
          status:
            type: string
            description: Status of the Authentication Session.
            enum:
              - open
              - authenticated
              - failed
          url:
            type: string
            description: >-
              URL to redirect the customer to in order to perform the
              Authenticaton Session.
          version:
            type: string
            description: 3DS version used for authenticating the card.
          xid:
            type: string
            description: Transaction ID from the 3D Secure provider.
      Payment-Session:
        type: object
        x-internal: false
        examples:
          - id: ps_217940156986951680
            resource: payment_session
            amount: 10000
            amount_human_readable: '100.00'
            capture: true
            charge: null
            currency: usd
            created: '2022-09-07T13:40:41.751Z'
            setup_future_usage: null
            customer: cust_222712682678060032
            customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
            client_secret: >-
              eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJAcGF5LWNvbS9wYXltZW50LWdhdGV3YXkiLCJpYXQiOjE2Mjk2NDczMjYsImV4cCI6MTY2MTE4MzMyNiwiYXVkIjoiaGkiLCJzdWIiOiJ3ZSBsb3ZlIHlvdSA6KSJ9.XK1D0v0XjcNYoQrwOeNPemCEFA6TGuHtGflyiUTtjYs
            description: null
            failure_code: null
            failure_reason: null
            hold: null
            metadata: {}
            payment_method: null
            payment_method_details: null
            payment_method_options:
              card:
                accepted_card_brands:
                  - visa
                  - mastercard
                accepted_card_categories:
                  - consumer
                accepted_card_funding:
                  - debit
                  - credit
                accepted_card_jurisdictions:
                  - domestic
                duplicate_card_check: true
                enforce_customer_name_as_cardholder_name: false
                security_checks:
                  address_line1_check: false
                  address_postal_code_check: false
                  cvv_check: true
                request_threed_secure: challenge
            payment_method_types:
              - card
            reference: null
            receipt_email: null
            receipt_number: null
            receipt_url: null
            shipping: null
            billing_details: null
            statement_descriptor_suffix: TEST
            status: open
        properties:
          id:
            type: string
            description: Unique identifier for Payment Session object.
          resource:
            type: string
            description: String representing the resource type.
          amount:
            type: integer
            description: Amount, in minor units.
          amount_human_readable:
            type: string
            description: Amount in human readable format.
          billing_details:
            $ref: '#/components/schemas/Billing-Details'
            description: >-
              Billing information associated with the customer at the time of the
              Payment Session.
          capture:
            type: boolean
            description: >-
              Whether to immediately capture the payment and create a charge.
              Defaults to `true`. When `false`, the payment sessions issues a Hold
              (authorization), that will need to be captured later. Uncaptured
              holds expire after a set number of days (7 by default).
          charge:
            type: string
            description: >-
              Unique identifer of the Charge created from this Payment Session if
              `capture=true`.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          setup_future_usage:
            type: string
            description: >-
              Indicates that you intend to make future payments with this payment
              method that will be used in this Payment.


              **Possible enum values:**

              `on_session`

              Use `on_session` if you intend to only reuse the payment method when
              your customer is present in your checkout flow.


              `off_session`

              Use `off_session` if your customer may or may not be present in your
              checkout flow.
          client_secret:
            type: string
            description: >-
              Client secret to use with Pay Components to render the Payment
              Session.
          customer:
            type: string
            description: ID of the customer this Payment Session is for if one exists.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This should be a customer ID
              that identifies the customer in your system. Used to retrieve and
              manage your customer's saved payment methods.
          description:
            type: string
            description: >-
              A string attached to the resource. Often useful for displaying to
              users.
          failure_code:
            type: string
          failure_reason:
            type: string
          hold:
            type: string
            description: >-
              Unique identifer of the Hold created from this Payment Session if
              `capture=false`.
          metadata:
            type: object
            description: >-
              Set of key-value pairs that you can attach to the resource. This can
              be useful for storing additional information about the object in a
              structured format.
          payment_method:
            type: string
            description: ID of the Payment Method used in the Payment Session.
          payment_method_details:
            $ref: '#/components/schemas/Payment-Method-Details'
            description: Details about the payment method.
          payment_method_options:
            $ref: '#/components/schemas/Payment-Method-Options'
            description: Specific payment method configurations.
          payment_method_types:
            type: array
            description: >-
              The list of payment method types that this Payment Session is
              allowed to use. If this is not provided, defaults to `["card"]`.
            items:
              type: string
          reference:
            description: >-
              A unique string to reference the Payment Session and the Charge/Hold
              created after a successful payment. Can be used to reconcile the
              object with your internal systems.
            type: string
          receipt_email:
            type: string
            description: >-
              This is the email address that the receipt for this payment session
              was sent to.
          receipt_number:
            type: string
            description: The number of the generated receipt.
          receipt_url:
            type: string
            description: The URL to access the receipt.
          shipping:
            $ref: '#/components/schemas/Shipping-Details'
            description: Shipping information of the payment.
          statement_descriptor_suffix:
            type: string
            description: >-
              Provides information about the payment that customers can see on
              their charge statements. Concatenated with the statement descriptor
              that’s set on the account during onboarding the complete statement
              descriptor, maximum of 22 characters for the concatenated
              descriptor.
          status:
            type: string
            description: Status of the Payment Session.
            enum:
              - open
              - completed
              - failed
      Address:
        type: object
        description: ''
        x-internal: false
        properties:
          city:
            type: string
            description: City, district, suburb, town, or village.
          country:
            type: string
            description: Two-letter country code (ISO 3166-1 alpha-2).
            example: US
            minLength: 2
            maxLength: 2
          line1:
            type: string
            description: Address line 1 (e.g., street, PO Box, or company name).
          line2:
            type: string
            description: Address line 2 (e.g., apartment, suite, unit, or building).
          postal_code:
            type: string
            description: ZIP or postal code.
          state:
            type: string
            description: State, county, province, or region.
      Billing-Details:
        title: Billing-Details
        x-stoplight:
          id: 3610zjetn1wj7
        type: object
        description: >-
          Billing information associated with the customer at the time of the
          session.
        properties:
          address:
            $ref: '#/components/schemas/Address'
            description: Billing Address.
          name:
            type: string
            description: Full name.
          email:
            type: string
            description: Email address.
            format: email
          phone:
            type: string
            description: Billing phone number.
      Shipping-Details:
        title: Shipping-Details
        x-stoplight:
          id: 8godkj187wb68
        type: object
        examples: []
        description: Shipping information for the payment.
        properties:
          address:
            $ref: '#/components/schemas/Address'
            description: Shipping address.
          name:
            type: string
            description: Full name.
          phone:
            type: string
            description: Recipient phone.
      Metadata:
        type: object
        title: Metadata
        x-stoplight:
          id: aqwewbm2iqxee
      Source-Data:
        title: Source-Data
        x-stoplight:
          id: okj9x63tjeyw9
        type: object
        examples: []
        description: ''
        properties:
          type:
            type: string
            enum:
              - card
              - google_pay
            description: >-
              The type of the payment method to be used as the source for the
              payment
          card:
            $ref: '#/components/schemas/Card-Source-Details'
            description: Raw details of a card payment method
          google_pay:
            type: string
            description: The payload that was retrieved from the Google Pay response
          setup_future_usage:
            type: string
            enum:
              - on_session
              - off_session
            description: >-
              Indicates that you intend to make future payments with this payment
              method that will be used in this Payment.


              **Possible enum values:**

              `on_session`

              Use `on_session` if you intend to only reuse the payment method when
              your customer is present in your checkout flow.


              `off_session`

              Use `off_session` if your customer may or may not be present in your
              checkout flow.
      Card-Source-Authentication-Details:
        title: Card-Source-Authentication-Details
        x-stoplight:
          id: k2424f0rcc1nc
        type: object
        properties:
          number:
            type: string
            description: The card number, as a string without any separators.
          expiry_month:
            type: string
            description: Two-digit number representing the card's expiration month.
          expiry_year:
            type: string
            description: Two or four-digit number representing the card's expiration year.
          cvc:
            type: string
            description: Card security code.
          name:
            type: string
            description: Cardholder's full name.
        required:
          - number
          - expiry_month
          - expiry_year
          - cvc
          - name
      Card-Source-Details:
        title: Card-Source-Details
        x-stoplight:
          id: k2424f0rcc1nc
        type: object
        properties:
          number:
            type: string
            description: The card number, as a string without any separators.
          expiry_month:
            type: string
            description: Two-digit number representing the card's expiration month.
          expiry_year:
            type: string
            description: Two or four-digit number representing the card's expiration year.
          cvc:
            type: string
            description: Card security code.
          name:
            type: string
            description: Cardholder's full name.
          billing_address:
            $ref: '#/components/schemas/Address'
            description: >-
              Billing address associated with the customer at the time of the
              payment.
          three_ds:
            $ref: '#/components/schemas/Three-Ds-Raw'
            description: >-
              Required information to process a payment that has been 3DS
              authenticated using a Third Party provider.
        required:
          - number
          - expiry_month
          - expiry_year
          - cvc
      Three-Ds-Raw:
        title: Three-Ds-Raw
        x-stoplight:
          id: i79nxc84zl04b
        type: object
        description: >-
          Required information to process a payment that has been 3DS
          authenticated using a Third Party provider.
        properties:
          eci:
            type: string
            description: >-
              The Electronic Commerce Indicator security level associated with the
              3D Secure enrollment result.
          cavv:
            type: string
            description: >-
              A Base64 encoded cryptographic identifier (CAVV) used by the card
              schemes to validate the cardholder authentication result (3D
              Secure).
          ds_trans_id:
            type: string
            description: |-
              The 3D Secure transaction identifier. 

              Required for 3D Secure 2.X.X and a Mastercard card.
          xid:
            type: string
            description: |-
              Transaction identifier resulting from authentication processing.

              Required for 3DS version 1.0.0.
          version:
            type: string
            description: >-
              Indicates the version of 3D Secure that was used for
              authentication. 


              Defaults to 1.0.0 if not provided
        required:
          - eci
          - cavv
      Card-Destination-Details:
        title: Card-Destination-Details
        x-stoplight:
          id: k2424f0rcc1nc
        type: object
        properties:
          number:
            type: string
            description: The card number, as a string without any separators.
          expiry_month:
            type: string
            description: Two-digit number representing the card's expiration month.
          expiry_year:
            type: string
            description: Two or four-digit number representing the card's expiration year.
          cvc:
            type: string
            description: Card security code.
          name:
            type: string
            description: Cardholder's full name.
          billing_address:
            $ref: '#/components/schemas/Address'
            description: >-
              Billing address associated with the customer at the time of the
              payment.
        required:
          - number
          - expiry_month
          - expiry_year
          - cvc
      Destination-Data:
        title: Destination-Data
        x-stoplight:
          id: okj9x63tjeyw9
        type: object
        examples: []
        description: ''
        properties:
          type:
            type: string
            enum:
              - card
            description: >-
              The type of the payment method to be used as the destination for the
              payoutt
          card:
            $ref: '#/components/schemas/Card-Destination-Details'
            description: Raw details of a card payment method
      Customer:
        type: object
        examples:
          - id: cust_202779025452569600
            resource: customer
            address: null
            created: '2022-09-07T13:40:41.751Z'
            default_source: pm_card_222712682678060032
            email: null
            name: John Doe
            phone: null
            metadata: {}
            reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
            shipping: null
        properties:
          id:
            type: string
            description: Unique identifier for Payment Method object.
          resource:
            type: string
            description: String representing the resource type.
          address:
            $ref: '#/components/schemas/Address'
            description: Billing address associated with the Payment Method.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          default_source:
            type: string
            description: The default payment method of the customer.
          email:
            type: string
            description: Email address of the customer.
            format: email
          name:
            type: string
            description: Full name of the customer.
          phone:
            type: string
            description: Phone number of the customer.
          reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This should be a customer ID
              that identifies the customer in your system. Used to retrieve and
              manage your customer's saved payment methods.
          metadata:
            type: object
            description: Set of key-value pairs that you can attach to the resource.
          shipping:
            $ref: '#/components/schemas/Shipping-Details'
            description: Shipping information of the customer.
      Charge:
        title: Charge
        type: object
        examples:
          - id: chrg_146231656762572800
            resource: charge
            amount: 10000
            amount_human_readable: '100.00'
            amount_refunded: 0
            billing_details: null
            calculated_statement_descriptor: PAYCOM * TEST
            created: '2022-09-07T13:40:41.751Z'
            currency: usd
            customer: cust_199440887619523584
            customer_reference_id: 2s68c46d-8d15-4c2a-ae4c-30ec77abed9f
            description: null
            disputed: false
            failure_code: null
            failure_message: null
            metadata: {}
            paid: false
            payment_session: null
            hold: hld_220204193980350464
            payment_method: pm_card_202779025452569600
            payment_method_details:
              type: card
              card:
                bin: '424242'
                brand: visa
                country: US
                exp_month: '11'
                exp_year: '25'
                fingerprint: c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                funding: credit
                last4: '4242'
                network: visa
                security_checks:
                  address_line1_check: unavailable
                  address_postal_code_check: unavailable
                  cvc_check: pass
                three_d_secure: null
                token: tok_card_202779025452569600
                wallet: null
            payment_method_options:
              card:
                accepted_card_brands:
                  - visa
                  - mastercard
                accepted_card_categories:
                  - consumer
                accepted_card_funding:
                  - debit
                  - credit
                accepted_card_jurisdictions:
                  - domestic
                duplicate_card_check: true
                enforce_customer_name_as_cardholder_name: false
                security_checks:
                  address_line1_check: false
                  address_postal_code_check: false
                  cvv_check: true
                request_threed_secure: challenge
            refunded: false
            refunds:
              data: []
              url: /v1/charges/chrg_146231656762572800/refunds
            reference: null
            shipping: null
            statement_descriptor_suffix: TEST
            status: succeeded
        properties:
          id:
            type: string
            description: Unique identifier for Charge object.
          resource:
            type: string
            description: String representing the resource type.
          amount:
            type: integer
            description: Amount recieved, in minor units.
          amount_human_readable:
            type: string
            description: Amount in human readable format.
          amount_refunded:
            type: integer
            description: Amount refunded out of the total amount received, in minor units.
          billing_details:
            $ref: '#/components/schemas/Billing-Details'
            description: >-
              Billing information associated with the customer at the time of the
              Charge.
          calculated_statement_descriptor:
            type: string
            description: >-
              The full statement descriptor that is displayed on your customers’
              bank statements. Allows you to see what the statement descriptor
              looks like after the static and dynamic portions are combined.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          customer:
            type: string
            description: ID of the customer this Charge is for if one exists.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This is a customer ID that
              identifies the customer that the Charge belongs to.
          description:
            description: >-
              A string attached to the resource. Often useful for displaying to
              users.
            type: string
          disputed:
            type: boolean
            description: Indicates whether the charge was disputed.
          failure_code:
            type: string
          failure_message:
            type: string
          metadata:
            type: object
            description: Set of key-value pairs that you can attach to the resource.
          paid:
            type: boolean
            description: >-
              Indicates whether the charge was setteled and paid to your bank
              account.
          payment_session:
            type: string
            description: ID of the Payment Session the Charge was created from if exists.
          hold:
            type: string
            description: ID of the Hold the Charge was created from if exists.
          payment_method:
            type: string
            description: ID of the Payment Method used for the Charge.
          payment_method_details:
            $ref: '#/components/schemas/Payment-Method-Details'
            description: Details about the payment method.
          payment_method_options:
            $ref: '#/components/schemas/Payment-Method-Options'
            description: Payment method specific configurations.
          refunded:
            type: boolean
            description: >-
              Indicates whether the Charge was refunded, will only be `true` if
              the Charge was fully refunded.
          refunds:
            $ref: '#/components/schemas/Refunds'
            description: List of all the successful refunds created from the resource.
          reference:
            type: string
            description: >-
              A unique string to reference the Charge that was entered while
              creating the resource. Can be used to reconcile the object with your
              internal systems.
          shipping:
            $ref: '#/components/schemas/Shipping-Details'
            description: Shipping information of the payment.
          statement_descriptor_suffix:
            type: string
            description: >-
              Provides information about the payment that customers can see on
              their charge statements. Concatenated with the statement descriptor
              that’s set on the account during onboarding the complete statement
              descriptor, maximum of 22 characters for the concatenated
              descriptor.
          status:
            type: string
            enum:
              - succeeded
              - failed
              - pending
              - requires_authentication
              - requires_confirmation
            description: Status of the Charge.
      Charges:
        type: object
        description: ''
        title: ''
        examples:
          - data: []
            url: string
        properties:
          data:
            type: array
            description: List of all the successful charges created from the resource.
            items:
              type: object
          url:
            type: string
            description: URL where the resources can be accessed directly.
      Refunds:
        type: object
        description: ''
        title: ''
        examples:
          - data: []
            url: string
        properties:
          data:
            type: array
            description: List of all the successful refunds created from the resource.
            items:
              type: object
          url:
            type: string
            description: URL where the resources can be accessed directly.
      Hold:
        title: Hold
        x-stoplight:
          id: dc6rey2p06rbw
        type: object
        examples:
          - id: hld_158938670341035008
            resource: hold
            amount: 10000
            amount_human_readable: '100.00'
            amount_capturable: 10000
            billing_details: null
            created: '2022-09-07T13:40:41.751Z'
            currency: usd
            canceled: false
            canceled_at: null
            charges:
              data: []
              url: /v1/holds/hld_158938670341035008/charges
            customer: cust_222779369167260672
            customer_reference_id: null
            description: null
            failure_code: null
            failure_message: null
            metadata: {}
            payment_session: null
            payment_method: pm_card_202779025452569600
            payment_method_details:
              type: card
              card:
                bin: '424242'
                brand: visa
                country: US
                exp_month: '11'
                exp_year: '25'
                fingerprint: c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                funding: credit
                last4: '4242'
                network: visa
                security_checks:
                  address_line1_check: unavailable
                  address_postal_code_check: unavailable
                  cvc_check: pass
                three_d_secure: null
                token: tok_card_202779025452569600
                wallet: null
            payment_method_options:
              card:
                accepted_card_brands:
                  - visa
                  - mastercard
                accepted_card_categories:
                  - consumer
                accepted_card_funding:
                  - debit
                  - credit
                accepted_card_jurisdictions:
                  - domestic
                duplicate_card_check: true
                enforce_customer_name_as_cardholder_name: false
                security_checks:
                  address_line1_check: false
                  address_postal_code_check: false
                  cvv_check: true
                request_threed_secure: challenge
            reference: null
            shipping: null
            statement_descriptor_suffix: null
            status: requires_capture
        properties:
          id:
            type: string
            description: Unique identifier for Hold object.
          resource:
            type: string
            description: String representing the resource type.
          amount:
            type: integer
            description: Amount held, in minor units.
          amount_capturable:
            type: integer
            description: Amount that is still captureable from the Hold, in minor units.
          amount_human_readable:
            type: string
            description: Amount in human readable format.
          billing_details:
            $ref: '#/components/schemas/Billing-Details'
            description: >-
              Billing information associated with the customer at the time of the
              Hold.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          canceled:
            type: boolean
            description: >-
              Indicates that the hold on the funds was cancelled and they were
              released back to the customer.
          canceled_at:
            description: >-
              Populated when status is canceled and `canceled=true`. Indicates
              time at which the Hold was canceled, ISO String format.
            type: string
          cancellation_reason:
            type: string
            description: The reason the hold on the funds was canceled.
            enum:
              - hold_on_funds_expired
              - requested_by_merchant
          charges:
            $ref: '#/components/schemas/Charges'
            description: List of all the successful charges created from the resource.
          customer:
            type: string
            description: ID of the customer this Hold is for if one exists.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This is a customer ID that
              identifies the customer that the Hold belongs to.
          description:
            type: string
            description: >-
              A string attached to the resource. Often useful for displaying to
              users.
          failure_code:
            type: string
          failure_message:
            type: string
          metadata:
            type: object
            description: Set of key-value pairs that you can attach to the resource.
          payment_session:
            type: string
            description: ID of the Payment Session that created the Hold if one exsited.
          payment_method:
            type: string
            description: ID of the payment method used in this Hold.
          payment_method_details:
            $ref: '#/components/schemas/Payment-Method-Details'
            description: Details about the payment method.
          payment_method_options:
            $ref: '#/components/schemas/Payment-Method-Options'
            description: Payment method specific configurations.
          reference:
            description: >-
              A unique string to reference the Hold that was entered while
              creating the resource. Can be used to reconcile the object with your
              internal systems.
            type: string
          shipping:
            $ref: '#/components/schemas/Shipping-Details'
            description: Shipping information of the payment.
          statement_descriptor_suffix:
            type: string
            description: >-
              Provides information about the payment that customers can see on
              their charge statements. Concatenated with the statement descriptor
              that’s set on the account during onboarding the complete statement
              descriptor, maximum of 22 characters for the concatenated
              descriptor.
          status:
            type: string
            description: Status of the Hold.
            enum:
              - requires_capture
              - succeeded
              - failed
              - requires_authentication
              - requires_confirmation
      Refund:
        title: Refund
        x-stoplight:
          id: 2i9tj1x16ygy7
        type: object
        properties:
          id:
            type: string
            description: Unique identifier for Refund object.
          resource:
            type: string
            description: String representing the resource type.
            default: refund
            example: refund
          amount:
            type: integer
            description: Amount, in minor units.
          amount_human_readable:
            type: string
            description: Amount in human readable format.
          charge:
            type: string
            description: ID of the Charge that was refunded.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          customer:
            type: string
            description: ID of the customer this Refund is for if one exists.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This is a customer ID that
              identifies the customer that the Refund belongs to that was supplied
              at creation of the Charge.
          metadata:
            type: object
            description: >-
              Set of key-value pairs that were attached to the resource at
              creation.
          reference:
            type: string
            description: >-
              A unique string to reference the Refund that was entered while
              creating the resource. Can be used to reconcile the object with your
              internal systems.
          status:
            type: string
            description: Status of the refund.
            enum:
              - succeeded
              - failed
              - pending
        examples:
          - id: rfnd_179937907841176576
            resource: refund
            amount: 10000
            amount_human_readable: '100.00'
            charge: chrg_146231656762572800
            created: '2022-09-07T13:40:41.751Z'
            currency: usd
            customer: cust_199440887619523584
            customer_reference_id: 69727f0f-8865-4d20-8f63-4ff4fafdacd8
            metadata: {}
            reference: null
            status: succeeded
      Card-Details:
        type: object
        properties:
          type: object
          description: >-
            If this is a card payment, this object contains info card payment
            method used for the payment.
          properties:
            bin:
              type: string
              description: The bin of the card.
            brand:
              type: string
              description: The brand of the card.
            country:
              type: string
              description: Two-letter ISO code representing the country of the card.
            exp_month:
              type: string
              description: Two-digit string representing the card’s expiration month.
            exp_year:
              type: string
              description: Four-digit string representing the card’s expiration year.
            fingerprint:
              type: string
              description: >-
                Uniquely identifies this particular card number. You can use this
                attribute to check whether two customers who’ve signed up with you
                are using the same card number.
            funding:
              type: string
              description: >-
                Card funding type. Can be `credit`, `debit`, `prepaid`, or
                `unknown`.
            last4:
              type: string
              description: The last four digits of the card.
            network:
              type: string
              description: Identifies which network this payment was processed on.
            token:
              type: string
              description: >-
                A token that identifies the payment method in Pay.com's
                Tokenization Vault.
            wallet:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - google_pay
                    - apple_pay
      Payment-Method-Details:
        type: object
        properties:
          type:
            type: string
            description: The type of payment method.
          card:
            type: object
            description: >-
              If this is a card payment, this object contains info card payment
              method used for the payment.
            properties:
              bin:
                type: string
                description: The bin of the card.
              brand:
                type: string
                description: The brand of the card.
              country:
                type: string
                description: Two-letter ISO code representing the country of the card.
              exp_month:
                type: string
                description: Two-digit string representing the card’s expiration month.
              exp_year:
                type: string
                description: Four-digit string representing the card’s expiration year.
              fingerprint:
                type: string
                description: >-
                  Uniquely identifies this particular card number. You can use
                  this attribute to check whether two customers who’ve signed up
                  with you are using the same card number.
              funding:
                type: string
                description: >-
                  Card funding type. Can be `credit`, `debit`, `prepaid`, or
                  `unknown`.
              last4:
                type: string
                description: The last four digits of the card.
              network:
                type: string
                description: Identifies which network this payment was processed on.
              token:
                type: string
                description: >-
                  A token that identifies the payment method in Pay.com's
                  Tokenization Vault.
              security_checks:
                type: object
                description: Result of security checks that ran on the card.
                properties:
                  address_line1_check:
                    type: string
                  address_postal_code_check:
                    type: string
                  cvc_check:
                    type: string
              three_d_secure:
                type: object
                description: Populated if this payment used 3D Secure authentication.
                properties:
                  authentication_flow:
                    type: string
                    description: >-
                      For authenticated transactions: how the customer was
                      authenticated by the issuing bank.
                  result:
                    type: string
                    description: Indicates the outcome of 3D Secure authentication.
                  result_reason:
                    type: string
                    description: >-
                      Additional information about why 3D Secure succeeded or
                      failed based on the result.
                  version:
                    type: string
                    description: The version of 3D Secure that was used.
                  eci:
                    type: string
                    description: ECI Indicator from the 3D Secure authetication.
              wallet:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - google_pay
                      - apple_pay
      Payment-Method:
        type: object
        examples:
          - id: pm_card_202779025452569600
            resource: payment_method
            billing_details: null
            card:
              bin: '424242'
              brand: visa
              country: US
              exp_month: '11'
              exp_year: '25'
              fingerprint: c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
              funding: credit
              last4: '4242'
              network: visa
              token: tok_card_202779025452569600
              wallet: null
            created: '2022-09-07T13:40:41.751Z'
            customer: cust_222712682678060032
            customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
            metadata: {}
            type: card
        properties:
          id:
            type: string
            description: Unique identifier for Payment Method object.
          resource:
            type: string
            description: String representing the resource type.
          billing_details:
            $ref: '#/components/schemas/Billing-Details'
            description: Billing information associated with the Payment Method.
          card:
            $ref: '#/components/schemas/Card-Details'
            description: >-
              If this payment method is a card, this object contains info about
              the card.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          customer:
            type: string
            description: ID of the customer this Payment Method is assigned to.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This should be a customer ID
              that identifies the customer in your system. Used to retrieve and
              manage your customer's saved payment methods.
          metadata:
            type: object
            description: Set of key-value pairs that you can attach to the resource.
          type:
            type: string
            description: The type of payment method.
      Payout:
        type: object
        examples:
          - id: po_220442125165133824
            resource: payout
            amount: 10000
            amount_human_readable: '100.00'
            billing_details: null
            calculated_statement_descriptor: PAYCOM * TEST
            created: '2022-09-07T13:40:41.751Z'
            currency: usd
            customer: cust_199440887619523584
            customer_reference_id: 2s68c46d-8d15-4c2a-ae4c-30ec77abed9f
            description: null
            failure_code: null
            failure_message: null
            metadata: {}
            payment_method: pm_card_202779025452569600
            payment_method_details:
              type: card
              card:
                bin: '424242'
                brand: visa
                country: US
                exp_month: '11'
                exp_year: '25'
                fingerprint: c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                funding: credit
                last4: '4242'
                network: visa
                security_checks:
                  address_line1_check: unavailable
                  address_postal_code_check: unavailable
                  cvc_check: pass
                three_d_secure: null
                token: tok_card_202779025452569600
                wallet: null
            reference: null
            statement_descriptor_suffix: TEST
            status: succeeded
        properties:
          id:
            type: string
            description: Unique identifier for Payout object.
          resource:
            type: string
            description: String representing the resource type.
          amount:
            type: integer
            description: Amount paid, in minor units.
          amount_human_readable:
            type: string
            description: Amount in human readable format.
          billing_details:
            $ref: '#/components/schemas/Billing-Details'
            description: >-
              Billing information associated with the customer at the time of the
              Payout.
          calculated_statement_descriptor:
            type: string
            description: >-
              The full statement descriptor that is displayed on your customers’
              bank statements. Allows you to see what the statement descriptor
              looks like after the static and dynamic portions are combined.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          customer:
            type: string
            description: ID of the customer this Payout is for if one exists.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This is a customer ID that
              identifies the customer that the Payout belongs to.
          description:
            type: string
            description: >-
              A string attached to the resource. Often useful for displaying to
              users.
          failure_code:
            type: string
          failure_message:
            type: string
          metadata:
            type: object
            description: Set of key-value pairs that you can attach to the resource.
          payment_method:
            type: string
            description: ID of the Payout used for the Charge.
          payment_method_details:
            $ref: '#/components/schemas/Payment-Method-Details'
            description: Details about the payment method.
          reference:
            type: string
            description: >-
              A unique string to reference the Payout that was entered while
              creating the resource. Can be used to reconcile the object with your
              internal systems.
          statement_descriptor_suffix:
            type: string
            description: >-
              Provides information about the payment that customers can see on
              their charge statements. Concatenated with the statement descriptor
              that’s set on the account during onboarding the complete statement
              descriptor, maximum of 22 characters for the concatenated
              descriptor.
          status:
            type: string
            description: Status of the Payout.
            enum:
              - succeeded
              - failed
              - pending
      Payment-Method-Options:
        title: Payment-Method-Options
        x-stoplight:
          id: e1rzrfpgn89ur
        type: object
        examples:
          - card:
              accepted_card_brands:
                - visa
              accepted_card_categories:
                - consumer
              accepted_card_funding:
                - debit
              accepted_card_jurisdictions:
                - domestic
              duplicate_card_check: true
              enforce_customer_name_as_cardholder_name: true
              security_checks:
                address_line1_check: true
                address_postal_code_check: true
                cvv_check: true
              request_threed_secure: none
        properties:
          card:
            $ref: '#/components/schemas/Payment-Method-Options-Card'
            description: Options for Card payments
          us_bank_account:
            $ref: '#/components/schemas/Payment-Method-Options-US-Bank-Account'
            description: Options for US bank account payments
      Payment-Method-Options-Card:
        title: Payment-Method-Options-Card
        x-stoplight:
          id: 59wcwzv49zrr4
        type: object
        properties:
          accepted_card_brands:
            type: array
            description: List of card brands to accept for this payment
            items:
              type: string
              enum:
                - visa
                - mastercard
                - amex
                - discover
          accepted_card_categories:
            type: array
            description: List of card categories to accept for this payment
            items:
              type: string
              enum:
                - consumer
                - business
          accepted_card_funding:
            type: array
            description: List of card funding to accept for this payment
            items:
              type: string
              enum:
                - debit
                - credit
                - prepaid
          accepted_card_jurisdictions:
            type: array
            description: 'List of payment jurisdictions to accept for this payment '
            items:
              type: string
              enum:
                - domestic
                - intraregional
                - international
          duplicate_card_check:
            type: boolean
            description: >-
              Whether to perform a duplicate card check and bblock (same card on
              more than 1 customer)
          enforce_customer_name_as_cardholder_name:
            type: boolean
            description: Whether to enforce the customer name as the card holder name
          security_checks:
            $ref: '#/components/schemas/Payment-Method-Options-Card-Security-Checks'
            description: Security checks
          request_threed_secure:
            type: string
            enum:
              - none
              - automatic
              - challenge
              - exemption
            description: Control the 3DS flow for the payment
        examples:
          - accepted_card_brands:
              - visa
            accepted_card_categories:
              - consumer
            accepted_card_funding:
              - debit
            accepted_card_jurisdictions:
              - domestic
            duplicate_card_check: true
            enforce_customer_name_as_cardholder_name: true
            security_checks:
              address_line1_check: true
              address_postal_code_check: true
              cvv_check: true
            request_threed_secure: none
      Setup-Attempt:
        type: object
        x-internal: false
        description: ''
        examples:
          - id: ssatt_217940156986951680_0
            resource: setup_attempt
            created: '2022-09-07T13:40:41.751Z'
            customer: cust_222712682678060032
            customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
            failure_code: null
            failure_message: null
            metadata: {}
            payment_method: pm_card_202779025452569600
            payment_method_details:
              type: card
              card:
                bin: '424242'
                brand: visa
                country: US
                exp_month: '11'
                exp_year: '25'
                fingerprint: c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                funding: credit
                last4: '4242'
                network: visa
                security_checks:
                  address_line1_check: unavailable
                  address_postal_code_check: unavailable
                  cvc_check: pass
                three_d_secure: null
                token: tok_card_202779025452569600
                wallet: null
            reference: null
            setup_session: ss_217940156986951680
            status: succeeded
        properties:
          id:
            type: string
            description: Unique identifier for Setup Attempt object.
          resource:
            type: string
            description: String representing the resource type.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          customer:
            type: string
            description: ID of the customer this Setup Attempt is for if one exists.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This should be a customer ID
              that identifies the customer in your system. Used to retrieve and
              manage your customer's saved payment methods.
          failure_code:
            type: string
          failure_message:
            type: string
          metadata:
            type: object
            description: >-
              Set of key-value pairs that you can attach to the resource. This can
              be useful for storing additional information about the object in a
              structured format.
          payment_method:
            type: string
            description: ID of the Payment Method used in the Setup Attempt.
          payment_method_details:
            $ref: '#/components/schemas/Payment-Method-Details'
            description: Details about the payment method.
          setup_session:
            type: string
            description: ID of the Setup Session that created this attempt.
          status:
            type: string
            description: Status of the Setup Attempt.
            enum:
              - succeeded
              - failed
      Payment-Attempt:
        type: object
        x-internal: false
        description: ''
        examples:
          - id: psatt_217940156986951680_0
            resource: payment_attempt
            amount: 10000
            amount_human_readable: '100.00'
            currency: usd
            created: '2022-09-07T13:40:41.751Z'
            customer: cust_222712682678060032
            customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
            failure_code: null
            failure_message: null
            metadata: {}
            payment_method: pm_card_202779025452569600
            payment_method_details:
              type: card
              card:
                bin: '424242'
                brand: visa
                country: US
                exp_month: '11'
                exp_year: '25'
                fingerprint: c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                funding: credit
                last4: '4242'
                network: visa
                security_checks:
                  address_line1_check: unavailable
                  address_postal_code_check: unavailable
                  cvc_check: pass
                three_d_secure: null
                token: tok_card_202779025452569600
                wallet: null
            payment_session: ps_217940156986951680
            reference: null
            status: succeeded
        properties:
          id:
            type: string
            description: Unique identifier for Payment Attempt object.
          resource:
            type: string
            description: String representing the resource type.
          amount:
            type: integer
            description: Amount, in minor units.
          amount_human_readable:
            type: string
            description: Amount in human readable format.
          currency:
            type: string
            description: Three-letter ISO currency code, in lowercase.
          created:
            type: string
            description: Time at which the resource was created. ISO String format.
          customer:
            type: string
            description: ID of the customer this Payment Attempt is for if one exists.
          customer_reference_id:
            type: string
            description: >-
              A unique identifier for your customer, This should be a customer ID
              that identifies the customer in your system. Used to retrieve and
              manage your customer's saved payment methods.
          failure_code:
            type: string
          failure_message:
            type: string
          metadata:
            type: object
            description: >-
              Set of key-value pairs that you can attach to the resource. This can
              be useful for storing additional information about the object in a
              structured format.
          payment_method:
            type: string
            description: ID of the Payment Method used in the Payment Attempt.
          payment_method_details:
            $ref: '#/components/schemas/Payment-Method-Details'
            description: Details about the payment method.
          payment_session:
            type: string
            description: ID of the Payment Session that created this attempt.
          reference:
            description: >-
              A unique string to reference the Payment Attempt and the Charge/Hold
              created after a successful payment. Can be used to reconcile the
              object with your internal systems.
            type: string
          status:
            type: string
            description: Status of the Payment Attempt.
            enum:
              - succeeded
              - failed
      Payment-Method-Options-US-Bank-Account:
        title: Payment-Method-Options-US-Bank-Account
        x-stoplight:
          id: unkrgsdijwpyg
        type: object
        examples: []
        properties:
          ach_payment_type:
            type: string
            description: The type of ACH payment
            enum:
              - next_day
              - same_day
              - rtp
      Payment-Method-Options-Card-Security-Checks:
        title: Payment-Method-Options-Card-Security-Checks
        x-stoplight:
          id: c3wf8ehyjrk1m
        type: object
        properties:
          address_line1_check:
            type: boolean
            description: >-
              Indicats whether the AVS check for address line 1 should be
              performed
          address_postal_code_check:
            type: boolean
            description: Indicats whether the AVS check for postal code should be performed
          cvv_check:
            type: boolean
            description: Indicats whether CVV check should be performed
        examples:
          - address_line1_check: true
            address_postal_code_check: true
            cvv_check: true
    requestBodies:
      Create-Customer:
        content:
          application/json:
            schema:
              type: object
              properties:
                reference_id:
                  type: string
                  description: >-
                    A unique identifier for your customer, This should be a
                    customer ID that identifies the customer in your system. Later
                    used to retrieve and manage your customer's saved payment
                    methods.
                address:
                  $ref: '#/components/schemas/Address'
                  description: Customer's billing address.
                name:
                  type: string
                  description: Full name.
                email:
                  type: string
                  description: Email address.
                  format: email
                phone:
                  type: string
                  description: Billing phone number.
                shipping:
                  $ref: '#/components/schemas/Shipping-Details'
                  description: Shipping information of the customer.
                metadata:
                  type: object
                  description: Set of key-value pairs that you can attach to the resource.
              required:
                - reference_id
            examples:
              Base request:
                value:
                  reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
      Create-Payment-Method:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_reference_id:
                  type: string
                  description: >-
                    A unique identifier for your customer, This is a customer ID
                    that identifies the customer that the Payment Method belongs
                    to.
                type:
                  type: string
                  enum:
                    - card
                    - google_pay
                  description: >-
                    The type of the payment method to be used as the source for
                    the payment
                card:
                  $ref: '#/components/schemas/Card-Source-Details'
                  description: Raw details of a card payment method
                metadata:
                  type: object
                  description: Set of key-value pairs that you can attach to the resource.
              required:
                - customer_reference_id
                - type
            examples:
              Base request (100$):
                value:
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  type: card
                  card:
                    number: '4242424242424242'
                    expiry_month: '12'
                    expiry_year: '2024'
                    cvc: '123'
      Create-Setup-Session:
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_reference_id:
                  type: string
                  description: >-
                    A unique identifier for your customer, This should be a
                    customer ID that identifies the customer in your system. Later
                    used to retrieve and manage your customer's saved payment
                    methods.
                automatic_payment_methods:
                  type: boolean
                  description: >-
                    Automatically display the customer with compatible payment
                    methods that are enabled on your account.
                billing_details:
                  $ref: '#/components/schemas/Billing-Details'
                  description: >-
                    Billing information associated with the customer at the time
                    of the session.
                payment_method_options:
                  $ref: '#/components/schemas/Payment-Method-Options'
                  description: Payment method specific configurations.
                payment_method_types:
                  type: array
                  description: >-
                    The list of payment method types that this Payment Session is
                    allowed to use. If this is not provided, defaults to
                    `["card"]`.
                  uniqueItems: true
                  items:
                    type: string
                setup_future_usage:
                  type: string
                  enum:
                    - on_session
                    - off_session
                  description: >-
                    Indicates that you intend to make future payments with this
                    payment method that will be used in this Payment.


                    **Possible enum values:**

                    `on_session`

                    Use `on_session` if you intend to only reuse the payment
                    method when your customer is present in your checkout flow.


                    `off_session`

                    Use `off_session` if your customer may or may not be present
                    in your checkout flow.
                metadata:
                  $ref: '#/components/schemas/Metadata'
                  description: >-
                    Set of key-value pairs that you can attach to the resource.
                    This can be useful for storing additional information about
                    the object in a structured format.
              required:
                - customer_reference_id
            examples:
              Base request (100$):
                value:
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
        description: ''
      Create-Payment-Session:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  description: >-
                    Amount intended to be collected by this Payment Session in
                    minor units.
                  example: 10000
                currency:
                  type: string
                  description: Three-letter ISO currency code, in lowercase.
                  pattern: ^[a-z]{3}$
                  example: usd
                customer_reference_id:
                  type: string
                  description: >-
                    A unique identifier for your customer, This should be a
                    customer ID that identifies the customer in your system. Later
                    used to retrieve and manage your customer's saved payment
                    methods.
                automatic_payment_methods:
                  type: boolean
                  description: >-
                    Automatically display the customer with compatible payment
                    methods that are enabled on your account.
                billing_details:
                  $ref: '#/components/schemas/Billing-Details'
                  description: >-
                    Billing information associated with the customer at the time
                    of the session.
                capture:
                  type: boolean
                  description: >-
                    Whether to immediately capture the payment and create a
                    charge. Defaults to `true`. When `false`, the payment sessions
                    issues a Hold (authorization), that will need to be captured
                    later. Uncaptured holds expire after a set number of days (7
                    by default).
                description:
                  type: string
                  description: >-
                    A string attached to the resource. Often useful for displaying
                    to users.
                payment_method_options:
                  $ref: '#/components/schemas/Payment-Method-Options'
                  description: Payment method specific configurations.
                payment_method_types:
                  type: array
                  description: >-
                    The list of payment method types that this Payment Session is
                    allowed to use. If this is not provided, defaults to
                    `["card"]`.
                  uniqueItems: true
                  items:
                    type: string
                reference:
                  type: string
                  description: >-
                    A unique string to reference the Payment Session and the
                    Charge/Hold created after a successful payment. Can be used to
                    reconcile the object with your internal systems.
                receipt:
                  type: boolean
                  description: >-
                    Whether to send receipt for the customer after the payment has
                    been made, ignored if `capture=false`.
                receipt_email:
                  type: string
                  description: >-
                    The email to send the receipt too, overrides the email the
                    customer has on file.
                shipping:
                  $ref: '#/components/schemas/Shipping-Details'
                  description: Shipping information for the payment.
                setup_future_usage:
                  type: string
                  enum:
                    - on_session
                    - off_session
                  description: >-
                    Indicates that you intend to make future payments with this
                    payment method that will be used in this Payment.


                    **Possible enum values:**

                    `on_session`

                    Use `on_session` if you intend to only reuse the payment
                    method when your customer is present in your checkout flow.


                    `off_session`

                    Use `off_session` if your customer may or may not be present
                    in your checkout flow.
                statement_descriptor_suffix:
                  type: string
                  description: >-
                    Provides information about the payment that customers can see
                    on their charge statements. Concatenated with the statement
                    descriptor that’s set on the account during onboarding the
                    complete statement descriptor, maximum of 22 characters for
                    the concatenated descriptor.
                metadata:
                  $ref: '#/components/schemas/Metadata'
                  description: >-
                    Set of key-value pairs that you can attach to the resource.
                    This can be useful for storing additional information about
                    the object in a structured format.
              required:
                - amount
                - currency
                - customer_reference_id
            examples:
              Base request (100$):
                value:
                  amount: 10000
                  currency: usd
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
        description: ''
      Create-Charge:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  description: Amount intended to be collected by this Charge in minor units.
                  example: 10000
                currency:
                  type: string
                  description: Three-letter ISO currency code, in lowercase.
                  pattern: ^[a-z]{3}$
                  example: usd
                source:
                  type: string
                  description: A payment method to be used as the source for the Charge.
                  pattern: ^pm_(\w+)_\d{18,20}
                risk_session_id:
                  type: string
                  description: >-
                    An identifier that was provided to, or generated by the Web
                    SDK for collecting risk signals. 


                    Providing the identifier may improve authorization rates and
                    increase chances for a frictonless experience for the
                    customer.
                customer_reference_id:
                  type: string
                  description: >-
                    A unique identifier for your customer, This should be a
                    customer ID that identifies the customer in your system. Later
                    used to retrieve and manage your customer's saved payment
                    methods.
                payment_method_options:
                  $ref: '#/components/schemas/Payment-Method-Options'
                  description: Payment method specific configurations.
                receipt:
                  type: boolean
                  description: >-
                    Whether to send receipt for the customer after the payment has
                    been made.
                receipt_email:
                  type: string
                  description: >-
                    The email to send the receipt too, overrides the email the
                    customer has on file.
                reference:
                  type: string
                  description: >-
                    A unique string to reference the Charge. Can be used to
                    reconcile the object with your internal systems.
                shipping:
                  $ref: '#/components/schemas/Shipping-Details'
                  description: Shipping information for the payment.
                statement_descriptor_suffix:
                  type: string
                  description: >-
                    Provides information about the payment that customers can see
                    on their bank statements. Concatenated with the statement
                    descriptor that’s set on the account during onboarding the
                    complete statement descriptor, maximum of 22 characters for
                    the concatenated descriptor.
                metadata:
                  $ref: '#/components/schemas/Metadata'
                  description: >-
                    Set of key-value pairs that you can attach to the resource.
                    This can be useful for storing additional information about
                    the object in a structured format.
                source_data:
                  $ref: '#/components/schemas/Source-Data'
                  description: >-
                    Object providing the raw details of the payment method. will
                    be ignored if `source` is provided.
              required:
                - amount
                - currency
            examples:
              Base request:
                value:
                  amount: 10000
                  currency: usd
                  source: pm_card_202779025452569600
      Create-Hold:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  description: Amount intended to be reserved by this Hold in minor units.
                  example: 10000
                currency:
                  type: string
                  description: Three-letter ISO currency code, in lowercase.
                  pattern: ^[a-z]{3}$
                  example: usd
                source:
                  type: string
                  description: >-
                    Identifier of a previously used payment method to use for the
                    Hold.
                  pattern: ^pm_(\w+)_\d{18,20}
                risk_session_id:
                  type: string
                  description: >-
                    An identifier that was provided to, or generated by the Web
                    SDK for collecting risk signals. 


                    Providing the identifier may improve authorization rates and
                    increase chances for a frictonless experience for the
                    customer.
                customer_reference_id:
                  type: string
                  description: >-
                    A unique identifier for your customer, This should be a
                    customer ID that identifies the customer in your system. Later
                    used to retrieve and manage your customer's saved payment
                    methods.
                payment_method_options:
                  $ref: '#/components/schemas/Payment-Method-Options'
                  description: Payment method specific configurations.
                reference:
                  type: string
                  description: >-
                    A unique string to reference the Hold. Can be used to
                    reconcile the object with your internal systems.
                shipping:
                  $ref: '#/components/schemas/Shipping-Details'
                  description: Shipping information for the payment.
                statement_descriptor_suffix:
                  type: string
                  description: >-
                    Provides information about the payment that customers can see
                    on their bank statements. Concatenated with the statement
                    descriptor that’s set on the account during onboarding the
                    complete statement descriptor, maximum of 22 characters for
                    the concatenated descriptor.


                    Will be used by the Charge created after capturing the Hold.
                metadata:
                  $ref: '#/components/schemas/Metadata'
                  description: >-
                    Set of key-value pairs that you can attach to the resource.
                    This can be useful for storing additional information about
                    the object in a structured format.
                source_data:
                  $ref: '#/components/schemas/Source-Data'
                  description: >-
                    Object providing the raw details of the payment method. will
                    be ignored if `source` is provided.
              required:
                - amount
                - currency
            examples:
              Base request (100$):
                value:
                  amount: 10000
                  currency: usd
                  source: pm_card_202779025452569600
        description: ''
      Create-Refund:
        content:
          application/json:
            schema:
              type: object
              properties:
                charge:
                  type: string
                  description: The identifier of the charge to refund.
                  pattern: ^chrg_\d{18,20}
                amount_to_refund:
                  type: string
                  description: >-
                    Amount intended to be refunded from the Charge in minor
                    units.Can refund only up to the remaining, unrefunded amount
                    of the Charge. 


                    The field is optional and if not provided will default to the
                    entire Charge.
                  example: '10000'
                reference:
                  type: string
                  description: >-
                    A unique string to reference the Refund. Can be used to
                    reconcile the object with your internal systems.
                metadata:
                  $ref: '#/components/schemas/Metadata'
                  description: >-
                    Set of key-value pairs that you can attach to the resource.
                    This can be useful for storing additional information about
                    the object in a structured format.
              required:
                - charge
            examples:
              Base request:
                value:
                  charge: chrg_146231656762572800
        description: ''
      Create-Payout:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  description: Amount intended to be collected by this Payout in minor units.
                  example: 10000
                currency:
                  type: string
                  description: Three-letter ISO currency code, in lowercase.
                  pattern: ^[a-z]{3}$
                  example: usd
                destination:
                  type: string
                  description: >-
                    A string attached to the resource. Often useful for displaying
                    to users.
                  pattern: ^pm_(\w+)_\d{18,20}
                  example: pm_card_202779025452569600
                reference:
                  type: string
                  description: >-
                    A unique string to reference the Payout. Can be used to
                    reconcile the object with your internal systems.
                statement_descriptor_suffix:
                  type: string
                  description: >-
                    Provides information about the payment that customers can see
                    on their bank statements. Concatenated with the statement
                    descriptor that’s set on the account during onboarding the
                    complete statement descriptor, maximum of 22 characters for
                    the concatenated descriptor.
                metadata:
                  $ref: '#/components/schemas/Metadata'
                  description: >-
                    Set of key-value pairs that you can attach to the resource.
                    This can be useful for storing additional information about
                    the object in a structured format.
              required:
                - amount
                - currency
                - destination
            examples:
              Base request (100$):
                value:
                  amount: 10000
                  currency: usd
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  destination: pm_card_202779025452569600
        description: ''
      Capture-a-Hold:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount_to_capture:
                  type: string
                  description: >-
                    The amount to capture from the Hold in minor units.


                    Amount must be less than or equal to the original amount of
                    the Hold.


                    The field is optional and if not provided will default to the
                    entire Hold.
                  example: '10000'
                reference:
                  type: string
                  description: >-
                    A unique string to reference the Charge created from the Hold.
                    Can be used to reconcile the object with your internal
                    systems.
                metadata:
                  $ref: '#/components/schemas/Metadata'
                  description: >-
                    Set of key-value pairs that you can attach to the created
                    Charge object. This can be useful for storing additional
                    information about the object in a structured format.
            examples: {}
      Create-a-Linked-Authentication-Session:
        content:
          application/json:
            schema:
              type: object
              properties:
                resource:
                  type: string
                  description: >-
                    The identifier of the charge or hold with status of
                    `requires_authentication` to authenticate.
                  pattern: ^chrg_\d{18,20}
                confirm:
                  type: boolean
                  description: >-
                    If `false` the linked resource will have to be manually
                    confirmed post authentication.
                return_url:
                  type: string
                  description: A URL to return to after performing the authentication.
              required:
                - resource
            examples:
              Base request:
                value:
                  resource: chrg_146231656762572800
      Create-an-Independent-Authentication-Session:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  description: >-
                    Amount to be collected to be authenticated by this
                    Authentication Session in minor units.
                  example: 10000
                currency:
                  type: string
                  description: Three-letter ISO currency code, in lowercase.
                  pattern: ^[a-z]{3}$
                  example: usd
                card:
                  type: string
                  description: >-
                    A card payment method to be used as the source for the
                    Authentication Session.
                  pattern: ^pm_(\w+)_\d{18,20}
                customer_reference_id:
                  type: string
                  description: >-
                    A unique identifier for your customer, This should be a
                    customer ID that identifies the customer in your system. Later
                    used to retrieve and manage your customer's saved payment
                    methods.
                billing_details:
                  $ref: '#/components/schemas/Billing-Details'
                  description: >-
                    Billing information associated with the customer at the time
                    of the session.
                reference:
                  type: string
                  description: >-
                    A unique string to reference the Authentication Session. Can
                    be used to reconcile the object with your internal systems.
                return_url:
                  type: string
                  description: A URL to return to after performing the authentication.
                shipping:
                  $ref: '#/components/schemas/Shipping-Details'
                  description: Shipping information for the payment.
                metadata:
                  $ref: '#/components/schemas/Metadata'
                  description: >-
                    Set of key-value pairs that you can attach to the resource.
                    This can be useful for storing additional information about
                    the object in a structured format.
                card_data:
                  $ref: '#/components/schemas/Card-Source-Authentication-Details'
                  description: >-
                    Object providing the raw details of the payment method. will
                    be ignored if `source` is provided.
              required:
                - amount
                - currency
            examples:
              Base request (100$):
                value:
                  amount: 10000
                  currency: usd
                  card: pm_card_202779025452569600
    responses:
      Setup-Attempt:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setup-Attempt'
            examples:
              Example response:
                value:
                  id: ssatt_217940156986951680_0
                  resource: setup_attempt
                  created: '2022-09-07T13:40:41.751Z'
                  customer: cust_222712682678060032
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  failure_code: null
                  failure_message: null
                  metadata: {}
                  payment_method: pm_card_202779025452569600
                  payment_method_details:
                    type: card
                    card:
                      bin: '424242'
                      brand: visa
                      country: US
                      exp_month: '11'
                      exp_year: '25'
                      fingerprint: >-
                        c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                      funding: credit
                      last4: '4242'
                      network: visa
                      security_checks:
                        address_line1_check: unavailable
                        address_postal_code_check: unavailable
                        cvc_check: pass
                      three_d_secure: null
                      token: tok_card_202779025452569600
                      wallet: null
                  reference: null
                  setup_session: ss_217940156986951680
                  status: succeeded
      Payment-Attempt:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment-Attempt'
            examples:
              Example response:
                value:
                  id: psatt_217940156986951680_0
                  resource: payment_attempt
                  amount: 10000
                  amount_human_readable: '100.00'
                  currency: usd
                  created: '2022-09-07T13:40:41.751Z'
                  customer: cust_222712682678060032
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  failure_code: null
                  failure_message: null
                  metadata: {}
                  payment_method: pm_card_202779025452569600
                  payment_method_details:
                    type: card
                    card:
                      bin: '424242'
                      brand: visa
                      country: US
                      exp_month: '11'
                      exp_year: '25'
                      fingerprint: >-
                        c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                      funding: credit
                      last4: '4242'
                      network: visa
                      security_checks:
                        address_line1_check: unavailable
                        address_postal_code_check: unavailable
                        cvc_check: pass
                      three_d_secure: null
                      token: tok_card_202779025452569600
                      wallet: null
                  payment_session: ps_217940156986951680
                  reference: null
                  status: succeeded
      Payment-Session:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment-Session'
            examples:
              Example response:
                value:
                  id: ps_217940156986951680
                  resource: payment_session
                  amount: 10000
                  amount_human_readable: '''100.00'''
                  capture: true
                  charge: null
                  currency: usd
                  created: '2022-09-07T13:40:41.751Z'
                  setup_future_usage: null
                  customer: cust_222712682678060032
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  description: null
                  hold: null
                  metadata: {}
                  payment_method: null
                  payment_method_details: null
                  payment_method_options:
                    card:
                      accepted_card_brands:
                        - visa
                        - mastercard
                      accepted_card_categories:
                        - consumer
                      accepted_card_funding:
                        - debit
                        - credit
                      accepted_card_jurisdictions:
                        - domestic
                      duplicate_card_check: true
                      enforce_customer_name_as_cardholder_name: false
                      security_checks:
                        address_line1_check: false
                        address_postal_code_check: false
                        cvv_check: true
                      request_threed_secure: challenge
                  payment_method_types:
                    - card
                  reference: null
                  receipt_email: null
                  receipt_number: null
                  receipt_url: null
                  shipping: null
                  billing_details: null
                  statement_descriptor_suffix: TEST
                  status: open
      Setup-Session:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setup-Session'
            examples:
              Example response:
                value:
                  id: ss_217940156986951680
                  resource: setup_session
                  currency: usd
                  created: '2022-09-07T13:40:41.751Z'
                  customer: cust_222712682678060032
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  client_secret: >-
                    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJAcGF5LWNvbS9wYXltZW50LWdhdGV3YXkiLCJpYXQiOjE2Mjk2NDczMjYsImV4cCI6MTY2MTE4MzMyNiwiYXVkIjoiaGkiLCJzdWIiOiJ3ZSBsb3ZlIHlvdSA6KSJ9.XK1D0v0XjcNYoQrwOeNPemCEFA6TGuHtGflyiUTtjYs
                  metadata: {}
                  payment_method: null
                  payment_method_details: null
                  payment_method_options:
                    card:
                      accepted_card_brands:
                        - visa
                        - mastercard
                      accepted_card_categories:
                        - consumer
                      accepted_card_funding:
                        - debit
                        - credit
                      accepted_card_jurisdictions:
                        - domestic
                      duplicate_card_check: true
                      enforce_customer_name_as_cardholder_name: false
                      security_checks:
                        address_line1_check: false
                        address_postal_code_check: false
                        cvv_check: true
                      request_threed_secure: challenge
                  payment_method_types:
                    - card
                  billing_details: null
                  setup_future_usage: null
                  status: open
      Charge:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Charge'
            examples:
              Example response:
                value:
                  id: chrg_146231656762572800
                  resource: charge
                  amount: 10000
                  amount_human_readable: '100.00'
                  amount_refunded: 0
                  billing_details: null
                  calculated_statement_descriptor: PAYCOM * TEST
                  created: '2022-09-07T13:40:41.751Z'
                  currency: usd
                  customer: cust_199440887619523584
                  customer_reference_id: 2s68c46d-8d15-4c2a-ae4c-30ec77abed9f
                  description: null
                  disputed: false
                  failure_code: null
                  failure_message: null
                  metadata: {}
                  paid: false
                  payment_session: null
                  hold: hld_220204193980350464
                  payment_method: pm_card_202779025452569600
                  payment_method_details:
                    type: card
                    card:
                      bin: '424242'
                      brand: visa
                      country: US
                      exp_month: '11'
                      exp_year: '25'
                      fingerprint: >-
                        c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                      funding: credit
                      last4: '4242'
                      network: visa
                      security_checks:
                        address_line1_check: unavailable
                        address_postal_code_check: unavailable
                        cvc_check: pass
                      three_d_secure: null
                      token: tok_card_202779025452569600
                      wallet: null
                  payment_method_options:
                    card:
                      accepted_card_brands:
                        - visa
                        - mastercard
                      accepted_card_categories:
                        - consumer
                      accepted_card_funding:
                        - debit
                        - credit
                      accepted_card_jurisdictions:
                        - domestic
                      duplicate_card_check: true
                      enforce_customer_name_as_cardholder_name: false
                      security_checks:
                        address_line1_check: false
                        address_postal_code_check: false
                        cvv_check: true
                      request_threed_secure: challenge
                  receipt_email: null
                  receipt_number: null
                  receipt_url: null
                  refunded: false
                  refunds:
                    data: []
                    url: /v1/charges/chrg_146231656762572800/refunds
                  reference: null
                  shipping: null
                  statement_descriptor_suffix: TEST
                  status: succeeded
      Hold:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hold'
            examples:
              Example response:
                value:
                  id: hld_158938670341035008
                  resource: hold
                  amount: 10000
                  amount_human_readable: '100.00'
                  amount_capturable: 10000
                  billing_details: null
                  created: '2022-09-07T13:40:41.751Z'
                  currency: usd
                  canceled: false
                  canceled_at: null
                  charges:
                    data: []
                    url: /v1/holds/hld_158938670341035008/charges
                  customer: cust_222779369167260672
                  customer_reference_id: null
                  description: null
                  failure_code: null
                  failure_message: null
                  metadata: {}
                  payment_session: null
                  payment_method: pm_card_202779025452569600
                  payment_method_details:
                    type: card
                    card:
                      bin: '424242'
                      brand: visa
                      country: US
                      exp_month: '11'
                      exp_year: '25'
                      fingerprint: >-
                        c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                      funding: credit
                      last4: '4242'
                      network: visa
                      security_checks:
                        address_line1_check: unavailable
                        address_postal_code_check: unavailable
                        cvc_check: pass
                      three_d_secure: null
                      token: tok_card_202779025452569600
                      wallet: null
                  payment_method_options:
                    card:
                      accepted_card_brands:
                        - visa
                        - mastercard
                      accepted_card_categories:
                        - consumer
                      accepted_card_funding:
                        - debit
                        - credit
                      accepted_card_jurisdictions:
                        - domestic
                      duplicate_card_check: true
                      enforce_customer_name_as_cardholder_name: false
                      security_checks:
                        address_line1_check: false
                        address_postal_code_check: false
                        cvv_check: true
                      request_threed_secure: challenge
                  reference: null
                  shipping: null
                  statement_descriptor_suffix: null
                  status: requires_capture
      Canceled-Hold:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hold'
            examples:
              Example response:
                value:
                  id: hld_158938670341035008
                  resource: hold
                  amount: 10000
                  amount_human_readable: '100.00'
                  amount_capturable: 0
                  billing_details: null
                  created: '2022-09-07T13:40:41.751Z'
                  currency: usd
                  canceled: true
                  canceled_at: 1662573940676
                  charges:
                    data: []
                    url: /v1/holds/hld_158938670341035008/charges
                  customer: cust_222779369167260672
                  customer_reference_id: null
                  description: null
                  failure_code: null
                  failure_message: null
                  metadata: {}
                  payment_session: null
                  payment_method: pm_card_202779025452569600
                  payment_method_details:
                    type: card
                    card:
                      bin: '424242'
                      brand: visa
                      country: US
                      exp_month: '11'
                      exp_year: '25'
                      fingerprint: >-
                        c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                      funding: credit
                      last4: '4242'
                      network: visa
                      security_checks:
                        address_line1_check: unavailable
                        address_postal_code_check: unavailable
                        cvc_check: pass
                      three_d_secure: null
                      token: tok_card_202779025452569600
                      wallet: null
                  reference: null
                  shipping: null
                  statement_descriptor_suffix: null
                  status: canceled
      Payout:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payout'
            examples:
              Example response:
                value:
                  id: po_220442125165133824
                  resource: payout
                  amount: 10000
                  amount_human_readable: '100.00'
                  billing_details: null
                  calculated_statement_descriptor: PAYCOM * TEST
                  created: '2022-09-07T13:40:41.751Z'
                  currency: usd
                  customer: cust_199440887619523584
                  customer_reference_id: 2s68c46d-8d15-4c2a-ae4c-30ec77abed9f
                  description: null
                  failure_code: null
                  failure_message: null
                  metadata: {}
                  payment_method: pm_card_202779025452569600
                  payment_method_details:
                    type: card
                    card:
                      bin: '424242'
                      brand: visa
                      country: US
                      exp_month: '11'
                      exp_year: '25'
                      fingerprint: >-
                        c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                      funding: credit
                      last4: '4242'
                      network: visa
                      security_checks:
                        address_line1_check: unavailable
                        address_postal_code_check: unavailable
                        cvc_check: pass
                      three_d_secure: null
                      token: tok_card_202779025452569600
                      wallet: null
                  reference: null
                  statement_descriptor_suffix: TEST
                  status: succeeded
      Refund:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refund'
            examples:
              Example response:
                value:
                  id: rfnd_179937907841176576
                  resource: refund
                  amount: 10000
                  amount_human_readable: '100.00'
                  charge: chrg_146231656762572800
                  created: '2022-09-07T13:40:41.751Z'
                  currency: usd
                  customer: cust_199440887619523584
                  customer_reference_id: 69727f0f-8865-4d20-8f63-4ff4fafdacd8
                  metadata: {}
                  reference: null
                  status: succeeded
      Create-Payment-Session:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment-Session'
            examples:
              Example response:
                value:
                  id: ps_217940156986951680
                  resource: payment_session
                  amount: 10000
                  amount_human_readable: '100.00'
                  capture: true
                  charge: null
                  currency: usd
                  created: '2022-09-07T13:40:41.751Z'
                  setup_future_usage: null
                  customer: cust_222712682678060032
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  client_secret: >-
                    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJAcGF5LWNvbS9wYXltZW50LWdhdGV3YXkiLCJpYXQiOjE2Mjk2NDczMjYsImV4cCI6MTY2MTE4MzMyNiwiYXVkIjoiaGkiLCJzdWIiOiJ3ZSBsb3ZlIHlvdSA6KSJ9.XK1D0v0XjcNYoQrwOeNPemCEFA6TGuHtGflyiUTtjYs
                  description: null
                  hold: null
                  metadata: {}
                  payment_method: null
                  payment_method_details: null
                  payment_method_options:
                    card:
                      accepted_card_brands:
                        - visa
                        - mastercard
                      accepted_card_categories:
                        - consumer
                      accepted_card_funding:
                        - debit
                        - credit
                      accepted_card_jurisdictions:
                        - domestic
                      duplicate_card_check: true
                      enforce_customer_name_as_cardholder_name: false
                      security_checks:
                        address_line1_check: false
                        address_postal_code_check: false
                        cvv_check: true
                      request_threed_secure: challenge
                  reference: null
                  receipt_email: null
                  receipt_number: null
                  receipt_url: null
                  shipping: null
                  billing_details: null
                  statement_descriptor_suffix: TEST
                  status: open
      Create-Setup-Session:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Setup-Session'
            examples:
              Example response:
                value:
                  id: ss_217940156986951680
                  resource: setup_session
                  currency: usd
                  created: '2022-09-07T13:40:41.751Z'
                  customer: cust_222712682678060032
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  client_secret: >-
                    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJAcGF5LWNvbS9wYXltZW50LWdhdGV3YXkiLCJpYXQiOjE2Mjk2NDczMjYsImV4cCI6MTY2MTE4MzMyNiwiYXVkIjoiaGkiLCJzdWIiOiJ3ZSBsb3ZlIHlvdSA6KSJ9.XK1D0v0XjcNYoQrwOeNPemCEFA6TGuHtGflyiUTtjYs
                  metadata: {}
                  payment_method: null
                  payment_method_details: null
                  payment_method_options:
                    card:
                      accepted_card_brands:
                        - visa
                        - mastercard
                      accepted_card_categories:
                        - consumer
                      accepted_card_funding:
                        - debit
                        - credit
                      accepted_card_jurisdictions:
                        - domestic
                      duplicate_card_check: true
                      enforce_customer_name_as_cardholder_name: false
                      security_checks:
                        address_line1_check: false
                        address_postal_code_check: false
                        cvv_check: true
                      request_threed_secure: challenge
                  billing_details: null
                  setup_future_usage: null
                  status: open
      Payment-Attempts:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payment-Attempt'
            examples:
              Example response:
                value:
                  - id: psatt_217940156986951680_0
                    resource: payment_attempt
                    amount: 10000
                    amount_human_readable: '100.00'
                    currency: usd
                    created: '2022-09-07T13:40:41.751Z'
                    customer: cust_222712682678060032
                    customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                    failure_code: null
                    failure_message: null
                    metadata: {}
                    payment_method: pm_card_202779025452569600
                    payment_method_details:
                      type: card
                      card:
                        bin: '424242'
                        brand: visa
                        country: US
                        exp_month: '11'
                        exp_year: '25'
                        fingerprint: >-
                          c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                        funding: credit
                        last4: '4242'
                        network: visa
                        security_checks:
                          address_line1_check: unavailable
                          address_postal_code_check: unavailable
                          cvc_check: pass
                        three_d_secure: null
                        token: tok_card_202779025452569600
                        wallet: null
                    payment_session: ps_217940156986951680
                    reference: null
                    status: succeeded
      Setup-Attempts:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Setup-Attempt'
            examples:
              Example resonse:
                value:
                  - id: ssatt_217940156986951680_0
                    resource: setup_attempt
                    created: '2022-09-07T13:40:41.751Z'
                    customer: cust_222712682678060032
                    customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                    failure_code: null
                    failure_message: null
                    metadata: {}
                    payment_method: pm_card_202779025452569600
                    payment_method_details:
                      type: card
                      card:
                        bin: '424242'
                        brand: visa
                        country: US
                        exp_month: '11'
                        exp_year: '25'
                        fingerprint: >-
                          c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                        funding: credit
                        last4: '4242'
                        network: visa
                        security_checks:
                          address_line1_check: unavailable
                          address_postal_code_check: unavailable
                          cvc_check: pass
                        three_d_secure: null
                        token: tok_card_202779025452569600
                        wallet: null
                    reference: null
                    setup_session: ss_217940156986951680
                    status: succeeded
      Authentication-Session:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication-Session'
            examples:
              Example response:
                value:
                  id: sca_217940156986951680
                  resource: authentication_session
                  amount: 10000
                  amount_human_readable: '100.00'
                  billing_details: null
                  cavv: null
                  confirm: true
                  charge: null
                  currency: usd
                  created: '2022-09-07T13:40:41.751Z'
                  customer: cust_222712682678060032
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  client_secret: >-
                    eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJAcGF5LWNvbS9wYXltZW50LWdhdGV3YXkiLCJpYXQiOjE2Mjk2NDczMjYsImV4cCI6MTY2MTE4MzMyNiwiYXVkIjoiaGkiLCJzdWIiOiJ3ZSBsb3ZlIHlvdSA6KSJ9.XK1D0v0XjcNYoQrwOeNPemCEFA6TGuHtGflyiUTtjYs
                  ds_trans_id: null
                  eci: null
                  flow: null
                  hold: null
                  metadata: {}
                  payment_method: null
                  payment_method_details: null
                  return_url: https://example.com/callback.html
                  shipping: null
                  reference: null
                  status: open
                  url: >-
                    https://sca.pay.com/authenticate?client_secret=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJAcGF5LWNvbS9wYXltZW50LWdhdGV3YXkiLCJpYXQiOjE2Mjk2NDczMjYsImV4cCI6MTY2MTE4MzMyNiwiYXVkIjoiaGkiLCJzdWIiOiJ3ZSBsb3ZlIHlvdSA6KSJ9.XK1D0v0XjcNYoQrwOeNPemCEFA6TGuHtGflyiUTtjYs
                  version: null
                  xid: null
          application/xml:
            schema:
              type: object
              properties: {}
      Customer:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
            examples:
              Example response:
                value:
                  id: cust_202779025452569600
                  resource: customer
                  address: null
                  created: '2022-09-07T13:40:41.751Z'
                  default_source: pm_card_222712682678060032
                  email: null
                  name: John Doe
                  phone: null
                  metadata: {}
                  reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  shipping: null
      Payment-Method:
        description: Example response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment-Method'
            examples:
              Example response:
                value:
                  id: pm_card_202779025452569600
                  resource: payment_method
                  billing_details: null
                  card:
                    bin: '424242'
                    brand: visa
                    country: US
                    exp_month: '11'
                    exp_year: '25'
                    fingerprint: >-
                      c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                    funding: credit
                    last4: '4242'
                    network: visa
                    token: tok_card_202779025452569600
                    wallet: null
                  created: '2022-09-07T13:40:41.751Z'
                  customer: cust_222712682678060032
                  customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                  metadata: {}
                  type: card
      Payment-Methods:
        description: Example response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Payment-Method'
            examples:
              Example response:
                value:
                  - id: pm_card_202779025452569600
                    resource: payment_method
                    billing_details: null
                    card:
                      bin: '424242'
                      brand: visa
                      country: US
                      exp_month: '11'
                      exp_year: '25'
                      fingerprint: >-
                        c5338f1c33863cce001e80648ea80df1068ed5f94dbb4bfb561ed8da8988fe0a
                      funding: credit
                      last4: '4242'
                      network: visa
                      token: tok_card_202779025452569600
                      wallet: null
                    created: '2022-09-07T13:40:41.751Z'
                    customer: cust_222712682678060032
                    customer_reference_id: 927071e4-464c-4f5d-a079-4aa097f922ca
                    metadata: {}
                    type: card
  x-readme:
    explorer-enabled: false
    proxy-enabled: false
  security:
    - x-paycom-api-key: []
  _id: 63191a6851f0b7008696d15c
konfigCliVersion: 1.38.37
