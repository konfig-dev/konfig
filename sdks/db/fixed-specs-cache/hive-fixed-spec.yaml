publishJson:
  company: Hive
  serviceName: false
  sdkName: hive-{language}-sdk
  clientName: Hive
  metaDescription: >-
    We help teams move faster. Hive's best-in-class project management platform
    includes all of the tools you need and want - and if not, we will build them
    for you. With flexible project views and endless customizations, Hive offers
    project management on your terms, success guaranteed.


    Hive is used by thousands of fast-moving teams to help with:

    - Project management

    - Integrating tools

    - Resourcing

    - Time-Tracking

    - Proofing and approvals

    - Note Taking

    - Task management

    - Reporting and analytics


    Want to see what it's all about? Start using Hive for free:
    app.hive.com/join
  apiStatusUrls: inherit
  homepage: hive.com
  developerDocumentation: developers.hive.com/reference
  categories:
    - project_management
    - task_management
    - time_tracking
rawSpecString: |
  openapi: 3.1.0
  info:
    title: Hive REST API
    version: '1.0'
  servers:
    - url: https://app.hive.com/api/v1
  components:
    securitySchemes:
      sec0:
        type: apiKey
        in: header
        name: api_key
      sec1:
        type: apiKey
        in: query
        name: user_id
  security:
    - sec0: []
      sec1: []
  paths:
    /workspaces:
      get:
        summary: Get workspaces
        description: Get all workspaces that you're is a member of.
        operationId: workspaces-1
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n  {\n  \t\"id\": \"1a2b3c4d5e6f7g8h9\",\n\t  \"name\": \"Honey Enterprises\",\n\t  \"members\": [\n\t    '1234abc',\n\t    '5678zyc'\n\t  ],\n\t  \"createdAt\": \"2017-05-18T15:26:17.407Z\",\n\t  \"modifiedAt\": \"2017-05-19T02:25:06.190Z\",\n\t  \"createdBy\": \"1234abcuJzo4k7F9\",\n\t  \"modifiedBy\": \"1234abcuJzo4k7F9\"\n\t}\n]\n\n"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: curl
              code: >-
                curl -X GET -H "api_key: API_KEY"
                https://app.hive.com/api/v1/workspaces?user_id=USER_ID
          samples-languages:
            - curl
    /workspaces/{workspaceId}/groups:
      get:
        summary: Get groups
        description: Get all chat groups for a given workspace
        operationId: testinput
        parameters:
          - name: workspaceId
            in: path
            description: ID of the workspace
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                          {
                            "id": "8MRZ6oYzRMJ4eJYnR",
                            "name": "Everyone",
                            "members": [
                              '1234abcuJzo4k7F9',
                              '6789abcuJzo4k7F9'
                             ],
                            "workspace": "12345aZjDQZndHqs",
                            "createdAt": "2017-05-18T15:26:17.407Z",
                            "createdBy": "1234abcuJzo4k7F9",
                            "modifiedBy": "1234abcuJzo4k7F9"
                          },
                          {
                            "id": "8S8pMXXJwCeExYWzq",
                            "name": "Bee Hive Gossip",
                            "members": [
                              '1234abcuJzo4k7F9',
                              '6789abcuJzo4k7F9'
                             ],
                            "workspace": "12345aZjDQZndHqs",
                            "createdAt": "2017-05-18T15:26:17.407Z",
                            "createdBy": "1234abcuJzo4k7F9",
                            "modifiedBy": "1234abcuJzo4k7F9"    
                          },
                          {
                            "id": "8yxNHYsvqYCDFP19J",
                            "name": "Maria von Trapp",
                            "members": [
                              '1234abcuJzo4k7F9',
                              '6789abcuJzo4k7F9'
                             ],
                            "workspace": "12345aZjDQZndHqs",
                            "createdAt": "2017-05-18T15:26:17.407Z",
                            "createdBy": "1234abcuJzo4k7F9",
                            "modifiedBy": "1234abcuJzo4k7F9"    
                          }
                        ]
                        
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY"
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/groups";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/activity-feeds:
      post:
        summary: Create activity feed
        description: >-
          Create an Activity Feed in the specified workspace for a Project or
          Action
        operationId: workspacesworkspaceidactivity_feeds
        parameters:
          - name: workspaceId
            in: path
            description: ID of the workspace
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - type
                  - assignedTo
                  - attachedItemType
                  - attachedItemId
                  - body
                properties:
                  type:
                    type: string
                    description: >-
                      Type determines the icon used ('comment', 'addProject',
                      'action', 'due', 'assignees', 'subaction', 'ready')
                  bucket:
                    type: string
                    description: Bucket for the ActivityFeed
                    default: activityFeed
                  assignedTo:
                    type: string
                    description: UserId to receive this ActivityFeed
                  attachedItemType:
                    type: string
                    description: '''action'' or ''project'''
                  attachedItemId:
                    type: string
                    description: Id of the related item
                  title:
                    type: string
                    description: Title
                  body:
                    type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "id": "abcde123456",
                          "workspace": "abcde123456",
                          "bucket": "activityFeed",
                          "assignedTo": "abcde123456",
                          "attachedItemType": "action",
                          "attachedItemId": "abcde123456",
                          "title": "Comment!",
                          "body": "Comment body",
                          "createdAt": "1900-01-01T00:00:00.000Z",
                          "modifiedAt": "1900-01-01T00:00:00.000Z",
                          "createdBy": "server",
                          "modifiedBy": "server"
                      }
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      example: abcde123456
                    workspace:
                      type: string
                      example: abcde123456
                    bucket:
                      type: string
                      example: activityFeed
                    assignedTo:
                      type: string
                      example: abcde123456
                    attachedItemType:
                      type: string
                      example: action
                    attachedItemId:
                      type: string
                      example: abcde123456
                    title:
                      type: string
                      example: Comment!
                    body:
                      type: string
                      example: Comment body
                    createdAt:
                      type: string
                      example: '1900-01-01T00:00:00.000Z'
                    modifiedAt:
                      type: string
                      example: '1900-01-01T00:00:00.000Z'
                    createdBy:
                      type: string
                      example: server
                    modifiedBy:
                      type: string
                      example: server
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var projectId = "PROJECT_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/activity-feeds";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  type: "comment",
                  bucket: "activityFeed",
                  assignedTo: userId,
                  attachedItemType: "project",
                  attachedItemId: projectId,
                  title: "Comment title",
                  body: "Comment body"
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /users/{userId}:
      get:
        summary: Get user
        description: Get a user by id
        operationId: get-user
        parameters:
          - name: userId
            in: path
            description: User ID
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "id": "232b3c4d5e6f7g8h1",
                        "profile": {
                          "firstName": "Jane",
                          "lastName": "Doe"
                        },
                        "fullName": "Jane Doe",
                        "email": "john.doe@hive.com"
                      }
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 232b3c4d5e6f7g8h1
                    profile:
                      type: object
                      properties:
                        firstName:
                          type: string
                          example: Jane
                        lastName:
                          type: string
                          example: Doe
                    fullName:
                      type: string
                      example: Jane Doe
                    email:
                      type: string
                      example: john.doe@hive.com
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |
                var userId = "USER_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "users/" + userId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      put:
        summary: Update user
        description: Update a user
        operationId: users-1
        parameters:
          - name: userId
            in: path
            description: User ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    properties:
                      firstName:
                        type: string
                        description: First name
                      lastName:
                        type: string
                        description: Last name
                    required: []
                    type: object
                    description: User profile
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "id": "232b3c4d5e6f7g8h1",
                        "profile": {
                          "firstName": "Jane",
                          "lastName": "Doe"
                        },
                        "fullName": "Jane Doe",
                        "email": "john.doe@hive.com"
                      }
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 232b3c4d5e6f7g8h1
                    profile:
                      type: object
                      properties:
                        firstName:
                          type: string
                          example: Jane
                        lastName:
                          type: string
                          example: Doe
                    fullName:
                      type: string
                      example: Jane Doe
                    email:
                      type: string
                      example: john.doe@hive.com
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "users/" + userId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                // New data for user record
                var data = {
                  profile: {
                    firstName: "Jane"
                  }
                };

                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /users:
      get:
        summary: Get users
        description: Get a list of users, filter by "email"
        operationId: get-user-by-email
        parameters:
          - name: email
            in: query
            description: Email address to search by
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      [
                        {
                          "id": "232b3c4d5e6f7g8h1",
                          "profile": {
                            "firstName": "Test",
                            "lastName": "User"
                          },
                          "fullName": "Test User",
                          "email": "test@example.com"
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 232b3c4d5e6f7g8h1
                      profile:
                        type: object
                        properties:
                          firstName:
                            type: string
                            example: Test
                          lastName:
                            type: string
                            example: User
                      fullName:
                        type: string
                        example: Test User
                      email:
                        type: string
                        example: test@example.com
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >
                var userId = "USER_ID";

                var filterEmail = "test@example.com";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "users";

                var qs = "?user_id=" + userId + "&api_key=" + apiKey + "&email=" +
                filterEmail;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/users:
      get:
        summary: Get workspace users
        description: Get all users for a given workspace that the user has access to
        operationId: workspacesworkspaceidusers
        parameters:
          - name: workspaceId
            in: path
            description: ID of the workspace
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      [
                        {
                          "id": "22YK3N5uGpzMdw7fm",
                          "profile": {
                            "firstName": "Vera",
                            "lastName": "Morrisville"
                          },
                          "fullName": "Vera Morrisville",
                          "email": "john.doe@hive.com",
                        },
                        {
                          "id": "5oSp4usru9FTsFCuH",
                          "profile": {
                            "firstName": "Scott",
                            "lastName": "Brown"
                          },
                          "fullName": "Scott Brown",
                          "email": "john.doe@hive.com",
                        },
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/users";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      post:
        summary: Invite user
        description: Invite a new user to your workspace
        operationId: invite-user
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - email
                properties:
                  email:
                    type: string
                    description: Email Address
                  fullName:
                    type: string
                    description: Full name
                  shouldSendInvite:
                    type: boolean
                    description: Send email notification
                    default: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n  \"id\": \"232b3c4d5e6f7g8h1\",\n  \"profile\": {\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\"\n  },\n\t\"fullName\": \"Test User\",\n  \"email\": \"test@example.com\"\n}\n"
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 232b3c4d5e6f7g8h1
                    profile:
                      type: object
                      properties:
                        firstName:
                          type: string
                          example: Test
                        lastName:
                          type: string
                          example: User
                    fullName:
                      type: string
                      example: Test User
                    email:
                      type: string
                      example: test@example.com
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/users";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  email: "test@example.com",
                  fullName: "Test User"
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      delete:
        summary: Remove user from workspace
        description: Remove a user from a given workspace
        operationId: delete-user
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: User ID of the user to remove
        responses:
          '204':
            description: '204'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {}
                schema:
                  type: object
                  properties: {}
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /workspaces/{workspaceId}/external-users:
      get:
        summary: Get workspace external users
        description: Get all external users for a given workspace that the user has access to
        operationId: get-workspace-external-users
        parameters:
          - name: workspaceId
            in: path
            description: ID of the workspace
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      [
                        {
                          "id": "22YK3N5uGpzMdw7fm",
                          "profile": {
                            "firstName": "External",
                            "lastName": "User"
                          },
                          "fullName": "External User",
                          "email": "john.doe@hive.com",
                          "managers": []
                        },
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n  {\n    \"error\": 400,\n    \"message\": \"Workspace not found.\"\n\t},\n\t{\n    \"error\": 400,\n    \"message\": \"Invalid API Key.\"\n\t}\n]"
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      error:
                        type: integer
                        example: 400
                        default: 0
                      message:
                        type: string
                        example: Workspace not found.
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/external-users";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /actions/{actionId}:
      get:
        summary: Get action
        description: ''
        operationId: actionsactionid
        parameters:
          - name: actionId
            in: path
            description: The id of the action
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n  \"id\": \"232b3c4d5e6f7g8h1\",\n  \"title\": \"Action title\",\n  \"workspace\": \"w32bac4d5e6f7g8h2\",\n  \"assignees\": [],\n  \"projectId\": null,\n  \"customFields\": [],\n  \"createdAt\": \"2019-01-01T00:00:00.000Z\",\n  \"modifiedAt\": \"2019-01-01T00:00:00.000Z\",\n  \"createdBy\": \"u32bac4d5e6f7g8h2\",\n  \"modifiedBy\": \"u32bac4d5e6f7g8h2\",\n  \"status\": \"Unstarted\",\n  \"deadline\": null,\n  \"scheduledDate\": null,\n  \"checkedDate\": null,\n  \"parent\": null,\n  \"root\": null,\n  \"archived\":false,\n  \"deleted\":false,\n  \"hasSubactions\": false,\n  \"estimate\": null,\n  \"estimates\":[\n    {\"userId\":user12345,\"time\":7200}\n  ]\n  \"milestone\": false,\n  \"loggedTime\": [\n    {\n      \"userId\":\"user12345\",\n      \"time\": 7200,\n      \"date\":\"2019-01-01T00:00:00.000Z\"\n    }\n  ],\n  \"phaseId\":\"123ab456\",\n  \"phaseName\":\"planning\",\n  \"priority\": {\n  \t  \"name\":\"Urgent\",\n      \"level\": 1,\n      \"color\": \"#f6781a\",\n      \"_id\": \"abc321\"\n  }\n}"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |
                var userId = "USER_ID";
                var actionId = "ACTION_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "/actions/" + actionId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      put:
        summary: Update action
        description: Update the action
        operationId: actionsupdatestatus
        parameters:
          - name: actionId
            in: path
            description: The id of the action
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: The new status of the action
                  update_children:
                    type: boolean
                    description: >-
                      True if this action's children should also have their
                      statuses updated
                    default: true
                  title:
                    type: string
                    description: Set new action title
                  projectId:
                    type: string
                    description: Assign action to a specific project
                  assignees:
                    type: array
                    description: User IDs
                    default:
                      - '[]'
                    items:
                      type: string
                  labels:
                    type: array
                    description: Set new Labels
                    items:
                      type: string
                  description:
                    type: string
                    description: >-
                      Overwrite the description of the Action. Supports basic HTML
                      (h1, h2, a, b, u tags).
                  urgent:
                    type: boolean
                    description: Urgency state
                  privacy:
                    type: string
                    description: 'Set privacy value (allowed values: "private", "public")'
                  checked:
                    type: boolean
                    description: Checked state
                  scheduledDate:
                    type: string
                    description: Set start date
                    format: date
                  deadline:
                    type: string
                    description: Set end date
                    format: date
                  parent:
                    type: string
                    description: Set new parent for action
                  customFields:
                    type: array
                    description: >-
                      Add new or update an existing custom field. Work with 'text'
                      custom fields only.
                    items:
                      properties:
                        label:
                          type: string
                          description: Label of the field
                        value:
                          type: string
                          description: Value of the field
                      type: object
                  shiftSubactionsDeadline:
                    type: boolean
                    description: Shift subactions by same date update
                    default: false
                  archived:
                    type: boolean
                    description: True if this action is to be archived
                    default: false
                  phaseId:
                    type: string
                    description: >-
                      ID of a project phase which will be assigned to the action.
                      If both phaseId and phaseName are sent than phaseId will be
                      used
                  phaseName:
                    type: string
                    description: >-
                      Name of a project phase which will be assigned to the
                      action. If both phaseId and phaseName are sent than phaseId
                      will be used
                  followingUserIds:
                    type: array
                    description: Enter each userId to be included as an action card follower.
                    items:
                      type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "id": "1a2b3c4d5e6f7g8h9",
                        "title": "Action title",
                        "workspace": "fd8s97f9sd87f89s",
                        "assignees": [],
                        "projectId": null,
                        "customFields": [
                          {
                            "_id": "1a2b3c4d5e6f7g8gn",
                            "label": "customActionField",
                            "type": "text",
                            "rank": 2.3843301617611736,
                            "dropdownValues": [],
                            "allowMultiSelect": false,
                            "id": "XkvuQsZ6vrLoba8gN",
                            "value": "customFieldValue",
                            "dateValue": null
                          }
                        ],
                        "createdAt": "2018-07-27T17:10:49.687Z",
                        "modifiedAt": "2018-07-30T18:12:10.411Z",
                        "createdBy": "fds879a7fd8s9a",
                        "modifiedBy": "fds879a7fd8s9a",
                        "status": "In Progress",
                        "deadline": null,
                        "scheduledDate": null,
                        "checkedDate": null,
                        "parent": null,
                        "root": null,
                        "hasSubactions": false,
                        "estimate": null,
                        "loggedTime": [
                          {
                            "userId":"user12345",
                            "time": 7200,
                            "date":"2019-01-01T00:00:00.000Z"
                          }
                        ],
                        "archived": false
                      }
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 1a2b3c4d5e6f7g8h9
                    title:
                      type: string
                      example: Action title
                    workspace:
                      type: string
                      example: fd8s97f9sd87f89s
                    assignees:
                      type: array
                    projectId: {}
                    customFields:
                      type: array
                      items:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 1a2b3c4d5e6f7g8gn
                          label:
                            type: string
                            example: customActionField
                          type:
                            type: string
                            example: text
                          rank:
                            type: number
                            example: 2.3843301617611736
                            default: 0
                          dropdownValues:
                            type: array
                          allowMultiSelect:
                            type: boolean
                            example: false
                            default: true
                          id:
                            type: string
                            example: XkvuQsZ6vrLoba8gN
                          value:
                            type: string
                            example: customFieldValue
                          dateValue: {}
                    createdAt:
                      type: string
                      example: '2018-07-27T17:10:49.687Z'
                    modifiedAt:
                      type: string
                      example: '2018-07-30T18:12:10.411Z'
                    createdBy:
                      type: string
                      example: fds879a7fd8s9a
                    modifiedBy:
                      type: string
                      example: fds879a7fd8s9a
                    status:
                      type: string
                      example: In Progress
                    deadline: {}
                    scheduledDate: {}
                    checkedDate: {}
                    parent: {}
                    root: {}
                    hasSubactions:
                      type: boolean
                      example: false
                      default: true
                    estimate: {}
                    loggedTime:
                      type: array
                      items:
                        type: object
                        properties:
                          userId:
                            type: string
                            example: user12345
                          time:
                            type: integer
                            example: 7200
                            default: 0
                          date:
                            type: string
                            example: '2019-01-01T00:00:00.000Z'
                    archived:
                      type: boolean
                      example: false
                      default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var actionId = "ACTION_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "actions/" + actionId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  status: "In Progress",
                  customFields: [{ label: "customActionField", value: "customFieldValue" }]
                };

                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      delete:
        summary: Delete action
        description: Delete the action by ID
        operationId: actionsactionid-1
        parameters:
          - name: actionId
            in: path
            description: The id of the action
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |+
                      {
                          "message": "Action successfully deleted"
                      }

                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Action successfully deleted
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var actionId = "ACTION_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "actions/" + actionId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  method: "DELETE",
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/actions:
      get:
        summary: Get actions
        description: Get all actions for a given workspace that the user has access to
        operationId: workspacesworkspaceidactions
        parameters:
          - name: projectId
            in: query
            description: >-
              An optional project ID to get actions from. By default, all actions
              will be returned regardless of what project they belong to.
            schema:
              type: string
          - name: sortBy
            in: query
            description: >-
              Sort results by an Action Object field (for example, `sortBy=title
              asc`)
            schema:
              type: string
              default: fieldName asc
          - name: workspaceId
            in: path
            description: ID of the workspace
            schema:
              type: string
            required: true
          - name: limit
            in: query
            description: default = 100; min = 1; max = 100
            schema:
              type: string
              default: '100'
          - name: filters
            in: query
            description: >-
              Optional fields to filter by. Filters expects a structure like
              "filters[fieldName]=value". For example, if you wanted to filter to
              just get actions with the status "Completed", you would pass:
              "filters[status]=Completed". Currently, only the following fields
              are supported: "status", "parent", "archived", "milestone",
              "deleted".
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n  {\n    \"id\": \"jArt6JZpezAMZimzy\",\n    \"title\": \"Prepare for weekly product meeting\",\n    \"workspace\": \"12345aZjDQZndHqs\",\n    \"assignees\": [],\n    \"projectId\": null,\n    \"createdAt\": \"2015-07-09T20:33:56.465Z\",\n    \"modifiedAt\": \"2016-08-23T07:49:09.621Z\",\n    \"createdBy\": \"1234abcuJzo4k7F9\",\n    \"modifiedBy\": \"1234abcuJzo4k7F9\",\n    \"status\": \"Unstarted\",\n    \"deadline\": null,\n    \"scheduledDate\": null,\n    \"checkedDate\": null,\n    \"parent\": null,\n    \"root\": null,\n    \"archived\":false,\n    \"deleted\":false,\n    \"hasSubactions\": false,\n    \"estimate\": null,\n    \"estimates\": [\n      {\"userId\":\"user12345\",\"time\":7200}\n    ]\n    \"milestone\": false,\n    \"loggedTime\": [\n      {\n        \"userId\":\"user12345\",\n        \"time\": 7200,\n        \"date\":\"2019-01-01T00:00:00.000Z\"\n      }\n    ],\n  \t\"phaseId\":\"abcdefg9876\",\n    \"phaseName\": \"Planning\",\n    \"priority\": {\n  \t  \"name\":\"Urgent\",\n      \"level\": 1,\n      \"color\": \"#f6781a\",\n      \"_id\": \"abc321\"\n     }\n  }\n]"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/actions";

                var qs = "?user_id=" + userId + "&api_key=" + apiKey +
                "&sortBy=title asc";

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /actions/create:
      post:
        summary: Create action
        description: Get all actions for a given workspace that the user has access to
        operationId: actionscreate-1
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  workspace:
                    type: string
                    description: ID of the workspace
                  title:
                    type: string
                    description: Title of the action
                  description:
                    type: string
                    description: Description of the action
                  projectId:
                    type: string
                    description: Assign action to a specific project
                  assignees:
                    type: array
                    description: >-
                      User Ids of action assignees; if value isn't passed the
                      action will be assigned to the user Id of the request
                    items:
                      type: string
                  labels:
                    type: array
                    description: Set Labels (Label IDs) for the Action
                    items:
                      type: string
                  deadline:
                    type: string
                    description: 'Date string to set the deadline (date format: yyyy/mm/dd)'
                  scheduledDate:
                    type: string
                    description: 'Date string to set the deadline (date format: yyyy/mm/dd)'
                    default: Date string to set the start date
                  processId:
                    type: string
                    description: Pass action template id to apply an action template
                  customFields:
                    type: array
                    description: >-
                      Add custom fields to the action: Each object must contain
                      label (string) and value (string)
                    items:
                      properties:
                        label:
                          type: string
                          description: Label of the field
                        value:
                          type: string
                          description: Value of the field
                      type: object
                  parentId:
                    type: string
                    description: ID of an Action to set as the parent for your new Action
                  phaseId:
                    type: string
                    description: >-
                      ID of a project phase which will be assigned to the created
                      action. If both phaseId and phaseName are sent than phaseId
                      will be used
                  phaseName:
                    type: string
                    description: >-
                      Name of a project phase which will be assigned to the
                      created action. If both phaseId and phaseName are sent than
                      phaseId will be used
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "id": "qFR6a524nFARukmvF",
                        "title": "This is my action",
                        "workspace": "12345aZjDQZndHqs",
                        "assignees": [],
                        "projectId": null,
                        "customFields": [],
                        "createdAt": "2018-01-23T21:41:40.295Z",
                        "modifiedAt": "2018-01-23T21:41:40.289Z",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345gfuJzo4k7F9",
                        "status": "Unstarted",
                        "deadline": null,
                        "scheduledDate": null,
                        "checkedDate": null,
                        "parent": null,
                        "root": null,
                        "hasSubactions": false,
                        "estimate": null,
                        "loggedTime": []
                      }
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      example: qFR6a524nFARukmvF
                    title:
                      type: string
                      example: This is my action
                    workspace:
                      type: string
                      example: 12345aZjDQZndHqs
                    assignees:
                      type: array
                    projectId: {}
                    customFields:
                      type: array
                    createdAt:
                      type: string
                      example: '2018-01-23T21:41:40.295Z'
                    modifiedAt:
                      type: string
                      example: '2018-01-23T21:41:40.289Z'
                    createdBy:
                      type: string
                      example: 12345gfuJzo4k7F9
                    modifiedBy:
                      type: string
                      example: 12345gfuJzo4k7F9
                    status:
                      type: string
                      example: Unstarted
                    deadline: {}
                    scheduledDate: {}
                    checkedDate: {}
                    parent: {}
                    root: {}
                    hasSubactions:
                      type: boolean
                      example: false
                      default: true
                    estimate: {}
                    loggedTime:
                      type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "actions/create";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  workspace: workspaceId,
                  title: "Test action title",
                  assigned_to: userId,
                  when: "today"
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /actions/{actionId}/comments:
      get:
        summary: Get action comments
        description: ''
        operationId: actionsactionidcomments
        parameters:
          - name: actionId
            in: path
            description: The id of the action
            schema:
              type: string
            required: true
          - name: limit
            in: query
            description: Number of comments
            schema:
              type: integer
              format: int32
              default: 200
          - name: sortBy
            in: query
            description: You can change to e.g. createdAt asc
            schema:
              type: string
              default: createdAt+desc
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      [
                        {
                          "id": "232b3c4d5e6f7g8h1",
                          "attachments": [],
                          "workspace": "w32bac4d5e6f7g8h2",
                          "body": "comment body",
                          "mentions": [],
                          "createdBy": "u32bac4d5e6f7g8h2",
                          "createdAt": "2020-01-04T23:30:54.816Z",
                          "reactions": []
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 232b3c4d5e6f7g8h1
                      attachments:
                        type: array
                      workspace:
                        type: string
                        example: w32bac4d5e6f7g8h2
                      body:
                        type: string
                        example: comment body
                      mentions:
                        type: array
                      createdBy:
                        type: string
                        example: u32bac4d5e6f7g8h2
                      createdAt:
                        type: string
                        example: '2020-01-04T23:30:54.816Z'
                      reactions:
                        type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |
                var userId = "USER_ID";
                var actionId = "ACTION_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "/actions/" + actionId + '/comments';
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      post:
        summary: Create action comment
        description: ''
        operationId: actionsactionidcomments-1
        parameters:
          - name: actionId
            in: path
            description: The id of the action
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  body:
                    type: string
                    description: Number of comments
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Action comment successfully inserted",
                        "comment": {
                          "id": "232b3c4d5e6f7g8h1",
                          "body": "comment body",
                          "workspace": "w32bac4d5e6f7g8h2",
                          "createdAt": "2019-01-01T00:00:00.000Z",
                          "createdBy": "u32bac4d5e6f7g8h2",
                          "attachments": [],
                          "reactions": [],
                          "mentions": []
                        }
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Action comment successfully inserted
                    comment:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 232b3c4d5e6f7g8h1
                        body:
                          type: string
                          example: comment body
                        workspace:
                          type: string
                          example: w32bac4d5e6f7g8h2
                        createdAt:
                          type: string
                          example: '2019-01-01T00:00:00.000Z'
                        createdBy:
                          type: string
                          example: u32bac4d5e6f7g8h2
                        attachments:
                          type: array
                        reactions:
                          type: array
                        mentions:
                          type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var actionId = "ACTION_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "actions/" + actionId + "/comments";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  body: "New comment body"
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /actions/{actionId}/attachments:
      get:
        summary: Get action attachments
        description: >-
          Retrieves all attachments uploaded directly to the action card itself,
          or inserted using either of the available action attachment POST
          endpoints. Does not include attachments uploaded from 3rd party file
          store services, or attachments nested within comments on an action card.
        operationId: get-action-attachments
        parameters:
          - name: actionId
            in: path
            description: The ID of the action.
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                          {
                              "_id": "AzwXZkTsdH32nTPur",
                              "name": "Hello world",
                              "workspace": "9driAwqZjDQZndHqs",
                              "url": "https://hostname.com/file/path",
                              "createdAt": "2050-10-27T22:09:38.137Z",
                              "createdBy": "AnMyD2YXX4vcdTgxw",
                              "modifiedAt": "2050-10-27T22:09:38.717Z",
                              "modifiedBy": "AnMyD2YXX4vcdTgxw"
                          }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: AzwXZkTsdH32nTPur
                      name:
                        type: string
                        example: Hello world
                      workspace:
                        type: string
                        example: 9driAwqZjDQZndHqs
                      url:
                        type: string
                        example: https://hostname.com/file/path
                      createdAt:
                        type: string
                        example: '2050-10-27T22:09:38.137Z'
                      createdBy:
                        type: string
                        example: AnMyD2YXX4vcdTgxw
                      modifiedAt:
                        type: string
                        example: '2050-10-27T22:09:38.717Z'
                      modifiedBy:
                        type: string
                        example: AnMyD2YXX4vcdTgxw
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var actionId = "ACTION_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1";
                var endpoint = "/actions/" + actionId + '/attachments';
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      post:
        summary: Create action attachment
        description: Attaches a file to an action.
        operationId: create-file
        parameters:
          - name: actionId
            in: path
            description: The ID of the action.
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: File URL.
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Action attachment successfully added"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Action attachment successfully added
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var actionId = "ACTION_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1";
                var endpoint = "/actions/" + actionId + '/attachments';
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs

                var data = {
                  url: "https://domain.com/file/path"
                };

                $.ajax({
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /actions/{actionId}/attachments/{attachmentId}:
      get:
        summary: Get attachment by attachment ID
        description: >-
          Returns the requested file object. File must exist on the corresponding
          action.
        operationId: get-specific-file-by-file-id
        parameters:
          - name: actionId
            in: path
            description: The ID of the action.
            schema:
              type: string
            required: true
          - name: attachmentId
            in: path
            description: The ID of the file attachment.
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "_id": "AzwXZkTsdH32nTPur",
                        "name": "Hello world",
                        "workspace": "9driAwqZjDQZndHqs",
                        "url": "https://hostname.com/file/path",
                        "createdAt": "2050-10-27T22:09:38.137Z",
                        "createdBy": "AnMyD2YXX4vcdTgxw",
                        "modifiedAt": "2050-10-27T22:09:38.717Z",
                        "modifiedBy": "AnMyD2YXX4vcdTgxw"
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: AzwXZkTsdH32nTPur
                    name:
                      type: string
                      example: Hello world
                    workspace:
                      type: string
                      example: 9driAwqZjDQZndHqs
                    url:
                      type: string
                      example: https://hostname.com/file/path
                    createdAt:
                      type: string
                      example: '2050-10-27T22:09:38.137Z'
                    createdBy:
                      type: string
                      example: AnMyD2YXX4vcdTgxw
                    modifiedAt:
                      type: string
                      example: '2050-10-27T22:09:38.717Z'
                    modifiedBy:
                      type: string
                      example: AnMyD2YXX4vcdTgxw
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var actionId = "ACTION_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1";

                var endpoint = "/actions/" + actionId + '/attachments/' +
                attachmentId

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /actions/{actionId}/apply-template:
      post:
        summary: Apply action template
        description: ''
        operationId: apply-action-template
        parameters:
          - name: actionId
            in: path
            description: Id of the action
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - processId
                properties:
                  processId:
                    type: string
                    description: Id of the existing action template (workflow)
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        message: "Action template successfully applied"
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: "var userId = \"USER_ID\";\nvar actionId = \"ACTION_ID\";\nvar apiKey = \"API_KEY\";\nvar baseUrl = \"https://app.hive.com/api/v1/\";\nvar endpoint = \"actions/\" + actionId + \"/apply-template\";\nvar qs = \"?user_id=\" + userId + \"&api_key=\" + apiKey;\nvar url = baseUrl + endpoint + qs;\n\nvar data = {\n\tprocessId: \"existingWorkflowId\"\n};\n\n$.ajax({\n  method: \"POST\",\n  url: url,\n  data: JSON.stringify(data),\n  contentType: \"application/json\"\n}).done(function(data) {\n  console.log(data);\n});"
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/actiontemplates:
      get:
        summary: Get action templates
        description: >-
          Get all action templates for a given workspace that the user has access
          to
        operationId: workspacesworkspaceidworkflows
        parameters:
          - name: workspaceId
            in: path
            description: ID of the workspace
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      [
                        {
                          "id": "BrhDWFRzJDPMcitEk",
                          "name": "Blog Post",
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "modifiedAt": "2017-05-19T02:25:06.190Z",
                          "createdBy": "1234abcuJzo4k7F9",
                          "modifiedBy": "1234abcuJzo4k7F9" 
                        },
                        {
                          "id": "J7ixnuHFP4kmncLun",
                          "name": "Product Research",
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "modifiedAt": "2017-05-19T02:25:06.190Z",
                          "createdBy": "1234abcuJzo4k7F9",
                          "modifiedBy": "1234abcuJzo4k7F9"   
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: BrhDWFRzJDPMcitEk
                      name:
                        type: string
                        example: Blog Post
                      createdAt:
                        type: string
                        example: '2017-05-18T15:26:17.407Z'
                      modifiedAt:
                        type: string
                        example: '2017-05-19T02:25:06.190Z'
                      createdBy:
                        type: string
                        example: 1234abcuJzo4k7F9
                      modifiedBy:
                        type: string
                        example: 1234abcuJzo4k7F9
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/actiontemplates";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /actions/{actionId}/action-history:
      get:
        summary: Get action history
        description: ''
        operationId: get-action-history
        parameters:
          - name: actionId
            in: path
            description: The id of the action
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      [
                        {
                          "id": "232b3c4d5e6f7g8h1",
                          "body":"comment body",
                          "actionId":"w32bac4d5e6f7g8h2"
                          "date":"2020-01-04T23:30:54.816Z"
                        }
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /messages/create:
      post:
        summary: Create message
        description: Create a new message
        operationId: messagescreate
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  workspace:
                    type: string
                    description: ID of the workspace
                  body:
                    type: string
                    description: Body of the message
                  senderName:
                    type: string
                    description: The name of the sender
                  senderPicture:
                    type: string
                    description: URL of the sender picture
                  containerId:
                    type: string
                    description: Group the message will be created in
                  color:
                    type: string
                    description: >-
                      Optional background color for the message. Options are
                      yellow, purple, green, red, gray
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "id": "2bK58icvKeJSzvupB",
                        "sender": "12345gfuJzo4k7F9",
                        "workspace": "12345naZjDQZndHqs",
                        "containerId": "12345ZTJqWY2QK2B",
                        "body": "This is a new message",
                        "senderPicture": "https://cdn2.iconfinder.com/data/icons/botcons/100/android-bot-round-ears-eyes-virus-brown-256.png",
                        "senderFirstName": "My Bot",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      }
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 2bK58icvKeJSzvupB
                    sender:
                      type: string
                      example: 12345gfuJzo4k7F9
                    workspace:
                      type: string
                      example: 12345naZjDQZndHqs
                    containerId:
                      type: string
                      example: 12345ZTJqWY2QK2B
                    body:
                      type: string
                      example: This is a new message
                    senderPicture:
                      type: string
                      example: >-
                        https://cdn2.iconfinder.com/data/icons/botcons/100/android-bot-round-ears-eyes-virus-brown-256.png
                    senderFirstName:
                      type: string
                      example: My Bot
                    createdBy:
                      type: string
                      example: 12345gfuJzo4k7F9
                    modifiedBy:
                      type: string
                      example: 12345xgfuJzo4k7F9
                    createdAt:
                      type: string
                      example: '2018-01-23T22:14:24.862Z'
                    modifiedAt:
                      type: string
                      example: '2018-01-23T22:14:24.862Z'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var groupId = "GROUP_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "messages/create";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  workspace: workspaceId,
                  body: "Hi! this message was sent from the API.",
                  senderName: "Automated Messages",
                  senderPicture:
                    "https://cdn2.iconfinder.com/data/icons/botcons/100/android-bot-round-ears-eyes-virus-brown-256.png",
                  containerId: groupId
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /projects/{projectId}:
      get:
        summary: Get project
        description: Get a project by id
        operationId: projectsprojectid-2
        parameters:
          - name: projectId
            in: path
            description: ID of the project to update
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "project": {
                          "id": "123ABC567XYZ",
                          "name": "New project name",
                          "description": "",
                          "startDate": null,
                          "endDate": null,
                          "accessOption": "private",
                          "sharingType": "me",
                          "members": [],
                          "template": false,
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "modifiedAt": "2017-05-19T02:25:06.190Z",
                          "createdBy": "1234abcuJzo4k7F9",
                          "modifiedBy": "1234abcuJzo4k7F9",
                          "projectCustomFields": [
                            {
                              "label": "Budget",
                              "value": "$5000000",
                              "dropdownValues": [],
                              "selectedValues": [],
                              "type": "text",
                              "_id": "1234abcuJzo4k7E1",
                              "hidden": false
                            }
                          ],
                          "color": "#3fcaca",
                          "parentProject": null,
                          "phases": [],
                          "budget":0,
                          "resourcePlaceholderIds": []
                        }
                      }
                schema:
                  type: object
                  properties:
                    project:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 123ABC567XYZ
                        name:
                          type: string
                          example: New project name
                        description:
                          type: string
                          example: ''
                        startDate: {}
                        endDate: {}
                        accessOption:
                          type: string
                          example: private
                        sharingType:
                          type: string
                          example: me
                        members:
                          type: array
                        template:
                          type: boolean
                          example: false
                          default: true
                        createdAt:
                          type: string
                          example: '2017-05-18T15:26:17.407Z'
                        modifiedAt:
                          type: string
                          example: '2017-05-19T02:25:06.190Z'
                        createdBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        modifiedBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        projectCustomFields:
                          type: array
                          items:
                            type: object
                            properties:
                              label:
                                type: string
                                example: Budget
                              value:
                                type: string
                                example: $5000000
                              dropdownValues:
                                type: array
                              selectedValues:
                                type: array
                              type:
                                type: string
                                example: text
                              _id:
                                type: string
                                example: 1234abcuJzo4k7E1
                              hidden:
                                type: boolean
                                example: false
                                default: true
                        color:
                          type: string
                          example: '#3fcaca'
                        parentProject: {}
                        phases:
                          type: array
                        budget:
                          type: integer
                          example: 0
                          default: 0
                        resourcePlaceholderIds:
                          type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var projectId = "PROJECT_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "projects/" + projectId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      put:
        summary: Update project
        description: Update a project by id
        operationId: projectsprojectid-1
        parameters:
          - name: projectId
            in: path
            description: ID of the project to update
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Project name
                  description:
                    type: string
                    description: Project description
                  startDate:
                    type: string
                    description: Start date of the Project. Pass null value to unset
                    format: date
                  endDate:
                    type: string
                    description: End date of the Project. Pass null value to unset
                    format: date
                  color:
                    type: string
                    description: Optional hex code for project color
                  accessOption:
                    type: string
                    description: Project access permissions. Either public or private
                  parentProject:
                    type: string
                    default: Id of parent project
                  sharingType:
                    type: string
                    description: >-
                      Sharing type of the project (one of "everyone", "custom" or
                      "me")
                  members:
                    type: array
                    description: Array of User IDs to set as members of the project.
                    items:
                      type: string
                  teams:
                    type: array
                    description: Array of Team IDs to set as members of the project.
                    items:
                      type: string
                  archived:
                    type: boolean
                    default: false
                  template:
                    type: array
                    description: >-
                      template could be a string - ID of template to apply. Array
                      of IDs. Object - object with settings for template
                      appliance. Array of objects with settings for template
                      appliance
                    items:
                      properties:
                        templateId:
                          type: string
                          description: ID of template to apply
                        importWith:
                          type: object
                          properties:
                            projectCustomFields:
                              type: boolean
                              default: false
                            includeWeekends:
                              type: boolean
                              default: false
                            customFields:
                              type: boolean
                              default: false
                            ganttGroupBy:
                              type: boolean
                              default: false
                            description:
                              type: boolean
                              default: false
                            attachments:
                              type: boolean
                              default: false
                            permissions:
                              type: boolean
                              default: false
                            assignees:
                              type: boolean
                              default: false
                            deadline:
                              type: boolean
                              default: false
                            statuses:
                              type: boolean
                              default: false
                            sortType:
                              type: boolean
                              default: false
                            viewType:
                              type: boolean
                              default: false
                            labels:
                              type: boolean
                              default: false
                            actionDateSync:
                              type: boolean
                              default: false
                            ganttAutoScheduling:
                              type: boolean
                              default: false
                            automationWorkflows:
                              type: boolean
                              default: false
                            approvals:
                              type: boolean
                              default: false
                            projectPermissions:
                              type: boolean
                              default: false
                            advancedSettings:
                              type: boolean
                              description: Controls whether advanced settings is imported
                              default: false
                        template:
                          type: boolean
                          description: >-
                            true - means that it is a project template. false - 
                            common project
                          default: false
                        projectPeopleIds:
                          type: array
                          default: []
                          items:
                            type: string
                        overrideLabels:
                          type: boolean
                          default: false
                        shouldRemoveFromParentProjectIfNoParent:
                          type: boolean
                          default: true
                      type: object
                  budget:
                    type: integer
                    description: Budget value for the Project
                    format: int32
                  isDraftMode:
                    type: boolean
                    description: >-
                      Boolean value representing whether a project is in Draft
                      Mode state or not. Pass boolean value to update Draft Mode
                      state of the project.
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "{\n  \"message\": \"Project was updated successfully\",\n  \"project\": {\n    \"id\": \"123ABC567XYZ\",\n    \"name\": \"New project name\",\n    \"description\": \"A new project description right here!\",\n    \"startDate\": \"2019-04-01T00:00:00.000Z\",\n\t\t\"endDate\": \"2019-04-01T00:00:00.000Z\",\n    \"accessOption\": \"public\",\n    \"sharingType\": \"everyone\",\n    \"members\": [],\n    \"template\": false,\n    \"createdAt\": \"2019-12-20T19:41:13.283Z\",\n    \"modifiedAt\": \"2020-01-04T23:53:41.413Z\",\n    \"createdBy\": \"1234abcuJzo4k7F9\",\n    \"modifiedBy\": \"1234abcuJzo4k7F9\",\n    \"projectCustomFields\": [\n      {\n        \"label\": \"Budget\",\n        \"value\": \"$5000000\",\n        \"dropdownValues\": [],\n        \"selectedValues\": [],\n        \"type\": \"text\",\n        \"_id\": \"1234abcuJzo4k7E1\",\n        \"hidden\": false\n      }\n    ],\n    \"color\": \"#F2F2F2\",\n    \"parentProject\": \"parent123\",\n    \"phases\": [],\n    \"resourcePlaceholderIds\": []\n  }\n}\n"
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Project was updated successfully
                    project:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 123ABC567XYZ
                        name:
                          type: string
                          example: New project name
                        description:
                          type: string
                          example: A new project description right here!
                        startDate:
                          type: string
                          example: '2019-04-01T00:00:00.000Z'
                        endDate:
                          type: string
                          example: '2019-04-01T00:00:00.000Z'
                        accessOption:
                          type: string
                          example: public
                        sharingType:
                          type: string
                          example: everyone
                        members:
                          type: array
                        template:
                          type: boolean
                          example: false
                          default: true
                        createdAt:
                          type: string
                          example: '2019-12-20T19:41:13.283Z'
                        modifiedAt:
                          type: string
                          example: '2020-01-04T23:53:41.413Z'
                        createdBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        modifiedBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        projectCustomFields:
                          type: array
                          items:
                            type: object
                            properties:
                              label:
                                type: string
                                example: Budget
                              value:
                                type: string
                                example: $5000000
                              dropdownValues:
                                type: array
                              selectedValues:
                                type: array
                              type:
                                type: string
                                example: text
                              _id:
                                type: string
                                example: 1234abcuJzo4k7E1
                              hidden:
                                type: boolean
                                example: false
                                default: true
                        color:
                          type: string
                          example: '#F2F2F2'
                        parentProject:
                          type: string
                          example: parent123
                        phases:
                          type: array
                        resourcePlaceholderIds:
                          type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var projectId = "PROJECT_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "projects/" + projectId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  name: "New project name",
                  description: "A new project description right here!",
                  color: "#F2F2F2",
                  parentProject: "parent123",
                  },
                };

                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      delete:
        summary: Delete project
        description: Delete a project by id
        operationId: projectsprojectid
        parameters:
          - name: projectId
            in: path
            description: ID of the project to update
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        message: 'Project was deleted successfully'
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var projectId = "PROJECT_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "projects/" + projectId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  method: "DELETE",
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/projects:
      get:
        summary: Get projects
        description: Get all projects for a given workspace that the user has access to
        operationId: workspacesworkspaceidprojects
        parameters:
          - name: workspaceId
            in: path
            description: ID of the workspace
            schema:
              type: string
            required: true
          - name: sortBy
            in: query
            description: >-
              Sort results by an Action Object field (for example,
              `sortBy=title+asc`)
            schema:
              type: string
              default: fieldName+asc
          - name: filters
            in: query
            description: >-
              Optional fields to filter by. Filters expect a structure like
              "filters[fieldName]=value". For example, if you want to filter to
              just get deleted projects, you would pass: "filters[deleted]=true".
              Currently, only two fields are supported:  "archived", "deleted".
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "id": "9MRZ6oYzRMJ4eJYnR",
                          "name": "Spring Bee Hive Rebuild",
                          "description": "",
                          "startDate": null,
                          "endDate": null,
                          "accessOption": "private",
                          "sharingType": "me",
                          "members": [],
                          "template": true,
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "modifiedAt": "2017-05-19T02:25:06.190Z",
                          "createdBy": "",
                          "modifiedBy": "",
                          "projectCustomFields": [],
                          "color": "#3390dc",
                          "parentProject": null,
                          "phases": [],
                          "budget": 100000,
                          "resourcePlaceholderIds": []
                        },
                        {
                          "id": "9S8pMXXJwCeExYWzq",
                          "name": "Sell More Honey Campaign",
                          "description": "",
                          "startDate": null,
                          "endDate": null,
                          "accessOption": "private",
                          "sharingType": "me",
                          "members": [],
                          "template": true,
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "modifiedAt": "2017-05-19T02:25:06.190Z",
                          "createdBy": "",
                          "modifiedBy": "",
                          "projectCustomFields": [],
                          "color": "#3390dc",
                          "parentProject": null,
                          "phases": [],
                          "budget": 0,
                          "resourcePlaceholderIds": []
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9MRZ6oYzRMJ4eJYnR
                      name:
                        type: string
                        example: Spring Bee Hive Rebuild
                      description:
                        type: string
                        example: ''
                      startDate: {}
                      endDate: {}
                      accessOption:
                        type: string
                        example: private
                      sharingType:
                        type: string
                        example: me
                      members:
                        type: array
                      template:
                        type: boolean
                        example: true
                        default: true
                      createdAt:
                        type: string
                        example: '2017-05-18T15:26:17.407Z'
                      modifiedAt:
                        type: string
                        example: '2017-05-19T02:25:06.190Z'
                      createdBy:
                        type: string
                        example: ''
                      modifiedBy:
                        type: string
                        example: ''
                      projectCustomFields:
                        type: array
                      color:
                        type: string
                        example: '#3390dc'
                      parentProject: {}
                      phases:
                        type: array
                      budget:
                        type: integer
                        example: 100000
                        default: 0
                      resourcePlaceholderIds:
                        type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/projects";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /projects:
      post:
        summary: Create project
        description: Create a new project
        operationId: projects-1
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - workspace
                  - name
                properties:
                  workspace:
                    type: string
                    description: ID of the workspace for the project to be created in
                  name:
                    type: string
                    description: Name of the project
                  description:
                    type: string
                    description: Project description
                  startDate:
                    type: string
                    description: Start date of the Project
                    format: date
                  endDate:
                    type: string
                    description: End date of the Project
                    format: date
                  sharingType:
                    type: string
                    description: >-
                      Sharing type of the project (one of "everyone", "custom" or
                      "me")
                    default: everyone
                  members:
                    type: array
                    description: >-
                      Array of User IDs to set as members of the project. Only
                      relevant if "sharingType" is set to "custom"
                    default:
                      - '[]'
                    items:
                      type: string
                  teams:
                    type: array
                    description: >-
                      Array of Team IDs to set as members of the project. Only
                      relevant if "sharingType" is set to "custom"
                    items:
                      type: string
                  projectCustomFields:
                    type: array
                    description: Custom fields stored on the project-level
                    items:
                      properties:
                        label:
                          type: string
                          description: Human readable label for the custom field
                        _id:
                          type: string
                          description: Unique string ID
                        type:
                          type: string
                          description: >-
                            Type of the custom field. One of the following is
                            allowed: text, number, date, user, project, select,
                            formula.
                        value:
                          type: string
                          description: Value of the "text" custom field.
                        numberValue:
                          type: integer
                          description: Value of the "number" custom field.
                          format: int32
                        dateValue:
                          type: string
                          description: Value of the "date" custom field. ISO 8601 string.
                        formula:
                          type: string
                          description: Value of the "formula" custom field.
                        dropdownValues:
                          type: array
                          description: >-
                            Value of the "select" custom field. Leave empty for
                            "user" and "project" type.
                          default: []
                          items:
                            type: string
                        selectedValues:
                          type: array
                          description: >-
                            Selected value of the "select", "user" or "project"
                            custom field.
                          default: []
                          items:
                            type: string
                        allowMultiSelect:
                          type: boolean
                          description: >-
                            Whether or not "selectedValues" can hold multiple
                            values
                          default: false
                      required:
                        - label
                      type: object
                  color:
                    type: string
                    description: Optional hex code for project color
                  template:
                    type: boolean
                    description: Pass "true" if you want create project as template
                    default: false
                  copyFrom:
                    type: string
                    description: ID of the project to make a copy from
                  copyActionStatuses:
                    type: boolean
                    description: >-
                      Retaining action statuses when copying project. Works only
                      if 'copyFrom' specified
                    default: false
                  copyAssignees:
                    type: boolean
                    description: >-
                      Retaining action assignees when copying project. Works only
                      if 'copyFrom' specified
                    default: false
                  accessOption:
                    type: string
                    description: Sets the project access to either private or public
                    default: private
                  phases:
                    type: array
                    description: Creates phases for the project
                    items:
                      type: string
                  parentProject:
                    type: string
                    default: Id of parentProject
                  budget:
                    type: integer
                    description: Budget value for the Project
                    default: 0
                    format: int32
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "message": "Project was created successfully",
                        "project": {
                          "id": "123ABC567XYZ",
                          "name": "Mobile app development",
                          "workspace": "workspace_id_123",
                          "description": "A project for tracking our shiny new mobile app.",
                          "startDate": "2019-04-01T00:00:00.000Z",
                          "endDate": "2019-04-01T00:00:00.000Z",
                          "accessOption": "public",
                          "sharingType": "custom",
                          "members": ["123ABC456XYZ"],
                          "template": false,
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "modifiedAt": "2017-05-19T02:25:06.190Z",
                          "createdBy": "1234abcuJzo4k7F9",
                          "modifiedBy": "1234abcuJzo4k7F9",
                          "projectCustomFields": [
                            {
                              "label": "Design link",
                              "value": "https://invision.com/designs",
                              "dropdownValues": [],
                              "selectedValues": [],
                              "type": "text",
                              "_id": "NTuqNWyPBxAFGAk9Y",
                              "hidden": false
                            },
                            {
                              "label": "Project lead",
                              "value": "George Boole",
                              "dropdownValues": [],
                              "selectedValues": [],
                              "type": "text",
                              "_id": "SsjSn54vk9Z5XXCA4",
                              "hidden": false
                            }
                          ],
                          "color": "#F2F2F2",
                          "parentProject": null,
                          "phases": [],
                          "resourcePlaceholderIds": []
                        }
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Project was created successfully
                    project:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 123ABC567XYZ
                        name:
                          type: string
                          example: Mobile app development
                        workspace:
                          type: string
                          example: workspace_id_123
                        description:
                          type: string
                          example: A project for tracking our shiny new mobile app.
                        startDate:
                          type: string
                          example: '2019-04-01T00:00:00.000Z'
                        endDate:
                          type: string
                          example: '2019-04-01T00:00:00.000Z'
                        accessOption:
                          type: string
                          example: public
                        sharingType:
                          type: string
                          example: custom
                        members:
                          type: array
                          items:
                            type: string
                            example: 123ABC456XYZ
                        template:
                          type: boolean
                          example: false
                          default: true
                        createdAt:
                          type: string
                          example: '2017-05-18T15:26:17.407Z'
                        modifiedAt:
                          type: string
                          example: '2017-05-19T02:25:06.190Z'
                        createdBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        modifiedBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        projectCustomFields:
                          type: array
                          items:
                            type: object
                            properties:
                              label:
                                type: string
                                example: Design link
                              value:
                                type: string
                                example: https://invision.com/designs
                              dropdownValues:
                                type: array
                              selectedValues:
                                type: array
                              type:
                                type: string
                                example: text
                              _id:
                                type: string
                                example: NTuqNWyPBxAFGAk9Y
                              hidden:
                                type: boolean
                                example: false
                                default: true
                        color:
                          type: string
                          example: '#F2F2F2'
                        parentProject: {}
                        phases:
                          type: array
                        resourcePlaceholderIds:
                          type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |+
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var teamId = "TEAM_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "projects/";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  name: "Test project name",
                  workspace: workspaceId,
                  description: "Test project description",
                  startDate: new Date(),
                  endDate: new Date(),
                  accessOption: "public",
                  sharingType: "custom",
                  members: [userId],
                  teams: [teamId],
                  projectCustomFields: [
                    { label: "Project lead", value: "George Boole" },
                    { label: "Design link", value: "https://invision.com/designs" }
                  ],
                  color: "#F2F2F2",
                  template: false
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });

          samples-languages:
            - javascript
    /projects/{projectId}/project-custom-field:
      post:
        summary: Create project custom field
        description: Creates a new custom field for a project
        operationId: projectsprojectidproject-custom-field
        parameters:
          - name: projectId
            in: path
            description: ID of the project to add a custom field to
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - label
                properties:
                  label:
                    type: string
                    description: Label for the custom field
                  type:
                    type: string
                    description: >-
                      Type of the custom field. One of the following is allowed:
                      text, number, date, user, project, select, formula.
                    default: text
                  hidden:
                    type: boolean
                    description: >-
                      If true, the value will be hidden in the UI but accessible
                      via API
                    default: false
                  value:
                    type: string
                    description: Value of the "text" custom field.
                  numberValue:
                    type: integer
                    description: Value of the "number" custom field.
                    format: int32
                  dateValue:
                    type: string
                    description: Value of the "date" custom field. ISO 8601 string.
                  formula:
                    type: string
                    description: Value of the "formula" custom field.
                  dropdownValues:
                    type: array
                    description: >-
                      Value of the "select" custom field. Leave empty for "user"
                      and "project" type.
                    items:
                      type: string
                  selectedValues:
                    type: array
                    description: >-
                      Selected value of the "select", "user" or "project" custom
                      field.
                    items:
                      type: string
                  allowMultiSelect:
                    type: boolean
                    description: Whether or not "selectedValues" can hold multiple values
                    default: false
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "project": {
                          "id": "123ABC567XYZ",
                          "name": "Mobile app development",
                          "description": "A project for tracking our shiny new mobile app.",
                          "startDate": "2020-01-04T18:55:02.126Z",
                          "endDate": "2020-01-04T18:55:02.126Z",
                          "accessOption": "public",
                          "sharingType": "everyone",
                          "members": [],
                          "template": false,
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "modifiedAt": "2017-05-19T02:25:06.190Z",
                          "createdBy": "1234abcuJzo4k7F9",
                          "modifiedBy": "1234abcuJzo4k7F9",
                          "projectCustomFields": [
                            {
                              "label": "Budget",
                              "value": "$1000000",
                              "dropdownValues": [],
                              "selectedValues": [],
                              "type": "text",
                              "_id": "1234abcuJzo4k7E2",
                              "hidden": false
                            }
                          ],
                          "color": "#F2F2F2",
                          "parentProject": null,
                          "phases": [],
                          "resourcePlaceholderIds": []
                        }
                      }
                schema:
                  type: object
                  properties:
                    project:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 123ABC567XYZ
                        name:
                          type: string
                          example: Mobile app development
                        description:
                          type: string
                          example: A project for tracking our shiny new mobile app.
                        startDate:
                          type: string
                          example: '2020-01-04T18:55:02.126Z'
                        endDate:
                          type: string
                          example: '2020-01-04T18:55:02.126Z'
                        accessOption:
                          type: string
                          example: public
                        sharingType:
                          type: string
                          example: everyone
                        members:
                          type: array
                        template:
                          type: boolean
                          example: false
                          default: true
                        createdAt:
                          type: string
                          example: '2017-05-18T15:26:17.407Z'
                        modifiedAt:
                          type: string
                          example: '2017-05-19T02:25:06.190Z'
                        createdBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        modifiedBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        projectCustomFields:
                          type: array
                          items:
                            type: object
                            properties:
                              label:
                                type: string
                                example: Budget
                              value:
                                type: string
                                example: $1000000
                              dropdownValues:
                                type: array
                              selectedValues:
                                type: array
                              type:
                                type: string
                                example: text
                              _id:
                                type: string
                                example: 1234abcuJzo4k7E2
                              hidden:
                                type: boolean
                                example: false
                                default: true
                        color:
                          type: string
                          example: '#F2F2F2'
                        parentProject: {}
                        phases:
                          type: array
                        resourcePlaceholderIds:
                          type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var projectId = "PROJECT_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "projects/" + projectId + "/project-custom-field";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  label: "Budget",
                  value: "$1000000"
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /projects/{projectId}/project-custom-field/{customFieldId}:
      put:
        summary: Update project custom field
        description: Updates an existing custom field for a project
        operationId: projectsprojectidproject-custom-fieldcustomfieldid
        parameters:
          - name: projectId
            in: path
            description: ID of the project to add a custom field to
            schema:
              type: string
            required: true
          - name: customFieldId
            in: path
            description: ID of the custom field to update
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  label:
                    type: string
                    description: Label for the custom field
                  value:
                    type: string
                    description: >-
                      Value of the custom field. If custom field type is date, you
                      can pass date string as a value. Please pass date with time
                      in ISO 8601 format. We pass date with time in order to avoid
                      next bug When we send API request with date "2023-06-26"
                      from Chicago, IL (GMT-5). In DB value will be saved as UTC
                      date "2023-06-26T00:00:00.000Z" But when we display it on
                      the client UI we convert UTC date to user local timezone
                      (subtract 5 hours) and get "2023-06-25T19:00:00-0500"
                      (previous day) Exists several ways to fix it. 1. Pass date
                      with timezone "2023-06-26T00:00:00-0500" 2. Pass data in UTC
                      but with time shifted by negative GTM offset
                      "2023-06-26T05:00:00Z" You could shift time more than GTM
                      offset. For example add 12 hours for Chicago instead of 5
                      "2023-06-26T12:00:00Z"
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "project": {
                          "id": "123ABC567XYZ",
                          "name": "Mobile app development",
                          "description": "A project for tracking our shiny new mobile app.",
                          "startDate": "2020-01-04T18:55:02.126Z",
                          "endDate": "2020-01-04T18:55:02.126Z",
                          "accessOption": "public",
                          "sharingType": "everyone",
                          "members": [],
                          "template": false,
                          "createdAt": "2017-05-18T15:26:17.407Z",
                          "modifiedAt": "2017-05-19T02:25:06.190Z",
                          "createdBy": "1234abcuJzo4k7F9",
                          "modifiedBy": "1234abcuJzo4k7F9",
                          "projectCustomFields": [
                            {
                              "label": "Budget",
                              "value": "$5000000",
                              "dropdownValues": [],
                              "selectedValues": [],
                              "type": "text",
                              "_id": "1234abcuJzo4k7E2",
                              "hidden": false
                            }
                          ],
                          "color": "#F2F2F2",
                          "parentProject": null,
                          "phases": [],
                          "resourcePlaceholderIds": []
                        }
                      }
                schema:
                  type: object
                  properties:
                    project:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 123ABC567XYZ
                        name:
                          type: string
                          example: Mobile app development
                        description:
                          type: string
                          example: A project for tracking our shiny new mobile app.
                        startDate:
                          type: string
                          example: '2020-01-04T18:55:02.126Z'
                        endDate:
                          type: string
                          example: '2020-01-04T18:55:02.126Z'
                        accessOption:
                          type: string
                          example: public
                        sharingType:
                          type: string
                          example: everyone
                        members:
                          type: array
                        template:
                          type: boolean
                          example: false
                          default: true
                        createdAt:
                          type: string
                          example: '2017-05-18T15:26:17.407Z'
                        modifiedAt:
                          type: string
                          example: '2017-05-19T02:25:06.190Z'
                        createdBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        modifiedBy:
                          type: string
                          example: 1234abcuJzo4k7F9
                        projectCustomFields:
                          type: array
                          items:
                            type: object
                            properties:
                              label:
                                type: string
                                example: Budget
                              value:
                                type: string
                                example: $5000000
                              dropdownValues:
                                type: array
                              selectedValues:
                                type: array
                              type:
                                type: string
                                example: text
                              _id:
                                type: string
                                example: 1234abcuJzo4k7E2
                              hidden:
                                type: boolean
                                example: false
                                default: true
                        color:
                          type: string
                          example: '#F2F2F2'
                        parentProject: {}
                        phases:
                          type: array
                        resourcePlaceholderIds:
                          type: array
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      // If you are trying to update a custom field label
                      // while a different custom field with that label
                      // and type already exists - an error will be thrown
                      {}
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var projectId = "PROJECT_ID";

                var customFieldId = "CUSTOM_FIELD_ID"

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "projects/" + projectId + "/project-custom-field/"
                + customFieldId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                var data = {
                  label: "Budget",
                  value: "$5000000"
                };


                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /projects/{projectId}/project-status:
      post:
        summary: Set project status
        description: ''
        operationId: set-project-status
        parameters:
          - name: projectId
            in: path
            description: ID of the project
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - statusId
                properties:
                  statusId:
                    type: string
                    description: Id of the existing project status
                  description:
                    type: string
                    description: Project status description
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "_id": "PROJECT_ID",
                        "statusUpdates": {
                          "_id": "Unique status Id in the list",
                          "statusId": "Some status Id",
                          "description": "Status description"
                        }
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: PROJECT_ID
                    statusUpdates:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: Unique status Id in the list
                        statusId:
                          type: string
                          example: Some status Id
                        description:
                          type: string
                          example: Status description
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var projectId = "PROJECT_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "projects/" + projectId + "/project-status";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  statusId: "Some status Id",
                  description: "Status description",
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/project-statuses:
      get:
        summary: Get project statuses
        description: ''
        operationId: get-project-statuses
        parameters:
          - name: workspaceId
            in: path
            description: ID of the workspace
            schema:
              type: string
            required: true
          - name: first
            in: query
            description: Get first n items
            schema:
              type: integer
              format: int32
              default: 200
          - name: last
            in: query
            description: Get last n items
            schema:
              type: integer
              format: int32
              default: 200
          - name: before
            in: query
            description: document ID to query documents before it
            schema:
              type: string
          - name: after
            in: query
            description: document ID to query documents after it
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "edges": [
                              {
                                  "cursor": "Cursor Id",
                                  "node": {
                                      "_id": "Status Id",
                                      "name": "Status name",
                                      "color": "#000000",
                                      "workspace": "WORKSPACE_ID",
                                      "deleted": false,
                                      "modifiedAt": "2022-02-03T07:49:26.732Z",
                                      "modifiedBy": "Some user Id",
                                      "createdAt": "2022-02-03T07:49:26.732Z",
                                      "createdBy": "Some user Id"
                                  }
                              }
                          ],
                          "pageInfo": {
                              "startCursor": "Start cursor Id",
                              "endCursor": "End cursor Id",
                              "totalCount": 1,
                              "hasNextPage": false,
                              "hasPreviousPage": false
                          }
                      }
                schema:
                  type: object
                  properties:
                    edges:
                      type: array
                      items:
                        type: object
                        properties:
                          cursor:
                            type: string
                            example: Cursor Id
                          node:
                            type: object
                            properties:
                              _id:
                                type: string
                                example: Status Id
                              name:
                                type: string
                                example: Status name
                              color:
                                type: string
                                example: '#000000'
                              workspace:
                                type: string
                                example: WORKSPACE_ID
                              deleted:
                                type: boolean
                                example: false
                                default: true
                              modifiedAt:
                                type: string
                                example: '2022-02-03T07:49:26.732Z'
                              modifiedBy:
                                type: string
                                example: Some user Id
                              createdAt:
                                type: string
                                example: '2022-02-03T07:49:26.732Z'
                              createdBy:
                                type: string
                                example: Some user Id
                    pageInfo:
                      type: object
                      properties:
                        startCursor:
                          type: string
                          example: Start cursor Id
                        endCursor:
                          type: string
                          example: End cursor Id
                        totalCount:
                          type: integer
                          example: 1
                          default: 0
                        hasNextPage:
                          type: boolean
                          example: false
                          default: true
                        hasPreviousPage:
                          type: boolean
                          example: false
                          default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var first = 1;

                var endpoint = "workspaces/" + workspaceId + "/project-statuses";

                var qs = "?user_id=" + userId + "&api_key=" + apiKey +
                "&sortBy=title+asc" + "&first=" + first;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /resource-assignments/{resourceAssignmentId}:
      get:
        summary: Get resource assignment
        description: Get a resource by id
        operationId: get-resource
        parameters:
          - name: resourceAssignmentId
            in: path
            description: ID of the resourceAssignment to update
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        resourceAssignment:
                        {
                          "id" : "123ABC567XYZ",
                          "resourceId" : "user1234",
                          "projectId":"project1234",
                          "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                          "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                          "allocationType" : "hoursPerDay",
                          "assignmentType" : "regular",
                          "hoursPerDay" : 8,
                          "fixedHours" : 8,
                          "fixedDisplayType" : "hours",
                          "notes":"This is a note!"
                        }
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      // If resourcing is desabled
                      {
                          "error": 400,
                          "message": "Resourcing is not enabled in current workspace"
                      }
                schema:
                  oneOf:
                    - type: object
                      properties: {}
                    - type: object
                      properties:
                        error:
                          type: integer
                          example: 400
                          default: 0
                        message:
                          type: string
                          example: Resourcing is not enabled in current workspace
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var resourceId = "RESOURCE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "resource-assignments/" + resourceId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      put:
        summary: Update resource assignment
        description: Create a new project
        operationId: update-resource
        parameters:
          - name: resourceAssignmentId
            in: path
            description: ID of the resourceAssignment
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  startDate:
                    type: string
                    description: Start date of the Project
                    format: date
                  endDate:
                    type: string
                    description: End date of the Project
                    format: date
                  projectId:
                    type: string
                    description: ID of the project for the resourcing
                  notes:
                    type: string
                    description: Project description
                  assignmentType:
                    type: string
                    description: Type of resourcing (regular or timeOff)
                    default: regular
                  allocationType:
                    type: string
                    description: Type of hours breakdown (hoursPerDay or fixedHours)
                    default: hoursPerDay
                  hoursPerDay:
                    type: integer
                    description: Hours worked per day
                    format: int32
                  fixedHours:
                    type: integer
                    description: Total hours across entire resourcing
                    format: int32
                  fixedDisplayType:
                    type: string
                    description: Display type (hours or days)
                    default: hours
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "message": "Resource assignment was updated successfully",
                        "resourceAssignment": {
                          "id" : "123456ABCDE",
                          "resourceId" : "user1234",    
                          "projectId":"project1234",
                          "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                          "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                          "allocationType" : "hoursPerDay",
                          "assignmentType" : "regular",
                          "hoursPerDay" : 8,
                          "fixedHours" : 8,
                          "fixedDisplayType" : "hours",
                          "notes":"This is a note!"
                        }
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      // If resourcing is desabled
                      {
                          "error": 400,
                          "message": "Resourcing is not enabled in current workspace"
                      }
                schema:
                  oneOf:
                    - type: object
                      properties: {}
                    - type: object
                      properties:
                        error:
                          type: integer
                          example: 400
                          default: 0
                        message:
                          type: string
                          example: Resourcing is not enabled in current workspace
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var resourceId = "RESOURCE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "resource-assignments/" + resourceId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                    "resourceId" : "user1234",
                    "projectId":"project1234",
                    "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                    "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                    "allocationType" : "hoursPerDay",
                    "assignmentType" : "regular",
                    "hoursPerDay" : 8,
                    "fixedHours" : 8,
                    "fixedDisplayType" : "hours",
                    "notes":"This is a note!"
                  };

                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      delete:
        summary: Delete resource assignment
        description: Create a new project
        operationId: delete-resource
        parameters:
          - name: resourceAssignmentId
            in: path
            description: ID of the user for the resourcing
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        message: 'Resource assignment was deleted successfully'
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      // If resourcing is desabled
                      {
                          "error": 400,
                          "message": "Resourcing is not enabled in current workspace"
                      }
                schema:
                  oneOf:
                    - type: object
                      properties: {}
                    - type: object
                      properties:
                        error:
                          type: integer
                          example: 400
                          default: 0
                        message:
                          type: string
                          example: Resourcing is not enabled in current workspace
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var resourceId = "RESOURCE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "resource-assignments/" + resourceId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  method: "DELETE",
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/resource-assignments:
      get:
        summary: Get resource assignments
        description: ''
        operationId: get-resource-assignments
        parameters:
          - name: workspaceId
            in: path
            description: ID of the workspace
            schema:
              type: string
            required: true
          - name: first
            in: query
            description: Get first n items
            schema:
              type: integer
              format: int32
              default: 200
          - name: last
            in: query
            description: Get last n items
            schema:
              type: integer
              format: int32
              default: 200
          - name: before
            in: query
            description: document ID to query documents before it
            schema:
              type: string
          - name: after
            in: query
            description: document ID to query documents after it
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "edges": [
                              {
                                  "cursor": "Cursor Id",
                                  "node": {
                                      "id": "Some user Id",
                                      "workspace": "WORKSPACE_ID",
                                      "resourceId": "Resource assignment Id",
                                      "projectId": "Project Id",
                                      "startDate": "2022-01-10T00:00:00.000Z",
                                      "endDate": "2022-01-13T00:00:00.000Z",
                                      "allocationType": "fixedHours",
                                      "assignmentType": "regular",
                                      "hoursPerDay": 0.8,
                                      "fixedHours": 2.4,
                                      "fixedDisplayType": "percentages"
                                  }
                              }
                          ],
                          "pageInfo": {
                              "startCursor": "Start cursor Id",
                              "endCursor": "End cursor Id",
                              "totalCount": 5,
                              "hasNextPage": true,
                              "hasPreviousPage": false
                          }
                      }
                schema:
                  type: object
                  properties:
                    edges:
                      type: array
                      items:
                        type: object
                        properties:
                          cursor:
                            type: string
                            example: Cursor Id
                          node:
                            type: object
                            properties:
                              id:
                                type: string
                                example: Some user Id
                              workspace:
                                type: string
                                example: WORKSPACE_ID
                              resourceId:
                                type: string
                                example: Resource assignment Id
                              projectId:
                                type: string
                                example: Project Id
                              startDate:
                                type: string
                                example: '2022-01-10T00:00:00.000Z'
                              endDate:
                                type: string
                                example: '2022-01-13T00:00:00.000Z'
                              allocationType:
                                type: string
                                example: fixedHours
                              assignmentType:
                                type: string
                                example: regular
                              hoursPerDay:
                                type: number
                                example: 0.8
                                default: 0
                              fixedHours:
                                type: number
                                example: 2.4
                                default: 0
                              fixedDisplayType:
                                type: string
                                example: percentages
                    pageInfo:
                      type: object
                      properties:
                        startCursor:
                          type: string
                          example: Start cursor Id
                        endCursor:
                          type: string
                          example: End cursor Id
                        totalCount:
                          type: integer
                          example: 5
                          default: 0
                        hasNextPage:
                          type: boolean
                          example: true
                          default: true
                        hasPreviousPage:
                          type: boolean
                          example: false
                          default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: text
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var first = 1;

                var endpoint = "workspaces/" + workspaceId +
                "/resource-assignments";

                var qs = "?user_id=" + userId + "&api_key=" + apiKey +
                "&sortBy=title+asc" + "&first=" + first;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - text
    /resource-assignments:
      post:
        summary: Create resource assignments
        description: Create a new project
        operationId: create-resource
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - workspace
                  - resourceId
                  - startDate
                  - endDate
                properties:
                  workspace:
                    type: string
                    description: >-
                      ID of the workspace for the resourceAssignment to be created
                      in
                  resourceId:
                    type: string
                    description: ID of the user for the resourceAssignment
                  startDate:
                    type: string
                    description: Start date of the resourceAssignment
                    format: date
                  endDate:
                    type: string
                    description: End date of the resourceAssignment
                    format: date
                  projectId:
                    type: string
                    description: ID of the project for the resourceAssignment
                    default: 'null'
                  notes:
                    type: string
                    description: Project description
                  assignmentType:
                    type: string
                    description: Type of resourceAssignment (regular or timeOff)
                    default: regular
                  allocationType:
                    type: string
                    description: Type of hours breakdown (hoursPerDay or fixedHours)
                    default: hoursPerDay
                  hoursPerDay:
                    type: integer
                    description: Hours worked per day
                    default: 0
                    format: int32
                  fixedHours:
                    type: integer
                    description: Total hours across entire resourceAssignment
                    default: 0
                    format: int32
                  fixedDisplayType:
                    type: string
                    description: Display type (hours or days)
                    default: hours
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "message": "Resource assignment was created successfully",
                        "resource-assignment": {
                          "id" : "123ABC567XYZ",
                          "resourceId" : "user1234",
                          "projectId":"project1234",
                          "workspace":"workspace1234",
                          "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                          "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                          "allocationType" : "hoursPerDay",
                          "assignmentType" : "regular",
                          "hoursPerDay" : 8,
                          "fixedHours" : 8,
                          "notes":"This is a note!"
                        }
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      // If resourcing is desabled
                      {
                          "error": 400,
                          "message": "Resourcing is not enabled in current workspace"
                      }
                schema:
                  oneOf:
                    - type: object
                      properties: {}
                    - type: object
                      properties:
                        error:
                          type: integer
                          example: 400
                          default: 0
                        message:
                          type: string
                          example: Resourcing is not enabled in current workspace
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |+
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "resource-assignments/";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                    "id" : "123ABC567XYZ",
                    "resourceId" : "user1234",
                    "projectId":"project1234",
                    "workspace":"workspace1234",
                    "startDate" : ISODate("2019-01-01006:00:00.000Z"),
                    "endDate" : ISODate("2020-01-01T00:00:00.000Z"),
                    "allocationType" : "hoursPerDay",
                    "assignmentType" : "regular",
                    "hoursPerDay" : 8,
                    "fixedHours" : 8,
                    "notes":"This is a note!"
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });

          samples-languages:
            - javascript
    /workspaces/{workspaceId}/custom-tags:
      get:
        summary: Get custom tags
        description: Get all project or user custom tags
        operationId: workspacesworkspaceidcustom-tags
        parameters:
          - name: type
            in: query
            description: >-
              Type of custom tags you are trying to access. Can be either "user"
              or "project"
            required: true
            schema:
              type: string
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: "[\n  {\n    \"_id\": \"qFR6a524nFARukmvF\",\n    \"workspace\": \"12345aZjDQZndHqs\",\n    \"name\": \"Custom Tag 1\",\n    \"type\": \"user\",\n    \"options\": [\"Option 1\", \"Option 2\"],\n    \"isMulti\": false\n    \"createdBy\": \"12345gfuJzo4k7F9\",\n    \"modifiedBy\": \"12345xgfuJzo4k7F9\",\n    \"createdAt\": \"2018-01-23T22:14:24.862Z\",\n    \"modifiedAt\": \"2018-01-23T22:14:24.862Z\"\n\t},\n  {\n    \"_id\": \"lkdjfwjdoi2342w3\",\n    \"workspace\": \"12345aZjDQZndHqs\",\n    \"name\": \"Custom Tag 2\",\n    \"type\": \"user\",\n    \"options\": [\"Option 1\", \"Option 2\"],\n    \"isMulti\": false\n    \"createdBy\": \"12345gfuJzo4k7F9\",\n    \"modifiedBy\": \"12345xgfuJzo4k7F9\",\n    \"createdAt\": \"2018-01-23T22:14:24.862Z\",\n    \"modifiedAt\": \"2018-01-23T22:14:24.862Z\"\n\t}\n]\n\n"
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var tagType = "user";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/custom-tags";

                var qs = "?user_id=" + userId + "&api_key=" + apiKey + "&type=" +
                tagType;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      post:
        summary: Create custom tag
        description: Create a new custom tag
        operationId: custom-tagscreate
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - type
                properties:
                  name:
                    type: string
                    description: Name of the custom tag
                  type:
                    type: string
                    description: Type of the custom tag, can be "user" or "project"
                  options:
                    type: array
                    description: Array of options that are available for this custom tag
                    default:
                      - '[]'
                    items:
                      type: string
                  isMulti:
                    type: boolean
                    description: Whether or not this custom tag can be multi select
                    default: false
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "name": "Test custom tag",
                        "type": "user",
                        "isMulti": false,
                        "options": ["Option 1", "Option 2"],
                        "createdAt": "2020-01-05T16:41:59.527Z",
                        "createdBy": "12345xgfuJzo4k7F9",
                        "modifiedAt": "2020-01-05T16:41:59.527Z",
                        "modifiedBy": "12345xgfuJzo4k7F9"
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: qFR6a524nFARukmvF
                    name:
                      type: string
                      example: Test custom tag
                    type:
                      type: string
                      example: user
                    isMulti:
                      type: boolean
                      example: false
                      default: true
                    options:
                      type: array
                      items:
                        type: string
                        example: Option 1
                    createdAt:
                      type: string
                      example: '2020-01-05T16:41:59.527Z'
                    createdBy:
                      type: string
                      example: 12345xgfuJzo4k7F9
                    modifiedAt:
                      type: string
                      example: '2020-01-05T16:41:59.527Z'
                    modifiedBy:
                      type: string
                      example: 12345xgfuJzo4k7F9
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/custom-tags";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  workspace: workspaceId,
                  name: "Test custom tag",
                  type: "user",
                  options: ["Option 1", "Option 2"],
                  isMulti: false
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/custom-tags/{customTagId}:
      get:
        summary: Get custom tag
        description: Get a custom tag by id
        operationId: custom-tagscustomtagid-1
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: customTagId
            in: path
            description: Tag ID
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "name": "Test custom tag",
                        "type": "user",
                        "isMulti": false,
                        "options": ["Option 1", "Option 2"],
                        "createdAt": "2020-01-05T16:41:59.527Z",
                        "createdBy": "12345xgfuJzo4k7F9",
                        "modifiedAt": "2020-01-05T16:41:59.527Z",
                        "modifiedBy": "12345xgfuJzo4k7F9"
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: qFR6a524nFARukmvF
                    name:
                      type: string
                      example: Test custom tag
                    type:
                      type: string
                      example: user
                    isMulti:
                      type: boolean
                      example: false
                      default: true
                    options:
                      type: array
                      items:
                        type: string
                        example: Option 1
                    createdAt:
                      type: string
                      example: '2020-01-05T16:41:59.527Z'
                    createdBy:
                      type: string
                      example: 12345xgfuJzo4k7F9
                    modifiedAt:
                      type: string
                      example: '2020-01-05T16:41:59.527Z'
                    modifiedBy:
                      type: string
                      example: 12345xgfuJzo4k7F9
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var customTagId = "CUSTOM_TAG_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/custom-tags/" +
                customTagId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      put:
        summary: Update custom tag
        description: Update an existing custom tag
        operationId: custom-tagscustomtagid
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: customTagId
            in: path
            description: Custom tag ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the custom tag
                  options:
                    type: array
                    description: Array of options that are available for this custom tag
                    items:
                      type: string
                  isMulti:
                    type: boolean
                    description: Whether or not this custom tag can be multi select
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "name": "Updated custom tag",
                        "type": "user",
                        "isMulti": true,
                        "options": ["Option 3", "Option 4"],
                        "createdAt": "2020-01-05T16:41:59.527Z",
                        "createdBy": "12345xgfuJzo4k7F9",
                        "modifiedAt": "2020-01-05T16:41:59.527Z",
                        "modifiedBy": "12345xgfuJzo4k7F9"
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: qFR6a524nFARukmvF
                    name:
                      type: string
                      example: Updated custom tag
                    type:
                      type: string
                      example: user
                    isMulti:
                      type: boolean
                      example: true
                      default: true
                    options:
                      type: array
                      items:
                        type: string
                        example: Option 3
                    createdAt:
                      type: string
                      example: '2020-01-05T16:41:59.527Z'
                    createdBy:
                      type: string
                      example: 12345xgfuJzo4k7F9
                    modifiedAt:
                      type: string
                      example: '2020-01-05T16:41:59.527Z'
                    modifiedBy:
                      type: string
                      example: 12345xgfuJzo4k7F9
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var customTagId = "CUSTOM_TAG_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/custom-tags/" +
                customTagId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                var data = {
                  name: "Updated custom tag",
                  options: ["Option 3", "Option 4"],
                  isMulti: true
                };


                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      delete:
        summary: Delete custom tag
        description: Delete an existing custom tag
        operationId: custom-tagscustomtagid-2
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: customTagId
            in: path
            description: Tag ID
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: '{ "message": "Success" }'
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Success
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var customTagId = "CUSTOM_TAG_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/custom-tags/" +
                customTagId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  method: "DELETE",
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/users/{userId}/user-tags:
      get:
        summary: Get user tags
        description: Get all user tags for a user in a workspace
        operationId: workspacesworkspaceiduser-tagsuserid
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: userId
            in: path
            description: User ID
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "_id": "qFR6a524nFARukmvF",
                          "userId": "123123123",
                          "name": "Custom Tag 1",
                          "options": ["Option 1", "Option 2"],
                          "selectedOptions": ["Option 2"],
                          "isMulti": false
                        },
                        {
                          "_id": "lkdjfwjdoi2342w3",
                          "userId": "123123123",
                          "name": "Custom Tag 2",
                          "options": ["Option 1", "Option 2"],
                          "selectedOptions": ["Option 1"],
                          "isMulti": false
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: qFR6a524nFARukmvF
                      userId:
                        type: string
                        example: '123123123'
                      name:
                        type: string
                        example: Custom Tag 1
                      options:
                        type: array
                        items:
                          type: string
                          example: Option 1
                      selectedOptions:
                        type: array
                        items:
                          type: string
                          example: Option 2
                      isMulti:
                        type: boolean
                        example: false
                        default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/users/" + userId +
                '/user-tags';

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/users/{userId}/user-tags/{userTagId}:
      put:
        summary: Update user tag
        description: Update a specific tag on a user
        operationId: workspacesworkspaceiduser-tagsuserid-1
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
          - name: userId
            in: path
            description: ID of user to update
            schema:
              type: string
            required: true
          - name: userTagId
            in: path
            description: ID of tag to set on the user
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - selectedOptions
                properties:
                  selectedOptions:
                    type: array
                    description: Selected options for this user tag
                    items:
                      type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "name": "Custom Tag 1",
                        "options": ["Option 1", "Option 2"],
                        "selectedOptions": ["Option 1"],
                        "isMulti": false
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: qFR6a524nFARukmvF
                    name:
                      type: string
                      example: Custom Tag 1
                    options:
                      type: array
                      items:
                        type: string
                        example: Option 1
                    selectedOptions:
                      type: array
                      items:
                        type: string
                        example: Option 1
                    isMulti:
                      type: boolean
                      example: false
                      default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var userTagId = "USER_TAG_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint =
                  "workspaces/" + workspaceId + "/users/" + userId + "/user-tags/" + userTagId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  selectedOptions: ["Option 1"]
                };

                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      get:
        summary: Get user tag
        description: Get a single user tag for a given workspace and user
        operationId: user-tagsusertagid
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
          - name: userId
            in: path
            description: ID of the user
            schema:
              type: string
            required: true
          - name: userTagId
            in: path
            description: ID of the user tag
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |+

                      {
                        "_id": "lkdjfwjdoi2342w3",
                        "name": "Custom Tag 1",
                        "options": ["Option 1", "Option 2"],
                        "selectedOptions": ["Option 2"],
                        "isMulti": false
                      }

                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: lkdjfwjdoi2342w3
                    name:
                      type: string
                      example: Custom Tag 1
                    options:
                      type: array
                      items:
                        type: string
                        example: Option 1
                    selectedOptions:
                      type: array
                      items:
                        type: string
                        example: Option 2
                    isMulti:
                      type: boolean
                      example: false
                      default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var userTagId = "USER_TAG_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint =
                  "workspaces/" + workspaceId + "/users/" + userId + "/user-tags/" + userTagId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/projects/{projectId}/project-tags:
      get:
        summary: Get project tags
        description: Get all project tags for a workspace and projectId
        operationId: project-tags-1
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
          - name: projectId
            in: path
            description: Project ID to get tags for
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          "_id": "qFR6a524nFARukmvF",
                          "projectId": "123123123",
                          "name": "Custom Tag 1",
                          "options": ["Option 1", "Option 2"],
                          "selectedOptions": ["Option 1"],
                          "isMulti": false
                        },
                        {
                          "_id": "lkdjfwjdoi2342w3",
                          "projectId": "123123123",
                          "name": "Custom Tag 2",
                          "options": ["Option 1", "Option 2"],
                          "selectedOptions": ["Option 2"],
                          "isMulti": false
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: qFR6a524nFARukmvF
                      projectId:
                        type: string
                        example: '123123123'
                      name:
                        type: string
                        example: Custom Tag 1
                      options:
                        type: array
                        items:
                          type: string
                          example: Option 1
                      selectedOptions:
                        type: array
                        items:
                          type: string
                          example: Option 1
                      isMulti:
                        type: boolean
                        example: false
                        default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var projectId = "PROJECT_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint =
                  "workspaces/" + workspaceId + "/projects/" + projectId + "/project-tags";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/projects/{projectId}/project-tags/{projectTagId}:
      put:
        summary: Update project tag
        description: Update a project tag
        operationId: project-tags-2
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
          - name: projectId
            in: path
            description: Project ID to update the tag value on
            schema:
              type: string
            required: true
          - name: projectTagId
            in: path
            description: Project tag ID
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - selectedOptions
                properties:
                  selectedOptions:
                    type: array
                    description: Selected options for this user tag
                    items:
                      type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "name": "Custom Tag 1",
                        "options": ["Option 1", "Option 2"],
                        "selectedOptions": ["Option 1"],
                        "isMulti": false
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: qFR6a524nFARukmvF
                    name:
                      type: string
                      example: Custom Tag 1
                    options:
                      type: array
                      items:
                        type: string
                        example: Option 1
                    selectedOptions:
                      type: array
                      items:
                        type: string
                        example: Option 1
                    isMulti:
                      type: boolean
                      example: false
                      default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var projectId = "PROJECT_ID";

                var projectTagId = "PROJECT_TAG_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/projects/" +
                projectId + "/project-tags/" + projectTagId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                var data = {
                  selectedOptions: ["Option 1"]
                };


                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      get:
        summary: Get project tag
        description: Get a single project tag for a given workspace and projectId
        operationId: project-tagsprojecttagid
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
          - name: projectId
            in: path
            description: Project ID that you are trying to access project tag for
            schema:
              type: string
            required: true
          - name: projectTagId
            in: path
            description: ID of the project tag
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |+
                      {
                        "_id": "lkdjfwjdoi2342w3",
                        "name": "Custom Tag 1",
                        "options": ["Option 1", "Option 2"],
                        "selectedOptions": ["Option 2"],
                        "isMulti": false
                      }



                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: lkdjfwjdoi2342w3
                    name:
                      type: string
                      example: Custom Tag 1
                    options:
                      type: array
                      items:
                        type: string
                        example: Option 1
                    selectedOptions:
                      type: array
                      items:
                        type: string
                        example: Option 2
                    isMulti:
                      type: boolean
                      example: false
                      default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var projectId = "PROJECT_ID";

                var projectTagId = "PROJECT_TAG_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/projects/" +
                projectId + "/project-tags/" + projectTagId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/role-tags:
      get:
        summary: Get role tags
        description: Get all role tags for a workspace
        operationId: role-tags
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      [
                        {
                          "_id": "qFR6a524nFARukmvF",
                          "workspace": "12345aZjDQZndHqs",
                          "name": "Role Tag 1",
                          "createdBy": "12345gfuJzo4k7F9",
                          "modifiedBy": "12345xgfuJzo4k7F9",
                          "createdAt": "2018-01-23T22:14:24.862Z",
                          "modifiedAt": "2018-01-23T22:14:24.862Z"
                        },
                        {
                          "_id": "qFR6a524n14flfLfF",
                          "workspace": "12345aZjDQZndHqs",
                          "name": "Role Tag 2",
                          "createdBy": "12345gfuJzo4k7F9",
                          "modifiedBy": "12345xgfuJzo4k7F9",
                          "createdAt": "2018-01-23T22:14:24.862Z",
                          "modifiedAt": "2018-01-23T22:14:24.862Z"
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: qFR6a524nFARukmvF
                      workspace:
                        type: string
                        example: 12345aZjDQZndHqs
                      name:
                        type: string
                        example: Role Tag 1
                      createdBy:
                        type: string
                        example: 12345gfuJzo4k7F9
                      modifiedBy:
                        type: string
                        example: 12345xgfuJzo4k7F9
                      createdAt:
                        type: string
                        example: '2018-01-23T22:14:24.862Z'
                      modifiedAt:
                        type: string
                        example: '2018-01-23T22:14:24.862Z'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/role-tags";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      post:
        summary: Create role tag
        description: Create a new role tag
        operationId: role-tags-1
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    description: Name of the role tag
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "Role Tag 1",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      },
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/role-tags";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  name: "Role Tag 1"
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/role-tags/{roleTagId}:
      put:
        summary: Update role tag
        description: Update an existing role tag
        operationId: role-tags-2
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: roleTagId
            in: path
            description: Role Tag ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  name:
                    type: string
                    description: Role Tag name
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "New role tag name",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      },
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var roleTagId = "ROLE_TAG_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/role-tags/" +
                roleTagId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                var data = {
                  name: "New role tag name"
                };


                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      delete:
        summary: Delete role tag
        description: Delete an existing role tag
        operationId: role-tagsroletagid
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: roleTagId
            in: path
            description: Role Tag ID
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        message: "Success"
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var roleTagId = "ROLE_TAG_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/role-tags/" +
                roleTagId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  method: "DELETE",
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/users/{userId}/role-tags:
      get:
        summary: Get user role tag
        description: Get a user's role tag for this workspace
        operationId: usersuseridrole-tags
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
          - name: userId
            in: path
            description: User ID
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |+
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "Role Tag 1",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      }

                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: qFR6a524nFARukmvF
                    workspace:
                      type: string
                      example: 12345aZjDQZndHqs
                    name:
                      type: string
                      example: Role Tag 1
                    createdBy:
                      type: string
                      example: 12345gfuJzo4k7F9
                    modifiedBy:
                      type: string
                      example: 12345xgfuJzo4k7F9
                    createdAt:
                      type: string
                      example: '2018-01-23T22:14:24.862Z'
                    modifiedAt:
                      type: string
                      example: '2018-01-23T22:14:24.862Z'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/users/" + userId +
                '/role-tags';

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/users/{userId}/role-tags/{roleTagId}:
      put:
        summary: Update user role tag
        description: Update user role tag
        operationId: usersuseridrole-tags-1
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: userId
            in: path
            description: User ID
            schema:
              type: string
            required: true
          - name: roleTagId
            in: path
            description: Role tag ID to set on the user
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "Role Tag 1",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      },
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var roleTagId = "ROLE_TAG_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint =
                  "workspaces/" + workspaceId + "/users/" + userId + "/role-tags/" + roleTagId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  method: "PUT",
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/user-settings/{userId}:
      get:
        summary: Get user setting by userId
        description: Get a single user tag for a given workspace and user
        operationId: get-user-setting
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
          - name: userId
            in: path
            description: User ID
            required: true
            schema:
              type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "workspaceId": "12345aZjDQZndHqs",
                        "_id": "qFR6a524nFARukmvF",
                        "userId": "123123123",
                        "firstDayOfWork": "2018-01-23T00:00:00.000Z",
                        "lastDayOfWork": "2019-01-23T00:00:00.000Z",
                        "billRate": 80,
                        "costRate": 70
                      }
                schema:
                  type: object
                  properties:
                    workspaceId:
                      type: string
                      example: 12345aZjDQZndHqs
                    _id:
                      type: string
                      example: qFR6a524nFARukmvF
                    userId:
                      type: string
                      example: '123123123'
                    firstDayOfWork:
                      type: string
                      example: '2018-01-23T00:00:00.000Z'
                    lastDayOfWork:
                      type: string
                      example: '2019-01-23T00:00:00.000Z'
                    billRate:
                      type: integer
                      example: 80
                      default: 0
                    costRate:
                      type: integer
                      example: 70
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/user-settings/" +
                userId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      put:
        summary: Update user setting
        description: Get a single user tag for a given workspace and user
        operationId: update-user-setting
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: userId
            in: path
            description: User ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstDayOfWork:
                    type: string
                    description: First day of work
                  lastDayOfWork:
                    type: string
                    description: Last day of work
                  billRate:
                    type: string
                    description: Bill rate
                  costRate:
                    type: string
                    description: Cost rate
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "workspaceId": "12345aZjDQZndHqs",
                        "_id": "qFR6a524nFARukmvF",
                        "userId": "123123123",
                        "firstDayOfWork": "2018-01-23T00:00:00.000Z",
                        "lastDayOfWork": "2019-01-23T00:00:00.000Z",
                        "billRate": 100,
                        "costRate": 70
                      }
                schema:
                  type: object
                  properties:
                    workspaceId:
                      type: string
                      example: 12345aZjDQZndHqs
                    _id:
                      type: string
                      example: qFR6a524nFARukmvF
                    userId:
                      type: string
                      example: '123123123'
                    firstDayOfWork:
                      type: string
                      example: '2018-01-23T00:00:00.000Z'
                    lastDayOfWork:
                      type: string
                      example: '2019-01-23T00:00:00.000Z'
                    billRate:
                      type: integer
                      example: 100
                      default: 0
                    costRate:
                      type: integer
                      example: 70
                      default: 0
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var workspaceId = "WORKSPACE_ID";

                var apiKey = "API_KEY";

                var baseUrl = "https://app.hive.com/api/v1/";

                var endpoint = "workspaces/" + workspaceId + "/user-settings/" +
                userId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                var data = {
                  billRate: 100
                };


                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/teams:
      get:
        summary: Get Teams
        description: Get all teams for your workspace
        operationId: get-team
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      [
                        {
                          _id: 'u32bac4d5e6f7g8h2',
                          name: 'NYC Office',
                          workspace: '111114d5e6f7g8h1',
                          members: ['232b3c4d5e6f7g8h1']
                        }
                      ]
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/teams";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /teams:
      post:
        summary: Create team
        description: Create new team
        operationId: create-team
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - workspace
                  - members
                  - name
                properties:
                  workspace:
                    type: string
                    description: Workspace id
                  members:
                    type: array
                    description: Array of user ids. Each user should be workspace members.
                    items:
                      type: string
                  name:
                    type: string
                    description: Team name. Not empty string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "_id": "B5hrsBi54cTFCwxXb",
                          "name": "Awesome team",
                          "members": [
                              "PtZNLxgfuJzo4k7F9",
                              "NcL3Tjeh9dtcztoxs"
                          ],
                          "workspace": "yL4w4D8R4QBEQpn2v",
                          "deleted": false,
                          "userId": "ekYxhtbfKPfb4X49r",
                          "createdBy": "ekYxhtbfKPfb4X49r",
                          "createdAt": "2022-06-22T09:58:14.678Z",
                          "modifiedAt": "2022-06-22T09:58:14.677Z",
                          "isExternal": false
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: B5hrsBi54cTFCwxXb
                    name:
                      type: string
                      example: Awesome team
                    members:
                      type: array
                      items:
                        type: string
                        example: PtZNLxgfuJzo4k7F9
                    workspace:
                      type: string
                      example: yL4w4D8R4QBEQpn2v
                    deleted:
                      type: boolean
                      example: false
                      default: true
                    userId:
                      type: string
                      example: ekYxhtbfKPfb4X49r
                    createdBy:
                      type: string
                      example: ekYxhtbfKPfb4X49r
                    createdAt:
                      type: string
                      example: '2022-06-22T09:58:14.678Z'
                    modifiedAt:
                      type: string
                      example: '2022-06-22T09:58:14.677Z'
                    isExternal:
                      type: boolean
                      example: false
                      default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1";
                var endpoint = "/teams";
                var qs = "?user_id=" + userId;
                var url = baseUrl + endpoint + qs;

                var data = {
                  workspace: "yL4w4D8R4QBEQpn2v",
                  members: ["PtZNLxgfuJzo4k7F9", "NcL3Tjeh9dtcztoxs"],
                  name: "Awesome team"
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json",
                  headers: { 'api_key': apiKey }
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /teams/{teamId}:
      put:
        summary: Update Team
        description: >-
          Update existing team (full update which overwrites existing name or
          members fields)
        operationId: update-team
        parameters:
          - name: teamId
            in: path
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - members
                  - name
                properties:
                  members:
                    type: array
                    description: Array of user ids. Each user should be workspace members.
                    items:
                      type: string
                  name:
                    type: string
                    description: Team name. Not empty string.
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "_id": "B5hrsBi54cTFCwxXb",
                          "name": "Awesome team updated name",
                          "members": [
                              "PtZNLxgfuJzo4k7F9"
                          ],
                          "workspace": "yL4w4D8R4QBEQpn2v",
                          "deleted": false,
                          "userId": "ekYxhtbfKPfb4X49r",
                          "createdBy": "ekYxhtbfKPfb4X49r",
                          "createdAt": "2022-06-22T09:58:14.678Z",
                          "modifiedAt": "2022-06-22T09:59:30.672Z",
                          "isExternal": false
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: B5hrsBi54cTFCwxXb
                    name:
                      type: string
                      example: Awesome team updated name
                    members:
                      type: array
                      items:
                        type: string
                        example: PtZNLxgfuJzo4k7F9
                    workspace:
                      type: string
                      example: yL4w4D8R4QBEQpn2v
                    deleted:
                      type: boolean
                      example: false
                      default: true
                    userId:
                      type: string
                      example: ekYxhtbfKPfb4X49r
                    createdBy:
                      type: string
                      example: ekYxhtbfKPfb4X49r
                    createdAt:
                      type: string
                      example: '2022-06-22T09:58:14.678Z'
                    modifiedAt:
                      type: string
                      example: '2022-06-22T09:59:30.672Z'
                    isExternal:
                      type: boolean
                      example: false
                      default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var teamId = "TEAM_ID"
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1";
                var endpoint = "/teams/" + teamId;
                var qs = "?user_id=" + userId;
                var url = baseUrl + endpoint + qs;

                var data = {
                  members: ["PtZNLxgfuJzo4k7F9"],
                  name: "Awesome team updated name"
                };

                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json",
                  headers: { 'api_key': apiKey }
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      delete:
        summary: Delete Team
        description: Update existing team
        operationId: delete-team
        parameters:
          - name: teamId
            in: path
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: ''
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var teamId = "TEAM_ID"
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1";
                var endpoint = "/teams/" + teamId;
                var qs = "?user_id=" + userId;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  method: "DELETE",
                  url: url,
                  contentType: "application/json",
                  headers: { 'api_key': apiKey }
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /teams/{teamId}/add-members:
      post:
        summary: Add members
        description: Add team members
        operationId: add-members
        parameters:
          - name: teamId
            in: path
            description: Team id
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    description: Array of user ids. Each user should be workspace members
                    items:
                      type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "_id": "Nt4hgngmjvb6Rrqcn",
                          "name": "Awesome team",
                          "members": [
                              "ekYxhtbfKPfb4X49r",
                              "PtZNLxgfuJzo4k7F9"
                          ],
                          "workspace": "yL4w4D8R4QBEQpn2v",
                          "deleted": false,
                          "userId": "ekYxhtbfKPfb4X49r",
                          "createdBy": "ekYxhtbfKPfb4X49r",
                          "createdAt": "2022-06-20T09:41:28.204Z",
                          "modifiedAt": "2022-06-22T10:23:04.531Z",
                          "isExternal": false
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: Nt4hgngmjvb6Rrqcn
                    name:
                      type: string
                      example: Awesome team
                    members:
                      type: array
                      items:
                        type: string
                        example: ekYxhtbfKPfb4X49r
                    workspace:
                      type: string
                      example: yL4w4D8R4QBEQpn2v
                    deleted:
                      type: boolean
                      example: false
                      default: true
                    userId:
                      type: string
                      example: ekYxhtbfKPfb4X49r
                    createdBy:
                      type: string
                      example: ekYxhtbfKPfb4X49r
                    createdAt:
                      type: string
                      example: '2022-06-20T09:41:28.204Z'
                    modifiedAt:
                      type: string
                      example: '2022-06-22T10:23:04.531Z'
                    isExternal:
                      type: boolean
                      example: false
                      default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var teamId = "TEAM_ID"
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1";
                var endpoint = "/teams/" + teamId + "/add-members";
                var qs = "?user_id=" + userId;
                var url = baseUrl + endpoint + qs;

                var data = {
                  members: ["PtZNLxgfuJzo4k7F9"]
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json",
                  headers: { 'api_key': apiKey }
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /teams/{teamId}/remove-members:
      post:
        summary: Remove members
        description: Remove team members
        operationId: remove-members
        parameters:
          - name: teamId
            in: path
            description: Team id
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: array
                    description: Array of user ids
                    items:
                      type: string
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "_id": "Nt4hgngmjvb6Rrqcn",
                          "name": "Awesome team",
                          "members": [
                              "ekYxhtbfKPfb4X49r"
                          ],
                          "workspace": "yL4w4D8R4QBEQpn2v",
                          "deleted": false,
                          "userId": "ekYxhtbfKPfb4X49r",
                          "createdBy": "ekYxhtbfKPfb4X49r",
                          "createdAt": "2022-06-20T09:41:28.204Z",
                          "modifiedAt": "2022-06-22T10:28:16.391Z",
                          "isExternal": false
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: Nt4hgngmjvb6Rrqcn
                    name:
                      type: string
                      example: Awesome team
                    members:
                      type: array
                      items:
                        type: string
                        example: ekYxhtbfKPfb4X49r
                    workspace:
                      type: string
                      example: yL4w4D8R4QBEQpn2v
                    deleted:
                      type: boolean
                      example: false
                      default: true
                    userId:
                      type: string
                      example: ekYxhtbfKPfb4X49r
                    createdBy:
                      type: string
                      example: ekYxhtbfKPfb4X49r
                    createdAt:
                      type: string
                      example: '2022-06-20T09:41:28.204Z'
                    modifiedAt:
                      type: string
                      example: '2022-06-22T10:28:16.391Z'
                    isExternal:
                      type: boolean
                      example: false
                      default: true
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var teamId = "TEAM_ID"
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1";
                var endpoint = "/teams/" + teamId + "/remove-members";
                var qs = "?user_id=" + userId;
                var url = baseUrl + endpoint + qs;

                var data = {
                  members: ["PtZNLxgfuJzo4k7F9"]
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json",
                  headers: { 'api_key': apiKey }
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/labels/{labelId}:
      get:
        summary: Get label
        description: Get all role tags for a workspace
        operationId: get-label
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
          - name: labelId
            in: path
            description: The ID of the Label you want to retrieve
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "Label 1",
                        "color":"#00CCCC",
                        "parent":null,
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: qFR6a524nFARukmvF
                    workspace:
                      type: string
                      example: 12345aZjDQZndHqs
                    name:
                      type: string
                      example: Label 1
                    color:
                      type: string
                      example: '#00CCCC'
                    parent: {}
                    createdBy:
                      type: string
                      example: 12345gfuJzo4k7F9
                    modifiedBy:
                      type: string
                      example: 12345xgfuJzo4k7F9
                    createdAt:
                      type: string
                      example: '2018-01-23T22:14:24.862Z'
                    modifiedAt:
                      type: string
                      example: '2018-01-23T22:14:24.862Z'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var labelId = "LABEL_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/labels/" + labelId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      put:
        summary: Update label
        description: Update an existing role tag
        operationId: update-label
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: labelId
            in: path
            description: Label ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Label name
                  parent:
                    type: string
                    description: _id of another label
                  color:
                    type: string
                    description: Hex value of a color
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "New label name",
                        "color":"#00CCCC",
                        "parent":"123abc456",
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      },
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var labelId = "LABEL_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/labels/" + labelId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  "name": "New label name",
                  "color":"#00CCCC",
                  "parent":"123abc456"
                };

                $.ajax({
                  method: "PUT",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      delete:
        summary: Delete label
        description: Delete an existing role tag
        operationId: delete-label
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
          - name: labelId
            in: path
            description: Label ID
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        message: "Success"
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var labelId = "LABEL_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/labels/" + labelId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  method: "DELETE",
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/labels:
      get:
        summary: Get labels
        description: Get all role tags for a workspace
        operationId: get-labels
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            required: true
            schema:
              type: string
          - name: limit
            in: query
            schema:
              type: integer
              format: int32
              default: 200
          - name: skip
            in: query
            schema:
              type: integer
              format: int32
              default: 0
          - name: sortBy
            in: query
            description: Allowed values [name, createdAt]
            schema:
              type: string
              default: name
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      [
                        {
                          "_id": "qFR6a524nFARukmvF",
                          "workspace": "12345aZjDQZndHqs",
                          "name": "Label 1",
                          "color":"#000000",
                          "parent":null,
                          "createdBy": "12345gfuJzo4k7F9",
                          "modifiedBy": "12345xgfuJzo4k7F9",
                          "createdAt": "2018-01-23T22:14:24.862Z",
                          "modifiedAt": "2018-01-23T22:14:24.862Z"
                        },
                        {
                          "_id": "qFR6a524n14flfLfF",
                          "workspace": "12345aZjDQZndHqs",
                          "name": "Label 2",
                          "color":"#333333",
                          "parent":"qFR6a524nFARukmvF",
                          "createdBy": "12345gfuJzo4k7F9",
                          "modifiedBy": "12345xgfuJzo4k7F9",
                          "createdAt": "2018-01-23T22:14:24.862Z",
                          "modifiedAt": "2018-01-23T22:14:24.862Z"
                        }
                      ]
                schema:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: qFR6a524nFARukmvF
                      workspace:
                        type: string
                        example: 12345aZjDQZndHqs
                      name:
                        type: string
                        example: Label 1
                      color:
                        type: string
                        example: '#000000'
                      parent: {}
                      createdBy:
                        type: string
                        example: 12345gfuJzo4k7F9
                      modifiedBy:
                        type: string
                        example: 12345xgfuJzo4k7F9
                      createdAt:
                        type: string
                        example: '2018-01-23T22:14:24.862Z'
                      modifiedAt:
                        type: string
                        example: '2018-01-23T22:14:24.862Z'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/labels";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      post:
        summary: Create label
        description: Create a new role tag
        operationId: create-label
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - color
                properties:
                  name:
                    type: string
                    description: Name of the label
                  parent:
                    type: string
                    description: _id of parent label
                  color:
                    type: string
                    description: hex value of a color
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "qFR6a524nFARukmvF",
                        "workspace": "12345aZjDQZndHqs",
                        "name": "Label 1",
                        "color":"#00CCCC",
                        "parent":null,
                        "createdBy": "12345gfuJzo4k7F9",
                        "modifiedBy": "12345xgfuJzo4k7F9",
                        "createdAt": "2018-01-23T22:14:24.862Z",
                        "modifiedAt": "2018-01-23T22:14:24.862Z"
                      },
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var workspaceId = "WORKSPACE_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "workspaces/" + workspaceId + "/labels";
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                var data = {
                  name: "Label 1",
                  color:"#00CCCC"
                };

                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                  contentType: "application/json"
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/custom-fields/{customFieldId}:
      get:
        summary: Get custom field
        description: ''
        operationId: get-status-copy
        parameters:
          - name: customFieldId
            in: path
            description: Id of the custom field
            schema:
              type: string
            required: true
          - name: workspaceId
            in: path
            description: Workspace ID you wish to see custom fields for
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "customFieldId",
                        "label": "Custom Field Nmae",
                        "type": "text",
                        "workspace": "workspaceId",
                        "deleted": false,
                        "modifiedAt": "2019-10-22T00:00:00.000Z",
                        "modifiedBy": "server",
                        "attachedToObject": "action"
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: customFieldId
                    label:
                      type: string
                      example: Custom Field Nmae
                    type:
                      type: string
                      example: text
                    workspace:
                      type: string
                      example: workspaceId
                    deleted:
                      type: boolean
                      example: false
                      default: true
                    modifiedAt:
                      type: string
                      example: '2019-10-22T00:00:00.000Z'
                    modifiedBy:
                      type: string
                      example: server
                    attachedToObject:
                      type: string
                      example: action
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var customFieldId = "CUSTOM_FIELD_ID";

                var apiKey = "API_KEY";

                var baseUrl =
                "https://app.hive.com/api/v1/workspaces/workspaceId";

                var endpoint = "/custom-fields/" + customFieldId;

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /workspaces/{workspaceId}/custom-fields:
      get:
        summary: Get custom fields
        description: ''
        operationId: get-custom-fields
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID you wish to see custom fields for
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "customFieldId",
                        "label": "Custom Field Nmae",
                        "type": "text",
                        "workspace": "workspaceId",
                        "deleted": false,
                        "modifiedAt": "2019-10-22T00:00:00.000Z",
                        "modifiedBy": "server",
                        "attachedToObject": "action"
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: customFieldId
                    label:
                      type: string
                      example: Custom Field Nmae
                    type:
                      type: string
                      example: text
                    workspace:
                      type: string
                      example: workspaceId
                    deleted:
                      type: boolean
                      example: false
                      default: true
                    modifiedAt:
                      type: string
                      example: '2019-10-22T00:00:00.000Z'
                    modifiedBy:
                      type: string
                      example: server
                    attachedToObject:
                      type: string
                      example: action
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var customFieldId = "CUSTOM_FIELD_ID";

                var apiKey = "API_KEY";

                var baseUrl =
                "https://app.hive.com/api/v1/workspaces/workspaceId/custom-fields";

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + qs;


                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
      post:
        summary: Create custom field
        description: ''
        operationId: create-custom-field
        parameters:
          - name: workspaceId
            in: path
            description: Workspace ID you wish to see custom fields for
            schema:
              type: string
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - label
                properties:
                  label:
                    type: string
                    description: Label for this new custom field
                  type:
                    type: string
                    description: Type of custom field
                    enum:
                      - '"user"'
                      - '"select"'
                      - '"text"'
                      - '"date"'
                      - '"project"'
                      - '"formula"'
                  defaultValue:
                    type: string
                    description: Default value for this custom field
                  dropdownValues:
                    type: array
                    description: Set of dropdown values for "select" custom fields
                    items:
                      type: string
                  allowMultiSelect:
                    type: boolean
                    description: >-
                      Boolean for whether this "select" custom field should allow
                      multi select
                  itemType:
                    type: string
                    description: >-
                      Also referred to as attachedToObject elsewhere in the api.
                      Which object this custom field should be attached to
                    enum:
                      - '"action"'
                      - '"project"'
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |
                      {
                        "_id": "customFieldId",
                        "label": "New Custom Field",
                        "type": "select",
                        "workspace": "workspaceId",
                        "deleted": false,
                        "modifiedAt": "2019-10-22T00:00:00.000Z",
                        "modifiedBy": "server",
                        "attachedToObject": "action"
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: customFieldId
                    label:
                      type: string
                      example: New Custom Field
                    type:
                      type: string
                      example: select
                    workspace:
                      type: string
                      example: workspaceId
                    deleted:
                      type: boolean
                      example: false
                      default: true
                    modifiedAt:
                      type: string
                      example: '2019-10-22T00:00:00.000Z'
                    modifiedBy:
                      type: string
                      example: server
                    attachedToObject:
                      type: string
                      example: action
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: >-
                var userId = "USER_ID";

                var customFieldId = "CUSTOM_FIELD_ID";

                var apiKey = "API_KEY";

                var baseUrl =
                "https://app.hive.com/api/v1/workspaces/workspaceId/custom-fields";

                var qs = "?user_id=" + userId + "&api_key=" + apiKey;

                var url = baseUrl + endpoint + qs;


                var data = {
                  label: "New Custom Field",
                  type: "select",
                  itemType: "action"
                  dropdownValues: ["Option 1", "Option 2"],
                  allowMultiSelect: true
                };


                $.ajax({
                  method: "POST",
                  url: url,
                  data: JSON.stringify(data),
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /project-statuses/{projectStatusId}:
      get:
        summary: Get status
        description: ''
        operationId: get-project-status
        parameters:
          - name: projectStatusId
            in: path
            description: Id of the status
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "_id": "PROJECT_STATUS_ID",
                        "name": "Project status name",
                        "color": "#000000",
                        "workspace": "Some workspaceId",
                        "createdAt": "2019-01-01T00:00:00.000Z",
                        "modifiedAt": "2019-01-01T00:00:00.000Z",
                        "createdBy": "Some user Id",
                        "modifiedBy": "Some user Id",
                        
                      }
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: |-
                var userId = "USER_ID";
                var projectStatusId = "PROJECT_STATUS_ID";
                var apiKey = "API_KEY";
                var baseUrl = "https://app.hive.com/api/v1/";
                var endpoint = "/project-statuses/" + projectStatusId;
                var qs = "?user_id=" + userId + "&api_key=" + apiKey;
                var url = baseUrl + endpoint + qs;

                $.ajax({
                  url: url,
                }).done(function(data) {
                  console.log(data);
                });
          samples-languages:
            - javascript
    /project-statuses:
      post:
        summary: Create status
        description: ''
        operationId: create-status
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - color
                  - workspaceId
                properties:
                  name:
                    type: string
                    description: Status name
                  color:
                    type: string
                    description: Status color
                  workspaceId:
                    type: string
                    description: Status workspace
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                        "_id": "Status Id",
                        "name": "Status name",
                        "color": "#000000"
                      }
                schema:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: Status Id
                    name:
                      type: string
                      example: Status name
                    color:
                      type: string
                      example: '#000000'
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
        x-readme:
          code-samples:
            - language: javascript
              code: "var userId = \"USER_ID\";\nvar apiKey = \"API_KEY\";\nvar baseUrl = \"https://app.hive.com/api/v1/\";\nvar endpoint = \"project-statuses\";\nvar qs = \"?user_id=\" + userId + \"&api_key=\" + apiKey;\nvar url = baseUrl + endpoint + qs;\n\nvar data = {\n\tname: \"Status name\",\n  color: \"#000000\",\n  workspaceId: \"Some workspace Id\"\n};\n\n$.ajax({\n  method: \"POST\",\n  url: url,\n  data: JSON.stringify(data),\n  contentType: \"application/json\"\n}).done(function(data) {\n  console.log(data);\n});"
          samples-languages:
            - javascript
    /webhooks:
      post:
        summary: Create webhook
        description: ''
        operationId: create-webhook
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - workspaceId
                  - trigger
                  - url
                properties:
                  name:
                    type: string
                  workspaceId:
                    type: string
                  projectIds:
                    type: array
                    default:
                      - '[]'
                    items:
                      type: string
                  trigger:
                    type: string
                  fields:
                    type: array
                    default:
                      - '[]'
                    items:
                      type: string
                  url:
                    type: string
                  additionalHeaders:
                    type: array
        responses:
          '201':
            description: '201'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Webhook created",
                          "webhook": {
                              "_id": "v2Y3CNCDyzeHEeorr",
                              "name": "Tell me when Projects are inserted",
                              "workspaceId": "oQkqDmkXzoHwjatAA",
                              "trigger": "projects::i",
                              "url": "https://webhook.site/4bfcb247-7370-4b5f-822a-6b6036db808e",
                              "projectIds": [],
                              "fields": [],
                              "filters": [],
                              "operator": "OR",
                              "ownerId": "9Mbh6keyT33iNN2xp",
                              "deleted": false,
                              "createdAt": "2023-09-27T15:21:14.839Z",
                              "modifiedAt": "2023-09-27T15:21:14.839Z",
                              "createdBy": "9Mbh6keyT33iNN2xp",
                              "modifiedBy": "9Mbh6keyT33iNN2xp"
                          }
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Webhook created
                    webhook:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: v2Y3CNCDyzeHEeorr
                        name:
                          type: string
                          example: Tell me when Projects are inserted
                        workspaceId:
                          type: string
                          example: oQkqDmkXzoHwjatAA
                        trigger:
                          type: string
                          example: projects::i
                        url:
                          type: string
                          example: >-
                            https://webhook.site/4bfcb247-7370-4b5f-822a-6b6036db808e
                        projectIds:
                          type: array
                        fields:
                          type: array
                        filters:
                          type: array
                        operator:
                          type: string
                          example: OR
                        ownerId:
                          type: string
                          example: 9Mbh6keyT33iNN2xp
                        deleted:
                          type: boolean
                          example: false
                          default: true
                        createdAt:
                          type: string
                          example: '2023-09-27T15:21:14.839Z'
                        modifiedAt:
                          type: string
                          example: '2023-09-27T15:21:14.839Z'
                        createdBy:
                          type: string
                          example: 9Mbh6keyT33iNN2xp
                        modifiedBy:
                          type: string
                          example: 9Mbh6keyT33iNN2xp
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
    /webhooks/{webhookId}:
      delete:
        summary: Delete webhook
        description: ''
        operationId: delete-webhook
        parameters:
          - name: webhookId
            in: path
            description: ID of the Webhook to delete
            schema:
              type: string
            required: true
        responses:
          '200':
            description: '200'
            content:
              application/json:
                examples:
                  Result:
                    value: |-
                      {
                          "message": "Webhook deleted"
                      }
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Webhook deleted
          '400':
            description: '400'
            content:
              application/json:
                examples:
                  Result:
                    value: '{}'
                schema:
                  type: object
                  properties: {}
        deprecated: false
  x-readme:
    headers: []
    explorer-enabled: true
    proxy-enabled: true
  x-readme-fauxas: true
  _id: 5e0fa20e44831a002ce2c7b1:6514496933b880000d31c261
konfigCliVersion: 1.38.37
