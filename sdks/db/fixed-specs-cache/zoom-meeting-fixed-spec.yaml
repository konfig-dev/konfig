publishJson:
  company: Zoom
  serviceName: Meeting
  sdkName: zoom-meeting-{language}-sdk
  clientName: ZoomMeeting
  metaDescription: >-
    Zoom is a video conferencing platform that allows users to connect remotely
    for virtual meetings, webinars, online events, and collaborative work
    sessions. With features like screen sharing, virtual backgrounds, and chat
    functionality, Zoom is a popular tool for individuals and businesses to
    communicate and collaborate in real-time.
  homepage: zoom.us/
  categories:
    - productivity
    - collaboration
    - video
    - conferencing
    - webinar
    - communications
rawSpecString: |
  openapi: 3.0.0
  info:
    title: Zoom Meeting API
    description: 'The Zoom Meeting APIs let developers to access information from Zoom. '
    termsOfService: https://zoom.us/docs/en-us/zoom_api_license_and_tou.html
    contact:
      name: Zoom Developers
      url: https://developer.zoom.us/
    version: '2'
  externalDocs:
    description: Find out more about Swagger
    url: https://swagger.io
  servers:
    - url: https://api.zoom.us/v2
  paths:
    /archive_files:
      get:
        tags:
          - Archiving
        summary: List archived files
        description: >-
          Get an account's archived meeting or webinar files. 

           Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA or other compliance requirements. 

           **Prerequisites:** 
          * The [**Meeting and Webinar Archiving**
          feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
          enabled for your account by [Zoom
          Support](https://support.zoom.us/hc/en-us/articles/201362003).


          **Scopes:** `recording:read:admin`


          **Granular Scopes:**
          `archiving:read:list_archived_files:admin`,`archiving:read:list_archived_files`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: listArchivedFiles
        parameters:
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: from
            in: query
            description: >-
              The query start date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
              and the `to` query parameter value cannot exceed seven days.
            required: false
            schema:
              type: string
              format: date-time
              example: '2021-03-11T05:41:36Z'
          - name: to
            in: query
            description: >-
              The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
              and the `from` query parameter value cannot exceed seven days.
            required: false
            schema:
              type: string
              format: date-time
              example: '2021-03-18T05:41:36Z'
          - name: query_date_type
            in: query
            description: |-
              The type of query date.
              * `meeting_start_time` 
              * `archive_complete_time` 

               This value defaults to `meeting_start_time`.
            required: false
            schema:
              type: string
              example: meeting_start_time
              default: meeting_start_time
              enum:
                - meeting_start_time
                - archive_complete_time
          - name: group_id
            in: query
            description: >-
              The group ID. To get a group ID, use the [List
              groups](https://developers.zoom.us/docs/api/rest/reference/scim-api/methods/#operation/groupSCIM2List)
              API.
            required: false
            schema:
              type: string
              example: pvFIYKSDTum9iCDOOtQL4w
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
               Archived files returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    from:
                      type: string
                      description: The queried start date.
                      format: date-time
                      example: '2021-03-12T02:12:27Z'
                    meetings:
                      type: array
                      description: Information about the meeting or webinar.
                      items:
                        required:
                          - account_name
                          - archive_files
                          - complete_time
                          - duration
                          - duration_in_second
                          - host_id
                          - id
                          - is_breakout_room
                          - meeting_type
                          - recording_count
                          - start_time
                          - status
                          - timezone
                          - topic
                          - total_size
                          - type
                          - uuid
                        type: object
                        properties:
                          account_name:
                            type: string
                            description: The user's account name.
                            example: account_01
                          archive_files:
                            type: array
                            description: Information about the archive files.
                            items:
                              required:
                                - download_url
                                - encryption_fingerprint
                                - file_extension
                                - file_size
                                - file_type
                                - id
                                - individual
                                - participant_join_time
                                - participant_leave_time
                                - recording_type
                                - status
                              type: object
                              properties:
                                download_url:
                                  type: string
                                  description: |-
                                    The URL to download the the archive file. 

                                     **OAuth apps** 

                                     If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example, `https://{{base-domain}}/rec/archive/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` 

                                     **Note:** This field does **not** return for [Zoom on-premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field.
                                  example: >-
                                    https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
                                file_extension:
                                  type: string
                                  description: The archived file's extension.
                                  example: JSON
                                file_path:
                                  type: string
                                  description: >-
                                    The file path to the on-premise account
                                    archive file. 

                                     **Note:** The API only returns this field for [Zoom on-premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field.
                                  example: /9090876528/path01/demo.mp4
                                file_size:
                                  type: integer
                                  description: The archived file's size, in bytes.
                                  example: 165743
                                file_type:
                                  type: string
                                  description: >-
                                    The archive file's type. 

                                    * `MP4` - Video file. 

                                    * `M4A` - Audio-only file. 

                                    * `CHAT` - A TXT file containing in-meeting
                                    chat messages. 

                                    * `CC` - A file containing the closed captions
                                    of the recording, in VTT file format. 

                                    *  `CHAT_MESSAGE` - A JSON file encoded in
                                    base64 format containing chat messages. The
                                    file also includes waiting room chats, deleted
                                    messages, meeting emojis and non-verbal
                                    feedback.
                                  example: CHAT
                                  enum:
                                    - MP4
                                    - M4A
                                    - CHAT
                                    - CC
                                    - CHAT_MESSAGE
                                id:
                                  type: string
                                  description: The archive file's unique ID.
                                  example: a2f19f96-9294-4f51-8134-6f0eea108eb2
                                individual:
                                  type: boolean
                                  description: >-
                                    Whether the archive file is an individual
                                    recording file. 

                                    * `true` - An individual recording file. 
                                     * `false` - An entire meeting file.
                                  example: true
                                participant_email:
                                  type: string
                                  description: >-
                                    The individual recording file's participant
                                    email address. This value is returned when the
                                    `individual` value is `true`. If the
                                    participant is **not** part of the host's
                                    account, this returns an empty string value,
                                    with some exceptions. See [Email address
                                    display
                                    rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                                    for details.
                                  format: email
                                  example: jchill@example.com
                                participant_join_time:
                                  type: string
                                  description: >-
                                    The join time for the generated recording
                                    file. If this value is returned when the
                                    individual value is `true`, it is the
                                    recording file's participant join time. When
                                    the individual value is `false`, it returns
                                    the join time for the archiving gateway.
                                  format: date-time
                                  example: '2021-03-12T02:07:27Z'
                                participant_leave_time:
                                  type: string
                                  description: >-
                                    The leave time for the generated recording
                                    file. If this value is returned when the
                                    individual value is `true`, it is the
                                    recording file's participant leave time. When
                                    the individual value is `false`, it returns
                                    the leave time for the archiving gateway.
                                  format: date-time
                                  example: '2021-03-12T02:12:27Z'
                                recording_type:
                                  type: string
                                  description: |-
                                    The archive file's recording type. 
                                    * `shared_screen_with_speaker_view` 
                                    * `audio_only` 
                                    * `chat_file` 
                                    * `closed_caption` 
                                    * `chat_message` 

                                     For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.
                                  example: chat_message
                                  enum:
                                    - shared_screen_with_speaker_view
                                    - audio_only
                                    - chat_file
                                    - closed_caption
                                    - chat_message
                                status:
                                  type: string
                                  description: >-
                                    The archived file's processing status. 

                                    * `completed` - The processing of the file is
                                    complete. 

                                    * `processing` - The file is processing. 

                                    * `failed` - The processing of the file
                                    failed.
                                  example: completed
                                  enum:
                                    - completed
                                    - processing
                                    - failed
                                encryption_fingerprint:
                                  type: string
                                  description: >-
                                    The archived file's encryption fingerprint,
                                    using the SHA256 hash algorithm.
                                  example: >-
                                    abf85f0fe6a4db3cdd8c37e505e1dd18a34d9696170a14b5bc6395677472cf43
                                number_of_messages:
                                  type: integer
                                  description: >-
                                    The number of `TXT` or `JSON` file messages.
                                    This field returns only when the
                                    `file_extension` is `JSON` or `TXT`.
                                  example: 150
                                storage_location:
                                  type: string
                                  description: >-
                                    The region where the file is stored. This
                                    field returns only `Enable Distributed
                                    Compliance Archiving` op feature is enabled.
                                  example: US
                                  enum:
                                    - US
                                    - AU
                                    - BR
                                    - CA
                                    - EU
                                    - IN
                                    - JP
                                    - SG
                                    - CH
                                auto_delete:
                                  type: boolean
                                  description: >-
                                    Whether to auto delete the archived file.


                                    **Prerequisites:** 


                                    Enable the "Tag Archiving Files for Deletion"
                                    feature in OP. Contact [Zoom
                                    Support](https://support.zoom.us/hc/en-us/articles/201362003)
                                    to open.
                                  example: false
                          complete_time:
                            type: string
                            description: The meeting or webinar's archive completion time.
                            format: date-time
                            example: '2021-03-12T02:57:27Z'
                            anyOf:
                              - minLength: 1
                                type: object
                                description: The archive completion time.
                                format: date-time
                                example: '2021-03-12T02:12:27Z'
                              - type: string
                                description: An empty string.
                                enum:
                                  - ''
                          duration:
                            type: integer
                            description: The meeting or webinar's scheduled duration.
                            example: 1
                          duration_in_second:
                            type: integer
                            description: The meeting or webinar's duration, in seconds.
                            example: 1800
                          host_id:
                            type: string
                            description: >-
                              The ID of the user set as the host of the archived
                              meeting or webinar.
                            example: Dhjdfgdkg8w
                          id:
                            type: integer
                            description: >-
                              The meeting or webinar ID, either `meetingId` or
                              `webinarId`.
                            format: int64
                            example: 553068284
                          is_breakout_room:
                            type: boolean
                            description: >-
                              Whether the room is a [breakout
                              room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).
                            example: false
                          meeting_type:
                            type: string
                            description: >-
                              Whether the meeting or webinar is internal or
                              external. 

                              * `internal` - An internal meeting or webinar. 

                              * `external` - An external meeting or webinar. 

                               The `id`, `host_id`, and `topic` PII (Personal Identifiable Information) values in this response are removed when this value is `external`.
                            example: internal
                            enum:
                              - internal
                              - external
                          parent_meeting_id:
                            type: string
                            description: >-
                              The parent meeting's universally unique ID (UUID).
                              Each meeting or webinar instance generates a UUID.
                              If the `is_breakout_room` value is `true`, the API
                              returns this value.
                            example: atsXxhSEQWit9t+U02HXNQ==
                          recording_count:
                            type: integer
                            description: >-
                              The number of archived files returned in the API
                              call response.
                            example: 2
                          start_time:
                            type: string
                            description: The meeting or webinar's start time.
                            format: date-time
                            example: '2021-04-26T05:23:18Z'
                          timezone:
                            type: string
                            description: >-
                              The meeting or webinar's
                              [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
                            example: Asia/Shanghai
                          topic:
                            type: string
                            description: The meeting or webinar topic.
                            example: My Personal Meeting Room
                          total_size:
                            type: integer
                            description: The total size of the archive file, in bytes.
                            example: 364463
                          type:
                            type: integer
                            description: >-
                              The type of archived meeting or webinar. 

                               Meeting recordings use these archive types. 
                              * `1` - Instant meeting. 

                              * `2` - Scheduled meeting. 

                              * `3` - A recurring meeting with no fixed time. 

                              * `4` - A meeting created via PMI (Personal Meeting
                              ID). 

                              * `7` - A [Personal Audio
                              Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
                              (PAC). 

                              * `8` - Recurring meeting with a fixed time. 

                               Webinar recordings use these archive types. 
                              * `5` - A webinar. 

                              * `6` - A recurring webinar without a fixed time. 

                              * `9` - A recurring webinar with a fixed time. 

                               If the recording is **not** from a meeting or webinar: 

                              * `100` - A [breakout
                              room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).
                            example: 1
                            enum:
                              - 1
                              - 2
                              - 3
                              - 4
                              - 5
                              - 6
                              - 7
                              - 8
                              - 9
                              - 100
                          uuid:
                            type: string
                            description: >-
                              The recorded meeting or webinar instance's
                              universally unique identifier (UUID). Each meeting
                              or webinar instance generates a UUID.
                            example: yO3dfhh3t467UkQ==
                          status:
                            type: string
                            description: >-
                              The archive's processing status. 

                              * `completed` - The archive's processing is
                              complete. 

                              * `processing` - The archive is processing.
                            example: completed
                            enum:
                              - completed
                              - processing
                          group_id:
                            type: string
                            description: >-
                              Primary group IDs of participants who belong to your
                              account. Each group ID is separated by a comma.
                            example: pvFIYKSDTum9iCDOOtQL4w,_FsqLyI0RlO6LVPeUVWi8g
                    next_page_token:
                      type: string
                      description: >-
                        Use the next page token to paginate through large result
                        sets. A next page token is returned whenever the set of
                        available results exceeds the current page size. This
                        token's expiration period is 15 minutes.

                         **Note:** if you use `next_page_token` as a parameter, your other request parameters should be changeless to make sure that the large result set is what you want. For example, if your `to` parameter is for a future time, Zoom resets this value to the current time and returns this value in the response body, along with the `next_page_token` value. Use these same `to` and `next_page_token` values in requests for the remaining results set; otherwise you will get an invalid token error.
                      example: At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2
                    page_size:
                      type: integer
                      description: The number of records returned within a single API call.
                      example: 20
                    to:
                      type: string
                      description: The queried end date.
                      format: date-time
                      example: '2021-03-12T02:12:27Z'
                    total_records:
                      type: integer
                      description: The total number of returned meeting records.
                      example: 20
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `2001` <br>
               Account does not exist: {accountId} <br>
        security:
          - openapi_oauth:
              - recording:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - Recording:Read
          x-macro-scopes:
            - recording:read:admin
          x-granular-scopes:
            - archiving:read:list_archived_files:admin
            - archiving:read:list_archived_files
    /archive_files/statistics:
      get:
        tags:
          - Archiving
        summary: Get archived file statistics
        description: >-
          Get statistics about an account's archived meeting or webinar files. 

           Zoom's [archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators) lets account administrators set up an automated mechanism to record, collect, and archive meeting data to a third-party platform of their choice to satisfy FINRA and other compliance requirements. 

           **Prerequisites:** 
          * The [**Meeting and Webinar Archiving**
          feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
          enabled for your account by [Zoom
          Support](https://support.zoom.us/hc/en-us/articles/201362003).


          **Scopes:** `recording:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: getArchivedFileStatistics
        parameters:
          - name: from
            in: query
            description: >-
              The query start date, `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
              and the `to` query parameter value cannot exceed seven days.
            required: false
            schema:
              type: string
              format: date-time
              example: '2021-03-11T05:41:36Z'
          - name: to
            in: query
            description: >-
              The query end date, in `yyyy-MM-dd'T'HH:mm:ssZ` format. This value
              and the `from` query parameter value cannot exceed seven days.
            required: false
            schema:
              type: string
              format: date-time
              example: '2021-03-18T05:41:36Z'
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
               The statistics of Archived files returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    from:
                      type: string
                      description: The queried start date.
                      format: date-time
                      example: '2021-03-18T05:41:36Z'
                    to:
                      type: string
                      description: The queried end date.
                      format: date-time
                      example: '2021-03-18T05:41:36Z'
                    total_records:
                      type: integer
                      description: The total number of returned meeting records.
                      example: 20
                    statistic_by_file_extension:
                      type: object
                      properties:
                        mp4_file_count:
                          type: integer
                          description: The number of mp4 files.
                          example: 1
                        m4a_file_count:
                          type: integer
                          description: The number of m4a files.
                          example: 1
                        txt_file_count:
                          type: integer
                          description: The number of txt files.
                          example: 1
                        json_file_count:
                          type: integer
                          description: The number of json files.
                          example: 1
                        vtt_file_count:
                          type: integer
                          description: The number of vtt files.
                          example: 1
                      description: Statistics about archive files, by file extension.
                    statistic_by_file_status:
                      type: object
                      properties:
                        processing_file_count:
                          type: integer
                          description: The number of processing files.
                          example: 1
                        completed_file_count:
                          type: integer
                          description: The number of completed files.
                          example: 1
                        failed_file_count:
                          type: integer
                          description: The number of failed files.
                          example: 1
                      description: Statistics about archive files, by file status.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `2001` <br>
              Account does not exist: {accountId}

        security:
          - openapi_oauth:
              - recording:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:read:admin
    /archive_files/{fileId}:
      patch:
        tags:
          - Archiving
        summary: Update an archived file's auto-delete status
        description: >-
          Update an archived file's auto-delete status. 

           **Prerequisites:** 
          * [Zoom Support](https://support.zoom.us/hc/en-us/articles/201362003)
          must enable the [**Meeting and Webinar Archiving**
          feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
          for your account.

          * Open the disabling auto-delete feature in OP. Contact [Zoom
          Support](https://support.zoom.us/hc/en-us/articles/201362003) to open.


          **Scopes:** `recording:write`,`recording:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: updateArchivedFile
        parameters:
          - name: fileId
            in: path
            required: false
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - auto_delete
                type: object
                properties:
                  auto_delete:
                    type: boolean
                    description: Whether to auto-delete the archived file.
                    example: true
        responses:
          '204': {}
          '400':
            description: |-
              **HTTP Status Code:** `400` <br>
               Bad Request 

               
          '404':
            description: |-
              **HTTP Status Code:** `404` <br>
               Not Found 

               
        security:
          - openapi_oauth:
              - recording:write
              - recording:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - Recording:Edit
          x-macro-scopes:
            - recording:write
            - recording:write:admin
    /past_meetings/{meetingUUID}/archive_files:
      get:
        tags:
          - Archiving
        summary: Get a meeting's archived files
        description: >-
          Return a specific meeting instance's [archived
          files](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-indicators). 

           **Prerequisites:** 
          * The [**Meeting and Webinar Archiving**
          feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
          enabled for your account by [Zoom
          Support](https://support.zoom.us/hc/en-us/articles/201362003).


          **Scopes:** `recording:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: getArchivedFiles
        parameters:
          - name: meetingUUID
            in: path
            description: >-
              The meeting's universally unique identifier (UUID). Each meeting
              instance generates a UUID. After a meeting ends, a new UUID is
              generated for the next meeting instance.


              If the meeting UUID begins with a `/` character or contains a `//`
              character, you **must** [double
              encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
              the meeting UUID when using the meeting UUID for other API calls.
            required: true
            schema:
              type: string
              example: 4444AAAiAAAAAiAiAiiAii==
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   

               Meeting archived files returned.
            content:
              application/json:
                schema:
                  required:
                    - account_name
                    - archive_files
                    - complete_time
                    - duration
                    - duration_in_second
                    - host_id
                    - id
                    - is_breakout_room
                    - meeting_type
                    - recording_count
                    - start_time
                    - status
                    - timezone
                    - topic
                    - total_size
                    - type
                    - uuid
                  type: object
                  properties:
                    account_name:
                      type: string
                      description: The user's account name.
                      example: account_01
                    archive_files:
                      type: array
                      description: Information about the archive files.
                      items:
                        required:
                          - download_url
                          - encryption_fingerprint
                          - file_extension
                          - file_size
                          - file_type
                          - id
                          - individual
                          - participant_join_time
                          - participant_leave_time
                          - recording_type
                          - status
                        type: object
                        properties:
                          download_url:
                            type: string
                            description: |-
                              The URL to download the the archive file. 

                               **OAuth apps** 

                               If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example: 

                               `https://{{base-domain}}/rec/archive/download/xxx--header 'Authorization: Bearer {{OAuth-access-token}}'` 

                               **Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the `file_path` field.
                            example: >-
                              https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
                          file_extension:
                            type: string
                            description: The archived file's extension.
                            example: JSON
                          file_path:
                            type: string
                            description: >-
                              The file path to the on-premise account archive
                              file. 

                               **Note:** The API only returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the `download_url` field.
                            example: /9090876528/path01/demo.mp4
                          file_size:
                            type: integer
                            description: The archived file's size, in bytes.
                            example: 165743
                          file_type:
                            type: string
                            description: >-
                              The archive file's type. 

                              * `MP4` - Video file. 

                              * `M4A` - Audio-only file. 

                              * `CHAT` - A TXT file containing in-meeting chat
                              messages. 

                              * `CC` - A file containing the closed captions of
                              the recording, in VTT file format. 

                              * `CHAT_MESSAGE` - A JSON file encoded in base64
                              format containing chat messages. The file also
                              includes waiting room chats, deleted messages,
                              meeting emojis and non-verbal feedback.
                            example: CHAT
                            enum:
                              - MP4
                              - M4A
                              - CHAT
                              - CC
                              - CHAT_MESSAGE
                          id:
                            type: string
                            description: The archive file's unique ID.
                            example: a2f19f96-9294-4f51-8134-6f0eea108eb2
                          individual:
                            type: boolean
                            description: >-
                              Whether the archive file is an individual recording
                              file. 

                              * `true` - An individual recording file. 
                               * `false` - An entire meeting file.
                            example: true
                          participant_email:
                            type: string
                            description: >-
                              The individual recording file's participant email
                              address. This value is returned when the
                              `individual` value is `true`. If the participant is
                              **not** part of the host's account, this returns an
                              empty string value, with some exceptions. See [Email
                              address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for details.
                            format: email
                            example: jchill@example.com
                          participant_join_time:
                            type: string
                            description: >-
                              The join time for the generated recording file. If
                              this value is returned when the individual value is
                              true, then it is the recording file's participant
                              join time. When the individual value is false, it
                              returns the join time for the archiving gateway.
                            format: date-time
                            example: '2021-03-12T02:07:27Z'
                          participant_leave_time:
                            type: string
                            description: >-
                              The leave time for the generated recording file. If
                              this value is returned when the individual value is
                              true, then it is the recording file's participant
                              leave time. When the individual value is false, it
                              returns the leave time for the archiving gateway.
                            format: date-time
                            example: '2021-03-12T02:12:27Z'
                          recording_type:
                            type: string
                            description: |-
                              The archive file's recording type. 
                              * `shared_screen_with_speaker_view` 
                              * `audio_only` 
                              * `chat_file` 
                              * `closed_caption` 
                              * `chat_message` 

                               For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.
                            example: chat_message
                            enum:
                              - shared_screen_with_speaker_view
                              - audio_only
                              - chat_file
                              - closed_caption
                              - chat_message
                          status:
                            type: string
                            description: >-
                              The archived file's processing status. 

                              * `completed` - The processing of the file is
                              complete. 

                              * `processing` - The file is processing. 

                              * `failed` - The processing of the file failed.
                            example: completed
                            enum:
                              - completed
                              - processing
                              - failed
                          encryption_fingerprint:
                            type: string
                            description: >-
                              The archived file's encryption fingerprint, using
                              the SHA256 hash algorithm.
                            example: >-
                              abf85f0fe6a4db3cdd8c37e505e1dd18a34d9696170a14b5bc6395677472cf43
                          number_of_messages:
                            type: integer
                            description: >-
                              The number of `TXT` or `JSON` file messages. This
                              field returns only when the `file_extension` is
                              `JSON` or `TXT`
                            example: 150
                          storage_location:
                            type: string
                            description: >-
                              The region where the file is stored. This field
                              returns only `Enable Distributed Compliance
                              Archiving` op feature is enabled.
                            example: US
                            enum:
                              - US
                              - AU
                              - BR
                              - CA
                              - EU
                              - IN
                              - JP
                              - SG
                              - CH
                          auto_delete:
                            type: boolean
                            description: >
                              Whether to auto delete the archived file.

                               **Prerequisites:** 

                              * The "Tag Archiving Files for Deletion" feature
                              must be enabled in OP. Contact [Zoom
                              Support](https://support.zoom.us/hc/en-us/articles/201362003)
                              to open.
                            example: false
                    complete_time:
                      type: string
                      description: The meeting or webinar's archive completion time.
                      format: date-time
                      example: '2021-03-12T02:57:27Z'
                      anyOf:
                        - minLength: 1
                          type: object
                          description: The archive completion time.
                          format: date-time
                          example: '2021-03-12T02:12:27Z'
                        - type: string
                          description: An empty string.
                          enum:
                            - ''
                    duration:
                      type: integer
                      description: The meeting or webinar's scheduled duration.
                      example: 1
                    duration_in_second:
                      type: integer
                      description: The meeting or webinar's duration, in seconds.
                      example: 1800
                    host_id:
                      type: string
                      description: The host's user ID for the archived meeting or webinar.
                      example: Dhjdfgdkg8w
                    id:
                      type: integer
                      description: >-
                        The meeting or webinar ID, either `meetingId` or
                        `webinarId`.
                      format: int64
                      example: 553068284
                    is_breakout_room:
                      type: boolean
                      description: >-
                        Whether the room is a [breakout
                        room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).
                      example: false
                    meeting_type:
                      type: string
                      description: |-
                        Whether the meeting or webinar is internal or external. 
                        * `internal` - An internal meeting or webinar. 
                        * `external` - An external meeting or webinar. 

                         The `id`, `host_id`, and `topic` PII (Personal Identifiable Information) values in this response are removed when this value is `external`.
                      example: internal
                      enum:
                        - internal
                        - external
                    parent_meeting_id:
                      type: string
                      description: >-
                        The parent meeting's universally unique ID (UUID). Each
                        meeting or webinar instance generates a UUID. If the
                        `is_breakout_room` value is `true`, the API returns this
                        value.
                      example: atsXxhSEQWit9t+U02HXNQ==
                    recording_count:
                      type: integer
                      description: >-
                        The number of archived files returned in the API call
                        response.
                      example: 2
                    start_time:
                      type: string
                      description: The meeting or webinar's start time.
                      format: date-time
                      example: '2021-04-26T05:23:18Z'
                    timezone:
                      type: string
                      description: >-
                        The meeting or webinar's
                        [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
                      example: Asia/Shanghai
                    topic:
                      type: string
                      description: The meeting or webinar topic.
                      example: My Personal Meeting Room
                    total_size:
                      type: integer
                      description: The total size of the archive file, in bytes.
                      example: 364463
                    type:
                      type: integer
                      description: >-
                        The type of archived meeting or webinar. 

                         If the recording is of a meeting: 
                        * `1` - Instant meeting. 

                        * `2` - Scheduled meeting. 

                        * `3` - A recurring meeting with no fixed time. 

                        * `4` - A meeting created via PMI (Personal Meeting ID). 

                        * `7` - A [Personal Audio
                        Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
                        (PAC). 

                        * `8` - Recurring meeting with a fixed time. 

                         If the recording is of a webinar: 
                        * `5` - A webinar. 

                        * `6` - A recurring webinar without a fixed time. 

                        * `9` - A recurring webinar with a fixed time. 

                         If the recording is **not** from a meeting or webinar: 

                        * `100` - A [breakout
                        room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).
                      example: 1
                      enum:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                        - 7
                        - 8
                        - 9
                        - 100
                    uuid:
                      type: string
                      description: >-
                        The universally unique identifier (UUID) of the recorded
                        meeting or webinar instance. Each meeting or webinar
                        instance generates a UUID.
                      example: yO3dfhh3t467UkQ==
                    status:
                      type: string
                      description: |-
                        The archive's processing status. 
                        * `completed` - The archive's processing is complete. 
                        * `processing` - The archive is processing.
                      example: completed
                      enum:
                        - completed
                        - processing
                    group_id:
                      type: string
                      description: >-
                        Primary group IDs of participants who belong to your
                        account. Each group ID is separated by a comma.
                      example: pvFIYKSDTum9iCDOOtQL4w,_FsqLyI0RlO6LVPeUVWi8g
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `3001` <br>
               Meeting {meetingUUId} does not exist. <br> <br>
        security:
          - openapi_oauth:
              - recording:read
            openapi_authorization: []
        extensions:
          x-permissions: []
          x-macro-scopes:
            - recording:read
      delete:
        tags:
          - Archiving
        summary: Delete a meeting's archived files
        description: >-
          Use this API to delete all of a meeting's archived files. 

           **Prerequisites:** 
          * The [**Meeting and Webinar Archiving**
          feature](https://support.zoom.us/hc/en-us/articles/4405656451213--Archiving-for-meetings-and-webinars)
          enabled for your account by [Zoom
          Support](https://support.zoom.us/hc/en-us/articles/201362003).


          **Scopes:** `recording:write:admin`,`recording:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: deleteArchivedFiles
        parameters:
          - name: meetingUUID
            in: path
            description: >-
              The meeting's universally unique identifier (UUID). Each meeting
              instance generates a UUID. For example, after a meeting ends, a new
              UUID is generated for the next meeting instance.


              If the meeting UUID begins with a `/` character or contains a `//`
              character, you **must** [double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
              the meeting UUID when using the meeting UUID for other API calls.
            required: true
            schema:
              type: string
              example: 4444AAAiAAAAAiAiAiiAii==
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `200`   
               
               Meeting archived files returned.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>
              Only available for Paid account.

              **Error Code:** `200` <br>
              Not available for this account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `3001` <br>
              Meeting does not exist: {0}

        security:
          - openapi_oauth:
              - recording:write:admin
              - recording:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:write:admin
            - recording:write
    /meetings/{meetingId}/recordings:
      get:
        tags:
          - Cloud Recording
        summary: Get meeting recordings
        description: >-
          Returns all of a meeting's
          [recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_7420acb5-1897-4061-87b4-5b76e99c03b4).

           Use the `download_url` property listed in the response to download the recording files.  To access a passcode-protected cloud recording, send the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer token in the Authorization header. 
           
           Example:  `curl -H 'Authorization: Bearer <ACCESS_TOKEN>' https://{{base-domain}}/rec/archive/download/xyz`  

          **Scopes:** `recording:read`,`phone_recording:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: recordingGet
        parameters:
          - name: meetingId
            in: path
            description: >-
              To get a meeting's cloud recordings, provide the meeting ID or UUID.
              If providing the meeting ID instead of UUID, the response will be
              for the latest meeting instance. 


              To get a webinar's cloud recordings, provide the webinar's ID or
              UUID. If providing the webinar ID instead of UUID, the response will
              be for the latest webinar instance. 


              If a UUID starts with `/` or contains `//` (example:
              `/ajXp112QmuoKj4854875==`), **[double
              encode](https://developers.zoom.us) the UUID** before making an API
              request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
          - name: include_fields
            in: query
            description: >-
              The `download_access_token` value for downloading the meeting's
              recordings.
            required: false
            schema:
              type: string
              example: a2f19f96-9294-4f51-8134-6f0eea108eb2
          - name: ttl
            in: query
            description: >-
              The `download_access_token` Time to Live (TTL) value. This parameter
              is only valid if the `include_fields` query parameter contains the
              `download_access_token` value.
            required: false
            schema:
              maximum: 604800
              minimum: 0
              type: integer
              example: 1
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Recording object returned. 

              **Error Code:** `200`   
               
              You do not have the right permissions.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    account_id:
                      type: string
                      description: The user account's unique identifier.
                      example: Cx3wERazSgup7ZWRHQM8-w
                    duration:
                      type: integer
                      description: The meeting duration.
                      example: 20
                    host_id:
                      type: string
                      description: The ID of the user set as host of meeting.
                      example: _0ctZtY0REqWalTmwvrdIw
                    id:
                      type: integer
                      description: The meeting ID, also known as the meeting number.
                      example: 6840331990
                    recording_count:
                      type: integer
                      description: ' The number of recording files returned in the response of this API call. This includes the `recording_files` and  `participant_audio_files` files.'
                      example: 22
                    start_time:
                      type: string
                      description: The time when the meeting started.
                      format: date-time
                      example: '2021-03-18T05:41:36Z'
                    topic:
                      type: string
                      description: The meeting topic.
                      example: My Personal Meeting
                    total_size:
                      type: integer
                      description: >-
                        The recording's total file size. This includes the
                        `recording_files` and `participant_audio_files` files.
                      format: int64
                      example: 22
                    type:
                      type: string
                      description: >-
                        The recording's associated type of meeting or webinar. 


                        If the recording is of a meeting: 

                        * `1` - Instant meeting. 

                        * `2` - Scheduled meeting. 

                        * `3` - A recurring meeting with no fixed time. 

                        * `4` - A meeting created via PMI (Personal Meeting ID). 

                        * `7` - A [Personal Audio
                        Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
                        (PAC). 

                        * `8` - Recurring meeting with a fixed time. 


                        If the recording is of a webinar: 

                        * `5` - A webinar. 

                        * `6` - A recurring webinar without a fixed time 

                        * `9` - A recurring webinar with a fixed time.


                        If the recording is **not** from a meeting or webinar: 


                        * `99` - A recording uploaded via the
                        [**Recordings**](https://zoom.us/recording) interface on
                        the Zoom Web Portal.
                      example: '1'
                      extensions:
                        x-enum-descriptions:
                          - Instant Meeting
                          - Scheduled Meeting
                          - Recurring Meeting with no fixed time
                          - Meeting created using a Personal Meeting ID
                          - A webinar
                          - Recurring webinar without a fixed time
                          - Personal Audio Conference
                          - Recurring meeting with a fixed time
                          - Recurring webinar with a fixed time
                          - A recording uploaded
                      enum:
                        - '1'
                        - '2'
                        - '3'
                        - '4'
                        - '5'
                        - '6'
                        - '7'
                        - '8'
                        - '9'
                        - '99'
                    uuid:
                      type: string
                      description: >-
                        The unique meeting identifier. Each instance of the
                        meeting has its own UUID.
                      example: BOKXuumlTAGXuqwr3bLyuQ==
                    recording_play_passcode:
                      type: string
                      description: >-
                        The cloud recording's passcode to be used in the URL.
                        Directly splice this recording's passcode in `play_url` or
                        `share_url` with `?pwd=` to access and play. Example:
                        'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'.
                      example: yNYIS408EJygs7rE5vVsJwXIz4-VW7MH
                    recording_files:
                      type: array
                      description: The list of recording file.
                      items:
                        type: object
                        properties:
                          deleted_time:
                            type: string
                            description: >-
                              The time when recording was deleted. Returned in the
                              response only for trash query.
                            example: '2021-03-18T05:41:36Z'
                          download_url:
                            type: string
                            description: >-
                              The URL to download the recording. 


                              If a user has authorized and installed your OAuth
                              app that contains recording scopes, use the
                              `download_access_token` or the the user's [OAuth
                              access
                              token](https://developers.zoom.us/docs/integrations/oauth/)
                              to download the file, and set the `access_token` as
                              a Bearer token in the Authorization header.


                              `curl -H 'Authorization: Bearer <ACCESS_TOKEN>'
                              https://{{base-domain}}/rec/archive/download/xyz`.


                              **Note:** This field does **not** return for [Zoom
                              on-premise
                              accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                              Instead, this API returns the `file_path` field.
                            example: >-
                              https://example.com/rec/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
                          file_path:
                            type: string
                            description: >-
                              The file path to the on-premise account recording. 


                              **Note:** This API only returns this field for [Zoom
                              On-Premise
                              accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                              It does **not** return the `download_url` field.
                            example: /9090876528/path01/demo.mp4
                          file_size:
                            type: number
                            description: The recording file size.
                            example: 7220
                          file_type:
                            type: string
                            description: "The recording file type. \n \n`MP4` - Video file of the recording.  \n `M4A` - Audio-only file of the recording.  \n `TIMELINE` - Timestamp file of the recording in JSON file format. To get a timeline file, the **Add a timestamp to the recording** setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.\n  \n  `TRANSCRIPT` - Transcription file of the recording in VTT format.  \n  `CHAT` - A TXT file containing in-meeting chat messages that were sent during the meeting.  \n `CC` - File containing closed captions of the recording in VTT file format.  \n `CSV` - File containing polling data in csv format.\n\n  \n \n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** these properties.  \n \n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`.  \n `SUMMARY` - Summary file of the recording in JSON file format."
                            example: MP4
                            enum:
                              - MP4
                              - M4A
                              - CHAT
                              - TRANSCRIPT
                              - CSV
                              - TB
                              - CC
                              - CHAT_MESSAGE
                              - SUMMARY
                          file_extension:
                            type: string
                            description: The file extension type of the recording file.
                            example: M4A
                            enum:
                              - MP4
                              - M4A
                              - TXT
                              - VTT
                              - CSV
                              - JSON
                              - JPG
                          id:
                            type: string
                            description: >-
                              The recording file ID. It's included in the response
                              of general query.
                            example: 72576a1f-4e66-4a77-87c4-f13f9808bd76
                          meeting_id:
                            type: string
                            description: 'The meeting ID. '
                            example: L0AGOEPVR9m5WSOOs/d+FQ==
                          play_url:
                            type: string
                            description: The URL that can play a recording file.
                            example: >-
                              https://example.com/rec/play/Qg75t7xZBtEbAkjdlgbfdngBBBB
                          recording_end:
                            type: string
                            description: >-
                              The recording end time. The response is in general
                              query.
                            example: '2021-03-18T05:41:36Z'
                          recording_start:
                            type: string
                            description: The recording start time.
                            example: '2021-03-18T05:41:36Z'
                          recording_type:
                            type: string
                            description: |-
                              The recording type.  
                               `shared_screen_with_speaker_view(CC)`  
                               `shared_screen_with_speaker_view`  
                               `shared_screen_with_gallery_view`  
                               `speaker_view`  
                               `gallery_view`  
                               `shared_screen`  
                               `audio_only`  
                               `audio_transcript`  
                               `chat_file`  
                               `active_speaker`  
                               `poll`  
                               `timeline`  
                               `closed_caption`  
                               `audio_interpretation`  
                               `summary`  
                               `summary_next_steps`  
                               `summary_smart_chapters`  
                               `sign_interpretation`  
                               `production_studio`
                            example: shared_screen_with_speaker_view
                            enum:
                              - shared_screen_with_speaker_view(CC)
                              - shared_screen_with_speaker_view
                              - shared_screen_with_gallery_view
                              - active_speaker
                              - gallery_view
                              - shared_screen
                              - audio_only
                              - audio_transcript
                              - chat_file
                              - poll
                              - host_video
                              - closed_caption
                              - timeline
                              - thumbnail
                              - audio_interpretation
                              - summary
                              - summary_next_steps
                              - summary_smart_chapters
                              - sign_interpretation
                              - production_studio
                          status:
                            type: string
                            description: The recording status.
                            example: completed
                            enum:
                              - completed
                        description: Recording file object.
                    download_access_token:
                      type: string
                      description: >-
                        The JWT token to download the meeting's recording. This
                        response only returns if the `download_access_token` is
                        included in the `include_fields` query parameter.
                      example: >-
                        abJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJodHRwczovL2V2ZW50Lnpvb20udXMiLCJhY2NvdW50SWQiOiJNdDZzdjR1MFRBeVBrd2dzTDJseGlBIiwiYXVkIjoiaHR0cHM6Ly9vYXV0aC56b29tLnVzIiwibWlkIjoieFp3SEc0c3BRU2VuekdZWG16dnpiUT09IiwiZXhwIjoxNjI2MTM5NTA3LCJ1c2VySWQiOiJEWUhyZHBqclMzdWFPZjdkUGtrZzh3In0.a6KetiC6BlkDhf1dP4KBGUE1bb2brMeraoD45yhFx0eSSSTFdkHQnsKmlJQ-hdo9Zy-4vQw3rOxlyoHv583JyZ
                    password:
                      type: string
                      description: The cloud recording's passcode.
                      example: '981651'
                    participant_audio_files:
                      type: array
                      description: >-
                        A list of recording files. The API only returns this
                        response when the **Record a separate audio file of each
                        participant** setting is enabled.
                      items:
                        type: object
                        properties:
                          download_url:
                            type: string
                            description: >-
                              The URL to download the recording. If a user has
                              authorized and installed your OAuth app that
                              contains recording scopes, use the user's [OAuth
                              access
                              token](https://developers.zoom.us/docs/integrations/oauth/)
                              to download the file, and set the `access_token` as
                              a Bearer token in the Authorization header.


                              `curl -H 'Authorization: Bearer <ACCESS_TOKEN>'
                              https://{{base-domain}}/rec/archive/download/xyz` 


                              **Note:** This field does **not** return for [Zoom
                              On-Premise
                              accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                              Instead, this API will return the `file_path` field.
                            example: >-
                              https://example.com/rec/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
                          file_name:
                            type: string
                            description: The recording file's name.
                            example: test.json
                          file_path:
                            type: string
                            description: >-
                              The file path to the on-premise account recording. 


                              **Note:** This API only returns this field for [Zoom
                              on-premise
                              accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                              It does **not** return the `download_url` field.
                            example: /9090876528/path01/demo.mp4
                          file_size:
                            type: number
                            description: The recording file's size, in bytes.
                            example: 65536
                          file_type:
                            type: string
                            description: >-
                              The recording file's format. 


                              * `MP4` - Video file.

                              * `M4A` - Audio-only file.

                              * `TIMELINE` - Timestamp file of the recording, in
                              JSON file format. To get a timeline file, the **Add
                              a timestamp to the recording** setting **must** be
                              enabled in the [recording
                              settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048).
                              The time will display in the host's timezone.

                              * `TRANSCRIPT` - A transcript of the recording, in
                              VTT format.

                              * `CHAT` - A text file containing chat messages sent
                              during the meeting.

                              * `CC` - A file containing the closed captions of
                              the recording, in VTT file format.

                              * `CSV` - A file containing polling data, in CSV
                              format.


                              A recording file object with file the `CC` or
                              `TIMELINE` value **does not** have the `id`,
                              `status`, `file_size`, `recording_type`, and
                              `play_url` properties.
                            example: M4A
                          id:
                            type: string
                            description: >-
                              The recording file's unique ID. This is included in
                              the general query response.
                            example: a2f19f96-9294-4f51-8134-6f0eea108eb2
                          play_url:
                            type: string
                            description: >-
                              The URL where the recording file can be opened and
                              played.
                            example: >-
                              https://example.com/rec/play/Qg75t7xZBtEbAkjdlgbfdngBBBB
                          recording_end:
                            type: string
                            description: >-
                              The recording file's end time. This is included in
                              the general query response.
                            format: date-time
                            example: '2021-06-30T22:14:57Z'
                          recording_start:
                            type: string
                            description: The recording file's start time.
                            format: date-time
                            example: '2021-06-30T22:14:57Z'
                          status:
                            type: string
                            description: The recording file's status.
                            example: completed
                            enum:
                              - completed
                        description: The recording file object.
                  description: >-
                    This field returns a list of recording files for each
                    participant. The API only returns this response when the
                    **Record a separate audio file of each participant** setting
                    is enabled.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `1010` <br>
               User not found on this account: {accountId}. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `1001` <br>
               User "{userId}" does not exist or does not belong to this account. <br>
              **Error Code:** `3301` <br>
               There is no recording for this meeting. <br>
        security:
          - openapi_oauth:
              - recording:read
              - phone_recording:read:admin
            openapi_authorization: []
        extensions:
          x-permissions: []
          x-macro-scopes:
            - recording:read
            - phone_recording:read:admin
      delete:
        tags:
          - Cloud Recording
        summary: Delete meeting recordings
        description: >-
          Delete all recording files of a meeting.  
             
           

          **Prerequisites**:

          * Cloud Recording should be enabled on the user's account.  
           


          **Scopes:** `recording:write:admin`,`recording:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: recordingDelete
        parameters:
          - name: meetingId
            in: path
            description: >-
              To get Cloud Recordings of a meeting, provide the meeting ID or
              meeting UUID. If the meeting ID is provided instead of UUID,the
              response will be for the latest meeting instance. 


              To get Cloud Recordings of a webinar, provide the webinar ID or the
              webinar UUID. If the webinar ID is provided instead of UUID,the
              response will be for the latest webinar instance. 


              If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
              (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
              the UUID before making an API request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
          - name: action
            in: query
            description: |-
              The recording delete actions:  
               `trash` - Move recording to trash.  
               `delete` - Delete recording permanently.
            required: false
            schema:
              type: string
              example: trash
              default: trash
              enum:
                - trash
                - delete
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Recordings deleted. 

              **Error Code:** `200`   
               
              You do not have the right permission.
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              Meeting recording deleted.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}. <br/>


              **Error Code:** `3332` <br>

              This recording was selected for a simulive webinar. You cannot
              delete or trash it.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User {userId} does not exist or does not belong to this account.<br>

              **Error Code:** `3301` <br>
              There is no recording for this meeting.

        security:
          - openapi_oauth:
              - recording:write:admin
              - recording:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:write:admin
            - recording:write
    /meetings/{meetingId}/recordings/analytics_details:
      get:
        tags:
          - Cloud Recording
        summary: Get Meeting Recording's Analytics Details
        description: >-
          Use this API to return a meeting recording's [analytics
          details](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163).
          **Maximum duration: 1 Month**. To access a password-protected cloud
          recording, send the user's [OAuth access
          token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer
          token in the Authorization header. For example, 

           `curl -H &quot;Authorization: Bearer &lt;ACCESS_TOKEN&gt;&quot; https://{{base-domain}}/rec/archive/download/xyz` 

           

          **Scopes:** `recording:read:admin`,`recording:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: analytics_details
        parameters:
          - name: meetingId
            in: path
            description: >-
              To get Cloud Recordings of a meeting, provide the meeting ID or
              meeting UUID. If the meeting ID is provided instead of UUID,the
              response will be for the latest meeting instance. 


              To get Cloud Recordings of a webinar, provide the webinar ID or the
              webinar UUID. If the webinar ID is provided instead of UUID,the
              response will be for the latest webinar instance. 


              If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
              (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
              the UUID before making an API request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: from
            in: query
            description: >-
              The start date for the monthly range to query. The maximum range can
              be a month. If you do not provide this value, this defaults to the
              current date.
            required: false
            schema:
              type: string
              format: date
              example: '2020-06-30'
          - name: to
            in: query
            description: >-
              The end date for the monthly range to query. The maximum range can
              be a month.
            required: false
            schema:
              type: string
              format: date
              example: '2020-07-30'
          - name: type
            in: query
            description: |-
              The type of analytics details: 
              * `by_view` &mdash; by_view. 
              * `by_download` &mdash; by_download.
            required: false
            schema:
              type: string
              example: by_view
              enum:
                - by_view
                - by_download
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Analytics Detail listed successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    from:
                      type: string
                      description: The queried start date
                      format: date
                      example: '2020-07-30'
                    to:
                      type: string
                      description: The queried end date.
                      format: date
                      example: '2020-07-30'
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned within a single API call.
                      example: 30
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 5
                    analytics_details:
                      type: array
                      description: Analytics Detail.
                      items:
                        properties:
                          date_time:
                            type: string
                            description: Explicit time to watch or download the recording.
                            format: date-time
                            example: '2021-07-04T22:14:57Z'
                          name:
                            type: string
                            description: The user's name who watched or downloaded.
                            example: '2'
                          email:
                            type: string
                            description: >-
                              The user's email who downloaded this Meeting
                              Recording.
                            example: '2'
                          duration:
                            type: integer
                            description: >-
                              When the query type is `by_view`, this field
                              indicates the viewing time, unit: seconds
                            example: 60
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>
              User not found on this account: {accountId}

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User "{userId}" does not exist or does not belong to this account.

              **Error Code:** `3301` <br>
              There is no recording for this meeting.

        security:
          - openapi_oauth:
              - recording:read:admin
              - recording:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:read:admin
            - recording:read
    /meetings/{meetingId}/recordings/analytics_summary:
      get:
        tags:
          - Cloud Recording
        summary: Get Meeting Recording's Analytics Summary
        description: >-
          Use this API to return a meeting recording's [analytics
          summary](https://support.zoom.us/hc/en-us/articles/205347605-Managing-cloud-recordings#h_0b665029-ce74-4849-9794-d1aa0320d163).
          **Maximum duration: 1 Month**. To access a password-protected cloud
          recording, send the user's [OAuth access
          token](https://developers.zoom.us/docs/integrations/oauth/) as a Bearer
          token in the Authorization header. For example, 

           `curl -H &quot;Authorization: Bearer &lt;ACCESS_TOKEN&gt;&quot; https://{{base-domain}}/rec/archive/download/xyz` 

           

          **Scopes:** `recording:read:admin`,`recording:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: analytics_summary
        parameters:
          - name: meetingId
            in: path
            description: >-
              To get Cloud Recordings of a meeting, provide the meeting ID or
              meeting UUID. If the meeting ID is provided instead of UUID,the
              response will be for the latest meeting instance. 


              To get Cloud Recordings of a webinar, provide the webinar ID or the
              webinar UUID. If the webinar ID is provided instead of UUID,the
              response will be for the latest webinar instance. 


              If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
              (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
              the UUID before making an API request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
          - name: from
            in: query
            description: >-
              The start date for the monthly range to query. The maximum range can
              be a month. If you do not provide this value, this defaults to the
              current date.
            required: false
            schema:
              type: string
              format: date
              example: '2020-06-30'
          - name: to
            in: query
            description: >-
              The end date for the monthly range to query. The maximum range can
              be a month.
            required: false
            schema:
              type: string
              format: date
              example: '2020-07-30'
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Analytics Summary listed successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    from:
                      type: string
                      description: The queried start date
                      format: date
                      example: '2020-07-30'
                    to:
                      type: string
                      description: The queried end date.
                      format: date
                      example: '2020-07-30'
                    analytics_summary:
                      type: array
                      description: Analytics Summary.
                      items:
                        properties:
                          date:
                            type: string
                            description: Date of viewing or downloading the recording.
                            example: '2022-07-06'
                          views_total_count:
                            type: integer
                            description: >-
                              The number of people who have watched this Meeting
                              Recording.
                            example: 2
                          downloads_total_count:
                            type: integer
                            description: >-
                              The number of people who downloaded this Meeting
                              Recording.
                            example: 2
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>
              User not found on this account: {accountId}

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User "{userId}" does not exist or does not belong to this account.

              **Error Code:** `3301` <br>
              There is no recording for this meeting.

        security:
          - openapi_oauth:
              - recording:read:admin
              - recording:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:read:admin
            - recording:read
    /meetings/{meetingId}/recordings/registrants:
      get:
        tags:
          - Cloud Recording
        summary: List recording registrants
        description: >-
          Use this API to list registrants of a past meeting's [on-demand cloud
          recordings](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-recordings).
          Users must [register](https://developers.zoom.us) to view the
          recordings. 

           

          **Scopes:** `recording:read:admin`,`recording:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: meetingRecordingRegistrants
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: status
            in: query
            description: |-
              Query by the registrant's status: 
              * `pending` &mdash; The registration is pending. 
              * `approved` &mdash; The registrant is approved. 
              * `denied` &mdash; The registration is denied.
            required: false
            schema:
              type: string
              example: pending
              default: approved
              enum:
                - pending
                - approved
                - denied
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: page_number
            in: query
            description: >-
              **Deprecated.** We will no longer support this field in a future
              release. Instead, use the `next_page_token` for pagination.
            required: false
            schema:
              type: integer
              example: 1
              default: 1
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
               Registrants returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: w7587w4eiyfsudgf
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_number:
                      type: integer
                      description: >-
                        **Deprecated.** We will no longer support this field in a
                        future release. Instead, use the `next_page_token` for
                        pagination.
                      example: 1
                      deprecated: true
                      default: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 20
                    registrants:
                      type: array
                      description: Information about the cloud recording registrants.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: The registrant's ID.
                            example: 3Z7sEm0TQQieLav3c3OD_g
                          address:
                            type: string
                            description: The registrant's address.
                            example: 1800 Amphibious Blvd.
                          city:
                            type: string
                            description: The registrant's city.
                            example: Mountain View
                          comments:
                            type: string
                            description: The registrant's questions and comments.
                            example: Looking forward to the discussion.
                          country:
                            type: string
                            description: >-
                              The registrant's two-letter [country
                              code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).
                            example: US
                          custom_questions:
                            type: array
                            description: Information about custom questions.
                            items:
                              type: object
                              properties:
                                title:
                                  type: string
                                  description: The title of the custom question.
                                  example: What do you hope to learn from this?
                                value:
                                  maxLength: 128
                                  type: string
                                  description: >-
                                    The custom question's response value. This has
                                    a limit of 128 characters.
                                  example: >-
                                    Look forward to learning how you come up with
                                    new recipes and what other services you offer.
                              description: Information about custom questions.
                          email:
                            maxLength: 128
                            type: string
                            description: >-
                              The registrant's email address. See [Email address
                              display
                              rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address)
                              for return value details.
                            format: email
                            example: jchill@example.com
                          first_name:
                            maxLength: 64
                            type: string
                            description: The registrant's first name.
                            example: Jill
                          industry:
                            type: string
                            description: The registrant's industry.
                            example: Food
                          job_title:
                            type: string
                            description: The registrant's job title.
                            example: Chef
                          last_name:
                            maxLength: 64
                            type: string
                            description: The registrant's last name.
                            example: Chill
                          no_of_employees:
                            type: string
                            description: |-
                              The registrant's number of employees: 
                              * `1-20` 
                              * `21-50` 
                              * `51-100` 
                              * `101-250` 
                              * `251-500` 
                              * `501-1,000` 
                              * `1,001-5,000` 
                              * `5,001-10,000` 
                              * `More than 10,000`
                            example: 1-20
                            enum:
                              - ''
                              - 1-20
                              - 21-50
                              - 51-100
                              - 101-250
                              - 251-500
                              - 501-1,000
                              - 1,001-5,000
                              - 5,001-10,000
                              - More than 10,000
                          org:
                            type: string
                            description: The registrant's organization.
                            example: Cooking Org
                          phone:
                            type: string
                            description: The registrant's phone number.
                            example: '5550100'
                          purchasing_time_frame:
                            type: string
                            description: |-
                              The registrant's purchasing time frame: 
                              * `Within a month` 
                              * `1-3 months` 
                              * `4-6 months` 
                              * `More than 6 months` 
                              * `No timeframe`
                            example: 1-3 months
                            enum:
                              - ''
                              - Within a month
                              - 1-3 months
                              - 4-6 months
                              - More than 6 months
                              - No timeframe
                          role_in_purchase_process:
                            type: string
                            description: |-
                              The registrant's role in the purchase process: 
                              * `Decision Maker` 
                              * `Evaluator/Recommender` 
                              * `Influencer` 
                              * `Not involved`
                            example: Influencer
                            enum:
                              - ''
                              - Decision Maker
                              - Evaluator/Recommender
                              - Influencer
                              - Not involved
                          state:
                            type: string
                            description: The registrant's state or province.
                            example: CA
                          status:
                            type: string
                            description: >-
                              The registrant's status: 

                              * `approved` &mdash; Registrant is approved. 

                              * `denied` &mdash; Registrant is denied. 

                              * `pending` &mdash; Registrant is waiting for
                              approval.
                            example: approved
                            enum:
                              - approved
                              - denied
                              - pending
                          zip:
                            type: string
                            description: The registrant's ZIP or postal code.
                            example: '94045'
                        required:
                          - email
                          - first_name
                        description: ' Registrant.'
                  description: Information about the meeting cloud recording registrant.
                  title: Meeting Cloud Recording Registration
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - recording:read:admin
              - recording:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:read:admin
            - recording:read
      post:
        tags:
          - Cloud Recording
        summary: Create a recording registrant
        description: >-
          Cloud Recordings of past Zoom Meetings can be made
          [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings).
          Users should be [registered](https://developers.zoom.us) to view these
          recordings.


          Use this API to register a user to gain access to **On-demand Cloud
          Recordings** of a past meeting.  
           


          **Scopes:** `recording:write:admin`,`recording:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingRecordingRegistrantCreate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - email
                  - first_name
                type: object
                properties:
                  address:
                    type: string
                    description: The registrant's address.
                    example: 1800 Amphibious Blvd.
                  city:
                    type: string
                    description: The registrant's city.
                    example: Mountain View
                  comments:
                    type: string
                    description: The registrant's questions and comments.
                    example: Looking forward to the discussion.
                  country:
                    type: string
                    description: >-
                      The registrant's two-letter [country
                      code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).
                    example: US
                  custom_questions:
                    type: array
                    description: Information about custom questions.
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: The title of the custom question.
                          example: What do you hope to learn from this?
                        value:
                          maxLength: 128
                          type: string
                          description: >-
                            The custom question's response value. This has a limit
                            of 128 characters.
                          example: >-
                            Look forward to learning how you come up with new
                            recipes and what other services you offer.
                      description: Information about custom questions.
                  email:
                    maxLength: 128
                    type: string
                    description: >-
                      The registrant's email address. See [Email address display
                      rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address)
                      for return value details.
                    format: email
                    example: jchill@example.com
                  first_name:
                    maxLength: 64
                    type: string
                    description: The registrant's first name.
                    example: Jill
                  industry:
                    type: string
                    description: The registrant's industry.
                    example: Food
                  job_title:
                    type: string
                    description: The registrant's job title.
                    example: Chef
                  last_name:
                    maxLength: 64
                    type: string
                    description: The registrant's last name.
                    example: Chill
                  no_of_employees:
                    type: string
                    description: |-
                      The registrant's number of employees: 
                      * `1-20` 
                      * `21-50` 
                      * `51-100` 
                      * `101-250` 
                      * `251-500` 
                      * `501-1,000` 
                      * `1,001-5,000` 
                      * `5,001-10,000` 
                      * `More than 10,000`
                    example: 1-20
                    enum:
                      - ''
                      - 1-20
                      - 21-50
                      - 51-100
                      - 101-250
                      - 251-500
                      - 501-1,000
                      - 1,001-5,000
                      - 5,001-10,000
                      - More than 10,000
                  org:
                    type: string
                    description: The registrant's organization.
                    example: Cooking Org
                  phone:
                    type: string
                    description: The registrant's phone number.
                    example: '5550100'
                  purchasing_time_frame:
                    type: string
                    description: |-
                      The registrant's purchasing time frame: 
                      * `Within a month` 
                      * `1-3 months` 
                      * `4-6 months` 
                      * `More than 6 months` 
                      * `No timeframe`
                    example: 1-3 months
                    enum:
                      - ''
                      - Within a month
                      - 1-3 months
                      - 4-6 months
                      - More than 6 months
                      - No timeframe
                  role_in_purchase_process:
                    type: string
                    description: |-
                      The registrant's role in the purchase process: 
                      * `Decision Maker` 
                      * `Evaluator/Recommender` 
                      * `Influencer` 
                      * `Not involved`
                    example: Influencer
                    enum:
                      - ''
                      - Decision Maker
                      - Evaluator/Recommender
                      - Influencer
                      - Not involved
                  state:
                    type: string
                    description: The registrant's state or province.
                    example: CA
                  status:
                    type: string
                    description: |-
                      The registrant's status: 
                      * `approved` &mdash; Registrant is approved. 
                      * `denied` &mdash; Registrant is denied. 
                      * `pending` &mdash; Registrant is waiting for approval.
                    example: approved
                    enum:
                      - approved
                      - denied
                      - pending
                  zip:
                    type: string
                    description: The registrant's ZIP or postal code.
                    example: '94045'
                description: ' Registrant.'
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Registration submitted.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: >-
                        [Meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
                        Unique identifier of the meeting in &quot;**long**&quot;
                        format(represented as int64 data type in JSON), also known
                        as the meeting number.
                      format: int64
                      example: 6840331990
                    registrant_id:
                      type: string
                      description: Registrant ID
                      example: 3Z7sEm0TQQieLav3c3OD_g
                    share_url:
                      type: string
                      description: >-
                        Share URL for the on-demand recording. This includes the
                        &ldquo;tk&rdquo; token for the registrant. This is similar
                        to the token that Zoom returns in the URL response to join
                        a registered meeting, for example: `url?tk=xxxx`. Except
                        while the meeting registration token can be used to join
                        the meeting, this token can only be used to watch the
                        recording.
                      example: https://example.com/rec/share/Qg75t7xZBtEbAkjdlgbfdngBBBB
                    topic:
                      type: string
                      description: Meeting Topic
                      example: My Personal Meeting Room
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - recording:write:admin
              - recording:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:write:admin
            - recording:write
    /meetings/{meetingId}/recordings/registrants/questions:
      get:
        tags:
          - Cloud Recording
        summary: Get registration questions
        description: >-
          For
          [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
          meeting recordings, you can include fields with questions that will be
          shown to registrants when they register to view the recording.


          Use this API to retrieve a list of questions that are displayed for
          users to complete when registering to view the recording of a specific
          meeting.  
           


          **Scopes:** `recording:read:admin`,`recording:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: recordingRegistrantsQuestionsGet
        parameters:
          - name: meetingId
            in: path
            description: >-
              To get Cloud Recordings of a meeting, provide the meeting ID or
              meeting UUID. If the meeting ID is provided instead of UUID,the
              response will be for the latest meeting instance. 


              To get Cloud Recordings of a webinar, provide the webinar ID or the
              webinar UUID. If the webinar ID is provided instead of UUID,the
              response will be for the latest webinar instance. 


              If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
              (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
              the UUID before making an API request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Recording Registrant Question object returned.
            content:
              application/json:
                schema:
                  title: Recording Registrant Questions
                  type: object
                  properties:
                    custom_questions:
                      type: array
                      description: Array of Registrant Custom Questions
                      items:
                        type: object
                        properties:
                          answers:
                            type: array
                            description: >-
                              Answer choices for the question. Can not be used
                              with Short answer type.
                            items:
                              type: string
                              example: 'Yes'
                          required:
                            type: boolean
                            description: >-
                              State whether registrants are required to answer
                              custom questions or not.
                            example: true
                          title:
                            type: string
                            description: Title of the question.
                            example: What's your name?
                          type:
                            type: string
                            description: The type of registration question and answers.
                            example: short
                            extensions:
                              x-enum-descriptions:
                                - Short Answer
                                - Single Answer
                                - Multiple Answer
                            enum:
                              - short
                              - single
                              - multiple
                    questions:
                      type: array
                      description: Array of Registrant Questions
                      items:
                        type: object
                        properties:
                          field_name:
                            type: string
                            description: Field name.
                            example: last_name
                            extensions:
                              x-enum-descriptions:
                                - Last Name
                                - Address
                                - City
                                - Country/Region
                                - Zip/Postal Code
                                - State/Province
                                - Phone
                                - Industry
                                - Organization
                                - Job Title
                                - Purchasing Time Frame
                                - Role in Purchase Process
                                - Number of Employees
                                - Questions & Comments
                            enum:
                              - last_name
                              - address
                              - city
                              - country
                              - zip
                              - state
                              - phone
                              - industry
                              - org
                              - job_title
                              - purchasing_time_frame
                              - role_in_purchase_process
                              - no_of_employees
                              - comments
                          required:
                            type: boolean
                            description: >-
                              State whether the field is required to be answered
                              by the registrant or not.
                            example: true
                  description: Recording Registrant Questions
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - recording:read:admin
              - recording:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:read:admin
            - recording:read
      patch:
        tags:
          - Cloud Recording
        summary: Update registration questions
        description: >-
          For
          [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
          meeting recordings, you can include fields with questions that will be
          shown to registrants when they register to view the recording.


          Use this API to update registration questions that are to be answered by
          users while registering to view a recording.  
           


          **Scopes:** `recording:write:admin`,`recording:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: recordingRegistrantQuestionUpdate
        parameters:
          - name: meetingId
            in: path
            description: >-
              To get Cloud Recordings of a meeting, provide the meeting ID or
              meeting UUID. If the meeting ID is provided instead of UUID,the
              response will be for the latest meeting instance. 


              To get Cloud Recordings of a webinar, provide the webinar ID or the
              webinar UUID. If the webinar ID is provided instead of UUID,the
              response will be for the latest webinar instance. 


              If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
              (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
              the UUID before making an API request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
        requestBody:
          description: Recording Registrant Questions
          content:
            application/json:
              schema:
                title: Recording Registrant Questions
                type: object
                properties:
                  custom_questions:
                    type: array
                    description: Array of Registrant Custom Questions
                    items:
                      type: object
                      properties:
                        answers:
                          type: array
                          description: >-
                            Answer choices for the question. Can not be used with
                            Short answer type.
                          items:
                            type: string
                            example: 'Yes'
                        required:
                          type: boolean
                          description: >-
                            State whether registrants are required to answer
                            custom questions or not.
                          example: true
                        title:
                          type: string
                          description: Title of the question.
                          example: What's your name?
                        type:
                          type: string
                          description: The type of registration question and answers.
                          example: short
                          extensions:
                            x-enum-descriptions:
                              - Short Answer
                              - Single Answer
                              - Multiple Answer
                          enum:
                            - short
                            - single
                            - multiple
                  questions:
                    type: array
                    description: Array of Registrant Questions
                    items:
                      type: object
                      properties:
                        field_name:
                          type: string
                          description: Field name.
                          example: last_name
                          extensions:
                            x-enum-descriptions:
                              - Last Name
                              - Address
                              - City
                              - Country/Region
                              - Zip/Postal Code
                              - State/Province
                              - Phone
                              - Industry
                              - Organization
                              - Job Title
                              - Purchasing Time Frame
                              - Role in Purchase Process
                              - Number of Employees
                              - Questions & Comments
                          enum:
                            - last_name
                            - address
                            - city
                            - country
                            - zip
                            - state
                            - phone
                            - industry
                            - org
                            - job_title
                            - purchasing_time_frame
                            - role_in_purchase_process
                            - no_of_employees
                            - comments
                        required:
                          type: boolean
                          description: >-
                            State whether the field is required to be answered by
                            the registrant or not.
                          example: true
                description: Recording Registrant Questions
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `200`  
               
              Recording Registrant Questions Updated
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - recording:write:admin
              - recording:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:write:admin
            - recording:write
    /meetings/{meetingId}/recordings/registrants/status:
      put:
        tags:
          - Cloud Recording
        summary: Update registrant's status
        description: >-
          A registrant can either be approved or denied from viewing the
          [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings)
          recording. 

          Use this API to update a registrant's status.




          **Scopes:** `recording:write:admin`,`recording:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: meetingRecordingRegistrantStatus
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - action
                type: object
                properties:
                  action:
                    type: string
                    example: approve
                    extensions:
                      x-enum-descriptions:
                        - Approve registrant
                        - Deny registrant
                    enum:
                      - approve
                      - deny
                  registrants:
                    maximum: 30
                    type: array
                    description: List of registrants
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 3Z7sEm0TQQieLav3c3OD_g
                description: Registrant Status
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Registrant status updated.
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - recording:write:admin
              - recording:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:write:admin
            - recording:write
    /meetings/{meetingId}/recordings/settings:
      get:
        tags:
          - Cloud Recording
        summary: Get meeting recording settings
        description: >-
          Retrieves settings applied to a meeting's [Cloud
          Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).  
             
           


          **Scopes:** `recording:read:admin`,`recording:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: recordingSettingUpdate
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting ID enables you to get cloud recording of a:

              - Meeting, provide the meeting ID or meeting UUID. If the meeting ID
              is provided instead of UUID,the response will be for the latest
              meeting instance. 


              - Webinar, provide the webinar ID or the webinar UUID. If the
              webinar ID is provided instead of UUID,the response will be for the
              latest webinar instance. 


              If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
              (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **double
              encode** the UUID before making an API request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
        responses:
          '200':
            description: '**HTTP Status Code:** `200`    Meeting recording settings returned.'
            content:
              application/json:
                schema:
                  title: Recording settings
                  type: object
                  properties:
                    approval_type:
                      type: integer
                      description: >-
                        The approval type for the registration.  
                         
                        `0`- Automatically approve the registration when a user
                        registers.  
                         
                        `1` - Manually approve or deny the registration of a
                        user.  
                         
                        `2` - No registration required to view the recording.
                      example: 0
                      extensions:
                        x-enum-descriptions:
                          - >-
                            Registrants can watch the recording directly after
                            registration
                          - >-
                            Registrants receive emails then watch the recording
                            after you approve the registration
                          - Disabled
                      enum:
                        - 0
                        - 1
                        - 2
                    authentication_domains:
                      type: string
                      description: The domains for authentication.
                      example: test.com
                    authentication_option:
                      type: string
                      description: The options for authentication .
                      example: auth_option
                    on_demand:
                      type: boolean
                      description: >-
                        This field determines whether registration is required to
                        view the recording.
                      example: false
                    password:
                      maxLength: 10
                      minLength: 8
                      type: string
                      description: >-
                        This field enables passcode protection for the recording
                        by setting a passcode. The passcode must have a minimum of
                        **eight** characters with a mix of numbers, letters and
                        special characters.  
                           
                         
                        **Note:** If the account owner or the admin has set
                        minimum passcode strength requirements for recordings
                        through Account Settings, the passcode value provided here
                        must meet those requirements.   
                           
                         If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API.
                      example: '975238724'
                    recording_authentication:
                      type: boolean
                      description: THis field only authenticated users can view.
                      example: true
                    send_email_to_host:
                      type: boolean
                      description: >-
                        This field enables you to send an email to the host when
                        someone registers to view the recording. This applies for
                        On-demand recordings only.
                      example: false
                    share_recording:
                      type: string
                      description: This field determines how the meeting recording is shared.
                      example: publicly
                      extensions:
                        x-enum-descriptions:
                          - Publicly
                          - Internally(account members only)
                          - None
                      enum:
                        - publicly
                        - internally
                        - none
                    show_social_share_buttons:
                      type: boolean
                      description: >-
                        This field shows social share buttons on registration
                        page. This applies for On-demand recordings only.
                      example: true
                    topic:
                      type: string
                      description: The name of the recording.
                      example: My Personal Meeting Room
                    viewer_download:
                      type: boolean
                      description: >-
                        This field determines whether a viewer can download the
                        recording file or not.
                      example: true
          '404':
            description: |-
              **HTTP Status Code:** `404` <br>
               Not Found 

               
        security:
          - openapi_oauth:
              - recording:read:admin
              - recording:read
            openapi_authorization: []
        extensions:
          x-permissions: []
          x-macro-scopes:
            - recording:read:admin
            - recording:read
      patch:
        tags:
          - Cloud Recording
        summary: Update meeting recording settings
        description: >-
          Updates settings applied to a meeting's [Cloud
          Recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).      


          **Scopes:** `recording:write`,`recording:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: recordingSettingsUpdate
        parameters:
          - name: meetingId
            in: path
            description: >-
              To get Cloud Recordings of a meeting, provide the meeting ID or
              meeting UUID. If the meeting ID is provided instead of UUID,the
              response will be for the latest meeting instance. 


              To get Cloud Recordings of a webinar, provide the webinar ID or the
              webinar UUID. If the webinar ID is provided instead of UUID,the
              response will be for the latest webinar instance. 


              If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
              (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **double
              encode** the UUID before making an API request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
        requestBody:
          content:
            application/json:
              schema:
                title: Recording settings
                type: object
                properties:
                  approval_type:
                    type: integer
                    description: >-
                      The approval type for the registration.  
                       
                      `0`- Automatically approve the registration when a user
                      registers.  
                       
                      `1` - Manually approve or deny the registration of a user.  
                       
                      `2` - No registration required to view the recording.
                    example: 0
                    extensions:
                      x-enum-descriptions:
                        - >-
                          Registrants can watch the recording directly after
                          registration
                        - >-
                          Registrants will receive emails then watch the recording
                          after you approve the registration
                        - Disabled
                    enum:
                      - 0
                      - 1
                      - 2
                  authentication_domains:
                    type: string
                    description: The authentication domains.
                    example: test.com
                  authentication_option:
                    type: string
                    description: The authentication options.
                    example: auth_option
                  on_demand:
                    type: boolean
                    description: >-
                      This field determines whether the registration is required
                      to view the recording.
                    example: false
                  password:
                    maxLength: 10
                    minLength: 8
                    type: string
                    description: >-
                      This field enables passcode protection for the recording by
                      setting a passcode. 


                      The passcode must have a minimum of **eight** characters
                      with a mix of numbers, letters and special characters.  
                         
                       
                      **Note:** If the account owner or the admin has set minimum
                      passcode strength requirements for recordings through
                      Account Settings, the passcode value provided here must meet
                      those requirements.   
                         
                       If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](/api-reference/zoom-api/ma#operation/accountSettings) API.
                    example: '975238724'
                  recording_authentication:
                    type: boolean
                    description: This field indicates that only authenticated users can view.
                    example: true
                  send_email_to_host:
                    type: boolean
                    description: >-
                      This field sends an email to host when someone registers to
                      view the recording. This setting applies for On-demand
                      recordings only.
                    example: false
                  share_recording:
                    type: string
                    description: This field determines how the meeting recording is shared.
                    example: publicly
                    extensions:
                      x-enum-descriptions:
                        - Publicly
                        - Internally(account members only)
                        - None
                    enum:
                      - publicly
                      - internally
                      - none
                  show_social_share_buttons:
                    type: boolean
                    description: >-
                      This field shows social share buttons on registration page.
                      This setting applies for On-demand recordings only.
                    example: true
                  topic:
                    type: string
                    description: The name of the recording.
                    example: My Personal Meeting Room
                  viewer_download:
                    type: boolean
                    description: >-
                      This field determines whether a viewer can download the
                      recording file or not.
                    example: true
        responses:
          '204':
            description: '**HTTP Status Code:** `204`    Meeting recording setting''s updated.'
          '404':
            description: |-
              **HTTP Status Code:** `404` <br>
               Not Found 

               
        security:
          - openapi_oauth:
              - recording:write
              - recording:write:admin
            openapi_authorization: []
        extensions:
          x-permissions: []
          x-macro-scopes:
            - recording:write
            - recording:write:admin
    /meetings/{meetingId}/recordings/{recordingId}:
      delete:
        tags:
          - Cloud Recording
        summary: Delete a meeting recording file
        description: >-
          Delete a specific recording file from a meeting.&lt;p
          style=&quot;background-color:#e1f5fe; color:#01579b;
          padding:8px&quot;&gt; &lt;b&gt;Note:&lt;/b&gt; To use this API, you must
          enable the &lt;b&gt;The host can delete cloud recordings&lt;/b&gt;
          setting. You can find this setting in the &lt;b&gt;Recording&lt;/b&gt;
          tab of the &lt;b&gt;Settings&lt;/b&gt; interface in the [Zoom web
          portal](https://zoom.us/).&lt;/p&gt;




          **Scopes:** `recording:write:admin`,`recording:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: recordingDeleteOne
        parameters:
          - name: meetingId
            in: path
            description: >-
              To get Cloud Recordings of a meeting, provide the meeting ID or
              meeting UUID. If the meeting ID is provided instead of UUID,the
              response will be for the latest meeting instance. 


              To get Cloud Recordings of a webinar, provide the webinar ID or the
              webinar UUID. If the webinar ID is provided instead of UUID,the
              response will be for the latest webinar instance. 


              If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
              (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
              the UUID before making an API request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
          - name: recordingId
            in: path
            description: The recording ID.
            required: true
            schema:
              type: string
              example: a2f19f96-9294-4f51-8134-6f0eea108eb2
          - name: action
            in: query
            description: |-
              The recording delete actions:  
               `trash` - Move recording to trash.  
               `delete` - Delete recording permanently.
            required: false
            schema:
              type: string
              example: trash
              default: trash
              enum:
                - trash
                - delete
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Recording deleted. 

              **Error Code:** `200`  
               
              You do not have the right permissions.
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              Meeting recording file deleted.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}.<br>


              **Error Code:** `3303` <br>

              You can not delete an uncompleted meeting. <br/>


              **Error Code:** `3332` <br>

              This recording was selected for a simulive webinar. You cannot
              delete or trash it. <br>


              **Error Code:** `3332` <br>

              Unable to delete this file because this recording is being used for
              Zoom IQ for Sales.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User {userId} does not exist or does not belong to this account.<br>

              **Error Code:** `3301` <br>
              There is no recording for this meeting.

        security:
          - openapi_oauth:
              - recording:write:admin
              - recording:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:write:admin
            - recording:write
    /meetings/{meetingId}/recordings/{recordingId}/status:
      put:
        tags:
          - Cloud Recording
        summary: Recover a single recording
        description: >-
          Zoom allows users to recover recordings from trash for up to 30 days
          from the deletion date. Use this API to recover a single recording file
          from the meeting.  
           


          **Scopes:** `recording:write:admin`,`recording:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: recordingStatusUpdateOne
        parameters:
          - name: meetingId
            in: path
            description: >-
              To get Cloud Recordings of a meeting, provide the meeting ID or
              meeting UUID. If the meeting ID is provided instead of UUID,the
              response will be for the latest meeting instance. 


              To get Cloud Recordings of a webinar, provide the webinar ID or the
              webinar UUID. If the webinar ID is provided instead of UUID,the
              response will be for the latest webinar instance. 


              If a UUID starts with &quot;/&quot; or contains &quot;//&quot;
              (example: &quot;/ajXp112QmuoKj4854875==&quot;), you must **[double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)**
              the UUID before making an API request. 
            required: true
            schema:
              type: string
              example: atsXxhSEQWit9t+U02HXNQ==
          - name: recordingId
            in: path
            description: The recording ID.
            required: true
            schema:
              type: string
              example: a2f19f96-9294-4f51-8134-6f0eea108eb2
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: string
                    example: recover
                    extensions:
                      x-enum-descriptions:
                        - recover meeting recording
                    enum:
                      - recover
        responses:
          '204':
            description: |+
              **HTTP Status Code:** `204`   
                Meeting recording recovered.

          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}.


              **Error Code:** `3309` <br>

              Not enough cloud storage available. Either purchase additional
              storage or delete cloud recordings to free up storage.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User {userId} does not exist or does not belong to this account.<br>

              **Error Code:** `3301` <br>
              There is no recording for this meeting.

        security:
          - openapi_oauth:
              - recording:write:admin
              - recording:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:write:admin
            - recording:write
    /meetings/{meetingUUID}/recordings/status:
      put:
        tags:
          - Cloud Recording
        summary: Recover meeting recordings
        description: >-
          Zoom allows users to recover recordings from trash for up to 30 days
          from the deletion date. Use this API to recover all deleted [Cloud
          Recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)
          of a specific meeting.  
             
           
          **Prerequisites**:  
           
          * A Pro user with Cloud Recording enabled.


          **Scopes:** `recording:write:admin`,`recording:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: recordingStatusUpdate
        parameters:
          - name: meetingUUID
            in: path
            description: >-
              The meeting's universally unique identifier (UUID). Each meeting
              instance generates a UUID. For example, after a meeting ends, a new
              UUID is generated for the next meeting instance.


              If the meeting UUID begins with a `/` character or contains a `//`
              character, you **must** [double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
              the meeting UUID when using the meeting UUID for other API calls.
            required: true
            schema:
              type: string
              example: 4444AAAiAAAAAiAiAiiAii==
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: string
                    example: recover
                    extensions:
                      x-enum-descriptions:
                        - recover meeting recording
                    enum:
                      - recover
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Recordings recovered. 

              **Error Code:** `200`  
               
              You do not have the right permissions.
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              Deleted recordings of the meeting recovered.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}.


              **Error Code:** `3309` <br>

              Not enough cloud storage available. Either purchase additional
              storage or delete cloud recordings to free up storage.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User does not exist: {userId}.<br>

              **Error Code:** `3301` <br>
              There is no recording for this meeting.

        security:
          - openapi_oauth:
              - recording:write:admin
              - recording:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - recording:write:admin
            - recording:write
    /users/{userId}/recordings:
      get:
        tags:
          - Cloud Recording
        summary: List all recordings
        description: >-
          Lists all [cloud
          recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording)
          for a user.  


          For user-level apps, pass the [`me`
          value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
          instead of the `userId` parameter.  To access a user's passcode
          protected cloud recording, send the user's [OAuth access
          token](https://developers.zoom.us/docs/integrations/oauth/) as a bearer
          token in the authorization header.  


          Example:  `curl -H "Authorization: Bearer <ACCESS_TOKEN>"
          https://{{base-domain}}/rec/archive/download/xyz`  


          **Prerequisites:**  

          * Must have a Pro or a higher plan.  

          * Must enable Cloud Recording on the user's account.


          **Scopes:** `recording:read:admin`,`recording:read`


          **Granular Scopes:**
          `user:read:list_recordings`,`user:read:list_recordings:admin`,`user:read:list_recordings:master`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: recordingsList
        parameters:
          - name: userId
            in: path
            description: >-
              The user's ID or email address. For user-level apps, pass the `me`
              value.
            required: true
            schema:
              type: string
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              The next page token paginates through a large set of results. A next
              page token returns whenever the set of available results exceeds the
              current page size. The expiration period for this token is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: mc
            in: query
            description: >-
              The query metadata of the recording if using an on-premise meeting
              connector for the meeting.
            required: false
            schema:
              type: string
              example: 'false'
              default: 'false'
          - name: trash
            in: query
            description: >-
              The query trash.

              * `true` - List recordings from trash.  

              * `false` - Do not list recordings from the trash.  


              The default value is `false`. If you set it to `true`, you can use
              the `trash_type` property to indicate the type of Cloud recording
              that you need to retrieve. 
            required: false
            schema:
              type: boolean
              example: false
              default: false
          - name: from
            in: query
            description: >-
              The start date in 'yyyy-mm-dd' UTC format for the date range where
              you would like to retrieve recordings. The maximum range can be a
              month. If no value is provided for this field, the default will be
              current date. 


              For example, if you make the API request on June 30, 2020, without
              providing the `from` and `to` parameters, by default the value of
              'from' field will be `2020-06-30` and the value of the 'to' field
              will be `2020-07-01`. 


              **Note**: The `trash` files cannot be filtered by date range and
              thus, the `from` and `to` fields should not be used for trash files.
            required: false
            schema:
              type: string
              format: date
              example: '2020-06-30'
          - name: to
            in: query
            description: 'The end date in ''yyyy-mm-dd'' ''yyyy-mm-dd'' UTC format. '
            required: false
            schema:
              type: string
              format: date
              example: '2020-06-30'
          - name: trash_type
            in: query
            description: |-
              The type of cloud recording to retrieve from the trash. 
               
               *   `meeting_recordings`: List all meeting recordings from the trash.  
               *  `recording_file`: List all individual recording files from the trash. 
            required: false
            schema:
              type: string
              example: meeting_recordings
              default: meeting_recordings
          - name: meeting_id
            in: query
            description: The meeting ID.
            required: false
            schema:
              type: integer
              example: 6840331990
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              List of recording objects returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    from:
                      type: string
                      description: The start date.
                      format: date
                      example: '2022-01-01'
                    to:
                      type: string
                      description: The end date.
                      format: date
                      example: '2022-04-01'
                    next_page_token:
                      type: string
                      description: >-
                        The next page token paginates through a large set of
                        results. A next page token returns whenever the set of
                        available results exceeds the current page size. The
                        expiration period for this token is 15 minutes.
                      example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned within a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: The number of all records available across pages.
                      example: 1
                    meetings:
                      type: array
                      description: List of recordings.
                      items:
                        type: object
                        properties:
                          account_id:
                            type: string
                            description: Unique Identifier of the user account.
                            example: Cx3wERazSgup7ZWRHQM8-w
                          duration:
                            type: integer
                            description: Meeting duration.
                            example: 20
                          host_id:
                            type: string
                            description: ID of the user set as host of meeting.
                            example: _0ctZtY0REqWalTmwvrdIw
                          id:
                            type: integer
                            description: Meeting ID - also known as the meeting number.
                            example: 6840331990
                          recording_count:
                            type: integer
                            description: >-
                              Number of recording files returned in the response
                              of this API call. This includes the
                              `recording_files` and  `participant_audio_files`
                              files.
                            example: 22
                          start_time:
                            type: string
                            description: The time when the meeting started.
                            format: date-time
                            example: '2021-03-18T05:41:36Z'
                          topic:
                            type: string
                            description: Meeting topic.
                            example: My Personal Meeting
                          total_size:
                            type: integer
                            description: >-
                              The total file size of the recording. This includes
                              the `recording_files` and `participant_audio_files`
                              files.
                            format: int64
                            example: 22
                          type:
                            type: string
                            description: >-
                              The recording's associated type of meeting or
                              webinar: 


                              If the recording is of a meeting: 

                              * `1` - Instant meeting. 

                              * `2` - Scheduled meeting. 

                              * `3` - A recurring meeting with no fixed time. 

                              * `4` - A meeting created viaPersonal Meeting ID
                              (PMI). 

                              * `7` - A [Personal Audio
                              Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
                              (PAC). 

                              * `8` - Recurring meeting with a fixed time. 


                              If the recording is of a webinar: 

                              * `5` - A webinar. 

                              * `6` - A recurring webinar without a fixed time 

                              * `9` - A recurring webinar with a fixed time.


                              If the recording is **not** from a meeting or
                              webinar: 


                              * `99` - A recording uploaded via the
                              [**Recordings**](https://zoom.us/recording)
                              interface on the Zoom Web Portal.
                            example: '1'
                            extensions:
                              x-enum-descriptions:
                                - Instant Meeting
                                - Scheduled Meeting
                                - Recurring Meeting with no fixed time
                                - Meeting created using a Personal Meeting ID
                                - A webinar
                                - Recurring webinar without a fixed time
                                - Personal Audio Conference
                                - Recurring meeting with a fixed time
                                - Recurring webinar with a fixed time
                                - A recording uploaded
                            enum:
                              - '1'
                              - '2'
                              - '3'
                              - '4'
                              - '5'
                              - '6'
                              - '7'
                              - '8'
                              - '9'
                              - '99'
                          uuid:
                            type: string
                            description: >-
                              Unique Meeting Identifier. Each instance of the
                              meeting will have its own UUID.
                            example: BOKXuumlTAGXuqwr3bLyuQ==
                          recording_play_passcode:
                            type: string
                            description: >-
                              The cloud recording's passcode to be used in the
                              URL. This recording's passcode can be directly
                              spliced in `play_url` or `share_url` with `?pwd=` to
                              access and play. For example,
                              'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'.
                              If you want to use this field, please contact Zoom
                              support.
                            example: yNYIS408EJygs7rE5vVsJwXIz4-VW7MH
                          recording_files:
                            type: array
                            description: List of recording file.
                            items:
                              type: object
                              properties:
                                deleted_time:
                                  type: string
                                  description: >-
                                    The time when recording was deleted. Returned
                                    in the response only for trash query.
                                  example: '2021-03-18T05:41:36Z'
                                download_url:
                                  type: string
                                  description: >-
                                    The URL to download the recording. 


                                    **OAuth apps** 


                                    If a user has authorized and installed your
                                    OAuth app that contains recording scopes, use
                                    the download_access_token or the user's [OAuth
                                    access
                                    token](https://developers.zoom.us/docs/integrations/oauth/)
                                    to download the file, and set the access_token
                                    as a Bearer token in the Authorization
                                    header. 


                                    `curl -H 'Authorization: Bearer
                                    <ACCESS_TOKEN>'
                                    https://{{base-domain}}/rec/archive/download/xyz`. 


                                    **Note:** This field does **not** return for
                                    [Zoom On-Premise
                                    accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                                    Instead, this API will return the `file_path`
                                    field.
                                  example: >-
                                    https://example.com/rec/download/Qg75t7xZBtEbAkjdlgbfdngBBBB
                                file_path:
                                  type: string
                                  description: >-
                                    The file path to the On-Premise account
                                    recording. 


                                    **Note:** This API only returns this field for
                                    [Zoom On-Premise
                                    accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment).
                                    It does **not** return the `download_url`
                                    field.
                                  example: /9090876528/path01/demo.mp4
                                file_size:
                                  type: number
                                  description: The recording file size.
                                  example: 7220
                                file_type:
                                  type: string
                                  description: "The recording file type.  \n \n`MP4` - Video file of the recording.  \n `M4A` Audio-only file of the recording.  \n `TIMELINE` - Timestamp file of the recording in JSON file format. To get a timeline file, the **Add a timestamp to the recording** setting must be enabled in the [recording settings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-recording#h_3f14c3a4-d16b-4a3c-bbe5-ef7d24500048). The time will display in the host's timezone, set on their Zoom profile.\n  \n  `TRANSCRIPT` - Transcription file of the recording in VTT format.  \n  `CHAT` - A TXT file containing in-meeting chat messages that were sent during the meeting.  \n `CC` - File containing closed captions of the recording in VTT file format.  \n `CSV` - File containing polling data in CSV format.\n\n  \n \n\nA recording file object with file type of either `CC` or `TIMELINE` **does not have** the following properties:  \n \n\t`id`, `status`, `file_size`, `recording_type`, and `play_url`.  \n `SUMMARY` - Summary file of the recording in JSON file format."
                                  example: MP4
                                  enum:
                                    - MP4
                                    - M4A
                                    - CHAT
                                    - TRANSCRIPT
                                    - CSV
                                    - TB
                                    - CC
                                    - CHAT_MESSAGE
                                    - SUMMARY
                                file_extension:
                                  type: string
                                  description: The file extension type of the recording file.
                                  example: M4A
                                  enum:
                                    - MP4
                                    - M4A
                                    - TXT
                                    - VTT
                                    - CSV
                                    - JSON
                                    - JPG
                                id:
                                  type: string
                                  description: >-
                                    The recording file ID. Included in the
                                    response of general query.
                                  example: 72576a1f-4e66-4a77-87c4-f13f9808bd76
                                meeting_id:
                                  type: string
                                  description: 'The meeting ID. '
                                  example: L0AGOEPVR9m5WSOOs/d+FQ==
                                play_url:
                                  type: string
                                  description: The URL to play a recording file.
                                  example: >-
                                    https://example.com/rec/play/Qg75t7xZBtEbAkjdlgbfdngBBBB
                                recording_end:
                                  type: string
                                  description: >-
                                    The recording end time. Response in general
                                    query.
                                  example: '2021-03-18T05:41:36Z'
                                recording_start:
                                  type: string
                                  description: The recording start time.
                                  example: '2021-03-18T05:41:36Z'
                                recording_type:
                                  type: string
                                  description: |-
                                    The recording type.  
                                     `shared_screen_with_speaker_view(CC)`  
                                     `shared_screen_with_speaker_view`  
                                     `shared_screen_with_gallery_view`  
                                     `speaker_view`  
                                     `gallery_view`  
                                     `shared_screen`  
                                     `audio_only`  
                                     `audio_transcript`  
                                     `chat_file`  
                                     `active_speaker`  
                                     `poll`  
                                     `timeline`  
                                     `closed_caption`  
                                     `audio_interpretation`  
                                     `summary`  
                                     `summary_next_steps`  
                                     `summary_smart_chapters`  
                                     `sign_interpretation`  
                                     `production_studio`
                                  example: shared_screen_with_speaker_view
                                  enum:
                                    - shared_screen_with_speaker_view(CC)
                                    - shared_screen_with_speaker_view
                                    - shared_screen_with_gallery_view
                                    - active_speaker
                                    - gallery_view
                                    - shared_screen
                                    - audio_only
                                    - audio_transcript
                                    - chat_file
                                    - poll
                                    - host_video
                                    - closed_caption
                                    - timeline
                                    - thumbnail
                                    - audio_interpretation
                                    - summary
                                    - summary_next_steps
                                    - summary_smart_chapters
                                    - sign_interpretation
                                    - production_studio
                                status:
                                  type: string
                                  description: The recording status.
                                  example: completed
                                  enum:
                                    - completed
                              description: Recording file object.
                        description: The recording meeting object.
                  description: The pagination object.
          '401':
            description: |
              **HTTP Status Code:** `401` <br>
               Unauthorized  

               **Error Code:** `124` <br>
               Requires an access token. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `1001` <br>
               User {userId} does not exist, or does not belong to this account. <br>
              **Error Code:** `3301` <br>
               There is no recording for this session. <br>
        security:
          - openapi_oauth:
              - recording:read:admin
              - recording:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - Recording:Read
          x-macro-scopes:
            - recording:read:admin
            - recording:read
          x-granular-scopes:
            - user:read:list_recordings
            - user:read:list_recordings:admin
            - user:read:list_recordings:master
    /devices:
      get:
        tags:
          - Devices
        summary: List devices
        description: >-
          This API lets you list devices. 




          **Scopes:** `device:read:admin`,`device:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: listDevices
        parameters:
          - name: search_text
            in: query
            description: Filter devices by name or serial number.
            required: false
            schema:
              type: string
              example: poly
          - name: platform_os
            in: query
            description: Filter devices by platform operating system.
            required: false
            schema:
              type: string
              example: win
              enum:
                - win
                - mac
                - ipad
                - iphone
                - android
                - linux
          - name: is_enrolled_in_zdm
            in: query
            description: Filter devices by enrollment of ZDM (Zoom Device Management).
            required: false
            schema:
              type: boolean
              example: true
              default: true
          - name: device_type
            in: query
            description: |-
              Filter devices by device type.  
                Device Type:  
               `-1` - All Zoom Room device(0,1,2,3,4,6).  
               `0` - Zoom Rooms Computer.  
               `1` - Zoom Rooms Controller.  
               `2` - Zoom Rooms Scheduling Display.  
               `3` - Zoom Rooms Control System.  
               `4` -  Zoom Rooms Whiteboard.  
               `5` - Zoom Phone Appliance.  
               `6` - Zoom Rooms Computer (with Controller).
            required: false
            schema:
              type: integer
              example: 0
              default: -1
              enum:
                - -1
                - 0
                - 1
                - 2
                - 3
                - 4
                - 5
                - 6
          - name: device_vendor
            in: query
            description: Filter devices by vendor.
            required: false
            schema:
              type: string
              example: poly
          - name: device_model
            in: query
            description: Filter devices by model.
            required: false
            schema:
              type: string
              example: ep5
          - name: device_status
            in: query
            description: |-
              Filter devices by status.   
                Device Status:  
               `0` - offline.  
               `1` - online.  
               `-1` - unlink
            required: false
            schema:
              type: integer
              example: 0
              default: -1
              enum:
                - -1
                - 0
                - 1
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**  
               
              Device detail returned successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: At6eWnFZ1FB3arCXnRxqHLXKhbDW18yz2i2
                    page_size:
                      type: integer
                      description: The number of records returned within a single API call.
                      example: 20
                    devices:
                      type: array
                      items:
                        type: object
                        properties:
                          device_id:
                            type: string
                            description: Unique identifier of the device.
                            example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
                          device_name:
                            type: string
                            description: The name of the device.
                            example: My device
                          mac_address:
                            type: string
                            description: The mac address of the device.
                            example: 01-23-45-67-89-AB
                          serial_number:
                            type: string
                            description: The device's serial number.
                            example: 6NRN2A0
                          vendor:
                            type: string
                            description: The device's manufacturer.
                            example: Poly
                          model:
                            type: string
                            description: The device's model.
                            example: StudioX30
                          platform_os:
                            type: string
                            description: The device's platform.
                            example: Epos expandvision5 1.2.22315.04
                          app_version:
                            type: string
                            description: App version of Zoom Rooms.
                            example: 5.13.0.5762
                          tag:
                            type: string
                            description: The name of the tag.
                            example: personal rooms
                          enrolled_in_zdm:
                            type: boolean
                            description: >-
                              Whether the device enrolled in ZDM (Zoom Device
                              Management).
                            example: true
                          connected_to_zdm:
                            type: boolean
                            description: >-
                              Whether the device connected to ZDM (Zoom Device
                              Management).
                            example: true
                          room_id:
                            type: string
                            description: id of the Zoom Room.
                            example: 72afdc13-a289-40c3-b358-50c8b8de
                          room_name:
                            type: string
                            description: Name of the Zoom Room.
                            example: My Personal Meeting Room
                          device_type:
                            type: integer
                            description: |-
                              Filter devices by device type.  
                                Device Type:  
                               `-1` - All Zoom Room device(0,1,2,3,4,6).  
                               `0` - Zoom Rooms Computer.  
                               `1` - Zoom Rooms Controller.  
                               `2` - Zoom Rooms Scheduling Display.  
                               `3` - Zoom Rooms Control System.  
                               `4` -  Zoom Rooms Whiteboard.  
                               `5` - Zoom Phone Appliance.  
                               `6` - Zoom Rooms Computer (with Controller).
                            example: 0
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                              - 5
                              - 6
                          skd_version:
                            type: string
                            description: The version of the SDK.
                            example: 2.0.11
                          device_status:
                            type: integer
                            description: |-
                              Filter devices by status.   
                                Device Status:  
                               `0` - offline.  
                               `1` - online.  
                               `-1` - unlink
                            example: 0
                            enum:
                              - -1
                              - 0
                              - 1
                          last_online:
                            type: string
                            description: The time when device was online last time.
                            example: '2022-10-27T10:23:15Z'
                          user_email:
                            type: string
                            description: The owner of the phone device
                            example: test-user@ya.us
                        description: The information about the device.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `30055008` <br>
              no permission.

        security:
          - openapi_oauth:
              - device:read:admin
              - device:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - ZoomRooms:Read
            - ZoomRooms:Edit
          x-macro-scopes:
            - device:read:admin
            - device:write:admin
      post:
        tags:
          - Devices
        summary: Add a new device
        description: >-
          Add a new device to Zoom account. 


          **Scope:** `device:write:admin`   
           
           **[Rate Limit Label](https://developers.zoom.us/docs/api/rest/rate-limits/):** `Medium`

          **Scopes:** `device:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: addDevice
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - device_name
                  - device_type
                  - mac_address
                  - model
                  - serial_number
                  - vendor
                type: object
                properties:
                  device_name:
                    type: string
                    description: The device's name.
                    example: My device
                  mac_address:
                    type: string
                    description: The device's mac address.
                    example: 01-23-45-67-89-AB
                  serial_number:
                    type: string
                    description: The device's serial number.
                    example: 6NRN2A0
                  vendor:
                    type: string
                    description: The device's manufacturer.
                    example: Poly
                  model:
                    type: string
                    description: The device's model.
                    example: StudioX30
                  room_id:
                    type: string
                    description: The Zoom Room's ID. Only for Zoom Room devices.
                    example: 72afdc13-a289-40c3-b358-50c8b8de
                  user_email:
                    type: string
                    description: >-
                      User email for assigning the Zoom Phone device. Only for
                      Zoom Phone devices.
                    example: test-user@ya.us
                  device_type:
                    type: integer
                    description: |-
                      Device type.  
                       `0` - Zoom Rooms computer.  
                       `1` - Zoom Rooms controller.  
                       `5` - Zoom Phone appliance.
                    example: 0
                    enum:
                      - 0
                      - 1
                      - 5
                  tag:
                    type: string
                    description: The name of the tag.
                    example: personal rooms
                  zdm_group_id:
                    type: string
                    description: The ZDM group ID.
                    example: ff49588c-92c4-4406-99e6-1942d8a61a7b
                  extension_number:
                    type: string
                    description: The extension number.
                    example: '802'
        responses:
          '202':
            description: |-
              **HTTP Status:** `202` **Accepted**
              Request processed successfully.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `30055001` <br>
               zoom room does not exist.  <br>
              **Error Code:** `30055002` <br>
               required param can not be empty or null. <br>
              **Error Code:** `30055003` <br>
               device type does not support. <br>
              **Error Code:** `30055004` <br>
               model or vendor not exist. <br>
              **Error Code:** `30055005` <br>
               tag length can not be more than 64. <br>
              **Error Code:** `30055006` <br>
               device has already exist. <br>
              **Error Code:** `30055007` <br>
               invalid mac address. <br>
              **Error Code:** `30055008` <br>
               no permission. <br>
              **Error Code:** `30055009` <br>
               email does not have plan. <br>
        security:
          - openapi_oauth:
              - device:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - ZoomRooms:Edit
          x-macro-scopes:
            - device:write:admin
    /devices/groups:
      get:
        tags:
          - Devices
        summary: Get zdm group info
        description: >-
          Get Zoom Device Manager (ZDM) group information for an account.


          **Scopes:** `device:read:admin`


          **Granular Scopes:**
          `device:read:list_groups:admin`,`device:read:list_groups:master`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: Getzdmgroupinfo
        parameters:
          - name: page_size
            in: query
            description: |-
              The total number of records returned from a single API call.
              Default - 30.
              Max -100.
            required: false
            schema:
              type: integer
              example: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period token
              is 15 minutes.
            required: false
            schema:
              type: string
              example: BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200` **OK**  Version detail returned
              successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    groups:
                      type: array
                      description: All ZDM group information under current account.
                      items:
                        type: object
                        properties:
                          zdm_group_id:
                            type: string
                            description: The ZDM group's unique ID.
                            example: ff49588c-92c4-4406-99e6-1942d8a61a7b
                          name:
                            type: string
                            description: The ZDM group's name.
                            example: HeFei-group
                          description:
                            type: string
                            description: The ZDM group's describe.
                            example: Group in Hefei region
                    next_page_token:
                      type: string
                      description: >-
                        Use the next page token to paginate through a large set of
                        results. A next page token is returned whenever the set of
                        available results exceeds the current page size. This
                        token's expiration period is 15 minutes.
                      example: RaO87FrnwXvFQta5aV8sU5C3c9O8s9Nraq2
                    page_size:
                      type: integer
                      description: >-
                        The total number of records returned from a single API
                        call.
                      example: 30
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `30051037` <br>
               Invalid parameters. <br>
          '403':
            description: |
              **HTTP Status Code:** `403` <br>
               Forbidden  

               **Error Code:** `30055008` <br>
               No permission. <br>
        security:
          - openapi_oauth:
              - device:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - ZoomRooms:Read
            - MoileDeviceManagement:Read
          x-macro-scopes:
            - device:read:admin
          x-granular-scopes:
            - device:read:list_groups:admin
            - device:read:list_groups:master
    /devices/zpa/assignment:
      post:
        tags:
          - Devices
        summary: Assign a device to a user or commonarea
        description: >-
          Assign a device to a user or common area, or move a device to another
          user or common area, or remove a device.


          **Prerequisites:**

          * Device must be enrolled in Zoom Device Management (ZDM).


          **Scopes:** `device:write:admin`


          **Granular Scopes:**
          `device:write:zpa_device:admin`,`device:write:zpa_device:master`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: Assigndevicetoauser/commonarea
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - mac_address
                  - vendor
                type: object
                properties:
                  extension_number:
                    type: string
                    description: The extension number.
                    example: '802'
                  mac_address:
                    type: string
                    description: The device's mac address.
                    example: 64167ffc0ed7
                  vendor:
                    type: string
                    description: The device's manufacturer.
                    example: poly
        responses:
          '204':
            description: >-
              **HTTP Status Code:** `204` **No Content**   Request processed
              successfully.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `30055003` <br>
               Device vendor does not support. <br>
              **Error Code:** `30055007` <br>
               Mac address is wrong. <br>
              **Error Code:** `30051039` <br>
               Device not exists. <br>
              **Error Code:** `30055002` <br>
               AUTO RECEPTIONIST user can not assign to device. <br>
              **Error Code:** `30055009` <br>
               User not have phone plan. <br>
              **Error Code:** `30052024` <br>
               Extension number not exists. <br>
              **Error Code:** `30055002` <br>
               Missing required input. <br>
        security:
          - openapi_oauth:
              - device:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - MobileDeviceManagement:Edit
            - ZoomRooms:Edit
          x-macro-scopes:
            - device:write:admin
          x-granular-scopes:
            - device:write:zpa_device:admin
            - device:write:zpa_device:master
    /devices/zpa/upgrade:
      post:
        tags:
          - Devices
        summary: upgrade zpa os/app
        description: >-
          Upgrade ZPA firmware or app by Zoom Device Manager (ZDM) group ID.


          **Scopes:** `device:write:admin`


          **Granular Scopes:**
          `device:write:zpa_os_or_app:admin`,`device:write:zpa_os_or_app:master`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: UpgradeZpas/app
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - data
                  - zdm_group_id
                type: object
                properties:
                  zdm_group_id:
                    type: string
                    description: The ZDM group ID.
                    example: ff49588c-92c4-4406-99e6-1942d8a61a7b
                  data:
                    oneOf:
                      - title: ''
                        required:
                          - upgrade_type
                        type: object
                        properties:
                          firmware_versions:
                            type: array
                            items:
                              type: object
                              properties:
                                vendor:
                                  type: string
                                  description: The device's manufacturer.
                                  example: AudioCodes
                                version:
                                  type: string
                                  description: The firmware version.
                                  example: 1.19.552
                                model:
                                  type: string
                                  description: >-
                                    The device's model name. Maximum of 64
                                    characters.
                                  example: C470HD
                          upgrade_type:
                            type: string
                            description: Upgrade firmware.
                            example: UPGRADE_FIRMWARE
                            default: UPGRADE_FIRMWARE
                            enum:
                              - UPGRADE_FIRMWARE
                      - title: ''
                        required:
                          - upgrade_type
                        type: object
                        properties:
                          app_version:
                            type: string
                            description: >-
                              The app version to be upgraded. If upgrade type is
                              `0`, this field won't work. If upgrade type is `1`,
                              this field will work.
                            example: 5.16.5.3920
                          upgrade_type:
                            type: string
                            description: Upgrade app.
                            example: UPGRADE_APP
                            enum:
                              - UPGRADE_APP
        responses:
          '202':
            description: >-
              The upgrade request has been accepted and is currently being
              processed.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `30052029` <br>
               Missing required input: firmware_versions. <br>
              **Error Code:** `30055020` <br>
               Upgrade type dose not exist. <br>
              **Error Code:** `30055018` <br>
               Zdm group id dose not exist. <br>
              **Error Code:** `30052030` <br>
               Missing required input: app_version. <br>
        security:
          - openapi_oauth:
              - device:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - ZoomRooms:Edit
            - MobileDeviceManagement:Edit
          x-macro-scopes:
            - device:write:admin
          x-granular-scopes:
            - device:write:zpa_os_or_app:admin
            - device:write:zpa_os_or_app:master
    /devices/zpa/vendors/{vendor}/mac_addresses/{macAddress}:
      delete:
        tags:
          - Devices
        summary: Delete ZPA device by vendor and mac address
        description: >-
          Remove a ZPA device from the device manager, by vendor and mac address.


          **Scopes:** `device:write:admin`


          **Granular Scopes:**
          `device:delete:zpa_device:admin`,`device:delete:zpa_device:master`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: DeleteZpaDeviceByVendorAndMacAddress
        parameters:
          - name: vendor
            in: path
            description: The device's manufacturer.
            required: true
            schema:
              type: string
              example: Poly
          - name: macAddress
            in: path
            description: The device's mac address.
            required: true
            schema:
              type: string
              example: 64167ffc0ed7
        responses:
          '204':
            description: >-
              **HTTP Status Code:** `204` **No Content** Device deleted
              successfully.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `30052026` <br>
               Device is not ZPA. <br>
              **Error Code:** `30055003` <br>
               Device vendor does not support. <br>
              **Error Code:** `30055007` <br>
               Mac address is wrong. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `30051039` <br>
               Zdm device not found. <br>
        security:
          - openapi_oauth:
              - device:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - ZoomRooms:Edit
            - MobileDeviceManagement:Edit
          x-macro-scopes:
            - device:write:admin
          x-granular-scopes:
            - device:delete:zpa_device:admin
            - device:delete:zpa_device:master
    /devices/zpa/zdm_groups/{zdmGroupId}/versions:
      get:
        tags:
          - Devices
        summary: Get ZPA version info
        description: >-
          Get ZPA firmware and app version information that can be upgraded for
          devices.


          **Scopes:** `device:read:admin`


          **Granular Scopes:**
          `device:read:list_zpa_versions:admin`,`device:read:list_zpa_versions:master`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: GetZpaVersioninfo
        parameters:
          - name: zdmGroupId
            in: path
            description: The Zoom Device Management (ZDM) group ID.
            required: true
            schema:
              type: string
              example: ff49588c-92c4-4406-99e6-1942d8a61a7b
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200` **OK**  Version detail returned
              successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    firmware_versions:
                      type: array
                      description: List of firmware that can be upgraded.
                      items:
                        type: object
                        properties:
                          vendor:
                            type: string
                            description: The device's manufacturer.
                            example: AudioCodes
                          model:
                            type: string
                            description: The device's model name.
                            example: C470HD
                          version:
                            type: string
                            description: The package version.
                            example: 1.19.552
                          warn_info:
                            type: string
                            description: The prompt information for this version.
                            example: >-
                              You are about to perform an Android operating system
                              upgrade. The change is permanent and cannot be
                              reversed.
                        description: Details of firmware that the vendor can upgrade.
                    app_versions:
                      type: array
                      description: List of app versions that can be upgraded.
                      items:
                        type: string
                        description: The app version.
                        example: 5.16.5.3920
                  description: Information about the version list.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `30051037` <br>
               * AccountId is empty. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `30052027` <br>
               * ZdmGroup not found. <br>
        security:
          - openapi_oauth:
              - device:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - ZoomRooms:Read
            - MoileDeviceManagement:Read
          x-macro-scopes:
            - device:read:admin
          x-granular-scopes:
            - device:read:list_zpa_versions:admin
            - device:read:list_zpa_versions:master
    /devices/{deviceId}:
      get:
        tags:
          - Devices
        summary: Get device detail
        description: >-
          Retrieve a device's details.


          **Scopes:** `device:read:admin`,`device:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: getDevice
        parameters:
          - name: deviceId
            in: path
            description: The device's unique identifier.
            required: true
            schema:
              type: string
              example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK** 
               
              Device detail returned successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    device_id:
                      type: string
                      description: The device's unique identifier.
                      example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
                    device_name:
                      type: string
                      description: The name of the device.
                      example: My device
                    mac_address:
                      type: string
                      description: The device's MAC address.
                      example: 01-23-45-67-89-AB
                    serial_number:
                      type: string
                      description: The device's serial number.
                      example: 6NRN2A0
                    vendor:
                      type: string
                      description: The device's manufacturer.
                      example: Poly
                    model:
                      type: string
                      description: The device's model.
                      example: StudioX30
                    platform_os:
                      type: string
                      description: The device's platform.
                      example: Epos expandvision5 1.2.22315.04
                    app_version:
                      type: string
                      description: App version of Zoom Rooms.
                      example: 5.13.0.5762
                    tag:
                      type: string
                      description: The tag's name.
                      example: personal rooms
                    enrolled_in_zdm:
                      type: boolean
                      description: >-
                        Whether the device is enrolled in ZDM (Zoom Device
                        Management).
                      example: true
                    connected_to_zdm:
                      type: boolean
                      description: >-
                        Whether the device is connected to ZDM (Zoom Device
                        Management).
                      example: true
                    room_id:
                      type: string
                      description: The Zoom Room's ID.
                      example: 72afdc13-a289-40c3-b358-50c8b8de
                    room_name:
                      type: string
                      description: The Zoom Room's name.
                      example: My Personal Meeting Room
                    device_type:
                      type: integer
                      description: |-
                        Filter devices by device type.  
                        Device Type:  
                         `-1` - All Zoom Room device(0,1,2,3,4,6).  
                         `0` - Zoom Rooms Computer.  
                         `1` - Zoom Rooms Controller.  
                         `2` - Zoom Rooms Scheduling Display.  
                         `3` - Zoom Rooms Control System.  
                         `4` - Zoom Rooms Whiteboard.  
                         `5` - Zoom Phone Appliance.  
                         `6` - Zoom Rooms Computer (with Controller).
                      example: 0
                      enum:
                        - 0
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                    sdk_version:
                      type: string
                      description: The SDK version.
                      example: 2.0.11
                    device_status:
                      type: integer
                      description: |-
                        Filter devices by status.  
                         Device Status:  
                         `0` - offline.  
                         `1` - online.  
                         `-1` - unlink
                      example: 0
                      enum:
                        - -1
                        - 0
                        - 1
                    last_online:
                      type: string
                      description: The time when the device was last online.
                      example: '2022-10-27T10:23:15Z'
                    user_email:
                      type: string
                      description: The phone device's owner.
                      example: test-user@ya.us
                  description: Information about the device.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `30055008` <br>
               No permission. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `30055012` <br>
               No found unified deviceId. <br>
        security:
          - openapi_oauth:
              - device:read:admin
              - device:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - ZoomRooms:Read
            - ZoomRooms:Edit
          x-macro-scopes:
            - device:read:admin
            - device:write:admin
      delete:
        tags:
          - Devices
        summary: Delete device
        description: >-
          Delete a device from a Zoom account. 


          **Prerequisites:**

          * Device must be enrolled in ZMD (Zoom Device Management)


          **Scopes:** `device:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: deleteDevice
        parameters:
          - name: deviceId
            in: path
            description: Unique identifier of the device.
            required: true
            schema:
              type: string
              example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
        responses:
          '204':
            description: >-
              **HTTP Status Code:** `204` **No Content** Device deleted
              successfully.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `30055008` <br>
               no permission. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `30055012` <br>
               no found unified deviceId. <br>
        security:
          - openapi_oauth:
              - device:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - MobileDeviceManagement:Edit
          x-macro-scopes:
            - device:write:admin
      patch:
        tags:
          - Devices
        summary: 'Change device '
        description: >-
          Change device name. 


          **Prerequisites:**

          * Device must be enrolled in ZMD (Zoom Device Management)


          **Scopes:** `device:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: updateDevice
        parameters:
          - name: deviceId
            in: path
            description: Unique identifier of the device.
            required: true
            schema:
              type: string
              example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - device_name
                type: object
                properties:
                  device_name:
                    type: string
                    description: The name of the device.
                    example: My device
                  tag:
                    type: string
                    description: The name of the tag.
                    example: personal rooms
                  room_id:
                    type: string
                    description: id of the Zoom Room.
                    example: 72afdc13-a289-40c3-b358-50c8b8de
                  device_type:
                    type: integer
                    description: |-
                      Device Type:  
                       `0` - Zoom Rooms Computer.  
                       `1` - Zoom Rooms Controller.  
                       `2` - Zoom Rooms Scheduling Display.
                    example: 1
                    enum:
                      - 0
                      - 1
                      - 3
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204` **No Content** 
               
              Request processed successfully.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `30055001` <br>
               zoom room does not exist. . <br>
              **Error Code:** `30055002` <br>
               required param can not be empty or null. <br>
              **Error Code:** `30055003` <br>
               device type does not support. <br>
              **Error Code:** `30055011` <br>
               device is not enrolled. <br>
              **Error Code:** `30055013` <br>
               device not support this app. <br>
              **Error Code:** `30055014` <br>
               room not support this app. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `30055012` <br>
               Device does not exist: {deviceId}. <br>
        security:
          - openapi_oauth:
              - device:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - ZoomRooms:Edit
          x-macro-scopes:
            - device:write:admin
    /devices/{deviceId}/assignment:
      patch:
        tags:
          - Devices
        summary: Change device association
        description: >-
          This Device API lets you change device association from one Zoom Room to
          another. 


          **Prerequisites:**

          * Device must be enrolled in ZMD (Zoom Device Management) 




          **Scopes:** `device:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: changeDeviceAssociation
        parameters:
          - name: deviceId
            in: path
            description: Unique identifier of the device.
            required: true
            schema:
              type: string
              example: F1C6E9DF-429E-4FA1-85DA-AC95464F3D18
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - action
                type: object
                properties:
                  room_id:
                    type: string
                    description: >-
                      The Zoom Room ID which device is being associated to. The
                      `room_id` is required when `assign` is selected for `action`
                      field.
                    example: qMOLddnySIGGVycz8aX_JQ
                  app_type:
                    type: string
                    description: |-
                      Specify one of the following values for this field:

                      `ZR`: Zoom Room Computer.  
                       
                      `ZRC`: Zoom Room Controller.  
                       
                      `ZRP`: Scheduling Display.  
                       
                      `ZRW`: Companion Whiteboard.
                    example: ZR
                    default: ZR
                    enum:
                      - ZR
                      - ZRC
                      - ZRP
                      - ZRW
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204` **No Content**  
               
              Request processed successfully.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `8500` <br>
              Device not enrolled in Zoom Device Management.

              **Error Code:** `8501` <br>
              Device does not support this app.

              **Error Code:** `8502` <br>
              Room does not support this app.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1012` <br>
              Room does not exist: {roomId}.

              **Error Code:** `8503` <br>
              Device does not exist: {deviceId}.

        security:
          - openapi_oauth:
              - device:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - device:write:admin
    /h323/devices:
      get:
        tags:
          - H323 Devices
        summary: List H.323/SIP devices
        description: >-
          A H.323 or SIP device can make a video call to a [Room
          Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
          to join a Zoom cloud meeting. A Room Connector can also call out to a
          H.323 or SIP device to join a Zoom cloud meeting. Use this API to list
          all H.323/SIP Devices on a Zoom account.  
             
           


          **Scopes:** `h323:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: deviceList
        parameters:
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: page_number
            in: query
            description: >-
              **Deprecated.** We will no longer support this field in a future
              release. Instead, use the `next_page_token` for pagination.
            required: false
            schema:
              type: integer
              example: 1
              default: 1
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              List of H.323/SIP devices returned.  
               
              **Error Code:** `200`  
               
              No permission.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: w7587w4eiyfsudgf
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_number:
                      type: integer
                      description: >-
                        **Deprecated.** We will no longer support this field in a
                        future release. Instead, use the `next_page_token` for
                        pagination.
                      example: 1
                      deprecated: true
                      default: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 20
                    devices:
                      type: array
                      description: List of H.323/SIP Device objects.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Device ID.
                            example: abceHewahkrehwiK
                          encryption:
                            type: string
                            description: |-
                              Device encryption:  
                               `auto` - auto.  
                               `yes` - yes.  
                               `no` - no.
                            example: auto
                            extensions:
                              x-enum-descriptions:
                                - auto
                                - 'yes'
                                - 'no'
                            enum:
                              - auto
                              - 'yes'
                              - 'no'
                          ip:
                            type: string
                            description: Device IP.
                            example: 127.0.0.1
                          name:
                            maxLength: 64
                            type: string
                            description: Device name.
                            example: api_test_20190508
                          protocol:
                            type: string
                            description: |-
                              Device protocol:  
                               `H.323` - H.323.  
                               `SIP` - SIP.
                            example: H.323
                            extensions:
                              x-enum-descriptions:
                                - H.323
                                - SIP
                            enum:
                              - H.323
                              - SIP
                        title: The H.323/SIP device object.
                        required:
                          - encryption
                          - ip
                          - name
                          - protocol
                        description: The H.323/SIP device object.
                  description: List of H.323/SIP Devices.
                  title: H.323/SIP Device List
        security:
          - openapi_oauth:
              - h323:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - h323:read:admin
      post:
        tags:
          - H323 Devices
        summary: Create a H.323/SIP device
        description: >-
          A H.323 or SIP device can make a video call to a [Room
          Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
          to join a Zoom cloud meeting. A Room Connector can also call out to a
          H.323 or SIP device to join a Zoom cloud meeting. Use this API to add a
          H.323/SIP device to your Zoom account  
             
           


          **Scopes:** `h323:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: deviceCreate
        requestBody:
          description: H.323/SIP device.
          content:
            application/json:
              schema:
                title: The H.323/SIP device object.
                required:
                  - encryption
                  - ip
                  - name
                  - protocol
                type: object
                properties:
                  encryption:
                    type: string
                    description: |-
                      Device encryption:  
                       `auto` - auto.  
                       `yes` - yes.  
                       `no` - no.
                    example: auto
                    extensions:
                      x-enum-descriptions:
                        - auto
                        - 'yes'
                        - 'no'
                    enum:
                      - auto
                      - 'yes'
                      - 'no'
                  ip:
                    type: string
                    description: Device IP.
                    example: 127.0.0.1
                  name:
                    maxLength: 64
                    type: string
                    description: Device name.
                    example: api_test_20190508
                  protocol:
                    type: string
                    description: |-
                      Device protocol:  
                       `H.323` - H.323.  
                       `SIP` - SIP.
                    example: H.323
                    extensions:
                      x-enum-descriptions:
                        - H.323
                        - SIP
                    enum:
                      - H.323
                      - SIP
                description: The H.323/SIP device object.
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`  
               
              H.323/SIP device created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Device ID.
                      example: abceHewahkrehwiK
                    encryption:
                      type: string
                      description: |-
                        Device encryption:  
                         `auto` - auto.  
                         `yes` - yes.  
                         `no` - no.
                      example: auto
                      extensions:
                        x-enum-descriptions:
                          - auto
                          - 'yes'
                          - 'no'
                      enum:
                        - auto
                        - 'yes'
                        - 'no'
                    ip:
                      type: string
                      description: Device IP.
                      example: 127.0.0.1
                    name:
                      maxLength: 64
                      type: string
                      description: Device name.
                      example: api_test_20190508
                    protocol:
                      type: string
                      description: |-
                        Device protocol:  
                         `H.323` - H.323.  
                         `SIP` - SIP.
                      example: H.323
                      extensions:
                        x-enum-descriptions:
                          - H.323
                          - SIP
                      enum:
                        - H.323
                        - SIP
                  title: The H.323/SIP device object.
                  required:
                    - encryption
                    - ip
                    - name
                    - protocol
                  description: The H.323/SIP device object.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>
              No permission.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `2020` <br>
              H.323 device's display name:{displayName} is already in use.

        security:
          - openapi_oauth:
              - h323:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - h323:write:admin
    /h323/devices/{deviceId}:
      delete:
        tags:
          - H323 Devices
        summary: Delete a H.323/SIP device
        description: >-
          A H.323 or SIP device can make a video call to a [Room
          Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
          to join a Zoom cloud meeting. A Room Connector can also call out to a
          H.323 or SIP device to join a Zoom cloud meeting. Use this API to delete
          a H.323/SIP device from your Zoom account.  
             
           


          **Scopes:** `h323:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: deviceDelete
        parameters:
          - name: deviceId
            in: path
            description: The device ID.
            required: true
            schema:
              type: string
              example: abceHewahkrehwiK
        responses:
          '200':
            description: You do not have the permission to delete this device.
          '204':
            description: H.323/SIP device deleted.
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - h323:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - h323:write:admin
      patch:
        tags:
          - H323 Devices
        summary: Update a H.323/SIP device
        description: >-
          A H.323 or SIP device can make a video call to a [Room
          Connector](https://support.zoom.us/hc/en-us/articles/201363273-Getting-Started-With-H-323-SIP-Room-Connector)
          to join a Zoom cloud meeting. A Room Connector can also call out to a
          H.323 or SIP device to join a Zoom cloud meeting. Use this API to edit
          information of a H.323/SIP device from your Zoom account.  
             
           


          **Scopes:** `h323:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: deviceUpdate
        parameters:
          - name: deviceId
            in: path
            description: The device ID.
            required: true
            schema:
              type: string
              example: abceHewahkrehwiK
        requestBody:
          content:
            application/json:
              schema:
                title: The H.323/SIP device object.
                required:
                  - encryption
                  - ip
                  - name
                  - protocol
                type: object
                properties:
                  encryption:
                    type: string
                    description: |-
                      Device encryption:  
                       `auto` - auto.  
                       `yes` - yes.  
                       `no` - no.
                    example: auto
                    extensions:
                      x-enum-descriptions:
                        - auto
                        - 'yes'
                        - 'no'
                    enum:
                      - auto
                      - 'yes'
                      - 'no'
                  ip:
                    type: string
                    description: Device IP.
                    example: 127.0.0.1
                  name:
                    maxLength: 64
                    type: string
                    description: Device name.
                    example: api_test_20190508
                  protocol:
                    type: string
                    description: |-
                      Device protocol:  
                       `H.323` - H.323.  
                       `SIP` - SIP.
                    example: H.323
                    extensions:
                      x-enum-descriptions:
                        - H.323
                        - SIP
                    enum:
                      - H.323
                      - SIP
                description: The H.323/SIP device object.
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              H.323/SIP device updated.
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `2020` <br>
              H.323 device's display name:{displayName} is already in use.

        security:
          - openapi_oauth:
              - h323:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - h323:write:admin
    /live_meetings/{meetingId}/chat/messages/{messageId}:
      delete:
        tags:
          - Meetings
        summary: Delete a live meeting message
        description: >-
          Delete a message in a live meeting, based on ID. 


          **Prerequisites:** 

          * Have Zoom enable the DLP for the in-meeting chat feature to use this
          API.


          **Scopes:** `meeting:write`,`meeting:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: deleteMeetingChatMessageById
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: messageId
            in: path
            description: >-
              The live meeting chat message's unique identifier (UUID), in
              base64-encoded format.
            required: true
            schema:
              type: string
              example: MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==
          - name: file_ids
            in: query
            description: >-
              The live webinar chat file's universally unique identifier (UUID),
              in base64-encoded format. Separate multiple values with commas.
            required: false
            schema:
              type: string
              example: >-
                MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==,MS17NDQ0OEU5MjMtM0JFOS1CMDA1LTQ0NDAtQjdGOTU0Rjk5MTkyfQ==
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              Meeting chat message deleted.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `200` <br>
               * Only available for Paid accounts. 
              * DLP is not enabled. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Meeting {meetingId} does not exist. <br>
        security:
          - openapi_oauth:
              - meeting:write
              - meeting:write:admin
            openapi_authorization: []
        extensions:
          x-permissions: []
          x-macro-scopes:
            - meeting:write
            - meeting:write:admin
      patch:
        tags:
          - Meetings
        summary: Update a live meeting message
        description: >-
          Update a message in a live meeting, based on ID. **Prerequisites:** *
          Have Zoom enable the DLP for the in-meeting chat feature to use this
          API.


          **Scopes:** `meeting:write`,`meeting:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: updateMeetingChatMessageById
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, store it as a long-format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: messageId
            in: path
            description: >-
              The live meeting chat message's unique identifier (UUID), in
              base64-encoded format.
            required: true
            schema:
              type: string
              example: MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - message_content
                type: object
                properties:
                  message_content:
                    type: string
                    description: The content of the chat message.
                    example: This is a test message
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204` <br>
               Meeting chat message updated.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               DLP is not enabled on this account <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Meeting {meetingId} does not exist. <br>
        security:
          - openapi_oauth:
              - meeting:write
              - meeting:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - meeting:write
            - meeting:write:admin
    /live_meetings/{meetingId}/events:
      patch:
        tags:
          - Meetings
        summary: Use in-meeting controls
        description: >-
          Control
          [in-meeting](https://support.zoom.us/hc/en-us/articles/360021921032-In-Meeting-Controls)
          features. In-meeting controls include starting and stopping a recording,
          pausing and resuming a recording, and inviting participants. 


          **Note:** This API's recording control only works for cloud recordings.
          It does **not** work for local recordings. 


          **Prerequisites:**

          * The meeting **must** be a live meeting **except** inviting
          participants to the meeting through [call out (phone)/(room system)]. 

          * Recording control: [Cloud
          recording](https://support.zoom.us/hc/en-us/articles/360060231472-Enabling-cloud-recording)
          must be enabled on the account. 

          * The user calling this API must be the host or an alternative meeting
          host.

           

          **Scopes:** `meeting:write`,`meeting:write:admin`,`meeting:master`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: inMeetingControl
        parameters:
          - name: meetingId
            in: path
            description: The live meeting's ID.
            required: true
            schema:
              type: string
              example: '93398114182'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  method:
                    type: string
                    description: >-
                      The in-meeting method to control: 

                      * `recording.start` &mdash; Start the recording. 

                      * `recording.stop` &mdash; Stop the recording. 

                      * `recording.pause` &mdash; Pause the recording. 

                      * `recording.resume` &mdash; Resume a paused recording. 

                      * `participant.invite` &mdash; Invite a participant to the
                      meeting. 

                      * `participant.invite.callout` &mdash; Invite a participant
                      to the meeting through [call out
                      (phone)](https://support.zoom.us/hc/en-us/articles/4404535651085-Inviting-others-by-phone-call-out). 

                      * `participant.invite.room_system_callout` &mdash; Invite a
                      participant to the meeting through [call out (room system)].
                    example: recording.start
                  params:
                    type: object
                    properties:
                      contacts:
                        maximum: 10
                        type: array
                        description: >-
                          The user's email address or the user ID, up to a maximum
                          of 10 contacts. The account must be a part of the
                          meeting host's account.
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              description: >-
                                The user's email address. Use this value if you do
                                not have the user's ID. 


                                If you pass the `id` value, the API ignores this
                                query parameter.
                              example: jchill@example.com
                            id:
                              type: string
                              description: The user's ID.
                              example: 30R7kT7bTIKSNUFEuH_Qlg
                      invitee_name:
                        type: string
                        description: >-
                          The user's name to display in the meeting. Use this
                          field if you pass the `participant.invite.callout` value
                          for the `method` field.
                        example: Jill Chill
                      phone_number:
                        type: string
                        description: >-
                          The user's phone number. Use this field if you pass the
                          `participant.invite.callout` value for the `method`
                          field. As a best practice, ensure this includes a
                          country code and area code.
                        example: '5550100'
                      invite_options:
                        type: object
                        properties:
                          require_greeting:
                            type: boolean
                            description: >-
                              Whether to require a greeting before being
                              connected. Use this field if you pass the
                              `participant.invite.callout` value for the `method`
                              field.
                            example: true
                            default: true
                          require_pressing_one:
                            type: boolean
                            description: >-
                              Whether to require pressing 1 before being
                              connected. Use this field if you pass the
                              `participant.invite.callout` value for the `method`
                              field.
                            example: true
                            default: true
                        description: >-
                          Information about the `participant.invite.callout`
                          settings.
                      call_type:
                        type: string
                        description: >-
                          The type of call out. Use a value of `h323` or `sip`.
                          Use this field if you pass the
                          `participant.invite.room_system_callout` value for the
                          `method` field.
                        example: h323
                      device_ip:
                        type: string
                        description: >-
                          The user's device IP address or URI. Use this field if
                          you pass the `participant.invite.room_system_callout`
                          value for the `method` field.
                        example: 10.100.111.237
                      h323_headers:
                        type: object
                        properties:
                          from_display_name:
                            maxLength: 64
                            type: string
                            description: >-
                              Custom name that will be used within the h323
                              Header.
                            example: display name
                          to_display_name:
                            maxLength: 64
                            type: string
                            description: >-
                              Custom remote name that will be used within the
                              meeting.
                            example: display name
                        description: >-
                          Enable customers to leverage services that require
                          customization of the FROM header to identify the caller.
                          Use this field if you pass the
                          `participant.invite.room_system_callout` value for the
                          `method` field and the `h323` value for the `call_type`
                          field.
                      sip_headers:
                        type: object
                        properties:
                          from_display_name:
                            maxLength: 64
                            type: string
                            description: Custom name that will be used within the SIP Header.
                            example: display name
                          to_display_name:
                            maxLength: 64
                            type: string
                            description: >-
                              Custom remote name that will be used within the
                              meeting.
                            example: display name
                          from_uri:
                            maxLength: 256
                            type: string
                            description: >-
                              Custom URI that will be used within the SIP Header.
                              The URI must start with 'sip:' or 'sips:' as a valid
                              URI based on parameters defined by the platform.
                            example: sip:username@domain.company.org
                          additional_headers:
                            maximum: 10
                            type: array
                            description: >-
                              Ability to add 1 to 10 custom headers, each of which
                              has a maximum length of 256 bytes to comply with SIP
                              standards.  Custom headers would leverage header
                              names starting with 'X-' per SIP guidelines.
                            items:
                              type: object
                              properties:
                                key:
                                  maxLength: 32
                                  type: string
                                  description: Additional custom SIP header's key.
                                  example: X-Header1
                                value:
                                  maxLength: 256
                                  type: string
                                  description: Additional custom SIP header's value.
                                  example: X-body1
                        description: >-
                          Enable customers to leverage services that require
                          customization of the FROM header to identify the caller.
                          Use this field if you pass the
                          `participant.invite.room_system_callout` value for the
                          `method` field and the `sip` value for the `call_type`
                          field.
                    description: The in-meeting parameters.
        responses:
          '202':
            description: |-
              **HTTP Status:** `202` **Accepted**
              Request processed successfully.
          '400':
            description: >
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               * Meeting id does not exist.<br>
              * Invalid meeting id.<br>

              * Meeting does not exist.<br>

              * No permission.<br>

              * This API is not available for this account, please contact Zoom
              support. <br>

              **Error Code:** `3309` <br>
               Not enough cloud storage available. Either purchase additional storage or delete cloud recordings to free up storage. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Meeting {meetingId} is not found or has expired. <br>
          '429':
            description: |-
              **HTTP Status Code:** `429` <br>
               undefined 

               
        security:
          - openapi_oauth:
              - meeting:write
              - meeting:write:admin
              - meeting:master
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write
            - meeting:write:admin
            - meeting:master
    /meetings/meeting_summaries:
      get:
        tags:
          - Meetings
        summary: List meeting summaries of an account
        description: >-
          Generates a list of all meeting summaries for an account.


          **Prerequisites**

          * Host user type must be Pro or higher plan.

          * The Meeting Summary with AI Companion feature enabled in the host's
          account.

          * E2ee meetings do not have summary feature enabled.


          **Scopes:** `meeting_summary:read:admin`


          **Granular Scopes:** `meeting:read:list_summaries:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: Listmeetingsummaries
        parameters:
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              The next page token paginates through a large set of results. A next
              page token returns whenever the set of available results exceeds the
              current page size. The expiration period for this token is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: from
            in: query
            description: >-
              The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to
              retrieve the creation date range of the meeting summaries.
            required: false
            schema:
              type: string
              format: date-time
              example: '2023-10-19T07:00:00Z'
          - name: to
            in: query
            description: >-
              The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used to
              retrieve the creation date range of the meeting summaries.
            required: false
            schema:
              type: string
              format: date-time
              example: '2023-10-20T07:00:00Z'
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`

              Successfully listed meeting summaries of an account.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    next_page_token:
                      type: string
                      description: >-
                        The next page token paginates through a large set of
                        results. A next page token returns whenever the set of
                        available results exceeds the current page size. The
                        expiration period for this token is 15 minutes.
                      example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
                    from:
                      type: string
                      description: >-
                        The start date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format
                        used to retrieve the creation date range of the meeting
                        summaries.
                      format: date-time
                      example: '2023-10-19T07:00:00Z'
                    to:
                      type: string
                      description: >-
                        The end date in `yyyy-MM-dd'T'HH:mm:ss'Z'` UTC format used
                        to retrieve the creation date range of the meeting
                        summaries.
                      format: date-time
                      example: '2023-10-20T07:00:00Z'
                    summaries:
                      type: array
                      description: List of meeting summary objects.
                      items:
                        type: object
                        properties:
                          meeting_host_id:
                            type: string
                            description: The ID of the user who is set as the meeting host.
                            example: 30R7kT7bTIKSNUFEuH_Qlg
                          meeting_host_email:
                            type: string
                            description: The meeting host's email address.
                            format: email
                            example: jchill@example.com
                          meeting_uuid:
                            type: string
                            description: >
                              Unique meeting ID. Each meeting instance generates
                              its own meeting UUID - after a meeting ends, a new
                              UUID is generated for the next instance of the
                              meeting. Retrieve a list of UUIDs from past meeting
                              instances using the [**List past meeting
                              instances**](https://developers.zoom.us) API.
                              [Double
                              encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
                              your UUID when using it for API calls if the UUID
                              begins with a `/` or contains `//` in it.
                            example: aDYlohsHRtCd4ii1uC2+hA==
                          meeting_id:
                            type: integer
                            description: >-
                              [Meeting
                              ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-)
                              - the meeting's unique identifier in **long**
                              format, represented as int64 data type in JSON, also
                              known as the meeting number.
                            format: int64
                            example: 97763643886
                          meeting_topic:
                            type: string
                            description: Meeting topic.
                            example: My Meeting
                          meeting_start_time:
                            type: string
                            description: The meeting's start date and time.
                            format: date-time
                            example: '2019-07-15T23:24:52Z'
                          meeting_end_time:
                            type: string
                            description: The meeting's end date and time.
                            format: date-time
                            example: '2020-07-15T23:30:19Z'
                          summary_start_time:
                            type: string
                            description: The summary's start date and time.
                            format: date-time
                            example: '2019-07-15T23:24:52Z'
                          summary_end_time:
                            type: string
                            description: The summary's end date and time.
                            format: date-time
                            example: '2020-07-15T23:30:19Z'
                          summary_created_time:
                            type: string
                            description: >-
                              The date and time at which the meeting summary was
                              created.
                            format: date-time
                            example: '2019-07-15T23:24:52Z'
                          summary_last_modified_time:
                            type: string
                            description: >-
                              The date and time at which the meeting summary was
                              last modified.
                            format: date-time
                            example: '2020-07-15T23:30:19Z'
                        description: The meeting summary object.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `3161` <br>
               Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
              **Error Code:** `3000` <br>
               Meeting summary disabled. To enable this feature, enable the "Meeting Summary with AI Companion" setting in the Zoom web portal's "Settings" interface. <br>
          '401':
            description: |
              **HTTP Status Code:** `401` <br>
               Unauthorized 

               **Error Code:** `1001` <br>
               User {userId} not exist or not belong to this account. <br>
        security:
          - openapi_oauth:
              - meeting_summary:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - SmartMeetingSummaryMgt:Read
          x-macro-scopes:
            - meeting_summary:read:admin
          x-granular-scopes:
            - meeting:read:list_summaries:admin
    /meetings/{meetingId}:
      get:
        tags:
          - Meetings
        summary: Get a meeting
        description: >-
          Retrieve the given meeting's details. 
           
           


          **Scopes:** `meeting:read`,`meeting:read:admin`


          **Granular Scopes:** `meeting:read:meeting`,`meeting:read:meeting:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: meeting
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be more than 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: occurrence_id
            in: query
            description: >-
              Meeting occurrence ID. Provide this field to view meeting details of
              a particular occurrence of the [recurring
              meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings).
            required: false
            schema:
              type: string
              example: '1648194360000'
          - name: show_previous_occurrences
            in: query
            description: >-
              Set this field's value to `true` to view meeting details of all
              previous occurrences of a [recurring
              meeting](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings). 
            required: false
            schema:
              type: boolean
              example: true
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Meeting object returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    assistant_id:
                      type: string
                      description: >-
                        The ID of the user who scheduled this meeting on behalf of
                        the host.
                      example: kFFvsJc-Q1OSxaJQLvaa_A
                    host_email:
                      type: string
                      description: The meeting host's email address.
                      format: email
                      example: jchill@example.com
                    host_id:
                      type: string
                      description: The ID of the user who is set as the meeting host.
                      example: 30R7kT7bTIKSNUFEuH_Qlg
                    id:
                      type: integer
                      description: >-
                        [Meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
                        Unique identifier of the meeting in **long** format,
                        represented as int64 data type in JSON, also known as the
                        meeting number.
                      format: int64
                      example: 97763643886
                    uuid:
                      type: string
                      description: >
                        Unique meeting ID. Each meeting instance generates its own
                        meeting UUID - after a meeting ends, a new UUID is
                        generated for the next instance of the meeting. Retrieve a
                        list of UUIDs from past meeting instances using the
                        [**List past meeting
                        instances**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/pastMeetings)
                        API. [Double
                        encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
                        your UUID when using it for API calls if the UUID begins
                        with a `/` or contains `//` in it.
                      example: aDYlohsHRtCd4ii1uC2+hA==
                    agenda:
                      maxLength: 2000
                      type: string
                      description: The meeting description.
                      example: My Meeting
                    created_at:
                      type: string
                      description: 'The creation time. '
                      format: date-time
                      example: '2022-03-25T07:29:29Z'
                    duration:
                      type: integer
                      description: The meeting duration.
                      example: 60
                    encrypted_password:
                      type: string
                      description: Encrypted passcode for third party endpoints (H323/SIP).
                      example: 8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1
                    h323_password:
                      type: string
                      description: H.323/SIP room system passcode.
                      example: '123456'
                    join_url:
                      type: string
                      description: >-
                        The URL for participants to join the meeting. This URL
                        should only be shared with users invited to the meeting.
                      example: https://example.com/j/11111
                    chat_join_url:
                      type: string
                      description: The URL to join the chat.
                      example: https://example.com/launch/jc/11111
                    occurrences:
                      type: array
                      description: Array of occurrence objects.
                      items:
                        type: object
                        properties:
                          duration:
                            type: integer
                            description: Duration.
                            example: 60
                          occurrence_id:
                            type: string
                            description: >-
                              Occurrence ID: Unique Identifier that identifies an
                              occurrence of a recurring meeting. [Recurring
                              meetings](https://support.zoom.us/hc/en-us/articles/214973206-Scheduling-Recurring-Meetings)
                              can have a maximum of 50 occurrences.
                            example: '1648194360000'
                          start_time:
                            type: string
                            description: Start time.
                            format: date-time
                            example: '2022-03-25T07:46:00Z'
                          status:
                            type: string
                            description: |-
                              Occurrence status: 
                               `available` - Available occurrence.  
                               `deleted` -  Deleted occurrence.
                            example: available
                            enum:
                              - available
                              - deleted
                        description: >-
                          Occurrence object. This object is only returned for
                          recurring meetings.
                    password:
                      minimum: 8
                      type: string
                      description: Meeting passcode.
                      example: '123456'
                    pmi:
                      type: string
                      description: >-
                        [Personal meeting ID
                        (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                        Only used for scheduled meetings and recurring meetings
                        with no fixed time.
                      example: '97891943927'
                    pre_schedule:
                      type: boolean
                      description: >-
                        Whether the prescheduled meeting was created via the
                        [GSuite
                        app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on).
                        This **only** supports the meeting `type` value of `2`
                        (scheduled meetings) and `3` (recurring meetings with no
                        fixed time): 

                        * `true` - A GSuite prescheduled meeting. 

                        * `false` - A regular meeting.
                      example: false
                      default: false
                    recurrence:
                      required:
                        - type
                      type: object
                      properties:
                        end_date_time:
                          type: string
                          description: >-
                            Select the final date when the meeting will recur
                            before it is canceled. Should be in UTC time, such as
                            2017-11-25T12:00:00Z. (Cannot be used with
                            `end_times`.)
                          format: date-time
                          example: '2022-04-02T15:59:00Z'
                        end_times:
                          maximum: 60
                          type: integer
                          description: >-
                            Select how many times the meeting should recur before
                            it is canceled. If `end_times` is set to 0, it means
                            there is no end time. The maximum number of
                            recurrences is 60. Cannot be used with
                            `end_date_time`.
                          example: 7
                          default: 1
                        monthly_day:
                          type: integer
                          description: >-
                            Use this field only if you're scheduling a recurring
                            meeting of type `3` to state the day in a month when
                            the meeting should recur. The value range is from 1 to
                            31.


                            For example, for a meeting to recur on 23rd of each
                            month, provide `23` as this field's value and `1` as
                            the `repeat_interval` field's value. Instead, to have
                            the meeting to recur every three months on 23rd of the
                            month, change the `repeat_interval` field's value to
                            `3`.
                          example: 1
                          default: 1
                        monthly_week:
                          type: integer
                          description: >-
                            Use this field only if you're scheduling a recurring
                            meeting of type `3` to state the week of the month
                            when the meeting should recur. If you use this field,
                            **you must also use the `monthly_week_day` field to
                            state the day of the week when the meeting should
                            recur.**   
                             `-1` - Last week of the month.  
                             `1` - First week of the month.  
                             `2` - Second week of the month.  
                             `3` - Third week of the month.  
                             `4` - Fourth week of the month.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Last week
                              - First week
                              - Second week
                              - Third week
                              - Fourth week
                          enum:
                            - -1
                            - 1
                            - 2
                            - 3
                            - 4
                        monthly_week_day:
                          type: integer
                          description: >-
                            Use this field **only if you're scheduling a recurring
                            meeting of type** `3` to state a specific day in a
                            week when the monthly meeting should recur. To use
                            this field, you must also use the `monthly_week`
                            field. 

                              
                             `1` - Sunday.  
                             `2` - Monday.  
                             `3` - Tuesday.  
                             `4` -  Wednesday.  
                             `5` - Thursday.  
                             `6` - Friday.  
                             `7` - Saturday.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Sunday
                              - Monday
                              - Tuesday
                              - Wednesday
                              - Thursday
                              - Friday
                              - Saturday
                          enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                            - 6
                            - 7
                        repeat_interval:
                          type: integer
                          description: >+
                            Define the interval when the meeting should recur. For
                            instance, to schedule a meeting that recurs every two
                            months, you must set this field's value as `2` and the
                            `type` parameter's value as `3`. 


                            For a daily meeting, the maximum interval you can set
                            is `90` days. For a weekly meeting the maximum
                            interval that you can set is  of `12` weeks. For a
                            monthly meeting, there is a maximum of `3` months.

                          example: 1
                        type:
                          type: integer
                          description: |-
                            Recurrence meeting types:  
                             `1` - Daily.  
                             `2` - Weekly.  
                             `3` - Monthly.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Daily
                              - Weekly
                              - Monthly
                          enum:
                            - 1
                            - 2
                            - 3
                        weekly_days:
                          type: string
                          description: >-
                            This field is required if you're scheduling a
                            recurring meeting of type `2` to state which days of
                            the week the meeting should repeat.   
                                
                              The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
                               
                              **Note** To have the meeting occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as this field's value.


                             `1`  - Sunday.   
                             `2` - Monday.  
                             `3` - Tuesday.  
                             `4` -  Wednesday.  
                             `5` -  Thursday.  
                             `6` - Friday.  
                             `7` - Saturday.
                          example: '1'
                          default: '1'
                          enum:
                            - '1'
                            - '2'
                            - '3'
                            - '4'
                            - '5'
                            - '6'
                            - '7'
                      description: >-
                        Recurrence object. Use this object only for a meeting with
                        type `8`, a recurring meeting with a fixed time. 
                    settings:
                      type: object
                      properties:
                        allow_multiple_devices:
                          type: boolean
                          description: >-
                            Allow attendees to join the meeting from multiple
                            devices. This setting only works for meetings that
                            require
                            [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
                          example: true
                        alternative_hosts:
                          type: string
                          description: >-
                            A semicolon-separated list of the meeting's
                            alternative hosts' email addresses or IDs.
                          example: jchill@example.com;thill@example.com
                        alternative_hosts_email_notification:
                          type: boolean
                          description: >-
                            Flag to determine whether to send email notifications
                            to alternative hosts, default value is true.
                          example: true
                          default: true
                        alternative_host_update_polls:
                          type: boolean
                          description: >-
                            Whether the **Allow alternative hosts to add or edit
                            polls** feature is enabled. This requires Zoom version
                            5.8.0 or higher.
                          example: true
                        approval_type:
                          type: integer
                          description: >-
                            Enable registration and set approval for the
                            registration. Note that this feature requires the host
                            to be of **Licensed** user type. **Registration cannot
                            be enabled for a basic user.**   
                               
                             

                            `0` - Automatically approve.  
                             `1` - Manually approve.  
                             `2` - No registration required.
                          example: 0
                          extensions:
                            x-enum-descriptions:
                              - Automatically Approve
                              - Manually Approve
                              - No Registration Required
                          default: 2
                          enum:
                            - 0
                            - 1
                            - 2
                        approved_or_denied_countries_or_regions:
                          type: object
                          properties:
                            approved_list:
                              type: array
                              description: >-
                                List of countries/regions from where participants
                                can join this meeting. 
                              items:
                                type: string
                                example: CX
                            denied_list:
                              type: array
                              description: >-
                                List of countries/regions from where participants
                                can not join this meeting. 
                              items:
                                type: string
                                example: CA
                            enable:
                              type: boolean
                              description: >-
                                `true`: Setting enabled to either allow users or
                                block users from specific regions to join your
                                meetings.   
                                 

                                `false`: Setting disabled.
                              example: true
                            method:
                              type: string
                              description: >-
                                Specify whether to allow users from specific
                                regions to join this meeting; or block users from
                                specific regions from joining this meeting.   
                                   
                                 
                                `approve`: Allow users from specific
                                regions/countries to join this meeting. If this
                                setting is selected, the approved
                                regions/countries must be included in the
                                `approved_list`.  
                                   
                                 
                                `deny`: Block users from specific
                                regions/countries from joining this meeting. If
                                this setting is selected, the approved
                                regions/countries must be included in the
                                `denied_list`
                              example: approve
                              enum:
                                - approve
                                - deny
                          description: >
                            Approve or block users from specific regions/countries
                            from joining this meeting. 
                        audio:
                          type: string
                          description: >-
                            Determine how participants can join the audio portion
                            of the meeting.  
                             `both` - Both Telephony and VoIP.  
                             `telephony` - Telephony only.  
                             `voip` - VoIP only.  
                             `thirdParty` - Third party audio conference.
                          example: telephony
                          extensions:
                            x-enum-descriptions:
                              - Both Telephony and VoIP
                              - Telephony only
                              - VoIP only
                              - Third party audio conference
                          default: both
                          enum:
                            - both
                            - telephony
                            - voip
                            - thirdParty
                        audio_conference_info:
                          maxLength: 2048
                          type: string
                          description: Third party audio conference info.
                          example: test
                        authentication_domains:
                          type: string
                          description: >-
                            If user has configured [Sign Into Zoom with Specified
                            Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                            option, this will list the domains that are
                            authenticated.
                          example: example.com
                        authentication_exception:
                          type: array
                          description: >-
                            The participants added here will receive unique
                            meeting invite links and bypass authentication.
                          items:
                            type: object
                            properties:
                              email:
                                type: string
                                description: Email address of the participant.
                                format: email
                                example: jchill@example.com
                              name:
                                type: string
                                description: Name of the participant.
                                example: Jill Chill
                              join_url:
                                type: string
                                description: URL for participants to join the meeting
                                example: https://example.com/s/11111
                        authentication_name:
                          type: string
                          description: >-
                            Authentication name set in the [authentication
                            profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
                          example: Sign in to Zoom
                        authentication_option:
                          type: string
                          description: Meeting authentication option id.
                          example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
                        auto_recording:
                          type: string
                          description: |-
                            Automatic recording:  
                             `local` - Record on local.  
                             `cloud` -  Record on cloud.  
                             `none` - Disabled.
                          example: cloud
                          extensions:
                            x-enum-descriptions:
                              - Record to local device
                              - Record to cloud
                              - No Recording
                          default: none
                          enum:
                            - local
                            - cloud
                            - none
                        breakout_room:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Set this field's value to `true` if you would like
                                to enable the [breakout room
                                pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)
                                option.
                              example: true
                            rooms:
                              type: array
                              description: Create room(s).
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: The breakout room's name.
                                    example: room1
                                  participants:
                                    type: array
                                    description: >-
                                      Email addresses of the participants who are
                                      to be assigned to the breakout room.
                                    items:
                                      type: string
                                      example: jchill@example.com
                          description: >-
                            Setting to [pre-assign breakout
                            rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
                        calendar_type:
                          type: integer
                          description: >-
                            Indicates the type of calendar integration used to
                            schedule the meeting. 

                            * `1` - [Zoom Outlook
                            add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 

                            * `2` - [Zoom for Google Workspace
                            add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)


                            Works with the `private_meeting` field to determine
                            whether to share details of meetings or not.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Outlook
                              - Google Calendar
                          enum:
                            - 1
                            - 2
                        close_registration:
                          type: boolean
                          description: Close registration after event date
                          example: false
                          default: false
                        cn_meeting:
                          type: boolean
                          description: Host meeting in China.
                          example: false
                          deprecated: true
                          default: false
                        contact_email:
                          type: string
                          description: Contact email for registration
                          example: jchill@example.com
                        contact_name:
                          type: string
                          description: Contact name for registration
                          example: Jill Chill
                        custom_keys:
                          maxItems: 10
                          type: array
                          description: Custom keys and values assigned to the meeting.
                          items:
                            type: object
                            properties:
                              key:
                                maxLength: 64
                                type: string
                                description: Custom key associated with the user.
                                example: key1
                              value:
                                maxLength: 256
                                type: string
                                description: >-
                                  Value of the custom key associated with the
                                  user.
                                example: value1
                        email_notification:
                          type: boolean
                          description: >-
                            Whether to send email notifications to [alternative
                            hosts](https://support.zoom.us/hc/en-us/articles/208220166)
                            and [users with scheduling
                            privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege).
                            This value defaults to `true`.
                          example: true
                          default: true
                        encryption_type:
                          type: string
                          description: >-
                            Choose between enhanced encryption and [end-to-end
                            encryption](https://support.zoom.us/hc/en-us/articles/360048660871)
                            when starting or a meeting. When using end-to-end
                            encryption, several features (e.g. cloud recording,
                            phone/SIP/H.323 dial-in) will be **automatically
                            disabled**. 
                             
                            `enhanced_encryption` - Enhanced encryption.
                            Encryption is stored in the cloud if you enable this
                            option.   
                             

                            `e2ee` - [End-to-end
                            encryption](https://support.zoom.us/hc/en-us/articles/360048660871).
                            The encryption key is stored in your local device and
                            can not be obtained by anyone else. Enabling this
                            setting also **disables** the join before host, cloud
                            recording, streaming, live transcription, breakout
                            rooms, polling, 1:1 private chat, and meeting
                            reactions features.
                          example: enhanced_encryption
                          enum:
                            - enhanced_encryption
                            - e2ee
                        enforce_login:
                          type: boolean
                          description: >-
                            Only signed in users can join this meeting.


                            **This field is deprecated and will not be supported
                            in the future.**    
                               
                             As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
                          example: true
                          deprecated: true
                        enforce_login_domains:
                          type: string
                          description: >-
                            Only signed in users with specified domains can join
                            meetings.


                            **This field is deprecated and will not be supported
                            in the future.**    
                               
                             As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
                          example: example.com
                          deprecated: true
                        focus_mode:
                          type: boolean
                          description: >-
                            Whether the [**Focus Mode**
                            feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode)
                            is enabled when the meeting starts.
                          example: true
                        global_dial_in_countries:
                          type: array
                          description: List of global dial-in countries
                          items:
                            type: string
                            example: US
                        global_dial_in_numbers:
                          type: array
                          description: Global Dial-in Countries/Regions
                          items:
                            type: object
                            properties:
                              city:
                                type: string
                                description: >-
                                  City of the number, if any. For example,
                                  Chicago.
                                example: New York
                              country:
                                type: string
                                description: Country code. For example, BR.
                                example: US
                              country_name:
                                type: string
                                description: Full name of country. For example, Brazil.
                                example: US
                              number:
                                type: string
                                description: Phone number. For example, +1 2332357613.
                                example: +1 1000200200
                              type:
                                type: string
                                description: 'Type of number. '
                                example: toll
                                enum:
                                  - toll
                                  - tollfree
                        host_video:
                          type: boolean
                          description: Start video when the host joins the meeting.
                          example: true
                        in_meeting:
                          type: boolean
                          description: Host meeting in India.
                          example: false
                          deprecated: true
                          default: false
                        jbh_time:
                          type: integer
                          description: >-
                            If the value of `join_before_host` field is set to
                            true, this field can be used to indicate time limits
                            when a participant may join a meeting before a host.


                            *  `0` - Allow participant to join anytime.

                            *  `5` - Allow participant to join 5 minutes before
                            meeting start time.
                             * `10` - Allow participant to join 10 minutes before meeting start time.
                          example: 0
                          enum:
                            - 0
                            - 5
                            - 10
                        join_before_host:
                          type: boolean
                          description: >-
                            Allow participants to join the meeting before the host
                            starts the meeting. Only used for scheduled or
                            recurring meetings.
                          example: true
                          default: false
                        language_interpretation:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Whether to enable [language
                                interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                                for the meeting.
                              example: true
                            interpreters:
                              type: array
                              description: >-
                                Information about the meeting's language
                                interpreters.
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                                    description: The interpreter's email address.
                                    format: email
                                    example: interpreter@example.com
                                  languages:
                                    type: string
                                    description: >-
                                      A comma-separated list of the interpreter's
                                      languages. The string must contain two
                                      [country
                                      IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                                      For example, if the interpreter will
                                      translate from English to Chinese, then this
                                      value will be `US,CN`.
                                    example: US,FR
                          description: >-
                            The meeting's [language interpretation
                            settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                            Make sure to add the language in the web portal in
                            order to use it in the API. See link for details. 


                            **Note:** This feature is only available for certain
                            Meeting add-on, Education, and Business and higher
                            plans. If this feature is not enabled on the host's
                            account, this setting will **not** be applied to the
                            meeting.
                        sign_language_interpretation:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Whether to enable [sign language
                                interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                                for the meeting.
                              example: true
                            interpreters:
                              maximum: 20
                              type: array
                              description: >-
                                Information about the meeting's sign language
                                interpreters.
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                                    description: The interpreter's email address.
                                    format: email
                                    example: interpreter@example.com
                                  sign_language:
                                    type: string
                                    description: |-
                                      The interpreter's sign language. 

                                       To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API response.
                                    example: American
                          description: >-
                            The meeting's [sign language interpretation
                            settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                            Make sure to add the language in the web portal in
                            order to use it in the API. See link for details. 


                            **Note:** If this feature is not enabled on the host's
                            account, this setting will **not** be applied to the
                            meeting.
                        meeting_authentication:
                          type: boolean
                          description: '`true` - Only authenticated users can join meetings.'
                          example: true
                        mute_upon_entry:
                          type: boolean
                          description: Mute participants upon entry.
                          example: false
                          default: false
                        participant_video:
                          type: boolean
                          description: Start video when participants join the meeting.
                          example: false
                        private_meeting:
                          type: boolean
                          description: Whether the meeting is set as private.
                          example: false
                        registrants_confirmation_email:
                          type: boolean
                          description: |-
                            Whether to send registrants an email confirmation.
                            * `true` - Send a confirmation email.
                            * `false` - Do not send a confirmation email.
                          example: true
                        registrants_email_notification:
                          type: boolean
                          description: >-
                            Whether to send registrants email notifications about
                            their registration approval, cancellation, or
                            rejection.


                            * `true` - Send an email notification.

                            * `false` - Do not send an email notification.

                             Set this value to `true` to also use the `registrants_confirmation_email` parameter.
                          example: true
                        registration_type:
                          type: integer
                          description: >-
                            Registration type. Used for recurring meeting with
                            fixed time only. 
                             `1` Attendees register once and can attend any of the occurrences.  
                             `2` Attendees need to register for each occurrence to attend.  
                             `3` Attendees register once and can choose one or more occurrences to attend.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - >-
                                Attendees register once and can attend any of the
                                occurrences
                              - >-
                                Attendees need to register for each occurrence to
                                attend
                              - >-
                                Attendees register once and can choose one or more
                                occurrences to attend
                          default: 1
                          enum:
                            - 1
                            - 2
                            - 3
                        show_share_button:
                          type: boolean
                          description: >-
                            Show social share buttons on the meeting registration
                            page.

                            This setting only works for meetings that require
                            [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
                          example: true
                        use_pmi:
                          type: boolean
                          description: >-
                            Use a [personal meeting ID
                            (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                            Only used for scheduled meetings and recurring
                            meetings with no fixed time.
                          example: false
                          default: false
                        waiting_room:
                          type: boolean
                          description: Enable waiting room
                          example: false
                          default: false
                        watermark:
                          type: boolean
                          description: Add watermark when viewing a shared screen.
                          example: false
                          default: false
                        host_save_video_order:
                          type: boolean
                          description: >-
                            Whether the **Allow host to save video order** feature
                            is enabled.
                          example: true
                        internal_meeting:
                          type: boolean
                          description: Whether to set the meeting as an internal meeting.
                          example: false
                          default: false
                        continuous_meeting_chat:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Whether to enable the **Enable continuous meeting
                                chat** setting.
                              example: true
                            auto_add_invited_external_users:
                              type: boolean
                              description: >-
                                Whether to enable the **Automatically add invited
                                external users** setting.
                              example: true
                            channel_id:
                              type: string
                              description: The channel's ID.
                              example: cabc1234567defghijkl01234
                          description: >-
                            Information about the **Enable continuous meeting
                            chat** feature.
                        participant_focused_meeting:
                          type: boolean
                          description: >-
                            Whether to set the meeting as a participant focused
                            meeting.
                          example: false
                          default: false
                        push_change_to_calendar:
                          type: boolean
                          description: >-
                            Whether to push meeting changes to the calendar. 

                             To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.
                            * `true` - Push meeting changes to the calendar.

                            * `false` - Do not push meeting changes to the
                            calendar.
                          example: false
                          default: false
                        resources:
                          type: array
                          description: The meeting's resources.
                          items:
                            type: object
                            properties:
                              resource_type:
                                type: string
                                description: The resource type.
                                example: whiteboard
                                enum:
                                  - whiteboard
                              resource_id:
                                type: string
                                description: The resource ID.
                                example: X4Hy02w3QUOdskKofgb9Jg
                              permission_level:
                                type: string
                                description: >-
                                  The permission levels for users to access the
                                  whiteboard. 

                                  * `editor` - Users with link access can edit the
                                  board. 

                                  * `commenter` - Users with link access can
                                  comment on the board. 

                                  * `viewer` - Users with link access can view the
                                  board.
                                example: editor
                                default: editor
                                enum:
                                  - editor
                                  - commenter
                                  - viewer
                        auto_start_meeting_summary:
                          type: boolean
                          description: Whether to automatically start a meeting summary.
                          example: false
                          default: false
                        auto_start_ai_companion_questions:
                          type: boolean
                          description: Whether to automatically start AI Companion questions.
                          example: false
                          default: false
                      description: Meeting settings.
                    start_time:
                      type: string
                      description: >
                        Meeting start time in GMT or UTC. Start time will not be
                        returned if the meeting is an **instant** meeting. 
                      format: date-time
                      example: '2022-03-25T07:29:29Z'
                    start_url:
                      type: string
                      description: "The `start_url` of a meeting is a URL that a host or an alternative host can start the meeting. \n\nThe expiration time for the `start_url` field listed in the response of the [**Create a meeting**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/meetingCreate) API is two hours for all regular users. \n\t\nFor users created using the `custCreate` option via the [**Create users**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.\n\t\nFor security reasons, to retrieve the updated value for the `start_url` field programmatically after the expiry time, you must call the [**Get a meeting](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/meeting) API and refer to the value of the `start_url` field in the response.  \n This URL should only be used by the host of the meeting and **should not be shared with anyone other than the host** of the meeting as anyone with this URL will be able to login to the Zoom Client as the host of the meeting."
                      example: https://example.com/s/11111
                    status:
                      type: string
                      description: Meeting status
                      example: waiting
                      enum:
                        - waiting
                        - started
                    timezone:
                      type: string
                      description: The timezone to format the meeting start time.
                      example: America/Los_Angeles
                    topic:
                      type: string
                      description: Meeting topic.
                      example: My Meeting
                    tracking_fields:
                      type: array
                      description: Tracking fields.
                      items:
                        type: object
                        properties:
                          field:
                            type: string
                            description: The tracking field's label.
                            example: field1
                          value:
                            type: string
                            description: The tracking field's value.
                            example: value1
                          visible:
                            type: boolean
                            description: >-
                              Indicates whether the [tracking
                              field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
                              is visible in the meeting scheduling options in the
                              Zoom Web Portal or not.


                              `true`: Tracking field is visible.   
                               

                              `false`: Tracking field is not visible to the users
                              when they look at the meeting details in the Zoom
                              Web Portal but the field was used while scheduling
                              this meeting via API. An invisible tracking field
                              can be used by users while scheduling meetings via
                              API only. 
                            example: true
                    type:
                      type: integer
                      description: |-
                        Meeting types. 
                         `1` - Instant meeting.  
                         `2` - Scheduled meeting.  
                         `3` - Recurring meeting with no fixed time.  
                         `4` - PMI Meeting  
                         
                        `8` - Recurring meeting with a fixed time.
                      example: 2
                      extensions:
                        x-enum-descriptions:
                          - Instant Meeting
                          - Scheduled Meeting
                          - Recurring Meeting with no fixed time
                          - Recurring Meeting with fixed time
                      default: 2
                      enum:
                        - 1
                        - 2
                        - 3
                        - 8
                  description: Meeting object.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `3000` <br>
               Cannot access webinar info. <br>
              **Error Code:** `3161` <br>
               Your user account is not allowed meeting hosting and scheduling capabilities. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `3001` <br>
               Meeting does not exist: {meetingId}. <br>
        security:
          - openapi_oauth:
              - meeting:read
              - meeting:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - meeting:read
            - meeting:read:admin
          x-granular-scopes:
            - meeting:read:meeting
            - meeting:read:meeting:admin
      delete:
        tags:
          - Meetings
        summary: Delete a meeting
        description: >-
          Delete a meeting.  
             
           


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingDelete
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: occurrence_id
            in: query
            description: The meeting or webinar occurrence ID.
            required: false
            schema:
              type: string
              example: '1648194360000'
          - name: schedule_for_reminder
            in: query
            description: >-
              `true`: Notify host and alternative host about the meeting
              cancellation via email.

              `false`: Do not send any email notification.
            required: false
            schema:
              type: boolean
              example: true
          - name: cancel_meeting_reminder
            in: query
            description: >-
              `true`: Notify registrants about the meeting cancellation via
              email. 


              `false`: Do not send any email notification to meeting registrants. 


              The default value of this field is `false`.
            required: false
            schema:
              type: boolean
              example: true
        responses:
          '204':
            description: |-
              **HTTP Status Code**: `204`   
               
              Meeting deleted.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}.<br>


              **Error Code:** `3000` <br>

              Cannot access meeting information.<br>Invalid occurrence_id.<br>


              **Error Code:** `3002` <br>

              Sorry, you cannot delete this meeting since it is in progress.<br>


              **Error Code:** `3003` <br>

              You are not the meeting host.<br>


              **Error Code:** `3007` <br>

              Sorry, you cannot delete this meeting since it has ended.<br>


              **Error Code:** `3018` <br>

              Not allowed to delete PMI.<br>


              **Error Code:** `3037` <br>

              Not allowed to delete PAC.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User does not exist: {userId}.<br>

              **Error Code:** `3001` <br>
              Meeting with this {meetingId} is not found or has expired.

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
      patch:
        tags:
          - Meetings
        summary: Update a meeting
        description: >-
          Update meeting details.


          **Note** 

          * The `start_time` value **must** be a future date. If the value is
          omitted or a date is in the past, the API ignores this value and does
          **not** update any recurring meetings. 

          * The `recurrence` object is **required**.

          * This API has a rate limit of **100 requests per day**. You can update
          a meeting for a maximum of **100 times within a 24-hour period**. 





          **Scopes:** `meeting:write`,`meeting:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: meetingUpdate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, store it as a long format integer and **not** an integer. Meeting IDs can be greater than 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: occurrence_id
            in: query
            description: >-
              Meeting occurrence ID. Support change of agenda, `start_time`,
              duration, or settings {`host_video`, `participant_video`,
              `join_before_host`, `mute_upon_entry`, `waiting_room`, `watermark`,
              `auto_recording`}.
            required: false
            schema:
              type: string
              example: '1648194360000'
        requestBody:
          description: Meeting
          content:
            application/json:
              schema:
                type: object
                properties:
                  agenda:
                    maxLength: 2000
                    type: string
                    description: Meeting description.
                    example: My Meeting
                  duration:
                    type: integer
                    description: >-
                      Meeting duration in minutes. Used for scheduled meetings
                      only.
                    example: 60
                  password:
                    maxLength: 10
                    type: string
                    description: >-
                      Meeting passcode. Passcodes may only contain these
                      characters [a-z A-Z 0-9 @ - _ *] and can have a maximum of
                      10 characters.


                      **Note** If the account owner or the admin has configured
                      [minimum passcode requirement
                      settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
                      the passcode value provided here must meet those
                      requirements.   
                         
                       If the requirements are enabled, view those requirements by calling either the [**Get user settings**](https://developers.zoom.us) API or the [**Get account settings**](https://developers.zoom.us) API.
                    example: '123456'
                  pre_schedule:
                    type: boolean
                    description: >-
                      Whether to create a prescheduled meeting through the [GSuite
                      app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on).
                      This **only** supports the meeting `type` value of `2` -
                      scheduled meetings- and `3` - recurring meetings with no
                      fixed time. 

                      * `true` - Create a prescheduled meeting. 

                      * `false` - Create a regular meeting.
                    example: false
                    default: false
                  schedule_for:
                    type: string
                    description: >-
                      The email address or `userId` of the user to schedule a
                      meeting for.
                    example: jchill@example.com
                  recurrence:
                    required:
                      - type
                    type: object
                    properties:
                      end_date_time:
                        type: string
                        description: >-
                          Select the final date when the meeting recurs before it
                          is canceled. Should be in UTC time, such as
                          2017-11-25T12:00:00Z. Cannot be used with `end_times`.
                        format: date-time
                        example: '2022-04-02T15:59:00Z'
                      end_times:
                        maximum: 60
                        type: integer
                        description: >-
                          Select how many times the meeting should recur before it
                          is canceled. If `end_times` is set to 0, it means there
                          is no end time. The maximum number of recurrences is 60.
                          Cannot be used with `end_date_time`.
                        example: 7
                        default: 1
                      monthly_day:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          meeting of type** `3` to state the day in a month when
                          the meeting should recur. The value range is from 1 to
                          31.


                          For instance, if the meeting should recur on 23rd of
                          each month, provide `23` as this field's value and `1`
                          as the `repeat_interval` field's value. If the meeting
                          should recur every three months on 23rd of the month,
                          change the `repeat_interval` field's value to `3`.
                        example: 1
                        default: 1
                      monthly_week:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          meeting of type** `3` to state the week of the month
                          when the meeting should recur. If you use this field,
                          you must also use the `monthly_week_day` field to state
                          the day of the week when the meeting should recur.   
                           `-1` - Last week of the month.  
                           `1` - First week of the month.  
                           `2` - Second week of the month.  
                           `3` - Third week of the month.  
                           `4` - Fourth week of the month.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Last week
                            - First week
                            - Second week
                            - Third week
                            - Fourth week
                        enum:
                          - -1
                          - 1
                          - 2
                          - 3
                          - 4
                      monthly_week_day:
                        type: integer
                        description: >-
                          Use this field only if you're scheduling a recurring
                          meeting of type `3` to state a specific day in a week
                          when a monthly meeting should recur. To use this field,
                          you must also use the `monthly_week` field. 

                            
                           `1` - Sunday.  
                           `2` - Monday.  
                           `3` - Tuesday.  
                           `4` -  Wednesday.  
                           `5` - Thursday.  
                           `6` - Friday.  
                           `7` - Saturday.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Sunday
                            - Monday
                            - Tuesday
                            - Wednesday
                            - Thursday
                            - Friday
                            - Saturday
                        enum:
                          - 1
                          - 2
                          - 3
                          - 4
                          - 5
                          - 6
                          - 7
                      repeat_interval:
                        type: integer
                        description: >+
                          Define the interval when the meeting should recur. For
                          instance, to schedule a meeting that recurs every two
                          months, set this field's value as `2` and the `type`
                          parameter's value to `3`. 


                          For a daily meeting, the maximum interval is `90` days.
                          For a weekly meeting, the maximum interval is `12`
                          weeks. For a monthly meeting, the maximum value is `3`
                          months.

                        example: 1
                      type:
                        type: integer
                        description: |-
                          Recurrence meeting types. 
                           `1` - Daily.  
                           `2` - Weekly.  
                           `3` - Monthly.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Daily
                            - Weekly
                            - Monthly
                        enum:
                          - 1
                          - 2
                          - 3
                      weekly_days:
                        type: string
                        description: >-
                          This field is required if you're scheduling a recurring
                          meeting of type `2`, to state which days of the week the
                          meeting should repeat.   


                          Thiw field's value could be a number between `1` to `7`
                          in string format. For instance, if the meeting should
                          recur on Sunday, provide `1` as this field's value.  
                             
                            **Note** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as this field's value.

                             
                           `1`  - Sunday.   
                           `2` - Monday.  
                           `3` - Tuesday.  
                           `4` -  Wednesday.  
                           `5` -  Thursday.  
                           `6` - Friday.  
                           `7` - Saturday.
                        example: '1'
                        default: '1'
                        enum:
                          - '1'
                          - '2'
                          - '3'
                          - '4'
                          - '5'
                          - '6'
                          - '7'
                    description: >-
                      Recurrence object. Use this object only for a meeting with
                      type `8`, a recurring meeting with fixed time. 
                  settings:
                    type: object
                    properties:
                      allow_multiple_devices:
                        type: boolean
                        description: >-
                          Allow attendees to join the meeting from multiple
                          devices. This setting only works for meetings that
                          require
                          [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
                        example: true
                      alternative_hosts:
                        type: string
                        description: >-
                          A semicolon-separated list of the meeting's alternative
                          hosts' email addresses or IDs.
                        example: jchill@example.com;thill@example.com
                      alternative_hosts_email_notification:
                        type: boolean
                        description: >-
                          Flag to determine whether to send email notifications to
                          alternative hosts, default value is true.
                        example: true
                        default: true
                      alternative_host_update_polls:
                        type: boolean
                        description: >-
                          Whether the **Allow alternative hosts to add or edit
                          polls** feature is enabled. This requires Zoom version
                          5.8.0 or higher.
                        example: true
                      approval_type:
                        type: integer
                        description: >-
                          Enable registration and set approval for the
                          registration. Note that this feature requires the host
                          to be of **Licensed** user type. **Registration cannot
                          be enabled for a basic user.**   
                             
                           

                          `0` - Automatically approve.  
                           `1` - Manually approve.  
                           `2` - No registration required.
                        example: 0
                        extensions:
                          x-enum-descriptions:
                            - Automatically Approve
                            - Manually Approve
                            - No Registration Required
                        default: 2
                        enum:
                          - 0
                          - 1
                          - 2
                      approved_or_denied_countries_or_regions:
                        type: object
                        properties:
                          approved_list:
                            type: array
                            description: >-
                              List of countries or regions from where participants
                              can join this meeting. 
                            items:
                              type: string
                              example: CX
                          denied_list:
                            type: array
                            description: >-
                              List of countries or regions from where participants
                              can not join this meeting. 
                            items:
                              type: string
                              example: CA
                          enable:
                            type: boolean
                            description: >-
                              `true` - Setting enabled to either allow users or
                              block users from specific regions to join your
                              meetings.
                               

                              `false` - Setting disabled.
                            example: true
                          method:
                            type: string
                            description: >-
                              Specify whether to allow users from specific regions
                              to join this meeting, or block users from specific
                              regions from joining this meeting.

                               
                              `approve` - Allow users from specific regions or
                              countries to join this meeting. If this setting is
                              selected, include the approved regions or countries
                              in the `approved_list`.  



                              `deny` - Block users from specific regions or
                              countries from joining this meeting. If this setting
                              is selected, include the approved regions
                              orcountries in the `denied_list`
                            example: approve
                            enum:
                              - approve
                              - deny
                        description: >
                          Approve or block users from specific regions or
                          countries from joining this meeting. 
                      audio:
                        type: string
                        description: >-
                          Determine how participants can join the audio portion of
                          the meeting.  
                           `both` - Both Telephony and VoIP.  
                           `telephony` - Telephony only.  
                           `voip` - VoIP only.  
                           `thirdParty` - Third party audio conference.
                        example: telephony
                        extensions:
                          x-enum-descriptions:
                            - Both Telephony and VoIP
                            - Telephony only
                            - VoIP only
                            - Third party audio conference
                        default: both
                        enum:
                          - both
                          - telephony
                          - voip
                          - thirdParty
                      audio_conference_info:
                        maxLength: 2048
                        type: string
                        description: Third party audio conference info.
                        example: test
                      authentication_domains:
                        type: string
                        description: >-
                          If user has configured [Sign Into Zoom with Specified
                          Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                          option, this will list the domains that are
                          authenticated.
                        example: example.com
                      authentication_exception:
                        type: array
                        description: >-
                          The participants added here will receive unique meeting
                          invite links and bypass authentication.
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              description: The participant's email address.
                              format: email
                              example: jchill@example.com
                            name:
                              type: string
                              description: The participant's name.
                              example: Jill Chill
                            join_url:
                              type: string
                              description: URL for participants to join the meeting
                              example: https://example.com/s/11111
                      authentication_name:
                        type: string
                        description: >-
                          Authentication name set in the [authentication
                          profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
                        example: Sign in to Zoom
                      authentication_option:
                        type: string
                        description: Meeting authentication option ID.
                        example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
                      auto_recording:
                        type: string
                        description: |-
                          Automatic recording. 
                           `local` - Record on local.  
                           `cloud` -  Record on cloud.  
                           `none` - Disabled.
                        example: cloud
                        extensions:
                          x-enum-descriptions:
                            - Record to local device
                            - Record to cloud
                            - No Recording
                        default: none
                        enum:
                          - local
                          - cloud
                          - none
                      breakout_room:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Set this field's value to `true` to enable the
                              [breakout room
                              pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)
                              option.
                            example: true
                          rooms:
                            type: array
                            description: Create room(s).
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The breakout room's name.
                                  example: room1
                                participants:
                                  type: array
                                  description: >-
                                    Email addresses of the participants who are to
                                    be assigned to the breakout room.
                                  items:
                                    type: string
                                    example: jchill@example.com
                        description: >-
                          Setting to [pre-assign breakout
                          rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
                      calendar_type:
                        type: integer
                        description: >-
                          The type of calendar integration used to schedule the
                          meeting. 

                          * `1` - [Zoom Outlook
                          add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 

                          * `2` - [Zoom for Google Workspace
                          add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)


                          Works with the `private_meeting` field to determine
                          whether to share details of meetings.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Outlook
                            - Google Calendar
                        enum:
                          - 1
                          - 2
                      close_registration:
                        type: boolean
                        description: Close registration after the event date.
                        example: false
                        default: false
                      cn_meeting:
                        type: boolean
                        description: Host the meeting in China.
                        example: false
                        deprecated: true
                        default: false
                      contact_email:
                        type: string
                        description: Contact email for registration.
                        example: jchill@example.com
                      contact_name:
                        type: string
                        description: Contact name for registration.
                        example: Jill Chill
                      custom_keys:
                        maxItems: 10
                        type: array
                        description: Custom keys and values assigned to the meeting.
                        items:
                          type: object
                          properties:
                            key:
                              maxLength: 64
                              type: string
                              description: Custom key associated with the user.
                              example: key1
                            value:
                              maxLength: 256
                              type: string
                              description: Value of the custom key associated with the user.
                              example: value1
                      email_notification:
                        type: boolean
                        description: >-
                          Whether to send email notifications to [alternative
                          hosts](https://support.zoom.us/hc/en-us/articles/208220166)
                          and [users with scheduling
                          privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege).
                          This value defaults to `true`.
                        example: true
                        default: true
                      encryption_type:
                        type: string
                        description: >-
                          Choose between enhanced encryption and [end-to-end
                          encryption](https://support.zoom.us/hc/en-us/articles/360048660871)
                          when starting or a meeting. When using end-to-end
                          encryption, several features such cloud recording and
                          phone/SIP/H.323 dial-in, will be **automatically
                          disabled**.   


                          `enhanced_encryption` - Enhanced encryption. Encryption
                          is stored in the cloud if you enable this option.   
                           

                          `e2ee` - [End-to-end
                          encryption](https://support.zoom.us/hc/en-us/articles/360048660871).
                          The encryption key is stored in your local device and
                          can not be obtained by anyone else. Enabling this
                          setting also **disables** the features join before host,
                          cloud recording, streaming, live transcription, breakout
                          rooms, polling, 1:1 private chat, and meeting reactions.
                        example: enhanced_encryption
                        enum:
                          - enhanced_encryption
                          - e2ee
                      enforce_login:
                        type: boolean
                        description: >-
                          Only signed in users can join this meeting.


                          **This field is deprecated and will not be supported in
                          the future.**    
                             
                           As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
                        example: true
                        deprecated: true
                      enforce_login_domains:
                        type: string
                        description: >-
                          Only signed in users with specified domains can join
                          meetings.


                          **This field is deprecated and will not be supported in
                          the future.**    
                             
                           As an alternative, use the `meeting_authentication`, `authentication_option`. and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
                        example: example.com
                        deprecated: true
                      focus_mode:
                        type: boolean
                        description: >-
                          Whether the [**Focus Mode**
                          feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode)
                          is enabled when the meeting starts.
                        example: true
                      global_dial_in_countries:
                        type: array
                        description: List of global dial-in countries
                        items:
                          type: string
                          example: US
                      global_dial_in_numbers:
                        type: array
                        description: Global dial-in countries or regions
                        items:
                          type: object
                          properties:
                            city:
                              type: string
                              description: City of the number, if any, such as Chicago.
                              example: New York
                            country:
                              type: string
                              description: Country code, such as BR.
                              example: US
                            country_name:
                              type: string
                              description: Full name of country, such as Brazil.
                              example: US
                            number:
                              type: string
                              description: Phone number, such as +1 2332357613.
                              example: +1 1000200200
                            type:
                              type: string
                              description: 'Type of number. '
                              example: toll
                              enum:
                                - toll
                                - tollfree
                      host_video:
                        type: boolean
                        description: Start video when the host joins the meeting.
                        example: true
                      in_meeting:
                        type: boolean
                        description: Host meeting in India.
                        example: false
                        deprecated: true
                        default: false
                      jbh_time:
                        type: integer
                        description: >-
                          If the value of `join_before_host` field is set to true,
                          use this field to indicate time limits for a participant
                          to join a meeting before a host.


                          *  `0` - Allow participant to join anytime.

                          *  `5` - Allow participant to join 5 minutes before
                          meeting start time.
                           * `10` - Allow participant to join 10 minutes before meeting start time.
                        example: 0
                        enum:
                          - 0
                          - 5
                          - 10
                      join_before_host:
                        type: boolean
                        description: >-
                          Allow participants to join the meeting before the host
                          starts the meeting. Only used for scheduled or recurring
                          meetings.
                        example: true
                        default: false
                      language_interpretation:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable [language
                              interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                              for the meeting.
                            example: true
                          interpreters:
                            type: array
                            description: >-
                              Information about the meeting's language
                              interpreters.
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The interpreter's email address.
                                  format: email
                                  example: interpreter@example.com
                                languages:
                                  type: string
                                  description: >-
                                    A comma-separated list of the interpreter's
                                    languages. The string must contain two
                                    [country
                                    IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                                    For example, if the interpreter will translate
                                    from English to Chinese, then this value will
                                    be `US,CN`.
                                  example: US,FR
                        description: >-
                          The meeting's [language interpretation
                          settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                          Make sure to add the language in the web portal in order
                          to use it in the API. See link for details. 


                          **Note:** This feature is only available for certain
                          Meeting add-on, Education, and Business and higher
                          plans. If this feature is not enabled on the host's
                          account, this setting will **not** be applied to the
                          meeting.
                      sign_language_interpretation:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable [sign language
                              interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                              for the meeting.
                            example: true
                          interpreters:
                            maximum: 20
                            type: array
                            description: >-
                              Information about the meeting's sign language
                              interpreters.
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The interpreter's email address.
                                  format: email
                                  example: interpreter@example.com
                                sign_language:
                                  type: string
                                  description: |-
                                    The interpreter's sign language. 

                                     To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                                  example: American
                        description: >-
                          The meeting's [sign language interpretation
                          settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                          Make sure to add the language in the web portal in order
                          to use it in the API. See link for details. 


                          **Note:** If this feature is not enabled on the host's
                          account, this setting will **not** be applied to the
                          meeting.
                      meeting_authentication:
                        type: boolean
                        description: '`true`- Only authenticated users can join meetings.'
                        example: true
                      meeting_invitees:
                        type: array
                        description: A list of the meeting's invitees.
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              description: The invitee's email address.
                              format: email
                              example: jchil@example.com
                      mute_upon_entry:
                        type: boolean
                        description: Mute participants upon entry.
                        example: false
                        default: false
                      participant_video:
                        type: boolean
                        description: Start video when participants join the meeting.
                        example: false
                      private_meeting:
                        type: boolean
                        description: Whether the meeting is set as private.
                        example: false
                      registrants_confirmation_email:
                        type: boolean
                        description: |-
                          Whether to send registrants an email confirmation.
                          * `true` - Send a confirmation email.
                          * `false` - Do not send a confirmation email.
                        example: true
                      registrants_email_notification:
                        type: boolean
                        description: >-
                          Whether to send registrants email notifications about
                          their registration approval, cancellation, or rejection.


                          * `true` - Send an email notification.

                          * `false` - Do not send an email notification.

                           Set this value to `true` to also use the `registrants_confirmation_email` parameter.
                        example: true
                      registration_type:
                        type: integer
                        description: >-
                          Registration type. Used for recurring meeting with fixed
                          time only.
                           `1` - Attendees register once and can attend any of the occurrences.  
                           `2` - Attendees need to register for each occurrence to attend.  
                           `3` - Attendees register once and can choose one or more occurrences to attend.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - >-
                              Attendees register once and can attend any of the
                              occurrences
                            - >-
                              Attendees need to register for each occurrence to
                              attend
                            - >-
                              Attendees register once and can choose one or more
                              occurrences to attend
                        default: 1
                        enum:
                          - 1
                          - 2
                          - 3
                      show_share_button:
                        type: boolean
                        description: >-
                          Show social share buttons on the meeting registration
                          page.

                          This setting only works for meetings that require
                          [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
                        example: true
                      use_pmi:
                        type: boolean
                        description: >-
                          Use a [personal meeting ID
                          (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                          Only used for scheduled meetings and recurring meetings
                          with no fixed time.
                        example: false
                        default: false
                      waiting_room:
                        type: boolean
                        description: Enable waiting room.
                        example: false
                        default: false
                      watermark:
                        type: boolean
                        description: Add a watermark when viewing a shared screen.
                        example: false
                        default: false
                      host_save_video_order:
                        type: boolean
                        description: >-
                          Whether the **Allow host to save video order** feature
                          is enabled.
                        example: true
                      internal_meeting:
                        type: boolean
                        description: Whether to set the meeting as an internal meeting.
                        example: false
                        default: false
                      continuous_meeting_chat:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable the **Enable continuous meeting
                              chat** setting.
                            example: true
                          auto_add_invited_external_users:
                            type: boolean
                            description: >-
                              Whether to enable the **Automatically add invited
                              external users** setting.
                            example: true
                        description: >-
                          Information about the **Enable continuous meeting chat**
                          feature.
                      participant_focused_meeting:
                        type: boolean
                        description: >-
                          Whether to set the meeting as a participant focused
                          meeting.
                        example: false
                        default: false
                      resources:
                        type: array
                        description: The meeting's resources.
                        items:
                          type: object
                          properties:
                            resource_type:
                              type: string
                              description: The resource type.
                              example: whiteboard
                              enum:
                                - whiteboard
                            resource_id:
                              type: string
                              description: The resource ID.
                              example: X4Hy02w3QUOdskKofgb9Jg
                            permission_level:
                              type: string
                              description: >-
                                The permission levels for users to access the
                                whiteboard. 

                                * `editor` - Users with link access can edit the
                                board. 

                                * `commenter` - Users with link access can comment
                                on the board. 

                                * `viewer` - Users with link access can view the
                                board.
                              example: editor
                              default: editor
                              enum:
                                - editor
                                - commenter
                                - viewer
                      auto_start_meeting_summary:
                        type: boolean
                        description: Whether to automatically start meeting summary.
                        example: false
                        default: false
                      auto_start_ai_companion_questions:
                        type: boolean
                        description: Whether to automatically start AI Companion questions.
                        example: false
                        default: false
                    description: Meeting settings.
                  start_time:
                    type: string
                    description: >-
                      Meeting start time. When using a format like
                      `yyyy-MM-dd'T'HH:mm:ss'Z'`, always use GMT time. When using
                      a format like `yyyy-MM-dd'T'HH:mm:ss`, use local time and
                      specify the time zone. Only used for scheduled meetings and
                      recurring meetings with a fixed time.
                    format: date-time
                    example: '2022-03-25T07:29:29Z'
                  template_id:
                    type: string
                    description: >-
                      Unique identifier of the meeting template. 


                      [Schedule the meeting from a meeting
                      template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates#h_86f06cff-0852-4998-81c5-c83663c176fb).
                      Retrieve this field's value by calling the [List meeting
                      templates](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/listMeetingTemplates)
                      API.
                    example: 5Cj3ceXoStO6TGOVvIOVPA==
                  timezone:
                    type: string
                    description: >-
                      The timezone to assign to the `start_time` value. Only use
                      this field ifor scheduled or recurring meetings with a fixed
                      time.


                      For a list of supported timezones and their formats, see our
                      [timezone
                      list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
                    example: America/Los_Angeles
                  topic:
                    maxLength: 200
                    type: string
                    description: Meeting topic.
                    example: My Meeting
                  tracking_fields:
                    type: array
                    description: Tracking fields.
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Tracking fields type.
                          example: field1
                        value:
                          type: string
                          description: Tracking fields value.
                          example: value1
                  type:
                    type: integer
                    description: |-
                      Meeting types.
                       `1` - Instant meeting.  
                       `2` - Scheduled meeting.  
                       `3` - Recurring meeting with no fixed time.  
                       `8` - Recurring meeting with a fixed time.
                    example: 2
                    extensions:
                      x-enum-descriptions:
                        - Instant Meeting
                        - Scheduled Meeting
                        - Recurring Meeting with no fixed time
                        - Recurring Meeting with fixed time
                    default: 2
                    enum:
                      - 1
                      - 2
                      - 3
                      - 8
                description: Meeting object.
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Meeting updated.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `3161` <br>
               Your user account is not allowed meeting hosting and scheduling capabilities. <br>
              **Error Code:** `300` <br>
               The value that you entered in the `schedule_for` field is invalid. Enter a valid value and try again. <br>
              **Error Code:** `300` <br>
               Invalid `enforce_login_domains`. Separate multiple domains with semicolons. <br>
              **Error Code:** `3000` <br>
               Cannot access webinar info. <br>
              **Error Code:** `3000` <br>
               Instant meetings do not support the `schedule_for` parameter, and you can't schedule an instant meeting for another user. <br>
              **Error Code:** `3000` <br>
               Users in '{userId}' have been blocked from joining meetings and webinars. To unblock them, go to the **Settings** page in the Zoom web portal and update **Block users in specific domains from joining meetings and webinars**. <br>
              **Error Code:** `3000` <br>
               You cannot schedule a meeting for {userId} <br>
              **Error Code:** `3000` <br>
               Prescheduling is only available for scheduled meetings (type 2) and recurring meetings with no fixed time (type 3). <br>
              **Error Code:** `3000` <br>
               Unable to schedule for a user outside of your account for a meeting with continuous chat. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `3001` <br>
               Meeting does not exist: {meetingId}. <br>
          '429':
            description: |-
              **HTTP Status Code:** `429` <br>
               Too Many Requests  

               
        security:
          - openapi_oauth:
              - meeting:write
              - meeting:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - meeting:write
            - meeting:write:admin
    /meetings/{meetingId}/batch_polls:
      post:
        tags:
          - Meetings
        summary: Perform batch poll creation
        description: >-
          Polls allow the meeting host to survey attendees. Create batch
          [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
          for a meeting.  
             
           

          **Prerequisites**:  
           
          * Host user type must be **Pro** or higher plan.

          * Polling feature must be enabled in the host's account.

          * Meeting must be a scheduled meeting. Instant meetings do not have
          polling features enabled.


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: createBatchPolls
        parameters:
          - name: meetingId
            in: path
            required: true
            schema:
              type: string
              example: '93398114182'
        requestBody:
          description: Batch Meeting poll object
          content:
            application/json:
              schema:
                type: object
                properties:
                  polls:
                    maxItems: 25
                    minItems: 1
                    type: array
                    description: Information about the meeting's polls.
                    items:
                      type: object
                      properties:
                        anonymous:
                          type: boolean
                          description: >-
                            Whether to allow meeting participants to answer poll
                            questions anonymously: 

                            * `true` &mdash; Anonymous polls enabled. 

                            * `false` &mdash; Participants cannot answer poll
                            questions anonymously. 


                            This value defaults to `false`.
                          example: false
                          default: false
                        poll_type:
                          type: integer
                          description: >-
                            The type of poll: 

                            * `1` &mdash; Poll. 

                            * `2` &mdash; Advanced Poll. This feature must be
                            enabled in your Zoom account. 

                            * `3` &mdash; Quiz. This feature must be enabled in
                            your Zoom account. 

                             This value defaults to `1`.
                          example: 2
                          default: 1
                          enum:
                            - 1
                            - 2
                            - 3
                        questions:
                          minLength: 1
                          required:
                            - name
                            - type
                          type: array
                          description: Information about the poll's questions.
                          items:
                            type: object
                            properties:
                              answer_max_character:
                                type: integer
                                description: >-
                                  The allowed maximum number of characters. This
                                  field only applies to `short_answer` and
                                  `long_answer` polls: 

                                  * For `short_answer` polls, a maximum of 500
                                  characters. 

                                  * For `long_answer` polls, a maximum of 2,000
                                  characters.
                                example: 200
                              answer_min_character:
                                minimum: 1
                                type: integer
                                description: >-
                                  The allowed minimum number of characters. This
                                  field only applies to `short_answer` and
                                  `long_answer` polls. You must provide at least a
                                  **one** character minimum value.
                                example: 1
                              answer_required:
                                type: boolean
                                description: >-
                                  Whether participants must answer the question: 

                                  * `true` &mdash; The participant must answer the
                                  question. 

                                  * `false` &mdash; The participant does not need
                                  to answer the question. 


                                  **Note:** 

                                  * When the poll's `type` value is `1` (Poll),
                                  this value defaults to `true`. 

                                  * When the poll's `type` value is the `2`
                                  (Advanced Poll) or `3` (Quiz) values, this value
                                  defaults to `false`.
                                example: false
                                default: false
                              answers:
                                minItems: 2
                                type: array
                                description: >-
                                  The poll question's available answers. This
                                  field requires a **minimum** of two answers. 


                                  * For `single` and `multiple` polls, you can
                                  only provide a maximum of 10 answers. 

                                  * For `matching` polls, you can only provide a
                                  maximum of 16 answers. 

                                  * For `rank_order` polls, you can only provide a
                                  maximum of seven answers.
                                items:
                                  type: string
                                  example: Extremely useful
                              case_sensitive:
                                type: boolean
                                description: >-
                                  Whether the correct answer is case sensitive.
                                  This field only applies to `fill_in_the_blank`
                                  polls: 

                                  * `true` &mdash; The answer is case-sensitive. 

                                  * `false` &mdash; The answer is not
                                  case-sensitive. 


                                  This value defaults to `false`.
                                example: false
                                default: false
                              name:
                                maxLength: 255
                                type: string
                                description: >-
                                  The poll question's title, up to 255
                                  characters. 


                                  For `fill_in_the_blank` polls, this field is the
                                  poll's question. For each value that the user
                                  must fill in, ensure that there are the same
                                  number of `right_answers` values.
                                example: How useful was this meeting?
                              prompts:
                                type: array
                                description: >-
                                  Information about the prompt questions. This
                                  field only applies to `matching` and
                                  `rank_order` polls. You **must** provide a
                                  minimum of two prompts, up to a maximum of 10
                                  prompts.
                                items:
                                  type: object
                                  properties:
                                    prompt_question:
                                      type: string
                                      description: The question prompt's title.
                                      example: How are you?
                                    prompt_right_answers:
                                      type: array
                                      description: >-
                                        The question prompt's correct answers: 

                                        * For `matching` polls, you must provide a
                                        minimum of two correct answers, up to a
                                        maximum of 10 correct answers. 

                                        * For `rank_order` polls, you can only
                                        provide one correct answer.
                                      items:
                                        type: string
                                        example: Good
                              rating_max_label:
                                type: string
                                description: >-
                                  The high score label used for the
                                  `rating_max_value` field. 


                                  This field only applies to the `rating_scale`
                                  poll.
                                example: Extremely Likely
                              rating_max_value:
                                maximum: 10
                                type: integer
                                description: >-
                                  The rating scale's maximum value, up to a
                                  maximum value of 10. 


                                  This field only applies to the `rating_scale`
                                  poll.
                                example: 4
                              rating_min_label:
                                type: string
                                description: >-
                                  The low score label used for the
                                  `rating_min_value` field. 


                                  This field only applies to the `rating_scale`
                                  poll.
                                example: Not likely
                              rating_min_value:
                                minimum: 1
                                type: integer
                                description: >-
                                  The rating scale's minimum value. This value
                                  cannot be less than zero. 


                                  This field only applies to the `rating_scale`
                                  poll.
                                example: 1
                              right_answers:
                                minItems: 1
                                type: array
                                description: >-
                                  The poll question's correct answer(s). This
                                  field is **required** if the poll's `type` value
                                  is `3` (Quiz). 

                                   For `single` and `matching` polls, this field only accepts one answer.
                                items:
                                  type: string
                                  example: Good
                              show_as_dropdown:
                                type: boolean
                                description: >-
                                  Whether to display the radio selection as a
                                  drop-down box: 

                                  * `true` &mdash; Show as a drop-down box. 

                                  * `false` &mdash; Do not show as a drop-down
                                  box. 


                                  This value defaults to `false`.
                                example: false
                                default: false
                              type:
                                type: string
                                description: >-
                                  The poll's question and answer type: 

                                  * `single` &mdash; Single choice. 

                                  * `multiple` &mdash; Multiple choice. 

                                  * `matching` &mdash; Matching. 

                                  * `rank_order` &mdash; Rank order. 

                                  * `short_answer` &mdash; Short answer. 

                                  * `long_answer` &mdash; Long answer. 

                                  * `fill_in_the_blank` &mdash; Fill in the
                                  blank. 

                                  * `rating_scale` &mdash; Rating scale.
                                example: single
                                extensions:
                                  x-enum-descriptions:
                                    - Single choice
                                    - Multiple choice
                                    - Matching
                                    - Rank order
                                    - Short answer
                                    - Long answer
                                    - Fill in the blank
                                    - Rating scale
                                enum:
                                  - single
                                  - multiple
                                  - matching
                                  - rank_order
                                  - short_answer
                                  - long_answer
                                  - fill_in_the_blank
                                  - rating_scale
                        title:
                          maxLength: 64
                          type: string
                          description: The poll's title, up to 64 characters.
                          example: Learn something new
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Meeting Poll Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    polls:
                      type: array
                      items:
                        type: object
                        properties:
                          anonymous:
                            type: boolean
                            description: >-
                              Whether to allow meeting participants to answer poll
                              questions anonymously: 

                              * `true` &mdash; Anonymous polls enabled. 

                              * `false` &mdash; Participants cannot answer poll
                              questions anonymously.
                            example: true
                          id:
                            type: string
                            description: Meeting Poll ID
                            example: QalIoKWLTJehBJ8e1xRrbQ
                          poll_type:
                            type: integer
                            description: >-
                              The type of poll: 

                              * `1` &mdash; Poll. 

                              * `2` &mdash; Advanced Poll. This feature must be
                              enabled in your Zoom account. 

                              * `3` &mdash; Quiz. This feature must be enabled in
                              your Zoom account.
                            example: 2
                            enum:
                              - 1
                              - 2
                              - 3
                          questions:
                            type: array
                            description: Information about the poll's questions.
                            items:
                              type: object
                              properties:
                                answer_max_character:
                                  type: integer
                                  description: >-
                                    The allowed maximum number of characters. This
                                    field only returns for `short_answer` and
                                    `long_answer` polls.
                                  example: 200
                                answer_min_character:
                                  type: integer
                                  description: >-
                                    The allowed minimum number of characters. This
                                    field only returns for `short_answer` and
                                    `long_answer` polls.
                                  example: 1
                                answer_required:
                                  type: boolean
                                  description: >-
                                    Whether participants must answer the
                                    question: 

                                    * `true` &mdash; The participant must answer
                                    the question. 

                                    * `false` &mdash; The participant does not
                                    need to answer the question.
                                  example: false
                                answers:
                                  type: array
                                  description: The poll question's available answers.
                                  items:
                                    type: string
                                    example: Extremely useful
                                case_sensitive:
                                  type: boolean
                                  description: >-
                                    Whether the correct answer is case sensitive.
                                    This field only returns for
                                    `fill_in_the_blank` polls: 

                                    * `true` &mdash; The answer is
                                    case-sensitive. 

                                    * `false` &mdash; The answer is not
                                    case-sensitive.
                                  example: false
                                  default: false
                                name:
                                  type: string
                                  description: >-
                                    The poll question's title. For
                                    `fill_in_the_blank` polls, this field is the
                                    poll's question.
                                  example: How useful was this meeting?
                                prompts:
                                  type: array
                                  description: >-
                                    Information about the prompt questions. This
                                    object only returns for `matching` and
                                    `rank_order` polls.
                                  items:
                                    type: object
                                    properties:
                                      prompt_question:
                                        type: string
                                        description: The question prompt's title.
                                        example: How are you?
                                      prompt_right_answers:
                                        type: array
                                        description: The question prompt's correct answers.
                                        items:
                                          type: string
                                          example: Good
                                rating_max_label:
                                  type: string
                                  description: >-
                                    The high score label used for the
                                    `rating_max_value` field. This field only
                                    returns for `rating_scale` polls.
                                  example: Extremely Likely
                                rating_max_value:
                                  maximum: 10
                                  type: integer
                                  description: >-
                                    The rating scale's maximum value. This field
                                    only returns for `rating_scale` polls.
                                  example: 4
                                rating_min_label:
                                  type: string
                                  description: >-
                                    The low score label used for the
                                    `rating_min_value` field. This field only
                                    returns for `rating_scale` polls.
                                  example: Not likely
                                rating_min_value:
                                  type: integer
                                  description: >-
                                    The rating scale's minimum value. This field
                                    only returns for `rating_scale` polls.
                                  example: 0
                                right_answers:
                                  type: array
                                  description: The poll question's correct answer(s).
                                  items:
                                    type: string
                                    example: Good
                                show_as_dropdown:
                                  type: boolean
                                  description: >-
                                    Whether to display the radio selection as a
                                    drop-down box: 

                                    * `true` &mdash; Show as a drop-down box. 

                                    * `false` &mdash; Do not show as a drop-down
                                    box.
                                  example: false
                                type:
                                  type: string
                                  description: >-
                                    The poll's question and answer type: 

                                    * `single` &mdash; Single choice. 

                                    * `multiple` &mdash; Multiple choice. 

                                    * `matching` &mdash; Matching. 

                                    * `rank_order` &mdash; Rank order. 

                                    * `short_answer` &mdash; Short answer. 

                                    * `long_answer` &mdash; Long answer. 

                                    * `fill_in_the_blank` &mdash; Fill in the
                                    blank. 

                                    * `rating_scale` &mdash; Rating scale.
                                  example: single
                                  extensions:
                                    x-enum-descriptions:
                                      - Single choice
                                      - Multiple choice
                                      - Matching
                                      - Rank order
                                      - Short answer
                                      - Long answer
                                      - Fill in the blank
                                      - Rating scale
                                  enum:
                                    - single
                                    - multiple
                                    - matching
                                    - rank_order
                                    - short_answer
                                    - long_answer
                                    - fill_in_the_blank
                                    - rating_scale
                          status:
                            type: string
                            description: |-
                              Status of the Meeting Poll:  
                               `notstart` - Poll not started  
                               `started` - Poll started  
                               `ended` - Poll ended  
                               `sharing` - Sharing poll results
                            example: notstart
                            extensions:
                              x-enum-descriptions:
                                - Poll not start
                                - Poll started
                                - Poll ended
                                - Poll is sharing
                            enum:
                              - notstart
                              - started
                              - ended
                              - sharing
                          title:
                            type: string
                            description: Title for the Poll
                            example: Learn something new
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Invalid Meeting ID.


              **Error Code:** `300` <br>

              Meeting id does not exist.


              **Error Code:** `3000` <br>

              Cannot access meeting information.


              **Error Code:** `3001` <br>

              Meeting does not exist: {meetingId}.<br>


              **Error Code:** `4400` <br>

              * You can only add a maximum of 50 polls. 

              * Meeting polls disabled. To enable this feature, enable the
              "Meeting Polls/Quizzes" setting in the Zoom web portal's "Settings"
              interface. 

              * Advanced meeting polls disabled. To enable this feature, enable
              the "Allow host to create advanced polls and quizzes" setting in the
              Zoom web portal's "Settings" interface.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/batch_registrants:
      post:
        tags:
          - Meetings
        summary: Perform batch registration
        description: >-
          Register up to 30 registrants at once for a meeting that requires
          [registration](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).   
           

          **Prerequisites:**  
           
          * The meeting host must be a Licensed user.

          * The meeting must require registration and should be of type `2`, i.e.,
          they should be scheduled meetings. Instant meetings and Recurring
          meetings are not supported by this API.  
             
           


          **Scopes:** `meeting:write`,`meeting:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: addBatchRegistrants
        parameters:
          - name: meetingId
            in: path
            description: Unique identifier of the meeting (Meeting Number).
            required: true
            schema:
              type: string
              example: '91498058927'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  auto_approve:
                    type: boolean
                    description: >-
                      If a meeting was scheduled with approval_type `1` (manual
                      approval), but you would like to automatically approve the
                      registrants that are added via this API, you can set the
                      value of this field to `true`. 


                      You **cannot** use this field to change approval setting for
                      a meeting  that was originally scheduled with approval_type
                      `0` (automatic approval).
                    example: true
                  registrants_confirmation_email:
                    type: boolean
                    description: Send confirmation Email to Registrants
                    example: true
                  registrants:
                    type: array
                    items:
                      required:
                        - email
                        - first_name
                      type: object
                      properties:
                        email:
                          type: string
                          description: Email address of the registrant.
                          format: email
                          example: jchill@example.com
                        first_name:
                          type: string
                          description: First name of the registrant.
                          example: Jill
                        last_name:
                          type: string
                          description: Last name of the registrant.
                          example: Chill
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `200` **OK**   
               
              Registrants added.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    registrants:
                      type: array
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: Email address of the registrant.
                            example: jchill@example.com
                          join_url:
                            type: string
                            description: >-
                              Unique URL using which registrant can join the
                              meeting.
                            example: https://example.com/j/11111
                          registrant_id:
                            type: string
                            description: Unique identifier of the registrant.
                            example: 9tboDiHUQAeOnbmudzWa5g
                          participant_pin_code:
                            type: integer
                            description: >-
                              The participant PIN code is used to authenticate
                              audio participants before they join the meeting.
                            format: int64
                            example: 380303
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `3038` <br>

              Meeting is over, you can not register now. If you have any
              questions, please contact the Meeting host.<br><br>


              **Error Code:** `303` <br>

              This API can only be used for scheduled meeting(meeting type: 2).
              Batch registration is not supported for other meeting types.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `3001` <br>
              Meeting does not exist: {meetingId}.<br>

              **Error Code:** `3043` <br>
              Meeting has reached maximum attendee capacity.<br>

              **Error Code:** `404` <br>
              Registration has not been enabled for this meeting: {meetingId}.

        security:
          - openapi_oauth:
              - meeting:write
              - meeting:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write
            - meeting:write:admin
    /meetings/{meetingId}/invitation:
      get:
        tags:
          - Meetings
        summary: Get meeting invitation
        description: >-
          Retrieve the meeting invitation note for a specific meeting.


          **Scopes:** `meeting:read`,`meeting:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: meetingInvitation
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Meeting invitation returned.
            content:
              application/json:
                schema:
                  title: Meeting Invitation
                  type: object
                  properties:
                    invitation:
                      type: string
                      description: Meeting invitation.
                      example: "Jill Chill is inviting you to a scheduled Zoom meeting.\r\n\r\nTopic: My Meeting\r\nTime: Mar 25, 2022 03:32 PM America, Los_Angeles\r\n\r\nJoin Zoom Meeting\r\nhttps://zoom.us/j/55544443210?pwd=8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1\r\n\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\nOne tap mobile\r\n+5678901234,,55544443210#,,,,*123456# US (gg)\r\n\r\nDial by your location\r\n+1 15550100 US (gg)\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\nFind your local number: https://zoom.us/u/ab12cdef34jh\r\n\r\nJoin by SIP\r\n5550100@zoomcrc.com\r\n\r\nJoin by H.323\r\n192.0.2.1 (US West)\r\nMeeting ID: 555 4444 3210\r\nPasscode: 123456\r\n\r\n"
                    sip_links:
                      type: array
                      description: A list of SIP phone addresses.
                      items:
                        type: string
                        example: 5550100@zoomcrc.com
                  description: Meeting invitation details.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `3161` <br>
               Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
        security:
          - openapi_oauth:
              - meeting:read
              - meeting:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - meeting:read
            - meeting:read:admin
    /meetings/{meetingId}/invite_links:
      post:
        tags:
          - Meetings
        summary: Create meeting's invite links
        description: >-
          Create a batch of invitation links for a meeting.




          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingInviteLinksCreate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          content:
            application/json:
              schema:
                title: Invite Links
                type: object
                properties:
                  attendees:
                    maxItems: 500
                    minItems: 1
                    type: array
                    description: The attendees list.
                    items:
                      required:
                        - name
                      type: object
                      properties:
                        name:
                          maxLength: 64
                          type: string
                          description: User display name.
                          example: Jill Chill
                  ttl:
                    maximum: 7776000
                    minimum: 0
                    type: integer
                    description: |-
                      The invite link's expiration time, in seconds. 

                      This value defaults to `7200`.
                    format: int64
                    example: 1000
                    default: 7200
                description: Invite Links
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Meeting invitation links created.
            content:
              application/json:
                schema:
                  title: Invite Links
                  type: object
                  properties:
                    attendees:
                      type: array
                      description: The attendee list.
                      items:
                        type: object
                        properties:
                          join_url:
                            type: string
                            description: The URL to join the meeting.
                            example: https://example.com/j/11111
                          name:
                            type: string
                            description: The user's display name.
                            example: Jill Chill
                  description: Invite links response.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              * Meeting ID does not exist. 

              * Invalid meeting ID.


              **Error Code:** `3000` <br>

              Cannot access webinar information.


              **Error Code:** `3001` <br>

              Meeting does not exist: {meetingId}


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/jointoken/live_streaming:
      get:
        tags:
          - Meetings
        summary: Get a meeting's join token for live streaming
        description: >-
          Get a meeting's join token to allow live streaming. The join token
          allows a recording bot implemented using Zoom meeting SDK to connect to
          a Zoom meeting &quot;hosted by the issuer of the token&quot;, and can
          call the streaming method automatically. It supports both regular live
          streaming, and raw streaming. 


          **Prerequisites:** 

          * A Pro or higher plan for the meeting host. 

          * The **Allow livestreaming of meetings** user setting enabled in the
          Zoom web portal.


          **Scopes:**
          `meeting_token:read:admin:live_streaming`,`meeting_token:read:live_streaming`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingLiveStreamingJoinToken
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Meeting live streaming token returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    expire_in:
                      type: integer
                      description: >-
                        The number of seconds the join token is valid for before
                        it expires. This value always returns `120`.
                      format: int64
                      example: 120
                      enum:
                        - 120
                    token:
                      type: string
                      description: The join token.
                      example: 2njt50mj
                  description: Information about the meeting's join token.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Invalid meeting ID.


              **Error Code:** `3000` <br>

              Cannot access Webinar information.


              **Error Code:** `124` <br>

              This API only supports OAuth2 authorization.


              **Error Code:** `3000` <br>

              Not allowed to start live streaming. To use this feature, enable the
              "Allow livestreaming of meetings" setting in the "Settings" page of
              the Zoom web portal.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `300` <br>
              Meeting ID does not exist.

              **Error Code:** `3001` <br>
              Meeting does not exist: {meetingId}

        security:
          - openapi_oauth:
              - meeting_token:read:admin:live_streaming
              - meeting_token:read:live_streaming
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting_token:read:admin:live_streaming
            - meeting_token:read:live_streaming
    /meetings/{meetingId}/jointoken/local_archiving:
      get:
        tags:
          - Meetings
        summary: Get a meeting's archive token for local archiving
        description: >-
          Get a meeting's archive token to allow local archiving. The archive
          token allows a meeting SDK app or bot to get archive permission to
          access the meeting's raw audio and video media stream in real-time. 


          **Prerequisites:** 

          * A Pro or higher plan for the meeting host. 

          * The **Archive meetings and webinars** account setting enabled in the
          Zoom web portal.


          **Scopes:** `meeting_token:read:admin:local_archiving`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingLocalArchivingArchiveToken
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Meeting local archiving token returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    expire_in:
                      type: integer
                      description: >-
                        The number of seconds the archive token is valid for
                        before it expires. This value always returns `120`.
                      format: int64
                      example: 120
                      enum:
                        - 120
                    token:
                      type: string
                      description: The archive token.
                      example: 2njt50mj
                  description: Information about the meeting's local archive token.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Invalid meeting ID.


              **Error Code:** `3000` <br>

              Cannot access Webinar information.


              **Error Code:** `124` <br>

              This API only supports OAuth2 authorization.


              **Error Code:** `3000` <br>

              Not allowed to start local archiving. To use this feature, enable
              the "Archive meetings and webinars" setting in the "Settings" page
              of the Zoom web portal.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `300` <br>
              Meeting ID does not exist.

              **Error Code:** `3001` <br>
              Meeting does not exist: {meetingId}

        security:
          - openapi_oauth:
              - meeting_token:read:admin:local_archiving
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting_token:read:admin:local_archiving
    /meetings/{meetingId}/jointoken/local_recording:
      get:
        tags:
          - Meetings
        summary: Get a meeting's join token for local recording
        description: >-
          Get a meeting's join token to allow for local recording. The join token
          lets a recording bot implemented using Zoom Meeting SDK to connect to a
          Zoom meeting. The recording bot can then automatically start locally
          recording. This supports both regular and raw local recording types. 


          **Prerequisites:** 

          * The **Local recording** user setting enabled in the Zoom web portal.


          **Scopes:**
          `meeting_token:read:local_recording`,`meeting_token:read:admin:local_recording`


          **Granular Scopes:**
          `meeting:read:local_recording_token`,`meeting:read:local_recording_token:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: meetingLocalRecordingJoinToken
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: bypass_waiting_room
            in: query
            description: Whether to bypass the waiting room.
            required: false
            schema:
              type: boolean
              example: true
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Meeting local recording token returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    expire_in:
                      type: integer
                      description: >-
                        The number of seconds the join token is valid for before
                        it expires. This value always returns `120`.
                      format: int64
                      example: 120
                      enum:
                        - 120
                    token:
                      type: string
                      description: The join token.
                      example: 2njt50mj
                  description: Information about the meeting's local recorder join token.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `300` <br>
               Invalid meeting ID. <br>
              **Error Code:** `3000` <br>
               Cannot access Webinar information. <br>
              **Error Code:** `124` <br>
               This API only supports OAuth2 authorization. <br>
              **Error Code:** `3000` <br>
               Not allowed to start local recording. To use this feature, enable the "Local Recording" setting in the "Settings" page of the Zoom web portal. <br>
              **Error Code:** `3161` <br>
               Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `300` <br>
               Meeting ID does not exist. <br>
              **Error Code:** `3001` <br>
               Meeting does not exist: {meetingId}. <br>
        security:
          - openapi_oauth:
              - meeting_token:read:local_recording
              - meeting_token:read:admin:local_recording
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - meeting_token:read:local_recording
            - meeting_token:read:admin:local_recording
          x-granular-scopes:
            - meeting:read:local_recording_token
            - meeting:read:local_recording_token:admin
    /meetings/{meetingId}/livestream:
      get:
        tags:
          - Meetings
        summary: Get livestream details
        description: >-
          Zoom allows users to [livestream a
          meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
          to a custom platform. Get a meeting's livestream configuration details
          such as Stream URL, Stream Key and Page URL.  
             
           
          **Prerequisites:**  
           
          * Meeting host must be a licensed user with a Pro or higher plan.  
           
          * Live streaming details must have been
          [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
          for the meeting.  
             
           


          **Scopes:** `meeting:read:admin`,`meeting:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: getMeetingLiveStreamDetails
        parameters:
          - name: meetingId
            in: path
            description: Unique identifier of the meeting.
            required: true
            schema:
              type: string
              example: '93398114182'
        responses:
          '200':
            description: |+
              **HTTP Status Code:** `200` **OK**  
               
              Live Stream details returned.

            content:
              application/json:
                schema:
                  type: object
                  properties:
                    page_url:
                      type: string
                      description: >-
                        Live streaming page URL. This is the URL using which
                        anyone can view the livestream of the meeting.
                      example: https://example.com/livestream/123
                    stream_key:
                      type: string
                      description: Stream Key.
                      example: contact-ic@example.com
                    stream_url:
                      type: string
                      description: Stream URL.
                      example: https://example.com/livestream
                    resolution:
                      type: string
                      description: >-
                        The number of pixels in each dimension that the video
                        camera can display.
                      example: 720p
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Missing meetingId<br>

              Invalid meetingId<br><br>


              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User {userId} does not exist.

        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
      patch:
        tags:
          - Meetings
        summary: Update a livestream
        description: >-
          Update a meeting's livestream information. Zoom allows users to
          [livestream a
          meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
          to a custom platform.


          **Prerequisites:** 

          * Meeting host must have a Pro license.


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingLiveStreamUpdate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          description: Meeting
          content:
            application/json:
              schema:
                required:
                  - page_url
                  - stream_key
                  - stream_url
                type: object
                properties:
                  page_url:
                    maxLength: 1024
                    type: string
                    description: The live stream page URL.
                    format: uri
                    example: https://example.com/livestream/123
                  stream_key:
                    maxLength: 512
                    type: string
                    description: Stream name and key.
                    example: contact-it@example.com
                  stream_url:
                    maxLength: 1024
                    type: string
                    description: Streaming URL.
                    example: https://example.com/livestream
                  resolution:
                    type: string
                    description: >-
                      The number of pixels in each dimension that the video camera
                      can display, required when a user enables 1080p. Use a value
                      of `720p` or `1080p`
                    example: 720p
                description: Meeting live stream.
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Meeting livestream updated.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}.<br>


              **Error Code:** `3000` <br>

              Cannot access webinar info.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User {userId} does not exist.

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/livestream/status:
      patch:
        tags:
          - Meetings
        summary: Update livestream status
        description: >-
          Zoom allows users to [livestream a
          meeting](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
          to a custom platform. Update the status of a meeting's livestream.  


          **Prerequisites:**

          * Meeting host must have a Pro license.


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **Granular Scopes:**
          `meeting:update:livestream_status`,`meeting:update:livestream_status:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: meetingLiveStreamStatusUpdate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          description: Meeting
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: string
                    description: |-
                      The meeting's livestream status.
                      * `start` - Start a livestream.
                      * `stop` - Stop an ongoing livestream.
                      * `mode` - Control a livestream view at runtime.
                    example: start
                    enum:
                      - start
                      - stop
                      - mode
                  settings:
                    type: object
                    properties:
                      active_speaker_name:
                        type: boolean
                        description: >-
                          Whether to display the name of the active speaker during
                          a meeting's livestream. Use this field if you pass the
                          `start` value for the `action` field.
                        example: true
                      display_name:
                        maxLength: 50
                        minLength: 1
                        type: string
                        description: >-
                          The display name of the meeting's livestream. Use this
                          field if you pass the `start` value for the `action`
                          field.
                        example: Jill Chill
                      layout:
                        type: string
                        description: "The layout of the meeting's livestream. Use this field if you pass the `start` or `mode` value for the `action` field.\r\n* `follow_host` - Follow host view.\r\n* `gallery_view` - Gallery view.\r\n* `speaker_view` - Speaker view."
                        example: follow_host
                        default: follow_host
                        enum:
                          - follow_host
                          - gallery_view
                          - speaker_view
                      close_caption:
                        type: string
                        description: "The livestream's closed caption type for this session. Use this field if you pass the `start` or `mode` value for the `action` field.\r\n* `burnt-in` - Burnt in captions.\r\n* `embedded` - Embedded captions.\r\n* `off` - Turn off captions."
                        example: burnt-in
                        default: burnt-in
                        enum:
                          - burnt-in
                          - embedded
                          - 'off'
                    description: The meeting's livestreaming settings.
                description: The meeting's livestream status.
        responses:
          '204':
            description: '**HTTP Status Code:** `204` <br> Meeting livestream updated.'
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `3000` <br>
               Cannot access webinar info. <br>
              **Error Code:** `3161` <br>
               Your user account is not allowed meeting hosting and scheduling capabilities. <br>
              **Error Code:** `4400` <br>
               End-to-end encrypted meetings currently do not support the livestreaming feature. <br>
              **Error Code:** `300` <br>
               Invalid meeting ID. <br>
              **Error Code:** `4927` <br>
               Meeting {meetingId} has not started. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `3001` <br>
               Meeting does not exist: {meetingId}. <br>
          '429':
            description: |-
              **HTTP Status Code:** `429` <br>
               Too Many Requests  

               
        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
          x-granular-scopes:
            - meeting:update:livestream_status
            - meeting:update:livestream_status:admin
    /meetings/{meetingId}/meeting_summary:
      get:
        tags:
          - Meetings
        summary: Get a meeting summary
        description: >-
          Displays information about a meeting summary.


          **Prerequisites**:

          * Host user type must be Pro or higher plan.

          * The Meeting Summary with AI Companion feature enabled in the host's
          account.

          * E2ee meetings do not have summary feature enabled.


          **Scopes:** `meeting_summary:read:admin`,`meeting_summary:read`


          **Granular Scopes:** `meeting:read:summary`,`meeting:read:summary:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: Getameetingsummary
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's universally unique ID (UUID). When you provide a
              meeting UUID that begins with a `/` character or contains the `//`
              characters, you **must** double-encode the meeting UUID before
              making an API request.
            required: false
            schema:
              type: string
              example: aDYlohsHRtCd4ii1uC2+hA==
        responses:
          '200':
            description: '**HTTP Status Code:** `200`Meeting Poll object returned.'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    meeting_host_id:
                      type: string
                      description: The ID of the user who is set as the meeting host.
                      example: 30R7kT7bTIKSNUFEuH_Qlg
                    meeting_host_email:
                      type: string
                      description: The meeting host's email address.
                      format: email
                      example: jchill@example.com
                    meeting_uuid:
                      type: string
                      description: >
                        The unique meeting ID. 


                        Each meeting instance generates its own meeting UUID.
                        After a meeting ends, a new UUID is generated for the next
                        instance of the meeting.

                         Use the [**List past meeting instances**](https://developers.zoom.us) API to retrieve a list of UUIDs from past meeting instances. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a `/` or contains `//` in it.
                      example: aDYlohsHRtCd4ii1uC2+hA==
                    meeting_id:
                      type: integer
                      description: >-
                        [ The meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) 

                        The meeting's unique identifier in **long** format,
                        represented as int64 data type in JSON. Also known as the
                        meeting number.
                      format: int64
                      example: 97763643886
                    meeting_topic:
                      type: string
                      description: The meeting topic.
                      example: My Meeting
                    meeting_start_time:
                      type: string
                      description: The meeting's start date and time.
                      format: date-time
                      example: '2019-07-15T23:24:52Z'
                    meeting_end_time:
                      type: string
                      description: The meeting's end date and time.
                      format: date-time
                      example: '2020-07-15T23:30:19Z'
                    summary_start_time:
                      type: string
                      description: The summary's start date and time.
                      format: date-time
                      example: '2019-07-15T23:24:52Z'
                    summary_end_time:
                      type: string
                      description: The summary's end date and time.
                      format: date-time
                      example: '2020-07-15T23:30:19Z'
                    summary_created_time:
                      type: string
                      description: The date and time when the meeting summary was created.
                      format: date-time
                      example: '2019-07-15T23:24:52Z'
                    summary_last_modified_time:
                      type: string
                      description: >-
                        The date and time when the meeting summary was last
                        modified.
                      format: date-time
                      example: '2020-07-15T23:30:19Z'
                    summary_title:
                      type: string
                      description: The summary title.
                      example: Meeting summary for my meeting
                    summary_overview:
                      type: string
                      description: The summary overview.
                      example: Meeting overview
                    summary_details:
                      type: array
                      description: The summary content details.
                      items:
                        type: object
                        properties:
                          label:
                            type: string
                            description: The summary label.
                            example: Meeting overview
                          summary:
                            type: string
                            description: The summary content.
                            example: Meeting overview
                        description: The summary detail object.
                    next_steps:
                      type: array
                      description: The next steps.
                      items:
                        type: string
                        description: The next step.
                        example: step1
                    edited_summary:
                      type: object
                      properties:
                        summary_details:
                          type: string
                          description: The user edited summary details.
                          example: Meeting overview
                        next_steps:
                          type: array
                          description: The user edited next steps.
                          items:
                            type: string
                            description: The user edited next step.
                            example: step1
        security:
          - openapi_oauth:
              - meeting_summary:read:admin
              - meeting_summary:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - SmartMeetingSummaryMgt:Read
          x-macro-scopes:
            - meeting_summary:read:admin
            - meeting_summary:read
          x-granular-scopes:
            - meeting:read:summary
            - meeting:read:summary:admin
    /meetings/{meetingId}/polls:
      get:
        tags:
          - Meetings
        summary: List meeting polls
        description: >-
          Polls allow the meeting host to survey attendees. List all
          [polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
          of a meeting.  
             
           

          **Prerequisites**:  
           
          * Host user type must be **Pro** or higher plan.

          * Meeting must be a scheduled meeting. Instant meetings do not have
          polling features enabled.


          **Scopes:** `meeting:read:admin`,`meeting:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingPolls
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: anonymous
            in: query
            description: >-
              Whether to query for polls with the **Anonymous** option enabled: 

              * `true` &mdash; Query for polls with the **Anonymous** option
              enabled. 

              * `false` &mdash; Do not query for polls with the **Anonymous**
              option enabled.
            required: false
            schema:
              type: boolean
              example: true
        responses:
          '200':
            description: |-
              **HTTP Status Code:**   
               
              List polls of a Meeting  returned
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    polls:
                      type: array
                      description: Array of Polls
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID of Poll
                            example: QalIoKWLTJehBJ8e1xRrbQ
                          status:
                            type: string
                            description: |-
                              Status of Poll:  
                               `notstart` - Poll not started  
                               `started` - Poll started  
                               `ended` - Poll ended  
                               `sharing` - Sharing poll results
                            example: notstart
                            extensions:
                              x-enum-descriptions:
                                - Poll not start
                                - Poll started
                                - Poll ended
                                - Poll is sharing
                            enum:
                              - notstart
                              - started
                              - ended
                              - sharing
                          anonymous:
                            type: boolean
                            description: >-
                              Allow meeting participants to answer poll questions
                              anonymously. 


                              This value defaults to `false`.
                            example: true
                            default: false
                          poll_type:
                            type: integer
                            description: >-
                              The type of poll: 

                              * `1` &mdash; Poll. 

                              * `2` &mdash; Advanced Poll. This feature must be
                              enabled in your Zoom account. 

                              * `3` &mdash; Quiz. This feature must be enabled in
                              your Zoom account. 

                               This value defaults to `1`.
                            example: 2
                            enum:
                              - 1
                              - 2
                              - 3
                          questions:
                            type: array
                            description: Information about the poll's questions.
                            items:
                              type: object
                              properties:
                                answer_max_character:
                                  type: integer
                                  description: >-
                                    The allowed maximum number of characters. This
                                    field only applies to `short_answer` and
                                    `long_answer` polls: 

                                    * For `short_answer` polls, a maximum of 500
                                    characters. 

                                    * For `long_answer` polls, a maximum of 2,000
                                    characters.
                                  example: 200
                                answer_min_character:
                                  minimum: 1
                                  type: integer
                                  description: >-
                                    The allowed minimum number of characters. This
                                    field only applies to `short_answer` and
                                    `long_answer` polls. You must provide at least
                                    a **one** character minimum value.
                                  example: 1
                                answer_required:
                                  type: boolean
                                  description: >-
                                    Whether participants must answer the
                                    question: 

                                    * `true` &mdash; The participant must answer
                                    the question. 

                                    * `false` &mdash; The participant does not
                                    need to answer the question. 


                                    **Note:** 

                                    * When the poll's `type` value is `1` (Poll),
                                    this value defaults to `true`. 

                                    * When the poll's `type` value is the `2`
                                    (Advanced Poll) or `3` (Quiz) values, this
                                    value defaults to `false`.
                                  example: false
                                  default: false
                                answers:
                                  minItems: 2
                                  type: array
                                  description: >-
                                    The poll question's available answers. This
                                    field requires a **minimum** of two answers. 


                                    * For `single` and `multiple` polls, you can
                                    only provide a maximum of 10 answers. 

                                    * For `matching` polls, you can only provide a
                                    maximum of 16 answers. 

                                    * For `rank_order` polls, you can only provide
                                    a maximum of seven answers.
                                  items:
                                    type: string
                                    example: Extremely useful
                                case_sensitive:
                                  type: boolean
                                  description: >-
                                    Whether the correct answer is case sensitive.
                                    This field only applies to `fill_in_the_blank`
                                    polls: 

                                    * `true` &mdash; The answer is
                                    case-sensitive. 

                                    * `false` &mdash; The answer is not
                                    case-sensitive. 


                                    This value defaults to `false`.
                                  example: false
                                  default: false
                                name:
                                  maxLength: 255
                                  type: string
                                  description: >-
                                    The poll question, up to 255 characters. 


                                    For `fill_in_the_blank` polls, this field is
                                    the poll's question. For each value that the
                                    user must fill in, ensure that there are the
                                    same number of `right_answers` values.
                                  example: How useful was this meeting?
                                prompts:
                                  type: array
                                  description: >-
                                    Information about the prompt questions. This
                                    field only applies to `matching` and
                                    `rank_order` polls. You **must** provide a
                                    minimum of two prompts, up to a maximum of 10
                                    prompts.
                                  items:
                                    type: object
                                    properties:
                                      prompt_question:
                                        type: string
                                        description: The question prompt's title.
                                        example: How are you?
                                      prompt_right_answers:
                                        type: array
                                        description: >-
                                          The question prompt's correct answers: 

                                          * For `matching` polls, you must provide
                                          a minimum of two correct answers, up to
                                          a maximum of 10 correct answers. 

                                          * For `rank_order` polls, you can only
                                          provide one correct answer.
                                        items:
                                          type: string
                                          example: Good
                                rating_max_label:
                                  type: string
                                  description: >-
                                    The high score label used for the
                                    `rating_max_value` field. 


                                    This field only applies to the `rating_scale`
                                    poll.
                                  example: Extremely Likely
                                rating_max_value:
                                  maximum: 10
                                  type: integer
                                  description: >-
                                    The rating scale's maximum value, up to a
                                    maximum value of 10. 


                                    This field only applies to the `rating_scale`
                                    poll.
                                  example: 4
                                rating_min_label:
                                  type: string
                                  description: >-
                                    The low score label used for the
                                    `rating_min_value` field. 


                                    This field only applies to the `rating_scale`
                                    poll.
                                  example: Not likely
                                rating_min_value:
                                  minimum: 0
                                  type: integer
                                  description: >-
                                    The rating scale's minimum value. This value
                                    cannot be less than zero. 


                                    This field only applies to the `rating_scale`
                                    poll.
                                  example: 0
                                right_answers:
                                  minItems: 1
                                  type: array
                                  description: >-
                                    The poll question's correct answer(s). This
                                    field is **required** if the poll's `type`
                                    value is `3` (Quiz). 

                                     For `single` and `matching` polls, this field only accepts one answer.
                                  items:
                                    type: string
                                    example: Good
                                show_as_dropdown:
                                  type: boolean
                                  description: >-
                                    Whether to display the radio selection as a
                                    drop-down box: 

                                    * `true` &mdash; Show as a drop-down box. 

                                    * `false` &mdash; Do not show as a drop-down
                                    box. 


                                    This value defaults to `false`.
                                  example: false
                                  default: false
                                type:
                                  type: string
                                  description: >-
                                    The poll's question and answer type: 

                                    * `single` &mdash; Single choice. 

                                    * `multiple` &mdash; Multiple choice. 

                                    * `matching` &mdash; Matching. 

                                    * `rank_order` &mdash; Rank order. 

                                    * `short_answer` &mdash; Short answer. 

                                    * `long_answer` &mdash; Long answer. 

                                    * `fill_in_the_blank` &mdash; Fill in the
                                    blank. 

                                    * `rating_scale` &mdash; Rating scale.
                                  example: single
                                  extensions:
                                    x-enum-descriptions:
                                      - Single choice
                                      - Multiple choice
                                      - Matching
                                      - Rank order
                                      - Short answer
                                      - Long answer
                                      - Fill in the blank
                                      - Rating scale
                                  enum:
                                    - single
                                    - multiple
                                    - matching
                                    - rank_order
                                    - short_answer
                                    - long_answer
                                    - fill_in_the_blank
                                    - rating_scale
                          title:
                            maxLength: 64
                            type: string
                            description: The poll's title, up to 64 characters.
                            example: Learn something new
                        title: Meeting and Webinar Polling Object
                        description: Information about meeting and webinar polling.
                    total_records:
                      type: integer
                      description: The number of all records available across pages
                      example: 1
                  title: Poll List
                  description: Poll List
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `4400` <br>

              Meeting polls disabled. To enable this feature, enable the "Meeting
              Polls/Quizzes" setting in the Zoom web portal's "Settings"
              interface.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `404` <br>
              Meeting Poll not found

        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
      post:
        tags:
          - Meetings
        summary: Create a meeting poll
        description: >-
          Polls allow the meeting host to survey attendees. Create a
          [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
          for a meeting.  
             
           

          **Prerequisites**:  
           
          * Host user type must be **Pro** or higher plan.

          * Polling feature must be enabled in the host's account.

          * Meeting must be a scheduled meeting. Instant meetings do not have
          polling features enabled.


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingPollCreate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          description: Meeting poll object
          content:
            application/json:
              schema:
                title: Meeting and Webinar Polling Object
                type: object
                properties:
                  anonymous:
                    type: boolean
                    description: >-
                      Allow meeting participants to answer poll questions
                      anonymously. 


                      This value defaults to `false`.
                    example: true
                    default: false
                  poll_type:
                    type: integer
                    description: >-
                      The type of poll: 

                      * `1` &mdash; Poll. 

                      * `2` &mdash; Advanced Poll. This feature must be enabled in
                      your Zoom account. 

                      * `3` &mdash; Quiz. This feature must be enabled in your
                      Zoom account. 

                       This value defaults to `1`.
                    example: 2
                    enum:
                      - 1
                      - 2
                      - 3
                  questions:
                    type: array
                    description: Information about the poll's questions.
                    items:
                      type: object
                      properties:
                        answer_max_character:
                          type: integer
                          description: >-
                            The allowed maximum number of characters. This field
                            only applies to `short_answer` and `long_answer`
                            polls: 

                            * For `short_answer` polls, a maximum of 500
                            characters. 

                            * For `long_answer` polls, a maximum of 2,000
                            characters.
                          example: 200
                        answer_min_character:
                          minimum: 1
                          type: integer
                          description: >-
                            The allowed minimum number of characters. This field
                            only applies to `short_answer` and `long_answer`
                            polls. You must provide at least a **one** character
                            minimum value.
                          example: 1
                        answer_required:
                          type: boolean
                          description: >-
                            Whether participants must answer the question: 

                            * `true` &mdash; The participant must answer the
                            question. 

                            * `false` &mdash; The participant does not need to
                            answer the question. 


                            **Note:** 

                            * When the poll's `type` value is `1` (Poll), this
                            value defaults to `true`. 

                            * When the poll's `type` value is the `2` (Advanced
                            Poll) or `3` (Quiz) values, this value defaults to
                            `false`.
                          example: false
                          default: false
                        answers:
                          minItems: 2
                          type: array
                          description: >-
                            The poll question's available answers. This field
                            requires a **minimum** of two answers. 


                            * For `single` and `multiple` polls, you can only
                            provide a maximum of 10 answers. 

                            * For `matching` polls, you can only provide a maximum
                            of 16 answers. 

                            * For `rank_order` polls, you can only provide a
                            maximum of seven answers.
                          items:
                            type: string
                            example: Extremely useful
                        case_sensitive:
                          type: boolean
                          description: >-
                            Whether the correct answer is case sensitive. This
                            field only applies to `fill_in_the_blank` polls: 

                            * `true` &mdash; The answer is case-sensitive. 

                            * `false` &mdash; The answer is not case-sensitive. 


                            This value defaults to `false`.
                          example: false
                          default: false
                        name:
                          maxLength: 255
                          type: string
                          description: >-
                            The poll question, up to 255 characters. 


                            For `fill_in_the_blank` polls, this field is the
                            poll's question. For each value that the user must
                            fill in, ensure that there are the same number of
                            `right_answers` values.
                          example: How useful was this meeting?
                        prompts:
                          type: array
                          description: >-
                            Information about the prompt questions. This field
                            only applies to `matching` and `rank_order` polls. You
                            **must** provide a minimum of two prompts, up to a
                            maximum of 10 prompts.
                          items:
                            type: object
                            properties:
                              prompt_question:
                                type: string
                                description: The question prompt's title.
                                example: How are you?
                              prompt_right_answers:
                                type: array
                                description: >-
                                  The question prompt's correct answers: 

                                  * For `matching` polls, you must provide a
                                  minimum of two correct answers, up to a maximum
                                  of 10 correct answers. 

                                  * For `rank_order` polls, you can only provide
                                  one correct answer.
                                items:
                                  type: string
                                  example: Good
                        rating_max_label:
                          type: string
                          description: >-
                            The high score label used for the `rating_max_value`
                            field. 


                            This field only applies to the `rating_scale` poll.
                          example: Extremely Likely
                        rating_max_value:
                          maximum: 10
                          type: integer
                          description: >-
                            The rating scale's maximum value, up to a maximum
                            value of 10. 


                            This field only applies to the `rating_scale` poll.
                          example: 4
                        rating_min_label:
                          type: string
                          description: >-
                            The low score label used for the `rating_min_value`
                            field. 


                            This field only applies to the `rating_scale` poll.
                          example: Not likely
                        rating_min_value:
                          minimum: 0
                          type: integer
                          description: >-
                            The rating scale's minimum value. This value cannot be
                            less than zero. 


                            This field only applies to the `rating_scale` poll.
                          example: 0
                        right_answers:
                          minItems: 1
                          type: array
                          description: >-
                            The poll question's correct answer(s). This field is
                            **required** if the poll's `type` value is `3`
                            (Quiz). 

                             For `single` and `matching` polls, this field only accepts one answer.
                          items:
                            type: string
                            example: Good
                        show_as_dropdown:
                          type: boolean
                          description: >-
                            Whether to display the radio selection as a drop-down
                            box: 

                            * `true` &mdash; Show as a drop-down box. 

                            * `false` &mdash; Do not show as a drop-down box. 


                            This value defaults to `false`.
                          example: false
                          default: false
                        type:
                          type: string
                          description: |-
                            The poll's question and answer type: 
                            * `single` &mdash; Single choice. 
                            * `multiple` &mdash; Multiple choice. 
                            * `matching` &mdash; Matching. 
                            * `rank_order` &mdash; Rank order. 
                            * `short_answer` &mdash; Short answer. 
                            * `long_answer` &mdash; Long answer. 
                            * `fill_in_the_blank` &mdash; Fill in the blank. 
                            * `rating_scale` &mdash; Rating scale.
                          example: single
                          extensions:
                            x-enum-descriptions:
                              - Single choice
                              - Multiple choice
                              - Matching
                              - Rank order
                              - Short answer
                              - Long answer
                              - Fill in the blank
                              - Rating scale
                          enum:
                            - single
                            - multiple
                            - matching
                            - rank_order
                            - short_answer
                            - long_answer
                            - fill_in_the_blank
                            - rating_scale
                  title:
                    maxLength: 64
                    type: string
                    description: The poll's title, up to 64 characters.
                    example: Learn something new
                description: Information about meeting and webinar polling.
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Meeting Poll Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Meeting Poll ID
                      example: QalIoKWLTJehBJ8e1xRrbQ
                    status:
                      type: string
                      description: |-
                        Status of the Meeting Poll:  
                         `notstart` - Poll not started  
                         `started` - Poll started  
                         `ended` - Poll ended  
                         `sharing` - Sharing poll results
                      example: notstart
                      extensions:
                        x-enum-descriptions:
                          - Poll not start
                          - Poll started
                          - Poll ended
                          - Poll is sharing
                      enum:
                        - notstart
                        - started
                        - ended
                        - sharing
                    anonymous:
                      type: boolean
                      description: >-
                        Allow meeting participants to answer poll questions
                        anonymously. 


                        This value defaults to `false`.
                      example: true
                      default: false
                    poll_type:
                      type: integer
                      description: >-
                        The type of poll: 

                        * `1` &mdash; Poll. 

                        * `2` &mdash; Advanced Poll. This feature must be enabled
                        in your Zoom account. 

                        * `3` &mdash; Quiz. This feature must be enabled in your
                        Zoom account. 

                         This value defaults to `1`.
                      example: 2
                      enum:
                        - 1
                        - 2
                        - 3
                    questions:
                      type: array
                      description: Information about the poll's questions.
                      items:
                        type: object
                        properties:
                          answer_max_character:
                            type: integer
                            description: >-
                              The allowed maximum number of characters. This field
                              only applies to `short_answer` and `long_answer`
                              polls: 

                              * For `short_answer` polls, a maximum of 500
                              characters. 

                              * For `long_answer` polls, a maximum of 2,000
                              characters.
                            example: 200
                          answer_min_character:
                            minimum: 1
                            type: integer
                            description: >-
                              The allowed minimum number of characters. This field
                              only applies to `short_answer` and `long_answer`
                              polls. You must provide at least a **one** character
                              minimum value.
                            example: 1
                          answer_required:
                            type: boolean
                            description: >-
                              Whether participants must answer the question: 

                              * `true` &mdash; The participant must answer the
                              question. 

                              * `false` &mdash; The participant does not need to
                              answer the question. 


                              **Note:** 

                              * When the poll's `type` value is `1` (Poll), this
                              value defaults to `true`. 

                              * When the poll's `type` value is the `2` (Advanced
                              Poll) or `3` (Quiz) values, this value defaults to
                              `false`.
                            example: false
                            default: false
                          answers:
                            minItems: 2
                            type: array
                            description: >-
                              The poll question's available answers. This field
                              requires a **minimum** of two answers. 


                              * For `single` and `multiple` polls, you can only
                              provide a maximum of 10 answers. 

                              * For `matching` polls, you can only provide a
                              maximum of 16 answers. 

                              * For `rank_order` polls, you can only provide a
                              maximum of seven answers.
                            items:
                              type: string
                              example: Extremely useful
                          case_sensitive:
                            type: boolean
                            description: >-
                              Whether the correct answer is case sensitive. This
                              field only applies to `fill_in_the_blank` polls: 

                              * `true` &mdash; The answer is case-sensitive. 

                              * `false` &mdash; The answer is not case-sensitive. 


                              This value defaults to `false`.
                            example: false
                            default: false
                          name:
                            maxLength: 255
                            type: string
                            description: >-
                              The poll question, up to 255 characters. 


                              For `fill_in_the_blank` polls, this field is the
                              poll's question. For each value that the user must
                              fill in, ensure that there are the same number of
                              `right_answers` values.
                            example: How useful was this meeting?
                          prompts:
                            type: array
                            description: >-
                              Information about the prompt questions. This field
                              only applies to `matching` and `rank_order` polls.
                              You **must** provide a minimum of two prompts, up to
                              a maximum of 10 prompts.
                            items:
                              type: object
                              properties:
                                prompt_question:
                                  type: string
                                  description: The question prompt's title.
                                  example: How are you?
                                prompt_right_answers:
                                  type: array
                                  description: >-
                                    The question prompt's correct answers: 

                                    * For `matching` polls, you must provide a
                                    minimum of two correct answers, up to a
                                    maximum of 10 correct answers. 

                                    * For `rank_order` polls, you can only provide
                                    one correct answer.
                                  items:
                                    type: string
                                    example: Good
                          rating_max_label:
                            type: string
                            description: >-
                              The high score label used for the `rating_max_value`
                              field. 


                              This field only applies to the `rating_scale` poll.
                            example: Extremely Likely
                          rating_max_value:
                            maximum: 10
                            type: integer
                            description: >-
                              The rating scale's maximum value, up to a maximum
                              value of 10. 


                              This field only applies to the `rating_scale` poll.
                            example: 4
                          rating_min_label:
                            type: string
                            description: >-
                              The low score label used for the `rating_min_value`
                              field. 


                              This field only applies to the `rating_scale` poll.
                            example: Not likely
                          rating_min_value:
                            minimum: 0
                            type: integer
                            description: >-
                              The rating scale's minimum value. This value cannot
                              be less than zero. 


                              This field only applies to the `rating_scale` poll.
                            example: 0
                          right_answers:
                            minItems: 1
                            type: array
                            description: >-
                              The poll question's correct answer(s). This field is
                              **required** if the poll's `type` value is `3`
                              (Quiz). 

                               For `single` and `matching` polls, this field only accepts one answer.
                            items:
                              type: string
                              example: Good
                          show_as_dropdown:
                            type: boolean
                            description: >-
                              Whether to display the radio selection as a
                              drop-down box: 

                              * `true` &mdash; Show as a drop-down box. 

                              * `false` &mdash; Do not show as a drop-down box. 


                              This value defaults to `false`.
                            example: false
                            default: false
                          type:
                            type: string
                            description: |-
                              The poll's question and answer type: 
                              * `single` &mdash; Single choice. 
                              * `multiple` &mdash; Multiple choice. 
                              * `matching` &mdash; Matching. 
                              * `rank_order` &mdash; Rank order. 
                              * `short_answer` &mdash; Short answer. 
                              * `long_answer` &mdash; Long answer. 
                              * `fill_in_the_blank` &mdash; Fill in the blank. 
                              * `rating_scale` &mdash; Rating scale.
                            example: single
                            extensions:
                              x-enum-descriptions:
                                - Single choice
                                - Multiple choice
                                - Matching
                                - Rank order
                                - Short answer
                                - Long answer
                                - Fill in the blank
                                - Rating scale
                            enum:
                              - single
                              - multiple
                              - matching
                              - rank_order
                              - short_answer
                              - long_answer
                              - fill_in_the_blank
                              - rating_scale
                    title:
                      maxLength: 64
                      type: string
                      description: The poll's title, up to 64 characters.
                      example: Learn something new
                  title: Meeting and Webinar Polling Object
                  description: Information about meeting and webinar polling.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `4400` <br>

              * Meeting polls disabled. To enable this feature, enable the
              "Meeting Polls/Quizzes" setting in the Zoom web portal's "Settings"
              interface. 

              * Advanced meeting polls disabled. To enable this feature, enable
              the "Allow host to create advanced polls and quizzes" setting in the
              Zoom web portal's "Settings" interface.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `404` <br>
              Meeting not found

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/polls/{pollId}:
      get:
        tags:
          - Meetings
        summary: Get a meeting poll
        description: >-
          Polls allow the meeting host to survey attendees. Retrieve information
          about a specific meeting
          [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).  
             
           


          **Scopes:** `meeting:read:admin`,`meeting:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingPollGet
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: pollId
            in: path
            description: The poll ID
            required: true
            schema:
              type: string
              example: QalIoKWLTJehBJ8e1xRrbQ
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Meeting Poll object returned
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Meeting Poll ID
                      example: QalIoKWLTJehBJ8e1xRrbQ
                    status:
                      type: string
                      description: |-
                        Status of the Meeting Poll:  
                         `notstart` - Poll not started  
                         `started` - Poll started  
                         `ended` - Poll ended  
                         `sharing` - Sharing poll results
                      example: notstart
                      extensions:
                        x-enum-descriptions:
                          - Poll not start
                          - Poll started
                          - Poll ended
                          - Poll is sharing
                      enum:
                        - notstart
                        - started
                        - ended
                        - sharing
                    anonymous:
                      type: boolean
                      description: >-
                        Allow meeting participants to answer poll questions
                        anonymously. 


                        This value defaults to `false`.
                      example: true
                      default: false
                    poll_type:
                      type: integer
                      description: >-
                        The type of poll: 

                        * `1` &mdash; Poll. 

                        * `2` &mdash; Advanced Poll. This feature must be enabled
                        in your Zoom account. 

                        * `3` &mdash; Quiz. This feature must be enabled in your
                        Zoom account. 

                         This value defaults to `1`.
                      example: 2
                      enum:
                        - 1
                        - 2
                        - 3
                    questions:
                      type: array
                      description: Information about the poll's questions.
                      items:
                        type: object
                        properties:
                          answer_max_character:
                            type: integer
                            description: >-
                              The allowed maximum number of characters. This field
                              only applies to `short_answer` and `long_answer`
                              polls: 

                              * For `short_answer` polls, a maximum of 500
                              characters. 

                              * For `long_answer` polls, a maximum of 2,000
                              characters.
                            example: 200
                          answer_min_character:
                            minimum: 1
                            type: integer
                            description: >-
                              The allowed minimum number of characters. This field
                              only applies to `short_answer` and `long_answer`
                              polls. You must provide at least a **one** character
                              minimum value.
                            example: 1
                          answer_required:
                            type: boolean
                            description: >-
                              Whether participants must answer the question: 

                              * `true` &mdash; The participant must answer the
                              question. 

                              * `false` &mdash; The participant does not need to
                              answer the question. 


                              **Note:** 

                              * When the poll's `type` value is `1` (Poll), this
                              value defaults to `true`. 

                              * When the poll's `type` value is the `2` (Advanced
                              Poll) or `3` (Quiz) values, this value defaults to
                              `false`.
                            example: false
                            default: false
                          answers:
                            minItems: 2
                            type: array
                            description: >-
                              The poll question's available answers. This field
                              requires a **minimum** of two answers. 


                              * For `single` and `multiple` polls, you can only
                              provide a maximum of 10 answers. 

                              * For `matching` polls, you can only provide a
                              maximum of 16 answers. 

                              * For `rank_order` polls, you can only provide a
                              maximum of seven answers.
                            items:
                              type: string
                              example: Extremely useful
                          case_sensitive:
                            type: boolean
                            description: >-
                              Whether the correct answer is case sensitive. This
                              field only applies to `fill_in_the_blank` polls: 

                              * `true` &mdash; The answer is case-sensitive. 

                              * `false` &mdash; The answer is not case-sensitive. 


                              This value defaults to `false`.
                            example: false
                            default: false
                          name:
                            maxLength: 255
                            type: string
                            description: >-
                              The poll question, up to 255 characters. 


                              For `fill_in_the_blank` polls, this field is the
                              poll's question. For each value that the user must
                              fill in, ensure that there are the same number of
                              `right_answers` values.
                            example: How useful was this meeting?
                          prompts:
                            type: array
                            description: >-
                              Information about the prompt questions. This field
                              only applies to `matching` and `rank_order` polls.
                              You **must** provide a minimum of two prompts, up to
                              a maximum of 10 prompts.
                            items:
                              type: object
                              properties:
                                prompt_question:
                                  type: string
                                  description: The question prompt's title.
                                  example: How are you?
                                prompt_right_answers:
                                  type: array
                                  description: >-
                                    The question prompt's correct answers: 

                                    * For `matching` polls, you must provide a
                                    minimum of two correct answers, up to a
                                    maximum of 10 correct answers. 

                                    * For `rank_order` polls, you can only provide
                                    one correct answer.
                                  items:
                                    type: string
                                    example: Good
                          rating_max_label:
                            type: string
                            description: >-
                              The high score label used for the `rating_max_value`
                              field. 


                              This field only applies to the `rating_scale` poll.
                            example: Extremely Likely
                          rating_max_value:
                            maximum: 10
                            type: integer
                            description: >-
                              The rating scale's maximum value, up to a maximum
                              value of 10. 


                              This field only applies to the `rating_scale` poll.
                            example: 4
                          rating_min_label:
                            type: string
                            description: >-
                              The low score label used for the `rating_min_value`
                              field. 


                              This field only applies to the `rating_scale` poll.
                            example: Not likely
                          rating_min_value:
                            minimum: 0
                            type: integer
                            description: >-
                              The rating scale's minimum value. This value cannot
                              be less than zero. 


                              This field only applies to the `rating_scale` poll.
                            example: 0
                          right_answers:
                            minItems: 1
                            type: array
                            description: >-
                              The poll question's correct answer(s). This field is
                              **required** if the poll's `type` value is `3`
                              (Quiz). 

                               For `single` and `matching` polls, this field only accepts one answer.
                            items:
                              type: string
                              example: Good
                          show_as_dropdown:
                            type: boolean
                            description: >-
                              Whether to display the radio selection as a
                              drop-down box: 

                              * `true` &mdash; Show as a drop-down box. 

                              * `false` &mdash; Do not show as a drop-down box. 


                              This value defaults to `false`.
                            example: false
                            default: false
                          type:
                            type: string
                            description: |-
                              The poll's question and answer type: 
                              * `single` &mdash; Single choice. 
                              * `multiple` &mdash; Multiple choice. 
                              * `matching` &mdash; Matching. 
                              * `rank_order` &mdash; Rank order. 
                              * `short_answer` &mdash; Short answer. 
                              * `long_answer` &mdash; Long answer. 
                              * `fill_in_the_blank` &mdash; Fill in the blank. 
                              * `rating_scale` &mdash; Rating scale.
                            example: single
                            extensions:
                              x-enum-descriptions:
                                - Single choice
                                - Multiple choice
                                - Matching
                                - Rank order
                                - Short answer
                                - Long answer
                                - Fill in the blank
                                - Rating scale
                            enum:
                              - single
                              - multiple
                              - matching
                              - rank_order
                              - short_answer
                              - long_answer
                              - fill_in_the_blank
                              - rating_scale
                    title:
                      maxLength: 64
                      type: string
                      description: The poll's title, up to 64 characters.
                      example: Learn something new
                  title: Meeting and Webinar Polling Object
                  description: Information about meeting and webinar polling.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `4400` <br>

              Meeting polls disabled. To enable this feature, enable the "Meeting
              Polls/Quizzes" setting in the Zoom web portal's "Settings"
              interface.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `404` <br>
              Meeting Poll not found.

        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
      put:
        tags:
          - Meetings
        summary: Update a meeting poll
        description: >-
          Polls allow the meeting host to survey attendees. Update information of
          a specific meeting
          [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)  
             
           


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingPollUpdate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: pollId
            in: path
            description: The poll ID
            required: true
            schema:
              type: string
              example: QalIoKWLTJehBJ8e1xRrbQ
        requestBody:
          description: Meeting Poll
          content:
            application/json:
              schema:
                title: Meeting and Webinar Polling Object
                type: object
                properties:
                  anonymous:
                    type: boolean
                    description: >-
                      Allow meeting participants to answer poll questions
                      anonymously. 


                      This value defaults to `false`.
                    example: true
                    default: false
                  poll_type:
                    type: integer
                    description: >-
                      The type of poll: 

                      * `1` &mdash; Poll. 

                      * `2` &mdash; Advanced Poll. This feature must be enabled in
                      your Zoom account. 

                      * `3` &mdash; Quiz. This feature must be enabled in your
                      Zoom account. 

                       This value defaults to `1`.
                    example: 2
                    enum:
                      - 1
                      - 2
                      - 3
                  questions:
                    type: array
                    description: Information about the poll's questions.
                    items:
                      type: object
                      properties:
                        answer_max_character:
                          type: integer
                          description: >-
                            The allowed maximum number of characters. This field
                            only applies to `short_answer` and `long_answer`
                            polls: 

                            * For `short_answer` polls, a maximum of 500
                            characters. 

                            * For `long_answer` polls, a maximum of 2,000
                            characters.
                          example: 200
                        answer_min_character:
                          minimum: 1
                          type: integer
                          description: >-
                            The allowed minimum number of characters. This field
                            only applies to `short_answer` and `long_answer`
                            polls. You must provide at least a **one** character
                            minimum value.
                          example: 1
                        answer_required:
                          type: boolean
                          description: >-
                            Whether participants must answer the question: 

                            * `true` &mdash; The participant must answer the
                            question. 

                            * `false` &mdash; The participant does not need to
                            answer the question. 


                            **Note:** 

                            * When the poll's `type` value is `1` (Poll), this
                            value defaults to `true`. 

                            * When the poll's `type` value is the `2` (Advanced
                            Poll) or `3` (Quiz) values, this value defaults to
                            `false`.
                          example: false
                          default: false
                        answers:
                          minItems: 2
                          type: array
                          description: >-
                            The poll question's available answers. This field
                            requires a **minimum** of two answers. 


                            * For `single` and `multiple` polls, you can only
                            provide a maximum of 10 answers. 

                            * For `matching` polls, you can only provide a maximum
                            of 16 answers. 

                            * For `rank_order` polls, you can only provide a
                            maximum of seven answers.
                          items:
                            type: string
                            example: Extremely useful
                        case_sensitive:
                          type: boolean
                          description: >-
                            Whether the correct answer is case sensitive. This
                            field only applies to `fill_in_the_blank` polls: 

                            * `true` &mdash; The answer is case-sensitive. 

                            * `false` &mdash; The answer is not case-sensitive. 


                            This value defaults to `false`.
                          example: false
                          default: false
                        name:
                          maxLength: 255
                          type: string
                          description: >-
                            The poll question, up to 255 characters. 


                            For `fill_in_the_blank` polls, this field is the
                            poll's question. For each value that the user must
                            fill in, ensure that there are the same number of
                            `right_answers` values.
                          example: How useful was this meeting?
                        prompts:
                          type: array
                          description: >-
                            Information about the prompt questions. This field
                            only applies to `matching` and `rank_order` polls. You
                            **must** provide a minimum of two prompts, up to a
                            maximum of 10 prompts.
                          items:
                            type: object
                            properties:
                              prompt_question:
                                type: string
                                description: The question prompt's title.
                                example: How are you?
                              prompt_right_answers:
                                type: array
                                description: >-
                                  The question prompt's correct answers: 

                                  * For `matching` polls, you must provide a
                                  minimum of two correct answers, up to a maximum
                                  of 10 correct answers. 

                                  * For `rank_order` polls, you can only provide
                                  one correct answer.
                                items:
                                  type: string
                                  example: Good
                        rating_max_label:
                          type: string
                          description: >-
                            The high score label used for the `rating_max_value`
                            field. 


                            This field only applies to the `rating_scale` poll.
                          example: Extremely Likely
                        rating_max_value:
                          maximum: 10
                          type: integer
                          description: >-
                            The rating scale's maximum value, up to a maximum
                            value of 10. 


                            This field only applies to the `rating_scale` poll.
                          example: 4
                        rating_min_label:
                          type: string
                          description: >-
                            The low score label used for the `rating_min_value`
                            field. 


                            This field only applies to the `rating_scale` poll.
                          example: Not likely
                        rating_min_value:
                          minimum: 0
                          type: integer
                          description: >-
                            The rating scale's minimum value. This value cannot be
                            less than zero. 


                            This field only applies to the `rating_scale` poll.
                          example: 0
                        right_answers:
                          minItems: 1
                          type: array
                          description: >-
                            The poll question's correct answer(s). This field is
                            **required** if the poll's `type` value is `3`
                            (Quiz). 

                             For `single` and `matching` polls, this field only accepts one answer.
                          items:
                            type: string
                            example: Good
                        show_as_dropdown:
                          type: boolean
                          description: >-
                            Whether to display the radio selection as a drop-down
                            box: 

                            * `true` &mdash; Show as a drop-down box. 

                            * `false` &mdash; Do not show as a drop-down box. 


                            This value defaults to `false`.
                          example: false
                          default: false
                        type:
                          type: string
                          description: |-
                            The poll's question and answer type: 
                            * `single` &mdash; Single choice. 
                            * `multiple` &mdash; Multiple choice. 
                            * `matching` &mdash; Matching. 
                            * `rank_order` &mdash; Rank order. 
                            * `short_answer` &mdash; Short answer. 
                            * `long_answer` &mdash; Long answer. 
                            * `fill_in_the_blank` &mdash; Fill in the blank. 
                            * `rating_scale` &mdash; Rating scale.
                          example: single
                          extensions:
                            x-enum-descriptions:
                              - Single choice
                              - Multiple choice
                              - Matching
                              - Rank order
                              - Short answer
                              - Long answer
                              - Fill in the blank
                              - Rating scale
                          enum:
                            - single
                            - multiple
                            - matching
                            - rank_order
                            - short_answer
                            - long_answer
                            - fill_in_the_blank
                            - rating_scale
                  title:
                    maxLength: 64
                    type: string
                    description: The poll's title, up to 64 characters.
                    example: Learn something new
                description: Information about meeting and webinar polling.
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              Meeting Poll Updated
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `4400` <br>

              * Meeting polls disabled. To enable this feature, enable the
              "Meeting Polls/Quizzes" setting in the Zoom web portal's "Settings"
              interface. 

              * Advanced meeting polls disabled. To enable this feature, enable
              the "Allow host to create advanced polls and quizzes" setting in the
              Zoom web portal's "Settings" interface.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `404` <br>
              Meeting Poll not found

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
      delete:
        tags:
          - Meetings
        summary: Delete a meeting poll
        description: >-
          Polls allow the meeting host to survey attendees. Delete a meeting
          [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings).  
           
          **Prerequisites**:  
           
          * Host user type must be **Pro**.

          * Polling feature should be enabled in the host's account.

          * Meeting must be a scheduled meeting. Instant meetings do not have
          polling features enabled.


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingPollDelete
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: pollId
            in: path
            description: The poll ID
            required: true
            schema:
              type: string
              example: QalIoKWLTJehBJ8e1xRrbQ
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              Meeting Poll deleted
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `4400` <br>

              Meeting polls disabled. To enable this feature, enable the "Meeting
              Polls/Quizzes" setting in the Zoom web portal's "Settings"
              interface.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `404` <br>
              Meeting Poll not found

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/registrants:
      get:
        tags:
          - Meetings
        summary: List meeting registrants
        description: >-
          A host or a user with admin permission can require [registration for a
          Zoom
          meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).
          List users that have registered for a meeting.  
             
           


          **Scopes:** `meeting:read:admin`,`meeting:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: meetingRegistrants
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: occurrence_id
            in: query
            description: The meeting or webinar occurrence ID.
            required: false
            schema:
              type: string
              example: '1648194360000'
          - name: status
            in: query
            description: |-
              Query by the registrant's status. 
              * `pending` - The registration is pending. 
              * `approved` - The registrant is approved. 
              * `denied` - The registration is denied.
            required: false
            schema:
              type: string
              example: pending
              default: approved
              enum:
                - pending
                - approved
                - denied
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: page_number
            in: query
            description: >-
              **Deprecated.** We will no longer support this field in a future
              release. Instead, use the `next_page_token` for pagination.
            required: false
            schema:
              type: integer
              example: 1
              default: 1
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Successfully listed meeting registrants.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: w7587w4eiyfsudgf
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_number:
                      type: integer
                      description: >-
                        **Deprecated.** We will no longer support this field in a
                        future release. Instead, use the `next_page_token` for
                        pagination.
                      example: 1
                      deprecated: true
                      default: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 20
                    registrants:
                      type: array
                      description: List of registrant objects.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Registrant ID.
                            example: 9tboDiHUQAeOnbmudzWa5g
                          address:
                            type: string
                            description: The registrant's address.
                            example: 1800 Amphibious Blvd.
                          city:
                            type: string
                            description: The registrant's city.
                            example: Mountain View
                          comments:
                            type: string
                            description: The registrant's questions and comments.
                            example: Looking forward to the discussion.
                          country:
                            type: string
                            description: >-
                              The registrant's two-letter [country
                              code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
                            example: US
                          custom_questions:
                            type: array
                            description: Information about custom questions.
                            items:
                              type: object
                              properties:
                                title:
                                  type: string
                                  description: The title of the custom question.
                                  example: What do you hope to learn from this?
                                value:
                                  maxLength: 128
                                  type: string
                                  description: >-
                                    The custom question's response value. This has
                                    a limit of 128 characters.
                                  example: >-
                                    Look forward to learning how you come up with
                                    new recipes and what other services you offer.
                              description: Information about custom questions.
                          email:
                            maxLength: 128
                            type: string
                            description: >-
                              The registrant's email address. See [Email address
                              display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for return value details.
                            format: email
                            example: jchill@example.com
                          first_name:
                            maxLength: 64
                            type: string
                            description: The registrant's first name.
                            example: Jill
                          industry:
                            type: string
                            description: The registrant's industry.
                            example: Food
                          job_title:
                            type: string
                            description: The registrant's job title.
                            example: Chef
                          last_name:
                            maxLength: 64
                            type: string
                            description: The registrant's last name.
                            example: Chill
                          no_of_employees:
                            type: string
                            description: |-
                              The registrant's number of employees. 
                              * `1-20` 
                              * `21-50` 
                              * `51-100` 
                              * `101-250` 
                              * `251-500` 
                              * `501-1,000` 
                              * `1,001-5,000` 
                              * `5,001-10,000` 
                              * `More than 10,000`
                            example: 1-20
                            enum:
                              - ''
                              - 1-20
                              - 21-50
                              - 51-100
                              - 101-250
                              - 251-500
                              - 501-1,000
                              - 1,001-5,000
                              - 5,001-10,000
                              - More than 10,000
                          org:
                            type: string
                            description: The registrant's organization.
                            example: Cooking Org
                          phone:
                            type: string
                            description: The registrant's phone number.
                            example: '5550100'
                          purchasing_time_frame:
                            type: string
                            description: |-
                              The registrant's purchasing time frame. 
                              * `Within a month` 
                              * `1-3 months` 
                              * `4-6 months` 
                              * `More than 6 months` 
                              * `No timeframe`
                            example: 1-3 months
                            enum:
                              - ''
                              - Within a month
                              - 1-3 months
                              - 4-6 months
                              - More than 6 months
                              - No timeframe
                          role_in_purchase_process:
                            type: string
                            description: |-
                              The registrant's role in the purchase process. 
                              * `Decision Maker` 
                              * `Evaluator/Recommender` 
                              * `Influencer` 
                              * `Not involved`
                            example: Influencer
                            enum:
                              - ''
                              - Decision Maker
                              - Evaluator/Recommender
                              - Influencer
                              - Not involved
                          state:
                            type: string
                            description: The registrant's state or province.
                            example: CA
                          status:
                            type: string
                            description: |-
                              The status of the registrant's registration.   
                                `approved`: User has been successfully approved for the webinar.  
                                `pending`:  The registration is still pending.  
                                `denied`: User has been denied from joining the webinar.
                            example: approved
                            enum:
                              - approved
                              - denied
                              - pending
                          zip:
                            type: string
                            description: The registrant's ZIP or postal code.
                            example: '94045'
                          create_time:
                            type: string
                            description: The time at which the registrant registered.
                            format: date-time
                            example: '2022-03-22T05:59:09Z'
                          join_url:
                            type: string
                            description: >-
                              The URL using which an approved registrant can join
                              the meeting or webinar.
                            format: string
                            example: https://example.com/j/11111
                          participant_pin_code:
                            type: integer
                            description: >-
                              The participant PIN code is used to authenticate
                              audio participants before they join the meeting.
                            format: int64
                            example: 380303
                        required:
                          - email
                          - first_name
                        description: ' Registrant.'
                  description: List of users.
                  title: Registration List
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account: {accountId}.<br> <br>
              **Error Code:** `3003` <br>
               You are not the meeting host.<br> <br>
              **Error Code:** `3000` <br>
               Cannot access meeting info. <br>
              **Error Code:** `3161` <br>
               Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               Meeting host does not exist: {userId}. <br>
        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
      post:
        tags:
          - Meetings
        summary: Add a meeting registrant
        description: >-
          Create and submit a user's registration to a meeting. See [Customizing
          webinar
          registration](https://support.zoom.us/hc/en-us/articles/202835649-Customizing-webinar-registration)
          for details on how to set the requirements for these fields. Note that
          there is a maximum limit of 4,999 registrants per meeting and users will
          see an error if the meeting's capacity is reached. 

           **Prerequisites:** 
          * The host must be a **Licensed** user type.


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingRegistrantCreate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: occurrence_ids
            in: query
            description: >-
              A comma-separated list of meeting occurrence IDs. You can get this
              value with the [Get a meeting](https://developers.zoom.us) API.
            required: false
            schema:
              type: string
              example: 1648194360000,1648367160000
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - email
                  - first_name
                type: object
                properties:
                  first_name:
                    maxLength: 64
                    type: string
                    description: The registrant's first name.
                    example: Jill
                  last_name:
                    maxLength: 64
                    type: string
                    description: The registrant's last name.
                    example: Chill
                  email:
                    maxLength: 128
                    type: string
                    description: The registrant's email address.
                    format: email
                    example: jchill@example.com
                  address:
                    type: string
                    description: The registrant's address.
                    example: 1800 Amphibious Blvd.
                  city:
                    type: string
                    description: The registrant's city.
                    example: Mountain View
                  state:
                    type: string
                    description: The registrant's state or province.
                    example: CA
                  zip:
                    type: string
                    description: The registrant's ZIP or postal code.
                    example: '94045'
                  country:
                    type: string
                    description: >-
                      The registrant's two-letter [country
                      code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).
                    example: US
                  phone:
                    type: string
                    description: The registrant's phone number.
                    example: '5550100'
                  comments:
                    type: string
                    description: The registrant's questions and comments.
                    example: Looking forward to the discussion.
                  custom_questions:
                    type: array
                    description: Information about custom questions.
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: The title of the custom question.
                          example: What do you hope to learn from this?
                        value:
                          maxLength: 128
                          type: string
                          description: >-
                            The custom question's response value. This has a limit
                            of 128 characters.
                          example: >-
                            Look forward to learning how you come up with new
                            recipes and what other services you offer.
                      description: Information about custom questions.
                  industry:
                    type: string
                    description: The registrant's industry.
                    example: Food
                  job_title:
                    type: string
                    description: The registrant's job title.
                    example: Chef
                  no_of_employees:
                    type: string
                    description: |-
                      The registrant's number of employees: 
                      * `1-20` 
                      * `21-50` 
                      * `51-100` 
                      * `101-500` 
                      * `500-1,000` 
                      * `1,001-5,000` 
                      * `5,001-10,000` 
                      * `More than 10,000`
                    example: 1-20
                    enum:
                      - ''
                      - 1-20
                      - 21-50
                      - 51-100
                      - 101-500
                      - 500-1,000
                      - 1,001-5,000
                      - 5,001-10,000
                      - More than 10,000
                  org:
                    type: string
                    description: The registrant's organization.
                    example: Cooking Org
                  purchasing_time_frame:
                    type: string
                    description: |-
                      The registrant's purchasing time frame: 
                      * `Within a month` 
                      * `1-3 months` 
                      * `4-6 months` 
                      * `More than 6 months` 
                      * `No timeframe`
                    example: 1-3 months
                    enum:
                      - ''
                      - Within a month
                      - 1-3 months
                      - 4-6 months
                      - More than 6 months
                      - No timeframe
                  role_in_purchase_process:
                    type: string
                    description: |-
                      The registrant's role in the purchase process: 
                      * `Decision Maker` 
                      * `Evaluator/Recommender` 
                      * `Influencer` 
                      * `Not involved`
                    example: Influencer
                    enum:
                      - ''
                      - Decision Maker
                      - Evaluator/Recommender
                      - Influencer
                      - Not involved
                  language:
                    type: string
                    description: >-
                      The registrant's language preference for confirmation
                      emails: 

                      * `en-US` &mdash; English (US) 

                      * `de-DE` &mdash; German (Germany) 

                      * `es-ES` &mdash; Spanish (Spain) 

                      * `fr-FR` &mdash; French (France) 

                      * `jp-JP` &mdash; Japanese 

                      * `pt-PT` &mdash; Portuguese (Portugal) 

                      * `ru-RU` &mdash; Russian 

                      * `zh-CN` &mdash; Chinese (PRC) 

                      * `zh-TW` &mdash; Chinese (Taiwan) 

                      * `ko-KO` &mdash; Korean 

                      * `it-IT` &mdash; Italian (Italy) 

                      * `vi-VN` &mdash; Vietnamese 

                      * `pl-PL` &mdash; Polish 

                      * `Tr-TR` &mdash; Turkish
                    example: en-US
                    enum:
                      - en-US
                      - de-DE
                      - es-ES
                      - fr-FR
                      - jp-JP
                      - pt-PT
                      - ru-RU
                      - zh-CN
                      - zh-TW
                      - ko-KO
                      - it-IT
                      - vi-VN
                      - pl-PL
                      - Tr-TR
                  auto_approve:
                    type: boolean
                    description: >-
                      If a meeting was scheduled with the `approval_type` field
                      value of `1` (manual approval) but you want to automatically
                      approve meeting registrants, set the value of this field to
                      `true`. 


                      **Note:** You cannot use this field to change approval
                      setting for a meeting originally scheduled with the
                      `approval_type` field value of `0` (automatic approval).
                    example: true
                description: Information about the meeting registrant.
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Meeting registration created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The meeting ID.
                      format: int64
                      example: 85746065
                    join_url:
                      type: string
                      description: >-
                        The URL the registrant can use to join the meeting. 


                        The API will not return this field if the meeting was
                        [created](https://developers.zoom.us) with the
                        `approval_type` field value of `1` (manual approval).
                      example: https://example.com/j/11111
                    registrant_id:
                      type: string
                      description: The registrant's ID.
                      example: fdgsfh2ey82fuh
                    start_time:
                      type: string
                      description: The meeting's start time.
                      format: date-time
                      example: '2021-07-13T21:44:51Z'
                    topic:
                      maxLength: 200
                      type: string
                      description: The meeting's topic.
                      example: My Meeting
                    occurrences:
                      type: array
                      description: Array of occurrence objects.
                      items:
                        type: object
                        properties:
                          duration:
                            type: integer
                            description: Duration.
                            example: 60
                          occurrence_id:
                            type: string
                            description: >-
                              Occurrence ID: Unique Identifier that identifies an
                              occurrence of a recurring webinar. [Recurring
                              webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                              can have a maximum of 50 occurrences.
                            example: '1648194360000'
                          start_time:
                            type: string
                            description: Start time.
                            format: date-time
                            example: '2022-03-25T07:46:00Z'
                          status:
                            type: string
                            description: Occurrence status.
                            example: available
                        description: >-
                          Occurrence object. This object is only returned for
                          Recurring Webinars.
                    participant_pin_code:
                      type: integer
                      description: >-
                        The participant PIN code is used to authenticate audio
                        participants before they join the meeting.
                      format: int64
                      example: 380303
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}


              **Error Code:** `3003` <br>

              You are not the meeting host.


              **Error Code:** `3043` <br>

              Meeting has reached maximum attendee capacity.


              **Error Code:** `3000` <br>

              Cannot access meeting info.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              Meeting host does not exist: {userId}

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/registrants/questions:
      get:
        tags:
          - Meetings
        summary: 'List registration questions '
        description: >-
          List registration questions that will be displayed to users while
          [registering for a
          meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).  
           



          **Scopes:** `meeting:read`,`meeting:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingRegistrantsQuestionsGet
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Meeting Registrant Question object returned
            content:
              application/json:
                schema:
                  title: Meeting Registrant Questions
                  type: object
                  properties:
                    custom_questions:
                      type: array
                      description: Array of Registrant Custom Questions
                      items:
                        type: object
                        properties:
                          answers:
                            type: array
                            description: >-
                              Answer choices for the question. Can not be used for
                              `short` question type as this type of question
                              requires registrants to type out the answer.
                            items:
                              type: string
                              example: Good
                          required:
                            type: boolean
                            description: >-
                              Indicates whether or not the custom question is
                              required to be answered by participants or not.
                            example: true
                          title:
                            type: string
                            description: Title of the custom question.
                            example: How are you?
                          type:
                            type: string
                            description: Type of the question being asked.
                            example: short
                            extensions:
                              x-enum-descriptions:
                                - Short Answer
                                - Single Answer
                            enum:
                              - short
                              - single
                    questions:
                      type: array
                      description: Array of Registrant Questions
                      items:
                        type: object
                        properties:
                          field_name:
                            type: string
                            description: Field name of the question.
                            example: last_name
                            enum:
                              - last_name
                              - address
                              - city
                              - country
                              - zip
                              - state
                              - phone
                              - industry
                              - org
                              - job_title
                              - purchasing_time_frame
                              - role_in_purchase_process
                              - no_of_employees
                              - comments
                          required:
                            type: boolean
                            description: >-
                              Indicates whether or not the displayed fields are
                              required to be filled out by registrants.
                            example: true
                  description: Meeting Registrant Questions
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - meeting:read
              - meeting:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read
            - meeting:read:admin
      patch:
        tags:
          - Meetings
        summary: Update registration questions
        description: >-
          Update registration questions that will be displayed to users while
          [registering for a
          meeting](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).  
             
           


          **Scopes:** `meeting:write`,`meeting:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingRegistrantQuestionUpdate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          description: Meeting Registrant Questions
          content:
            application/json:
              schema:
                title: Meeting Registrant Questions
                type: object
                properties:
                  custom_questions:
                    type: array
                    description: Array of Registrant Custom Questions
                    items:
                      type: object
                      properties:
                        answers:
                          type: array
                          description: >-
                            Answer choices for the question. Can not be used for
                            `short` question type as this type of question
                            requires registrants to type out the answer.
                          items:
                            type: string
                            example: Good
                        required:
                          type: boolean
                          description: >-
                            Indicates whether or not the custom question is
                            required to be answered by participants or not.
                          example: true
                        title:
                          type: string
                          description: Title of the custom question.
                          example: How are you?
                        type:
                          type: string
                          description: Type of the question being asked.
                          example: short
                          extensions:
                            x-enum-descriptions:
                              - Short Answer
                              - Single Answer
                          enum:
                            - short
                            - single
                  questions:
                    type: array
                    description: Array of Registrant Questions
                    items:
                      type: object
                      properties:
                        field_name:
                          type: string
                          description: Field name of the question.
                          example: last_name
                          enum:
                            - last_name
                            - address
                            - city
                            - country
                            - zip
                            - state
                            - phone
                            - industry
                            - org
                            - job_title
                            - purchasing_time_frame
                            - role_in_purchase_process
                            - no_of_employees
                            - comments
                        required:
                          type: boolean
                          description: >-
                            Indicates whether or not the displayed fields are
                            required to be filled out by registrants.
                          example: true
                description: Meeting Registrant Questions
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Meeting Registrant Questions Updated
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - meeting:write
              - meeting:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write
            - meeting:write:admin
    /meetings/{meetingId}/registrants/status:
      put:
        tags:
          - Meetings
        summary: Update registrant's status
        description: >-
          Update a meeting registrant's status by either approving, cancelling or
          denying a registrant from joining the meeting.  
             
           


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: meetingRegistrantStatus
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: occurrence_id
            in: query
            description: The meeting or webinar occurrence ID.
            required: false
            schema:
              type: string
              example: '1648194360000'
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - action
                type: object
                properties:
                  action:
                    type: string
                    description: |-
                      Registrant Status:  
                       `approve` - Approve registrant.  
                       `cancel` - Cancel previously approved registrant's registration.  
                       `deny` - Deny registrant.
                    example: approve
                    extensions:
                      x-enum-descriptions:
                        - Approve registrant
                        - Cancel previously approved registrant
                        - Deny registrant
                    enum:
                      - approve
                      - cancel
                      - deny
                  registrants:
                    maximum: 30
                    type: array
                    description: List of registrants.
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          example: jchill@example.com
                        id:
                          type: string
                          example: 9tboDiHUQAeOnbmudzWa5g
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Registrant status updated.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}.<br>


              **Error Code:** `3000` <br>

              Cannot access meeting information.<br>


              **Error Code:** `3003` <br>

              You're not the meeting host.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User does not exist: {userId}.<br>

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/registrants/{registrantId}:
      get:
        tags:
          - Meetings
        summary: Get a meeting registrant
        description: >-
          Retrieve details on a specific user who has registered for the meeting.
          A host or a user with administrative permissions can require
          [registration for Zoom
          meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).


          **Prerequisites:** 

          * The account must have a Meeting plan


          **Scopes:** `meeting:read:admin`,`meeting:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingRegistrantGet
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: registrantId
            in: path
            description: The registrant ID.
            required: true
            schema:
              type: string
              example: 9tboDiHUQAeOnbmudzWa5g
        responses:
          '200':
            description: Success.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 9tboDiHUQAeOnbmudzWa5g
                    address:
                      type: string
                      description: The registrant's address.
                      example: 1800 Amphibious Blvd.
                    city:
                      type: string
                      description: The registrant's city.
                      example: Mountain View
                    comments:
                      type: string
                      description: The registrant's questions and comments.
                      example: Looking forward to the discussion.
                    country:
                      type: string
                      description: >-
                        The registrant's two-letter [country
                        code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
                      example: US
                    custom_questions:
                      type: array
                      description: Information about custom questions.
                      items:
                        type: object
                        properties:
                          title:
                            type: string
                            description: The title of the custom question.
                            example: What do you hope to learn from this?
                          value:
                            maxLength: 128
                            type: string
                            description: >-
                              The custom question's response value. This has a
                              limit of 128 characters.
                            example: >-
                              Look forward to learning how you come up with new
                              recipes and what other services you offer.
                        description: Information about custom questions.
                    email:
                      maxLength: 128
                      type: string
                      description: >-
                        The registrant's email address. See [Email address display
                        rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                        for return value details.
                      format: email
                      example: jchill@example.com
                    first_name:
                      maxLength: 64
                      type: string
                      description: The registrant's first name.
                      example: Jill
                    industry:
                      type: string
                      description: The registrant's industry.
                      example: Food
                    job_title:
                      type: string
                      description: The registrant's job title.
                      example: Chef
                    last_name:
                      maxLength: 64
                      type: string
                      description: The registrant's last name.
                      example: Chill
                    no_of_employees:
                      type: string
                      description: |-
                        The registrant's number of employees. 
                        * `1-20` 
                        * `21-50` 
                        * `51-100` 
                        * `101-250` 
                        * `251-500` 
                        * `501-1,000` 
                        * `1,001-5,000` 
                        * `5,001-10,000` 
                        * `More than 10,000`
                      example: 1-20
                      enum:
                        - ''
                        - 1-20
                        - 21-50
                        - 51-100
                        - 101-250
                        - 251-500
                        - 501-1,000
                        - 1,001-5,000
                        - 5,001-10,000
                        - More than 10,000
                    org:
                      type: string
                      description: The registrant's organization.
                      example: Cooking Org
                    phone:
                      type: string
                      description: The registrant's phone number.
                      example: '5550100'
                    purchasing_time_frame:
                      type: string
                      description: |-
                        The registrant's purchasing time frame. 
                        * `Within a month` 
                        * `1-3 months` 
                        * `4-6 months` 
                        * `More than 6 months` 
                        * `No timeframe`
                      example: 1-3 months
                      enum:
                        - ''
                        - Within a month
                        - 1-3 months
                        - 4-6 months
                        - More than 6 months
                        - No timeframe
                    role_in_purchase_process:
                      type: string
                      description: |-
                        The registrant's role in the purchase process. 
                        * `Decision Maker` 
                        * `Evaluator/Recommender` 
                        * `Influencer` 
                        * `Not involved`
                      example: Influencer
                      enum:
                        - ''
                        - Decision Maker
                        - Evaluator/Recommender
                        - Influencer
                        - Not involved
                    state:
                      type: string
                      description: The registrant's state or province.
                      example: CA
                    status:
                      type: string
                      description: >-
                        The registrant's registration status.

                        * `approved` - The registrant is approved to join the
                        meeting. 

                        * `pending` - The registrant's registration is pending.

                        * `denied` - The registrant was declined to join the
                        meeting.
                      example: approved
                      enum:
                        - approved
                        - denied
                        - pending
                        - approved
                        - pending
                        - denied
                    zip:
                      type: string
                      description: The registrant's ZIP or postal code.
                      example: '94045'
                    create_time:
                      type: string
                      description: The registrant's registration date and time.
                      format: date-time
                      example: '2022-03-22T05:58:44Z'
                    join_url:
                      type: string
                      description: >-
                        The URL with which the approved registrant can join the
                        meeting.
                      format: url
                      example: https://example.com/j/11111
                    participant_pin_code:
                      type: integer
                      description: >-
                        The participant PIN code is used to authenticate audio
                        participants before they join the meeting.
                      format: int64
                      example: 380303
                  required:
                    - email
                    - first_name
                  description: ' Registrant.'
                  title: Meeting Registrant
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account: "{accountId}"<br> <br>
              **Error Code:** `3003` <br>
               You are not the meeting host.<br> <br>
              **Error Code:** `3000` <br>
               >
              Cannot access meeting info. <br>
              **Error Code:** `3161` <br>
               Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               Meeting host does not exist: "{userId}" <br>
        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
      delete:
        tags:
          - Meetings
        summary: Delete a meeting registrant
        description: >-
          Delete a meeting registrant.  
             
           


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingregistrantdelete
        parameters:
          - name: occurrence_id
            in: query
            description: The meeting occurrence ID.
            required: false
            schema:
              type: string
              example: approved
          - name: meetingId
            in: path
            description: The meeting ID.
            required: true
            schema:
              type: integer
              example: 91498058927
          - name: registrantId
            in: path
            description: The meeting registrant ID.
            required: true
            schema:
              type: string
              example: 9tboDiHUQAeOnbmudzWa5g
        responses:
          '204':
            description: |-
              **HTTP status code:** `204`   
               
              OK
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>

              Only available for paid users: {0}.<br>


              **Error Code:** `300` <br>

              The value that you entered for the Registrant ID field is invalid.
              Enter a valid value and try again.<br>


              **Error Code:** `404` <br>

              Registration has not been enabled for this meeting: {0}.<br>


              **Error Code:** `1001` <br>

              User {userId} does not exist or does not belong to this account.<br>


              **Error Code:** `3000` <br>

              Cannot access webinar info.


              **Error Code:** `3001` <br>

              Meeting does not exist: {0}.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/sip_dialing:
      post:
        tags:
          - Meetings
        summary: Get a meeting SIP URI with Passcode
        description: >-
          Get a meeting's SIP URI.  The URI consists of the meeting ID, (optional,
          user-supplied) passcode and participant identifier code.  The API return
          data also includes additional fields to indicate whether the API caller
          has a valid Cloud Room Connector subscription, the participant
          identifier code from the URI, and the SIP URI validity period (in
          seconds). 




          **Scopes:**
          `meeting:write:sip_dialing`,`meeting:write:admin:sip_dialing`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: getSipDialingWithPasscode
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  passcode:
                    type: string
                    description: >-
                      If customers desire that a passcode be embedded in the SIP
                      URI dial string, they must supply the passcode. Zoom will
                      not validate the passcode.
                    example: xxxx
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Meeting's encoded SIP URI returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    sip_dialing:
                      type: string
                      description: The meeting's encoded SIP URI.
                      example: 9678722567.xxxx....30qonrvgy@zoomcrc.com
                    paid_crc_plan_participant:
                      type: boolean
                      description: >-
                        Whether the API caller has a CRC (Conference Room
                        Connector) plan.
                      example: true
                    participant_identifier_code:
                      type: string
                      description: >-
                        This value identifies the meeting participant. It is
                        automatically embedded in the SIP URI if the API caller
                        has a CRC (Conference Room Connector) plan.
                      example: 30qonrvgy
                    expire_in:
                      type: integer
                      description: >-
                        The number of seconds the encoded SIP URI is valid before
                        it expires.
                      format: int64
                      example: 7200
                  description: Information about the meeting's encoded SIP URI.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>
              Invalid meeting ID.

              **Error Code:** `3000` <br>
              The meeting's SIP URI does not exist: {meetingId}.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `300` <br>
              Meeting ID does not exist.

              **Error Code:** `3001` <br>
              Meeting does not exist: {meetingId}

        security:
          - openapi_oauth:
              - meeting:write:sip_dialing
              - meeting:write:admin:sip_dialing
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:sip_dialing
            - meeting:write:admin:sip_dialing
    /meetings/{meetingId}/status:
      put:
        tags:
          - Meetings
        summary: Update meeting status
        description: >-
          Update the status of a meeting.  
             
           


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingStatus
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: string
                    description: >
                      `end` - End a meeting.  
                       
                      `recover` -
                      [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting)
                      a deleted meeting.
                    example: recover
                    enum:
                      - end
                      - recover
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Meeting updated.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>

              User does not belong to this account: {accountId}.


              **Error Code:** `3000` <br>

              Cannot access meeting info.


              **Error Code:** `3003` <br>

              You're not the meeting host.


              **Error Code:** `3063` <br>

              Can not end on-premise user's meeting: {meetingId}.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              Meeting host does not exist: {userId}.

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/survey:
      get:
        tags:
          - Meetings
        summary: Get a meeting survey
        description: >-
          Display information about a [meeting
          survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). 
          **Prerequisites:** * The host has a **Pro** license. * The [**Meeting
          Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys)
          feature is enabled on the host's account. * The meeting must be a
          scheduled meeting. Instant meetings do not have survey features enabled.


          **Scopes:** `meeting:read`,`meeting:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: meetingSurveyGet
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be more than 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
               Meeting survey object returned.
            content:
              application/json:
                schema:
                  title: Meeting Survey Object
                  type: object
                  properties:
                    custom_survey:
                      type: object
                      properties:
                        title:
                          maxLength: 64
                          type: string
                          description: The survey's title, up to 64 characters.
                          example: Learn something new
                        anonymous:
                          type: boolean
                          description: >-
                            Allow participants to anonymously answer survey
                            questions. 

                             This value defaults to `true`.
                          example: false
                          default: false
                        numbered_questions:
                          type: boolean
                          description: |-
                            Whether to display the number in the question name. 

                             This value defaults to `true`.
                          example: false
                          default: false
                        show_question_type:
                          type: boolean
                          description: >-
                            Whether to display the question type in the question
                            name. 

                             This value defaults to `false`.
                          example: false
                          default: false
                        feedback:
                          maxLength: 320
                          type: string
                          description: |-
                            The survey's feedback, up to 320 characters. 

                             This value defaults to `Thank you so much for taking the time to complete the survey. Your feedback really makes a difference.`.
                          example: >-
                            Thank you so much for taking the time to complete the
                            survey. Your feedback really makes a difference.
                        questions:
                          maxItems: 100
                          minItems: 1
                          type: array
                          description: Information about the meeting survey's questions.
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The survey question, up to 420 characters.
                                example: How useful was this meeting?
                              type:
                                type: string
                                description: |-
                                  The survey's question and answer type. 
                                  * `single` - Single choice. 
                                  * `multiple` - Multiple choice. 
                                  * `matching` - Matching. 
                                  * `rank_order` - Rank order 
                                  * `short_answer` - Short answer 
                                  * `long_answer` - Long answer. 
                                  * `fill_in_the_blank` - Fill in the blank 
                                  * `rating_scale` - Rating scale.
                                example: single
                                extensions:
                                  x-enum-descriptions:
                                    - Single choice
                                    - Multiple choice
                                    - Matching
                                    - Rank order
                                    - Short answer
                                    - Long answer
                                    - Fill in the blank
                                    - Rating scale
                                enum:
                                  - single
                                  - multiple
                                  - matching
                                  - rank_order
                                  - short_answer
                                  - long_answer
                                  - fill_in_the_blank
                                  - rating_scale
                              answer_required:
                                type: boolean
                                description: >-
                                  Whether participants must answer the question. 

                                  * `true` - The participant must answer the
                                  question. 

                                  * `false` - The participant does not need to
                                  answer the question. 

                                   This value defaults to `false`.
                                example: false
                                default: false
                              show_as_dropdown:
                                type: boolean
                                description: >-
                                  Whether to display the radio selection as a
                                  drop-down box. 

                                  * `true` - Show as a drop-down box. 

                                  * `false` - Do not show as a drop-down box. 

                                   This value defaults to `false`.
                                example: false
                                default: false
                              answers:
                                minItems: 2
                                type: array
                                description: >-
                                  The survey question's available answers. This
                                  field requires a **minimum** of two answers. 


                                  * For `single` and `multiple` questions, you can
                                  only provide a maximum of 50 answers. 

                                  * For `matching` polls, you can only provide a
                                  maximum of 16 answers. 

                                  * For `rank_order` polls, you can only provide a
                                  maximum of seven answers.
                                items:
                                  maxLength: 200
                                  type: string
                                  example: Extremely useful
                              prompts:
                                maxItems: 10
                                minItems: 2
                                type: array
                                description: >-
                                  Information about the prompt questions. This
                                  field only applies to `matching` and
                                  `rank_order` questions. You **must** provide a
                                  minimum of two prompts, up to a maximum of 10
                                  prompts.
                                items:
                                  type: object
                                  properties:
                                    prompt_question:
                                      maxLength: 200
                                      type: string
                                      description: The question prompt's title.
                                      example: How are you?
                              answer_min_character:
                                minimum: 1
                                type: integer
                                description: >-
                                  The allowed minimum number of characters. This
                                  field only applies to `short_answer` and
                                  `long_answer` questions. You must provide at
                                  least a **one** character minimum value.
                                example: 1
                              answer_max_character:
                                type: integer
                                description: >-
                                  The allowed maximum number of characters. This
                                  field only applies to `short_answer` and
                                  `long_answer` questions. 

                                  * For `short_answer` question, a maximum of 500
                                  characters. 

                                  * For `long_answer` question, a maximum of 2,000
                                  characters.
                                example: 200
                              rating_min_value:
                                minimum: 0
                                type: integer
                                description: >-
                                  The rating scale's minimum value. This value
                                  cannot be less than zero. 

                                   This field only applies to the `rating_scale` survey.
                                example: 1
                              rating_max_value:
                                maximum: 10
                                type: integer
                                description: >-
                                  The rating scale's maximum value, up to a
                                  maximum value of 10. 

                                   This field only applies to the `rating_scale` survey.
                                example: 4
                              rating_min_label:
                                maxLength: 50
                                type: string
                                description: >-
                                  The low score label used for the
                                  `rating_min_value` field, up to 50 characters. 

                                   This field only applies to the `rating_scale` survey.
                                example: Not likely
                              rating_max_label:
                                maxLength: 50
                                type: string
                                description: >-
                                  The high score label used for the
                                  `rating_max_value` field, up to 50 characters. 

                                   This field only applies to the `rating_scale` survey.
                                example: Extremely Likely
                      description: Information about the customized meeting survey.
                    show_in_the_browser:
                      type: boolean
                      description: >-
                        Whether the **Show in the browser when the meeting ends**
                        option is enabled. 

                        * `true` - Enabled. 

                        * `false` - Disabled. 

                         This value defaults to `true`.
                      example: true
                      default: true
                    third_party_survey:
                      maxLength: 64
                      type: string
                      description: The link to the third party meeting survey.
                      example: https://example.com
                  description: Information about the meeting survey.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               Invalid meeting ID. <br>
              **Error Code:** `3000` <br>
               Cannot access Webinar information. <br>
              **Error Code:** `3000` <br>
               Meeting survey disabled. To enable this feature, enable the "Meeting Survey" setting in the Zoom web portal's "Settings" interface. <br>
              **Error Code:** `3161` <br>
               Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `300` <br>
               Meeting ID does not exist. <br>
              **Error Code:** `3001` <br>
               Meeting does not exist: {meetingId}. <br>
        security:
          - openapi_oauth:
              - meeting:read
              - meeting:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - meeting:read
            - meeting:read:admin
      delete:
        tags:
          - Meetings
        summary: Delete a meeting survey
        description: >-
          Delete a [meeting
          survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). 

           **Prerequisites:** 
          * The host must be a **Pro** user type. 

          * The [**Meeting
          Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys)
          feature enabled in the host's account. 

          * The meeting must be a scheduled meeting. Instant meetings do not have
          survey features enabled.


          **Scopes:** `meeting:write`,`meeting:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingSurveyDelete
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
               Meeting survey deleted.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Invalid meeting ID.


              **Error Code:** `3000` <br>

              * Cannot access Webinar information. <br>
               * Meeting survey disabled. To enable this feature, enable the "Meeting Survey" setting in the Zoom web portal's "Settings" interface.

              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `300` <br>
              Meeting ID does not exist.

              **Error Code:** `3001` <br>
              Meeting does not exist: {meetingId}.

        security:
          - openapi_oauth:
              - meeting:write
              - meeting:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write
            - meeting:write:admin
      patch:
        tags:
          - Meetings
        summary: Update a meeting survey
        description: >-
          Update a [meeting
          survey](https://support.zoom.us/hc/en-us/articles/4404969060621-Post-meeting-survey-and-reporting). 
          **Prerequisites:** * The host must be a **Pro** user type. * The
          [**Meeting
          Survey**](https://support.zoom.us/hc/en-us/articles/4404939095053-Enabling-meeting-surveys)
          feature is enabled in the host's account. * The meeting must be a
          scheduled meeting. Instant meetings do not have survey features enabled.


          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: meetingSurveyUpdate
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, store it as a long-format integer and **not** a simple integer. Meeting IDs can be over 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          content:
            application/json:
              schema:
                title: Meeting Survey Object
                type: object
                properties:
                  custom_survey:
                    type: object
                    properties:
                      title:
                        maxLength: 64
                        type: string
                        description: The survey's title, up to 64 characters.
                        example: Learn something new
                      anonymous:
                        type: boolean
                        description: >-
                          Allow participants to anonymously answer survey
                          questions. 

                           This value defaults to `true`.
                        example: false
                        default: false
                      numbered_questions:
                        type: boolean
                        description: |-
                          Whether to display the number in the question name. 

                           This value defaults to `true`.
                        example: false
                        default: false
                      show_question_type:
                        type: boolean
                        description: >-
                          Whether to display the question type in the question
                          name. 

                           This value defaults to `false`.
                        example: false
                        default: false
                      feedback:
                        maxLength: 320
                        type: string
                        description: |-
                          The survey's feedback, up to 320 characters. 

                           This value defaults to `Thank you so much for taking the time to complete the survey. Your feedback really makes a difference.`.
                        example: >-
                          Thank you so much for taking the time to complete the
                          survey. Your feedback really makes a difference.
                      questions:
                        maxItems: 100
                        minItems: 1
                        type: array
                        description: Information about the meeting survey's questions.
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The survey question, up to 420 characters.
                              example: How useful was this meeting?
                            type:
                              type: string
                              description: |-
                                The survey's question and answer type. 
                                * `single` - Single choice. 
                                * `multiple` - Multiple choice. 
                                * `matching` - Matching. 
                                * `rank_order` - Rank order 
                                * `short_answer` - Short answer 
                                * `long_answer` - Long answer. 
                                * `fill_in_the_blank` - Fill in the blank 
                                * `rating_scale` - Rating scale.
                              example: single
                              extensions:
                                x-enum-descriptions:
                                  - Single choice
                                  - Multiple choice
                                  - Matching
                                  - Rank order
                                  - Short answer
                                  - Long answer
                                  - Fill in the blank
                                  - Rating scale
                              enum:
                                - single
                                - multiple
                                - matching
                                - rank_order
                                - short_answer
                                - long_answer
                                - fill_in_the_blank
                                - rating_scale
                            answer_required:
                              type: boolean
                              description: >-
                                Whether participants must answer the question. 

                                * `true` - The participant must answer the
                                question. 

                                * `false` - The participant does not need to
                                answer the question. 

                                 This value defaults to `false`.
                              example: false
                              default: false
                            show_as_dropdown:
                              type: boolean
                              description: >-
                                Whether to display the radio selection as a
                                drop-down box. 

                                * `true` - Show as a drop-down box. 

                                * `false` - Do not show as a drop-down box. 

                                 This value defaults to `false`.
                              example: false
                              default: false
                            answers:
                              minItems: 2
                              type: array
                              description: >-
                                The survey question's available answers. This
                                field requires a **minimum** of two answers. 


                                * For `single` and `multiple` questions, you can
                                only provide a maximum of 50 answers. 

                                * For `matching` polls, you can only provide a
                                maximum of 16 answers. 

                                * For `rank_order` polls, you can only provide a
                                maximum of seven answers.
                              items:
                                maxLength: 200
                                type: string
                                example: Extremely useful
                            prompts:
                              maxItems: 10
                              minItems: 2
                              type: array
                              description: >-
                                Information about the prompt questions. This field
                                only applies to `matching` and `rank_order`
                                questions. You **must** provide a minimum of two
                                prompts, up to a maximum of 10 prompts.
                              items:
                                type: object
                                properties:
                                  prompt_question:
                                    maxLength: 200
                                    type: string
                                    description: The question prompt's title.
                                    example: How are you?
                            answer_min_character:
                              minimum: 1
                              type: integer
                              description: >-
                                The allowed minimum number of characters. This
                                field only applies to `short_answer` and
                                `long_answer` questions. You must provide at least
                                a **one** character minimum value.
                              example: 1
                            answer_max_character:
                              type: integer
                              description: >-
                                The allowed maximum number of characters. This
                                field only applies to `short_answer` and
                                `long_answer` questions. 

                                * For `short_answer` question, a maximum of 500
                                characters. 

                                * For `long_answer` question, a maximum of 2,000
                                characters.
                              example: 200
                            rating_min_value:
                              minimum: 0
                              type: integer
                              description: >-
                                The rating scale's minimum value. This value
                                cannot be less than zero. 

                                 This field only applies to the `rating_scale` survey.
                              example: 1
                            rating_max_value:
                              maximum: 10
                              type: integer
                              description: >-
                                The rating scale's maximum value, up to a maximum
                                value of 10. 

                                 This field only applies to the `rating_scale` survey.
                              example: 4
                            rating_min_label:
                              maxLength: 50
                              type: string
                              description: >-
                                The low score label used for the
                                `rating_min_value` field, up to 50 characters. 

                                 This field only applies to the `rating_scale` survey.
                              example: Not likely
                            rating_max_label:
                              maxLength: 50
                              type: string
                              description: >-
                                The high score label used for the
                                `rating_max_value` field, up to 50 characters. 

                                 This field only applies to the `rating_scale` survey.
                              example: Extremely Likely
                    description: Information about the customized meeting survey.
                  show_in_the_browser:
                    type: boolean
                    description: >-
                      Whether the **Show in the browser when the meeting ends**
                      option is enabled. 

                      * `true` - Enabled. 

                      * `false` - Disabled. 

                       This value defaults to `true`.
                    example: true
                    default: true
                  third_party_survey:
                    maxLength: 64
                    type: string
                    description: The link to the third party meeting survey.
                    example: https://example.com
                description: Information about the meeting survey.
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
               Meeting survey updated.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               Invalid meeting ID. <br>
              **Error Code:** `300` <br>
               Invalid third party survey: {third_party_survey}. <br>
              **Error Code:** `3161` <br>
               Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
              **Error Code:** `3000` <br>
               Cannot access Webinar information. <br>
              **Error Code:** `3000` <br>
               Meeting survey disabled. To enable this feature, enable the "Meeting Survey" setting in the Zoom web portal's "Settings" interface. <br>
              **Error Code:** `3000` <br>
               Not allowed host to use a 3rd-party survey link. To use this feature, enable the "Allow host to use a 3rd-party survey link" setting in the "Account Settings" page of the Zoom web portal. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `300` <br>
               Meeting ID does not exist. <br>
              **Error Code:** `3001` <br>
               Meeting does not exist: {meetingId}. <br>
        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /meetings/{meetingId}/token:
      get:
        tags:
          - Meetings
        summary: Get meeting's token
        description: >-
          Get a meeting's [closed caption token (caption
          URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service).
          This token lets you use a third-party service to stream text to their
          closed captioning software to the Zoom meeting. 


          **Prerequisites:** 

          * The **Closed captioning** setting enabled in the Zoom web portal. 

          * The **Allow use of caption API Token to integrate with 3rd-party
          Closed Captioning services** setting enabled.


          **Scopes:** `meeting:read`,`meeting:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: meetingToken
        parameters:
          - name: meetingId
            in: path
            description: |-
              The meeting's ID. 

               When storing this value in your database, you must store it as a long format integer and **not** an integer. Meeting IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
          - name: type
            in: query
            description: >-
              The meeting token type: 

              * `closed_caption_token` &mdash; The third-party closed caption API
              token. 


              This defaults to `closed_caption_token`.
            required: false
            schema:
              type: string
              example: closed_caption_token
              default: closed_caption_token
              enum:
                - closed_caption_token
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Meeting token returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
                      description: The generated meeting token.
                      example: >-
                        https://example.com/closedcaption?id=200610693&ns=GZHkEA==&expire=86400&spparams=id%2Cns%2Cexpire&signature=nYtXJqRKCW
                  description: Information about the meeting token.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Invalid meeting ID.


              **Error Code:** `3000` <br>

              * Cannot access Webinar information. <br>

              * Meeting survey disabled. To enable this feature, enable the
              "Meeting Survey" setting in the Zoom web portal's "Settings"
              interface.


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `300` <br>
              Meeting ID does not exist.

              **Error Code:** `3001` <br>
              Meeting does not exist: {meetingId}

        security:
          - openapi_oauth:
              - meeting:read
              - meeting:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read
            - meeting:read:admin
    /past_meetings/{meetingId}:
      get:
        tags:
          - Meetings
        summary: Get past meeting details
        description: >-
          Get information about a past meeting. 

           

          **Scopes:** `meeting:read:admin`,`meeting:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: pastMeetingDetails
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's ID or universally unique ID (UUID). 

              * If you provide a meeting ID, the API will return a response for
              the latest meeting instance. 

              * If you provide a meeting UUID that begins with a `/` character or
              contains the `//` characters, you **must** [double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
              the meeting UUID before making an API request.
            required: true
            schema:
              oneOf:
                - type: integer
                  example: 5638296721
                - type: string
                  example: 4444AAAiAAAAAiAiAiiAii==
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Meeting information returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: >-
                        The [meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).
                      format: int64
                      example: 5638296721
                    uuid:
                      type: string
                      description: >-
                        The meeting's UUID. You **must** [double
                        encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
                        this value if the meeting UUID begins with a `/` character
                        or contains the `//` character.
                      example: 4444AAAiAAAAAiAiAiiAii==
                    duration:
                      type: integer
                      description: The meeting's duration, in minutes.
                      example: 60
                    start_time:
                      type: string
                      description: The meeting's start date and time.
                      format: date-time
                      example: '2021-07-13T21:44:51Z'
                    end_time:
                      type: string
                      description: The meeting's end date and time.
                      format: date-time
                      example: '2021-07-13T23:00:51Z'
                    host_id:
                      type: string
                      description: The host's ID.
                      example: x1yCzABCDEfg23HiJKl4mN
                    dept:
                      type: string
                      description: The meeting host's department.
                      example: Developers
                    participants_count:
                      type: integer
                      description: The number of meeting participants.
                      example: 2
                    source:
                      type: string
                      description: >-
                        Whether the meeting was created directly through Zoom or
                        via an API request: 

                        * If the meeting was created via an OAuth app, this field
                        returns the OAuth app's name. 

                        * If the meeting was created via JWT or the Zoom Web
                        Portal, this returns the `Zoom` value.
                      example: Zoom
                    topic:
                      type: string
                      description: The meeting's topic.
                      example: My Meeting
                    total_minutes:
                      type: integer
                      description: >-
                        The total number of minutes attended by the meeting's host
                        and participants.
                      example: 55
                    type:
                      type: integer
                      description: >-
                        The meeting type: 

                        * `0` &mdash; A prescheduled meeting. 

                        * `1` &mdash; An instant meeting. 

                        * `2` &mdash; A scheduled meeting. 

                        * `3` &mdash; A recurring meeting with no fixed time. 

                        * `4` &mdash; A [personal meeting
                        room](https://support.zoom.us/hc/en-us/articles/201362843). 

                        * `7` &mdash; A [PAC (Personal Audio
                        Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting)
                        meeting. 

                        * `8` &mdash; A recurring meeting with a fixed time.
                      example: 1
                      enum:
                        - 0
                        - 1
                        - 2
                        - 3
                        - 4
                        - 7
                        - 8
                    user_email:
                      type: string
                      description: The user's email address.
                      format: email
                      example: jchill@example.com
                    user_name:
                      type: string
                      description: The user's display name.
                      example: Jill Chill
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>
              * User does not exist: {userId} 
              * User "{userId}" does not exist or does not belong to this account.

              **Error Code:** `300` <br>
              Cannot access meeting information.

              **Error Code:** `200` <br>
              Only available for paid account: {accountId}

              **Error Code:** `12702` <br>
              Can not access a meeting a year ago.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `3001` <br>
              * This meeting is not available or the meeting ID is invalid. 
              * The meeting ID is invalid or the meeting has not ended.

        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
    /past_meetings/{meetingId}/instances:
      get:
        tags:
          - Meetings
        summary: List past meeting instances
        description: >-
          Return a list of past meeting instances. 

           

          **Scopes:** `meeting:read:admin`,`meeting:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: pastMeetings
        parameters:
          - name: meetingId
            in: path
            description: The past meeting's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 93398114182
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
               List of ended meeting instances returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    meetings:
                      type: array
                      description: List of ended meeting instances.
                      items:
                        type: object
                        properties:
                          start_time:
                            type: string
                            description: Start time
                            format: date-time
                            example: '2022-03-26T05:37:59Z'
                          uuid:
                            type: string
                            description: >+
                              Meeting UUID. Unique meeting ID. Each meeting
                              instance will generate its own Meeting UUID (i.e.,
                              after a meeting ends, a new UUID will be generated
                              for the next instance of the meeting). [Double
                              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
                              your UUID when using it for API calls if the UUID
                              begins with a '/'or contains '//' in it.

                            example: Vg8IdgluR5WDeWIkpJlElQ==
                  title: Meeting instances
                  description: List of Meetings
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
    /past_meetings/{meetingId}/participants:
      get:
        tags:
          - Meetings
        summary: Get past meeting participants
        description: >-
          Retrieve information on participants from a past meeting. Note the API
          doesn't return results if there's only one participant in a meeting.  
             
           
          **Prerequisites:**  
           
          * Paid account on a Pro or higher plan.

            
              
             **Note**: Please double encode your UUID when using this API if the UUID begins with a '/'or contains '//' in it.


          **Scopes:** `meeting:read:admin`,`meeting:read`


          **Granular Scopes:**
          `meeting:read:list_past_participants`,`meeting:read:list_past_participants:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: pastMeetingParticipants
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's ID or universally unique ID (UUID). 

              * If you provide a meeting ID, the API will return a response for
              the latest meeting instance. 

              * If you provide a meeting UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the meeting
              UUID before making an API request.
            required: true
            schema:
              type: string
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Meeting participants' report returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned within a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: The number of all records available across pages.
                      example: 1
                    participants:
                      type: array
                      description: Array of meeting participant objects.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: >-
                              Universally unique identifier of the Participant. It
                              is the same as the User ID of the participant if the
                              participant joins the meeting by logging into Zoom.
                              If the participant joins the meeting without logging
                              in, the value of this field will be blank.
                            example: 30R7kT7bTIKSNUFEuH_Qlg
                          name:
                            type: string
                            description: Participant display name.
                            example: Jill Chill
                          user_id:
                            type: string
                            description: >-
                              Participant ID. This is a unique ID assigned to the
                              participant joining a meeting and is valid for that
                              meeting only.
                            example: '27423744'
                          registrant_id:
                            type: string
                            description: >-
                              The participant's unique registrant ID. This field
                              only returns if you pass the `registrant_id` value
                              for the `include_fields` query parameter. 


                              This field does not return if the `type` query
                              parameter is the `live` value.
                            example: _f08HhPJS82MIVLuuFaJPg
                          user_email:
                            type: string
                            description: >-
                              Email address of the user. If the participant is
                              **not** part of the host's account, this returns an
                              empty string value, with some exceptions. See [Email
                              address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for details.
                            example: jchill@example.com
                          join_time:
                            type: string
                            description: Participant join time.
                            format: date-time
                            example: '2022-03-23T06:58:09Z'
                          leave_time:
                            type: string
                            description: Participant leave time.
                            format: date-time
                            example: '2022-03-23T07:02:28Z'
                          duration:
                            type: integer
                            description: >-
                              Participant duration, in seconds, calculated by
                              subtracting the `leave_time` from the `join_time`
                              for the `user_id`. If the participant leaves and
                              rejoins the same meeting, they will be assigned a
                              different `user_id` and Zoom displays their new
                              duration in a separate object. Note that because of
                              this, the duration may not reflect the total time
                              the user was in the meeting.
                            example: 259
                          failover:
                            type: boolean
                            description: Indicates if failover happened during the meeting.
                            example: false
                          status:
                            type: string
                            description: |-
                              The participant's status. 
                              * `in_meeting` - In a meeting. 
                              * `in_waiting_room` - In a waiting room.
                            example: in_meeting
                            enum:
                              - in_meeting
                              - in_waiting_room
                  description: Pagination object.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `1010` <br>
               User {userId} not exist or not belong to this account.<br><br> <br>
              **Error Code:** `300` <br>
               Cannot access meeting information.<br><br> <br>
              **Error Code:** `200` <br>
               Only available for paid account: {accountId} <br>
              **Error Code:** `12702` <br>
               Can not access a meeting a year ago. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `1001` <br>
               User {userId} not exist or not belong to this account.<br>
              User not exist: {userId}<br><br> <br>
              **Error Code:** `3001` <br>
               This meeting is not available or ID is not valid.<br>
              Meeting ID is invalid or not end. <br>
        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
          x-granular-scopes:
            - meeting:read:list_past_participants
            - meeting:read:list_past_participants:admin
    /past_meetings/{meetingId}/polls:
      get:
        tags:
          - Meetings
        summary: List past meeting's poll results
        description: >-
          [Polls](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
          allow the meeting host to survey attendees. List poll results of a
          meeting.  
             
           

          **Prerequisites**:  
           
          * Host user type must be **Pro**.

          * Meeting must be a scheduled meeting. Instant meetings do not have
          polling features enabled.


          **Scopes:** `meeting:read:admin`,`meeting:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: listPastMeetingPolls
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's ID or universally unique ID (UUID). 

              * If you provide a meeting ID, the API will return a response for
              the latest meeting instance. 

              * If you provide a meeting UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the meeting
              UUID before making an API request.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**  
               
              Polls returned successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: >-
                        [Meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
                        Unique identifier of the meeting in **long**
                        format(represented as int64 data type in JSON), also known
                        as the meeting number.
                      format: int64
                      example: 93398114182
                    questions:
                      type: array
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: >-
                              Email address of the user who submitted answers to
                              the poll. If the user is **not** part of the host's
                              account, this returns an empty string value, with
                              some exceptions. See [Email address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for details.
                            example: jchill@example.com
                          name:
                            type: string
                            description: >-
                              Name of the user who submitted answers to the poll.
                              If `anonymous` option is enabled for a poll, the
                              participant's polling information will be kept
                              anonymous and the value of `name` field will be
                              `Anonymous Attendee`.
                            example: Jill Chill
                          question_details:
                            type: array
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                                  description: Answer submitted by the user.
                                  example: Good
                                date_time:
                                  type: string
                                  description: >-
                                    Date and time at which the answer to the poll
                                    was submitted.
                                  format: date-time
                                  example: '2022-03-26T05:37:59Z'
                                polling_id:
                                  type: string
                                  description: Unique identifier of the poll.
                                  example: QalIoKWLTJehBJ8e1xRrbQ
                                question:
                                  type: string
                                  description: Question asked during the poll.
                                  example: How are you?
                    start_time:
                      type: string
                      description: The start time of the meeting.
                      format: date-time
                      example: '2022-03-26T05:37:59Z'
                    uuid:
                      type: string
                      description: Meeting UUID.
                      example: Vg8IdgluR5WDeWIkpJlElQ==
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `12702` <br>
               Can not access a meeting a year ago. <br>
        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
    /past_meetings/{meetingId}/qa:
      get:
        tags:
          - Meetings
        summary: List past meetings' Q&A
        description: >-
          The question &amp; answer (Q&amp;A) feature for Zoom Meetings lets
          attendees ask questions during a meeting and lets the other attendees
          answer those questions.  
           
          List Q&amp;A of a specific meeting.


          **Prerequisites:**  
           
          * 


          **Scopes:** `meeting:read:admin`,`meeting:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: listPastMeetingQA
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's ID or universally unique ID (UUID). 

              * If you provide a meeting ID, the API will return a response for
              the latest meeting instance. 

              * If you provide a meeting UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the meeting
              UUID before making an API request.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**  
               
              Q&amp;A returned successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: >-
                        [Meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
                        Unique identifier of the meeting in **long** format,
                        represented as int64 data type in JSON, also known as the
                        meeting number.
                      format: int64
                      example: 95204914252
                    questions:
                      type: array
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: >-
                              The user's email address. If the user is **not**
                              part of the host's account, this returns an empty
                              string value, with some exceptions. See [Email
                              address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for details.
                            example: jchill@example.com
                          name:
                            type: string
                            description: >-
                              The user's name. If `anonymous` option is enabled
                              for the Q&amp;A, the participant's information is be
                              kept anonymous and the value of `name` field is
                              `Anonymous Attendee`.
                            example: Jill Chill
                          question_details:
                            type: array
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                                  description: >-
                                    An answer submitted for the question. The
                                    value is 'live answered' if this is a live
                                    answer.
                                  example: Good
                                question:
                                  type: string
                                  description: A question asked during the Q&amp;A.
                                  example: How are you?
                    start_time:
                      type: string
                      description: The meeting's start time.
                      format: date-time
                      example: '2022-03-26T06:44:14Z'
                    uuid:
                      type: string
                      description: Meeting UUID.
                      example: Bznyg8KZTdCVbQxvS/oZ7w==
          '401':
            description: |
              **HTTP Status Code:** `401` <br>
               Unauthorized 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Meeting ID is invalid or not end.<br>
              This Meeting id does not belong to you:{meetingId}. <br>
        security:
          - openapi_oauth:
              - meeting:read:admin
              - meeting:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read:admin
            - meeting:read
    /users/{userId}/meeting_templates:
      get:
        tags:
          - Meetings
        summary: List meeting templates
        description: >-
          List available [meeting
          templates](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates)
          for a user. For user-level apps, pass [the `me`
          value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
          instead of the `userId` parameter.




          **Scopes:** `meeting:read`,`meeting:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: listMeetingTemplates
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID retrievable from the [List
              users](https://developers.zoom.us) API.
            required: true
            schema:
              type: string
              example: 30R7kT7bTIKSNUFEuH_Qlg
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**   
               
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    templates:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: The template ID.
                            example: AdxbhxCzKgSiWAw
                          name:
                            type: string
                            description: The template name.
                            example: My meeting template
                          type:
                            type: integer
                            description: |-
                              The template type:   
                               
                              `1`: Meeting template   
                               
                              `2`: Admin meeting template
                            example: 1
                    total_records:
                      type: integer
                      description: Total records found for this request.
                      example: 1
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `3161` <br>
               Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
          '404':
            description: >
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User not exist: {userId}.<br>
              User {userId} does not exist or does not belong to this account.
              <br>
        security:
          - openapi_oauth:
              - meeting:read
              - meeting:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:read
            - meeting:read:admin
      post:
        tags:
          - Meetings
        summary: Create a meeting template from an existing meeting
        description: >-
          Create a meeting template from an existing meeting. 




          **Scopes:** `meeting:write:admin`,`meeting:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: meetingTemplateCreate
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID retrievable from the [List
              users](https://developers.zoom.us) API.
            required: true
            schema:
              type: string
              example: 30R7kT7bTIKSNUFEuH_Qlg
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meeting_id:
                    type: integer
                    description: >-
                      The meeting ID aka the meeting number in long (int64)
                      format.
                    format: int64
                    example: 96172769962
                  name:
                    type: string
                    description: The template name.
                    example: My Meeting Template
                  save_recurrence:
                    type: boolean
                    description: >-
                      If the field is set to true, the recurrence meeting template
                      will be saved as the scheduled meeting.
                    example: false
                    default: false
                  overwrite:
                    type: boolean
                    description: >-
                      Overwrite an existing meeting template if the template is
                      created from same existing meeting.
                    example: false
                    default: false
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`  
               
              Meeting template created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The template ID.
                      example: AdxbhxCzKgSiWAw
                    name:
                      type: string
                      description: The template name.
                      example: My Meeting Template
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              * Meeting ID does not exist. 

              * Invalid meeting ID. 

              * You can only create up to 40 meeting templates.


              **Error Code:** `3000` <br>

              * Cannot access webinar information. 

              * Meeting template name already exists: {templateName}.


              **Error Code:** `3001` <br>

              Meeting does not exist: {meetingId}


              **Error Code:** `3161` <br>

              Meeting hosting and scheduling capabilities are not allowed for your
              user account.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              * User not exist: {userId}. 
              * User {userId} does not exist or does not belong to this account.

        security:
          - openapi_oauth:
              - meeting:write:admin
              - meeting:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - meeting:write:admin
            - meeting:write
    /users/{userId}/meetings:
      get:
        tags:
          - Meetings
        summary: List meetings
        description: >-
          List a meeting host user's scheduled meetings. For user-level apps, pass
          [the `me`
          value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
          instead of the `userId` parameter. 


          **Note** 

          * This API **only** supports scheduled meetings. This API does not
          return information about instant meetings. 

          * This API only returns a user's [unexpired
          meetings](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). 

           

          **Scopes:** `meeting:read`,`meeting:read:admin`


          **Granular Scopes:**
          `meeting:read:list_meetings`,`meeting:read:list_meetings:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: meetings
        parameters:
          - name: userId
            in: path
            description: >-
              The user's user ID or email address. For user-level apps, pass the
              `me` value.
            required: true
            schema:
              type: string
          - name: type
            in: query
            description: >-
              The type of meeting. 

              * `scheduled` - All valid previous (unexpired) meetings, live
              meetings, and upcoming scheduled meetings. 

              * `live` - All the ongoing meetings. 

              * `upcoming` - All upcoming meetings, including live meetings. 

              * `upcoming_meetings` - All upcoming meetings, including live
              meetings. 

              * `previous_meetings` - All the previous meetings.
            required: false
            schema:
              type: string
              example: scheduled
              default: scheduled
              enum:
                - scheduled
                - live
                - upcoming
                - upcoming_meetings
                - previous_meetings
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: page_number
            in: query
            description: The page number of the current page in the returned records.
            required: false
            schema:
              type: integer
              example: 1
          - name: from
            in: query
            description: The start date.
            required: false
            schema:
              type: string
              format: date
              example: '2023-01-01'
          - name: to
            in: query
            description: The end date.
            required: false
            schema:
              type: string
              format: date
              example: '2023-01-16'
          - name: timezone
            in: query
            description: >-
              The timezone to assign to the `from` and `to` value. For a list of
              supported timezones and their formats, see our [timezone
              list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
            required: false
            schema:
              type: string
              example: America/Los_Angeles
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              List of meeting objects returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        Use the next page token to paginate through large result
                        sets. A next page token will be returned whenever the set
                        of available results exceeds the current page size. This
                        token's expiration period is 15 minutes.
                      example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_number:
                      type: integer
                      description: The page number of the current results.
                      example: 1
                      default: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 1
                    meetings:
                      type: array
                      description: List of meeting objects.
                      items:
                        type: object
                        properties:
                          agenda:
                            type: string
                            description: >-
                              Meeting description. The length of agenda gets
                              truncated to 250 characters when you list all of a
                              user's meetings. To view a meeting's complete
                              agenda, or to retrieve details for a single meeting,
                              use the [**Get a
                              meeting**](https://developers.zoom.us) API.
                            example: My Meeting
                          created_at:
                            type: string
                            description: Time of creation.
                            format: date-time
                            example: '2022-03-23T05:31:16Z'
                          duration:
                            type: integer
                            description: Meeting duration.
                            example: 60
                          host_id:
                            type: string
                            description: ID of the user who is set as the meeting's host.
                            example: 30R7kT7bTIKSNUFEuH_Qlg
                          id:
                            type: integer
                            description: >-
                              Meeting ID - also known as the meeting number in
                              long (int64) format.
                            format: int64
                            example: 97763643886
                          join_url:
                            type: string
                            description: URL using which participants can join a meeting.
                            example: https://example.com/j/11111
                          pmi:
                            type: string
                            description: >-
                              [Personal meeting
                              ID](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                              This field is only returned if PMI was used to
                              schedule the meeting.
                            example: '97891943927'
                          start_time:
                            type: string
                            description: Meeting start time.
                            format: date-time
                            example: '2022-03-23T06:00:00Z'
                          timezone:
                            type: string
                            description: 'Timezone to format the meeting start time. '
                            example: America/Los_Angeles
                          topic:
                            type: string
                            description: Meeting topic.
                            example: My Meeting
                          type:
                            type: integer
                            description: |-
                              Meeting types.  
                               `1` - Instant meeting.  
                               `2` - Scheduled meeting.  
                               `3` - Recurring meeting with no fixed time.  
                               `8` - Recurring meeting with fixed time.
                            example: 2
                            extensions:
                              x-enum-descriptions:
                                - Instant Meeting
                                - Scheduled Meeting
                                - Recurring Meeting with no fixed time
                                - Recurring Meeting with fixed time
                            enum:
                              - 1
                              - 2
                              - 3
                              - 8
                          uuid:
                            type: string
                            description: >-
                              Unique Meeting ID. Each meeting instance will
                              generate its own Meeting UUID.
                            example: aDYlohsHRtCd4ii1uC2+hA==
                  description: Pagination object.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `3161` <br>
               Meeting hosting and scheduling capabilities are not allowed for your user account. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} not exist or not belong to this account.<br> <br>
        security:
          - openapi_oauth:
              - meeting:read
              - meeting:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - meeting:read
            - meeting:read:admin
          x-granular-scopes:
            - meeting:read:list_meetings
            - meeting:read:list_meetings:admin
      post:
        tags:
          - Meetings
        summary: Create a meeting
        description: >-
          [Create a
          meeting](https://support.zoom.us/hc/en-us/articles/201362413-Scheduling-meetings)
          for a user. For user-level apps, pass [the `me`
          value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
          instead of the `userId` parameter.


          * A meeting's `start_url` value is the URL a host or an alternative host
          can use to start a meeting. The expiration time for the `start_url`
          value is **two hours** for all regular users.

          * For `custCreate` meeting hosts (users created with the `custCreate`
          parameter via the [**Create
          users**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/userCreate)
          API), the expiration time of the `start_url` parameter is **90 days**
          from the generation of the `start_url`.


          **Note:** 


          For security reasons, the recommended way to programmatically get the
          updated `start_url` value after expiry is to call the [**Get a
          meeting**](/api-reference/zoom-api/methods#operation/meeting) API. Refer
          to the `start_url` value in the response. 

           **100 requests per day**. The rate limit is applied against the `userId` of the **meeting host** used to make the request.

          **Scopes:** `meeting:write`,`meeting:write:admin`


          **Granular Scopes:**
          `meeting:write:meeting`,`meeting:write:meeting:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: meetingCreate
        parameters:
          - name: userId
            in: path
            description: >-
              The user's user ID or email address. For user-level apps, pass the
              `me` value.
            required: true
            schema:
              type: string
        requestBody:
          description: Meeting object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  agenda:
                    maxLength: 2000
                    type: string
                    description: >-
                      The meeting's agenda. This value has a maximum length of
                      2,000 characters.
                    example: My Meeting
                  default_password:
                    type: boolean
                    description: >-
                      Whether to generate a default passcode using the user's
                      settings. This value defaults to `false`. 


                      If this value is `true` and the user has the PMI setting
                      enabled with a passcode, then the user's meetings will use
                      the PMI passcode. It will **not** use a default passcode.
                    example: false
                    default: false
                  duration:
                    type: integer
                    description: >-
                      The meeting's scheduled duration, in minutes. This field is
                      only used for scheduled meetings (`2`).
                    example: 60
                  password:
                    maxLength: 10
                    type: string
                    description: >-
                      The passcode required to join the meeting. By default, a
                      passcode can **only** have a maximum length of 10 characters
                      and only contain alphanumeric characters and the `@`, `-`,
                      `_`, and `*` characters. 

                      * If the account owner or administrator has configured
                      [minimum passcode requirement
                      settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
                      the passcode **must** meet those requirements. 

                      * If passcode requirements are enabled, use the [**Get user
                      settings**](https://developers.zoom.us/docs/api-reference/zoom-api/methods#operation/userSettings)
                      API or the [**Get account
                      settings**](https://developers.zoom.us/docs/api-reference/zoom-api/ma#operation/accountSettings)
                      API to get the requirements.
                    example: '123456'
                  pre_schedule:
                    type: boolean
                    description: >-
                      Whether to create a prescheduled meeting via the [GSuite
                      app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on).
                      This **only** supports the meeting `type` value of `2`
                      (scheduled meetings) and `3` (recurring meetings with no
                      fixed time). 

                      * `true` - Create a prescheduled meeting. 

                      * `false` - Create a regular meeting.
                    example: false
                    default: false
                  recurrence:
                    required:
                      - type
                    type: object
                    properties:
                      end_date_time:
                        type: string
                        description: >-
                          Select the final date when the meeting will recur before
                          it is canceled. Should be in UTC time, such as
                          2017-11-25T12:00:00Z. Cannot be used with `end_times`.
                        format: date-time
                        example: '2022-04-02T15:59:00Z'
                      end_times:
                        maximum: 60
                        type: integer
                        description: >-
                          Select how many times the meeting should recur before it
                          is canceled. If `end_times` is set to 0, it means there
                          is no end time. The maximum number of recurring is 60.
                          Cannot be used with `end_date_time`.
                        example: 7
                        default: 1
                      monthly_day:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          meeting of type** `3` to state the day in a month when
                          the meeting should recur. The value range is from 1 to
                          31.


                          For the meeting to recur on 23rd of each month, provide
                          `23` as this field's value and `1` as the
                          `repeat_interval` field's value. Instead, if you would
                          like the meeting to recur every three months, on 23rd of
                          the month, change the value of the `repeat_interval`
                          field to `3`.
                        example: 1
                        default: 1
                      monthly_week:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          meeting of type** `3` to state the week of the month
                          when the meeting should recur. If you use this field,
                          you must also use the `monthly_week_day` field to state
                          the day of the week when the meeting should recur.   
                           `-1` - Last week of the month.  
                           `1` - First week of the month.  
                           `2` - Second week of the month.  
                           `3` - Third week of the month.  
                           `4` - Fourth week of the month.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Last week
                            - First week
                            - Second week
                            - Third week
                            - Fourth week
                        enum:
                          - -1
                          - 1
                          - 2
                          - 3
                          - 4
                      monthly_week_day:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          meeting of type** `3` to state a specific day in a week
                          when the monthly meeting should recur. To use this
                          field, you must also use the `monthly_week` field. 

                            
                           `1` - Sunday.  
                           `2` - Monday.  
                           `3` - Tuesday.  
                           `4` -  Wednesday.  
                           `5` - Thursday.  
                           `6` - Friday.  
                           `7` - Saturday.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Sunday
                            - Monday
                            - Tuesday
                            - Wednesday
                            - Thursday
                            - Friday
                            - Saturday
                        enum:
                          - 1
                          - 2
                          - 3
                          - 4
                          - 5
                          - 6
                          - 7
                      repeat_interval:
                        type: integer
                        description: >+
                          Define the interval when the meeting should recur. For
                          instance, to schedule a meeting that recurs every two
                          months, set this field's value as `2` and the value of
                          the `type` parameter as `3`. 


                          For a daily meeting, the maximum interval you can set is
                          `90` days. For a weekly meeting the maximum interval
                          that you can set is  of `12` weeks. For a monthly
                          meeting, there is a maximum of `3` months.

                        example: 1
                      type:
                        type: integer
                        description: |-
                          Recurrence meeting types.
                           `1` - Daily.  
                           `2` - Weekly.  
                           `3` - Monthly.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Daily
                            - Weekly
                            - Monthly
                        enum:
                          - 1
                          - 2
                          - 3
                      weekly_days:
                        type: string
                        description: >-
                          This field is required if you're scheduling a recurring
                          meeting of type `2` to state the days of the week when
                          the meeting should repeat. 
                            
                            The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
                             
                            **Note:** To set the meeting to occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays, provide `1,3` as this field's value.

                             
                           `1` - Sunday.   
                           `2` - Monday.  
                           `3` - Tuesday.  
                           `4` -  Wednesday.  
                           `5` -  Thursday.  
                           `6` - Friday.  
                           `7` - Saturday.
                        example: '1'
                        default: '1'
                        enum:
                          - '1'
                          - '2'
                          - '3'
                          - '4'
                          - '5'
                          - '6'
                          - '7'
                    description: >-
                      Recurrence object. Use this object only for a meeting with
                      type `8`, a recurring meeting with a fixed time. 
                  schedule_for:
                    type: string
                    description: >-
                      The email address or user ID of the user to schedule a
                      meeting for.
                    example: jchill@example.com
                  settings:
                    type: object
                    properties:
                      additional_data_center_regions:
                        type: array
                        description: >-
                          Add additional meeting [data center
                          regions](https://support.zoom.us/hc/en-us/articles/360042411451-Selecting-data-center-regions-for-hosted-meetings-and-webinars).
                          Provide this value as an array of [country
                          codes](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries)
                          for the countries available as data center regions in
                          the [**Account
                          Profile**](https://zoom.us/account/setting) interface
                          but have been opted out of in the [user
                          settings](https://zoom.us/profile).


                          For example, the data center regions selected in your
                          [**Account Profile**](https://zoom.us/account) are
                          `Europe`, `Hong Kong SAR`, `Australia`, `India`,
                          `Japan`, `China`, `United States`, and `Canada`.
                          However, in the [**My
                          Profile**](https://zoom.us/profile) settings, you did
                          **not** select `India` and `Japan` for meeting and
                          webinar traffic routing.


                          To include `India` and `Japan` as additional data
                          centers, use the `[IN, TY]` value for this field.
                        items:
                          type: string
                          example: TY
                      allow_multiple_devices:
                        type: boolean
                        description: >-
                          Whether to allow attendees to join a meeting from
                          multiple devices. This setting is only applied to
                          meetings with registration enabled.
                        example: true
                      alternative_hosts:
                        type: string
                        description: >-
                          A semicolon-separated list of the meeting's alternative
                          hosts' email addresses or IDs.
                        example: jchill@example.com;thill@example.com
                      alternative_hosts_email_notification:
                        type: boolean
                        description: >-
                          Whether to send email notifications to alternative
                          hosts. This value defaults to `true`.
                        example: true
                        default: true
                      approval_type:
                        type: integer
                        description: |-
                          Enable meeting registration approval.
                          * `0` - Automatically approve registration.
                          * `1` - Manually approve registration.
                          * `2` - No registration required.

                          This value defaults to `2`.
                        example: 2
                        extensions:
                          x-enum-descriptions:
                            - Automatically approve registration.
                            - Manually approve registration.
                            - No registration required.
                        default: 2
                        enum:
                          - 0
                          - 1
                          - 2
                      approved_or_denied_countries_or_regions:
                        type: object
                        properties:
                          approved_list:
                            type: array
                            description: The list of approved countries or regions.
                            items:
                              type: string
                              example: CX
                          denied_list:
                            type: array
                            description: The list of blocked countries or regions.
                            items:
                              type: string
                              example: CA
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable the [**Approve or block entry for
                              users from specific
                              countries/regions**](https://support.zoom.us/hc/en-us/articles/360060086231-Approve-or-block-entry-for-users-from-specific-countries-regions)
                              setting.
                            example: true
                          method:
                            type: string
                            description: >-
                              Whether to allow or block users from specific
                              countries or regions.

                              * `approve` - Allow users from specific countries or
                              regions to join the meeting. If you select this
                              setting, include the approved countries or regions
                              in the `approved_list` field. 

                              * `deny` - Block users from specific countries or
                              regions from joining the meeting. If you select this
                              setting, include the blocked countries or regions in
                              the `denied_list` field.
                            example: approve
                            enum:
                              - approve
                              - deny
                        description: >-
                          The list of approved or blocked users from specific
                          countries or regions who can join the meeting.
                      audio:
                        type: string
                        description: |-
                          How participants join the audio portion of the meeting.
                          * `both` - Both telephony and VoIP. 
                          * `telephony` - Telephony only. 
                          * `voip` - VoIP only. 
                          * `thirdParty` - Third party audio conference.
                        example: telephony
                        extensions:
                          x-enum-descriptions:
                            - Telephony and VoIP.
                            - Telephony only.
                            - VoIP only.
                            - Third party audio conference.
                        default: both
                        enum:
                          - both
                          - telephony
                          - voip
                          - thirdParty
                      audio_conference_info:
                        maxLength: 2048
                        type: string
                        description: Third party audio conference info.
                        example: test
                      authentication_domains:
                        type: string
                        description: >-
                          The meeting's authenticated domains. Only Zoom users
                          whose email address contains an authenticated domain can
                          join the meeting. Comma-separate multiple domains or use
                          a wildcard for listing domains.
                        example: example.com
                      authentication_exception:
                        type: array
                        description: >-
                          A list of participants that can bypass meeting
                          authentication. These participants will receive a unique
                          meeting invite.
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              description: The participant's email address.
                              format: email
                              example: jchill@example.com
                            name:
                              type: string
                              description: The participant's name.
                              example: Jill Chill
                      authentication_option:
                        type: string
                        description: >-
                          If the `meeting_authentication` value is `true`, the
                          type of authentication required for users to join a
                          meeting.


                          To get this value, use the `authentication_options`
                          array's `id` value in the [**Get user
                          settings**](https://developers.zoom.us/docs/api-reference/zoom-api/methods#operation/userSettings)
                          API response.
                        example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
                      auto_recording:
                        type: string
                        description: |-
                          The automatic recording settings. 
                          * `local` - Record the meeting locally. 
                          * `cloud` - Record the meeting to the cloud. 
                          * `none` - Auto-recording disabled.

                          This value defaults to `none`.
                        example: cloud
                        extensions:
                          x-enum-descriptions:
                            - Record the meeting locally.
                            - Record the meeting to the cloud.
                            - Auto-recording disabled.
                        default: none
                        enum:
                          - local
                          - cloud
                          - none
                      breakout_room:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable the [**Breakout Room
                              pre-assign**](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms)
                              option.
                            example: true
                          rooms:
                            type: array
                            description: Information about the breakout rooms.
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: The breakout room's name.
                                  example: room1
                                participants:
                                  type: array
                                  description: >-
                                    The email addresses of the participants to
                                    assign to the breakout room.
                                  items:
                                    type: string
                                    example: jchill@example.com
                        description: >-
                          The [pre-assigned breakout
                          rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms)
                          settings.
                      calendar_type:
                        type: integer
                        description: >-
                          Indicates the type of calendar integration used to
                          schedule the meeting.

                          * `1` - [Zoom Outlook
                          add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 

                          * `2` - [Zoom for Google Workspace
                          add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)


                          Works with the `private_meeting` field to determine
                          whether to share details of meetings or not.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Outlook
                            - Google Calendar
                        enum:
                          - 1
                          - 2
                      close_registration:
                        type: boolean
                        description: >-
                          Whether to close registration after the event date. This
                          value defaults to `false`.
                        example: false
                        default: false
                      cn_meeting:
                        type: boolean
                        description: >-
                          Whether to host the meeting in China (CN). This value
                          defaults to `false`.
                        example: false
                        deprecated: true
                        default: false
                      contact_email:
                        type: string
                        description: The contact email address for meeting registration.
                        example: jchill@example.com
                      contact_name:
                        type: string
                        description: The contact name for meeting registration.
                        example: Jill Chill
                      email_notification:
                        type: boolean
                        description: >-
                          Whether to send email notifications to [alternative
                          hosts](https://support.zoom.us/hc/en-us/articles/208220166)
                          and [users with scheduling
                          privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege).
                          This value defaults to `true`.
                        example: true
                        default: true
                      encryption_type:
                        type: string
                        description: >-
                          The type of [end-to-end (E2EE)
                          encryption](https://support.zoom.us/hc/en-us/articles/360048660871)
                          to use for the meeting. 

                          * `enhanced_encryption` - Enhanced encryption.
                          Encryption is stored in the cloud when you enable this
                          option. 

                          * `e2ee` - End-to-end encryption. The encryption key is
                          stored on your local device and **cannot** be obtained
                          by anyone else. When you use E2EE encryption, [certain
                          features](https://support.zoom.us/hc/en-us/articles/360048660871),
                          such as cloud recording or phone and SIP/H.323 dial-in,
                          are **disabled**.
                        example: enhanced_encryption
                        enum:
                          - enhanced_encryption
                          - e2ee
                      focus_mode:
                        type: boolean
                        description: >-
                          Whether to enable the [**Focus Mode**
                          feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode)
                          when the meeting starts.
                        example: true
                      global_dial_in_countries:
                        type: array
                        description: A list of available global dial-in countries.
                        items:
                          type: string
                          example: US
                      host_video:
                        type: boolean
                        description: Whether to start meetings with the host video on.
                        example: true
                      in_meeting:
                        type: boolean
                        description: >-
                          Whether to host the meeting in India (IN). This value
                          defaults to `false`.
                        example: false
                        deprecated: true
                        default: false
                      jbh_time:
                        type: integer
                        description: >-
                          If the value of the `join_before_host` field is `true`,
                          this field indicates the time limits when a participant
                          can join a meeting before the meeting's host.


                          * `0` - Allow the participant to join the meeting at
                          anytime.

                          * `5` - Allow the participant to join 5 minutes before
                          the meeting's start time.

                          * `10` - Allow the participant to join 10 minutes before
                          the meeting's start time.
                        example: 0
                        enum:
                          - 0
                          - 5
                          - 10
                      join_before_host:
                        type: boolean
                        description: >-
                          Whether participants can join the meeting before its
                          host. This field is only used for scheduled meetings
                          (`2`) or recurring meetings (`3` and `8`). This value
                          defaults to `false`.


                          If the [**Waiting Room**
                          feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room)
                          is enabled, this setting is **disabled**.
                        example: false
                        default: false
                      language_interpretation:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable [language
                              interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                              for the meeting.
                            example: true
                          interpreters:
                            type: array
                            description: >-
                              Information about the meeting's language
                              interpreters.
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The interpreter's email address.
                                  format: email
                                  example: interpreter@example.com
                                languages:
                                  type: string
                                  description: >-
                                    A comma-separated list of the interpreter's
                                    languages. The string must contain two
                                    [country
                                    IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                                    For example, if the interpreter will translate
                                    from English to Chinese, then this value will
                                    be `US,CN`.
                                  example: US,FR
                        description: >-
                          The meeting's [language interpretation
                          settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                          Make sure to add the language in the web portal in order
                          to use it in the API. See link for details. 


                          **Note:** This feature is only available for certain
                          Meeting add-on, Education, and Business and higher
                          plans. If this feature is not enabled on the host's
                          account, this setting will **not** be applied to the
                          meeting.
                      sign_language_interpretation:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable [sign language
                              interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                              for the meeting.
                            example: true
                          interpreters:
                            maximum: 20
                            type: array
                            description: >-
                              Information about the meeting's sign language
                              interpreters.
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The interpreter's email address.
                                  format: email
                                  example: interpreter@example.com
                                sign_language:
                                  type: string
                                  description: |-
                                    The interpreter's sign language. 

                                     To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                                  example: American
                        description: >-
                          The meeting's [sign language interpretation
                          settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                          Make sure to add the language in the web portal in order
                          to use it in the API. See link for details. 


                          **Note:** If this feature is not enabled on the host's
                          account, this setting will **not** be applied to the
                          meeting.
                      meeting_authentication:
                        type: boolean
                        description: >-
                          If true, only
                          [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars)
                          users can join the meeting.
                        example: true
                      meeting_invitees:
                        type: array
                        description: A list of the meeting's invitees.
                        items:
                          type: object
                          properties:
                            email:
                              type: string
                              description: The invitee's email address.
                              format: email
                              example: jchill@example.com
                      mute_upon_entry:
                        type: boolean
                        description: Whether to mute participants upon entry.
                        example: false
                        default: false
                      participant_video:
                        type: boolean
                        description: Whether to start meetings with the participant video on.
                        example: false
                      private_meeting:
                        type: boolean
                        description: Whether to set the meeting as private.
                        example: false
                      registrants_confirmation_email:
                        type: boolean
                        description: |-
                          Whether to send registrants an email confirmation. 
                          * `true` - Send a confirmation email. 
                          * `false` - Do not send a confirmation email.
                        example: true
                      registrants_email_notification:
                        type: boolean
                        description: >-
                          Whether to send registrants email notifications about
                          their registration approval, cancellation, or rejection.


                          * `true` - Send an email notification.

                          * `false` - Do not send an email notification.

                           Set this value to `true` to also use the `registrants_confirmation_email` parameter.
                        example: true
                      registration_type:
                        type: integer
                        description: >-
                          The meeting's registration type. 

                          * `1` - Attendees register once and can attend any
                          meeting occurrence. 

                          * `2` - Attendees must register for each meeting
                          occurrence. 

                          * `3` - Attendees register once and can select one or
                          more meeting occurrences to attend.


                          This field is only for recurring meetings with fixed
                          times (`8`). This value defaults to `1`.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - >-
                              Attendees register once and can attend any meeting
                              occurrence.
                            - Attendees must register for each meeting occurrence.
                            - >-
                              Attendees register once and can select one or more
                              meeting occurrences to attend.
                        default: 1
                        enum:
                          - 1
                          - 2
                          - 3
                      show_share_button:
                        type: boolean
                        description: >-
                          Whether to include social media sharing buttons on the
                          meeting's registration page. This setting is only
                          applied to meetings with registration enabled.
                        example: true
                      use_pmi:
                        type: boolean
                        description: >-
                          Whether to use a [Personal Meeting ID
                          (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi)
                          instead of a generated meeting ID. This field is only
                          used for scheduled meetings (`2`), instant meetings
                          (`1`), or recurring meetings with no fixed time (`3`).
                          This value defaults to `false`.
                        example: false
                        default: false
                      waiting_room:
                        type: boolean
                        description: >-
                          Whether to enable the [**Waiting Room**
                          feature](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room).
                          If this value is `true`, this **disables** the
                          `join_before_host` setting.
                        example: false
                      watermark:
                        type: boolean
                        description: Whether to add a watermark when viewing a shared screen.
                        example: false
                        default: false
                      host_save_video_order:
                        type: boolean
                        description: >-
                          Whether the **Allow host to save video order** feature
                          is enabled.
                        example: true
                      alternative_host_update_polls:
                        type: boolean
                        description: >-
                          Whether the **Allow alternative hosts to add or edit
                          polls** feature is enabled. This requires Zoom version
                          5.8.0 or higher.
                        example: true
                      internal_meeting:
                        type: boolean
                        description: Whether to set the meeting as an internal meeting.
                        example: false
                        default: false
                      continuous_meeting_chat:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable the **Enable continuous meeting
                              chat** setting.
                            example: true
                          auto_add_invited_external_users:
                            type: boolean
                            description: >-
                              Whether to enable the **Automatically add invited
                              external users** setting.
                            example: true
                        description: >-
                          Information about the **Enable continuous meeting chat**
                          feature.
                      participant_focused_meeting:
                        type: boolean
                        description: >-
                          Whether to set the meeting as a participant focused
                          meeting.
                        example: false
                        default: false
                      push_change_to_calendar:
                        type: boolean
                        description: |-
                          Whether to push meeting changes to the calendar. 

                           To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.
                          * `true` - Push meeting changes to the calendar.
                          * `false` - Do not push meeting changes to the calendar.
                        example: false
                        default: false
                      resources:
                        type: array
                        description: The meeting's resources.
                        items:
                          type: object
                          properties:
                            resource_type:
                              type: string
                              description: The resource type.
                              example: whiteboard
                              enum:
                                - whiteboard
                            resource_id:
                              type: string
                              description: The resource ID.
                              example: X4Hy02w3QUOdskKofgb9Jg
                            permission_level:
                              type: string
                              description: >-
                                The permission levels for users to access the
                                whiteboard. 

                                * `editor` - Users with link access can edit the
                                board. 

                                * `commenter` - Users with link access can comment
                                on the board. 

                                * `viewer` - Users with link access can view the
                                board.
                              example: editor
                              default: editor
                              enum:
                                - editor
                                - commenter
                                - viewer
                      auto_start_meeting_summary:
                        type: boolean
                        description: Whether to automatically start a meeting summary.
                        example: false
                        default: false
                      auto_start_ai_companion_questions:
                        type: boolean
                        description: Whether to automatically start AI Companion questions.
                        example: false
                        default: false
                    description: Information about the meeting's settings.
                  start_time:
                    type: string
                    description: >-
                      The meeting's start time. This field is only used for
                      scheduled or recurring meetings with a fixed time. This
                      supports local time and GMT formats. 

                      * To set a meeting's start time in GMT, use the
                      `yyyy-MM-ddTHH:mm:ssZ` date-time format. For example,
                      `2020-03-31T12:02:00Z`. 

                      * To set a meeting's start time using a specific timezone,
                      use the `yyyy-MM-ddTHH:mm:ss` date-time format and specify
                      the [timezone
                      ID](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)
                      in the `timezone` field. If you do not specify a timezone,
                      the `timezone` value defaults to your Zoom account's
                      timezone. You can also use `UTC` for the `timezone` value.

                      **Note:** If no `start_time` is set for a scheduled meeting,
                      the `start_time` is set at the current time and the meeting
                      type changes to an instant meeting, which expires after 30
                      days.
                    format: date-time
                    example: '2022-03-25T07:32:55Z'
                  template_id:
                    type: string
                    description: >-
                      The account admin meeting template ID used to schedule a
                      meeting using a [meeting
                      template](https://support.zoom.us/hc/en-us/articles/360036559151-Meeting-templates).
                      For a list of account admin-provided meeting templates, use
                      the [**List meeting
                      templates**](https://developers.zoom.us/docs/api-reference/zoom-api/methods#operation/listMeetingTemplates)
                      API. 

                      * At this time, this field **only** accepts account admin
                      meeting template IDs. 

                      * To enable the account admin meeting templates feature,
                      [contact Zoom support](https://support.zoom.us/hc/en-us).
                    example: Dv4YdINdTk+Z5RToadh5ug==
                  timezone:
                    type: string
                    description: >-
                      The timezone to assign to the `start_time` value. This field
                      is only used for scheduled or recurring meetings with a
                      fixed time.


                      For a list of supported timezones and their formats, see our
                      [timezone
                      list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
                    example: America/Los_Angeles
                  topic:
                    maxLength: 200
                    type: string
                    description: The meeting's topic.
                    example: My Meeting
                  tracking_fields:
                    type: array
                    description: Information about the meeting's tracking fields.
                    items:
                      required:
                        - field
                      type: object
                      properties:
                        field:
                          type: string
                          description: The tracking field's label.
                          example: field1
                        value:
                          type: string
                          description: The tracking field's value.
                          example: value1
                  type:
                    type: integer
                    description: |-
                      The type of meeting.
                      * `1` - An instant meeting. 
                      * `2` - A scheduled meeting. 
                      * `3` - A recurring meeting with no fixed time. 
                      * `8` - A recurring meeting with fixed time.
                    example: 2
                    extensions:
                      x-enum-descriptions:
                        - Instant meeting.
                        - Scheduled meeting.
                        - Recurring meeting with no fixed time.
                        - Recurring meeting with fixed time.
                    default: 2
                    enum:
                      - 1
                      - 2
                      - 3
                      - 8
                description: The base meeting object.
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`  
               
              Meeting created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    assistant_id:
                      type: string
                      description: >-
                        The ID of the user who scheduled this meeting on behalf of
                        the host.
                      example: kFFvsJc-Q1OSxaJQLvaa_A
                    host_email:
                      type: string
                      description: The meeting host's email address.
                      format: email
                      example: jchill@example.com
                    id:
                      type: integer
                      description: >-
                        The [meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
                        Unique identifier of the meeting in **long**
                        format(represented as int64 data type in JSON), also known
                        as the meeting number.
                      format: int64
                      example: 92674392836
                    registration_url:
                      type: string
                      description: >-
                        The URL that registrants can use to register for a
                        meeting. This field is only returned for meetings that
                        have enabled registration.
                      example: >-
                        https://example.com/meeting/register/7ksAkRCoEpt1Jm0wa-E6lICLur9e7Lde5oW6
                    agenda:
                      type: string
                      description: Agenda
                      example: My Meeting
                    created_at:
                      type: string
                      description: The date and time when this meeting was created.
                      format: date-time
                      example: '2022-03-25T07:29:29Z'
                    duration:
                      type: integer
                      description: The meeting duration.
                      example: 60
                    h323_password:
                      type: string
                      description: H.323/SIP room system passcode
                      example: '123456'
                    join_url:
                      type: string
                      description: >-
                        URL for participants to join the meeting. This URL should
                        only be shared with users that you would like to invite
                        for the meeting.
                      example: https://example.com/j/11111
                    chat_join_url:
                      type: string
                      description: The URL to join the chat.
                      example: https://example.com/launch/jc/11111
                    occurrences:
                      type: array
                      description: Array of occurrence objects.
                      items:
                        type: object
                        properties:
                          duration:
                            type: integer
                            description: Duration.
                            example: 60
                          occurrence_id:
                            type: string
                            description: >-
                              Occurrence ID: Unique Identifier that identifies an
                              occurrence of a recurring webinar. [Recurring
                              webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                              can have a maximum of 50 occurrences.
                            example: '1648194360000'
                          start_time:
                            type: string
                            description: Start time.
                            format: date-time
                            example: '2022-03-25T07:46:00Z'
                          status:
                            type: string
                            description: |-
                              Occurrence status. 
                               `available` - Available occurrence.  
                               `deleted` -  Deleted occurrence.
                            example: available
                            enum:
                              - available
                              - deleted
                        description: >-
                          Occurrence object. This object is only returned for
                          recurring webinars.
                    password:
                      type: string
                      description: >+
                        The meeting passcode. This passcode may only contain these
                        characters: `[a-z A-Z 0-9 @ - _ * !]`


                        If **Require a passcode when scheduling new meetings**
                        setting has been enabled and
                        [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
                        for the user, the passcode field will be autogenerated in
                        the response even if it is not provided in the API
                        request. 


                      example: '123456'
                    pmi:
                      type: string
                      description: >-
                        [Personal meeting ID
                        (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                        Only used for scheduled meetings and recurring meetings
                        with no fixed time.
                      example: '97891943927'
                    pre_schedule:
                      type: boolean
                      description: >-
                        Whether the prescheduled meeting was created via the
                        [GSuite
                        app](https://support.zoom.us/hc/en-us/articles/360020187492-Zoom-for-GSuite-add-on).
                        This only supports the meeting `type` value of `2`
                        (scheduled meetings) and `3` (recurring meetings with no
                        fixed time). 

                        * `true` - A GSuite prescheduled meeting. 

                        * `false` - A regular meeting.
                      example: false
                      default: false
                    recurrence:
                      required:
                        - type
                      type: object
                      properties:
                        end_date_time:
                          type: string
                          description: >-
                            Select the final date when the meeting will recur
                            before it is canceled. Should be in UTC time, such as
                            2017-11-25T12:00:00Z. Cannot be used with `end_times`.
                          format: date-time
                          example: '2022-04-02T15:59:00Z'
                        end_times:
                          maximum: 60
                          type: integer
                          description: >-
                            Select how many times the meeting should recur before
                            it is canceled. If `end_times` is set to 0, it means
                            there is no end time. The maximum number of recurring
                            is 60. Cannot be used with `end_date_time`.
                          example: 7
                          default: 1
                        monthly_day:
                          type: integer
                          description: >-
                            Use this field only if you're scheduling a recurring
                            meeting of type `3` to state the day in a month when
                            the meeting should recur. The value range is from 1 to
                            31.


                            For instance, if you would like the meeting to recur
                            on 23rd of each month, provide `23` as this field's
                            value and `1` as the `repeat_interval` field's value.
                            Instead, to have the meeting recur every three months
                            on 23rd of the month, change the value of the
                            `repeat_interval` field to `3`.
                          example: 1
                          default: 1
                        monthly_week:
                          type: integer
                          description: >-
                            Use this field **only if you're scheduling a recurring
                            meeting of type** `3` to state the week of the month
                            when the meeting should recur. If you use this field,
                            you must also use the `monthly_week_day` field to
                            state the day of the week when the meeting should
                            recur.   
                             `-1` - Last week of the month.  
                             `1` - First week of the month.  
                             `2` - Second week of the month.  
                             `3` - Third week of the month.  
                             `4` - Fourth week of the month.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Last week
                              - First week
                              - Second week
                              - Third week
                              - Fourth week
                          enum:
                            - -1
                            - 1
                            - 2
                            - 3
                            - 4
                        monthly_week_day:
                          type: integer
                          description: >-
                            Use this field **only if you're scheduling a recurring
                            meeting of type** `3` to state a specific day in a
                            week when the monthly meeting should recur. To use
                            this field, you must also use the `monthly_week`
                            field. 

                              
                             `1` - Sunday.  
                             `2` - Monday.  
                             `3` - Tuesday.  
                             `4` -  Wednesday.  
                             `5` - Thursday.  
                             `6` - Friday.  
                             `7` - Saturday.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Sunday
                              - Monday
                              - Tuesday
                              - Wednesday
                              - Thursday
                              - Friday
                              - Saturday
                          enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                            - 6
                            - 7
                        repeat_interval:
                          type: integer
                          description: >+
                            Define the interval for the meeting to recur. For
                            instance, to schedule a meeting that recurs every two
                            months, set this field's value to `2` and the value of
                            the `type` parameter as `3`. 


                            For a daily meeting, the maximum interval you can set
                            is `90` days. For a weekly meeting the maximum
                            interval that you can set is  of `12` weeks. For a
                            monthly meeting, there is a maximum of `3` months.

                          example: 1
                        type:
                          type: integer
                          description: |-
                            Recurrence meeting types.
                             `1` - Daily.  
                             `2` - Weekly.  
                             `3` - Monthly.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Daily
                              - Weekly
                              - Monthly
                          enum:
                            - 1
                            - 2
                            - 3
                        weekly_days:
                          type: string
                          description: >-
                            This field is required **if you're scheduling a
                            recurring meeting of type** `2` to state the days of
                            the week when the meeting should repeat.
                             
                              This field's value could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as this field's value.  
                               
                              **Note:** If you would like the meeting to occur on multiple days of a week, provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays, provide `1,3` as this field's value.

                               
                             `1`  - Sunday.   
                             `2` - Monday.  
                             `3` - Tuesday.  
                             `4` -  Wednesday.  
                             `5` -  Thursday.  
                             `6` - Friday.  
                             `7` - Saturday.
                          example: '1'
                          default: '1'
                          enum:
                            - '1'
                            - '2'
                            - '3'
                            - '4'
                            - '5'
                            - '6'
                            - '7'
                      description: >-
                        Recurrence object. Use this object only for a meeting with
                        type `8`, a recurring meeting with fixed time. 
                    settings:
                      type: object
                      properties:
                        allow_multiple_devices:
                          type: boolean
                          description: >-
                            Allow attendees to join the meeting from multiple
                            devices. This setting only works for meetings that
                            require
                            [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
                          example: true
                        alternative_hosts:
                          type: string
                          description: >-
                            A semicolon-separated list of the meeting's
                            alternative hosts' email addresses or IDs.
                          example: jchill@example.com;thill@example.com
                        alternative_hosts_email_notification:
                          type: boolean
                          description: >-
                            Flag to determine whether to send email notifications
                            to alternative hosts, default value is true.
                          example: true
                          default: true
                        alternative_host_update_polls:
                          type: boolean
                          description: >-
                            Whether the **Allow alternative hosts to add or edit
                            polls** feature is enabled. This requires Zoom version
                            5.8.0 or higher.
                          example: true
                        approval_type:
                          type: integer
                          description: >-
                            Enable registration and set approval for the
                            registration. Note that this feature requires the host
                            to be of **Licensed** user type. **Registration cannot
                            be enabled for a basic user.**   
                               
                             

                            `0` - Automatically approve.  
                             `1` - Manually approve.  
                             `2` - No registration required.
                          example: 0
                          extensions:
                            x-enum-descriptions:
                              - Automatically Approve
                              - Manually Approve
                              - No Registration Required
                          default: 2
                          enum:
                            - 0
                            - 1
                            - 2
                        approved_or_denied_countries_or_regions:
                          type: object
                          properties:
                            approved_list:
                              type: array
                              description: >-
                                List of countries or regions from where
                                participants can join this meeting. 
                              items:
                                type: string
                                example: CX
                            denied_list:
                              type: array
                              description: >-
                                List of countries or regions from where
                                participants can not join this meeting. 
                              items:
                                type: string
                                example: CA
                            enable:
                              type: boolean
                              description: >-
                                `true` - Setting enabled to either allow users or
                                block users from specific regions to join your
                                meetings.   
                                 

                                `false` - Setting disabled.
                              example: true
                            method:
                              type: string
                              description: >-
                                Specify whether to allow users from specific
                                regions to join this meeting; or block users from
                                specific regions from joining this meeting.   
                                   
                                 
                                `approve`: Allow users from specific
                                regions/countries to join this meeting. If this
                                setting is selected, the approved
                                regions/countries must be included in the
                                `approved_list`.  
                                   
                                 
                                `deny`: Block users from specific
                                regions/countries from joining this meeting. If
                                this setting is selected, the approved
                                regions/countries must be included in the
                                `denied_list`
                              example: approve
                              enum:
                                - approve
                                - deny
                          description: >
                            Approve or block users from specific regions or
                            countries from joining this meeting. 
                        audio:
                          type: string
                          description: >-
                            Determine how participants can join the audio portion
                            of the meeting.  
                             `both` - Both Telephony and VoIP.  
                             `telephony` - Telephony only.  
                             `voip` - VoIP only.  
                             `thirdParty` - Third party audio conference.
                          example: telephony
                          extensions:
                            x-enum-descriptions:
                              - Both Telephony and VoIP
                              - Telephony only
                              - VoIP only
                              - Third party audio conference
                          default: both
                          enum:
                            - both
                            - telephony
                            - voip
                            - thirdParty
                        audio_conference_info:
                          maxLength: 2048
                          type: string
                          description: Third party audio conference info.
                          example: test
                        authentication_domains:
                          type: string
                          description: >-
                            If user has configured [Sign Into Zoom with Specified
                            Domains](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                            option, this will list the domains that are
                            authenticated.
                          example: example.com
                        authentication_exception:
                          type: array
                          description: >-
                            The participants added here will receive unique
                            meeting invite links and bypass authentication.
                          items:
                            type: object
                            properties:
                              email:
                                type: string
                                description: The participant's email address.
                                format: email
                                example: jchill@example.com
                              name:
                                type: string
                                description: The participant's name.
                                example: Jill Chill
                              join_url:
                                type: string
                                description: URL for participants to join the meeting.
                                example: https://example.com/s/11111
                        authentication_name:
                          type: string
                          description: >-
                            Authentication name set in the [authentication
                            profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
                          example: Sign in to Zoom
                        authentication_option:
                          type: string
                          description: Meeting authentication option ID.
                          example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
                        auto_recording:
                          type: string
                          description: |-
                            Automatic recording.
                             `local` - Record on local.  
                             `cloud` -  Record on cloud.  
                             `none` - Disabled.
                          example: cloud
                          extensions:
                            x-enum-descriptions:
                              - Record to local device
                              - Record to cloud
                              - No Recording
                          default: none
                          enum:
                            - local
                            - cloud
                            - none
                        breakout_room:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Set this field's value to `true` to enable the
                                [breakout room
                                pre-assign](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4)
                                option.
                              example: true
                            rooms:
                              type: array
                              description: Create a room or rooms.
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: The breakout room's name.
                                    example: room1
                                  participants:
                                    type: array
                                    description: >-
                                      Email addresses of the participants who are
                                      to be assigned to the breakout room.
                                    items:
                                      type: string
                                      example: jchill@example.com
                          description: >-
                            Setting to [pre-assign breakout
                            rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
                        calendar_type:
                          type: integer
                          description: >-
                            The type of calendar integration used to schedule the
                            meeting. 

                            * `1` - [Zoom Outlook
                            add-in](https://support.zoom.us/hc/en-us/articles/360031592971-Getting-started-with-Outlook-plugin-and-add-in) 

                            * `2` - [Zoom for Google Workspace
                            add-on](https://support.zoom.us/hc/en-us/articles/360020187492-Using-the-Zoom-for-Google-Workspace-add-on)


                            Works with the `private_meeting` field to determine
                            whether to share details of meetings or not.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Outlook
                              - Google Calendar
                          enum:
                            - 1
                            - 2
                        close_registration:
                          type: boolean
                          description: Close registration after event date.
                          example: false
                          default: false
                        cn_meeting:
                          type: boolean
                          description: Host meeting in China.
                          example: false
                          deprecated: true
                          default: false
                        contact_email:
                          type: string
                          description: Contact email for registration
                          example: jchill@example.com
                        contact_name:
                          type: string
                          description: Contact name for registration
                          example: Jill Chill
                        custom_keys:
                          maxItems: 10
                          type: array
                          description: Custom keys and values assigned to the meeting.
                          items:
                            type: object
                            properties:
                              key:
                                maxLength: 64
                                type: string
                                description: Custom key associated with the user.
                                example: key1
                              value:
                                maxLength: 256
                                type: string
                                description: >-
                                  Value of the custom key associated with the
                                  user.
                                example: value1
                        email_notification:
                          type: boolean
                          description: >-
                            Whether to send email notifications to [alternative
                            hosts](https://support.zoom.us/hc/en-us/articles/208220166)
                            and [users with scheduling
                            privileges](https://support.zoom.us/hc/en-us/articles/201362803-Scheduling-privilege).
                            This value defaults to `true`.
                          example: true
                          default: true
                        encryption_type:
                          type: string
                          description: >-
                            Choose between enhanced encryption and [end-to-end
                            encryption](https://support.zoom.us/hc/en-us/articles/360048660871)
                            when starting or a meeting. When using end-to-end
                            encryption, several features (e.g. cloud recording,
                            phone/SIP/H.323 dial-in) will be **automatically
                            disabled**.
                             
                            `enhanced_encryption` - Enhanced encryption.
                            Encryption is stored in the cloud if you enable this
                            option.   
                             

                            `e2ee` - [End-to-end
                            encryption](https://support.zoom.us/hc/en-us/articles/360048660871).
                            The encryption key is stored in your local device and
                            can not be obtained by anyone else. Enabling this
                            setting also **disables** the join before host, cloud
                            recording, streaming, live transcription, breakout
                            rooms, polling, 1:1 private chat, and meeting
                            reactions features.
                          example: enhanced_encryption
                          enum:
                            - enhanced_encryption
                            - e2ee
                        enforce_login:
                          type: boolean
                          description: >-
                            Only signed in users can join this meeting.


                            **This field is deprecated and will not be supported
                            in the future.**    
                               
                             As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
                          example: true
                          deprecated: true
                        enforce_login_domains:
                          type: string
                          description: >-
                            Only signed in users with specified domains can join
                            meetings.


                            **This field is deprecated and will not be supported
                            in the future.**    
                               
                             As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the meeting.
                          example: example.com
                          deprecated: true
                        focus_mode:
                          type: boolean
                          description: >-
                            Whether the [**Focus Mode**
                            feature](https://support.zoom.us/hc/en-us/articles/360061113751-Using-focus-mode)
                            is enabled when the meeting starts.
                          example: true
                        global_dial_in_countries:
                          type: array
                          description: List of global dial-in countries.
                          items:
                            type: string
                            example: US
                        global_dial_in_numbers:
                          type: array
                          description: Global dial-in countries or regions.
                          items:
                            type: object
                            properties:
                              city:
                                type: string
                                description: City of the number, such as Chicago.
                                example: New York
                              country:
                                type: string
                                description: The country code, such as BR.
                                example: US
                              country_name:
                                type: string
                                description: Full name of country, such as Brazil.
                                example: US
                              number:
                                type: string
                                description: A phone number, such as +1 2332357613.
                                example: +1 1000200200
                              type:
                                type: string
                                description: Type of number.
                                example: toll
                                enum:
                                  - toll
                                  - tollfree
                        host_video:
                          type: boolean
                          description: Start video when the host joins the meeting.
                          example: true
                        in_meeting:
                          type: boolean
                          description: Host meeting in India.
                          example: false
                          deprecated: true
                          default: false
                        jbh_time:
                          type: integer
                          description: >-
                            If the value of `join_before_host` field is set to
                            `true`, use this field to indicate time limits when a
                            participant may join a meeting before a host.


                            *  `0` - Allow participant to join anytime.

                            *  `5`- Allow participant to join 5 minutes before
                            meeting start time.
                             * `10` - Allow participant to join 10 minutes before meeting start time.
                          example: 0
                          enum:
                            - 0
                            - 5
                            - 10
                        join_before_host:
                          type: boolean
                          description: >-
                            Allow participants to join the meeting before the host
                            starts the meeting. Only used for scheduled or
                            recurring meetings.
                          example: true
                          default: false
                        language_interpretation:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Whether to enable [language
                                interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                                for the meeting.
                              example: true
                            interpreters:
                              type: array
                              description: >-
                                Information about the meeting's language
                                interpreters.
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                                    description: The interpreter's email address.
                                    format: email
                                    example: interpreter@example.com
                                  languages:
                                    type: string
                                    description: >-
                                      A comma-separated list of the interpreter's
                                      languages. The string must contain two
                                      [country
                                      IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                                      For example, if the interpreter will
                                      translate from English to Chinese, then this
                                      value will be `US,CN`.
                                    example: US,FR
                          description: >-
                            The meeting's [language interpretation
                            settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                            Make sure to add the language in the web portal in
                            order to use it in the API. See link for details. 


                            **Note:** This feature is only available for certain
                            Meeting add-on, Education, and Business and higher
                            plans. If this feature is not enabled on the host's
                            account, this setting will **not** be applied to the
                            meeting.
                        sign_language_interpretation:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Whether to enable [sign language
                                interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                                for the meeting.
                              example: true
                            interpreters:
                              maximum: 20
                              type: array
                              description: >-
                                Information about the meeting's sign language
                                interpreters.
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                                    description: The interpreter's email address.
                                    format: email
                                    example: interpreter@example.com
                                  sign_language:
                                    type: string
                                    description: |-
                                      The interpreter's sign language. 

                                       To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                                    example: American
                          description: >-
                            The meeting's [sign language interpretation
                            settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                            Make sure to add the language in the web portal in
                            order to use it in the API. See link for details. 


                            **Note:** If this feature is not enabled on the host's
                            account, this setting will **not** be applied to the
                            meeting.
                        meeting_authentication:
                          type: boolean
                          description: '`true` - Only authenticated users can join meetings.'
                          example: true
                        mute_upon_entry:
                          type: boolean
                          description: Mute participants upon entry.
                          example: false
                          default: false
                        participant_video:
                          type: boolean
                          description: Start video when participants join the meeting.
                          example: false
                        private_meeting:
                          type: boolean
                          description: Whether the meeting is set as private.
                          example: false
                        registrants_confirmation_email:
                          type: boolean
                          description: |-
                            Whether to send registrants an email confirmation.
                            * `true` - Send a confirmation email.
                            * `false` - Do not send a confirmation email.
                          example: true
                        registrants_email_notification:
                          type: boolean
                          description: >-
                            Whether to send registrants email notifications about
                            their registration approval, cancellation, or
                            rejection.


                            * `true` - Send an email notification.

                            * `false` - Do not send an email notification.

                             Set this value to `true` to also use the `registrants_confirmation_email` parameter.
                          example: true
                        registration_type:
                          type: integer
                          description: >-
                            Registration type. Used for recurring meeting with
                            fixed time only. 
                             `1` - Attendees register once and can attend any of the occurrences.  
                             `2` - Attendees need to register for each occurrence to attend.  
                             `3` - Attendees register once and can choose one or more occurrences to attend.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - >-
                                Attendees register once and can attend any of the
                                occurrences
                              - >-
                                Attendees need to register for each occurrence to
                                attend
                              - >-
                                Attendees register once and can choose one or more
                                occurrences to attend
                          default: 1
                          enum:
                            - 1
                            - 2
                            - 3
                        show_share_button:
                          type: boolean
                          description: >-
                            Show social share buttons on the meeting registration
                            page.

                            This setting only works for meetings that require
                            [registration](https://support.zoom.us/hc/en-us/articles/211579443-Setting-up-registration-for-a-meeting).
                          example: true
                        use_pmi:
                          type: boolean
                          description: >-
                            Use a [personal meeting ID
                            (PMI)](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#understanding-personal-meeting-id-pmi).
                            Only used for scheduled meetings and recurring
                            meetings with no fixed time.
                          example: false
                          default: false
                        waiting_room:
                          type: boolean
                          description: Enable the waiting room.
                          example: false
                          default: false
                        watermark:
                          type: boolean
                          description: Add a watermark when viewing a shared screen.
                          example: false
                          default: false
                        host_save_video_order:
                          type: boolean
                          description: >-
                            Whether the **Allow host to save video order** feature
                            is enabled.
                          example: true
                        internal_meeting:
                          type: boolean
                          description: Whether to set the meeting as an internal meeting.
                          example: false
                          default: false
                        continuous_meeting_chat:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Whether to enable the **Enable continuous meeting
                                chat** setting.
                              example: true
                            auto_add_invited_external_users:
                              type: boolean
                              description: >-
                                Whether to enable the **Automatically add invited
                                external users** setting.
                              example: true
                            channel_id:
                              type: string
                              description: The channel's ID.
                              example: cabc1234567defghijkl01234
                          description: >-
                            Information about the **Enable continuous meeting
                            chat** feature.
                        participant_focused_meeting:
                          type: boolean
                          description: >-
                            Whether to set the meeting as a participant focused
                            meeting.
                          example: false
                          default: false
                        push_change_to_calendar:
                          type: boolean
                          description: >-
                            Whether to push meeting changes to the calendar. 

                             To enable this feature, configure the **Configure Calendar and Contacts Service** in the user's profile page of the Zoom web portal and enable the **Automatically sync Zoom calendar events information bi-directionally between Zoom and integrated calendars.** setting in the **Settings** page of the Zoom web portal.
                            * `true` - Push meeting changes to the calendar.

                            * `false` - Do not push meeting changes to the
                            calendar.
                          example: false
                          default: false
                        resources:
                          type: array
                          description: The meeting's resources.
                          items:
                            type: object
                            properties:
                              resource_type:
                                type: string
                                description: The resource type.
                                example: whiteboard
                                enum:
                                  - whiteboard
                              resource_id:
                                type: string
                                description: The resource ID.
                                example: X4Hy02w3QUOdskKofgb9Jg
                              permission_level:
                                type: string
                                description: >-
                                  The permission levels for users to access the
                                  whiteboard. 

                                  * `editor` - Users with link access can edit the
                                  board. 

                                  * `commenter` - Users with link access can
                                  comment on the board. 

                                  * `viewer` - Users with link access can view the
                                  board.
                                example: editor
                                default: editor
                                enum:
                                  - editor
                                  - commenter
                                  - viewer
                        auto_start_meeting_summary:
                          type: boolean
                          description: Whether to automatically start a meeting summary.
                          example: false
                          default: false
                        auto_start_ai_companion_questions:
                          type: boolean
                          description: Whether to automatically start AI Companion questions.
                          example: false
                          default: false
                      description: Meeting settings.
                    start_time:
                      type: string
                      description: >-
                        Meeting start date-time in UTC/GMT, such as
                        `2020-03-31T12:02:00Z`.
                      format: date-time
                      example: '2022-03-25T07:29:29Z'
                    start_url:
                      type: string
                      description: >-
                        URL to start the meeting. This URL should only be used by
                        the host of the meeting and **should not be shared with
                        anyone other than the host** of the meeting, since anyone
                        with this URL will be able to log in to the Zoom Client as
                        the host of the meeting.
                      example: https://example.com/s/11111
                    timezone:
                      type: string
                      description: Timezone to format `start_time`.
                      example: America/Los_Angeles
                    topic:
                      maxLength: 200
                      type: string
                      description: Meeting topic.
                      example: My Meeting
                    tracking_fields:
                      type: array
                      description: Tracking fields.
                      items:
                        type: object
                        properties:
                          field:
                            type: string
                            description: The tracking field's label.
                            example: field1
                          value:
                            type: string
                            description: The tracking field's value.
                            example: value1
                          visible:
                            type: boolean
                            description: >-
                              Indicates whether the [tracking
                              field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
                              is visible in the meeting scheduling options in the
                              Zoom Web Portal or not.


                              `true`: Tracking field is visible.   
                               

                              `false`: Tracking field is not visible to the users
                              in the meeting options in the Zoom Web Portal but
                              the field was used while scheduling this meeting via
                              API. An invisible tracking field can be used by
                              users while scheduling meetings via API only. 
                            example: true
                    type:
                      type: integer
                      description: Meeting type.
                      example: 2
                      extensions:
                        x-enum-descriptions:
                          - Instant Meeting
                          - Scheduled Meeting
                          - Recurring Meeting with no fixed time
                          - Recurring Meeting with fixed time
                      default: 2
                      enum:
                        - 1
                        - 2
                        - 3
                        - 8
                  description: Meeting object.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `3161` <br>
               Your user account is not allowed meeting hosting and scheduling capabilities. <br>
              **Error Code:** `3000` <br>
               Instant meetings do not support the `schedule_for` parameter, and you can't schedule an instant meeting for another user. <br>
              **Error Code:** `3000` <br>
               Users in '{userId}' have been blocked from joining meetings and webinars. To unblock them, go to the **Settings** page in the Zoom web portal and update **Block users in specific domains from joining meetings and webinars**. <br>
              **Error Code:** `3000` <br>
               You cannot schedule a meeting for {userId} <br>
              **Error Code:** `300` <br>
               The value that you entered in the `schedule_for` field is invalid. Enter a valid value and try again. <br>
              **Error Code:** `300` <br>
               Invalid `enforce_login_domains`. Separate multiple domains with semicolons. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `1001` <br>
               User does not exist: {userId}. <br>
          '429':
            description: |-
              **HTTP Status Code:** `429` <br>
               Too Many Requests  

               
        security:
          - openapi_oauth:
              - meeting:write
              - meeting:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - meeting:write
            - meeting:write:admin
          x-granular-scopes:
            - meeting:write:meeting
            - meeting:write:meeting:admin
    /users/{userId}/upcoming_meetings:
      get:
        tags:
          - Meetings
        summary: List upcoming meetings
        description: >-
          List a Zoom user's upcoming meetings. For user-level apps, pass [the
          `me`
          value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
          instead of the `userId` parameter.


          **Note**

          * This API includes the meetings that Zoom users schedule and the
          meetings they are invited to join.

          * This API **only** includes upcoming meetings within the next 24 hours.


          **Scopes:** `meeting:read`,`meeting:read:admin`


          **Granular Scopes:**
          `meeting:read:list_upcoming_meetings`,`meeting:read:list_upcoming_meetings:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: listUpcomingMeeting
        parameters:
          - name: userId
            in: path
            description: >-
              The user's user ID or email address. For user-level apps, pass [the
              `me`
              value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword).
            required: true
            schema:
              type: string
              example: 30R7kT7bTIKSNUFEuH_Qlg
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200` List of upcoming meeting objects
              returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    total_records:
                      type: integer
                      description: >-
                        The total number of all records available across all
                        pages.
                      example: 1
                    meetings:
                      type: array
                      description: List of upcoming meeting objects.
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              The [meeting
                              ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-)
                              - a unique identifier of the meeting in **long**
                              format, represented as int64 data type in JSON. Also
                              known as the meeting number.
                            format: int64
                            example: 97763643886
                          topic:
                            type: string
                            description: The meeting topic.
                            example: My Meeting
                          type:
                            type: integer
                            description: |-
                              Meeting types.
                              `1` - Instant meeting.
                              `2` - Scheduled meeting.
                              `3` - Recurring meeting with no fixed time.
                              `8` - Recurring meeting with fixed time.
                            example: 2
                            extensions:
                              x-enum-descriptions:
                                - Instant Meeting
                                - Scheduled Meeting
                                - Recurring Meeting with no fixed time
                                - Recurring Meeting with fixed time
                            enum:
                              - 1
                              - 2
                              - 3
                              - 8
                          start_time:
                            type: string
                            description: The meeting's start time.
                            format: date-time
                            example: '2022-03-23T06:00:00Z'
                          duration:
                            type: integer
                            description: Meeting duration.
                            example: 60
                          timezone:
                            type: string
                            description: The timezone to format the meeting start time.
                            example: America/Los_Angeles
                          created_at:
                            type: string
                            description: The meeting creation time.
                            format: date-time
                            example: '2022-03-23T05:31:16Z'
                          join_url:
                            type: string
                            description: The URL that participants can use to join a meeting.
                            example: https://example.com/j/11111
        security:
          - openapi_oauth:
              - meeting:read
              - meeting:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - meeting:read
            - meeting:read:admin
          x-granular-scopes:
            - meeting:read:list_upcoming_meetings
            - meeting:read:list_upcoming_meetings:admin
    /users/{userId}/pac:
      get:
        tags:
          - PAC
        summary: List a user's PAC accounts
        description: >-
          Retrieve a list of a user's [personal audio conference
          (PAC)](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
          accounts. For user-level apps, pass [the `me`
          value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
          instead of the `userId` parameter. 

           PAC allows Pro or higher account holders to host meetings through PSTN (phone dial-in) only. 

           **Prerequisites** 
          * A Pro or higher plan with an [Audio
          Conferencing](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
          subscription. 

          * The [**Personal Audio
          Conference**](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference#h_01F5BPM447M6QDJXX50RSFXKJ3)
          setting enabled in the user's profile.


          **Scopes:** `pac:read:admin`,`pac:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: userPACs
        parameters:
          - name: userId
            in: path
            description: >-
              The user's user ID or email address. For user-level apps, pass the
              `me` value.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
               PAC account list returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    pac_accounts:
                      type: array
                      description: Information about the PAC accounts.
                      items:
                        type: object
                        properties:
                          conference_id:
                            type: integer
                            description: The conference ID.
                            format: int64
                            example: 111111
                          dedicated_dial_in_number:
                            type: array
                            description: >-
                              Information about the account's dedicated dial-in
                              numbers.
                            items:
                              type: object
                              properties:
                                country:
                                  type: string
                                  description: The dial-in country code.
                                  example: USA
                                number:
                                  maxLength: 16
                                  type: string
                                  description: The dial-in number.
                                  example: '5550110'
                          global_dial_in_numbers:
                            type: array
                            description: >-
                              Information about the account's global dial-in
                              numbers.
                            items:
                              type: object
                              properties:
                                country:
                                  type: string
                                  description: The global dial-in country code.
                                  example: USA
                                number:
                                  maxLength: 16
                                  type: string
                                  description: The global dial-in number.
                                  example: '5550100'
                          listen_only_password:
                            maxLength: 6
                            type: string
                            description: >-
                              The listen-only password, up to six characters in
                              length.
                            example: 3c2b1a
                          participant_password:
                            maxLength: 6
                            type: string
                            description: >-
                              The participant password, up to six characters in
                              length.
                            example: a1b2c3
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `2024` <br>
               User does not have PAC enabled. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User does not exist: $userId <br>
        security:
          - openapi_oauth:
              - pac:read:admin
              - pac:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - pac:read:admin
            - pac:read
    /report/activities:
      get:
        tags:
          - Reports
        summary: Get sign In / sign out activity report
        description: >-
          Retrieve a list of sign in / sign out activity logs
          [report](https://support.zoom.us/hc/en-us/articles/201363213-Getting-Started-with-Reports)
          of users under a Zoom account.  
           
          **Prerequisites**  
           
          * Pro or higher plan.  
           


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:user_activities:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportSignInSignOutActivities
        parameters:
          - name: from
            in: query
            description: >-
              Start date for which you would like to view the activity logs
              report. Using the `from` and `to` parameters, specify a monthly date
              range for the report as the API only provides one month worth of
              data in one request. The specified date range should fall within the
              last six months.
            required: false
            schema:
              type: string
              format: date
              example: '2019-09-01'
          - name: to
            in: query
            description: >-
              End date up to which you would like to view the activity logs
              report.
            required: false
            schema:
              type: string
              format: date
              example: '2019-09-20'
          - name: page_size
            in: query
            description: The number of records to be returned within a single API call
            required: false
            schema:
              type: integer
              example: 30
          - name: next_page_token
            in: query
            description: Next page token is used to paginate through large result sets
            required: false
            schema:
              type: string
              example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    activity_logs:
                      type: array
                      description: Array of activity logs.
                      items:
                        type: object
                        properties:
                          client_type:
                            type: string
                            description: >-
                              The client interface type using which the activity
                              was performed.
                            example: Browser
                          email:
                            type: string
                            description: Email address of the user used for the activity.
                            format: email
                            example: jchill@example.com
                          ip_address:
                            type: string
                            description: The IP address of the user's device.
                            example: 192.0.2.1
                          time:
                            type: string
                            description: Time during which the activity occurred.
                            format: date-time
                            example: '2019-09-15T19:13:41Z'
                          type:
                            type: string
                            description: |-
                              The type of activity. 
                              * `Sign in` &mdash; Sign in activity by user. 
                              * `Sign out` &mdash; Sign out activity by user.
                            example: Sign out
                            enum:
                              - Sign in
                              - Sign out
                          version:
                            type: string
                            description: Zoom client version of the user.
                            example: 5.9.1.2581
                    from:
                      type: string
                      description: >-
                        Start date from which you want the activity logs report to
                        be generated.
                      example: '2019-09-01T00:00:00Z'
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
                    page_size:
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                    to:
                      type: string
                      description: >-
                        End date until which you want the activity logs report to
                        be generated
                      example: '2019-09-20T00:00:00Z'
                  description: Report object
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>
              No permission.<br>

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:user_activities:admin
    /report/billing:
      get:
        tags:
          - Reports
        summary: Get billing reports
        description: >-
          Get department billing reports of a Zoom account.


          **Prerequisites:**  
           
          * Pro or a higher account with Department Billing option enabled.
          Contact Zoom Support team for details.




          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:billing:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: getBillingReport
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**  
               
              Billing report returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    billing_reports:
                      type: array
                      items:
                        type: object
                        properties:
                          end_date:
                            type: string
                            description: End date of the billing period.
                            format: date
                            example: '2022-03-25'
                          id:
                            type: string
                            description: >-
                              Unique Identifier of the report. Use this ID to
                              retrieve billing invoice via the &quot;Get Billing
                              Invoices API&quot;. 


                              You can also use this ID to export a CSV file of the
                              billing report from this URL:
                              `https://zoom.us/account/report/billing/export?id={id}`.
                            example: indfhgfhfho
                          start_date:
                            type: string
                            description: Start date of the billing period.
                            format: date
                            example: '2022-03-25'
                          tax_amount:
                            type: string
                            description: Total tax amount for this billing period.
                            example: '456'
                          total_amount:
                            type: string
                            description: Total billing amount for this billing period.
                            example: '456'
                          type:
                            type: integer
                            description: >-
                              Type of the billing report. The value should be
                              either of the following:  
                               
                              `0` - Detailed Billing Reports

                              `1` - Custom Billing Reports
                            example: 1
                            enum:
                              - 0
                              - 1
                    currency:
                      type: string
                      description: Currency of the billed amount.
                      example: USD
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>
              No permission.

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:billing:admin
    /report/billing/invoices:
      get:
        tags:
          - Reports
        summary: Get billing invoice reports
        description: >-
          Get department billing invoices reports for a specific billing period.
          Provide the `billing_id` of the billing period for which you would like
          to retrieve the invoices for. This ID can be retrieved from **Get
          Billing Reports** API. 


          **Prerequisites:**  
           
          * Pro or a higher account with Department Billing option enabled.
          Contact the Zoom Support team to enable this feature.




          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:billing_invoice:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: getBillingInvoicesReports
        parameters:
          - name: billing_id
            in: query
            description: >+
              Unique Identifier of the Billing Report. Retrieve this ID from the
              response of **Get Billing Reports** API request. 

            required: true
            schema:
              type: string
              example: indfhgfhfho
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**  
               
              Billing Invoice reports returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    currency:
                      type: string
                      description: Currency of the billed amount in the invoice.
                      example: USD
                    invoices:
                      type: array
                      items:
                        type: object
                        properties:
                          end_date:
                            type: string
                            description: End date of the invoice period.
                            format: date
                            example: '2022-03-25'
                          invoice_charge_name:
                            type: string
                            description: Name of the invoice.
                            example: Audio Conferencing Options
                          invoice_number:
                            type: string
                            description: 'Invoice number '
                            example: '3'
                          quantity:
                            type: integer
                            description: Number of licenses bought.
                            example: 45
                          start_date:
                            type: string
                            description: Start date of the invoice period.
                            format: date
                            example: '2022-03-25'
                          tax_amount:
                            type: string
                            description: Tax amount in the invoice.
                            example: '34'
                          total_amount:
                            type: string
                            description: Total billed amount in the invoice.
                            example: '45'
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `5010` <br>
              Report does not exist.

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:billing_invoice:admin
    /report/cloud_recording:
      get:
        tags:
          - Reports
        summary: Get cloud recording usage report
        description: >-
          Retrieve cloud recording usage report for a specified period. You can
          only get cloud recording reports that is one day earlier than the
          current date and for the most recent period of 6 months. The date gap
          between from and to dates should be smaller or equal to 30 days.   
           
          **Prerequisites**  
           
          * Pro or higher plan.  
           


          **Scopes:** `report:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportCloudRecording
        parameters:
          - name: from
            in: query
            description: >-
              Start date in 'yyyy-mm-dd' format. The date range defined by the
              &quot;from&quot; and &quot;to&quot; parameters should only be one
              month as the report includes only one month worth of data at once.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-01'
          - name: to
            in: query
            description: End date.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-28'
          - name: group_id
            in: query
            description: >-
              The group ID. To get a group ID, use the [**List
              groups**](https://developers.zoom.us) API. 

               **Note:** The API response will only contain users who are members of the queried group ID.
            required: false
            schema:
              type: string
              example: TaVA8QKik_1233
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Cloud Recording Report Returned
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report
                      format: date
                      example: '2021-12-01'
                    to:
                      type: string
                      description: End date for this report
                      format: date
                      example: '2021-12-30'
                    cloud_recording_storage:
                      type: array
                      description: Array of cloud usage objects
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                            description: Date of the usage
                            format: date
                            example: '2021-12-05'
                          free_usage:
                            type: string
                            description: Free storage
                            example: Unlimited
                          plan_usage:
                            type: string
                            description: Paid storage
                            example: 3 TB
                          usage:
                            type: string
                            description: Storage used on the date
                            example: 3 MB
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>
              No permission.<br>
              ’

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - report:read:admin
    /report/daily:
      get:
        tags:
          - Reports
        summary: Get daily usage report
        description: >-
          Retrieve daily report to access the account-wide usage of Zoom services
          for each day in a given month. It lists the number of new users,
          meetings, participants, and meeting minutes.  
           
          **Prerequisites**  
           
          * Pro or higher plan.  
           


          **Scopes:** `report:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportDaily
        parameters:
          - name: year
            in: query
            description: Year for this report
            required: false
            schema:
              type: integer
              example: 2022
          - name: month
            in: query
            description: Month for this report
            required: false
            schema:
              type: integer
              example: 3
          - name: group_id
            in: query
            description: >-
              The group ID. To get a group ID, use the [**List
              groups**](https://developers.zoom.us) API. 

               **Note:** The API response will only contain users who are members of the queried group ID.
            required: false
            schema:
              type: string
              example: TaVA8QKik_1233
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Daily report retrieved.  
               
              This is only available for paid accounts:{accountId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    dates:
                      type: array
                      description: Array of date objects.
                      items:
                        type: object
                        properties:
                          date:
                            type: string
                            description: Date for this object.
                            format: date
                            example: '2022-03-01'
                          meeting_minutes:
                            type: integer
                            description: Number of meeting minutes on this date.
                            example: 34
                          meetings:
                            type: integer
                            description: Number of meetings on this date.
                            example: 2
                          new_users:
                            type: integer
                            description: Number of new users on this date.
                            example: 3
                          participants:
                            type: integer
                            description: Number of participants on this date.
                            example: 4
                    month:
                      type: integer
                      description: Month for this report.
                      example: 3
                    year:
                      type: integer
                      description: Year for this report.
                      example: 2022
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Daily report can only be provided for a month that falls within the
              recent 6 months.


              **Error Code:** `200` <br>

              No permission.<br>

              ’

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - report:read:admin
    /report/meetings/{meetingId}:
      get:
        tags:
          - Reports
        summary: Get meeting detail reports
        description: >-
          Get a detailed report for a past meeting.   
           
          **Prerequisites:**  
           
          * Pro or a higher plan.  
           
           

          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:meeting:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportMeetingDetails
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's ID or universally unique ID (UUID). 

              * If you provide a meeting ID, the API will return a response for
              the latest meeting instance. 

              * If you provide a meeting UUID that begins with a `/` character or
              contains the `//` characters, you **must** [double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
              the meeting UUID before making an API request.
            required: true
            schema:
              oneOf:
                - type: integer
                  example: 5638296721
                - type: string
                  example: 4444AAAiAAAAAiAiAiiAii==
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Meeting details returned.  
               
              This is only available for paid account.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    custom_keys:
                      maxItems: 10
                      type: array
                      description: Custom keys and values assigned to the meeting.
                      items:
                        type: object
                        properties:
                          key:
                            maxLength: 64
                            type: string
                            description: Custom key associated with the user.
                            example: Host Nation
                          value:
                            maxLength: 256
                            type: string
                            description: Value of the custom key associated with the user.
                            example: US
                    dept:
                      type: string
                      description: Department of the host.
                      example: HR
                    duration:
                      type: integer
                      description: Meeting duration.
                      example: 2
                    end_time:
                      type: string
                      description: Meeting end time.
                      format: date-time
                      example: '2022-03-15T07:42:22Z'
                    id:
                      type: integer
                      description: >-
                        [Meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
                        Unique identifier of the meeting in &quot;**long**&quot;
                        format(represented as int64 data type in JSON), also known
                        as the meeting number.
                      format: int64
                      example: 3927350525
                    participants_count:
                      type: integer
                      description: Number of meeting participants.
                      example: 2
                    start_time:
                      type: string
                      description: Meeting start time.
                      format: date-time
                      example: '2022-03-15T07:40:46Z'
                    topic:
                      type: string
                      description: Meeting topic.
                      example: My Meeting
                    total_minutes:
                      type: integer
                      description: >-
                        Number of meeting minutes. This represents the total
                        amount of meeting minutes attended by each participant
                        including the host, for meetings hosted by the user. For
                        instance if there were one host(named A) and one
                        participant(named B) in a meeting, the value of
                        total_minutes would be calculated as below:


                        **total_minutes** = Total Meeting Attendance Minutes of A
                        + Total Meeting Attendance Minutes of B
                      example: 3
                    tracking_fields:
                      type: array
                      description: Tracking fields.
                      items:
                        type: object
                        properties:
                          field:
                            type: string
                            description: Tracking fields type.
                            example: Host Nation
                          value:
                            type: string
                            description: Tracking fields value.
                            example: US
                    type:
                      type: integer
                      description: Meeting type.
                      example: 2
                    user_email:
                      type: string
                      description: User email.
                      example: jchill@example.com
                    user_name:
                      type: string
                      description: User display name.
                      example: Jill Chill
                    uuid:
                      type: string
                      description: >-
                        Meeting UUID. Each meeting instance will generate its own
                        UUID(i.e., after a meeting ends, a new UUID will be
                        generated for the next instance of the meeting). [Double
                        encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
                        your UUID when using it for API calls if the UUID begins
                        with a '/' or contains '//' in it.
                      example: iOTQZPmhTUq5a232ETb9eg==
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `12702` <br>
              Can not access meeting a year ago.<br>

              **Error Code:** `200` <br>
              No permission.<br>

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `3001` <br>
              Meeting {meetingId} not found or has expired.<br>

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:meeting:admin
    /report/meetings/{meetingId}/participants:
      get:
        tags:
          - Reports
        summary: Get meeting participant reports
        description: >-
          Return a report of a past meeting with two or more participants,
          including the host. To return a report for past meeting with only
          **one** participant, use the [**List meeting
          participants**](https://developers.zoom.us) API. 


          **Note:** 


          This API may return empty values for participants' `user_name`,
          `ip_address`, `location`, and `email` responses when the account calling
          this API: 

          * Does **not** have a signed HIPAA business associate agreement (BAA). 

          * Is a [**legacy** HIPAA BAA account](https://developers.zoom.us). 


          **Prerequisites:** 

          * A Pro or a higher plan.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:list_meeting_participants:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportMeetingParticipants
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's ID or universally unique ID (UUID). 

              * If you provide a meeting ID, the API will return a response for
              the latest meeting instance. 

              * If you provide a meeting UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the meeting
              UUID before making an API request.
            required: true
            schema:
              type: string
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: include_fields
            in: query
            description: >-
              Provide `registrant_id` as the value for this field if you would
              like to see the registrant ID attribute in the response of this API
              call. A registrant ID is a unique identifier of a [meeting
              registrant](https://developers.zoom.us).
            required: false
            schema:
              type: string
              example: registrant_id
              enum:
                - registrant_id
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Meeting participants report returned.  
               
              Only available for Paid or ZMP account: {accountId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned within a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: The number of all records available across pages.
                      example: 1
                    participants:
                      type: array
                      description: Array of meeting participant objects.
                      items:
                        type: object
                        properties:
                          customer_key:
                            maxLength: 35
                            type: string
                            description: >-
                              The participant's SDK identifier. This value can be
                              alphanumeric, up to a maximum length of 35
                              characters.
                            example: 349589LkJyeW
                          duration:
                            type: integer
                            description: Participant duration.
                            example: 259
                          failover:
                            type: boolean
                            description: Indicates if failover happened during the meeting.
                            example: false
                          id:
                            type: string
                            description: >-
                              The participant's universally unique ID (UUID). 

                              * If the participant joins the meeting by logging
                              into Zoom, this value is the `id` value in the
                              [**Get a user**](https://developers.zoom.us) API
                              response. 

                              * If the participant joins the meeting **without**
                              logging into Zoom, this returns an empty string
                              value. 


                              **Note:** Use the `participant_user_id` value
                              instead of this value. We will remove this response
                              in a future release.
                            example: 30R7kT7bTIKSNUFEuH_Qlg
                          join_time:
                            type: string
                            description: Participant join time.
                            format: date-time
                            example: '2022-03-23T06:58:09Z'
                          leave_time:
                            type: string
                            description: Participant leave time.
                            format: date-time
                            example: '2022-03-23T07:02:28Z'
                          name:
                            type: string
                            description: >-
                              Participant display name.


                              This returns an empty string value if the account
                              calling the API is a BAA account.
                            example: example
                          registrant_id:
                            type: string
                            description: >-
                              Unique identifier of the registrant. This field is
                              only returned if you entered
                              &quot;registrant_id&quot; as the value of
                              `include_fields` query parameter.
                            example: abcdefghij0-klmnopq23456
                          status:
                            type: string
                            description: |-
                              The participant's status. 
                              * `in_meeting` - In a meeting. 
                              * `in_waiting_room` - In a waiting room.
                            example: in_meeting
                            enum:
                              - in_meeting
                              - in_waiting_room
                          user_email:
                            type: string
                            description: >-
                              Participant email.


                              If the participant is **not** part of the host's
                              account, this returns an empty string value, with
                              some exceptions. See [Email address display
                              rules](https://developers.zoom.us) for details. This
                              returns an empty string value if the account calling
                              the API is a BAA account.
                            example: jchill@example.com
                          user_id:
                            type: string
                            description: >-
                              Participant ID. This is a unique ID assigned to the
                              participant joining a meeting and is valid for that
                              meeting only.
                            example: '27423744'
                          bo_mtg_id:
                            type: string
                            description: >-
                              The [breakout
                              room](https://support.zoom.us/hc/en-us/articles/206476313-Managing-breakout-rooms)
                              ID. Each breakout room is assigned a unique ID.
                            example: '27423744'
                          participant_user_id:
                            type: string
                            description: >-
                              The participant's universally unique ID (UUID). 

                              * If the participant joins the meeting by logging
                              into Zoom, this value is the `id` value in the
                              [**Get a user**](https://developers.zoom.us) API
                              response. 

                              * If the participant joins the meeting **without**
                              logging into Zoom, this returns an empty string
                              value.
                            example: DYHrdpjrS3uaOf7dPkkg8w
                  description: Pagination object.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
              **Error Code:** `12702` <br>
               Can not access meeting a year ago.<br> <br>
              **Error Code:** `200` <br>
               No permission.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Meeting  {MeetingId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:list_meeting_participants:admin
    /report/meetings/{meetingId}/polls:
      get:
        tags:
          - Reports
        summary: Get meeting poll reports
        description: >-
          Use this API to get a report of
          [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meetings)
          results for a past meeting. 

           **Prerequisites:** 
          * A Pro or a higher plan.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:list_meeting_polls:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportMeetingPolls
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's ID or universally unique ID (UUID). 

              * If you provide a meeting ID, the API will return a response for
              the latest meeting instance. 

              * If you provide a meeting UUID that begins with a `/` character or
              contains the `//` characters, you **must** [double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
              the meeting UUID before making an API request.
            required: true
            schema:
              oneOf:
                - type: integer
                  example: 5638296721
                - type: string
                  example: 4444AAAiAAAAAiAiAiiAii==
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` 
              * Meeting polls report returned. 
              * This is only available for paid account: {accountId}
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: >-
                        The [meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).
                      format: int64
                      example: 123456
                    uuid:
                      type: string
                      description: >-
                        The meeting's universally unique identifier (UUID). Each
                        meeting instance generates a meeting UUID.
                      example: 4444AAAiAAAAAiAiAiiAii==
                    start_time:
                      type: string
                      description: The meeting's start time.
                      format: date-time
                      example: '2022-02-01T12:34:12.660Z'
                    questions:
                      type: array
                      description: Information about the meeting questions.
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: The participant's email address.
                            format: email
                            example: jchill@example.com
                          name:
                            type: string
                            description: >-
                              The participant's display name. If the **Allow
                              participants to answer questions anonymously**
                              setting is enabled for a
                              [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                              the participant's polling information is kept
                              anonymous and the `name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Jill Chill
                          first_name:
                            type: string
                            description: >-
                              The participant's first name. If the **Allow
                              participants to answer questions anonymously**
                              setting is enabled for a
                              [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                              the participant's polling information is kept
                              anonymous and the `first_name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Jill
                          last_name:
                            type: string
                            description: >-
                              The participant's last name. If the **Allow
                              participants to answer questions anonymously**
                              setting is enabled for a
                              [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                              the participant's polling information is kept
                              anonymous and the `last_name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Chill
                          question_details:
                            type: array
                            description: Information about the user's questions and answers.
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                                  description: The user's given answer.
                                  example: I am wonderful.
                                date_time:
                                  type: string
                                  description: >-
                                    The date and time at which the user answered
                                    the poll question.
                                  example: '2022-02-01T12:37:12.660Z'
                                polling_id:
                                  type: string
                                  description: The poll's ID.
                                  example: 798fGJEWrA
                                question:
                                  type: string
                                  description: The poll question.
                                  example: How are you?
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `12702` <br>
              Can not access meeting a year ago.

              **Error Code:** `200` <br>
              No permission.<br>

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `3001` <br>
              Meeting "{meetingId}" not found or has expired.

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:list_meeting_polls:admin
    /report/meetings/{meetingId}/qa:
      get:
        tags:
          - Reports
        summary: Get meeting Q&A report
        description: >-
          Retrieve a report on questions asked and answered by participants from
          past meetings.   
             


           
          **Prerequisites:**  
           
          * Pro plan or higher.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:meeting_qna:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: reportMeetingQA
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's ID or universally unique ID (UUID). 

              * If you provide a meeting ID, the API will return a response for
              the latest meeting instance. 

              * If you provide a meeting UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the meeting
              UUID before making an API request.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Meeting Q&amp;A report returned.  
               
              Only available for Paid or ZMP account: {accountId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: >-
                        The meeting ID in `long` format, represented as int64 data
                        type in JSON. Also known as the meeting number.
                      format: int64
                      example: 245603123123
                    questions:
                      type: array
                      description: Array of meeting question objects.
                      items:
                        type: object
                        properties:
                          user_id:
                            type: string
                            description: >-
                              The user ID of the user who asked the question. This
                              value returns blank for external users.
                            example: hyROrs0TRCSvwmadI7L13w
                          email:
                            type: string
                            description: >-
                              Participant's email. If the participant is **not**
                              part of the host's account, this returns an empty
                              string value, with some exceptions. See [Email
                              address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for details.
                            example: jchilll@example.com
                          name:
                            type: string
                            description: >-
                              Participant's display name.  
                                

                              If the anonymous
                              [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer)
                              option is enabled and if a participant submits the
                              Q&amp;A without providing their name, the value of
                              the `name` field is &quot;Anonymous Attendee&quot;.
                            example: Jill Chill
                          question_details:
                            type: array
                            description: Array of questions from user.
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                                  description: >-
                                    The given answer. If this is a live answer,
                                    the value is 'live answered'.

                                    **Note:** All answers will be returned
                                    together and separated by semicolons. For more
                                    detailed answer information, please see the
                                    "answer_details" field.
                                  example: fine
                                  deprecated: true
                                question:
                                  type: string
                                  description: Asked question.
                                  example: how are you
                                question_id:
                                  type: string
                                  description: Question UUID.
                                  example: zxU4wOwnlxs
                                create_time:
                                  type: string
                                  description: Question create time.
                                  example: '2022-03-15T07:48:00Z'
                                answer_details:
                                  type: array
                                  description: Array of answers from the user.
                                  items:
                                    type: object
                                    properties:
                                      user_id:
                                        type: string
                                        description: >-
                                          The user ID of the user who answered the
                                          question. This value returns blank for
                                          external users.
                                        example: Cn_5wJ9mRNGyYOmpjVufBQ
                                      name:
                                        type: string
                                        description: >-
                                          User display name, including the host or
                                          participant.
                                        example: Paul
                                      email:
                                        type: string
                                        description: >-
                                          Participant's email. If the participant
                                          is **not** part of the host's account,
                                          this returns an empty string value, with
                                          some exceptions. See [Email address
                                          display
                                          rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                                          for details.
                                        example: paul@example.com
                                      content:
                                        maxLength: 1024
                                        type: string
                                        description: >-
                                          The answer from host or the comment from
                                          participant.
                                        example: fine
                                      create_time:
                                        type: string
                                        description: Content submit time.
                                        example: '2022-03-15T07:50:00Z'
                                      type:
                                        type: string
                                        description: Type of answer.
                                        example: default
                                        extensions:
                                          x-enum-description:
                                            - >-
                                              default - default value, does not
                                              represent any type
                                            - host_answered - answer from the host
                                            - >-
                                              participant_commented - comment from the
                                              participant
                                        default: default
                                        enum:
                                          - default
                                          - host_answered
                                          - participant_commented
                    start_time:
                      type: string
                      description: Meeting start time.
                      format: date-time
                      example: '2022-03-15T07:40:46Z'
                    uuid:
                      type: string
                      description: >-
                        The meeting UUID. Each meeting instance will generate its
                        own UUID - for example, after a meeting ends, a new UUID
                        will be generated for the next instance of the meeting.
                        Double-encode your UUID when using it for API calls if the
                        UUID begins with a '/' or contains '//'.
                      example: 4444AAAiAAAAAiAiAiiAii==
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `200` <br>
               No permission.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `1001` <br>
               User does not exist: {userId}.<br> <br>
              **Error Code:** `3001` <br>
               Meeting {meetingId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:meeting_qna:admin
    /report/meetings/{meetingId}/survey:
      get:
        tags:
          - Reports
        summary: Get meeting survey report
        description: >-
          Retrieve a report on past [meeting
          survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559).  
             
           
          **Prerequisites:**  
           
          * Pro or a higher plan.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:meeting_survey:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: reportMeetingSurvey
        parameters:
          - name: meetingId
            in: path
            description: >-
              The meeting's ID or universally unique ID (UUID). 

              * If you provide a meeting ID, the API will return a response for
              the latest meeting instance. 

              * If you provide a meeting UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the meeting
              UUID before making an API request.
            required: true
            schema:
              type: string
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Meeting survey report returned.   
               
              Only available for Paid or ZMP account: {accountId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    meeting_id:
                      type: integer
                      description: The meeting ID.
                      format: int64
                      example: 123456
                    meeting_uuid:
                      type: string
                      description: >-
                        The meeting's universally unique identifier (UUID). Each
                        meeting instance generates a meeting UUID.
                      example: 4444AAAiAAAAAiAiAiiAii==
                    start_time:
                      type: string
                      description: The meeting's start time.
                      format: date-time
                      example: '2022-02-01T12:34:12.660Z'
                    survey_id:
                      type: string
                      description: The survey's ID
                      example: 8SFHRTGHAAAiAAAAAiAiAiiAii==
                    survey_name:
                      type: string
                      description: The name of survey
                      example: Survey of this meeting
                    survey_answers:
                      type: array
                      description: Information about the survey questions and answers.
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: The participant's email address.
                            format: email
                            example: jchill@example.com
                          name:
                            type: string
                            description: >-
                              The participant's display name. **Allow participants
                              to answer questions anonymously** setting is enabled
                              for a
                              [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559),
                              the participant's survey information is kept
                              anonymous and the `name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Jill Chill
                          first_name:
                            type: string
                            description: >-
                              The participant's first name. If the **Allow
                              participants to answer questions anonymously**
                              setting is enabled for a
                              [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559),
                              the participant's survey information is kept
                              anonymous and the `first_name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Jill
                          last_name:
                            type: string
                            description: >-
                              The participant's last name. If the **Allow
                              participants to answer questions anonymously**
                              setting is enabled for a
                              [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559),
                              the participant's survey information is kept
                              anonymous and the `last_name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Chill
                          answer_details:
                            type: array
                            description: Information about the user's questions and answers.
                            items:
                              type: object
                              properties:
                                question:
                                  type: string
                                  description: The survey question.
                                  example: How are you?
                                question_id:
                                  type: string
                                  description: The question's ID
                                  example: 798fGJEWrA
                                answer:
                                  type: string
                                  description: The user's given answer.
                                  example: I am wonderful.
                                date_time:
                                  type: string
                                  description: >-
                                    The date and time at which the user answered
                                    the survey question.
                                  example: '2022-02-01T12:37:12.660Z'
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
              **Error Code:** `12702` <br>
               Can not access a webinar a year ago.<br> <br>
              **Error Code:** `200` <br>
               No permission.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `3001` <br>
               Webinar  {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:meeting_survey:admin
    /report/operationlogs:
      get:
        tags:
          - Reports
        summary: Get operation logs report
        description: >-
          The [Operations
          Logs](https://support.zoom.us/hc/en-us/articles/360032748331-Operation-Logs)
          report allows you to audit admin and user activity, such as adding a new
          user, changing account settings, and deleting recordings.  
           
          Use this API to retrieve operation logs report for a specified period of
          time.  
           
          **Prerequisites:**  
           
          * Pro or higher plan.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:operation_logs:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportOperationLogs
        parameters:
          - name: from
            in: query
            description: >-
              Start date in 'yyyy-mm-dd' format. The date range defined by the
              &quot;from&quot; and &quot;to&quot; parameters should only be one
              month as the report includes only one month worth of data at once.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-01'
          - name: to
            in: query
            description: End date.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-28'
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: category_type
            in: query
            description: >-
              **Optional**  
               
              Filter your response by a category type to see reports for a
              specific category.

              The value for this field can be one of the following:  
                `all`  
               `user`  
               `user_settings`  
               `account`  
               `billing`  
               `im`  
               `recording`  
               `phone_contacts`  
               `webinar`  
               `sub_account`  
               `role`  
               `zoom_rooms`
            required: false
            schema:
              type: string
              example: user
              enum:
                - all
                - user
                - user_settings
                - account
                - billing
                - im
                - recording
                - phone_contacts
                - webinar
                - sub_account
                - role
                - zoom_rooms
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Operation Logs Report Returned
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of the available result list exceeds the page
                        size. The expiration period is 15 minutes.
                      example: uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2
                    page_size:
                      maximum: 300
                      type: integer
                      description: 'The amount of records returns within a single API call. '
                      example: 30
                      default: 30
                    operation_logs:
                      type: array
                      description: Array of operation log objects
                      items:
                        type: object
                        properties:
                          action:
                            type: string
                            description: Action
                            example: delete
                          category_type:
                            type: string
                            description: Category type
                            example: user
                          operation_detail:
                            type: string
                            description: Operation detail
                            example: delete user - user2@example.com
                          operator:
                            type: string
                            description: The user who performed the operation.
                            example: admin@example.com
                          time:
                            type: string
                            description: The time at which the operation was performed.
                            format: date-time
                            example: '2022-01-25T17:52:16Z'
                  description: Pagination object.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>
              No permission.<br>

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:operation_logs:admin
    /report/telephone:
      get:
        tags:
          - Reports
        summary: Get telephone reports
        description: >-
          The [telephone
          report](https://support.zoom.us/hc/en-us/articles/206514816-Telephone-reports)
          allows you to view who dialed into meetings via phone (Audio
          Conferencing or SIP Connected Audio) and which number they dialed into
          and other details. Use this API to get telephone report for a specified
          period of time.


          **Prerequisites:**  
           
          * Pro or higher plan.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:telephone:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportTelephone
        parameters:
          - name: type
            in: query
            description: |-
              Audio types:  
               `1` - Toll-free Call-in &amp; Call-out.  
               `2` - Toll   
               
              `3` - SIP Connected Audio
            required: false
            schema:
              type: string
              example: '33'
              default: '1'
              enum:
                - '1'
                - '2'
                - '3'
          - name: query_date_type
            in: query
            description: |-
              The type of date to query. 
              * `start_time` &mdash; Query by call start time. 
              * `end_time` &mdash; Query by call end time. 
              * `meeting_start_time` &mdash; Query by meeting start time. 
              * `meeting_end_time` &mdash; Query by meeting end time. 

              This value defaults to `start_time`.
            required: false
            schema:
              type: string
              example: start_time
              default: start_time
              enum:
                - start_time
                - end_time
                - meeting_start_time
                - meeting_end_time
          - name: from
            in: query
            description: >-
              Start date in 'yyyy-mm-dd' format. The date range defined by the
              &quot;from&quot; and &quot;to&quot; parameters should only be one
              month as the report includes only one month worth of data at once.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-01'
          - name: to
            in: query
            description: End date.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-28'
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: page_number
            in: query
            description: >-
              The page number of the current page in the returned records. This
              field is **not** available if the `query_date_type` parameter is the
              `meeting_start_time` or `meeting_end_time` value. 


              This field is deprecated. Use the `next_page_token` query parameter
              for pagination.
            required: false
            schema:
              type: integer
              example: 1
              default: 1
          - name: next_page_token
            in: query
            description: >-
              The next page token is used to paginate through large result sets. A
              next page token will be returned whenever the set of available
              results exceeds the current page size. The expiration period for
              this token is 15 minutes.
            required: false
            schema:
              type: string
              example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200`  
               
              Telephone report returned.  
               
              This is only available for paid account:{accountId}.  
               
              The requested report cannot be generated for this account because
              this account has not subscribed to toll-free audio conference
              plan.  
               
              Toll Report feature must be enabled to perform this action. Contact
              the Zoom Support team for help.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report.
                      format: date
                      example: '2019-06-20'
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: w7587w4eiyfsudgk
                    page_count:
                      type: integer
                      description: >-
                        The number of pages returned for the request made. This
                        field does **not** return if the `query_date_type`
                        parameter is the `meeting_start_time` or
                        `meeting_end_time` value.
                      example: 1
                    page_size:
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                    to:
                      type: string
                      description: End date for this report.
                      format: date
                      example: '2019-07-20'
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages. This field does **not** return if the
                        `query_date_type` parameter is the `meeting_start_time` or
                        `meeting_end_time` value.
                      example: 1
                    telephony_usage:
                      type: array
                      description: Array of telephony objects.
                      items:
                        type: object
                        properties:
                          call_in_number:
                            type: string
                            description: Caller's call-in number.
                            example: ZoomGW
                          country_name:
                            type: string
                            description: Country name.
                            example: US
                          dept:
                            type: string
                            description: User department.
                            example: HR
                          duration:
                            type: integer
                            description: Call leg duration
                            example: 2
                          end_time:
                            type: string
                            description: Call leg end time
                            format: date-time
                            example: '2022-03-15T07:42:22Z'
                          host_email:
                            type: string
                            description: User email.
                            example: jchill@example.com
                          host_id:
                            type: string
                            description: The user ID of the meeting host.
                            example: _Rn_hal7ToG5p0AWwIIsjQ
                          host_name:
                            type: string
                            description: User display name.
                            example: Jill Chill
                          meeting_id:
                            type: integer
                            description: >-
                              [Meeting
                              ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
                              Unique identifier of the meeting in
                              &quot;**long**&quot; format(represented as int64
                              data type in JSON), also known as the meeting
                              number.
                            format: int64
                            example: 94908911701
                          meeting_type:
                            type: string
                            description: Meeting type.
                            example: Meeting
                          phone_number:
                            type: string
                            description: 'Toll-free telephone number. '
                            example: +1 8243
                          rate:
                            type: number
                            description: Calling rate for the telephone call.
                            example: 0.03
                          signaled_number:
                            type: string
                            description: 'The number that is signaled to Zoom. '
                            example: +1 8243
                          start_time:
                            type: string
                            description: Call leg start time
                            format: date-time
                            example: '2022-03-15T07:40:46Z'
                          total:
                            type: number
                            description: >-
                              Total cost (USD) for Call Out. Calculated as plan
                              rate by duration.
                            example: 0.03
                          type:
                            type: string
                            description: Call type.
                            example: call-out
                            enum:
                              - toll-free
                              - call-out
                              - call-in
                              - US toll-number
                              - global toll-number
                              - premium
                              - premium call-in
                              - Toll
                          uuid:
                            type: string
                            description: Meeting UUID.
                            example: 4444AAAiAAAAAiAiAiiAii==
        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:telephone:admin
    /report/upcoming_events:
      get:
        tags:
          - Reports
        summary: Get upcoming events report
        description: >-
          Use this API to list upcoming meeting and/or webinar events within a
          specified period of time. The report's time range is limited to one
          month.


          **Prerequisites:** 

          * A Pro or higher plan


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:upcoming_meetings_webinars:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportUpcomingEvents
        parameters:
          - name: from
            in: query
            description: >-
              Start date in 'yyyy-mm-dd' format. The date range defined by the
              &quot;from&quot; and &quot;to&quot; parameters should only be one
              month as the report includes only one month worth of data at once.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-01'
          - name: to
            in: query
            description: End date.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-28'
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: type
            in: query
            description: |-
              The type of event to query. 
              * `meeting` &mdash; A meeting event. 
              * `webinar` &mdash; A webinar event. 
              * `all` &mdash; Both meeting and webinar events.

              This value defaults to `all`.
            required: false
            schema:
              type: string
              example: meeting
              default: all
              enum:
                - meeting
                - webinar
                - all
          - name: group_id
            in: query
            description: >-
              The group ID. To get a group ID, use the [**List
              groups**](https://developers.zoom.us) API. 

               **Note:** The API response will only contain meetings where the host is a member of the queried group ID.
            required: false
            schema:
              type: string
              example: TaVA8QKik_1233
        responses:
          '200':
            description: |
              **HTTP Status Code:** `200`  
               
              Upcoming events report returned.  
               
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    from:
                      type: string
                      description: >-
                        The report's start date. This value must be within the
                        past six months.
                      format: date
                      example: '2022-03-01'
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token returns when the set of
                        available results exceeds the current page size. The
                        expiration period for this token is 15 minutes.
                      example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned in a single API call.
                      example: 30
                      default: 30
                    to:
                      type: string
                      description: >-
                        The report's end date. This value must be within the past
                        six months and cannot exceed a month from the `from`
                        value.
                      format: date
                      example: '2022-03-25'
                    upcoming_events:
                      type: array
                      description: Information about the upcoming event.
                      items:
                        type: object
                        properties:
                          dept:
                            type: string
                            description: The event host's department.
                            example: HR
                          host_id:
                            type: string
                            description: The event host's ID.
                            example: Or4-ZeV_SHCOfWRC71O1Fg
                          host_name:
                            type: string
                            description: The event host's name.
                            example: chi chi
                          id:
                            type: string
                            description: The event's unique ID.
                            example: vawMH9zAQLytjCnQiQXSUg==
                          start_time:
                            type: string
                            description: The event's start time.
                            example: '2022-03-15T07:40:46Z'
                          topic:
                            type: string
                            description: The event's topic.
                            example: My Meeting
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>
              This is only available for the paid account: {accountId} <br>

              **Error Code:** `300` <br>
              The next page token is invalid or expired.

              **Error Code:** `200` <br>
              No permission.<br>

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:upcoming_meetings_webinars:admin
    /report/users:
      get:
        tags:
          - Reports
        summary: Get active/inactive host reports
        description: >-
          Retrieve a host report for a specified period of time within the last
          six months.  

          The report time range is limited to a month. 


          You can specify the type of report and date range using the query
          parameters.  



          * The **Active Hosts** report displays a list of meetings, participants,
          and meeting minutes.

          An **active host** is defined as any user who has hosted at least one
          meeting during the during the month specified in the `from` and `to`
          range.



          * The **Inactive Hosts** report pulls a list of users who were not
          active during a specific period of time.   

          An **inactive host** is defined as any user who has not hosted any
          meetings during the specified period of time for the report. to be
          inactive.  




           
           
           
          **Prerequisites:**  
           
          * Pro or higher plan.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:list_users:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: reportUsers
        parameters:
          - name: type
            in: query
            description: |-
              Active or inactive hosts.  
               `active` - Active hosts.   
               `inactive` - Inactive hosts.
            required: false
            schema:
              type: string
              example: active
              enum:
                - active
                - inactive
          - name: from
            in: query
            description: >-
              Start date in 'yyyy-mm-dd' format. The date range defined by the
              `from` and `to` parameters should only be one month as the report
              includes only one month worth of data at once.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-01'
          - name: to
            in: query
            description: End date.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-28'
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: page_number
            in: query
            description: The page number of the current page in the returned records.
            required: false
            schema:
              type: integer
              example: 1
              default: 1
          - name: next_page_token
            in: query
            description: >-
              The next page token is used to paginate through large result sets. A
              next page token will be returned whenever the set of available
              results exceeds the current page size. The expiration period for
              this token is 15 minutes.
            required: false
            schema:
              type: string
              example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
          - name: group_id
            in: query
            description: >-
              The group ID. To get a group ID, use the [**List
              groups**](https://developers.zoom.us) API. 

               **Note:** The API response will only contain users who are members of the queried group ID.
            required: false
            schema:
              type: string
              example: TaVA8QKik_1233
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Active or inactive hosts report returned.  
               
              Only available for Paid or ZMP account: {accountId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    from:
                      type: string
                      description: Start date for this report.
                      format: date
                      example: '2022-03-01'
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: b43YBRLJFg3V4vsSpxvGdKIGtNbxn9h9If2
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 30
                    page_number:
                      type: integer
                      description: The page number of the current results.
                      example: 1
                      default: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    to:
                      type: string
                      description: End date for this report.
                      format: date
                      example: '2022-03-25'
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 850
                    total_meeting_minutes:
                      type: integer
                      description: Number of meeting minutes for this range.
                      example: 345
                    total_meetings:
                      type: integer
                      description: Number of meetings for this range.
                      example: 34
                    total_participants:
                      type: integer
                      description: Number of participants for this range.
                      example: 56
                    users:
                      type: array
                      description: Array of user objects.
                      items:
                        type: array of objects
                        properties:
                          custom_attributes:
                            type: array
                            description: >-
                              Custom attributes that have been assigned to the
                              user.
                            items:
                              properties:
                                key:
                                  type: string
                                  description: Identifier for the custom attribute.
                                  example: 4444AAAiAAAAAiAiAiiAii==
                                name:
                                  type: string
                                  description: Name of the custom attribute.
                                  example: age
                                value:
                                  type: string
                                  description: Value of the custom attribute.
                                  example: '18'
                          dept:
                            type: string
                            description: User department.
                            example: HR
                          email:
                            type: string
                            description: User email.
                            example: jchill@example.com
                          id:
                            type: string
                            description: User ID.
                            example: 2pyjK5VNQHadb2BY6Z4GbA
                          meeting_minutes:
                            type: integer
                            description: Number of meeting minutes for user.
                            example: 342
                          meetings:
                            type: integer
                            description: Number of meetings for user.
                            example: 45
                          participants:
                            type: integer
                            description: Number of participants in meetings for user.
                            example: 56
                          type:
                            type: integer
                            description: User type.
                            example: 1
                          user_name:
                            type: string
                            description: User display name.
                            example: Jill Chill
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `200` <br>
               No permission.<br>
              ’ <br>
        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:list_users:admin
    /report/users/{userId}/meetings:
      get:
        tags:
          - Reports
        summary: Get meeting reports
        description: >-
          Retrieve
          [report](https://support.zoom.us/hc/en-us/articles/216378603-Meeting-Reporting)
          on past meetings and webinars for a specified time period. The time
          range for the report is limited to a month and the month must fall
          within the past six months.


          Meetings and webinars are returned only if they have two or more unique
          participants.    
             
           
          **Prerequisites:**  
           
          * Pro or higher plan.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:user:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportMeetings
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID or email address of the user. For user-level apps, pass
              the `me` value.
            required: true
            schema:
              oneOf:
                - type: string
                  example: 6dfgdfgdg444447b0egga
                - type: string
                  format: email
                  example: jchill@example.com
                - type: string
                  example: me
                  enum:
                    - me
          - name: from
            in: query
            description: >-
              Start date in 'yyyy-mm-dd' format. The date range defined by the
              &quot;from&quot; and &quot;to&quot; parameters should only be one
              month as the report includes only one month worth of data at once.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-01'
          - name: to
            in: query
            description: End date.
            required: true
            schema:
              type: string
              format: date
              example: '2022-01-28'
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: type
            in: query
            description: >-
              The meeting type to query for: 

              * `past` &mdash; All past meetings. 

              * `pastOne` &mdash; A single past user meeting. 

              * `pastJoined` &mdash; All past meetings the account's users hosted
              or joined.
            required: false
            schema:
              type: string
              example: past
              default: past
              enum:
                - past
                - pastOne
                - pastJoined
        responses:
          '200':
            description: |
              **HTTP Status Code:** `200`  
               
              Active or inactive hosts report returned.  
               
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        The next page token is used to paginate through large
                        result sets. A next page token will be returned whenever
                        the set of available results exceeds the current page
                        size. The expiration period for this token is 15 minutes.
                      example: w7587w4eiyfsudgk
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_number:
                      type: integer
                      description: >-
                        **Deprecated.** We will no longer support this field in a
                        future release. Instead, use the `next_page_token` for
                        pagination.
                      example: 1
                      deprecated: true
                      default: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 20
                    from:
                      type: string
                      description: The report's start date.
                      format: date
                      example: '2020-07-14'
                    meetings:
                      type: array
                      description: Information about the meeting.
                      items:
                        type: object
                        properties:
                          custom_keys:
                            maxItems: 10
                            type: array
                            description: >-
                              Information about the meeting's assigned custom keys
                              and values. This returns a maximum of 10 items.
                            items:
                              type: object
                              properties:
                                key:
                                  maxLength: 64
                                  type: string
                                  description: The custom key name.
                                  example: Host Nation
                                value:
                                  maxLength: 256
                                  type: string
                                  description: The custom key's value.
                                  example: US
                          duration:
                            type: integer
                            description: The meeting's duration.
                            example: 6
                          end_time:
                            type: string
                            description: The meeting's end date and time.
                            format: date-time
                            example: '2020-07-15T23:30:19Z'
                          id:
                            type: integer
                            description: >-
                              The [meeting
                              ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID).
                            example: 12345
                          participants_count:
                            type: integer
                            description: The number of meeting participants.
                            example: 2
                          session_key:
                            type: string
                            description: The Video SDK custom session ID.
                            example: ABC36jaBI145
                          source:
                            type: string
                            description: >-
                              Whether the meeting was created directly through
                              Zoom or via an API request: 

                              * If the meeting was created via an OAuth app, this
                              field returns the OAuth app's name. 

                              * If the meeting was created via JWT or the Zoom Web
                              Portal, this returns the `Zoom` value.
                            example: Zoom
                          start_time:
                            type: string
                            description: The meeting's start date and time.
                            format: date-time
                            example: '2019-07-15T23:24:52Z'
                          topic:
                            type: string
                            description: The meeting's topic.
                            example: My Meeting
                          total_minutes:
                            type: integer
                            description: >-
                              The sum of meeting minutes from all meeting
                              participants in the meeting.
                            example: 11
                          type:
                            type: integer
                            description: >-
                              The type of meeting or webinar. 


                              meeting: 

                              * `1` &mdash; Instant meeting. 

                              * `2` &mdash; Scheduled meeting. 

                              * `3` &mdash; A recurring meeting with no fixed
                              time. 

                              * `4` &mdash; A meeting created via PMI (Personal
                              Meeting ID). 

                              * `7` &mdash; A [Personal Audio
                              Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference)
                              (PAC). 

                              * `8` - Recurring meeting with a fixed time. 


                              webinar: 

                              * `5` &mdash; A webinar. 

                              * `6` &mdash; A recurring webinar without a fixed
                              time 

                              * `9` &mdash; A recurring webinar with a fixed
                              time. 
                            example: 2
                            enum:
                              - 1
                              - 2
                              - 3
                              - 4
                              - 5
                              - 6
                              - 7
                              - 8
                              - 9
                          user_email:
                            type: string
                            description: The user's email address.
                            format: email
                            example: jchill@example.com
                          user_name:
                            type: string
                            description: The user's display name.
                            example: Jill Chill
                          uuid:
                            type: string
                            description: >-
                              The meeting's universally unique identifier (UUID).
                              Each meeting instance generates a meeting UUID.
                            example: 4444AAAiAAAAAiAiAiiAii==
                          schedule_time:
                            type: string
                            description: The meeting's scheduled date and time.
                            example: 12/22/2021 16:20
                          join_waiting_room_time:
                            type: string
                            description: >-
                              The date and time at which the attendee joined the
                              waiting room.
                            example: 02/11/2022 16:15
                          join_time:
                            type: string
                            description: >-
                              The date and time at which the attendee joined the
                              meeting.
                            example: 12/22/2021 16:20
                          leave_time:
                            type: string
                            description: >-
                              The date and time at which the attendee left the
                              meeting.
                            example: 12/22/2021 17:13
                          host_organization:
                            type: string
                            description: Host Account Name of Hosting Organization.
                            example: org
                          host_name:
                            type: string
                            description: Host's name.
                            example: Jill
                          has_screen_share:
                            type: boolean
                            description: >-
                              Indicates whether or not the screenshare feature was
                              used in the meeting.
                            example: false
                          has_recording:
                            type: boolean
                            description: >-
                              Indicates whether or not the recording feature was
                              used in the meeting.
                            example: false
                          has_chat:
                            type: boolean
                            description: >-
                              Indicates whether or not the chat feature was used
                              in the meeting.
                            example: false
                          meeting_encryption_status:
                            type: integer
                            description: |-
                              The meeting's encryption status. 
                              * `1` &mdash; E2E encryption. 
                              * `2` &mdash; Enhanced encryption.
                            example: 1
                            enum:
                              - 1
                              - 2
                          participants_count_my_account:
                            type: integer
                            description: The number of meeting participants from my account.
                            example: 2
                    to:
                      type: string
                      description: The report's end date.
                      format: date
                      example: '2020-08-14'
                  description: Pagination Object.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>
              This is only available for paid account:{accountId}.<br>

              **Error Code:** `300` <br>
              The next page token is invalid or expired.

              **Error Code:** `200` <br>
              No permission.<br>

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User {userId} not exist or not belong to this account.

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:user:admin
    /report/webinars/{webinarId}:
      get:
        tags:
          - Reports
        summary: Get webinar detail reports
        description: >-
          Retrieve a
          [report](https://support.zoom.us/hc/en-us/articles/201393719-Webinar-Reporting)
          containing past webinar details.    
             
           
          **Prerequisites:**  
           
          * Pro or higher plan with Webinar add-on.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:webinar:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportWebinarDetails
        parameters:
          - name: webinarId
            in: path
            description: >-
              The webinar's ID or universally unique ID (UUID). 

              * If you provide a webinar ID, the API will return a response for
              the latest webinar instance. 

              * If you provide a webinar UUID that begins with a `/` character or
              contains the `//` characters, you **must** [double
              encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
              the webinar UUID before making an API request.
            required: true
            schema:
              type: string
              example: ABCDE12345
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Webinar details returned.  
               
              This is only available for paid account:{accountId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    custom_keys:
                      maxItems: 10
                      type: array
                      description: Custom keys and values assigned to the meeting.
                      items:
                        type: object
                        properties:
                          key:
                            maxLength: 64
                            type: string
                            description: Custom key associated with the user.
                            example: Host Nation
                          value:
                            maxLength: 256
                            type: string
                            description: Value of the custom key associated with the user.
                            example: US
                    dept:
                      type: string
                      description: Department of the host.
                      example: HR
                    duration:
                      type: integer
                      description: Meeting duration.
                      example: 2
                    end_time:
                      type: string
                      description: Meeting end time.
                      format: date-time
                      example: '2022-03-15T07:42:22Z'
                    id:
                      type: integer
                      description: >-
                        [Meeting
                        ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):
                        Unique identifier of the meeting in &quot;**long**&quot;
                        format(represented as int64 data type in JSON), also known
                        as the meeting number.
                      format: int64
                      example: 345678902224
                    participants_count:
                      type: integer
                      description: Number of meeting participants.
                      example: 4
                    start_time:
                      type: string
                      description: Meeting start time.
                      format: date-time
                      example: '2022-03-15T07:40:46Z'
                    topic:
                      type: string
                      description: Meeting topic.
                      example: My Meeting
                    total_minutes:
                      type: integer
                      description: >-
                        Number of Webinar minutes. This represents the total
                        amount of Webinar minutes attended by each participant
                        including the host, for a Webinar hosted by the user. For
                        instance if there were one host(named A) and one
                        participant(named B) in a Webinar, the value of
                        total_minutes would be calculated as below:


                        **total_minutes** = Total Webinar Attendance Minutes of A
                        + Total Webinar Attendance Minutes of B
                      example: 3
                    tracking_fields:
                      type: array
                      description: Tracking fields.
                      items:
                        type: object
                        properties:
                          field:
                            type: string
                            description: Tracking fields type.
                            example: Host Nation
                          value:
                            type: string
                            description: Tracking fields value.
                            example: US
                    type:
                      type: integer
                      description: Meeting type.
                      example: 4
                    user_email:
                      type: string
                      description: User email.
                      example: jchill@example.com
                    user_name:
                      type: string
                      description: User display name.
                      example: Jill Chill
                    uuid:
                      type: string
                      description: >-
                        Webinar UUID. Each webinar instance will generate its own
                        UUID(i.e., after a meeting ends, a new UUID will be
                        generated when the next instance of the webinar starts).
                        [double
                        encode](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis/#meeting-id-and-uuid)
                        the UUID when using it for API calls if the UUID begins
                        with a '/' or contains '//' in it.
                      example: 4444AAAiAAAAAiAiAiiAii==
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>
              User does not belong to this account:{accountId}.<br>

              **Error Code:** `12702` <br>
              Can not access a webinar a year ago.<br>

              **Error Code:** `200` <br>
              No permission.<br>

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `3001` <br>
              Meeting  {meetingId} not found or has expired.<br>

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:webinar:admin
    /report/webinars/{webinarId}/participants:
      get:
        tags:
          - Reports
        summary: Get webinar participant reports
        description: >-
          Get a detailed report on each webinar attendee. You can get webinar
          participant reports for the last 6 months. 

           **Prerequisites:** 
          * A Pro or a higher plan with Webinar add-on enabled.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:list_webinar_participants:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportWebinarParticipants
        parameters:
          - name: webinarId
            in: path
            description: >-
              The webinar's ID or universally unique ID (UUID). 

              * If you provide a webinar ID, the API will return a response for
              the latest webinar instance. 

              * If you provide a webinar UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the webinar
              UUID before making an API request.
            required: true
            schema:
              type: string
              example: ABCDE12345
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
          - name: include_fields
            in: query
            description: >-
              The additional query parameters to include. 

              * `registrant_id` - Include the registrant's ID in the API response.
              The registrant ID is the webinar participant's unique ID.
            required: false
            schema:
              type: string
              example: registrant_id
              enum:
                - registrant_id
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` 
              * Meeting participants report returned.  
               
              Only available for Paid or ZMP account: {accountId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        Use the next page token to paginate through large result
                        sets. A next page token is returned whenever the set of
                        available results exceeds the current page size. This
                        token's expiration period is 15 minutes.
                      example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned within a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: The number of all records available across pages.
                      example: 1
                    participants:
                      type: array
                      description: Information about the webinar participant.
                      items:
                        type: object
                        properties:
                          customer_key:
                            maxLength: 35
                            type: string
                            description: >-
                              The participant's SDK identifier. This value can be
                              alphanumeric, up to a maximum length of 35
                              characters.
                            example: 349589LkJyeW
                          duration:
                            type: integer
                            description: The participant's attendance duration.
                            example: 20
                          failover:
                            type: boolean
                            description: Whether failover occurred during the webinar.
                            example: false
                          id:
                            type: string
                            description: >-
                              The participant's universally unique ID (UUID). 

                              * If the participant joins the meeting by logging
                              into Zoom, this value is the `id` value in the
                              [**Get a user**](https://developers.zoom.us) API
                              response. 

                              * If the participant joins the meeting **without**
                              logging into Zoom, this returns an empty string
                              value. 


                              **Note:** Use the `participant_user_id` value
                              instead of this value. We will remove this response
                              in a future release.
                            example: ABCDEF123456
                          join_time:
                            type: string
                            description: The participant's join time.
                            format: date-time
                            example: '2019-02-01T12:34:12.660Z'
                          leave_time:
                            type: string
                            description: The participant's leave time.
                            format: date-time
                            example: '2019-02-01T12:54:12.660Z'
                          name:
                            type: string
                            description: >-
                              The participant's display name. This returns an
                              empty string value if the account calling the API is
                              a BAA account.
                            example: jchill
                          registrant_id:
                            type: string
                            description: >-
                              The registrant's ID. This field only returns if you
                              provide the `registrant_id` value for the
                              `include_fields` query parameter.
                            example: 123456FEDCBA
                          status:
                            type: string
                            description: |-
                              The participant's status. 
                              * `in_meeting` - In a meeting. 
                              * `in_waiting_room` - In a waiting room.
                            example: in_meeting
                            enum:
                              - in_meeting
                              - in_waiting_room
                          user_email:
                            pattern: >-
                              (^\s*$|^[A-Za-z0-9!#$%&''*+/=?^_`{|}~-]+(\.[A-Za-z0-9!#$%&''*+/=?^_`{|}~-]+)*@[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)*(\.[A-Za-z]{2,})$)
                            type: string
                            description: >-
                              The participant's email address. If the participant
                              is **not** part of the host's account, this returns
                              an empty string value, with some exceptions. See
                              [Email address display
                              rules](https://developers.zoom.us) for details. This
                              returns an empty string value if the account calling
                              the API is a BAA account.
                            example: jchill@example.com
                          user_id:
                            type: string
                            description: >-
                              The participant's ID. This ID is assigned to the
                              participant upon joining the webinar and is only
                              valid for that webinar.
                            example: ABCDEF123456
                          participant_user_id:
                            type: string
                            description: >-
                              The participant's universally unique ID (UUID). 

                              * If the participant joins the meeting by logging
                              into Zoom, this value is the `id` value in the
                              [**Get a user**](https://developers.zoom.us) API
                              response. 

                              * If the participant joins the meeting **without**
                              logging into Zoom, this returns an empty string
                              value.
                            example: DYHrdpjrS3uaOf7dPkkg8w
                  description: Pagination object.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account: {accountId} <br>
              **Error Code:** `12702` <br>
               Can not access a webinar a year ago.<br> <br>
              **Error Code:** `200` <br>
               No permission.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Webinar "{webinarId}" not found or has expired <br>
        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:list_webinar_participants:admin
    /report/webinars/{webinarId}/polls:
      get:
        tags:
          - Reports
        summary: Get webinar poll reports
        description: >-
          Retrieve a report on past [webinar
          polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  
             
           
          **Prerequisites:**  
           
          * Pro or a higher plan with Webinar add-on enabled.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:list_webinar_polls:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Heavy`
        operationId: reportWebinarPolls
        parameters:
          - name: webinarId
            in: path
            description: >-
              The webinar's ID or universally unique ID (UUID). 

              * If you provide a webinar ID, the API will return a response for
              the latest webinar instance. 

              * If you provide a webinar UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the webinar
              UUID before making an API request.
            required: true
            schema:
              type: string
              example: ABCDE12345
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Webinar polls report returned.  
               
              Missing webinar subscription plan.  
               
              Only available for Paid or ZMP account: {accountId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The webinar ID.
                      format: int64
                      example: 123456
                    questions:
                      type: array
                      description: Information about the webinar questions.
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: The participant's email address.
                            format: email
                            example: jchill@example.com
                          name:
                            type: string
                            description: >-
                              The participant's display name. **Allow participants
                              to answer questions anonymously** setting is enabled
                              for a
                              [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                              the participant's polling information is kept
                              anonymous and the `name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Jill Chill
                          first_name:
                            type: string
                            description: >-
                              The participant's first name. If the **Allow
                              participants to answer questions anonymously**
                              setting is enabled for a
                              [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                              the participant's polling information is kept
                              anonymous and the `first_name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Jill
                          last_name:
                            type: string
                            description: >-
                              The participant's last name. If the **Allow
                              participants to answer questions anonymously**
                              setting is enabled for a
                              [poll](https://support.zoom.us/hc/en-us/articles/213756303-Polling-for-Meet),
                              the participant's polling information is kept
                              anonymous and the `last_name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Chill
                          question_details:
                            type: array
                            description: Information about the user's questions and answers.
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                                  description: The user's given answer.
                                  example: I am wonderful.
                                date_time:
                                  type: string
                                  description: >-
                                    The date and time at which the user answered
                                    the poll question.
                                  example: '2022-02-01T12:37:12.660Z'
                                polling_id:
                                  type: string
                                  description: The poll's ID.
                                  example: 798fGJEWrA
                                question:
                                  type: string
                                  description: The poll question.
                                  example: How are you?
                    start_time:
                      type: string
                      description: The webinar's start time.
                      format: date-time
                      example: '2022-02-01T12:34:12.660Z'
                    uuid:
                      type: string
                      description: >-
                        The webinar's universally unique identifier (UUID). Each
                        webinar instance generates a webinar UUID.
                      example: 4444AAAiAAAAAiAiAiiAii==
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>
              User does not belong to this account:{accountId}.<br>

              **Error Code:** `12702` <br>
              Can not access a webinar a year ago.<br>

              **Error Code:** `200` <br>
              No permission.<br>

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `3001` <br>
              Webinar  {webinarId} not found or has expired.<br>

        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:list_webinar_polls:admin
    /report/webinars/{webinarId}/qa:
      get:
        tags:
          - Reports
        summary: Get webinar Q&A report
        description: >-
          Retrieve a report on questions asked by participants and answered by
          panelists, co-hosts and hosts from past webinars.   


             
           
          **Prerequisites:**  
           
          * Pro or a higher plan with the Webinar add-on enabled.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:webinar_qna:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: reportWebinarQA
        parameters:
          - name: webinarId
            in: path
            description: >-
              The webinar's ID or universally unique ID (UUID). 

              * If you provide a webinar ID, the API will return a response for
              the latest webinar instance. 

              * If you provide a webinar UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the webinar
              UUID before making an API request.
            required: true
            schema:
              type: string
              example: ABCDE12345
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200`   Webinar Q&A report returned. Only
              available for Paid or ZMP account: {accountId}.   A report can't be
              generated for this account because this account is not subscribed to
              a webinar plan.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: >-
                        Webinar ID in `long` format, represented as int64 data
                        type in JSON. Also known as the webinar number.
                      format: int64
                      example: 245603123123
                    questions:
                      type: array
                      description: Array of webinar question objects.
                      items:
                        type: object
                        properties:
                          user_id:
                            type: string
                            description: >-
                              The user ID of the user who asked the question. This
                              value returns blank for external users.
                            example: hyROrs0TRCSvwmadI7L13w
                          email:
                            type: string
                            description: >-
                              Participant's email. If the participant is **not**
                              part of the host's account, this returns an empty
                              string value, with some exceptions. See [Email
                              address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for details.
                            example: jchilll@example.com
                          name:
                            type: string
                            description: >-
                              Participant's display name.  
                                

                              If anonymous
                              [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer)
                              option is enabled and if a participant submits the
                              Q&amp;A without providing their name, the value of
                              the `name` field will be &quot;Anonymous
                              Attendee&quot;.
                            example: Jill Chill
                          question_details:
                            type: array
                            description: Array of questions from the user.
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                                  description: >-
                                    The given answer. If this is a live answer,
                                    the value is 'live answered'.

                                    **Note:** All answers will be returned
                                    together and separated by semicolons. For more
                                    detailed answer information, please see the
                                    "answer_details" field.
                                  example: fine
                                  deprecated: true
                                question:
                                  type: string
                                  description: Asked question.
                                  example: how are you
                                question_id:
                                  type: string
                                  description: Question UUID.
                                  example: zxU4wOwnlxs
                                create_time:
                                  type: string
                                  description: Question creation time.
                                  example: '2022-03-15T07:48:00Z'
                                answer_details:
                                  type: array
                                  description: Array of answers from user.
                                  items:
                                    type: object
                                    properties:
                                      user_id:
                                        type: string
                                        description: >-
                                          The user ID of the user who answered the
                                          question. This value returns blank for
                                          external users.
                                        example: Cn_5wJ9mRNGyYOmpjVufBQ
                                      name:
                                        type: string
                                        description: >-
                                          User display name, including the host or
                                          participant. 
                                        example: Paul
                                      email:
                                        type: string
                                        description: >-
                                          Participant's email. If the participant
                                          is **not** part of the host's account,
                                          this returns an empty string value, with
                                          some exceptions. See [Email address
                                          display
                                          rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                                          for details.
                                        example: paul@example.com
                                      content:
                                        maxLength: 1024
                                        type: string
                                        description: >-
                                          The answer from the host or the comment
                                          from a participant.
                                        example: fine
                                      create_time:
                                        type: string
                                        description: Content submission time.
                                        example: '2022-03-15T07:50:00Z'
                                      type:
                                        type: string
                                        description: Type of answer.
                                        example: default
                                        extensions:
                                          x-enum-description:
                                            - >-
                                              default - default value, does not
                                              represent any type
                                            - host_answered - answer from the host
                                            - >-
                                              participant_commented - comment from the
                                              participant
                                        default: default
                                        enum:
                                          - default
                                          - host_answered
                                          - participant_commented
                    start_time:
                      type: string
                      description: Webinar start time.
                      format: date-time
                      example: '2022-03-15T07:40:46Z'
                    uuid:
                      type: string
                      description: >-
                        Webinar UUID. Each webinar instance will generate its own
                        UUID - after a webinar ends, a new UUID will be generated
                        for the next instance of the webinar. Double-encode your
                        UUID when using it for API calls if the UUID begins with a
                        '/' or contains '//' in it.
                      example: 4444AAAiAAAAAiAiAiiAii==
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `200` <br>
               No permission.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `1001` <br>
               User does not exist: {userId}.<br> <br>
              **Error Code:** `3001` <br>
               Webinar  {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:webinar_qna:admin
    /report/webinars/{webinarId}/survey:
      get:
        tags:
          - Reports
        summary: Get webinar survey report
        description: >-
          Retrieve a report on past [webinar
          survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559).  
             
           
          **Prerequisites:**  
           
          * Pro or a higher plan with Webinar add-on enabled.


          **Scopes:** `report:read:admin`


          **Granular Scopes:** `report:read:webinar_survey:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: reportWebinarSurvey
        parameters:
          - name: webinarId
            in: path
            description: >-
              The webinar's ID or universally unique ID (UUID). 

              * If you provide a webinar ID, the API returns a response for the
              latest webinar instance. 

              * If you provide a webinar UUID that begins with a `/` character or
              contains the `//` characters, you **must** double-encode the webinar
              UUID before making an API request.
            required: true
            schema:
              type: string
              example: ABCDE12345
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Webinar survey report returned.  
               
              Missing webinar subscription plan.  
               
              Only available for Paid or ZMP account: {accountId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    webinar_id:
                      type: integer
                      description: The webinar ID.
                      format: int64
                      example: 123456
                    webinar_uuid:
                      type: string
                      description: >-
                        The webinar's universally unique identifier (UUID). Each
                        webinar instance generates a webinar UUID.
                      example: 4444AAAiAAAAAiAiAiiAii==
                    start_time:
                      type: string
                      description: The webinar's start time.
                      format: date-time
                      example: '2022-02-01T12:34:12.660Z'
                    survey_id:
                      type: string
                      description: The survey's ID
                      example: 8SFHRTGHAAAiAAAAAiAiAiiAii==
                    survey_name:
                      type: string
                      description: The name of survey
                      example: Survey of this meeting
                    survey_answers:
                      type: array
                      description: Information about the survey questions and answers.
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: The participant's email address.
                            format: email
                            example: jchill@example.com
                          name:
                            type: string
                            description: >-
                              The participant's display name. **Allow participants
                              to answer questions anonymously** setting is enabled
                              for a
                              [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559),
                              the participant's survey information is kept
                              anonymous and the `name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Jill Chill
                          first_name:
                            type: string
                            description: >-
                              The participant's first name. If the **Allow
                              participants to answer questions anonymously**
                              setting is enabled for a
                              [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559),
                              the participant's survey information is kept
                              anonymous and the `first_name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Jill
                          last_name:
                            type: string
                            description: >-
                              The participant's last name. If the **Allow
                              participants to answer questions anonymously**
                              setting is enabled for a
                              [survey](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0057559),
                              the participant's survey information is kept
                              anonymous and the `last_name` field will return the
                              &quot;Anonymous Attendee&quot; value.
                            example: Chill
                          answer_details:
                            type: array
                            description: Information about the user's questions and answers.
                            items:
                              type: object
                              properties:
                                question:
                                  type: string
                                  description: The survey question.
                                  example: How are you?
                                question_id:
                                  type: string
                                  description: The question's ID
                                  example: 798fGJEWrA
                                answer:
                                  type: string
                                  description: The user's given answer.
                                  example: I am wonderful.
                                date_time:
                                  type: string
                                  description: >-
                                    The date and time at which the user answered
                                    the survey question.
                                  example: '2022-02-01T12:37:12.660Z'
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
              **Error Code:** `12702` <br>
               Can not access a webinar a year ago.<br> <br>
              **Error Code:** `200` <br>
               No permission.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `3001` <br>
               Webinar  {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - report:read:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - UsageReport:Read
          x-macro-scopes:
            - report:read:admin
          x-granular-scopes:
            - report:read:webinar_survey:admin
    /sip_phones:
      get:
        tags:
          - SIP Phone
        summary: List SIP phones
        description: >-
          Zoom's Phone System Integration (PSI), also referred as SIP phones,
          enables an organization to leverage the Zoom client to complete a
          softphone registration to supported premise based PBX system. End users
          will have the ability to have softphone functionality within a single
          client while maintaining a comparable interface to Zoom Phone. Use this
          API to list SIP phones on an account.  
             
           
          **Prerequisites**:

          * Currently only supported on Cisco and Avaya PBX systems. 

          * User must enable SIP Phone Integration by contacting the
          [Sales](https://zoom.us/contactsales) team.  
            

          **Scopes:** `sip_phone:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: listSipPhones
        parameters:
          - name: page_number
            in: query
            description: >-
              **Deprecated.** We will no longer support this field in a future
              release. Instead, use the `next_page_token` for pagination.
            required: false
            schema:
              type: integer
              example: 1
              default: 1
          - name: search_key
            in: query
            description: >-
              User name or email address of a user. If this parameter is provided,
              only the SIP phone system integration enabled for that specific user
              will be returned. Otherwise, all SIP phones on an account will be
              returned.
            required: false
            schema:
              type: string
              example: jchill@example.com
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              type: integer
              example: 30
          - name: next_page_token
            in: query
            description: >-
              The next page token is used to paginate through large result sets. A
              next page token will be returned whenever the set of available
              results exceeds the current page size. The expiration period for
              this token is 15 minutes.
            required: false
            schema:
              type: string
              example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200`  
               
              SIP Phones listed successfully.


              **Error Code:** `200`  
               
              Permission missing: Enable SIP Phone Integration by contacting a
              Zoom Admin first.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_number:
                      type: integer
                      description: The page number of the current results.
                      example: 1
                    page_size:
                      type: integer
                      description: The number of records returned within a single API call.
                      example: 30
                    phones:
                      type: array
                      description: SIP phones object.
                      items:
                        type: object
                        properties:
                          authorization_name:
                            type: string
                            description: >-
                              The authorization name of the user that is
                              registered for SIP phone.
                            example: testname
                          domain:
                            type: string
                            description: >-
                              The name or IP address of your provider's SIP
                              domain.
                            example: example.com
                          id:
                            type: string
                            description: The SIP phone ID.
                            example: '123456'
                          password:
                            type: string
                            description: >
                              The password generated for the user in the SIP
                              account.
                            example: apassword1
                          proxy_server:
                            type: string
                            description: >-
                              The IP address of the proxy server for SIP requests.
                              Note that if you are using the UDP transport
                              protocol, the default port is 5060. If you are using
                              UDP with a different port number, that port number
                              must be included with the IP address. If you are not
                              using a proxy server, this value can be the same as
                              the Register Server, or empty.
                            example: 192.0.2.2
                          proxy_server2:
                            type: string
                            description: >-
                              The IP address of the proxy server for SIP requests.
                              Note that if you are using the UDP transport
                              protocol, the default port is 5060. If you are using
                              UDP with a different port number, that port number
                              must be included with the IP address. If you are not
                              using a proxy server, this value can be the same as
                              the Register Server, or empty.
                            example: 192.0.2.4
                          proxy_server3:
                            type: string
                            description: >-
                              The IP address of the proxy server for SIP requests.
                              Note that if you are using the UDP transport
                              protocol, the default port is 5060. If you are using
                              UDP with a different port number, that port number
                              must be included with the IP address. If you are not
                              using a proxy server, this value can be the same as
                              the Register Server, or empty.
                            example: 192.0.2.6
                          register_server:
                            type: string
                            description: >-
                              The IP address of the server that accepts REGISTER
                              requests. Note that if you are using the UDP
                              transport protocol, the default port is 5060. If you
                              are using UDP with a different port number, that
                              port number must be included with the IP address.
                            example: 192.0.2.1
                          register_server2:
                            type: string
                            description: >-
                              The IP address of the server that accepts REGISTER
                              requests. Note that if you are using the UDP
                              transport protocol, the default port is 5060. If you
                              are using UDP with a different port number, that
                              port number must be included with the IP address.
                            example: 192.0.2.3
                          register_server3:
                            type: string
                            description: >-
                              The IP address of the server that accepts REGISTER
                              requests. Note that if you are using the UDP
                              transport protocol, the default port is 5060. If you
                              are using UDP with a different port number, that
                              port number must be included with the IP address.
                            example: 192.0.2.5
                          registration_expire_time:
                            type: integer
                            description: >-
                              The number of minutes after which the SIP
                              registration of the Zoom client user will expire,
                              and the client will auto register to the SIP
                              server. 
                            example: 60
                          transport_protocol:
                            type: string
                            description: |-
                              Protocols supported by the SIP provider.  
                                The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                            example: UDP
                            enum:
                              - UDP
                              - TCP
                              - TLS
                              - AUTO
                          transport_protocol2:
                            type: string
                            description: |-
                              Protocols supported by the SIP provider.  
                                The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                            example: UDP
                            enum:
                              - UDP
                              - TCP
                              - TLS
                              - AUTO
                          transport_protocol3:
                            type: string
                            description: |-
                              Protocols supported by the SIP provider.  
                                The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                            example: UDP
                            enum:
                              - UDP
                              - TCP
                              - TLS
                              - AUTO
                          user_email:
                            type: string
                            description: >-
                              The email address of the user to associate with the
                              SIP Phone. Can add `.win`, `.mac`, `.android`,
                              `.ipad`, `.iphone`, `.linux`, `.pc`, `.mobile`,
                              `.pad` at the end of the email (for example,
                              `user@example.com.mac`) to add accounts for
                              different platforms for the same user.
                            format: email
                            example: jchill@example.com
                          user_name:
                            type: string
                            description: >-
                              The phone number associated with the user in the SIP
                              account. 
                            example: Jill Chill
                          voice_mail:
                            type: string
                            description: The number to dial for checking voicemail.
                            example: '4000'
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 20
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

        security:
          - openapi_oauth:
              - sip_phone:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - sip_phone:read:admin
      post:
        tags:
          - SIP Phone
        summary: Enable SIP phone
        description: >-
          Zoom's Phone System Integration (PSI), also referred as SIP phones,
          enables an organization to leverage the Zoom client to complete a
          softphone registration to supported premise based PBX system. End users
          will have the ability to have softphone functionality within a single
          client while maintaining a comparable interface to Zoom Phone. Use this
          API to enable a user to use SIP phone.  
             
           
          **Prerequisites**:

          * Currently only supported on Cisco and Avaya PBX systems. 

          * The account owner or account admin must first enable SIP Phone
          Integration by contacting the [Sales](https://zoom.us/contactsales)
          team.  
            

          **Scopes:** `sip_phone:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: createSIPPhone
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - authorization_name
                  - domain
                  - password
                  - proxy_server
                  - register_server
                  - user_email
                  - user_name
                  - voice_mail
                type: object
                properties:
                  authorization_name:
                    maxLength: 64
                    type: string
                    description: >-
                      The authorization name of the user that is registered for
                      SIP phone.
                    example: testname
                  domain:
                    maxLength: 64
                    type: string
                    description: >-
                      The name or IP address of your provider's SIP domain
                      (example: CDC.WEB). 
                    example: example.com
                  password:
                    type: string
                    description: The password generated for the user in the SIP account.
                    example: '123456'
                  proxy_server:
                    type: string
                    description: >-
                      The IP address of the proxy server for SIP requests. Note
                      that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address. If you are not using a proxy server, this value can
                      be the same as the Register Server.
                    example: 192.0.2.2
                  proxy_server2:
                    type: string
                    description: >-
                      The IP address of the proxy server for SIP requests. Note
                      that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address. If you are not using a proxy server, this value can
                      be the same as the Register Server, or empty.
                    example: 192.0.2.4
                  proxy_server3:
                    type: string
                    description: >-
                      The IP address of the proxy server for SIP requests. Note
                      that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address. If you are not using a proxy server, this value can
                      be the same as the Register Server, or empty.
                    example: 192.0.2.6
                  register_server:
                    type: string
                    description: >-
                      The IP address of the server that accepts REGISTER requests.
                      Note that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address.
                    example: 192.0.2.1
                  register_server2:
                    type: string
                    description: >-
                      The IP address of the server that accepts REGISTER requests.
                      Note that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address.
                    example: 192.0.2.3
                  register_server3:
                    type: string
                    description: >-
                      The IP address of the server that accepts REGISTER requests.
                      Note that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address.
                    example: 192.0.2.5
                  registration_expire_time:
                    maximum: 127
                    minimum: 1
                    type: integer
                    description: >-
                      The number of minutes after which the SIP registration of
                      the Zoom client user will expire, and the client will auto
                      register to the SIP server.
                    example: 60
                    default: 60
                  transport_protocol:
                    type: string
                    description: |-
                      Protocols supported by the SIP provider.  
                        The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                    example: UDP
                    enum:
                      - UDP
                      - TCP
                      - TLS
                      - AUTO
                  transport_protocol2:
                    type: string
                    description: |-
                      Protocols supported by the SIP provider.  
                        The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                    example: UDP
                    enum:
                      - UDP
                      - TCP
                      - TLS
                      - AUTO
                  transport_protocol3:
                    type: string
                    description: |-
                      Protocols supported by the SIP provider.  
                        The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                    example: UDP
                    enum:
                      - UDP
                      - TCP
                      - TLS
                      - AUTO
                  user_email:
                    maxLength: 64
                    type: string
                    description: >-
                      The email address of the user to associate with the SIP
                      Phone. Can add `.win`, `.mac`, `.android`, `.ipad`,
                      `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end of
                      the email (for example, `user@example.com.mac`) to add
                      accounts for different platforms for the same user.
                    format: email
                    example: jchill@example.com
                  user_name:
                    maxLength: 64
                    type: string
                    description: >-
                      The phone number associated with the user in the SIP
                      account.
                    example: Jill Chill
                  voice_mail:
                    maxLength: 255
                    type: string
                    description: The number to dial for checking voicemail.
                    example: '4000'
        responses:
          '201':
            description: |
              **HTTP Status Code:** `201`  
               
              SIP Phone Created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The SIP phone ID.
                      example: '123456'
                    authorization_name:
                      maxLength: 64
                      type: string
                      description: >-
                        The authorization name of the user that is registered for
                        SIP phone.
                      example: testname
                    domain:
                      maxLength: 64
                      type: string
                      description: >-
                        The name or IP address of your provider's SIP domain
                        (example: CDC.WEB). 
                      example: example.com
                    password:
                      type: string
                      description: The password generated for the user in the SIP account.
                      example: '123456'
                    proxy_server:
                      type: string
                      description: >-
                        The IP address of the proxy server for SIP requests. Note
                        that if you are using the UDP transport protocol, the
                        default port is 5060. If you are using UDP with a
                        different port number, that port number must be included
                        with the IP address. If you are not using a proxy server,
                        this value can be the same as the Register Server.
                      example: 192.0.2.2
                    proxy_server2:
                      type: string
                      description: >-
                        The IP address of the proxy server for SIP requests. Note
                        that if you are using the UDP transport protocol, the
                        default port is 5060. If you are using UDP with a
                        different port number, that port number must be included
                        with the IP address. If you are not using a proxy server,
                        this value can be the same as the Register Server, or
                        empty.
                      example: 192.0.2.4
                    proxy_server3:
                      type: string
                      description: >-
                        The IP address of the proxy server for SIP requests. Note
                        that if you are using the UDP transport protocol, the
                        default port is 5060. If you are using UDP with a
                        different port number, that port number must be included
                        with the IP address. If you are not using a proxy server,
                        this value can be the same as the Register Server, or
                        empty.
                      example: 192.0.2.6
                    register_server:
                      type: string
                      description: >-
                        The IP address of the server that accepts REGISTER
                        requests. Note that if you are using the UDP transport
                        protocol, the default port is 5060. If you are using UDP
                        with a different port number, that port number must be
                        included with the IP address.
                      example: 192.0.2.1
                    register_server2:
                      type: string
                      description: >-
                        The IP address of the server that accepts REGISTER
                        requests. Note that if you are using the UDP transport
                        protocol, the default port is 5060. If you are using UDP
                        with a different port number, that port number must be
                        included with the IP address.
                      example: 192.0.2.3
                    register_server3:
                      type: string
                      description: >-
                        The IP address of the server that accepts REGISTER
                        requests. Note that if you are using the UDP transport
                        protocol, the default port is 5060. If you are using UDP
                        with a different port number, that port number must be
                        included with the IP address.
                      example: 192.0.2.5
                    registration_expire_time:
                      maximum: 127
                      minimum: 1
                      type: integer
                      description: >-
                        The number of minutes after which the SIP registration of
                        the Zoom client user will expire, and the client will auto
                        register to the SIP server.
                      example: 60
                      default: 60
                    transport_protocol:
                      type: string
                      description: |-
                        Protocols supported by the SIP provider.  
                          The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                      example: UDP
                      enum:
                        - UDP
                        - TCP
                        - TLS
                        - AUTO
                    transport_protocol2:
                      type: string
                      description: |-
                        Protocols supported by the SIP provider.  
                          The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                      example: UDP
                      enum:
                        - UDP
                        - TCP
                        - TLS
                        - AUTO
                    transport_protocol3:
                      type: string
                      description: |-
                        Protocols supported by the SIP provider.  
                          The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                      example: UDP
                      enum:
                        - UDP
                        - TCP
                        - TLS
                        - AUTO
                    user_email:
                      maxLength: 64
                      type: string
                      description: >-
                        The email address of the user to associate with the SIP
                        Phone. Can add `.win`, `.mac`, `.android`, `.ipad`,
                        `.iphone`, `.linux`, `.pc`, `.mobile`, `.pad` at the end
                        of the email (for example, `user@example.com.mac`) to add
                        accounts for different platforms for the same user.
                      format: email
                      example: jchill@example.com
                    user_name:
                      maxLength: 64
                      type: string
                      description: >-
                        The phone number associated with the user in the SIP
                        account.
                      example: Jill Chill
                    voice_mail:
                      maxLength: 255
                      type: string
                      description: The number to dial for checking voicemail.
                      example: '4000'
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>

              Permission missing: Enable SIP Phone Integration by contacting a
              Zoom Admin first.<br>


              **Error Code:** `300` <br>

              SIP Phone with the same email already exists.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User {userId} not exist or not belong to this account.

        security:
          - openapi_oauth:
              - sip_phone:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - sip_phone:write:admin
    /sip_phones/{phoneId}:
      delete:
        tags:
          - SIP Phone
        summary: Delete SIP phone
        description: >-
          Use this API to delete a Zoom account's SIP phone. 

           **Prerequisites**: 
          * Currently only supported on Cisco and Avaya PBX systems. 

          * The user must enable **SIP Phone Integration** by contacting the [Zoom
          Sales](https://zoom.us/contactsales) team.


          **Scopes:** `sip_phone:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: deleteSIPPhone
        parameters:
          - name: phoneId
            in: path
            description: The SIP phone ID. It can be retrieved from the List SIP Phones API.
            required: true
            schema:
              type: string
              example: '123456'
        responses:
          '200':
            description: |-
              **Error Code:** `200`  
               Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              SIP Phone deleted.
        security:
          - openapi_oauth:
              - sip_phone:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - sip_phone:write:admin
      patch:
        tags:
          - SIP Phone
        summary: Update SIP phone
        description: >-
          Zoom's Phone System Integration (PSI), also referred as SIP phones,
          enables an organization to leverage the Zoom client to complete a
          softphone registration to supported premise based PBX system. End users
          will have the ability to have softphone functionality within a single
          client while maintaining a comparable interface to Zoom Phone. Use this
          API to update information of a specific SIP Phone on a Zoom account.  
             
           
          **Prerequisites**:

          * Currently only supported on Cisco and Avaya PBX systems. 

          * The account owner or account admin must first enable SIP Phone
          Integration by contacting the [Sales](https://zoom.us/contactsales)
          team.  
            

          **Scopes:** `sip_phone:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: updateSIPPhone
        parameters:
          - name: phoneId
            in: path
            description: >-
              The SIP phone ID. This can be retrieved from the List SIP Phones
              API.
            required: true
            schema:
              type: string
              example: '123456'
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - authorization_name
                  - domain
                  - password
                  - proxy_server
                  - proxy_server2
                  - proxy_server3
                  - register_server
                  - register_server2
                  - register_server3
                  - user_name
                  - voice_mail
                type: object
                properties:
                  authorization_name:
                    maxLength: 64
                    type: string
                    description: >-
                      The authorization name of the user that is registered for
                      SIP phone.
                    example: testname
                  domain:
                    maxLength: 64
                    type: string
                    description: >-
                      The name or IP address of your provider's SIP domain
                      (example: CDC.WEB). 
                    example: example.com
                  password:
                    type: string
                    description: The password generated for the user in the SIP account.
                    example: '123456'
                  proxy_server:
                    type: string
                    description: >-
                      The IP address of the proxy server for SIP requests. Note
                      that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address. If you are not using a proxy server, this value can
                      be the same as the Register Server.
                    example: 192.0.2.2
                  proxy_server2:
                    type: string
                    description: >-
                      The IP address of the proxy server for SIP requests. Note
                      that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address. If you are not using a proxy server, this value can
                      be the same as the Register Server.
                    example: 192.0.2.4
                  proxy_server3:
                    type: string
                    description: >-
                      The IP address of the proxy server for SIP requests. Note
                      that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address. If you are not using a proxy server, this value can
                      be the same as the Register Server.
                    example: 192.0.2.6
                  register_server:
                    type: string
                    description: >-
                      The IP address of the server that accepts REGISTER requests.
                      Note that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address.
                    example: 192.0.2.1
                  register_server2:
                    type: string
                    description: >-
                      The IP address of the server that accepts REGISTER requests.
                      Note that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address.
                    example: 192.0.2.3
                  register_server3:
                    type: string
                    description: >-
                      The IP address of the server that accepts REGISTER requests.
                      Note that if you are using the UDP transport protocol, the
                      default port is 5060. If you are using UDP with a different
                      port number, that port number must be included with the IP
                      address.
                    example: 192.0.2.5
                  registration_expire_time:
                    maximum: 127
                    minimum: 1
                    type: integer
                    description: >-
                      The number of minutes after which the SIP registration of
                      the Zoom client user will expire, and the client will auto
                      register to the SIP server.
                    example: 60
                    default: 60
                  transport_protocol:
                    type: string
                    description: |-
                      Protocols supported by the SIP provider.  
                        The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                    example: UDP
                    enum:
                      - UDP
                      - TCP
                      - TLS
                      - AUTO
                  transport_protocol2:
                    type: string
                    description: |-
                      Protocols supported by the SIP provider.  
                        The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                    example: UDP
                    enum:
                      - UDP
                      - TCP
                      - TLS
                      - AUTO
                  transport_protocol3:
                    type: string
                    description: |-
                      Protocols supported by the SIP provider.  
                        The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
                    example: UDP
                    enum:
                      - UDP
                      - TCP
                      - TLS
                      - AUTO
                  user_name:
                    maxLength: 64
                    type: string
                    description: >-
                      The phone number associated with the user in the SIP
                      account.
                    example: Jill Chill
                  voice_mail:
                    maxLength: 255
                    type: string
                    description: The number to dial for checking voicemail.
                    example: '4000'
        responses:
          '200':
            description: >
              **Error Code:** `200`  
               
              Permission missing: Enable SIP Phone Integration by contacting a
              Zoom Admin first.
          '204':
            description: |
              **HTTP Status Code:** `204`  
               
              SIP Phone information updated successfully.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

        security:
          - openapi_oauth:
              - sip_phone:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - sip_phone:write:admin
    /tsp:
      get:
        tags:
          - TSP
        summary: Get account's TSP information
        description: >-
          Get information on Telephony Service Provider on an account level.  
             
           
          **Prerequisites:**  
           
          * A Pro or a higher plan.


          **Scopes:** `tsp:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: tsp
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              TSP account detail returned successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    dial_in_number_unrestricted:
                      type: boolean
                      description: >-
                        Control restriction on account users adding a TSP number
                        outside of account's dial in numbers.
                      example: false
                    dial_in_numbers:
                      type: array
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            description: Country Code
                            example: '1'
                          number:
                            maxLength: 16
                            type: string
                            description: Dial-in number, length is less than 16
                            example: +1 1000200200
                          type:
                            type: string
                            description: Dial-in number type.
                            example: toll
                    enable:
                      type: boolean
                      description: Enable Telephony Service Provider for account users.
                      example: true
                    master_account_setting_extended:
                      type: boolean
                      description: >-
                        For master account, extend its TSP setting to all sub
                        accounts. For sub account, extend TSP setting from master
                        account.
                      example: true
                    modify_credential_forbidden:
                      type: boolean
                      description: >-
                        Control restriction on account users being able to modify
                        their TSP credentials.
                      example: true
                    tsp_bridge:
                      type: string
                      description: Telephony bridge zone
                      example: US_TSP_TB
                      enum:
                        - US_TSP_TB
                        - EU_TSP_TB
                    tsp_enabled:
                      type: boolean
                      description: >-
                        Enable TSP feature for account. This has to be enabled to
                        use any other tsp settings/features.
                      example: true
                    tsp_provider:
                      type: string
                      description: Telephony Service Provider.
                      example: someprovidername
        security:
          - openapi_oauth:
              - tsp:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tsp:read:admin
      patch:
        tags:
          - TSP
        summary: Update account's TSP information
        description: >-
          Update information of the Telephony Service Provider set up on an
          account.  
           
          **Prerequisites**:  
           
          TSP account option should be enabled.  
           


          **Scopes:** `tsp:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: tspUpdate
        requestBody:
          description: TSP Account
          content:
            application/json:
              schema:
                type: object
                properties:
                  dial_in_number_unrestricted:
                    type: boolean
                    description: >-
                      Control restriction on account users adding a TSP number
                      outside of account's dial in numbers.
                    example: true
                  enable:
                    type: boolean
                    description: Enable 3rd party audio conferencing for account users
                    example: true
                  master_account_setting_extended:
                    type: boolean
                    description: >-
                      For master account, extend its TSP setting to all sub
                      accounts. For sub account, extend TSP setting from master
                      account.
                    example: true
                  modify_credential_forbidden:
                    type: boolean
                    description: >-
                      Control restriction on account users being able to modify
                      their TSP credentials.
                    example: true
                  tsp_bridge:
                    type: string
                    description: Telephony bridge
                    example: US_TSP_TB
                    enum:
                      - US_TSP_TB
                      - EU_TSP_TB
                  tsp_enabled:
                    type: boolean
                    description: >-
                      Enable TSP feature for account. This has to be enabled to
                      use any other tsp settings/features.
                    example: true
                  tsp_provider:
                    type: string
                    description: 3rd party audio conferencing provider
                    example: someprovidername
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204` **No Content**  
               
              TSP Account updated.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>
              Invalid parameter: tsp_bridge.

        security:
          - openapi_oauth:
              - tsp:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tsp:write:admin
    /users/{userId}/tsp:
      get:
        tags:
          - TSP
        summary: List user's TSP accounts
        description: >-
          A user can have a maximum of two TSP accounts. Use this API to list all
          TSP accounts of a user.  
             
           


          **Scopes:** `tsp:read:admin`,`tsp:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: userTSPs
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID or email address of the user. For user-level apps, pass
              the `me` value.
            required: true
            schema:
              oneOf:
                - type: string
                  example: 6dfgdfgdg444447b0egga
                - type: string
                  format: email
                  example: jchill@example.com
                - type: string
                  example: me
                  enum:
                    - me
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**  
               
              TSP account list returned successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    tsp_accounts:
                      type: array
                      items:
                        title: TSP Accounts List
                        required:
                          - conference_code
                          - leader_pin
                        type: object
                        properties:
                          conference_code:
                            maxLength: 16
                            minLength: 1
                            type: string
                            description: >-
                              Conference code: numeric value, length is less than
                              16.
                            example: '0125'
                          dial_in_numbers:
                            type: array
                            description: List of dial in numbers.
                            items:
                              type: object
                              properties:
                                code:
                                  maxLength: 6
                                  type: string
                                  description: Country code.
                                  example: '1'
                                country_label:
                                  maxLength: 10
                                  type: string
                                  description: >-
                                    Country Label, if passed, will display in
                                    place of code.
                                  example: America
                                number:
                                  maxLength: 16
                                  minLength: 1
                                  type: string
                                  description: 'Dial-in number: length is less than 16.'
                                  example: +1 1000200200
                                type:
                                  type: string
                                  description: |-
                                    Dial-in number types:  
                                     `toll` - Toll number.  
                                     `tollfree` -Toll free number.  
                                     
                                    `media_link` - Media link
                                  example: toll
                                  extensions:
                                    x-enum-descriptions:
                                      - Toll number <br/>
                                      - Toll free number <br/>
                                      - Media link phone number <br/>
                                  enum:
                                    - toll
                                    - tollfree
                                    - media_link
                          id:
                            type: string
                            description: The TSP credential ID.
                            example: '1'
                            enum:
                              - '1'
                              - '2'
                          leader_pin:
                            maxLength: 16
                            minLength: 1
                            type: string
                            description: 'Leader PIN: numeric value, length is less than 16.'
                            example: '11189898'
                          tsp_bridge:
                            type: string
                            description: |
                              Telephony bridge
                            example: US_TSP_TB
                            enum:
                              - US_TSP_TB
                              - EU_TSP_TB
                        description: List of TSP accounts.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `2024` <br>
              Account has not enabled TSP.

          '404':
            description: >+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>

              User does not exist: $userId.<br>


              **Error Code:** `1120` <br>

              A valid invitation to join the Zoom account was not found for this
              user.<br>

              This error is thrown if you added a user in your account but the
              user did not accept the invitation on time and the invitation
              expired - thus making the userId invalid.

        security:
          - openapi_oauth:
              - tsp:read:admin
              - tsp:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tsp:read:admin
            - tsp:read
      post:
        tags:
          - TSP
        summary: Add a user's TSP account
        description: >-
          Add a user's TSP account.  
             
           


          **Scopes:** `tsp:write:admin`,`tsp:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: userTSPCreate
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID or email address of the user. For user-level apps, pass
              the `me` value.
            required: true
            schema:
              oneOf:
                - type: string
                  example: 6dfgdfgdg444447b0egga
                - type: string
                  format: email
                  example: jchill@example.com
                - type: string
                  example: me
                  enum:
                    - me
        requestBody:
          description: TSP account.
          content:
            application/json:
              schema:
                title: TSP Accounts List
                required:
                  - conference_code
                  - leader_pin
                type: object
                properties:
                  conference_code:
                    maxLength: 16
                    minLength: 1
                    type: string
                    description: 'Conference code: numeric value, length is less than 16.'
                    example: '0125'
                  dial_in_numbers:
                    type: array
                    description: List of dial in numbers.
                    items:
                      type: object
                      properties:
                        code:
                          maxLength: 6
                          type: string
                          description: Country code.
                          example: '1'
                        country_label:
                          maxLength: 10
                          type: string
                          description: >-
                            Country Label, if passed, will display in place of
                            code.
                          example: America
                        number:
                          maxLength: 16
                          minLength: 1
                          type: string
                          description: 'Dial-in number: length is less than 16.'
                          example: +1 1000200200
                        type:
                          type: string
                          description: |-
                            Dial-in number types:  
                             `toll` - Toll number.  
                             `tollfree` -Toll free number.  
                             
                            `media_link` - Media link.
                          example: toll
                          extensions:
                            x-enum-descriptions:
                              - Toll number <br/>
                              - Toll free number <br/>
                              - Media link phone number <br/>
                          enum:
                            - toll
                            - tollfree
                            - media_link
                  leader_pin:
                    maxLength: 16
                    minLength: 1
                    type: string
                    description: 'Leader PIN: numeric value, length is less than 16.'
                    example: US_TSP_TB
                  tsp_bridge:
                    type: string
                    description: Telephony bridge
                    example: US_TSP_TB
                    enum:
                      - US_TSP_TB
                      - EU_TSP_TB
                description: List of TSP accounts.
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`  
               
              TSP account added.
            content:
              application/json:
                schema:
                  properties:
                    id:
                      type: string
                      description: The ID of the TSP account.
                      example: '1'
                    conference_code:
                      maxLength: 16
                      minLength: 1
                      type: string
                      description: 'Conference code: numeric value, length is less than 16.'
                      example: '0125'
                    dial_in_numbers:
                      type: array
                      description: List of dial in numbers.
                      items:
                        type: object
                        properties:
                          code:
                            maxLength: 6
                            type: string
                            description: Country code.
                            example: '1'
                          country_label:
                            maxLength: 10
                            type: string
                            description: >-
                              Country Label, if passed, will display in place of
                              code.
                            example: America
                          number:
                            maxLength: 16
                            minLength: 1
                            type: string
                            description: 'Dial-in number: length is less than 16.'
                            example: +1 1000200200
                          type:
                            type: string
                            description: |-
                              Dial-in number types:  
                               `toll` - Toll number.  
                               `tollfree` -Toll free number.  
                               
                              `media_link` - Media link.
                            example: toll
                            extensions:
                              x-enum-descriptions:
                                - Toll number <br/>
                                - Toll free number <br/>
                                - Media link phone number <br/>
                            enum:
                              - toll
                              - tollfree
                              - media_link
                    leader_pin:
                      maxLength: 16
                      minLength: 1
                      type: string
                      description: 'Leader PIN: numeric value, length is less than 16.'
                      example: US_TSP_TB
                    tsp_bridge:
                      type: string
                      description: Telephony bridge
                      example: US_TSP_TB
                      enum:
                        - US_TSP_TB
                        - EU_TSP_TB
                  title: TSP Accounts List
                  required:
                    - conference_code
                    - leader_pin
                  type: object
                  description: List of TSP accounts.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `2024` <br>
              Account has not enabled TSP.<br>

              **Error Code:** `300` <br>
              Media link is required for AT&T TSP accounts.<br>

              **Error Code:** `300` <br>
              You can add a max of two tsp configs.

          '404':
            description: >+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>

              User does not exist: $userId.<br>


              **Error Code:** `1120` <br>

              A valid invitation to join the Zoom account was not found for this
              user.<br>

              This error is thrown if you added a user in your account but the
              user did not accept the invitation on time and the invitation
              expired - thus making the userId invalid.

        security:
          - openapi_oauth:
              - tsp:write:admin
              - tsp:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tsp:write:admin
            - tsp:write
    /users/{userId}/tsp/settings:
      patch:
        tags:
          - TSP
        summary: Set global dial-in URL for a TSP user
        description: >-
          A global dial-in page can provide a list of global access numbers using
          which audio conferencing can be conducted. By calling this API, you can
          set the url for the global dial-in page of a user whose Zoom account has
          TSP and special TSP with third-party audio conferencing options enabled.
          &lt;p&gt;&lt;/p&gt;



          **Scopes:** `tsp:write:admin`,`tsp:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: tspUrlUpdate
        parameters:
          - name: userId
            in: path
            description: The userId or email address of the user.
            required: true
            schema:
              type: string
              example: 6dfgdfgdg444447b0egga
        requestBody:
          description: Global dial-in URL of the user.
          content:
            application/json:
              schema:
                title: TSP Global Dial-In URL Setting
                type: object
                properties:
                  audio_url:
                    maxLength: 512
                    type: string
                    description: >-
                      The global dial-in URL for a TSP enabled account. The URL
                      must be valid with a max-length of 512 characters.
                    example: https://example.com
        responses:
          '204':
            description: |-
              **Status Code:** `204` **No Content**   
               
              URL set successfully.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `2000` <br>

              Not TSP special account.<br>


              Ths error means that the account does not have special TSP
              privilege. Contact Zoom Developer Support for details.<br>


              **Error Code:** `2024` <br>

              Account not enable TSP

          '404':
            description: >+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>

              User {userId} not exist or not belong to this account.


              **Error Code:** `1120` <br>

              Invite not exist.


              This error is thrown if you added a user in your account but the
              user did not accept the invitation on time and the invitation
              expired - thus making the userId invalid.

        security:
          - openapi_oauth:
              - tsp:write:admin
              - tsp:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tsp:write:admin
            - tsp:write
    /users/{userId}/tsp/{tspId}:
      get:
        tags:
          - TSP
        summary: Get a user's TSP account
        description: >-
          Each user can have a maximum of two TSP accounts. Use this API to
          retrieve details of a specific TSP account enabled for a specific
          user.  
             
           


          **Scopes:** `tsp:read:admin`,`tsp:read`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: userTSP
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID or email address of the user. For user-level apps, pass
              the `me` value.
            required: true
            schema:
              oneOf:
                - type: string
                  example: 6dfgdfgdg444447b0egga
                - type: string
                  format: email
                  example: jchill@example.com
                - type: string
                  example: me
                  enum:
                    - me
          - name: tspId
            in: path
            description: TSP account ID.
            required: true
            schema:
              type: string
              example: '1'
              enum:
                - '1'
                - '2'
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              TSP account retrieved successfully.
            content:
              application/json:
                schema:
                  title: TSP Account
                  required:
                    - conference_code
                    - leader_pin
                  type: object
                  properties:
                    conference_code:
                      maxLength: 16
                      minLength: 1
                      type: string
                      description: 'Conference code: numeric value, length is less than 16.'
                      example: '0125'
                    dial_in_numbers:
                      type: array
                      description: List of dial in numbers.
                      items:
                        type: object
                        properties:
                          code:
                            maxLength: 6
                            type: string
                            description: Country code.
                            example: '1'
                          country_label:
                            maxLength: 10
                            type: string
                            description: >-
                              Country Label, if passed, will display in place of
                              code.
                            example: America
                          number:
                            maxLength: 16
                            minLength: 1
                            type: string
                            description: 'Dial-in number: length is less than 16.'
                            example: +1 1000200200
                          type:
                            type: string
                            description: |-
                              Dial-in number types:  
                               `toll` - Toll number.  
                               `tollfree` -Toll free number.   
                                `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number.
                            example: toll
                            extensions:
                              x-enum-descriptions:
                                - Toll number <br/>
                                - Toll free number <br/>
                                - Media link phone number <br/>
                            enum:
                              - toll
                              - tollfree
                              - media_link
                    id:
                      type: string
                      description: The TSP account ID.
                      example: '1'
                    leader_pin:
                      maxLength: 16
                      minLength: 1
                      type: string
                      description: 'Leader PIN: numeric value, length is less than 16.'
                      example: '11189898'
                    tsp_bridge:
                      type: string
                      description: Telephony bridge
                      example: US_TSP_TB
                      enum:
                        - US_TSP_TB
                        - EU_TSP_TB
                  description: TSP account of the user.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>
              The TSP id provided does not exist.<br>

              **Error Code:** `300` <br>
              TSP Config does not exist.<br>

              **Error Code:** `2024` <br>
              Account has not enabled TSP.

          '404':
            description: >+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>

              User does not exist: $userId.<br>


              **Error Code:** `1120` <br>

              A valid invitation to join the Zoom account was not found for this
              user.<br>

              This error is thrown if you added a user in your account but the
              user did not accept the invitation on time and the invitation
              expired - thus making the userId invalid.

        security:
          - openapi_oauth:
              - tsp:read:admin
              - tsp:read
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tsp:read:admin
            - tsp:read
      delete:
        tags:
          - TSP
        summary: Delete a user's TSP account
        description: >-
          Delete a user's TSP account.  
             
           


          **Scopes:** `tsp:write:admin`,`tsp:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: userTSPDelete
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID or email address of the user. For user-level apps, pass
              the `me` value.
            required: true
            schema:
              oneOf:
                - type: string
                  example: 6dfgdfgdg444447b0egga
                - type: string
                  format: email
                  example: jchill@example.com
                - type: string
                  example: me
                  enum:
                    - me
          - name: tspId
            in: path
            description: TSP account ID.
            required: true
            schema:
              type: string
              example: '1'
              enum:
                - '1'
                - '2'
        responses:
          '204':
            description: |-
              **Status Code:** `204` **No Content**  
               
              TSP account deleted.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `2024` <br>
              Account not enable TSP.<br>

              **Error Code:** `300` <br>
              The TSP id provided does not exist.<br>

              **Error Code:** `300` <br>
              TSP Config does not exist.<br>

              **Error Code:** `300` <br>
              At least one tsp config must be available.

          '404':
            description: >+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>

              User does not exist: $userId.<br>


              **Error Code:** `1120` <br>

              A valid invitation to join the Zoom account was not found for this
              user.<br>

              This error is thrown if you added a user in your account but the
              user did not accept the invitation on time and the invitation
              expired - thus making the userId invalid.

        security:
          - openapi_oauth:
              - tsp:write:admin
              - tsp:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tsp:write:admin
            - tsp:write
      patch:
        tags:
          - TSP
        summary: Update a TSP account
        description: >-
          Update a user's TSP account.  
             
           


          **Scopes:** `tsp:write:admin`,`tsp:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: userTSPUpdate
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID or email address of the user. For user-level apps, pass
              the `me` value.
            required: true
            schema:
              oneOf:
                - type: string
                  example: 6dfgdfgdg444447b0egga
                - type: string
                  format: email
                  example: jchill@example.com
                - type: string
                  example: me
                  enum:
                    - me
          - name: tspId
            in: path
            description: TSP account ID.
            required: true
            schema:
              type: string
              example: '1'
              enum:
                - '1'
                - '2'
        requestBody:
          description: TSP account.
          content:
            application/json:
              schema:
                title: TSP Account
                required:
                  - conference_code
                  - leader_pin
                type: object
                properties:
                  conference_code:
                    maxLength: 16
                    minLength: 1
                    type: string
                    description: 'Conference code: numeric value, length is less than 16.'
                    example: '0125'
                  dial_in_numbers:
                    type: array
                    description: List of dial in numbers.
                    items:
                      type: object
                      properties:
                        code:
                          maxLength: 6
                          type: string
                          description: Country code.
                          example: '1'
                        country_label:
                          maxLength: 10
                          type: string
                          description: >-
                            Country Label, if passed, will display in place of
                            code.
                          example: America
                        number:
                          maxLength: 16
                          minLength: 1
                          type: string
                          description: 'Dial-in number: length is less than 16.'
                          example: +1 1000200200
                        type:
                          type: string
                          description: |-
                            Dial-in number types:  
                             `toll` - Toll number.  
                             `tollfree` -Toll free number.  
                             `media_link` - Media Link Phone Number. It is used for PSTN integration instead of paid bridge number.
                          example: toll
                          extensions:
                            x-enum-descriptions:
                              - Toll number <br/>
                              - Toll free number <br/>
                              - Media link phone number <br/>
                          enum:
                            - toll
                            - tollfree
                            - media_link
                  leader_pin:
                    maxLength: 16
                    minLength: 1
                    type: string
                    description: 'Leader PIN: numeric value, length is less than 16.'
                    example: '11189898'
                  tsp_bridge:
                    type: string
                    description: Telephony bridge
                    example: US_TSP_TB
                    enum:
                      - US_TSP_TB
                      - EU_TSP_TB
                description: TSP account.
        responses:
          '204':
            description: |-
              **HTTP Status Code:**`204` **No Content**  
               
              TSP account updated.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `2024` <br>
              Account has not enabled TSP.<br>

              **Error Code:** `300` <br>
              The TSP id provided does not exist.<br>

              **Error Code:** `300` <br>
              TSP Config does not exist.<br>

              **Error Code:** `300` <br>
              At least one tsp config must be available.<br>

              **Error Code:** `300` <br>
              Media link is required for AT&T TSP accounts.

              **Error Code:** `300` <br>
              Invalid parameter: tsp_bridge.

          '404':
            description: >+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>

              User does not exist: $userId.<br>


              **Error Code:** `1120` <br>

              A valid invitation to join the Zoom account was not found for this
              user.<br>

              This error is thrown if you added a user in your account but the
              user did not accept the invitation on time and the invitation
              expired - thus making the userId invalid.

        security:
          - openapi_oauth:
              - tsp:write:admin
              - tsp:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tsp:write:admin
            - tsp:write
    /tracking_fields:
      get:
        tags:
          - Tracking Field
        summary: List tracking fields
        description: >-
          Use this API to list all the [tracking
          fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields)
          on your Zoom account. Tracking fields let you analyze usage by various
          fields within an organization. 


          **Prerequisites:** 

          * A Business, Education, API or higher plan.


          **Scopes:** `tracking_fields:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: trackingfieldList
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              List of Tracking Fields returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    total_records:
                      type: integer
                      description: The number of all records available across pages
                      example: 1
                    tracking_fields:
                      type: array
                      description: Array of Tracking Fields
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID of Tracking Field
                            example: a32CJji-weJ92
                          field:
                            type: string
                            description: Label/ Name for the tracking field.
                            example: field1
                          recommended_values:
                            type: array
                            description: Array of recommended values
                            items:
                              type: string
                              example: value1
                          required:
                            type: boolean
                            description: Tracking Field Required
                            example: false
                          visible:
                            type: boolean
                            description: Tracking Field Visible
                            example: true
                        title: Tracking Field
                        description: Tracking Field
                  description: Tracking Field List
        security:
          - openapi_oauth:
              - tracking_fields:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tracking_fields:read:admin
      post:
        tags:
          - Tracking Field
        summary: Create a tracking field
        description: >-
          Use this API to create a new [tracking
          field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields).
          Tracking fields let you analyze usage by various fields within an
          organization. When scheduling a meeting, tracking fields will be
          included in the meeting options. 


          **Prerequisites:** 

          * A Business, Education, API or higher plan.


          **Scopes:** `tracking_fields:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: trackingfieldCreate
        requestBody:
          description: Tracking Field
          content:
            application/json:
              schema:
                title: Tracking Field
                type: object
                properties:
                  field:
                    type: string
                    description: Label/ Name for the tracking field.
                    example: field1
                  recommended_values:
                    type: array
                    description: Array of recommended values
                    items:
                      type: string
                      example: value1
                  required:
                    type: boolean
                    description: Tracking Field Required
                    example: false
                  visible:
                    type: boolean
                    description: Tracking Field Visible
                    example: true
                description: Tracking Field
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`  
               
              Tracking Field created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Tracking Field ID
                      example: a32CJji-weJ92
                    field:
                      type: string
                      description: Label/ Name for the tracking field.
                      example: field1
                    recommended_values:
                      type: array
                      description: Array of recommended values
                      items:
                        type: string
                        example: value1
                    required:
                      type: boolean
                      description: Tracking Field Required
                      example: false
                    visible:
                      type: boolean
                      description: Tracking Field Visible
                      example: true
                  title: Tracking Field
                  description: Tracking Field
        security:
          - openapi_oauth:
              - tracking_fields:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tracking_fields:write:admin
    /tracking_fields/{fieldId}:
      get:
        tags:
          - Tracking Field
        summary: Get a tracking field
        description: >-
          Use this API to return information about a [tracking
          field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). 


          **Prerequisites:** 

          * A Business, Education, API or higher plan.


          **Scopes:** `tracking_fields:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: trackingfieldGet
        parameters:
          - name: fieldId
            in: path
            description: The Tracking Field ID
            required: true
            schema:
              type: string
              example: a32CJji-weJ92
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Tracking Field object returned
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Tracking Field ID
                      example: a32CJji-weJ92
                    field:
                      type: string
                      description: Label/ Name for the tracking field.
                      example: field1
                    recommended_values:
                      type: array
                      description: Array of recommended values
                      items:
                        type: string
                        example: value1
                    required:
                      type: boolean
                      description: Tracking Field Required
                      example: false
                    visible:
                      type: boolean
                      description: Tracking Field Visible
                      example: true
                  title: Tracking Field
                  description: Tracking Field
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - tracking_fields:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tracking_fields:read:admin
      delete:
        tags:
          - Tracking Field
        summary: Delete a tracking field
        description: >-
          Use this API to delete a [tracking
          field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). 


          **Prerequisites:** 

          * A Business, Education, API or higher plan.


          **Scopes:** `tracking_fields:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: trackingfieldDelete
        parameters:
          - name: fieldId
            in: path
            description: The Tracking Field ID
            required: true
            schema:
              type: string
              example: a32CJji-weJ92
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Tracking Field deleted
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - tracking_fields:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tracking_fields:write:admin
      patch:
        tags:
          - Tracking Field
        summary: Update a tracking field
        description: >-
          Use this API to update a [tracking
          field](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields). 


          **Prerequisites:** 

          * A Business, Education, API or higher plan.


          **Scopes:** `tracking_fields:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: trackingfieldUpdate
        parameters:
          - name: fieldId
            in: path
            description: The Tracking Field ID
            required: true
            schema:
              type: string
              example: a32CJji-weJ92
        requestBody:
          content:
            application/json:
              schema:
                title: Tracking Field
                type: object
                properties:
                  field:
                    type: string
                    description: Label/ Name for the tracking field.
                    example: field1
                  recommended_values:
                    type: array
                    description: Array of recommended values
                    items:
                      type: string
                      example: value1
                  required:
                    type: boolean
                    description: Tracking Field Required
                    example: false
                  visible:
                    type: boolean
                    description: Tracking Field Visible
                    example: true
                description: Tracking Field
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Tracking Field updated
          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - tracking_fields:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - tracking_fields:write:admin
    /live_webinars/{webinarId}/chat/messages/{messageId}:
      delete:
        tags:
          - Webinars
        summary: Delete a live webinar message
        description: >-
          Deletes a message in a live webinar based on ID. 


          **Prerequisites:** 

          * Have Zoom enable the DLP for the in-meeting chat feature to use this
          API.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: deleteWebinarChatMessageById
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: messageId
            in: path
            description: >-
              The live webinar chat message's unique identifier (UUID), in
              base64-encoded format.
            required: true
            schema:
              type: string
              example: MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==
          - name: file_ids
            in: query
            description: >-
              The live webinar chat file's universally unique identifier (UUID),
              in base64-encoded format. Separate multiple values with commas.
            required: false
            schema:
              type: string
              example: >-
                MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==,MS17NDQ0OEU5MjMtM0JFOS1CMDA1LTQ0NDAtQjdGOTU0Rjk5MTkyfQ==
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              Webinar chat message deleted.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `200` <br>
               * Only available for paid accounts. * DLP is not enabled. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Webinar  {webinarId} does not exist. <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions: []
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
    /past_webinars/{webinarId}/absentees:
      get:
        tags:
          - Webinars
        summary: Get webinar absentees
        description: >-
          List absentees of a webinar.  
             
           


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_absentees`,`webinar:read:list_absentees:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: webinarAbsentees
        parameters:
          - name: webinarId
            in: path
            description: >-
              The webinar's ID or universally unique ID (UUID). 

              * If you provide a webinar ID, the API will return a response for
              the latest webinar instance. 

              * If you provide a webinar UUID that begins with a `/` character or
              contains the `//` characters, you **must** [double
              encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
              the webinar UUID before making an API request.
            required: true
            schema:
              type: string
              example: ABCDE12345
          - name: occurrence_id
            in: query
            description: The meeting or webinar occurrence ID.
            required: false
            schema:
              type: string
              example: '1648194360000'
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200`  
               
              Success.  
               **Error Code:** `200`  
               
              Webinar plan subscription is missing. Enable webinar for this user
              once the subscription is added:{userId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        Use the next page token to paginate through large result
                        sets. A next page token is returned whenever the set of
                        available results exceeds the current page size. This
                        token's expiration period is 15 minutes.
                      example: w7587w4eiyfsudgf
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_number:
                      type: integer
                      description: >-
                        **Deprecated.** This field is deprecated. We will no
                        longer support this field in a future release. Instead,
                        use the `next_page_token` for pagination.
                      example: 1
                      deprecated: true
                      default: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 20
                    registrants:
                      type: array
                      description: List of registrant objects.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Registrant ID.
                            example: 9tboDiHUQAeOnbmudzWa5g
                          address:
                            type: string
                            description: The registrant's address.
                            example: 1800 Amphibious Blvd.
                          city:
                            type: string
                            description: The registrant's city.
                            example: Mountain View
                          comments:
                            type: string
                            description: The registrant's questions and comments.
                            example: Looking forward to the discussion.
                          country:
                            type: string
                            description: >-
                              The registrant's two-letter ISO [country
                              code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
                            example: US
                          custom_questions:
                            type: array
                            description: Information about custom questions.
                            items:
                              type: object
                              properties:
                                title:
                                  type: string
                                  description: The title of the custom question.
                                  example: What do you hope to learn from this?
                                value:
                                  maxLength: 128
                                  type: string
                                  description: >-
                                    The custom question's response value. This has
                                    a limit of 128 characters.
                                  example: >-
                                    Look forward to learning how you come up with
                                    new recipes and what other services you offer.
                              description: Information about custom questions.
                          email:
                            maxLength: 128
                            type: string
                            description: >-
                              The registrant's email address. See [Email address
                              display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for return value details.
                            format: email
                            example: jchill@example.com
                          first_name:
                            maxLength: 64
                            type: string
                            description: The registrant's first name.
                            example: Jill
                          industry:
                            type: string
                            description: The registrant's industry.
                            example: Food
                          job_title:
                            type: string
                            description: The registrant's job title.
                            example: Chef
                          last_name:
                            maxLength: 64
                            type: string
                            description: The registrant's last name.
                            example: Chill
                          no_of_employees:
                            type: string
                            description: |-
                              The registrant's number of employees. 
                              * `1-20` 
                              * `21-50` 
                              * `51-100` 
                              * `101-250` 
                              * `251-500` 
                              * `501-1,000` 
                              * `1,001-5,000` 
                              * `5,001-10,000` 
                              * `More than 10,000`
                            example: 1-20
                            enum:
                              - ''
                              - 1-20
                              - 21-50
                              - 51-100
                              - 101-250
                              - 251-500
                              - 501-1,000
                              - 1,001-5,000
                              - 5,001-10,000
                              - More than 10,000
                          org:
                            type: string
                            description: The registrant's organization.
                            example: Cooking Org
                          phone:
                            type: string
                            description: The registrant's phone number.
                            example: '5550100'
                          purchasing_time_frame:
                            type: string
                            description: |-
                              The registrant's purchasing time frame. 
                              * `Within a month` 
                              * `1-3 months` 
                              * `4-6 months` 
                              * `More than 6 months` 
                              * `No timeframe`
                            example: 1-3 months
                            enum:
                              - ''
                              - Within a month
                              - 1-3 months
                              - 4-6 months
                              - More than 6 months
                              - No timeframe
                          role_in_purchase_process:
                            type: string
                            description: |-
                              The registrant's role in the purchase process. 
                              * `Decision Maker` 
                              * `Evaluator/Recommender` 
                              * `Influencer` 
                              * `Not involved`
                            example: Influencer
                            enum:
                              - ''
                              - Decision Maker
                              - Evaluator/Recommender
                              - Influencer
                              - Not involved
                          state:
                            type: string
                            description: The registrant's state or province.
                            example: CA
                          status:
                            type: string
                            description: |-
                              The status of the registrant's registration.
                                `approved` - User has been successfully approved for the webinar.  
                                `pending` -  The registration is still pending.  
                                `denied` - User has been denied from joining the webinar.
                            example: approved
                            enum:
                              - approved
                              - denied
                              - pending
                          zip:
                            type: string
                            description: The registrant's ZIP or postal code.
                            example: '94045'
                          create_time:
                            type: string
                            description: The time when the registrant registered.
                            format: date-time
                            example: '2022-03-22T05:59:09Z'
                          join_url:
                            type: string
                            description: >-
                              The URL that an approved registrant can use to join
                              the meeting or webinar.
                            format: string
                            example: https://example.com/j/11111
                        required:
                          - email
                          - first_name
                        description: ' Registrant.'
                  description: List of users.
                  title: Registration List
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               The request could not be completed because you have provided an invalid occurrence ID: {occurrenceId}<br> <br>
              **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
              **Error Code:** `3000` <br>
               This Webinar has not registration required: {webinarUUID} <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account.<br> <br>
              **Error Code:** `3001` <br>
               Meeting ID is invalid or not end. <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_absentees
            - webinar:read:list_absentees:admin
    /past_webinars/{webinarId}/instances:
      get:
        tags:
          - Webinars
        summary: List past webinar instances
        description: >-
          List past webinar instances.  
             
           


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_past_instances`,`webinar:read:list_past_instances:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: pastWebinars
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              List of past webinar instances returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    webinars:
                      type: array
                      description: List of ended webinar instances.
                      items:
                        type: object
                        properties:
                          start_time:
                            type: string
                            description: Start time.
                            format: date-time
                            example: '2022-03-26T06:44:14Z'
                          uuid:
                            type: string
                            description: Webinar UUID.
                            example: Bznyg8KZTdCVbQxvS/oZ7w==
                  title: Webinar instances
                  description: List of webinars.
          '404':
            description: |-
              **HTTP Status Code:** `404` <br>
               Not Found 

               
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_past_instances
            - webinar:read:list_past_instances:admin
    /past_webinars/{webinarId}/participants:
      get:
        tags:
          - Webinars
        summary: List webinar participants
        description: >-
          Retrieve a list of all the participants who attended a webinar hosted in
          the past. 


          **Prerequisites:** 

          * A Pro or higher plan with a webinar add-on.


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_past_participants:admin`,`webinar:read:list_past_participants`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: listWebinarParticipants
        parameters:
          - name: webinarId
            in: path
            description: >-
              The webinar's ID or universally unique ID (UUID). 

              * If you provide a webinar ID, the API returns a response for the
              latest webinar instance. 

              * If you provide a webinar UUID that begins with a `/` character or
              contains the `//` characters, you **must** [double
              encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
              the webinar UUID before making an API request.
            required: true
            schema:
              type: string
              example: ABCDE12345
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**  
               
              Participants list returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        Use the next page token to paginate through large result
                        sets. A next page token is returned whenever the set of
                        available results exceeds the current page size. This
                        token's expiration period is 15 minutes.
                      example: Tva2CuIdTgsv8wAnhyAdU3m06Y2HuLQtlh3
                    page_count:
                      type: integer
                      description: The number of pages returned for this request.
                      example: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: >-
                        The total number of records returned from a single API
                        call.
                      example: 30
                      default: 30
                    participants:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: The participant's unique identifier.
                            example: 30R7kT7bTIKSNUFEuH_Qlg
                          name:
                            type: string
                            description: The participant's name.
                            example: Jill Chill
                          user_id:
                            type: string
                            description: >-
                              The participant's ID. This ID is assigned to the
                              participant upon joining the webinar and is only
                              valid for that webinar.
                            example: ABCDEF123456
                          registrant_id:
                            type: string
                            description: >-
                              The participant's unique registrant ID. This field
                              only returns if you pass the `registrant_id` value
                              for the `include_fields` query parameter. 


                              This field does not return if the `type` query
                              parameter is the `live` value.
                            example: _f08HhPJS82MIVLuuFaJPg
                          user_email:
                            type: string
                            description: >-
                              Email address of the participant. If the participant
                              is **not** part of the host's account, this returns
                              an empty string value, with some exceptions. See
                              [Email address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for details.
                            format: email
                            example: jchill@example.com
                          join_time:
                            type: string
                            description: The participant's join time.
                            format: date-time
                            example: '2019-02-01T12:34:12.660Z'
                          leave_time:
                            type: string
                            description: The participant's leave time.
                            format: date-time
                            example: '2019-02-01T12:54:12.660Z'
                          duration:
                            type: integer
                            description: The participant's attendance duration.
                            example: 20
                          failover:
                            type: boolean
                            description: Whether failover occurred during the webinar.
                            example: false
                          status:
                            type: string
                            description: |-
                              The participant's status. 
                              * `in_meeting` - In a meeting. 
                              * `in_waiting_room` - In a waiting room.
                            example: in_meeting
                            enum:
                              - in_meeting
                              - in_waiting_room
                    total_records:
                      type: integer
                      description: The total number of records available across all pages.
                      example: 1
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `200` <br>
               No permission.<br>
              Only available for paid account: {accountId}.<br><br> <br>
              **Error Code:** `300` <br>
               The next page token is invalid or expired. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Webinar does not exist. <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_past_participants:admin
            - webinar:read:list_past_participants
    /past_webinars/{webinarId}/polls:
      get:
        tags:
          - Webinars
        summary: List past webinar poll results
        description: >-
          The polling feature for webinar lets you create single-choice or
          multiple-choice polling questions for your webinars. This API endpoint
          retrieves the results for webinar polls of a specific webinar.


          **Prerequisites:**  
           
          * [Webinar license](https://zoom.us/webinar)  
           


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_past_polls`,`webinar:read:list_past_polls:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: listPastWebinarPollResults
        parameters:
          - name: webinarId
            in: path
            description: >-
              The webinar's ID or universally unique ID (UUID). 

              * If you provide a webinar ID, the API returns a response for the
              latest webinar instance. 

              * If you provide a webinar UUID that begins with a `/` character or
              contains the `//` characters, you **must** [double
              encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
              the webinar UUID before making an API request.
            required: true
            schema:
              type: string
              example: ABCDE12345
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**  
               
              Polls returned successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: >-
                        Webinar ID in **long** format, represented as int64 data
                        type in JSON, also known as the webinar number.
                      format: int64
                      example: 95204914252
                    questions:
                      type: array
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: >-
                              Email address of the user who submitted answers to
                              the poll. If the participant is **not** part of the
                              host's account, this returns an empty string value,
                              with some exceptions. See [Email address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for details.
                            example: jchill@example.com
                          name:
                            type: string
                            description: >-
                              Name of the user who submitted answers to the poll.
                              If the `anonymous` option is enabled for a poll, the
                              participant's polling information will be kept
                              anonymous and the value of `name` field will be
                              `Anonymous Attendee`.
                            example: Jill Chill
                          question_details:
                            type: array
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                                  description: Answer submitted by the user.
                                  example: Good
                                date_time:
                                  type: string
                                  description: >-
                                    Date and time when the answer to the poll was
                                    submitted.
                                  format: date-time
                                  example: '2022-03-26T05:37:59Z'
                                polling_id:
                                  type: string
                                  description: Unique identifier of the poll.
                                  example: QalIoKWLTJehBJ8e1xRrbQ
                                question:
                                  type: string
                                  description: Question asked during the poll.
                                  example: How are you?
                    start_time:
                      type: string
                      description: The webinar's start time.
                      format: date-time
                      example: '2022-03-26T05:37:59Z'
                    uuid:
                      type: string
                      description: Webinar UUID.
                      example: Bznyg8KZTdCVbQxvS/oZ7w==
          '401':
            description: |
              **HTTP Status Code:** `401` <br>
               Unauthorized 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Webinar ID is invalid or not end.<br>
              This webinar id does not belong to you:{webinarId}. <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_past_polls
            - webinar:read:list_past_polls:admin
    /past_webinars/{webinarId}/qa:
      get:
        tags:
          - Webinars
        summary: List Q&As of a past webinar
        description: >-
          List the Q&amp;A of a specific past webinar. 


          The [question &amp; answer
          (Q&amp;A)](https://support.zoom.us/hc/en-us/articles/203686015-Getting-Started-with-Question-Answer)
          feature for webinars lets attendees ask questions during the webinar and
          for the panelists, co-hosts and host to answer their questions. 


          **Prerequisites**  
           
          * [Webinar license](https://zoom.us/webinar)  
           


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:** `webinar:read:past_qa`,`webinar:read:past_qa:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: listPastWebinarQA
        parameters:
          - name: webinarId
            in: path
            description: >-
              The webinar's ID or universally unique ID (UUID). 

              * If you provide a webinar ID, the API returns a response for the
              latest webinar instance. 

              * If you provide a webinar UUID that begins with a `/` character or
              contains the `//` characters, you **must** [double
              encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
              the webinar UUID before making an API request.
            required: true
            schema:
              type: string
              example: ABCDE12345
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200` **OK**  
               
              Q&amp;A returned successfully.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: >-
                        Webinar ID in **long** format, represented as int64 data
                        type in JSON, also known as the webinar number.
                      format: int64
                      example: 95204914252
                    questions:
                      type: array
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: >-
                              Email address of the user. If the participant is
                              **not** part of the host's account, this returns an
                              empty string value, with some exceptions. See [Email
                              address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for details.
                            example: jchill@example.com
                          name:
                            type: string
                            description: >-
                              Name of the user. If `anonymous` option is enabled
                              for the Q&amp;A, the participant's information will
                              be kept anonymous and the value of `name` field will
                              be `Anonymous Attendee`.
                            example: Jill Chill
                          question_details:
                            type: array
                            items:
                              type: object
                              properties:
                                answer:
                                  type: string
                                  description: >-
                                    Answer submitted for the question. The value
                                    will be 'live answered' if this is a live
                                    answer.
                                  example: Good
                                question:
                                  type: string
                                  description: Question asked during the Q&amp;A.
                                  example: How are you?
                    start_time:
                      type: string
                      description: The webinar's start time.
                      format: date-time
                      example: '2022-03-26T06:44:14Z'
                    uuid:
                      type: string
                      description: Webinar UUID.
                      example: Bznyg8KZTdCVbQxvS/oZ7w==
          '401':
            description: |
              **HTTP Status Code:** `401` <br>
               Unauthorized 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Webinar ID is invalid or not end.<br>
              This webinar id does not belong to you:{webinarId}. <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:past_qa
            - webinar:read:past_qa:admin
    /users/{userId}/webinar_templates:
      get:
        tags:
          - Webinars
        summary: List webinar templates
        description: >-
          Display a list of a user's [webinar
          templates](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates).
          For user-level apps, pass [the `me` value](https://developers.zoom.us)
          instead of the `userId` parameter. When you schedule a webinar, save the
          settings for that webinar as a template for scheduling future webinars. 
          To use a template when scheduling a webinar, use the `id` value in this
          API response in the `template_id` field of the [**Create a
          webinar**](https://developers.zoom.us) API. **Prerequisites:** * A Pro
          or a higher account with the [Zoom Webinar
          plan](https://zoom.us/pricing/webinar).


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_templates`,`webinar:read:list_templates:admin`
        operationId: listWebinarTemplates
        parameters:
          - name: userId
            in: path
            description: >-
              The user's ID. To get a user's ID, use the [**List
              users**](https://developers.zoom.us) API. For user-level apps, pass
              the `me` value instead of the user ID value.
            required: true
            schema:
              type: string
              example: abcD3ojfdbjfg
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200` **OK**  List of existing templates
              returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    templates:
                      type: array
                      description: Information about the webinar templates.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: The webinar template's ID.
                            example: ull6574eur
                          name:
                            type: string
                            description: The webinar template's name.
                            example: Weekly Meeting Template
                          type:
                            type: integer
                            description: >-
                              The webinar template type.  `1`: Webinar template   
                              `2`: Admin webinar template
                            example: 1
                    total_records:
                      type: integer
                      description: The total number of records returned.
                      example: 1
          '400':
            description: >
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `200` <br>
               Cannot use webinar API, you need to subscribe webinar plan and then enable webinar for this user:{userId}.<br> <br>
              **Error Code:** `1001` <br>
               * User not exist: {userId}.
              * User {userId} does not exist or does not belong to this account.
              <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_templates
            - webinar:read:list_templates:admin
      post:
        tags:
          - Webinars
        summary: Create a webinar template
        description: >-
          Use this API to create a webinar template from an existing webinar. 




          **Scopes:** `webinar:write:admin`,`webinar:write`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: webinarTemplateCreate
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID retrievable from the [List
              users](https://developers.zoom.us) API.
            required: true
            schema:
              type: string
              example: 30R7kT7bTIKSNUFEuH_Qlg
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  webinar_id:
                    type: integer
                    description: The webinar ID in long (int64) format.
                    format: int64
                    example: 96172769962
                  name:
                    type: string
                    description: The webinar template's name.
                    example: Weekly Meeting Template
                  save_recurrence:
                    type: boolean
                    description: >-
                      If the field is set to true, the recurrence webinar template
                      will be saved as the scheduled webinar.
                    example: false
                    default: false
                  overwrite:
                    type: boolean
                    description: >-
                      Overwrite an existing webinar template if the template is
                      created from same existing webinar.
                    example: false
                    default: false
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`  
               
              Webinar template created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The webinar template's ID.
                      example: ull6574eur
                    name:
                      type: string
                      description: The webinar template's name.
                      example: Weekly Meeting Template
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `200` <br>

              Webinar plan is missing. You must subscribe to the webinar plan and
              enable webinars for this user in order to perform this action:
              {userId}.


              **Error Code:** `300` <br>

              You can only create up to 40 webinar templates.


              **Error Code:** `3000` <br>

              * Cannot access meeting info. 

              * Webinar template name already exists: {templateName}.


              **Error Code:** `3001` <br>

              Webinar does not exist: {webinarId}.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              * User does not exist. 
              * User {userId} does not exist or does not belong to this account.

        security:
          - openapi_oauth:
              - webinar:write:admin
              - webinar:write
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:write:admin
            - webinar:write
    /users/{userId}/webinars:
      get:
        tags:
          - Webinars
        summary: List webinars
        description: >-
          List all the webinars scheduled by or on behalf a webinar host. For
          user-level apps, pass [the `me`
          value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
          instead of the `userId` parameter. 

           Zoom users with a [webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. Webinars let a host broadcast a Zoom meeting to up to 10,000 attendees. 

          **Note** This API only returns a user's [unexpired
          webinars](https://support.zoom.us/hc/en-us/articles/201362373-Meeting-ID#h_c73f9b08-c1c0-4a1a-b538-e01ebb98e844). 

           **Prerequisites** 
          * A Pro or higher plan with the webinar add-on.


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_webinars`,`webinar:read:list_webinars:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: webinars
        parameters:
          - name: userId
            in: path
            description: >-
              The user's user ID or email address. For user-level apps, pass the
              `me` value.
            required: true
            schema:
              type: string
          - name: type
            in: query
            description: >-
              The type of webinar. 

              * `scheduled` - All valid previous (unexpired) webinars, live
              webinars, and upcoming scheduled webinars. 

              * `upcoming` - All upcoming webinars, including live webinars.
            required: false
            schema:
              type: string
              example: scheduled
              default: scheduled
              enum:
                - scheduled
                - upcoming
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: page_number
            in: query
            description: >-
              **Deprecated** We will no longer support this field in a future
              release. Instead, use the `next_page_token` for pagination.
            required: false
            schema:
              type: integer
              example: 1
              default: 1
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              List of webinar objects returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        Use the next page token to paginate through large result
                        sets. A next page token is returned whenever the set of
                        available results exceeds the current page size. This
                        token's expiration period is 15 minutes.
                      example: w7587w4eiyfsudgf
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_number:
                      type: integer
                      description: >-
                        **Deprecated** We will no longer support this field in a
                        future release. Instead, use the `next_page_token` for
                        pagination.
                      example: 1
                      deprecated: true
                      default: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 20
                    webinars:
                      type: array
                      description: List of webinar objects.
                      items:
                        type: object
                        properties:
                          agenda:
                            type: string
                            description: >-
                              Webinar description. The agenda length gets
                              truncated to 250 characters when you list all
                              webinars for a user. To view the complete agenda,
                              retrieve details for a single webinar, use the
                              [**Get a webinar**](https://developers.zoom.us) API.
                            example: Learn more about Zoom APIs
                          created_at:
                            type: string
                            description: The webinar's creation time.
                            format: date-time
                            example: '2021-07-01T22:00:00Z'
                          duration:
                            type: integer
                            description: The webinar's duration, in minutes.
                            example: 60
                          host_id:
                            type: string
                            description: The host's ID.
                            example: x1yCzABCDEfg23HiJKl4mN
                          id:
                            type: integer
                            description: The webinar ID.
                            format: int64
                            example: 1234567890
                          join_url:
                            type: string
                            description: The URL to join the webinar.
                            example: https://example.com/j/11111
                          start_time:
                            type: string
                            description: The webinar's start time.
                            format: date-time
                            example: '2021-07-13T21:00:00Z'
                          timezone:
                            type: string
                            description: >-
                              The webinar's
                              [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
                            example: America/Los_Angeles
                          topic:
                            type: string
                            description: The webinar's topic.
                            example: My Webinar
                          type:
                            type: integer
                            description: |-
                              The webinar type. 
                              * `5` - A webinar. 
                              * `6` - A recurring webinar without a fixed time. 
                              * `9` - A recurring webinar with a fixed time.
                            example: 9
                            default: 5
                            enum:
                              - 5
                              - 6
                              - 9
                          uuid:
                            type: string
                            description: >-
                              The webinar's universally unique identifier (UUID).
                              Each webinar instance generates a webinar UUID.
                            example: 4444AAAiAAAAAiAiAiiAii==
                          is_simulive:
                            type: boolean
                            description: Whether the webinar is `simulive`.
                            example: true
                  description: List of webinars.
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} not exist or not belong to this account. <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_webinars
            - webinar:read:list_webinars:admin
      post:
        tags:
          - Webinars
        summary: Create a webinar
        description: >-
          Schedule a webinar for a user who is a webinar host. For user-level
          apps, pass [the `me`
          value](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#the-me-keyword)
          instead of the `userId` parameter. 

           Webinars allow a host to broadcast a Zoom meeting to up to 10,000 attendees. 

          **Rate limit:**

          Up to a maximum of **100 requests per day**. The rate limit is applied
          to the `userId` of the **webinar host** used to make the request. 


          **Prerequisites:** 

          * A Pro or higher plan with a [Webinar plan](https://zoom.us/webinar)
          add-on.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:write:webinar`,`webinar:write:webinar:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarCreate
        parameters:
          - name: userId
            in: path
            description: >-
              The user ID or email address of the user. For user-level apps, pass
              the `me` value.
            required: true
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  agenda:
                    type: string
                    description: Webinar description.
                    example: My Webinar
                  duration:
                    type: integer
                    description: >-
                      Webinar duration in minutes. Used for scheduled webinars
                      only.
                    example: 60
                  password:
                    type: string
                    description: >-
                      Webinar passcode. Passcode may only contain the characters
                      [a-z A-Z 0-9 @ - _ * !]. Maximum of 10 characters.


                      If **Require a passcode when scheduling new meetings**
                      setting has been **enabled** **and**
                      [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
                      for the user, the passcode field will be autogenerated for
                      the Webinar in the response even if it is not provided in
                      the API request. 
                       

                      **Note:** If the account owner or the admin has configured
                      [minimum passcode requirement
                      settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
                      the passcode value provided here must meet those
                      requirements.   
                         
                       If the requirements are enabled, you can view those requirements by calling the [**Get account settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/ma#operation/accountSettings) API.
                    example: '123456'
                  recurrence:
                    title: Recurrence webinar
                    required:
                      - type
                    type: object
                    properties:
                      end_date_time:
                        type: string
                        description: >-
                          Select a date when the webinar will recur before it is
                          canceled. Should be in UTC time, such as
                          2017-11-25T12:00:00Z. Cannot be used with `end_times`.
                        format: date-time
                        example: '2022-04-02T15:59:00Z'
                      end_times:
                        maximum: 60
                        type: integer
                        description: >-
                          Select how many times the webinar will recur before it
                          is canceled. The maximum number of recurring is 60.
                          Cannot be used with `end_date_time`.
                        example: 7
                        default: 1
                      monthly_day:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          webinar of type** `3` to state which day in a month the
                          webinar should recur. The value range is from 1 to 31.


                          For instance, if you would like the webinar to recur on
                          23rd of each month, provide `23` as the value of this
                          field and `1` as the value of the `repeat_interval`
                          field. Instead, if you would like the webinar to recur
                          once every three months, on 23rd of the month, change
                          the value of the `repeat_interval` field to `3`.
                        example: 1
                      monthly_week:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          webinar of type** `3` to state the week of the month
                          when the webinar should recur. If you use this field,
                          **you must also use the `monthly_week_day` field to
                          state the day of the week when the webinar should
                          recur.**   
                           `-1` - Last week of the month.  
                           `1` - First week of the month.  
                           `2` - Second week of the month.  
                           `3` - Third week of the month.  
                           `4` - Fourth week of the month.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Last week
                            - First week
                            - Second week
                            - Third week
                            - Fourth week
                        enum:
                          - -1
                          - 1
                          - 2
                          - 3
                          - 4
                      monthly_week_day:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          webinar of type** `3` to state a specific day in a week
                          when the monthly webinar should recur. To use this
                          field, you must also use the `monthly_week` field.   
                           `1` - Sunday.  
                           `2` - Monday.  
                           `3` - Tuesday.  
                           `4` -  Wednesday.  
                           `5` - Thursday.  
                           `6` - Friday.  
                           `7` - Saturday.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Sunday
                            - Monday
                            - Tuesday
                            - Wednesday
                            - Thursday
                            - Friday
                            - Saturday
                        enum:
                          - 1
                          - 2
                          - 3
                          - 4
                          - 5
                          - 6
                          - 7
                      repeat_interval:
                        type: integer
                        description: >-
                          Define the interval when the webinar should recur. For
                          instance, if you would like to schedule a Webinar that
                          recurs every two months, you must set the value of this
                          field as `2` and the value of the `type` parameter as
                          `3`. 


                          For a daily webinar, the maximum interval you can set is
                          `90` days. For a weekly webinar, the maximum interval
                          that you can set is `12` weeks. For a monthly webinar,
                          the maximum interval that you can set is `3` months.
                        example: 1
                      type:
                        type: integer
                        description: |-
                          Recurrence webinar types.
                           `1` - Daily.  
                           `2` - Weekly.  
                           `3` - Monthly.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Daily
                            - Weekly
                            - Monthly
                        enum:
                          - 1
                          - 2
                          - 3
                      weekly_days:
                        type: string
                        description: >+
                          Use this field **only if you're scheduling a recurring
                          webinar of type** `2` to state which day(s) of the week
                          the webinar should repeat.

                          The value for this field could be a number between `1`
                          to `7` in string format. For instance, if the webinar
                          should recur on Sunday, provide `1` as the value of this
                          field.    
                             
                            **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the webinar should recur on Sundays and Tuesdays, provide `1,3` as the value of this field.

                            
                           `1`  - Sunday.   
                           `2` - Monday.  
                           `3` - Tuesday.  
                           `4` -  Wednesday.  
                           `5` -  Thursday.  
                           `6` - Friday.  
                           `7` - Saturday.

                        example: '1'
                    description: >-
                      Recurrence object. Use this object only for a webinar of
                      type `9`, a recurring webinar with fixed time. 
                  schedule_for:
                    type: string
                    description: >-
                      The email address or user ID of the user to schedule a
                      webinar for.
                    example: jchill@example.com
                  settings:
                    type: object
                    properties:
                      allow_multiple_devices:
                        type: boolean
                        description: Allow attendees to join from multiple devices.
                        example: true
                      alternative_hosts:
                        type: string
                        description: >-
                          Alternative host emails or IDs. Multiple values
                          separated by comma.
                        example: jchill@example.com;thill@example.com
                      alternative_host_update_polls:
                        type: boolean
                        description: >-
                          Whether the **Allow alternative hosts to add or edit
                          polls** feature is enabled. This requires Zoom version
                          5.8.0 or higher.
                        example: true
                      approval_type:
                        type: integer
                        description: >-
                          The default value is `2`. To enable registration
                          required, set the approval type to `0` or `1`.  Values
                          include:  
                           

                          `0` - Automatically approve.  
                           `1` - Manually approve.  
                           `2` - No registration required.
                        example: 0
                        extensions:
                          x-enum-descriptions:
                            - Automatically Approve
                            - Manually Approve
                            - No Registration Required
                        default: 2
                        enum:
                          - 0
                          - 1
                          - 2
                      attendees_and_panelists_reminder_email_notification:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              * `true`: Send reminder email to attendees and
                              panelists.


                              * `false`: Do not send reminder email to attendees
                              and panelists.
                            example: true
                          type:
                            type: integer
                            description: |-
                              `0` - No plan.  
                               `1` - Send 1 hour before webinar.  
                               `2` - Send 1 day before webinar.  
                               `3` - Send 1 hour and 1 day before webinar.  
                               `4` - Send 1 week before webinar.  
                               `5` - Send 1 hour and 1 week before webinar.  
                               `6` - Send 1 day and 1 week before webinar.  
                               `7` - Send 1 hour, 1 day and 1 week before webinar.
                            example: 0
                            extensions:
                              x-enum-descriptions:
                                - Send 1 hour before webinar.
                                - Send 1 day before webinar.
                                - Send 1 hour and 1 day before webinar.
                                - Send 1 week before webinar.
                                - Send 1 hour and 1 week before webinar.
                                - Send 1 day and 1 week before webinar.
                                - Send 1 hour, 1 day and 1 week before webinar.
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                              - 5
                              - 6
                              - 7
                        description: Send reminder email to attendees and panelists.
                      audio:
                        type: string
                        description: >-
                          Determine how participants can join the audio portion of
                          the meeting.(Not supported for simulive webinar.)
                        example: telephony
                        extensions:
                          x-enum-descriptions:
                            - Both Telephony and VoIP
                            - Telephony only
                            - VoIP only
                            - Third party audio conference
                        default: both
                        enum:
                          - both
                          - telephony
                          - voip
                          - thirdParty
                      audio_conference_info:
                        maxLength: 2048
                        type: string
                        description: Third party audio conference info.
                        example: test
                      authentication_domains:
                        type: string
                        description: >-
                          Meeting authentication domains. This option allows you
                          to specify the rule so that Zoom users whose email
                          address contains a certain domain can join the webinar.
                          You can either provide multiple comma-separated domains,
                          use a wildcard for listing domains, or use both methods.
                        example: example.com
                      authentication_option:
                        type: string
                        description: >-
                          Specify the authentication type for users to join a
                          Webinar with`meeting_authentication` setting set to
                          `true`. The value of this field can be retrieved from
                          the `id` field within `authentication_options` array in
                          the response of [**Get user
                          settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings)
                          API.
                        example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
                      auto_recording:
                        type: string
                        description: >-
                          Automatic recording. Not supported for simulive
                          webinar.   
                           `local` - Record on local.  
                           `cloud` -  Record on cloud.  
                           `none` - Disabled.
                        example: cloud
                        extensions:
                          x-enum-descriptions:
                            - Record to local device
                            - Record to cloud
                            - No Recording
                        default: none
                        enum:
                          - local
                          - cloud
                          - none
                      close_registration:
                        type: boolean
                        description: Close registration after event date.
                        example: true
                        deprecated: true
                      contact_email:
                        type: string
                        description: Contact email for registration
                        example: jchill@example.com
                      contact_name:
                        type: string
                        description: Contact name for registration
                        example: Jill Chill
                      email_language:
                        type: string
                        description: >-
                          Set the email language.

                          `en-US`,`de-DE`,`es-ES`,`fr-FR`,`id-ID`,`jp-JP`,`nl-NL`,`pl-PL`,`pt-PT`,`ru-RU`,`tr-TR`,`zh-CN`,
                          `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
                        example: en-US
                      enforce_login:
                        type: boolean
                        description: >-
                          Only signed-in users can join this meeting. 


                          **This field is deprecated and will not be supported in
                          future.**   
                             
                            Instead of this field, use the `meeting_authentication`, `authentication_option`, or `authentication_domains` fields to establish the authentication mechanism for this Webinar. 
                        example: true
                        deprecated: true
                      enforce_login_domains:
                        type: string
                        description: >-
                          Only signed-in users with specified domains can join
                          meetings.


                          **This field is deprecated and will not be supported in
                          future.**   
                           
                            Instead of this field, use the `authentication_domains` field for this webinar. 
                        example: example.com
                        deprecated: true
                      follow_up_absentees_email_notification:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              * `true` - Send follow-up email to absentees.


                              * `false` - Do not send follow-up email to
                              absentees.
                            example: true
                          type:
                            type: integer
                            description: |-
                              `0` - No plan.  
                               `1` - Send 1 days after the scheduled end date.  
                               `2` - Send 2 days after the scheduled end date.  
                               `3` - Send 3 days after the scheduled end date.  
                               `4` - Send 4 days after the scheduled end date.  
                               `5` - Send 5 days after the scheduled end date.  
                               `6` - Send 6 days after the scheduled end date.  
                               `7` - Send 7 days after the scheduled end date.
                            example: 0
                            extensions:
                              x-enum-descriptions:
                                - Send 1 days after the scheduled end date.
                                - Send 2 days after the scheduled end date.
                                - Send 3 days after the scheduled end date.
                                - Send 4 days after the scheduled end date.
                                - Send 5 days after the scheduled end date.
                                - Send 6 days after the scheduled end date.
                                - Send 7 days after the scheduled end date.
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                              - 5
                              - 6
                              - 7
                        description: Send follow-up email to absentees.
                      follow_up_attendees_email_notification:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: |-
                              * `true`: Send follow-up email to attendees.

                              * `false`: Do not send follow-up email to attendees.
                            example: true
                          type:
                            type: integer
                            description: |-
                              `0` - No plan.  
                               `1` - Send 1 day after the scheduled end date.  
                               `2` - Send 2 days after the scheduled end date.  
                               `3` - Send 3 days after the scheduled end date.  
                               `4` - Send 4 days after the scheduled end date.  
                               `5` - Send 5 days after the scheduled end date.  
                               `6` - Send 6 days after the scheduled end date.  
                               `7` - Send 7 days after the scheduled end date.
                            example: 0
                            extensions:
                              x-enum-descriptions:
                                - Send 1 day after the scheduled end date.
                                - Send 2 days after the scheduled end date.
                                - Send 3 days after the scheduled end date.
                                - Send 4 days after the scheduled end date.
                                - Send 5 days after the scheduled end date.
                                - Send 6 days after the scheduled end date.
                                - Send 7 days after the scheduled end date.
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                              - 5
                              - 6
                              - 7
                        description: Send follow-up email to attendees.
                      global_dial_in_countries:
                        type: array
                        description: List of global dial-in countries
                        items:
                          type: string
                          example: US
                      hd_video:
                        type: boolean
                        description: >-
                          Default to HD video.(Not supported for simulive
                          webinar.)
                        example: false
                        default: false
                      hd_video_for_attendees:
                        type: boolean
                        description: >-
                          Whether HD video for attendees is enabled. This value
                          defaults to `false`.(Not supported for simulive
                          webinar.)
                        example: false
                        default: false
                      host_video:
                        type: boolean
                        description: >-
                          Start video when host joins webinar.(Not supported for
                          simulive webinar.)
                        example: true
                      language_interpretation:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Enable [language
                              interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                              for the webinar.
                            example: true
                          interpreters:
                            type: array
                            description: >-
                              Information about the webinar's language
                              interpreters.
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The interpreter's email address.
                                  format: email
                                  example: interpreter@example.com
                                languages:
                                  type: string
                                  description: >-
                                    A comma-separated list of the interpreter's
                                    languages. The string must contain two
                                    [country
                                    IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                                    For example, if the interpreter will translate
                                    from English to Chinese, then this value will
                                    be `US,CN`.
                                  example: US,CN
                        description: >-
                          The webinar's [language interpretation
                          settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                          Make sure to add the language in the web portal in order
                          to use it in the API. See link for details. 


                          **Note:** This feature is only available for certain
                          Webinar add-on, Education, and Business and higher
                          plans. If this feature is not enabled on the host's
                          account, this setting will **not** be applied to the
                          webinar. This is not supported for simulive webinars.
                      sign_language_interpretation:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable [sign language
                              interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                              for the webinar.
                            example: true
                          interpreters:
                            maximum: 20
                            type: array
                            description: >-
                              Information about the webinar's sign language
                              interpreters.
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The interpreter's email address.
                                  format: email
                                  example: interpreter@example.com
                                sign_language:
                                  type: string
                                  description: |-
                                    The interpreter's sign language. 

                                     To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API response.
                                  example: American
                        description: >-
                          The webinar's [sign language interpretation
                          settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                          Make sure to add the language in the web portal in order
                          to use it in the API. See link for details. 


                          **Note:** If this feature is not enabled on the host's
                          account, this setting will **not** be applied to the
                          webinar.
                      panelist_authentication:
                        type: boolean
                        description: Require panelists to authenticate to join
                        example: true
                      meeting_authentication:
                        type: boolean
                        description: >-
                          Only
                          [authenticated](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars)
                          users can join meeting if the value of this field is set
                          to `true`.
                        example: true
                      add_watermark:
                        type: boolean
                        description: >-
                          Add watermark that identifies the viewing participant.
                          Not supported for simulive webinar.
                        example: true
                      add_audio_watermark:
                        type: boolean
                        description: >-
                          Add audio watermark that identifies the participants.
                          Not supported for simulive webinar.
                        example: true
                      on_demand:
                        type: boolean
                        description: >-
                          Make the webinar on-demand. Not supported for simulive
                          webinar.
                        example: false
                        default: false
                      panelists_invitation_email_notification:
                        type: boolean
                        description: >-
                          Send invitation email to panelists. If `false`, do not
                          send invitation email to panelists.
                        example: true
                      panelists_video:
                        type: boolean
                        description: >-
                          Start video when panelists join webinar. Not supported
                          for simulive webinar.
                        example: true
                      post_webinar_survey:
                        type: boolean
                        description: >-
                          Zoom will open a survey page in attendees' browsers
                          after leaving the webinar
                        example: true
                      practice_session:
                        type: boolean
                        description: Enable practice session.
                        example: false
                        default: false
                      question_and_answer:
                        type: object
                        properties:
                          allow_submit_questions:
                            type: boolean
                            description: |-
                              * `true`: Allow participants to submit questions.

                              * `false`: Do not allow submit questions.
                            example: true
                          allow_anonymous_questions:
                            type: boolean
                            description: >-
                              * `true` - Allow participants to send questions
                              without providing their name to the host, co-host,
                              and panelists..


                              * `false` - Do not allow anonymous questions.(Not
                              supported for simulive webinar.)
                            example: true
                          answer_questions:
                            type: string
                            description: >-
                              Indicate whether you want attendees to be able to
                              view answered questions only or view all questions.


                              * `only` - Attendees are able to view answered
                              questions only.


                              *  `all` - Attendees are able to view all questions
                              submitted in the Q&amp;A.
                            example: all
                            enum:
                              - only
                              - all
                          attendees_can_comment:
                            type: boolean
                            description: >-
                              * `true` - Attendees can answer questions or leave a
                              comment in the question thread.


                              * `false` - Attendees can not answer questions or
                              leave a comment in the question thread
                            example: true
                          attendees_can_upvote:
                            type: boolean
                            description: >-
                              * `true` - Attendees can click the thumbs up button
                              to bring popular questions to the top of the Q&amp;A
                              window.


                              * `false` - Attendees can not click the thumbs up
                              button on questions.
                            example: true
                          allow_auto_reply:
                            type: boolean
                            description: |-
                              If simulive webinar, 

                              * `true` - allow auto-reply to attendees. 

                              * `false` - don't allow auto-reply to the attendees.
                            example: true
                          auto_reply_text:
                            type: string
                            description: >-
                              If `allow_auto_reply` = true, the text to be
                              included in the automatic response. 
                            example: >-
                              Thank you for your question. We will get back to you
                              shortly.
                          enable:
                            type: boolean
                            description: >-
                              * `true` - Enable
                              [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                              for webinar.


                              * `false` - Disable Q&amp;A for webinar.
                            example: true
                        description: >-
                          [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                          for webinar.
                      registrants_email_notification:
                        type: boolean
                        description: >-
                          Send email notifications to registrants about approval,
                          cancellation, denial of the registration. The value of
                          this field must be set to true in order to use the
                          `registrants_confirmation_email` field.
                        example: true
                      registrants_restrict_number:
                        maximum: 20000
                        minimum: 0
                        type: integer
                        description: >-
                          Restrict number of registrants for a webinar. By
                          default, it is set to `0`. A `0` value means that the
                          restriction option is disabled. Provide a number higher
                          than 0 to restrict the webinar registrants by the that
                          number.
                        example: 100
                        default: 0
                      registration_type:
                        type: integer
                        description: >-
                          Registration types. Only used for recurring webinars
                          with a fixed time.  
                           `1` - Attendees register once and can attend any of the webinar sessions.  
                           `2` - Attendees need to register for each session in order to attend.  
                           `3` - Attendees register once and can choose one or more sessions to attend.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - >-
                              Attendees register once and can attend any of the
                              occurrences
                            - >-
                              Attendees need to register for each occurrence to
                              attend
                            - >-
                              Attendees register once and can choose one or more
                              occurrences to attend
                        default: 1
                        enum:
                          - 1
                          - 2
                          - 3
                      send_1080p_video_to_attendees:
                        type: boolean
                        description: >-
                          Whether to always send 1080p video to attendees. This
                          value defaults to `false`.(Not supported for simulive
                          webinar.)
                        example: false
                        default: false
                      show_share_button:
                        type: boolean
                        description: Show social share buttons on the registration page.
                        example: true
                      survey_url:
                        type: string
                        description: Survey URL for post webinar survey
                        example: https://example.com
                      enable_session_branding:
                        type: boolean
                        description: >-
                          Whether the **Webinar Session Branding** setting is
                          enabled. This setting lets hosts visually customize a
                          webinar by setting a session background. This also lets
                          hosts set Virtual Background and apply name tags to
                          hosts, alternative hosts, panelists, interpreters, and
                          speakers.
                        example: true
                    description: Create webinar settings.
                  start_time:
                    type: string
                    description: >-
                      Webinar start time. We support two formats for `start_time`
                      - local time and GMT.  
                        

                      To set time as GMT the format should be
                      `yyyy-MM-dd`T`HH:mm:ssZ`.


                      To set time using a specific timezone, use
                      `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone
                      [ID](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)
                      in the `timezone` field OR leave it blank and the timezone
                      set on your Zoom account will be used. You can also set the
                      time as UTC as the timezone field.


                      The `start_time` should only be used for scheduled and / or
                      recurring webinars with fixed time.
                    format: date-time
                    example: '2022-03-26T06:44:14Z'
                  template_id:
                    type: string
                    description: >-
                      The webinar template ID to schedule a webinar using a
                      [webinar
                      template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates)
                      or a [admin webinar
                      template](https://support.zoom.us/hc/en-us/articles/8137753618957-Configuring-admin-webinar-templates).
                      For a list of webinar templates, use the [**List webinar
                      templates**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/listWebinarTemplates)
                      API.
                    example: 5Cj3ceXoStO6TGOVvIOVPA==
                  timezone:
                    type: string
                    description: >-
                      The timezone to assign to the `start_time` value. This field
                      is only used for scheduled or recurring webinars with a
                      fixed time.


                      For a list of supported timezones and their formats, see our
                      [timezone
                      list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
                    example: America/Los_Angeles
                  topic:
                    type: string
                    description: Webinar topic.
                    example: My Webinar
                  tracking_fields:
                    type: array
                    description: Tracking fields.
                    items:
                      required:
                        - field
                      type: object
                      properties:
                        field:
                          type: string
                          description: Tracking fields type.
                          example: field1
                        value:
                          type: string
                          description: Tracking fields value.
                          example: value1
                  type:
                    type: integer
                    description: |-
                      Webinar types.
                       `5` - Webinar.  
                       `6` - Recurring webinar with no fixed time.  
                       `9` - Recurring webinar with a fixed time.
                    example: 5
                    extensions:
                      x-enum-descriptions:
                        - Webinar
                        - Recurring webinar with no fixed time
                        - Recurring webinar with fixed time
                    default: 5
                    enum:
                      - 5
                      - 6
                      - 9
                  is_simulive:
                    type: boolean
                    description: Whether to set the webinar simulive.
                    example: true
                  record_file_id:
                    type: string
                    description: The previously recorded file's ID for `simulive`.
                    example: f09340e1-cdc3-4eae-9a74-98f9777ed908
                description: Webinar object.
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`  
               
              Webinar created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    host_email:
                      type: string
                      description: Email address of the meeting host.
                      format: email
                      example: jchill@example.com
                    host_id:
                      type: string
                      description: ID of the user set as host of the webinar.
                      example: 30R7kT7bTIKSNUFEuH_Qlg
                    id:
                      type: integer
                      description: >-
                        Webinar ID in **long** format, represented as int64 data
                        type in JSON. Also known as the webinar number.
                      format: int64
                      example: 95204914252
                    registrants_confirmation_email:
                      type: boolean
                      description: >-
                        Specify whether or not registrants of this webinar should
                        receive confirmation emails.
                      example: true
                    template_id:
                      type: string
                      description: >-
                        Unique identifier of the webinar template. Use this field
                        only if you would like to [schedule the webinar using an
                        existing
                        template](https://support.zoom.us/hc/en-us/articles/115001079746-Webinar-Templates#schedule).
                        The value of this field can be retrieved from [**List
                        webinar
                        templates**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/listWebinarTemplates)
                        API.

                        You must provide the user ID of the host instead of the
                        email address in the `userId` path parameter in order to
                        use a template for scheduling a Webinar.
                      example: ull6574eur
                    uuid:
                      type: string
                      description: >-
                        Unique identifier of a webinar. Each webinar instance will
                        generate its own UUID. Ror example, after a webinar ends,
                        a new UUID will be generated for the next instance of the
                        Webinar). Once a Webinar ends, the value of the UUID for
                        the same webinar will be different from when it was
                        scheduled.
                      example: Bznyg8KZTdCVbQxvS/oZ7w==
                    agenda:
                      type: string
                      description: Webinar agenda.
                      example: My Webinar
                    created_at:
                      type: string
                      description: Create time.
                      format: date-time
                      example: '2022-03-26T07:18:32Z'
                    duration:
                      type: integer
                      description: Webinar duration.
                      example: 60
                    join_url:
                      type: string
                      description: >-
                        URL to join the webinar. Only share this URL with the
                        users who should be invited to the Webinar.
                      example: https://example.com/j/11111
                    occurrences:
                      type: array
                      description: Array of occurrence objects.
                      items:
                        type: object
                        properties:
                          duration:
                            type: integer
                            description: Duration.
                            example: 60
                          occurrence_id:
                            type: string
                            description: >-
                              Occurrence ID: Unique Identifier that identifies an
                              occurrence of a recurring webinar. [Recurring
                              webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                              can have a maximum of 50 occurrences.
                            example: '1648194360000'
                          start_time:
                            type: string
                            description: Start time.
                            format: date-time
                            example: '2022-03-25T07:46:00Z'
                          status:
                            type: string
                            description: |-
                              Occurrence status. 
                               `available` - Available occurrence.  
                               `deleted` -  Deleted occurrence.
                            example: available
                            enum:
                              - available
                              - deleted
                        description: >-
                          Occurrence object. This object is only returned for
                          recurring webinars.
                    password:
                      maxLength: 10
                      type: string
                      description: >-
                        Webinar passcode. 


                        If **Require a passcode when scheduling new meetings**
                        setting has been **enabled** **and**
                        [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
                        for the user, the passcode field will be autogenerated for
                        the Webinar in the response even if it is not provided in
                        the API request.   
                           
                         
                        **Note:** If the account owner or the admin has configured
                        [minimum passcode requirement
                        settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
                        the passcode value provided here must meet those
                        requirements.   
                           
                         If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API or the [**Get account settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/ma#operation/accountSettings) API.
                      example: '123456'
                    encrypted_passcode:
                      type: string
                      description: Encrypted passcode for third party endpoints (H323/SIP).
                      example: 8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1
                    h323_passcode:
                      type: string
                      description: H.323/SIP room system passcode.
                      example: '123456'
                    recurrence:
                      title: Recurrence webinar
                      required:
                        - type
                      type: object
                      properties:
                        end_date_time:
                          type: string
                          description: >-
                            Select a date when the webinar will recur before it is
                            canceled. Should be in UTC time, such as
                            2017-11-25T12:00:00Z. Can't be used with `end_times`.
                          format: date-time
                          example: '2022-04-02T15:59:00Z'
                        end_times:
                          maximum: 60
                          type: integer
                          description: >-
                            Select how many times the webinar will recur before it
                            is canceled. The maximum number of recurring is 60.
                            Can't be used with `end_date_time`.
                          example: 7
                          default: 1
                        monthly_day:
                          type: integer
                          description: >-
                            Use this field **only if you're scheduling a recurring
                            webinar of type** `3` to state which day in a month
                            the webinar should recur. The value range is from 1 to
                            31.


                            For instance, if you would like the webinar to recur
                            on 23rd of each month, provide `23` as the value of
                            this field and `1` as the value of the
                            `repeat_interval` field. Instead, if you would like
                            the webinar to recur once every three months, on 23rd
                            of the month, change the value of the
                            `repeat_interval` field to `3`.
                          example: 1
                        monthly_week:
                          type: integer
                          description: >-
                            Use this field **only if you're scheduling a recurring
                            webinar of type** `3` to state the week of the month
                            when the webinar should recur. If you use this field,
                            **you must also use the `monthly_week_day` field to
                            state the day of the week when the webinar should
                            recur.**   
                             `-1` - Last week of the month.  
                             `1` - First week of the month.  
                             `2` - Second week of the month.  
                             `3` - Third week of the month.  
                             `4` - Fourth week of the month.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Last week
                              - First week
                              - Second week
                              - Third week
                              - Fourth week
                          enum:
                            - -1
                            - 1
                            - 2
                            - 3
                            - 4
                        monthly_week_day:
                          type: integer
                          description: >-
                            Use this field **only if you're scheduling a recurring
                            webinar of type** `3` to state a specific day in a
                            week when the monthly webinar should recur. To use
                            this field, you must also use the `monthly_week`
                            field.   
                             `1` - Sunday.  
                             `2` - Monday.  
                             `3` - Tuesday.  
                             `4` -  Wednesday.  
                             `5` - Thursday.  
                             `6` - Friday.  
                             `7` - Saturday.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Sunday
                              - Monday
                              - Tuesday
                              - Wednesday
                              - Thursday
                              - Friday
                              - Saturday
                          enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                            - 6
                            - 7
                        repeat_interval:
                          type: integer
                          description: >-
                            Define the interval when the webinar should recur. For
                            instance, if you would like to schedule a Webinar that
                            recurs every two months, you must set the value of
                            this field as `2` and the value of the `type`
                            parameter as `3`. 


                            For a daily webinar, the maximum interval you can set
                            is `90` days. For a weekly webinar, the maximum
                            interval that you can set is `12` weeks. For a monthly
                            webinar, the maximum interval that you can set is `3`
                            months.
                          example: 1
                        type:
                          type: integer
                          description: |-
                            Recurrence webinar types. 
                             `1` - Daily.  
                             `2` - Weekly.  
                             `3` - Monthly.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Daily
                              - Weekly
                              - Monthly
                          enum:
                            - 1
                            - 2
                            - 3
                        weekly_days:
                          type: string
                          description: >+
                            Use this field **only if you're scheduling a recurring
                            webinar of type** `2` to state which day(s) of the
                            week the webinar should repeat.   
                              The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `1` as the value of this field.

                            **Note:** If you would like the webinar to occur on
                            multiple days of a week, you should provide comma
                            separated values for this field. For instance, if the
                            webinar should recur on Sundays and Tuesdays, provide
                            `1,3` as the value of this field.

                              
                             `1` - Sunday.   
                             `2` - Monday.  
                             `3` - Tuesday.  
                             `4` -  Wednesday.  
                             `5` -  Thursday.  
                             `6` - Friday.  
                             `7` - Saturday.

                          example: '1'
                      description: >-
                        Recurrence object. Use this object only for a webinar of
                        type `9` i.e., a recurring webinar with fixed time. 
                    settings:
                      type: object
                      properties:
                        allow_multiple_devices:
                          type: boolean
                          description: Allow attendees to join from multiple devices.
                          example: true
                        alternative_hosts:
                          type: string
                          description: >-
                            Alternative host emails or IDs. Multiple values
                            separated by comma.
                          example: jchill@example.com
                        alternative_host_update_polls:
                          type: boolean
                          description: >-
                            Whether the **Allow alternative hosts to add or edit
                            polls** feature is enabled. This requires Zoom version
                            5.8.0 or higher.
                          example: true
                        approval_type:
                          type: integer
                          description: |-
                            `0` - Automatically approve.  
                             `1` - Manually approve.  
                             `2` - No registration required.
                          example: 0
                          extensions:
                            x-enum-descriptions:
                              - Automatically Approve
                              - Manually Approve
                              - No Registration Required
                          default: 2
                          enum:
                            - 0
                            - 1
                            - 2
                        attendees_and_panelists_reminder_email_notification:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                * `true` - Send reminder email to attendees and
                                panelists.


                                * `false` - Do not send reminder email to
                                attendees and panelists.
                              example: true
                            type:
                              type: integer
                              description: |-
                                `0` - No plan.  
                                 `1` - Send 1 hour before webinar.  
                                 `2` - Send 1 day before webinar.  
                                 `3` - Send 1 hour and 1 day before webinar.  
                                 `4` - Send 1 week before webinar.  
                                 `5` - Send 1 hour and 1 week before webinar.  
                                 `6` - Send 1 day and 1 week before webinar.  
                                 `7` - Send 1 hour, 1 day and 1 week before webinar.
                              example: 0
                              extensions:
                                x-enum-descriptions:
                                  - Send 1 hour before webinar.
                                  - Send 1 day before webinar.
                                  - Send 1 hour and 1 day before webinar.
                                  - Send 1 week before webinar.
                                  - Send 1 hour and 1 week before webinar.
                                  - Send 1 day and 1 week before webinar.
                                  - Send 1 hour, 1 day and 1 week before webinar.
                              enum:
                                - 0
                                - 1
                                - 2
                                - 3
                                - 4
                                - 5
                                - 6
                                - 7
                          description: Send reminder email to attendees and panelists.
                        audio:
                          type: string
                          description: >-
                            Determine how participants can join the audio portion
                            of the webinar.
                          example: telephony
                          extensions:
                            x-enum-descriptions:
                              - Both Telephony and VoIP
                              - Telephony only
                              - VoIP only
                              - Third party audio conference
                          default: both
                          enum:
                            - both
                            - telephony
                            - voip
                            - thirdParty
                        audio_conference_info:
                          maxLength: 2048
                          type: string
                          description: Third party audio conference info.
                          example: test
                        authentication_domains:
                          type: string
                          description: >-
                            If user has configured [**Sign Into Zoom with
                            Specified
                            Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                            option, this will list the domains that are
                            authenticated.
                          example: example.com
                        authentication_name:
                          type: string
                          description: >-
                            Authentication name set in the [authentication
                            profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
                          example: Sign in to Zoom
                        authentication_option:
                          type: string
                          description: Webinar authentication option ID.
                          example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
                        auto_recording:
                          type: string
                          description: |-
                            Automatic recording. 
                             `local` - Record on local.  
                             `cloud` -  Record on cloud.  
                             `none` - Disabled.
                          example: cloud
                          extensions:
                            x-enum-descriptions:
                              - Record to local device
                              - Record to cloud
                              - No Recording
                          default: none
                          enum:
                            - local
                            - cloud
                            - none
                        close_registration:
                          type: boolean
                          description: Close registration after event date.
                          example: true
                          deprecated: true
                        contact_email:
                          type: string
                          description: Contact email for registration
                          example: jchill@example.com
                        contact_name:
                          type: string
                          description: Contact name for registration
                          example: Jill Chill
                        email_language:
                          type: string
                          description: >-
                            Set the email language to one of the following:

                            `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`,
                            `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
                          example: en-US
                        enforce_login:
                          type: boolean
                          description: >-
                            Only signed in users can join this meeting.


                            **This field is deprecated and will not be supported
                            in the future.**

                             As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
                          example: true
                          deprecated: true
                        enforce_login_domains:
                          type: string
                          description: >-
                            Only signed in users with specified domains can join
                            meetings.


                            **This field is deprecated and will not be supported
                            in the future.**

                             As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
                          example: example.com
                          deprecated: true
                        follow_up_absentees_email_notification:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                * `true`: Send follow-up email to absentees.


                                * `false`: Do not send follow-up email to
                                absentees.
                              example: true
                            type:
                              type: integer
                              description: |-
                                `0` - No plan.  
                                 `1` - Send 1 days after the scheduled end date.  
                                 `2` - Send 2 days after the scheduled end date.  
                                 `3` - Send 3 days after the scheduled end date.  
                                 `4` - Send 4 days after the scheduled end date.  
                                 `5` - Send 5 days after the scheduled end date.  
                                 `6` - Send 6 days after the scheduled end date.  
                                 `7` - Send 7 days after the scheduled end date.
                              example: 0
                              extensions:
                                x-enum-descriptions:
                                  - Send 1 days after the scheduled end date.
                                  - Send 2 days after the scheduled end date.
                                  - Send 3 days after the scheduled end date.
                                  - Send 4 days after the scheduled end date.
                                  - Send 5 days after the scheduled end date.
                                  - Send 6 days after the scheduled end date.
                                  - Send 7 days after the scheduled end date.
                              enum:
                                - 0
                                - 1
                                - 2
                                - 3
                                - 4
                                - 5
                                - 6
                                - 7
                          description: Send follow-up email to absentees.
                        follow_up_attendees_email_notification:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                * `true`: Send follow-up email to attendees.


                                * `false`: Do not send follow-up email to
                                attendees.
                              example: true
                            type:
                              type: integer
                              description: |-
                                `0` - No plan.  
                                 `1` - Send 1 day after the scheduled end date.  
                                 `2` - Send 2 days after the scheduled end date.  
                                 `3` - Send 3 days after the scheduled end date.  
                                 `4` - Send 4 days after the scheduled end date.  
                                 `5` - Send 5 days after the scheduled end date.  
                                 `6` - Send 6 days after the scheduled end date.  
                                 `7` - Send 7 days after the scheduled end date.
                              example: 0
                              extensions:
                                x-enum-descriptions:
                                  - Send 1 day after the scheduled end date.
                                  - Send 2 days after the scheduled end date.
                                  - Send 3 days after the scheduled end date.
                                  - Send 4 days after the scheduled end date.
                                  - Send 5 days after the scheduled end date.
                                  - Send 6 days after the scheduled end date.
                                  - Send 7 days after the scheduled end date.
                              enum:
                                - 0
                                - 1
                                - 2
                                - 3
                                - 4
                                - 5
                                - 6
                                - 7
                          description: Send follow-up email to attendees.
                        global_dial_in_countries:
                          type: array
                          description: List of global dial-in countries
                          items:
                            type: string
                            example: US
                        hd_video:
                          type: boolean
                          description: Default to HD video.
                          example: false
                          default: false
                        hd_video_for_attendees:
                          type: boolean
                          description: Whether HD video for attendees is enabled.
                          example: false
                          default: false
                        host_video:
                          type: boolean
                          description: Start video when host joins webinar.
                          example: true
                        language_interpretation:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Enable [language
                                interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                                for the webinar.
                              example: true
                            interpreters:
                              type: array
                              description: >-
                                Information about the webinar's language
                                interpreters.
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                                    description: The interpreter's email address.
                                    format: email
                                    example: interpreter@example.com
                                  languages:
                                    type: string
                                    description: >-
                                      A comma-separated list of the interpreter's
                                      languages. The string must contain two
                                      [country
                                      IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                                      For example, if the interpreter will
                                      translate from English to Chinese, then this
                                      value will be `US,CN`.
                                    example: US,CN
                          description: >-
                            The webinar's [language interpretation
                            settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                            Make sure to add the language in the web portal in
                            order to use it in the API. See link for details. 


                            **Note:** This feature is only available for certain
                            Webinar add-on, Education, and Business and higher
                            plans. If this feature is not enabled on the host's
                            account, this setting will **not** be applied to the
                            webinar.
                        sign_language_interpretation:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Whether to enable [sign language
                                interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                                for the webinar.
                              example: true
                            interpreters:
                              maximum: 20
                              type: array
                              description: >-
                                Information about the webinar's sign language
                                interpreters.
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                                    description: The interpreter's email address.
                                    format: email
                                    example: interpreter@example.com
                                  sign_language:
                                    type: string
                                    description: |-
                                      The interpreter's sign language. 

                                       To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userSettings) API response.
                                    example: American
                          description: >-
                            The webinar's [sign language interpretation
                            settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                            Make sure to add the language in the web portal in
                            order to use it in the API. See link for details. 


                            **Note:** If this feature is not enabled on the host's
                            account, this setting will **not** be applied to the
                            webinar.
                        panelist_authentication:
                          type: boolean
                          description: Require panelists to authenticate to join
                          example: true
                        meeting_authentication:
                          type: boolean
                          description: Only authenticated users can join Webinar.
                          example: true
                        add_watermark:
                          type: boolean
                          description: Add watermark that identifies the viewing participant.
                          example: true
                        add_audio_watermark:
                          type: boolean
                          description: Add audio watermark that identifies the participants.
                          example: true
                        notify_registrants:
                          type: boolean
                          description: >-
                            Send notification email to registrants when the host
                            updates a webinar.
                          example: true
                        on_demand:
                          type: boolean
                          description: Make the webinar on-demand
                          example: false
                          default: false
                        panelists_invitation_email_notification:
                          type: boolean
                          description: >-
                            Send invitation email to panelists. If `false`, do not
                            send invitation email to panelists.
                          example: true
                        panelists_video:
                          type: boolean
                          description: Start video when panelists join webinar.
                          example: true
                        post_webinar_survey:
                          type: boolean
                          description: >-
                            Zoom will open a survey page in attendees' browsers
                            after leaving the webinar
                          example: true
                        practice_session:
                          type: boolean
                          description: Enable practice session.
                          example: false
                          default: false
                        question_and_answer:
                          type: object
                          properties:
                            allow_submit_questions:
                              type: boolean
                              description: |-
                                * `true`: Allow participants to submit questions.

                                * `false`: Do not allow submit questions.
                              example: true
                            allow_anonymous_questions:
                              type: boolean
                              description: >-
                                * `true`: Allow participants to send questions
                                without providing their name to the host, co-host,
                                and panelists..


                                * `false`: Do not allow anonymous questions.
                              example: true
                            answer_questions:
                              type: string
                              description: >-
                                Indicate whether you want attendees to be able to
                                view answered questions only or view all
                                questions.


                                * `only`: Attendees are able to view answered
                                questions only.


                                *  `all`: Attendees are able to view all questions
                                submitted in the Q&amp;A.
                              example: all
                              enum:
                                - only
                                - all
                            attendees_can_comment:
                              type: boolean
                              description: >-
                                * `true`: Attendees can answer questions or leave
                                a comment in the question thread.


                                * `false`: Attendees can not answer questions or
                                leave a comment in the question thread
                              example: true
                            attendees_can_upvote:
                              type: boolean
                              description: >-
                                * `true`: Attendees can click the thumbs up button
                                to bring popular questions to the top of the
                                Q&amp;A window.


                                * `false`: Attendees can not click the thumbs up
                                button on questions.
                              example: true
                            allow_auto_reply:
                              type: boolean
                              description: >-
                                If simulive webinar, 


                                * `true`: allow auto-reply to attendees. 


                                * `false`: don't allow auto-reply to the
                                attendees.
                              example: true
                            auto_reply_text:
                              type: string
                              description: >-
                                If `allow_auto_reply` = true, the text to be
                                included in the automatic response. 
                              example: >-
                                Thank you for your question. We will get back to
                                you shortly.
                            enable:
                              type: boolean
                              description: >-
                                * `true`: Enable
                                [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                                for webinar.


                                * `false`: Disable Q&amp;A for webinar.
                              example: true
                          description: >-
                            [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                            for webinar.
                        registrants_confirmation_email:
                          type: boolean
                          description: Send confirmation email to registrants
                          example: true
                        registrants_email_notification:
                          type: boolean
                          description: >-
                            Send email notifications to registrants about
                            approval, cancellation, denial of the registration.
                            The value of this field must be set to true in order
                            to use the `registrants_confirmation_email` field.
                          example: true
                        registrants_restrict_number:
                          maximum: 20000
                          minimum: 0
                          type: integer
                          description: >-
                            Restrict number of registrants for a webinar. By
                            default, it is set to `0`. A `0` value means that the
                            restriction option is disabled. Provide a number
                            higher than 0 to restrict the webinar registrants by
                            the that number.
                          example: 100
                          default: 0
                        registration_type:
                          type: integer
                          description: >-
                            Registration types. Only used for recurring webinars
                            with a fixed time.  
                             `1` - Attendees register once and can attend any of the webinar sessions.  
                             `2` - Attendees need to register for each session in order to attend.  
                             `3` - Attendees register once and can choose one or more sessions to attend.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - >-
                                Attendees register once and can attend any of the
                                occurrences
                              - >-
                                Attendees need to register for each occurrence to
                                attend
                              - >-
                                Attendees register once and can choose one or more
                                occurrences to attend
                          default: 1
                          enum:
                            - 1
                            - 2
                            - 3
                        send_1080p_video_to_attendees:
                          type: boolean
                          description: Always send 1080p video to attendees.
                          example: false
                          default: false
                        show_share_button:
                          type: boolean
                          description: Show social share buttons on the registration page.
                          example: true
                        survey_url:
                          type: string
                          description: Survey url for post webinar survey
                          example: https://example.com
                        enable_session_branding:
                          type: boolean
                          description: >-
                            Whether the **Webinar Session Branding** setting is
                            enabled. This setting lets hosts visually customize a
                            webinar by setting a session background. This also
                            lets hosts use [Webinar Session
                            Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
                            to set the Virtual Background for and apply name tags
                            to hosts, alternative hosts, panelists, interpreters,
                            and speakers.
                          example: true
                      description: Webinar settings.
                    start_time:
                      type: string
                      description: Webinar start time in GMT/UTC.
                      format: date-time
                      example: '2022-03-26T07:18:32Z'
                    start_url:
                      type: string
                      description: "  \n The `start_url` of a webinar is a URL using which a host or an alternative host can start the webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the webinar. \n\nThe expiration time for the `start_url` field listed in the response of the [**Create a webinar**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/webinarCreate) API is two hours for all regular users. \n\t\nFor users created using the `custCreate` option via the [**Create users**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/userCreate) API, the expiration time of the `start_url` field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the `start_url` field programmatically after expiry, call the [**Get a webinar**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/webinar) API and refer to the value of the `start_url` field in the response.  \n   \n   \n "
                      example: https://example.com/s/11111
                    timezone:
                      type: string
                      description: Time zone to format start_time.
                      example: America/Los_Angeles
                    topic:
                      maxLength: 200
                      type: string
                      description: Webinar topic.
                      example: My Webinar
                    tracking_fields:
                      type: array
                      description: Tracking fields
                      items:
                        type: object
                        properties:
                          field:
                            type: string
                            description: Tracking fields type
                            example: field1
                          value:
                            type: string
                            description: Tracking fields value
                            example: value1
                    type:
                      type: integer
                      description: |-
                        Webinar Types:  
                         `5` - Webinar.  
                         `6` - Recurring webinar with no fixed time.  
                         `9` - Recurring webinar with a fixed time.
                      example: 5
                      extensions:
                        x-enum-descriptions:
                          - Webinar
                          - Recurring Webinar with no fixed time
                          - Recurring Webinar with fixed time
                      default: 5
                      enum:
                        - 5
                        - 6
                        - 9
                    is_simulive:
                      type: boolean
                      description: Whether the webinar is `simulive`.
                      example: true
                    record_file_id:
                      type: string
                      description: The previously recorded file's ID for `simulive`.
                      example: f09340e1-cdc3-4eae-9a74-98f9777ed908
                  description: Webinar object.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `200` <br>
               Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}. <br>
              **Error Code:** `300` <br>
               The value that you entered for the schedule_for field is invalid. Enter a valid value and try again. <br>
              **Error Code:** `300` <br>
               Can not schedule simulive webinar for others. <br>
              **Error Code:** `300` <br>
               Account hasn't enabled Simulive Webinar. <br>
              **Error Code:** `300` <br>
               Record file does not exist. <br>
              **Error Code:** `3000` <br>
               You cannot schedule a meeting for {userId}. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `1001` <br>
               User does not exist: {userId}. <br>
          '429':
            description: |
              **HTTP Status Code:** `429` <br>
               Too Many Requests  

               **Error Code:** `429` <br>
               A maximum of ({rateLimitNumber}) webinars can be created and updated for a single user in one day. <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:write:webinar
            - webinar:write:webinar:admin
    /webinars/{webinarId}:
      get:
        tags:
          - Webinars
        summary: Get a webinar
        description: >-
          Get details for a scheduled Zoom Webinar.
            
             
           
          **Prerequisites:**

          * Pro or higher plan with a Webinar add-on.


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:** `webinar:read:webinar`,`webinar:read:webinar:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinar
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID or universally unique ID (UUID).
            required: true
            schema:
              type: string
              example: '95204914252'
          - name: occurrence_id
            in: query
            description: >-
              Unique identifier for an occurrence of a recurring webinar.
              [Recurring
              webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
              can have a maximum of 50 occurrences. When you create a recurring
              Webinar using [**Create a webinar**](https://developers.zoom.us)
              API, you can retrieve the Occurrence ID from the response of the API
              call.
            required: false
            schema:
              type: string
              example: '1648538280000'
          - name: show_previous_occurrences
            in: query
            description: >-
              Set the value of this field to `true` if you would like to view
              Webinar details of all previous occurrences of a recurring Webinar.
            required: false
            schema:
              type: boolean
              example: true
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    host_email:
                      type: string
                      description: Email address of the meeting host.
                      format: email
                      example: jchill@example.com
                    host_id:
                      type: string
                      description: ID of the user set as host of webinar.
                      example: 30R7kT7bTIKSNUFEuH_Qlg
                    id:
                      type: integer
                      description: >-
                        Webinar ID in **long** format(represented as int64 data
                        type in JSON), also known as the webinar number.
                      format: int64
                      example: 97871060099
                    uuid:
                      type: string
                      description: >+
                        Unique webinar ID. Each webinar instance will generate its
                        own webinar UUID. After a webinar ends, a new UUID is
                        generated for the next instance of the webinar. Retrieve a
                        list of UUIDs from past webinar instances using the
                        [**List past webinar
                        instances**](https://developers.zoom.us) API. [Double
                        encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid)
                        your UUID when using it for API calls if the UUID begins
                        with a `/` or contains `//` in it.

                      example: m3WqMkvuRXyYqH+eKWhk9w==
                    agenda:
                      type: string
                      description: Webinar agenda.
                      example: My webinar
                    created_at:
                      type: string
                      description: Create time.
                      format: date-time
                      example: '2022-03-26T07:18:32Z'
                    duration:
                      type: integer
                      description: Webinar duration.
                      example: 60
                    join_url:
                      type: string
                      description: >-
                        URL to join the webinar. Only share this URL with the
                        users who should be invited to the webinar.
                      example: https://example.com/j/11111
                    occurrences:
                      type: array
                      description: Array of occurrence objects.
                      items:
                        type: object
                        properties:
                          duration:
                            type: integer
                            description: Duration.
                            example: 60
                          occurrence_id:
                            type: string
                            description: >-
                              Occurrence ID: Unique Identifier that identifies an
                              occurrence of a recurring webinar. [Recurring
                              webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                              can have a maximum of 50 occurrences.
                            example: '1648194360000'
                          start_time:
                            type: string
                            description: Start time.
                            format: date-time
                            example: '2022-03-25T07:46:00Z'
                          status:
                            type: string
                            description: |-
                              Occurrence status: 
                               `available` - Available occurrence.  
                               `deleted` -  Deleted occurrence.
                            example: available
                            enum:
                              - available
                              - deleted
                        description: >-
                          Occurrence object. This object is only returned for
                          recurring webinars.
                    password:
                      maxLength: 10
                      type: string
                      description: >-
                        Webinar passcode. 


                        If **Require a passcode when scheduling new meetings**
                        setting has been **enabled** **and**
                        [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
                        for the user, the passcode field will be autogenerated for
                        the Webinar in the response even if it is not provided in
                        the API request.   
                           
                         
                        **Note:** If the account owner or the admin has configured
                        [minimum passcode requirement
                        settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
                        the passcode value provided here must meet those
                        requirements.   
                           
                         If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](https://developers.zoom.us) API or the [**Get account settings**](https://developers.zoom.us) API.
                      example: '123456'
                    encrypted_passcode:
                      type: string
                      description: Encrypted passcode for third party endpoints (H323/SIP).
                      example: 8pEkRweVXPV3Ob2KJYgFTRlDtl1gSn.1
                    h323_passcode:
                      type: string
                      description: H.323/SIP room system passcode.
                      example: '123456'
                    recurrence:
                      title: Recurrence webinar
                      required:
                        - type
                      type: object
                      properties:
                        end_date_time:
                          type: string
                          description: >-
                            Select a date when the webinar will recur before it is
                            canceled. Should be in UTC time, such as
                            2017-11-25T12:00:00Z. (Cannot be used with
                            `end_times`.)
                          format: date-time
                          example: '2022-04-02T15:59:00Z'
                        end_times:
                          maximum: 60
                          type: integer
                          description: >-
                            Select how many times the webinar will recur before it
                            is canceled. The maximum number of recurring is 60.
                            Cannot be used with `end_date_time`.
                          example: 7
                          default: 1
                        monthly_day:
                          type: integer
                          description: >-
                            Use this field **only if you're scheduling a recurring
                            webinar of type** `3` to state which day in a month,
                            the webinar should recur. The value range is from 1 to
                            31.


                            For instance, if you would like the webinar to recur
                            on 23rd of each month, provide `23` as the value of
                            this field and `1` as the value of the
                            `repeat_interval` field. Instead, if you would like
                            the webinar to recur once every three months, on 23rd
                            of the month, change the value of the
                            `repeat_interval` field to `3`.
                          example: 1
                        monthly_week:
                          type: integer
                          description: >-
                            Use this field **only if you're scheduling a recurring
                            webinar of type** `3` to state the week of the month
                            when the webinar should recur. If you use this field,
                            **you must also use the `monthly_week_day` field to
                            state the day of the week when the webinar should
                            recur.**   
                             `-1` - Last week of the month.  
                             `1` - First week of the month.  
                             `2` - Second week of the month.  
                             `3` - Third week of the month.  
                             `4` - Fourth week of the month.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Last week
                              - First week
                              - Second week
                              - Third week
                              - Fourth week
                          enum:
                            - -1
                            - 1
                            - 2
                            - 3
                            - 4
                        monthly_week_day:
                          type: integer
                          description: >-
                            Use this field **only if you're scheduling a recurring
                            webinar of type** `3` to state a specific day in a
                            week when the monthly webinar should recur. To use
                            this field, you must also use the `monthly_week`
                            field.   
                             `1` - Sunday.  
                             `2` - Monday.  
                             `3` - Tuesday.  
                             `4` -  Wednesday.  
                             `5` - Thursday.  
                             `6` - Friday.  
                             `7` - Saturday.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Sunday
                              - Monday
                              - Tuesday
                              - Wednesday
                              - Thursday
                              - Friday
                              - Saturday
                          enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                            - 6
                            - 7
                        repeat_interval:
                          type: integer
                          description: >-
                            Define the interval when the webinar should recur. For
                            instance, to schedule a webinar that recurs every two
                            months, you must set the value of this field as `2`
                            and the value of the `type` parameter as `3`. 


                            For a daily webinar, the maximum interval you can set
                            is `90` days. For a weekly webinar, the maximum
                            interval that you can set is `12` weeks. For a monthly
                            webinar, the maximum interval that you can set is `3`
                            months.
                          example: 1
                        type:
                          type: integer
                          description: |-
                            Recurrence webinar types.  
                             `1` - Daily.  
                             `2` - Weekly.  
                             `3` - Monthly.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - Daily
                              - Weekly
                              - Monthly
                          enum:
                            - 1
                            - 2
                            - 3
                        weekly_days:
                          type: string
                          description: >+
                            Use this field **only if you're scheduling a recurring
                            webinar of type** `2` to state which day(s) of the
                            week the webinar should repeat.   
                              The value for this field could be a number between `1` to `7` in string format. For instance, if the Webinar should recur on Sunday, provide `1` as the value of this field.    
                               
                              **Note:** If you would like the webinar to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the Webinar should recur on Sundays and Tuesdays provide `1,3` as the value of this field.

                              
                             `1`  - Sunday.   
                             `2` - Monday.  
                             `3` - Tuesday.  
                             `4` -  Wednesday.  
                             `5` -  Thursday.  
                             `6` - Friday.  
                             `7` - Saturday.

                          example: '1'
                      description: >-
                        Recurrence object. Use this object only for a webinar of
                        type `9` i.e., a recurring webinar with fixed time. 
                    settings:
                      type: object
                      properties:
                        allow_multiple_devices:
                          type: boolean
                          description: Allow attendees to join from multiple devices.
                          example: true
                        alternative_hosts:
                          type: string
                          description: >-
                            Alternative host emails or IDs. Multiple values
                            separated by comma.
                          example: jchill@example.com
                        alternative_host_update_polls:
                          type: boolean
                          description: >-
                            Whether the **Allow alternative hosts to add or edit
                            polls** feature is enabled. This requires Zoom version
                            5.8.0 or higher.
                          example: true
                        approval_type:
                          type: integer
                          description: |-
                            `0` - Automatically approve.  
                             `1` - Manually approve.  
                             `2` - No registration required.
                          example: 0
                          extensions:
                            x-enum-descriptions:
                              - Automatically Approve
                              - Manually Approve
                              - No Registration Required
                          default: 2
                          enum:
                            - 0
                            - 1
                            - 2
                        attendees_and_panelists_reminder_email_notification:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                * `true` - Send reminder email to attendees and
                                panelists.


                                * `false` - Do not send reminder email to
                                attendees and panelists.
                              example: true
                            type:
                              type: integer
                              description: |-
                                `0` - No plan.  
                                 `1` - Send 1 hour before webinar.  
                                 `2` - Send 1 day before webinar.  
                                 `3` - Send 1 hour and 1 day before webinar.  
                                 `4` - Send 1 week before webinar.  
                                 `5` - Send 1 hour and 1 week before webinar.  
                                 `6` - Send 1 day and 1 week before webinar.  
                                 `7` - Send 1 hour, 1 day and 1 week before webinar.
                              example: 0
                              extensions:
                                x-enum-descriptions:
                                  - Send 1 hour before webinar.
                                  - Send 1 day before webinar.
                                  - Send 1 hour and 1 day before webinar.
                                  - Send 1 week before webinar.
                                  - Send 1 hour and 1 week before webinar.
                                  - Send 1 day and 1 week before webinar.
                                  - Send 1 hour, 1 day and 1 week before webinar.
                              enum:
                                - 0
                                - 1
                                - 2
                                - 3
                                - 4
                                - 5
                                - 6
                                - 7
                          description: Send reminder email to attendees and panelists.
                        audio:
                          type: string
                          description: >-
                            Determine how participants can join the audio portion
                            of the webinar.
                          example: telephony
                          extensions:
                            x-enum-descriptions:
                              - Both Telephony and VoIP
                              - Telephony only
                              - VoIP only
                              - Third party audio conference
                          default: both
                          enum:
                            - both
                            - telephony
                            - voip
                            - thirdParty
                        audio_conference_info:
                          maxLength: 2048
                          type: string
                          description: Third party audio conference info.
                          example: test
                        authentication_domains:
                          type: string
                          description: >-
                            If user has configured [**Sign Into Zoom with
                            Specified
                            Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                            option, this will list the domains that are
                            authenticated.
                          example: example.com
                        authentication_name:
                          type: string
                          description: >-
                            Authentication name set in the [authentication
                            profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
                          example: Sign in to Zoom
                        authentication_option:
                          type: string
                          description: Webinar authentication option id.
                          example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
                        auto_recording:
                          type: string
                          description: |-
                            Automatic recording. 
                             `local` - Record on local.  
                             `cloud` -  Record on cloud.  
                             `none` - Disabled.
                          example: cloud
                          extensions:
                            x-enum-descriptions:
                              - Record to local device
                              - Record to cloud
                              - No Recording
                          default: none
                          enum:
                            - local
                            - cloud
                            - none
                        close_registration:
                          type: boolean
                          description: Close registration after event date.
                          example: true
                          deprecated: true
                        contact_email:
                          type: string
                          description: Contact email for registration.
                          example: jchill@example.com
                        contact_name:
                          type: string
                          description: Contact name for registration.
                          example: Jill Chill
                        email_language:
                          type: string
                          description: >-
                            Set the email language. The only options are

                            `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`,
                            `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
                          example: en-US
                        enforce_login:
                          type: boolean
                          description: >-
                            Only signed in users can join this meeting.


                            **This field is deprecated and will not be supported
                            in the future.**    

                             As an alternative, use the `meeting_authentication`, `authentication_option` and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
                          example: true
                          deprecated: true
                        enforce_login_domains:
                          type: string
                          description: >-
                            Only signed in users with specified domains can join
                            meetings.


                            **This field is deprecated and will not be supported
                            in the future.**    

                             As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the Webinar.
                          example: example.com
                          deprecated: true
                        follow_up_absentees_email_notification:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                * `true` - Send follow-up email to absentees.


                                * `false` - Do not send follow-up email to
                                absentees.
                              example: true
                            type:
                              type: integer
                              description: |-
                                `0` - No plan.  
                                 `1` - Send 1 days after the scheduled end date.  
                                 `2` - Send 2 days after the scheduled end date.  
                                 `3` - Send 3 days after the scheduled end date.  
                                 `4` - Send 4 days after the scheduled end date.  
                                 `5` - Send 5 days after the scheduled end date.  
                                 `6` - Send 6 days after the scheduled end date.  
                                 `7` - Send 7 days after the scheduled end date.
                              example: 0
                              extensions:
                                x-enum-descriptions:
                                  - Send 1 days after the scheduled end date.
                                  - Send 2 days after the scheduled end date.
                                  - Send 3 days after the scheduled end date.
                                  - Send 4 days after the scheduled end date.
                                  - Send 5 days after the scheduled end date.
                                  - Send 6 days after the scheduled end date.
                                  - Send 7 days after the scheduled end date.
                              enum:
                                - 0
                                - 1
                                - 2
                                - 3
                                - 4
                                - 5
                                - 6
                                - 7
                          description: Send follow-up email to absentees.
                        follow_up_attendees_email_notification:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                * `true` - Send follow-up email to attendees.


                                * `false` - Do not send follow-up email to
                                attendees.
                              example: true
                            type:
                              type: integer
                              description: |-
                                `0` - No plan.  
                                 `1` - Send 1 day after the scheduled end date.  
                                 `2` - Send 2 days after the scheduled end date.  
                                 `3` - Send 3 days after the scheduled end date.  
                                 `4` - Send 4 days after the scheduled end date.  
                                 `5` - Send 5 days after the scheduled end date.  
                                 `6` - Send 6 days after the scheduled end date.  
                                 `7` - Send 7 days after the scheduled end date.
                              example: 0
                              extensions:
                                x-enum-descriptions:
                                  - Send 1 day after the scheduled end date.
                                  - Send 2 days after the scheduled end date.
                                  - Send 3 days after the scheduled end date.
                                  - Send 4 days after the scheduled end date.
                                  - Send 5 days after the scheduled end date.
                                  - Send 6 days after the scheduled end date.
                                  - Send 7 days after the scheduled end date.
                              enum:
                                - 0
                                - 1
                                - 2
                                - 3
                                - 4
                                - 5
                                - 6
                                - 7
                          description: Send follow-up email to attendees.
                        global_dial_in_countries:
                          type: array
                          description: List of global dial-in countries
                          items:
                            type: string
                            example: US
                        hd_video:
                          type: boolean
                          description: Default to HD video.
                          example: false
                          default: false
                        hd_video_for_attendees:
                          type: boolean
                          description: Whether HD video for attendees is enabled.
                          example: false
                          default: false
                        host_video:
                          type: boolean
                          description: Start video when host joins webinar.
                          example: true
                        language_interpretation:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Enable [language
                                interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                                for the webinar.
                              example: true
                            interpreters:
                              type: array
                              description: >-
                                Information about the webinar's language
                                interpreters.
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                                    description: The interpreter's email address.
                                    format: email
                                    example: interpreter@example.com
                                  languages:
                                    type: string
                                    description: >-
                                      A comma-separated list of the interpreter's
                                      languages. The string must contain two
                                      [country
                                      IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                                      For example, if the interpreter will
                                      translate from English to Chinese, then this
                                      value will be `US,CN`.
                                    example: US,CN
                          description: >-
                            The webinar's [language interpretation
                            settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                            Make sure to add the language in the web portal in
                            order to use it in the API. See link for details. 


                            **Note:** This feature is only available for certain
                            Webinar add-on, Education, and Business and higher
                            plans. If this feature is not enabled on the host's
                            account, this setting will **not** be applied to the
                            webinar.
                        sign_language_interpretation:
                          type: object
                          properties:
                            enable:
                              type: boolean
                              description: >-
                                Whether to enable [sign language
                                interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                                for the webinar.
                              example: true
                            interpreters:
                              maximum: 20
                              type: array
                              description: >-
                                Information about the webinar's sign language
                                interpreters.
                              items:
                                type: object
                                properties:
                                  email:
                                    type: string
                                    description: The interpreter's email address.
                                    format: email
                                    example: interpreter@example.com
                                  sign_language:
                                    type: string
                                    description: |-
                                      The interpreter's sign language. 

                                       To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                                    example: American
                          description: >-
                            The webinar's [sign language interpretation
                            settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                            Make sure to add the language in the web portal in
                            order to use it in the API. See link for details. 


                            **Note:** If this feature is not enabled on the host's
                            account, this setting will **not** be applied to the
                            webinar.
                        panelist_authentication:
                          type: boolean
                          description: Require panelists to authenticate to join.
                          example: true
                        meeting_authentication:
                          type: boolean
                          description: Only authenticated users can join the webinar.
                          example: true
                        add_watermark:
                          type: boolean
                          description: Add watermark that identifies the viewing participant.
                          example: true
                        add_audio_watermark:
                          type: boolean
                          description: Add audio watermark that identifies the participants.
                          example: true
                        notify_registrants:
                          type: boolean
                          description: >-
                            Send notification email to registrants when the host
                            updates a webinar.
                          example: true
                        on_demand:
                          type: boolean
                          description: Make the webinar on-demand.
                          example: false
                          default: false
                        panelists_invitation_email_notification:
                          type: boolean
                          description: >-
                            Send invitation email to panelists. If `false`, do not
                            send invitation email to panelists.
                          example: true
                        panelists_video:
                          type: boolean
                          description: Start video when panelists join webinar.
                          example: true
                        post_webinar_survey:
                          type: boolean
                          description: >-
                            Zoom will open a survey page in attendees' browsers
                            after leaving the webinar.
                          example: true
                        practice_session:
                          type: boolean
                          description: Enable practice session.
                          example: false
                          default: false
                        question_and_answer:
                          type: object
                          properties:
                            allow_submit_questions:
                              type: boolean
                              description: |-
                                * `true` - Allow participants to submit questions.

                                * `false` - Do not allow submit questions.
                              example: true
                            allow_anonymous_questions:
                              type: boolean
                              description: >-
                                * `true` - Allow participants to send questions
                                without providing their name to the host, co-host,
                                and panelists.


                                * `false` - Do not allow anonymous questions.
                              example: true
                            answer_questions:
                              type: string
                              description: >-
                                Indicate whether you want attendees to be able to
                                view answered questions only or view all
                                questions.


                                * `only` - Attendees are able to view answered
                                questions only.


                                *  `all` - Attendees are able to view all
                                questions submitted in the Q&amp;A.
                              example: all
                              enum:
                                - only
                                - all
                            attendees_can_comment:
                              type: boolean
                              description: >-
                                * `true` - Attendees can answer questions or leave
                                a comment in the question thread.


                                * `false` - Attendees can not answer questions or
                                leave a comment in the question thread
                              example: true
                            attendees_can_upvote:
                              type: boolean
                              description: >-
                                * `true` - Attendees can click the thumbs up
                                button to bring popular questions to the top of
                                the Q&amp;A window.


                                * `false` - Attendees can not click the thumbs up
                                button on questions.
                              example: true
                            allow_auto_reply:
                              type: boolean
                              description: >-
                                If simulive webinar, 


                                * `true` - allow auto-reply to attendees. 


                                * `false` - don't allow auto-reply to the
                                attendees.
                              example: true
                            auto_reply_text:
                              type: string
                              description: >-
                                If `allow_auto_reply` = true, the text to be
                                included in the automatic response. 
                              example: >-
                                Thank you for your question. We will get back to
                                you shortly.
                            enable:
                              type: boolean
                              description: >-
                                * `true`: Enable
                                [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                                for webinar.


                                * `false`: Disable Q&amp;A for webinar.
                              example: true
                          description: >-
                            [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                            for webinar.
                        registrants_confirmation_email:
                          type: boolean
                          description: Send confirmation email to registrants
                          example: true
                        registrants_email_notification:
                          type: boolean
                          description: >-
                            Send email notifications to registrants about
                            approval, cancellation, denial of the registration.
                            The value of this field must be set to true in order
                            to use the `registrants_confirmation_email` field.
                          example: true
                        registrants_restrict_number:
                          maximum: 20000
                          minimum: 0
                          type: integer
                          description: >-
                            Restrict number of registrants for a webinar. By
                            default, it is set to `0`. A `0` value means that the
                            restriction option is disabled. Provide a number
                            higher than 0 to restrict the webinar registrants by
                            the that number.
                          example: 100
                          default: 0
                        registration_type:
                          type: integer
                          description: >-
                            Registration types. Only used for recurring webinars
                            with a fixed time.  
                             `1` - Attendees register once and can attend any of the webinar sessions.  
                             `2` - Attendees need to register for each session in order to attend.  
                             `3` - Attendees register once and can choose one or more sessions to attend.
                          example: 1
                          extensions:
                            x-enum-descriptions:
                              - >-
                                Attendees register once and can attend any of the
                                occurrences
                              - >-
                                Attendees need to register for each occurrence to
                                attend
                              - >-
                                Attendees register once and can choose one or more
                                occurrences to attend
                          default: 1
                          enum:
                            - 1
                            - 2
                            - 3
                        send_1080p_video_to_attendees:
                          type: boolean
                          description: Always send 1080p video to attendees.
                          example: false
                          default: false
                        show_share_button:
                          type: boolean
                          description: Show social share buttons on the registration page.
                          example: true
                        survey_url:
                          type: string
                          description: Survey URL for post webinar survey.
                          example: https://example.com
                        enable_session_branding:
                          type: boolean
                          description: >-
                            Whether the **Webinar Session Branding** setting is
                            enabled. This setting lets hosts visually customize a
                            webinar by setting a session background. This also
                            lets hosts use [webinar session
                            branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
                            to set the Virtual Background for and apply name tags
                            to hosts, alternative hosts, panelists, interpreters,
                            and speakers.
                          example: true
                      description: Webinar settings.
                    start_time:
                      type: string
                      description: Webinar start time in GMT/UTC.
                      format: date-time
                      example: '2022-03-26T07:18:32Z'
                    start_url:
                      type: string
                      description: "  \n The `start_url` of a webinar is a URL using which a host or an alternative host can start the webinar. This URL should only be used by the host of the meeting and should not be shared with anyone other than the host of the webinar. \n\nThe expiration time for the `start_url` field listed in the response of the [**Create a webinar**](https://developers.zoom.us) API is two hours for all regular users. \n\t\nFor users created using the `custCreate` option via the [**Create users**](https://developers.zoom.us) API, the expiration time of the `start_url` field is 90 days.\n\t\nFor security reasons, to retrieve the latest value for the `start_url` field programmatically (after expiry), you must call the [**Get a webinar**](https://developers.zoom.us) API and refer to the value of the `start_url` field in the response.\n\n\n "
                      example: https://example.com/s/11111
                    timezone:
                      type: string
                      description: Time zone to format `start_time`.
                      example: America/Los_Angeles
                    topic:
                      maxLength: 200
                      type: string
                      description: Webinar topic.
                      example: My Webinar
                    tracking_fields:
                      type: array
                      description: Tracking fields.
                      items:
                        type: object
                        properties:
                          field:
                            type: string
                            description: Tracking fields type.
                            example: field1
                          value:
                            type: string
                            description: Tracking fields value.
                            example: value1
                    type:
                      type: integer
                      description: |-
                        Webinar types. 
                         `5` - Webinar.  
                         `6` - Recurring webinar with no fixed time.  
                         `9` - Recurring webinar with a fixed time.
                      example: 5
                      extensions:
                        x-enum-descriptions:
                          - Webinar
                          - Recurring Webinar with no fixed time
                          - Recurring Webinar with fixed time
                      default: 5
                      enum:
                        - 5
                        - 6
                        - 9
                    is_simulive:
                      type: boolean
                      description: Whether the webinar is `simulive`.
                      example: true
                    record_file_id:
                      type: string
                      description: The previously recorded file's ID for `simulive`.
                      example: f09340e1-cdc3-4eae-9a74-98f9777ed908
                  description: Webinar object.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request  

               **Error Code:** `300` <br>
               Invalid webinar ID. <br>
              **Error Code:** `200` <br>
               Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user to perform this action. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found  

               **Error Code:** `3001` <br>
               Webinar does not exist: {webinarId}. <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:webinar
            - webinar:read:webinar:admin
      delete:
        tags:
          - Webinars
        summary: Delete a webinar
        description: >-
          Delete a webinar. 



          **Prerequisites:**  
           
          * Pro or higher plan with the webinar add-on.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:delete:webinar`,`webinar:delete:webinar:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarDelete
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: occurrence_id
            in: query
            description: The meeting or webinar occurrence ID.
            required: false
            schema:
              type: string
              example: '1648194360000'
          - name: cancel_webinar_reminder
            in: query
            description: >-
              `true` - Notify panelists and registrants about the webinar
              cancellation via email. 


              `false` - Do not send any email notification to webinar registrants
              and panelists. 


              The default value of this field is `false`.
            required: false
            schema:
              type: boolean
              example: true
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204` <br>
               Webinar deleted.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
              **Error Code:** `3002` <br>
               Sorry, you cannot delete this webinar since it is in progress.<br> <br>
              **Error Code:** `3003` <br>
               You are not the webinar host.<br> <br>
              **Error Code:** `3007` <br>
               Sorry, you cannot delete this webinar since it has ended.<br> <br>
              **Error Code:** `3018` <br>
               Not allowed to delete PMI.<br> <br>
              **Error Code:** `3037` <br>
               Not allowed to delete PAC.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account.<br> <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:delete:webinar
            - webinar:delete:webinar:admin
      patch:
        tags:
          - Webinars
        summary: Update a webinar
        description: >-
          Make updates to a scheduled webinar. 


          **100 requests per day**. The rate limit is applied to the `userId` of
          the **webinar host** used to make the request. 


          **Prerequisites** 

          * A Pro or higher plan with a webinar add-on.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:update:webinar`,`webinar:update:webinar:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarUpdate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: occurrence_id
            in: query
            description: >-
              Webinar occurrence ID. Support change of agenda, start time,
              duration, and settings `host_video`, `panelist_video`, `hd_video,
              watermark`, `auto_recording`.
            required: false
            schema:
              type: string
              example: '1648538280000'
        requestBody:
          description: Webinar.
          content:
            application/json:
              schema:
                type: object
                properties:
                  agenda:
                    type: string
                    description: Webinar description.
                    example: My Webinar
                  duration:
                    type: integer
                    description: >-
                      Webinar duration, in minutes. Used for scheduled webinar
                      only.
                    example: 60
                  password:
                    maxLength: 10
                    type: string
                    description: >-
                      [Webinar
                      passcode](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords).
                      By default, passcode may only contain the following
                      characters: [a-z A-Z 0-9 @ - _ * !] and can have a maximum
                      of 10 characters.


                      **Note:** If the account owner or the admin has configured
                      [minimum passcode requirement
                      settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604),
                      the passcode value provided here must meet those
                      requirements.   
                         
                       If the requirements are enabled, you can view those requirements by calling either the [**Get user settings**](https://developers.zoom.us) API or the [**Get account settings**](https://developers.zoom.us) API. 

                      If **Require a passcode when scheduling new meetings**
                      setting has been **enabled** **and**
                      [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked)
                      for the user, the passcode field will be autogenerated for
                      the webinar in the response even if it is not provided in
                      the API request.
                    example: '123456'
                  schedule_for:
                    type: string
                    description: >-
                      The user's email address or `userId` to schedule a webinar
                      for.
                    example: jchill@example.com
                  recurrence:
                    required:
                      - type
                    type: object
                    properties:
                      end_date_time:
                        type: string
                        description: >-
                          Select the final date when the meeting will recur before
                          it is canceled. Should be in UTC time, such as
                          2017-11-25T12:00:00Z. Cannot be used with `end_times`.
                        format: date-time
                        example: '2022-04-02T15:59:00Z'
                      end_times:
                        maximum: 60
                        type: integer
                        description: >-
                          Select how many times the webinar will recur before it
                          is canceled. The maximum number of recurring is 60.
                          Cannot be used with `end_date_time`.
                        example: 7
                        default: 1
                      monthly_day:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          meeting of type** `3` to state which day in a month, the
                          meeting should recur. The value range is from 1 to 31.


                          If you would like the meeting to recur on 23rd of each
                          month, provide `23` as the value of this field and `1`
                          as the value of the `repeat_interval` field. If you
                          would like the meeting to recur every three months, on
                          23rd of the month, change the value of the
                          `repeat_interval` field to `3`.
                        example: 1
                        default: 1
                      monthly_week:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          meeting of type** `3` to state the week of the month
                          when the meeting should recur. If you use this field,
                          **you must also use the `monthly_week_day` field to
                          state the day of the week when the meeting should
                          recur.**   
                           `-1` - Last week of the month.  
                           `1` - First week of the month.  
                           `2` - Second week of the month.  
                           `3` - Third week of the month.  
                           `4` - Fourth week of the month.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Last week
                            - First week
                            - Second week
                            - Third week
                            - Fourth week
                        enum:
                          - -1
                          - 1
                          - 2
                          - 3
                          - 4
                      monthly_week_day:
                        type: integer
                        description: >-
                          Use this field **only if you're scheduling a recurring
                          meeting of type** `3` to state a specific day in a week
                          when the monthly meeting should recur. To use this
                          field, you must also use the `monthly_week` field. 

                            
                           `1` - Sunday.  
                           `2` - Monday.  
                           `3` - Tuesday.  
                           `4` -  Wednesday.  
                           `5` - Thursday.  
                           `6` - Friday.  
                           `7` - Saturday.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Sunday
                            - Monday
                            - Tuesday
                            - Wednesday
                            - Thursday
                            - Friday
                            - Saturday
                        enum:
                          - 1
                          - 2
                          - 3
                          - 4
                          - 5
                          - 6
                          - 7
                      repeat_interval:
                        type: integer
                        description: >+
                          Define the interval when the meeting should recur. If
                          you would like to schedule a meeting that recurs every
                          two months, set the value of this field as `2` and the
                          value of the `type` parameter as `3`. 


                          For a daily meeting, the maximum interval you can set is
                          `90` days. For a weekly meeting the maximum interval
                          that you can set is  of `12` weeks. For a monthly
                          meeting, there is a maximum of `3` months.

                        example: 1
                      type:
                        type: integer
                        description: |-
                          Recurrence meeting types. 
                           `1` - Daily.  
                           `2` - Weekly.  
                           `3` - Monthly.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - Daily
                            - Weekly
                            - Monthly
                        enum:
                          - 1
                          - 2
                          - 3
                      weekly_days:
                        type: string
                        description: >-
                          This field is required **if you're scheduling a
                          recurring meeting of type** `2` to state which day(s) of
                          the week the meeting should repeat.   
                              
                            The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `1` as the value of this field.  
                             
                            **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `1,3` as the value of this field.

                             
                           `1`  - Sunday.   
                           `2` - Monday.  
                           `3` - Tuesday.  
                           `4` -  Wednesday.  
                           `5` -  Thursday.  
                           `6` - Friday.  
                           `7` - Saturday.
                        example: '1'
                        default: '1'
                        enum:
                          - '1'
                          - '2'
                          - '3'
                          - '4'
                          - '5'
                          - '6'
                          - '7'
                    description: >-
                      Recurrence object. Use this object only for a meeting with
                      type `8`, a recurring meeting with fixed time. 
                  settings:
                    type: object
                    properties:
                      allow_multiple_devices:
                        type: boolean
                        description: Allow attendees to join from multiple devices.
                        example: true
                      alternative_hosts:
                        type: string
                        description: >-
                          Alternative host emails or IDs. Separate multiple values
                          by commas.
                        example: jchill@example.com
                      alternative_host_update_polls:
                        type: boolean
                        description: >-
                          Whether the **Allow alternative hosts to add or edit
                          polls** feature is enabled. This requires Zoom version
                          5.8.0 or higher.
                        example: true
                      approval_type:
                        type: integer
                        description: |-
                          `0` - Automatically approve.  
                           `1` - Manually approve.  
                           `2` - No registration required.
                        example: 0
                        extensions:
                          x-enum-descriptions:
                            - Automatically Approve
                            - Manually Approve
                            - No Registration Required
                        default: 2
                        enum:
                          - 0
                          - 1
                          - 2
                      attendees_and_panelists_reminder_email_notification:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              * `true` - Send reminder email to attendees and
                              panelists.


                              * `false` - Do not send reminder email to attendees
                              and panelists.
                            example: true
                          type:
                            type: integer
                            description: |-
                              `0` - No plan.  
                               `1` - Send 1 hour before webinar.  
                               `2` - Send 1 day before webinar.  
                               `3` - Send 1 hour and 1 day before webinar.  
                               `4` - Send 1 week before webinar.  
                               `5` - Send 1 hour and 1 week before webinar.  
                               `6` - Send 1 day and 1 week before webinar.  
                               `7` - Send 1 hour, 1 day and 1 week before webinar.
                            example: 0
                            extensions:
                              x-enum-descriptions:
                                - Send 1 hour before webinar.
                                - Send 1 day before webinar.
                                - Send 1 hour and 1 day before webinar.
                                - Send 1 week before webinar.
                                - Send 1 hour and 1 week before webinar.
                                - Send 1 day and 1 week before webinar.
                                - Send 1 hour, 1 day and 1 week before webinar.
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                              - 5
                              - 6
                              - 7
                        description: Send reminder email to attendees and panelists.
                      audio:
                        type: string
                        description: >-
                          Determine how participants can join the audio portion of
                          the webinar.
                        example: telephony
                        extensions:
                          x-enum-descriptions:
                            - Both Telephony and VoIP
                            - Telephony only
                            - VoIP only
                            - Third party audio conference
                        default: both
                        enum:
                          - both
                          - telephony
                          - voip
                          - thirdParty
                      audio_conference_info:
                        maxLength: 2048
                        type: string
                        description: Third party audio conference info.
                        example: test
                      authentication_domains:
                        type: string
                        description: >-
                          If user has configured [**Sign Into Zoom with Specified
                          Domains**](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f)
                          option, this will list the domains that are
                          authenticated.
                        example: example.com
                      authentication_name:
                        type: string
                        description: >-
                          Authentication name set in the [authentication
                          profile](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars#h_5c0df2e1-cfd2-469f-bb4a-c77d7c0cca6f).
                        example: Sign in to Zoom
                      authentication_option:
                        type: string
                        description: Webinar authentication option ID.
                        example: signIn_D8cJuqWVQ623CI4Q8yQK0Q
                      auto_recording:
                        type: string
                        description: |-
                          Automatic recording. 
                           `local` - Record on local.  
                           `cloud` -  Record on cloud.  
                           `none` - Disabled.
                        example: cloud
                        extensions:
                          x-enum-descriptions:
                            - Record to local device
                            - Record to cloud
                            - No Recording
                        default: none
                        enum:
                          - local
                          - cloud
                          - none
                      close_registration:
                        type: boolean
                        description: Close registration after event date.
                        example: true
                        deprecated: true
                      contact_email:
                        type: string
                        description: Contact email for registration
                        example: jchill@example.com
                      contact_name:
                        type: string
                        description: Contact name for registration
                        example: Jill Chill
                      email_language:
                        type: string
                        description: >-
                          Set the email language to one of the following.

                          `en-US`,`de-DE`,`es-ES`,`fr-FR`,`jp-JP`,`pt-PT`,`ru-RU`,`zh-CN`,
                          `zh-TW`, `ko-KO`, `it-IT`, `vi-VN`.
                        example: en-US
                      enforce_login:
                        type: boolean
                        description: >-
                          Only signed in users can join this meeting.


                          **This field is deprecated and will not be supported in
                          the future.** 

                           As an alternative, use the ``meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
                        example: true
                        deprecated: true
                      enforce_login_domains:
                        type: string
                        description: >-
                          Only signed in users with specified domains can join
                          meetings.


                          **This field is deprecated and will not be supported in
                          the future.**

                           As an alternative, use the `meeting_authentication`, `authentication_option`, and `authentication_domains` fields to understand the [authentication configurations](https://support.zoom.us/hc/en-us/articles/360037117472-Authentication-Profiles-for-Meetings-and-Webinars) set for the webinar.
                        example: example.com
                        deprecated: true
                      follow_up_absentees_email_notification:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              * `true` - Send follow-up email to absentees.


                              * `false` - Do not send follow-up email to
                              absentees.
                            example: true
                          type:
                            type: integer
                            description: |-
                              `0` - No plan.  
                               `1` - Send 1 days after the scheduled end date.  
                               `2` - Send 2 days after the scheduled end date.  
                               `3` - Send 3 days after the scheduled end date.  
                               `4` - Send 4 days after the scheduled end date.  
                               `5` - Send 5 days after the scheduled end date.  
                               `6` - Send 6 days after the scheduled end date.  
                               `7` - Send 7 days after the scheduled end date.
                            example: 0
                            extensions:
                              x-enum-descriptions:
                                - Send 1 days after the scheduled end date.
                                - Send 2 days after the scheduled end date.
                                - Send 3 days after the scheduled end date.
                                - Send 4 days after the scheduled end date.
                                - Send 5 days after the scheduled end date.
                                - Send 6 days after the scheduled end date.
                                - Send 7 days after the scheduled end date.
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                              - 5
                              - 6
                              - 7
                        description: Send follow-up email to absentees.
                      follow_up_attendees_email_notification:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              * `true` - Send follow-up email to attendees.


                              * `false` - Do not send follow-up email to
                              attendees.
                            example: true
                          type:
                            type: integer
                            description: |-
                              `0` - No plan.  
                               `1` - Send 1 day after the scheduled end date.  
                               `2` - Send 2 days after the scheduled end date.  
                               `3` - Send 3 days after the scheduled end date.  
                               `4` - Send 4 days after the scheduled end date.  
                               `5` - Send 5 days after the scheduled end date.  
                               `6` - Send 6 days after the scheduled end date.  
                               `7` - Send 7 days after the scheduled end date.
                            example: 0
                            extensions:
                              x-enum-descriptions:
                                - Send 1 day after the scheduled end date.
                                - Send 2 days after the scheduled end date.
                                - Send 3 days after the scheduled end date.
                                - Send 4 days after the scheduled end date.
                                - Send 5 days after the scheduled end date.
                                - Send 6 days after the scheduled end date.
                                - Send 7 days after the scheduled end date.
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                              - 5
                              - 6
                              - 7
                        description: Send follow-up email to attendees.
                      global_dial_in_countries:
                        type: array
                        description: List of global dial-in countries
                        items:
                          type: string
                          example: US
                      hd_video:
                        type: boolean
                        description: Default to HD video.
                        example: false
                        default: false
                      hd_video_for_attendees:
                        type: boolean
                        description: Whether HD video for attendees is enabled.
                        example: false
                        default: false
                      host_video:
                        type: boolean
                        description: Start video when host joins the webinar.
                        example: true
                      language_interpretation:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Enable [language
                              interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars)
                              for the webinar.
                            example: true
                          interpreters:
                            type: array
                            description: >-
                              Information about the webinar's language
                              interpreters.
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The interpreter's email address.
                                  format: email
                                  example: interpreter@example.com
                                languages:
                                  type: string
                                  description: >-
                                    A comma-separated list of the interpreter's
                                    languages. The string must contain two letter
                                    [country
                                    codes](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). 


                                    If the interpreter will translate from English
                                    to Chinese, then this value will be `US,CN`.
                                  example: US,CN
                        description: >-
                          The webinar's [language interpretation
                          settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars).
                          Make sure to add the language in the web portal in order
                          to use it in the API. See link for details. 


                          **Note** This feature is only available for certain
                          webinar add-ons, and for Education, and Business, and
                          higher plans. If this feature is not enabled on the
                          host's account, this setting will **not** be applied to
                          the webinar.
                      sign_language_interpretation:
                        type: object
                        properties:
                          enable:
                            type: boolean
                            description: >-
                              Whether to enable [sign language
                              interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar)
                              for the webinar.
                            example: true
                          interpreters:
                            maximum: 20
                            type: array
                            description: >-
                              Information about the webinar's sign language
                              interpreters.
                            items:
                              type: object
                              properties:
                                email:
                                  type: string
                                  description: The interpreter's email address.
                                  format: email
                                  example: interpreter@example.com
                                sign_language:
                                  type: string
                                  description: |-
                                    The interpreter's sign language. 

                                     To get this value, use the `sign_language_interpretation` object's `languages` and `custom_languages` values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response.
                                  example: American
                        description: >-
                          The webinar's [sign language interpretation
                          settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar).
                          Make sure to add the language in the web portal in order
                          to use it in the API. See link for details. 


                          **Note:** If this feature is not enabled on the host's
                          account, this setting will **not** be applied to the
                          webinar.
                      panelist_authentication:
                        type: boolean
                        description: Require panelists to authenticate to join.
                        example: true
                      meeting_authentication:
                        type: boolean
                        description: Only authenticated users can join the webinar.
                        example: true
                      add_watermark:
                        type: boolean
                        description: Add watermark that identifies the viewing participant.
                        example: true
                      add_audio_watermark:
                        type: boolean
                        description: Add audio watermark that identifies the participants.
                        example: true
                      notify_registrants:
                        type: boolean
                        description: >-
                          Send notification email to registrants when the host
                          updates a webinar.
                        example: true
                      on_demand:
                        type: boolean
                        description: Make the webinar on-demand.
                        example: false
                        default: false
                      panelists_invitation_email_notification:
                        type: boolean
                        description: >-
                          Send invitation email to panelists. If `false`, do not
                          send invitation email to panelists.
                        example: true
                      panelists_video:
                        type: boolean
                        description: Start video when panelists join the webinar.
                        example: true
                      post_webinar_survey:
                        type: boolean
                        description: >-
                          Zoom will open a survey page in attendees' browsers
                          after leaving the webinar.
                        example: true
                      practice_session:
                        type: boolean
                        description: Enable practice session.
                        example: false
                        default: false
                      question_and_answer:
                        type: object
                        properties:
                          allow_submit_questions:
                            type: boolean
                            description: |-
                              * `true` - Allow participants to submit questions.

                              * `false` - Do not allow submit questions.
                            example: true
                          allow_anonymous_questions:
                            type: boolean
                            description: >-
                              * `true` - Allow participants to send questions
                              without providing their name to the host, co-host,
                              and panelists..


                              * `false` - Do not allow anonymous questions.
                            example: true
                          answer_questions:
                            type: string
                            description: >-
                              Indicate whether you want attendees to be able to
                              view answered questions only or view all questions.


                              * `only` - Attendees are able to view answered
                              questions only.


                              *  `all` - Attendees are able to view all questions
                              submitted in the Q&amp;A.
                            example: all
                            enum:
                              - only
                              - all
                          attendees_can_comment:
                            type: boolean
                            description: >-
                              * `true` - Attendees can answer questions or leave a
                              comment in the question thread.


                              * `false` - Attendees can't answer questions or
                              leave a comment in the question thread.
                            example: true
                          attendees_can_upvote:
                            type: boolean
                            description: >-
                              * `true` - Attendees can click the thumbs up button
                              to bring popular questions to the top of the Q&amp;A
                              window.


                              * `false` - Attendees can't click the thumbs up
                              button on questions.
                            example: true
                          allow_auto_reply:
                            type: boolean
                            description: |-
                              If simulive webinar, 

                              * `true` - allow auto-reply to attendees. 

                              * `false` - don't allow auto-reply to the attendees.
                            example: true
                          auto_reply_text:
                            type: string
                            description: >-
                              If `allow_auto_reply` = true, the text to be
                              included in the automatic response. 
                            example: >-
                              Thank you for your question. We will get back to you
                              shortly.
                          enable:
                            type: boolean
                            description: >-
                              * `true` - Enable
                              [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                              for webinar.


                              * `false` - Disable Q&amp;A for webinar.
                            example: true
                        description: >-
                          [Q&amp;A](https://support.zoom.us/hc/en-us/articles/203686015-Using-Q-A-as-the-webinar-host#:~:text=Overview,and%20upvote%20each%20other's%20questions.)
                          for webinar.
                      registrants_confirmation_email:
                        type: boolean
                        description: Send confirmation email to registrants
                        example: true
                      registrants_email_notification:
                        type: boolean
                        description: >-
                          Send email notifications to registrants about approval,
                          cancellation, denial of the registration. The value of
                          this field must be set to true in order to use the
                          `registrants_confirmation_email` field.
                        example: true
                      registrants_restrict_number:
                        maximum: 20000
                        minimum: 0
                        type: integer
                        description: >-
                          Restrict number of registrants for a webinar. By
                          default, it is set to `0`. A `0` value means that the
                          restriction option is disabled. Provide a number higher
                          than 0 to restrict the webinar registrants by the that
                          number.
                        example: 100
                        default: 0
                      registration_type:
                        type: integer
                        description: >-
                          Registration types. Only used for recurring webinars
                          with a fixed time.  
                           `1` - Attendees register once and can attend any of the webinar sessions.  
                           `2` - Attendees need to register for each session in order to attend.  
                           `3` - Attendees register once and can choose one or more sessions to attend.
                        example: 1
                        extensions:
                          x-enum-descriptions:
                            - >-
                              Attendees register once and can attend any of the
                              occurrences
                            - >-
                              Attendees need to register for each occurrence to
                              attend
                            - >-
                              Attendees register once and can choose one or more
                              occurrences to attend
                        default: 1
                        enum:
                          - 1
                          - 2
                          - 3
                      send_1080p_video_to_attendees:
                        type: boolean
                        description: Always send 1080p video to attendees.
                        example: false
                        default: false
                      show_share_button:
                        type: boolean
                        description: Show social share buttons on the registration page.
                        example: true
                      survey_url:
                        type: string
                        description: Survey url for post webinar survey
                        example: https://example.com
                      enable_session_branding:
                        type: boolean
                        description: >-
                          Whether the **Webinar Session Branding** setting is
                          enabled. This setting lets hosts visually customize a
                          webinar by setting a session background. This also lets
                          hosts use [Webinar Session
                          Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
                          to set the virtual background for and apply name tags to
                          hosts, alternative hosts, panelists, interpreters, and
                          speakers.
                        example: true
                    description: Webinar settings.
                  start_time:
                    type: string
                    description: >-
                      Webinar start time, in the format
                      `yyyy-MM-dd'T'HH:mm:ss'Z'`. Should be in GMT time. In the
                      format `yyyy-MM-dd'T'HH:mm:ss`. This should be in local time
                      and the timezone should be specified. Only used for
                      scheduled webinars and recurring webinars with a fixed time.
                    format: date-time
                    example: '2022-03-26T07:18:32Z'
                  timezone:
                    type: string
                    description: >-
                      The timezone to assign to the `start_time` value. This field
                      is only used for scheduled or recurring webinars with a
                      fixed time.


                      For a list of supported timezones and their formats, see our
                      [timezone
                      list](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones).
                    example: America/Los_Angeles
                  topic:
                    type: string
                    description: The webinar topic.
                    example: My webinar
                  tracking_fields:
                    type: array
                    description: Tracking fields.
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Tracking fields type.
                          example: field1
                        value:
                          type: string
                          description: Tracking fields value.
                          example: value1
                  type:
                    type: integer
                    description: |-
                      Webinar types. 
                       `5` - webinar.  
                       `6` - Recurring webinar with no fixed time.  
                       `9` - Recurring webinar with a fixed time.
                    example: 5
                    extensions:
                      x-enum-descriptions:
                        - Webinar
                        - Recurring Webinar with no fixed time
                        - Recurring Webinar with fixed time
                    default: 5
                    enum:
                      - 5
                      - 6
                      - 9
                  is_simulive:
                    type: boolean
                    description: Whether to set the webinar simulive.
                    example: true
                  record_file_id:
                    type: string
                    description: The previously recorded file's ID for `simulive`.
                    example: f09340e1-cdc3-4eae-9a74-98f9777ed908
                description: Webinar object.
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Webinar updated.
          '400':
            description: >
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account: {accountId} <br>
              **Error Code:** `3003` <br>
               * You are not the meeting host. 
              * Users in "{0}" have been blocked from joining meetings and
              webinars. To unblock them, go to the "Settings" page in the Zoom web
              portal and update the "Block users in specific domains from joining
              meetings and webinars" setting. <br>

              **Error Code:** `3000` <br>
               You cannot update or delete simulive webinars that have started using this method. <br>
              **Error Code:** `300` <br>
               The value that you entered for the schedule_for field is invalid. Enter a valid value and try again. <br>
              **Error Code:** `200` <br>
               Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account.<br> <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:update:webinar
            - webinar:update:webinar:admin
    /webinars/{webinarId}/batch_registrants:
      post:
        tags:
          - Webinars
        summary: Perform batch registration
        description: >-
          Register up to 30 registrants at once for a scheduled webinar that
          requires
          [registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration).   
           

          **Prerequisites:**  
           
          * The webinar host must be a licensed user.

          * The webinar should be type `5`, a scheduled webinar. Other types of
          webinars are not supported by this API.  
             
           


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:write:batch_registrants`,`webinar:write:batch_registrants:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `HEAVY`
        operationId: addBatchWebinarRegistrants
        parameters:
          - name: webinarId
            in: path
            description: The webinar's unique identifier.
            required: true
            schema:
              type: string
              example: '97871060099'
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  auto_approve:
                    type: boolean
                    description: >-
                      If a meeting was scheduled with approval_type `1` (manual
                      approval), but you want to automatically approve registrants
                      added via this API, set the value of this field to `true`. 


                      You **cannot** use this field to change approval setting for
                      a meeting that was originally scheduled with approval_type
                      `0` (automatic approval).
                    example: true
                  registrants:
                    type: array
                    items:
                      required:
                        - email
                        - first_name
                      type: object
                      properties:
                        email:
                          type: string
                          description: The registrant's email address.
                          format: email
                          example: jchill@example.com
                        first_name:
                          type: string
                          description: The registrant's first name.
                          example: Jill
                        last_name:
                          type: string
                          description: The registrant's last name.
                          example: Chill
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `200` **OK**   
               
              Registrants added.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    registrants:
                      type: array
                      items:
                        type: object
                        properties:
                          email:
                            type: string
                            description: The registrant's email address.
                            example: jchill@example.com
                          join_url:
                            type: string
                            description: >-
                              Unique URL using which registrant can join the
                              webinar.
                            example: https://example.com/j/11111
                          registrant_id:
                            type: string
                            description: The registrant's unique identifier.
                            example: '-rOym-zdTHOdbT3A7u7u5g'
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `200` <br>
               Webinar plan is missing. You must subscribe to the Webinar plan and enable webinars for the "{0}" user to perform this action. <br>
              **Error Code:** `300` <br>
               This API can only be used for scheduled webinars (type 5). Batch registration is not supported for other webinar types. <br>
              **Error Code:** `3038` <br>
               The webinar is over. You cannot register now. If you have any questions, contact the Webinar host. <br>
              **Error Code:** `3000` <br>
               Registration not enabled for this webinar: {0} <br>
              **Error Code:** `3000` <br>
               You have reached the limit for the number of attendees you can add. Contact Zoom Support for more information. <br>
              **Error Code:** `3000` <br>
               The Zoom REST API does not support paid registration. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Webinar does not exist: {0}.<br><br> <br>
              **Error Code:** `3043` <br>
               Webinar has reached maximum attendee capacity.<br><br> <br>
              **Error Code:** `404` <br>
               Registration has not been enabled for this meeting: {meetingId}. <br>
          '429':
            description: |-
              **HTTP Status Code:** `429` <br>
               Too Many Requests 

               
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:write:batch_registrants
            - webinar:write:batch_registrants:admin
    /webinars/{webinarId}/branding:
      get:
        tags:
          - Webinars
        summary: Get webinar's session branding
        description: >-
          Use this API to get the webinar's [Session
          Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
          information. Session branding lets hosts visually customize a webinar by
          setting a webinar wallpaper that displays behind video tiles. Session
          branding also lets hosts set the Virtual Background for and apply name
          tags to hosts, alternative hosts, panelists, interpreters, and
          speakers. 

           **Prerequisites:** 
          * A Pro or higher plan with the Webinar add-on. 

          * The **Webinar Session Branding** setting enabled.


          **Scopes:** `webinar:read`,`webinar:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: getWebinarBranding
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Webinar session branding returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    wallpaper:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The wallpaper's file ID.
                          example: zazQjwDuQkS3Q2EprNd7jQ
                      description: Information about the webinar's [Wallpaper] file.
                    virtual_backgrounds:
                      type: array
                      description: >-
                        Information about the webinar's [Virtual
                        Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background)
                        files.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: The Virtual Background's file ID.
                            example: zazQjwDuQkS3Q2EprNd7jQ
                          name:
                            type: string
                            description: The Virtual Background's file name.
                            example: beach.jpg
                          is_default:
                            type: boolean
                            description: >-
                              Whether the file is the default Virtual Background
                              file.
                            example: true
                    name_tags:
                      type: array
                      description: Information about the webinar's name tag.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: The name tag's ID.
                            example: zazQjwDuQkS3Q2EprNd7jQ
                          name:
                            type: string
                            description: The name tag's name.
                            example: name
                          text_color:
                            type: string
                            description: The name tag's text color.
                            example: 0e72ed
                          accent_color:
                            type: string
                            description: The name tag's accent color.
                            example: 0e72ed
                          background_color:
                            type: string
                            description: The name tag's background color.
                            example: 0e72ed
                          is_default:
                            type: boolean
                            description: Whether the file is the default name tag or not.
                            example: true
                  description: Information about the webinar's sessions branding.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>
              User does not belong to this account: {accountId}

              **Error Code:** `3000` <br>
              You cannot enable session branding for this webinar.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User "{userId}" does not exist or does not belong to this account.

              **Error Code:** `3001` <br>
              Webinar "{webinarId}" not found or has expired.

        security:
          - openapi_oauth:
              - webinar:read
              - webinar:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:read
            - webinar:read:admin
    /webinars/{webinarId}/branding/name_tags:
      post:
        tags:
          - Webinars
        summary: Create a webinar's branding name tag
        description: >-
          Use this API to create a webinar's [Session
          Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
          name tag. There's a limit of 20 name tags per webinar.
          **Prerequisites:** 

          *  The **Webinar Session Branding** setting enabled.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: createWebinarBrandingNameTag
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - accent_color
                  - background_color
                  - name
                  - text_color
                type: object
                properties:
                  name:
                    type: string
                    description: |-
                      The name tag's name.

                      **Note:** This value cannot exceed more than 50 characters.
                    example: name
                  text_color:
                    type: string
                    description: The name tag's text color.
                    format: Hex color code
                    example: 0e72ed
                  accent_color:
                    type: string
                    description: The name tag's accent color.
                    format: Hex color code
                    example: 0e72ed
                  background_color:
                    type: string
                    description: The name tag's background color.
                    format: Hex color code
                    example: 0e72ed
                  is_default:
                    type: boolean
                    description: Whether set the name tag as the default name tag or not.
                    example: true
                    default: false
                  set_default_for_all_panelists:
                    type: boolean
                    description: >-
                      Whether to set the name tag as the new default for all
                      panelists or not. This includes panelists not currently
                      assigned a default name tag.
                    example: true
                    default: true
                description: Name tag information
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Name tag created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The name tag's ID.
                      example: J0sFXN2PSOCGrqTqLRwgAQ
                    name:
                      type: string
                      description: The name tag's name.
                      example: name
                    text_color:
                      type: string
                      description: The name tag's text color.
                      example: 0e72ed
                    accent_color:
                      type: string
                      description: The name tag's accent color.
                      example: 0e72ed
                    background_color:
                      type: string
                      description: The name tag's background_color color.
                      example: 0e72ed
                    is_default:
                      type: boolean
                      description: Whether the name tag is the default name tag or not.
                      example: true
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `3000` <br>

              This webinar does not have session branding enabled.<br>

              You have reached the limit for the number of name tags you can add
              for this webinar. The limit is 20.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
      delete:
        tags:
          - Webinars
        summary: Delete a webinar's branding name tag
        description: >-
          Use this API to delete a webinar's [Session
          Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
          name tag. 

           **Prerequisites:** 
          * The **Webinar Session Branding** setting enabled.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: deleteWebinarBrandingNameTag
        parameters:
          - name: name_tag_ids
            in: query
            description: A comma-separated list of the name tag IDs to delete.
            required: false
            schema:
              type: string
              example: zazQjwDuQkS3Q2EprNd7jQ,AsfE0cx2TFSfqqKbE0BUZg
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              * No content. 
              * Name tag(s) deleted.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>
              Invalid parameter: name_tag_ids

              **Error Code:** `3000` <br>
              This webinar does not have session branding enabled.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
    /webinars/{webinarId}/branding/name_tags/{nameTagId}:
      patch:
        tags:
          - Webinars
        summary: Update a webinar's branding name tag
        description: >-
          Use this API to update a webinar's [Session
          Branding](https://support.zoom.us/hc/en-us/articles/4836268732045-Using-Webinar-Session-Branding)
          name tag. **Prerequisites:** 

          *  The **Webinar Session Branding** setting enabled.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: updateWebinarBrandingNameTag
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: nameTagId
            in: path
            description: The name tag's ID.
            required: true
            schema:
              type: string
              example: J0sFXN2PSOCGrqTqLRwgAQ
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: |-
                      The name tag's name.

                      **Note:** This value cannot exceed more than 50 characters.
                    example: name
                  text_color:
                    type: string
                    description: The name tag's text color.
                    format: Hex color code
                    example: 0e72ed
                  accent_color:
                    type: string
                    description: The name tag's accent color.
                    format: Hex color code
                    example: 0e72ed
                  background_color:
                    type: string
                    description: The name tag's background color.
                    format: Hex color code
                    example: 0e72ed
                  is_default:
                    type: boolean
                    description: Whether set the name tag as the default name tag or not.
                    example: true
                    default: false
                  set_default_for_all_panelists:
                    type: boolean
                    description: >-
                      Whether to set the name tag as the new default for all
                      panelists or not. This includes panelists not currently
                      assigned a default name tag.
                    example: true
                    default: true
                description: Name tag information
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              * No content. 
              * Name tag updated.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `3000` <br>
              This webinar does not have session branding enabled.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
    /webinars/{webinarId}/branding/virtual_backgrounds:
      post:
        tags:
          - Webinars
        summary: Upload a webinar's branding Virtual Background
        description: >-
          Use this API to upload a webinar's session branding [Virtual
          Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background).
          Hosts and panelists can select and use these Virtual Backgrounds during
          the webinar. Branding Virtual Background files have the following
          restrictions: 

          * A webinar cannot exceed more than 10 Virtual Background files. 

          * You can only upload image files that are in JPG/JPEG, GIF or PNG
          format. 

          * The Virtual Background file size cannot exceed 15 megabytes (MB). 

           **Prerequisites:** 
          *  The **Webinar Session Branding** setting enabled.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: uploadWebinarBrandingVB
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          content:
            multipart/form-data:
              schema:
                required:
                  - file
                type: object
                properties:
                  file:
                    type: string
                    description: The Virtual Background's file path, in binary format.
                    format: binary
                    example: WVVoU01HTklUVFpNZVRsc1pVZEdkR05IZUd4TWJVNTJZbEU5UFE9PQ==
                  default:
                    type: boolean
                    description: Whether set the file as the default Virtual Background file.
                    example: true
                    default: false
                  set_default_for_all_panelists:
                    type: boolean
                    description: >-
                      Whether to set the Virtual Background file as the new
                      default for all panelists. This includes panelists not
                      currently assigned a default Virtual Background.
                    example: true
                    default: true
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Virtual Background uploaded.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The Virtual Background file's ID.
                      example: J0sFXN2PSOCGrqTqLRwgAQ
                    name:
                      type: string
                      description: The Virtual Background file's name.
                      example: beach.jpg
                    is_default:
                      type: boolean
                      description: Whether the file is the default Virtual Background file.
                      example: true
                    size:
                      type: integer
                      description: The Virtual Background file's size, in bytes.
                      example: 524288
                    type:
                      type: string
                      description: |-
                        The Virtual Background file's file type: 
                        * `image` &mdash; An image file.
                      example: image
                      enum:
                        - image
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `3000` <br>
              This webinar does not have session branding enabled.

              **Error Code:** `120` <br>
              * No file uploaded. Verify that a file has been uploaded. 
              * File size cannot exceed 15M. 
              * A maximum of 10 files are allowed for a webinar. 
              * Only JPG/JPEG, GIF, or PNG image files can be uploaded.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User "{userId}" does not exist or does not belong to this account.

              **Error Code:** `3001` <br>
              Webinar "{webinarId}" not found or has expired.

        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
      delete:
        tags:
          - Webinars
        summary: Delete a webinar's branding Virtual Backgrounds
        description: >-
          Use this API to delete a webinar's session branding [Virtual
          Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). 

           **Prerequisites:** 
          * The **Webinar Session Branding** setting enabled.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: deleteWebinarBrandingVB
        parameters:
          - name: ids
            in: query
            description: A comma-separated list of the Virtual Background file IDs to delete.
            required: false
            schema:
              type: string
              example: zazQjwDuQkS3Q2EprNd7jQ,AsfE0cx2TFSfqqKbE0BUZg
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              * No content. 
              * Virtual Background file(s) deleted.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>
              User does not belong to this account: {accountId}

              **Error Code:** `300` <br>
              Invalid parameter: ids

              **Error Code:** `3000` <br>
              This webinar does not have session branding enabled.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User "{userId}" does not exist or does not belong to this account.

              **Error Code:** `3001` <br>
              Webinar "{webinarId}" not found or has expired.

        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
      patch:
        tags:
          - Webinars
        summary: Set webinar's default branding Virtual Background
        description: >-
          Use this API to set a webinar's default session branding [Virtual
          Background](https://support.zoom.us/hc/en-us/articles/210707503-Virtual-Background). 

           **Prerequisites:** 
          * The **Webinar Session Branding** setting enabled.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: setWebinarBrandingVB
        parameters:
          - name: id
            in: query
            description: The Virtual Background file ID to update.
            required: false
            schema:
              type: string
              example: zazQjwDuQkS3Q2EprNd7jQ
          - name: set_default_for_all_panelists
            in: query
            description: >-
              Whether to set the Virtual Background file as the new default for
              all panelists. This includes panelists not currently assigned a
              default Virtual Background.
            required: false
            schema:
              type: boolean
              example: true
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              * No content. 
              * Virtual Background updated.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>
              User does not belong to this account: {accountId}

              **Error Code:** `300` <br>
              Invalid parameter: {id}

              **Error Code:** `3000` <br>
              This webinar does not have session branding enabled.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User "{userId}" does not exist or does not belong to this account.

              **Error Code:** `3001` <br>
              Webinar "{webinarId}" not found or has expired.

        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
    /webinars/{webinarId}/branding/wallpaper:
      post:
        tags:
          - Webinars
        summary: Upload a webinar's branding wallpaper
        description: >-
          Use this API to upload a webinar's session branding wallpaper file.
          Webinar branding wallpaper files have the following requirements: 

          * A webinar can only have one wallpaper file. 

          * You can only upload image files that are in JPG/JPEG, GIF, or PNG
          format. 

          * Image files must be 16:9 ratio. The recommended image size is 1920 x
          1080 pixels (px). 

          * The wallpaper file size cannot exceed 15 megabytes (MB). 

           **Prerequisites:** 
          *  The **Webinar Session Branding** setting enabled.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Medium`
        operationId: uploadWebinarBrandingWallpaper
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          content:
            multipart/form-data:
              schema:
                required:
                  - file
                type: object
                properties:
                  file:
                    type: string
                    description: The wallpaper's file path, in binary format.
                    format: binary
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Webinar wallpaper uploaded.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The wallpaper file's ID.
                      example: zazQjwDuQkS3Q2EprNd7jQ
                    name:
                      type: string
                      description: The wallpaper file's name.
                      example: logo.jpg
                    size:
                      type: integer
                      description: The wallpaper file's size, in bytes.
                      example: 262144
                    type:
                      type: string
                      description: |-
                        The wallpaper file's file type: 
                        * `image` &mdash; An image file.
                      example: image
                      enum:
                        - image
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `3000` <br>
              This webinar does not have session branding enabled.

              **Error Code:** `120` <br>
              * No file uploaded. Verify that a file has been uploaded. 
              * File size cannot exceed 15M. 
              * A maximum of 10 files are allowed for a webinar. 
              * Only JPG/JPEG, GIF, or PNG image files can be uploaded.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User "{userId}" does not exist or does not belong to this account.

              **Error Code:** `3001` <br>
              Webinar "{webinarId}" not found or has expired.

        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
      delete:
        tags:
          - Webinars
        summary: Delete a webinar's branding wallpaper
        description: >-
          Use this API to delete a webinar's session branding wallpaper file. 

           **Prerequisites:** 
          * The **Webinar Session Branding** setting enabled.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: deleteWebinarBrandingWallpaper
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
              * No content. 
              * Webinar wallpaper deleted.
          '400':
            description: |+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `1010` <br>
              User does not belong to this account: {accountId}

              **Error Code:** `300` <br>
              Invalid parameter: {id}

              **Error Code:** `3000` <br>
              This webinar does not have session branding enabled.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `1001` <br>
              User "{userId}" does not exist or does not belong to this account.

              **Error Code:** `3001` <br>
              Webinar "{webinarId}" not found or has expired.

        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
    /webinars/{webinarId}/invite_links:
      post:
        tags:
          - Webinars
        summary: Create webinar's invite links
        description: >-
          Create a batch of invitation links for a webinar.


          **Prerequisites:**


          * Business, Education or API Plan with the Webinar add-on.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:write:invite_links`,`webinar:write:invite_links:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarInviteLinksCreate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          description: Webinar invite link object.
          content:
            application/json:
              schema:
                title: Invite links
                type: object
                properties:
                  attendees:
                    maxItems: 500
                    minItems: 1
                    type: array
                    description: The attendees list.
                    items:
                      required:
                        - name
                      type: object
                      properties:
                        name:
                          maxLength: 64
                          type: string
                          description: User display name.
                          example: Jill Chill
                  ttl:
                    maximum: 7776000
                    minimum: 0
                    type: integer
                    description: |-
                      The invite link's expiration time, in seconds. 

                      This value defaults to `7200`.
                    format: int64
                    example: 1000
                    default: 7200
                description: Invite Links
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Webinar Invite Links Created
            content:
              application/json:
                schema:
                  title: Invite Links
                  type: object
                  properties:
                    attendees:
                      type: array
                      description: The attendee list.
                      items:
                        type: object
                        properties:
                          join_url:
                            type: string
                            description: The URL to join the meeting.
                            example: https://example.com/j/11111
                          name:
                            type: string
                            description: The user's display name.
                            example: Jill Chill
                  description: Invite links response.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               * Webinar Id does not exist.<br>
              * Invalid Webinar Id.<br> <br>
              **Error Code:** `3001` <br>
               Webinar does not exist: {webinarId}.<br> <br>
              **Error Code:** `1001` <br>
               User does not exist: {userId}.<br> <br>
              **Error Code:** `200` <br>
               Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}. <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:write:invite_links
            - webinar:write:invite_links:admin
    /webinars/{webinarId}/jointoken/live_streaming:
      get:
        tags:
          - Webinars
        summary: Get a webinar's join token for live streaming
        description: >-
          Use this API to get a webinar's archive token to allow live streaming.
          The join token allows a recording bot implemented using Zoom meeting SDK
          to connect to a Zoom meeting &quot;hosted by the issuer of the
          token&quot;, and can call the streaming method automatically. It
          supports both regular live streaming, and raw streaming. 

           **Prerequisites:** 
          * A Pro or higher plan with a Webinar Add-on. 

          * The **Allow livestreaming of webinars** user setting enabled in the
          Zoom web portal.


          **Scopes:**
          `webinar_token:read:admin:live_streaming`,`webinar_token:read:live_streaming`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: webinarLiveStreamingJoinToken
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Webinar live streaming token returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    expire_in:
                      type: integer
                      description: >-
                        The number of seconds the join token is valid for before
                        it expires. This value always returns `120`.
                      format: int64
                      example: 120
                      enum:
                        - 120
                    token:
                      type: string
                      description: The join token.
                      example: 2njt50mj
                  description: Information about the webinar's join token.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Invalid webinar ID.


              **Error Code:** `124` <br>

              This API only supports OAuth2 authorization.


              **Error Code:** `3000` <br>

              Not allowed to start live streaming. To use this feature, enable the
              "Allow livestreaming of webinars" setting in the "Settings" page of
              the Zoom web portal.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `300` <br>
              Webinar ID does not exist.

              **Error Code:** `3001` <br>
              Webinar does not exist: {webinarId}

        security:
          - openapi_oauth:
              - webinar_token:read:admin:live_streaming
              - webinar_token:read:live_streaming
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar_token:read:admin:live_streaming
            - webinar_token:read:live_streaming
    /webinars/{webinarId}/jointoken/local_archiving:
      get:
        tags:
          - Webinars
        summary: Get a webinar's archive token for local archiving
        description: >-
          Use this API to get a webinar's archive token to allow local archiving.
          The archive token allows a meeting SDK app or bot to get archive
          permission to access the webinar's raw audio and video media stream in
          real-time. 

           **Prerequisites:** 
          * A Pro or higher plan with a Webinar Add-on. 

          * The **Archive meetings and webinars** account setting enabled in the
          Zoom web portal.


          **Scopes:** `webinar_token:read:admin:local_archiving`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: webinarLocalArchivingArchiveToken
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Webinar local archiving token returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    expire_in:
                      type: integer
                      description: >-
                        The number of seconds the archive token is valid for
                        before it expires. This value always returns `120`.
                      format: int64
                      example: 120
                      enum:
                        - 120
                    token:
                      type: string
                      description: The archive token.
                      example: 2njt50mj
                  description: Information about the webinar's local archive token.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Invalid webinar ID.


              **Error Code:** `124` <br>

              This API only supports OAuth2 authorization.


              **Error Code:** `3000` <br>

              Not allowed to start local archiving. To use this feature, enable
              the "Archive meetings and webinars" setting in the "Settings" page
              of the Zoom web portal.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `300` <br>
              Webinar ID does not exist.

              **Error Code:** `3001` <br>
              Webinar does not exist: {webinarId}

        security:
          - openapi_oauth:
              - webinar_token:read:admin:local_archiving
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar_token:read:admin:local_archiving
    /webinars/{webinarId}/jointoken/local_recording:
      get:
        tags:
          - Webinars
        summary: Get a webinar's join token for local recording
        description: >-
          Use this API to get a webinar's join token to allow for local recording.
          The join token lets a recording bot implemented using Zoom Meeting SDK
          to connect to a Zoom webinar. The recording bot can then automatically
          start locally recording. This supports both regular and raw local
          recording types. 

           **Prerequisites:** 
          * A Pro or higher plan with a Webinar Add-on. 

          * The **Local recording** user setting enabled in the Zoom web portal.


          **Scopes:**
          `webinar_token:read:admin:local_recording`,`webinar_token:read:local_recording`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: webinarLocalRecordingJoinToken
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Webinar local recording token returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    expire_in:
                      type: integer
                      description: >-
                        The number of seconds the join token is valid for before
                        it expires. This value always returns `120`.
                      format: int64
                      example: 120
                      enum:
                        - 120
                    token:
                      type: string
                      description: The join token.
                      example: 2njt50mj
                  description: Information about the webinar's local recorder join token.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Invalid webinar ID.


              **Error Code:** `124` <br>

              This API only supports OAuth2 authorization.


              **Error Code:** `3000` <br>

              Not allowed to start local recording. To use this feature, enable
              the "Local Recording" setting in the "Settings" page of the Zoom web
              portal.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `300` <br>
              Webinar ID does not exist.

              **Error Code:** `3001` <br>
              Webinar does not exist: {webinarId}

        security:
          - openapi_oauth:
              - webinar_token:read:admin:local_recording
              - webinar_token:read:local_recording
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar_token:read:admin:local_recording
            - webinar_token:read:local_recording
    /webinars/{webinarId}/livestream:
      get:
        tags:
          - Webinars
        summary: Get live stream details
        description: >-
          Get a webinar's live stream configuration details, such as Stream URL,
          Stream Key and Page URL.


          Zoom allows users to [live stream a
          webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
          to a custom platform.

           
          **Prerequisites:**  
           
          * Pro or higher plan with the webinar add-on.  
           
          * Live streaming details must have been
          [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
          for the webinar.  





          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:livestream`,`webinar:read:livestream:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: getWebinarLiveStreamDetails
        parameters:
          - name: webinarId
            in: path
            description: The webinar's unique ID.
            required: true
            schema:
              type: string
              example: '95204914252'
        responses:
          '200':
            description: '**HTTP Status Code:** `200` **OK**   Live stream details returned.'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    page_url:
                      type: string
                      description: >-
                        Live streaming page URL. This is the URL using which
                        anyone can view the live stream of the webinar.
                      example: https://example.com/livestream/123
                    stream_key:
                      type: string
                      description: Stream key.
                      example: contact-it@example.com
                    stream_url:
                      type: string
                      description: Stream URL.
                      example: https://example.com/livestream
                    resolution:
                      type: string
                      description: >-
                        The number of pixels in each dimension that the video
                        camera can display.
                      example: 720p
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               * Webinar ID does not exist.<br>* Invalid Webinar ID.<br> <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} does not exist.<br> <br>
              **Error Code:** `1001` <br>
               User {userId} does not exist.<br> <br>
              **Error Code:** `200` <br>
               * Webinar plan is missing. Subscribe to the webinar plan and enable webinars for user  {userId} in order to perform this action.<br>* The current user has not enabled the custom live streaming feature of the webinar. <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:livestream
            - webinar:read:livestream:admin
      patch:
        tags:
          - Webinars
        summary: Update a live stream
        description: >-
          Update a webinar's live stream information. 
             
           
          **Prerequisites:**  
           
          * Pro or higher plan with the webinar add-on.  
           
          * Live streaming details must be
          [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
          for the webinar.  
             
           


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:update:livestream`,`webinar:update:livestream:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarLiveStreamUpdate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          description: Webinar
          content:
            application/json:
              schema:
                required:
                  - page_url
                  - stream_key
                  - stream_url
                type: object
                properties:
                  page_url:
                    maxLength: 1024
                    type: string
                    description: The webinar live stream page's URL.
                    format: uri
                    example: https://example.com/livestream/123
                  stream_key:
                    maxLength: 512
                    type: string
                    description: The webinar live stream name and key.
                    example: contact-it@example.com
                  stream_url:
                    maxLength: 1024
                    type: string
                    description: The webinar live stream URL.
                    example: https://example.com/livestream
                  resolution:
                    type: string
                    description: >-
                      The number of pixels in each dimension that the video camera
                      can display, required when a user enables 1080p. Use a value
                      of `720p` or `1080p`
                    example: 720p
                description: Webinar live stream.
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Meeting live stream updated.
          '400':
            description: >
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               * Webinar Id does not exist.<br>
              * Invalid Webinar Id.<br> <br>

              **Error Code:** `3001` <br>
               Webinar does not exist: {webinarId}.<br> <br>
              **Error Code:** `1001` <br>
               User does not exist: {userId}.<br> <br>
              **Error Code:** `200` <br>
               * Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}.<br>
              * The current user has not enabled the custom live streaming feature
              of the webinar. <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:update:livestream
            - webinar:update:livestream:admin
    /webinars/{webinarId}/livestream/status:
      patch:
        tags:
          - Webinars
        summary: Update live stream status
        description: >-
          Let users [live stream a
          webinar](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service)
          to a custom platform. Update the status of a webinar's live stream.  
             
           
          **Prerequisites:**  
           
          * Pro or higher plan with a Webinar Add-on.  
           
          * Live streaming details must be
          [configured](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service#h_01589a6f-a40a-4e18-a448-cb746e52ebc5)
          for the webinar.  
             
           


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:update:livestream_status`,`webinar:update:livestream_status:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarLiveStreamStatusUpdate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          description: Webinar
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: string
                    description: |-
                      Update the live stream's status. 

                      * `start` - Start a webinar live stream.

                      * `stop`- Stop an ongoing webinar live stream.
                    example: start
                    extensions:
                      x-enum-descriptions:
                        - Start a webinar live stream.
                        - Stop a webinar live stream.
                    enum:
                      - start
                      - stop
                  settings:
                    type: object
                    properties:
                      active_speaker_name:
                        type: boolean
                        description: >-
                          Display the name of the active speaker during a live
                          stream.
                        example: true
                      display_name:
                        maxLength: 50
                        minLength: 1
                        type: string
                        description: Display the live stream's name.
                        example: Jill Chill
                    description: >-
                      Update the live stream session's settings.  **Only**
                      settings for a stopped live stream can be updated.
                description: Webinar live stream status.
        responses:
          '204':
            description: |+
              **HTTP Status Code:** `204`   
               
              Meeting live stream updated.

          '400':
            description: >
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               * Webinar Id does not exist.<br>
              * Invalid Webinar Id.<br> <br>

              **Error Code:** `3001` <br>
               Webinar does not exist: {webinarId}.<br> <br>
              **Error Code:** `1001` <br>
               User does not exist: {userId}.<br> <br>
              **Error Code:** `200` <br>
               * Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {userId}.<br>
              * The current user has not enabled the custom live streaming feature
              of the webinar.<br>

              * Webinar {0} has not started. <br> <br>

              **Error Code:** `3000` <br>
               The current webinar is not configured with a custom streaming service. <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:update:livestream_status
            - webinar:update:livestream_status:admin
    /webinars/{webinarId}/panelists:
      get:
        tags:
          - Webinars
        summary: List panelists
        description: >-
          List all of a webinar's panelists.  


          Webinar panelists can view and send video, screen share, annotate, and
          do much more compared to webinar attendees. 



          **Prerequisites:**  
           
          * Pro or a higher plan with [Webinar Add-on](https://zoom.us/webinar).  
            

          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_panelists`,`webinar:read:list_panelists:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: webinarPanelists
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200`  
               
              Webinar plan subscription missing. Enable webinar for this user once
              the subscription is added.
            content:
              application/json:
                schema:
                  title: Panelist List
                  type: object
                  properties:
                    panelists:
                      type: array
                      description: List of panelist objects.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Panelist's ID.
                            example: Tg2b6GhcQKKbV7nSCbDKug
                          email:
                            type: string
                            description: >-
                              Panelist's email. See [Email address display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for return value details.
                            format: email
                            example: jchill@example.com
                          name:
                            type: string
                            description: >-
                              The panelist's full name.


                              **Note** This value cannot exceed more than 12
                              Chinese characters.
                            example: Jill Chill
                          join_url:
                            type: string
                            description: Join URL.
                            example: https://example.com/j/11111
                          virtual_background_id:
                            type: string
                            description: The virtual background's ID.
                            example: xHhPyb8ERMCmiC5njPjFdQ
                          name_tag_id:
                            type: string
                            description: The name tag ID to bind.
                            example: xHhPyb8ERMCmiC5njPjFdQ
                          name_tag_name:
                            type: string
                            description: The panelist's name to display in the name tag.
                            example: name
                          name_tag_pronouns:
                            type: string
                            description: The pronouns to display in the name tag.
                            example: pronouns
                          name_tag_description:
                            type: string
                            description: >-
                              The description for the name tag, such as the
                              person's title).
                            example: description
                        description: Panelist base object.
                    total_records:
                      type: integer
                      description: Total records.
                      example: 1
                  description: Webinar panelist.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account.<br> <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_panelists
            - webinar:read:list_panelists:admin
      post:
        tags:
          - Webinars
        summary: Add panelists
        description: >-
          Panelists in a webinar can view and send video, screen share, annotate,
          and do much more compared to attendees in a webinar.  
           [Add panelists](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_7550d59e-23f5-4703-9e22-e76bded1ed70) to a scheduled webinar.  
             
           
          **Prerequisites:**

          * Pro or a higher plan with the [Webinar
          Add-on](https://zoom.us/webinar).  
            

          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:write:panelist`,`webinar:write:panelist:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: webinarPanelistCreate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  panelists:
                    maximum: 30
                    type: array
                    description: List of panelist objects.
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: >-
                            Panelist's email. See the [email address display
                            rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                            for return value details.
                          format: email
                          example: jchill@example.com
                        name:
                          type: string
                          description: >-
                            The panelist's full name.


                            **Note:** This value cannot exceed more than 12
                            Chinese characters.
                          example: Jill Chill
                        virtual_background_id:
                          type: string
                          description: The virtual background ID to bind.
                          example: xHhPyb8ERMCmiC5njPjFdQ
                        name_tag_id:
                          type: string
                          description: The name tag ID to bind.
                          example: xHhPyb8ERMCmiC5njPjFdQ
                        name_tag_name:
                          type: string
                          description: The panelist's name to display in the name tag.
                          example: xHhPyb8ERMCmiC5njPjFdQ
                        name_tag_pronouns:
                          type: string
                          description: The pronouns to display in the name tag.
                          example: pronouns
                        name_tag_description:
                          type: string
                          description: >-
                            The description for the name tag, such the person's
                            title.
                          example: description
                      description: Panelist base object.
                description: Webinar panelist.
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`  
               
              Panelist created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Webinar Id.
                      example: '95204914252'
                    updated_at:
                      type: string
                      description: The time when the panelist was added.
                      format: date-time
                      example: '2022-03-26T07:30:16Z'
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
              **Error Code:** `3000` <br>
               You have reached the limit for the number of panelists you can add. Contact Zoom Support for more information.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account.<br> <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
          '429':
            description: |-
              **HTTP Status Code:** `429` <br>
               Too Many Requests 

               
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:write:panelist
            - webinar:write:panelist:admin
      delete:
        tags:
          - Webinars
        summary: Remove webinar panelists
        description: >-
          Remove all the panelists from a webinar.  
           
          **Prerequisites:**  
           
          * Pro or a higher plan with the [webinar
          add-on](https://zoom.us/webinar).  
            

          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:delete:panelist`,`webinar:delete:panelist:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarPanelistsDelete
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Panelists removed.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account.<br> <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:delete:panelist
            - webinar:delete:panelist:admin
    /webinars/{webinarId}/panelists/{panelistId}:
      delete:
        tags:
          - Webinars
        summary: Remove a panelist
        description: >-
          [Remove](https://support.zoom.us/hc/en-us/articles/115005657826-Inviting-Panelists-to-a-Webinar#h_de31f237-a91c-4fb2-912b-ecfba8ec5ffb)
          a single panelist from a webinar.  
            Retrieve the `panelistId` by calling **List Panelists API**.  
             
           
          **Prerequisites:**  
           
          * Pro or a higher plan with the [webinar
          add-on](https://zoom.us/webinar).  
            

          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:delete:panelist`,`webinar:delete:panelist:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarPanelistDelete
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: panelistId
            in: path
            description: The panelist's ID or email.
            required: true
            schema:
              type: string
              example: Tg2b6GhcQKKbV7nSCbDKug
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Panelist removed.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User  {accountId} does not belong to this account. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {email} does not exist or does not belong to this account. <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired. <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:delete:panelist
            - webinar:delete:panelist:admin
    /webinars/{webinarId}/polls:
      get:
        tags:
          - Webinars
        summary: 'List a webinar''s polls '
        description: >-
          List all the
          [polls](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
          of a Webinar.  
             
           


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_polls`,`webinar:read:list_polls:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarPolls
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: anonymous
            in: query
            description: >-
              Whether to query for polls with the **Anonymous** option enabled: 

              * `true` &mdash; Query for polls with the **Anonymous** option
              enabled. 

              * `false` &mdash; Do not query for polls with the **Anonymous**
              option enabled.
            required: false
            schema:
              type: boolean
              example: true
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              List polls of a Webinar  returned
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    polls:
                      type: array
                      description: Array of Polls
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: ID of Poll
                            example: QalIoKWLTJehBJ8e1xRrbQ
                          status:
                            type: string
                            description: |-
                              Status of Poll:  
                               `notstart` - Poll not started  
                               `started` - Poll started  
                               `ended` - Poll ended  
                               `sharing` - Sharing poll results
                            example: notstart
                            extensions:
                              x-enum-descriptions:
                                - Poll not start
                                - Poll started
                                - Poll ended
                                - Poll is sharing
                            enum:
                              - notstart
                              - started
                              - ended
                              - sharing
                          anonymous:
                            type: boolean
                            description: >-
                              Allow meeting participants to answer poll questions
                              anonymously. 


                              This value defaults to `false`.
                            example: true
                            default: false
                          poll_type:
                            type: integer
                            description: >-
                              The type of poll: 

                              * `1` &mdash; Poll. 

                              * `2` &mdash; Advanced Poll. This feature must be
                              enabled in your Zoom account. 

                              * `3` &mdash; Quiz. This feature must be enabled in
                              your Zoom account. 

                               This value defaults to `1`.
                            example: 2
                            enum:
                              - 1
                              - 2
                              - 3
                          questions:
                            type: array
                            description: Information about the poll's questions.
                            items:
                              type: object
                              properties:
                                answer_max_character:
                                  type: integer
                                  description: >-
                                    The allowed maximum number of characters. This
                                    field only applies to `short_answer` and
                                    `long_answer` polls: 

                                    * For `short_answer` polls, a maximum of 500
                                    characters. 

                                    * For `long_answer` polls, a maximum of 2,000
                                    characters.
                                  example: 200
                                answer_min_character:
                                  minimum: 1
                                  type: integer
                                  description: >-
                                    The allowed minimum number of characters. This
                                    field only applies to `short_answer` and
                                    `long_answer` polls. You must provide at least
                                    a **one** character minimum value.
                                  example: 1
                                answer_required:
                                  type: boolean
                                  description: >-
                                    Whether participants must answer the
                                    question: 

                                    * `true` &mdash; The participant must answer
                                    the question. 

                                    * `false` &mdash; The participant does not
                                    need to answer the question. 


                                    **Note:** 

                                    * When the poll's `type` value is `1` (Poll),
                                    this value defaults to `true`. 

                                    * When the poll's `type` value is the `2`
                                    (Advanced Poll) or `3` (Quiz) values, this
                                    value defaults to `false`.
                                  example: false
                                  default: false
                                answers:
                                  minItems: 2
                                  type: array
                                  description: >-
                                    The poll question's available answers. This
                                    field requires a **minimum** of two answers. 


                                    * For `single` and `multiple` polls, you can
                                    only provide a maximum of 10 answers. 

                                    * For `matching` polls, you can only provide a
                                    maximum of 16 answers. 

                                    * For `rank_order` polls, you can only provide
                                    a maximum of seven answers.
                                  items:
                                    type: string
                                    example: Extremely useful
                                case_sensitive:
                                  type: boolean
                                  description: >-
                                    Whether the correct answer is case sensitive.
                                    This field only applies to `fill_in_the_blank`
                                    polls: 

                                    * `true` &mdash; The answer is
                                    case-sensitive. 

                                    * `false` &mdash; The answer is not
                                    case-sensitive. 


                                    This value defaults to `false`.
                                  example: false
                                  default: false
                                name:
                                  maxLength: 255
                                  type: string
                                  description: >-
                                    The poll question, up to 255 characters. 


                                    For `fill_in_the_blank` polls, this field is
                                    the poll's question. For each value that the
                                    user must fill in, ensure that there are the
                                    same number of `right_answers` values.
                                  example: How useful was this meeting?
                                prompts:
                                  type: array
                                  description: >-
                                    Information about the prompt questions. This
                                    field only applies to `matching` and
                                    `rank_order` polls. You **must** provide a
                                    minimum of two prompts, up to a maximum of 10
                                    prompts.
                                  items:
                                    type: object
                                    properties:
                                      prompt_question:
                                        type: string
                                        description: The question prompt's title.
                                        example: How are you?
                                      prompt_right_answers:
                                        type: array
                                        description: >-
                                          The question prompt's correct answers: 

                                          * For `matching` polls, you must provide
                                          a minimum of two correct answers, up to
                                          a maximum of 10 correct answers. 

                                          * For `rank_order` polls, you can only
                                          provide one correct answer.
                                        items:
                                          type: string
                                          example: Good
                                rating_max_label:
                                  type: string
                                  description: >-
                                    The high score label used for the
                                    `rating_max_value` field. 


                                    This field only applies to the `rating_scale`
                                    poll.
                                  example: Extremely Likely
                                rating_max_value:
                                  maximum: 10
                                  type: integer
                                  description: >-
                                    The rating scale's maximum value, up to a
                                    maximum value of 10. 


                                    This field only applies to the `rating_scale`
                                    poll.
                                  example: 4
                                rating_min_label:
                                  type: string
                                  description: >-
                                    The low score label used for the
                                    `rating_min_value` field. 


                                    This field only applies to the `rating_scale`
                                    poll.
                                  example: Not likely
                                rating_min_value:
                                  minimum: 0
                                  type: integer
                                  description: >-
                                    The rating scale's minimum value. This value
                                    cannot be less than zero. 


                                    This field only applies to the `rating_scale`
                                    poll.
                                  example: 0
                                right_answers:
                                  minItems: 1
                                  type: array
                                  description: >-
                                    The poll question's correct answer(s). This
                                    field is **required** if the poll's `type`
                                    value is `3` (Quiz). 

                                     For `single` and `matching` polls, this field only accepts one answer.
                                  items:
                                    type: string
                                    example: Good
                                show_as_dropdown:
                                  type: boolean
                                  description: >-
                                    Whether to display the radio selection as a
                                    drop-down box: 

                                    * `true` &mdash; Show as a drop-down box. 

                                    * `false` &mdash; Do not show as a drop-down
                                    box. 


                                    This value defaults to `false`.
                                  example: false
                                  default: false
                                type:
                                  type: string
                                  description: >-
                                    The poll's question and answer type: 

                                    * `single` &mdash; Single choice. 

                                    * `multiple` &mdash; Multiple choice. 

                                    * `matching` &mdash; Matching. 

                                    * `rank_order` &mdash; Rank order. 

                                    * `short_answer` &mdash; Short answer. 

                                    * `long_answer` &mdash; Long answer. 

                                    * `fill_in_the_blank` &mdash; Fill in the
                                    blank. 

                                    * `rating_scale` &mdash; Rating scale.
                                  example: single
                                  extensions:
                                    x-enum-descriptions:
                                      - Single choice
                                      - Multiple choice
                                      - Matching
                                      - Rank order
                                      - Short answer
                                      - Long answer
                                      - Fill in the blank
                                      - Rating scale
                                  enum:
                                    - single
                                    - multiple
                                    - matching
                                    - rank_order
                                    - short_answer
                                    - long_answer
                                    - fill_in_the_blank
                                    - rating_scale
                          title:
                            maxLength: 64
                            type: string
                            description: The poll's title, up to 64 characters.
                            example: Learn something new
                        title: Meeting and Webinar Polling Object
                        description: Information about meeting and webinar polling.
                    total_records:
                      type: integer
                      description: The number of all records available across pages
                      example: 1
                  title: Poll List
                  description: Poll List
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `4400` <br>
               Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. <br>
          '404':
            description: |-
              **HTTP Status Code:** `404` <br>
               Not Found 

               
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_polls
            - webinar:read:list_polls:admin
      post:
        tags:
          - Webinars
        summary: Create a webinar's poll
        description: >-
          Create a
          [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
          for a webinar.  
             
           


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:** `webinar:write:poll`,`webinar:write:poll:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarPollCreate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          description: Webinar poll object.
          content:
            application/json:
              schema:
                title: Meeting and webinar polling object.
                type: object
                properties:
                  anonymous:
                    type: boolean
                    description: >-
                      Allow meeting participants to answer poll questions
                      anonymously. 


                      This value defaults to `false`.
                    example: true
                    default: false
                  poll_type:
                    type: integer
                    description: >-
                      The type of poll. 

                      * `1` - Poll. 

                      * `2` - Advanced Poll. This feature must be enabled in your
                      Zoom account. 

                      * `3` - Quiz. This feature must be enabled in your Zoom
                      account. 

                       This value defaults to `1`.
                    example: 2
                    enum:
                      - 1
                      - 2
                      - 3
                  questions:
                    type: array
                    description: Information about the poll's questions.
                    items:
                      type: object
                      properties:
                        answer_max_character:
                          type: integer
                          description: >-
                            The allowed maximum number of characters. This field
                            only applies to `short_answer` and `long_answer`
                            polls: 

                            * For `short_answer` polls, a maximum of 500
                            characters. 

                            * For `long_answer` polls, a maximum of 2,000
                            characters.
                          example: 200
                        answer_min_character:
                          minimum: 1
                          type: integer
                          description: >-
                            The allowed minimum number of characters. This field
                            only applies to `short_answer` and `long_answer`
                            polls. You must provide at least a **one** character
                            minimum value.
                          example: 1
                        answer_required:
                          type: boolean
                          description: >-
                            Whether participants must answer the question. 

                            * `true` - The participant must answer the question. 

                            * `false` - The participant does not need to answer
                            the question. 


                            **Note:** 

                            * When the poll's `type` value is `1` (Poll), this
                            value defaults to `true`. 

                            * When the poll's `type` value is the `2` (Advanced
                            Poll) or `3` (Quiz) values, this value defaults to
                            `false`.
                          example: false
                          default: false
                        answers:
                          minItems: 2
                          type: array
                          description: >-
                            The poll question's available answers. This field
                            requires a **minimum** of two answers. 


                            * For `single` and `multiple` polls, you can only
                            provide a maximum of 10 answers. 

                            * For `matching` polls, you can only provide a maximum
                            of 16 answers. 

                            * For `rank_order` polls, you can only provide a
                            maximum of seven answers.
                          items:
                            type: string
                            example: Extremely useful
                        case_sensitive:
                          type: boolean
                          description: >-
                            Whether the correct answer is case sensitive. This
                            field only applies to `fill_in_the_blank` polls. 

                            * `true` - The answer is case-sensitive. 

                            * `false` - The answer is not case-sensitive. 


                            This value defaults to `false`.
                          example: false
                          default: false
                        name:
                          maxLength: 255
                          type: string
                          description: >-
                            The poll question, up to 255 characters. 


                            For `fill_in_the_blank` polls, this field is the
                            poll's question. For each value that the user must
                            fill in, ensure that there are the same number of
                            `right_answers` values.
                          example: How useful was this meeting?
                        prompts:
                          type: array
                          description: >-
                            Information about the prompt questions. This field
                            only applies to `matching` and `rank_order` polls. You
                            **must** provide a minimum of two prompts, up to a
                            maximum of 10 prompts.
                          items:
                            type: object
                            properties:
                              prompt_question:
                                type: string
                                description: The question prompt's title.
                                example: How are you?
                              prompt_right_answers:
                                type: array
                                description: >-
                                  The question prompt's correct answers: 

                                  * For `matching` polls, you must provide a
                                  minimum of two correct answers, up to a maximum
                                  of 10 correct answers. 

                                  * For `rank_order` polls, you can only provide
                                  one correct answer.
                                items:
                                  type: string
                                  example: Good
                        rating_max_label:
                          type: string
                          description: >-
                            The high score label used for the `rating_max_value`
                            field. 


                            This field only applies to the `rating_scale` poll.
                          example: Extremely Likely
                        rating_max_value:
                          maximum: 10
                          type: integer
                          description: >-
                            The rating scale's maximum value, up to a maximum
                            value of 10. 


                            This field only applies to the `rating_scale` poll.
                          example: 4
                        rating_min_label:
                          type: string
                          description: >-
                            The low score label used for the `rating_min_value`
                            field. 


                            This field only applies to the `rating_scale` poll.
                          example: Not likely
                        rating_min_value:
                          minimum: 0
                          type: integer
                          description: >-
                            The rating scale's minimum value. This value cannot be
                            less than zero. 


                            This field only applies to the `rating_scale` poll.
                          example: 0
                        right_answers:
                          minItems: 1
                          type: array
                          description: >-
                            The poll question's correct answer(s). This field is
                            **required** if the poll's `type` value is `3`
                            (Quiz). 

                             For `single` and `matching` polls, this field only accepts one answer.
                          items:
                            type: string
                            example: Good
                        show_as_dropdown:
                          type: boolean
                          description: >-
                            Whether to display the radio selection as a drop-down
                            box. 

                            * `true` - Show as a drop-down box. 

                            * `false` - Do not show as a drop-down box. 


                            This value defaults to `false`.
                          example: false
                          default: false
                        type:
                          type: string
                          description: |-
                            The poll's question and answer type. 
                            * `single` - Single choice. 
                            * `multiple` - Multiple choice. 
                            * `matching` - Matching. 
                            * `rank_order` - Rank order. 
                            * `short_answer` - Short answer. 
                            * `long_answer` - Long answer. 
                            * `fill_in_the_blank` - Fill in the blank. 
                            * `rating_scale` - Rating scale.
                          example: single
                          extensions:
                            x-enum-descriptions:
                              - Single choice
                              - Multiple choice
                              - Matching
                              - Rank order
                              - Short answer
                              - Long answer
                              - Fill in the blank
                              - Rating scale
                          enum:
                            - single
                            - multiple
                            - matching
                            - rank_order
                            - short_answer
                            - long_answer
                            - fill_in_the_blank
                            - rating_scale
                  title:
                    maxLength: 64
                    type: string
                    description: The poll's title, up to 64 characters.
                    example: Learn something new
                description: Information about meeting and webinar polling.
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`  
               
              Webinar Poll Created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Webinar Poll ID
                      example: QalIoKWLTJehBJ8e1xRrbQ
                    status:
                      type: string
                      description: |-
                        Status of the Webinar Poll:  
                         `notstart` - Poll not started  
                         `started` - Poll started  
                         `ended` - Poll ended  
                         `sharing` - Sharing poll results
                      example: notstart
                      extensions:
                        x-enum-descriptions:
                          - Poll not start
                          - Poll started
                          - Poll ended
                          - Poll is sharing
                      enum:
                        - notstart
                        - started
                        - ended
                        - sharing
                    anonymous:
                      type: boolean
                      description: >-
                        Allow meeting participants to answer poll questions
                        anonymously. 


                        This value defaults to `false`.
                      example: true
                      default: false
                    poll_type:
                      type: integer
                      description: >-
                        The type of poll. 

                        * `1` - Poll. 

                        * `2` - Advanced Poll. This feature must be enabled in
                        your Zoom account. 

                        * `3` - Quiz. This feature must be enabled in your Zoom
                        account. 

                         This value defaults to `1`.
                      example: 2
                      enum:
                        - 1
                        - 2
                        - 3
                    questions:
                      type: array
                      description: Information about the poll's questions.
                      items:
                        type: object
                        properties:
                          answer_max_character:
                            type: integer
                            description: >-
                              The allowed maximum number of characters. This field
                              only applies to `short_answer` and `long_answer`
                              polls: 

                              * For `short_answer` polls, a maximum of 500
                              characters. 

                              * For `long_answer` polls, a maximum of 2,000
                              characters.
                            example: 200
                          answer_min_character:
                            minimum: 1
                            type: integer
                            description: >-
                              The allowed minimum number of characters. This field
                              only applies to `short_answer` and `long_answer`
                              polls. You must provide at least a **one** character
                              minimum value.
                            example: 1
                          answer_required:
                            type: boolean
                            description: >-
                              Whether participants must answer the question. 

                              * `true` - The participant must answer the
                              question. 

                              * `false` - The participant does not need to answer
                              the question. 


                              **Note:** 

                              * When the poll's `type` value is `1` (Poll), this
                              value defaults to `true`. 

                              * When the poll's `type` value is the `2` (Advanced
                              Poll) or `3` (Quiz) values, this value defaults to
                              `false`.
                            example: false
                            default: false
                          answers:
                            minItems: 2
                            type: array
                            description: >-
                              The poll question's available answers. This field
                              requires a **minimum** of two answers. 


                              * For `single` and `multiple` polls, you can only
                              provide a maximum of 10 answers. 

                              * For `matching` polls, you can only provide a
                              maximum of 16 answers. 

                              * For `rank_order` polls, you can only provide a
                              maximum of seven answers.
                            items:
                              type: string
                              example: Extremely useful
                          case_sensitive:
                            type: boolean
                            description: >-
                              Whether the correct answer is case sensitive. This
                              field only applies to `fill_in_the_blank` polls. 

                              * `true` - The answer is case-sensitive. 

                              * `false` - The answer is not case-sensitive. 


                              This value defaults to `false`.
                            example: false
                            default: false
                          name:
                            maxLength: 255
                            type: string
                            description: >-
                              The poll question, up to 255 characters. 


                              For `fill_in_the_blank` polls, this field is the
                              poll's question. For each value that the user must
                              fill in, ensure that there are the same number of
                              `right_answers` values.
                            example: How useful was this meeting?
                          prompts:
                            type: array
                            description: >-
                              Information about the prompt questions. This field
                              only applies to `matching` and `rank_order` polls.
                              You **must** provide a minimum of two prompts, up to
                              a maximum of 10 prompts.
                            items:
                              type: object
                              properties:
                                prompt_question:
                                  type: string
                                  description: The question prompt's title.
                                  example: How are you?
                                prompt_right_answers:
                                  type: array
                                  description: >-
                                    The question prompt's correct answers: 

                                    * For `matching` polls, you must provide a
                                    minimum of two correct answers, up to a
                                    maximum of 10 correct answers. 

                                    * For `rank_order` polls, you can only provide
                                    one correct answer.
                                  items:
                                    type: string
                                    example: Good
                          rating_max_label:
                            type: string
                            description: >-
                              The high score label used for the `rating_max_value`
                              field. 


                              This field only applies to the `rating_scale` poll.
                            example: Extremely Likely
                          rating_max_value:
                            maximum: 10
                            type: integer
                            description: >-
                              The rating scale's maximum value, up to a maximum
                              value of 10. 


                              This field only applies to the `rating_scale` poll.
                            example: 4
                          rating_min_label:
                            type: string
                            description: >-
                              The low score label used for the `rating_min_value`
                              field. 


                              This field only applies to the `rating_scale` poll.
                            example: Not likely
                          rating_min_value:
                            minimum: 0
                            type: integer
                            description: >-
                              The rating scale's minimum value. This value cannot
                              be less than zero. 


                              This field only applies to the `rating_scale` poll.
                            example: 0
                          right_answers:
                            minItems: 1
                            type: array
                            description: >-
                              The poll question's correct answer(s). This field is
                              **required** if the poll's `type` value is `3`
                              (Quiz). 

                               For `single` and `matching` polls, this field only accepts one answer.
                            items:
                              type: string
                              example: Good
                          show_as_dropdown:
                            type: boolean
                            description: >-
                              Whether to display the radio selection as a
                              drop-down box. 

                              * `true` - Show as a drop-down box. 

                              * `false` - Do not show as a drop-down box. 


                              This value defaults to `false`.
                            example: false
                            default: false
                          type:
                            type: string
                            description: |-
                              The poll's question and answer type. 
                              * `single` - Single choice. 
                              * `multiple` - Multiple choice. 
                              * `matching` - Matching. 
                              * `rank_order` - Rank order. 
                              * `short_answer` - Short answer. 
                              * `long_answer` - Long answer. 
                              * `fill_in_the_blank` - Fill in the blank. 
                              * `rating_scale` - Rating scale.
                            example: single
                            extensions:
                              x-enum-descriptions:
                                - Single choice
                                - Multiple choice
                                - Matching
                                - Rank order
                                - Short answer
                                - Long answer
                                - Fill in the blank
                                - Rating scale
                            enum:
                              - single
                              - multiple
                              - matching
                              - rank_order
                              - short_answer
                              - long_answer
                              - fill_in_the_blank
                              - rating_scale
                    title:
                      maxLength: 64
                      type: string
                      description: The poll's title, up to 64 characters.
                      example: Learn something new
                  title: Meeting and webinar polling object.
                  description: Information about meeting and webinar polling.
          '400':
            description: >
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `4400` <br>
               * Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. 
              * Advanced webinar polls disabled. To enable this feature, enable
              the "Allow host to create advanced polls and quizzes" setting in the
              Zoom web portal's "Settings" interface. <br>
          '404':
            description: |-
              **HTTP Status Code:** `404` <br>
               Not Found 

               
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:write:poll
            - webinar:write:poll:admin
    /webinars/{webinarId}/polls/{pollId}:
      get:
        tags:
          - Webinars
        summary: Get a webinar poll
        description: >-
          Get a webinar's
          [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars)
          details.  
             
           


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:** `webinar:read:poll`,`webinar:read:poll:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarPollGet
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: pollId
            in: path
            description: The poll ID
            required: true
            schema:
              type: string
              example: QalIoKWLTJehBJ8e1xRrbQ
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`  
               
              Webinar Poll object returned
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Webinar Poll ID
                      example: QalIoKWLTJehBJ8e1xRrbQ
                    status:
                      type: string
                      description: |-
                        Status of the Webinar Poll:  
                         `notstart` - Poll not started  
                         `started` - Poll started  
                         `ended` - Poll ended  
                         `sharing` - Sharing poll results
                      example: notstart
                      extensions:
                        x-enum-descriptions:
                          - Poll not start
                          - Poll started
                          - Poll ended
                          - Poll is sharing
                      enum:
                        - notstart
                        - started
                        - ended
                        - sharing
                    anonymous:
                      type: boolean
                      description: >-
                        Allow meeting participants to answer poll questions
                        anonymously. 


                        This value defaults to `false`.
                      example: true
                      default: false
                    poll_type:
                      type: integer
                      description: >-
                        The type of poll: 

                        * `1` &mdash; Poll. 

                        * `2` &mdash; Advanced Poll. This feature must be enabled
                        in your Zoom account. 

                        * `3` &mdash; Quiz. This feature must be enabled in your
                        Zoom account. 

                         This value defaults to `1`.
                      example: 2
                      enum:
                        - 1
                        - 2
                        - 3
                    questions:
                      type: array
                      description: Information about the poll's questions.
                      items:
                        type: object
                        properties:
                          answer_max_character:
                            type: integer
                            description: >-
                              The allowed maximum number of characters. This field
                              only applies to `short_answer` and `long_answer`
                              polls: 

                              * For `short_answer` polls, a maximum of 500
                              characters. 

                              * For `long_answer` polls, a maximum of 2,000
                              characters.
                            example: 200
                          answer_min_character:
                            minimum: 1
                            type: integer
                            description: >-
                              The allowed minimum number of characters. This field
                              only applies to `short_answer` and `long_answer`
                              polls. You must provide at least a **one** character
                              minimum value.
                            example: 1
                          answer_required:
                            type: boolean
                            description: >-
                              Whether participants must answer the question: 

                              * `true` &mdash; The participant must answer the
                              question. 

                              * `false` &mdash; The participant does not need to
                              answer the question. 


                              **Note:** 

                              * When the poll's `type` value is `1` (Poll), this
                              value defaults to `true`. 

                              * When the poll's `type` value is the `2` (Advanced
                              Poll) or `3` (Quiz) values, this value defaults to
                              `false`.
                            example: false
                            default: false
                          answers:
                            minItems: 2
                            type: array
                            description: >-
                              The poll question's available answers. This field
                              requires a **minimum** of two answers. 


                              * For `single` and `multiple` polls, you can only
                              provide a maximum of 10 answers. 

                              * For `matching` polls, you can only provide a
                              maximum of 16 answers. 

                              * For `rank_order` polls, you can only provide a
                              maximum of seven answers.
                            items:
                              type: string
                              example: Extremely useful
                          case_sensitive:
                            type: boolean
                            description: >-
                              Whether the correct answer is case sensitive. This
                              field only applies to `fill_in_the_blank` polls: 

                              * `true` &mdash; The answer is case-sensitive. 

                              * `false` &mdash; The answer is not case-sensitive. 


                              This value defaults to `false`.
                            example: false
                            default: false
                          name:
                            maxLength: 255
                            type: string
                            description: >-
                              The poll question, up to 255 characters. 


                              For `fill_in_the_blank` polls, this field is the
                              poll's question. For each value that the user must
                              fill in, ensure that there are the same number of
                              `right_answers` values.
                            example: How useful was this meeting?
                          prompts:
                            type: array
                            description: >-
                              Information about the prompt questions. This field
                              only applies to `matching` and `rank_order` polls.
                              You **must** provide a minimum of two prompts, up to
                              a maximum of 10 prompts.
                            items:
                              type: object
                              properties:
                                prompt_question:
                                  type: string
                                  description: The question prompt's title.
                                  example: How are you?
                                prompt_right_answers:
                                  type: array
                                  description: >-
                                    The question prompt's correct answers: 

                                    * For `matching` polls, you must provide a
                                    minimum of two correct answers, up to a
                                    maximum of 10 correct answers. 

                                    * For `rank_order` polls, you can only provide
                                    one correct answer.
                                  items:
                                    type: string
                                    example: Good
                          rating_max_label:
                            type: string
                            description: >-
                              The high score label used for the `rating_max_value`
                              field. 


                              This field only applies to the `rating_scale` poll.
                            example: Extremely Likely
                          rating_max_value:
                            maximum: 10
                            type: integer
                            description: >-
                              The rating scale's maximum value, up to a maximum
                              value of 10. 


                              This field only applies to the `rating_scale` poll.
                            example: 4
                          rating_min_label:
                            type: string
                            description: >-
                              The low score label used for the `rating_min_value`
                              field. 


                              This field only applies to the `rating_scale` poll.
                            example: Not likely
                          rating_min_value:
                            minimum: 0
                            type: integer
                            description: >-
                              The rating scale's minimum value. This value cannot
                              be less than zero. 


                              This field only applies to the `rating_scale` poll.
                            example: 0
                          right_answers:
                            minItems: 1
                            type: array
                            description: >-
                              The poll question's correct answer(s). This field is
                              **required** if the poll's `type` value is `3`
                              (Quiz). 

                               For `single` and `matching` polls, this field only accepts one answer.
                            items:
                              type: string
                              example: Good
                          show_as_dropdown:
                            type: boolean
                            description: >-
                              Whether to display the radio selection as a
                              drop-down box: 

                              * `true` &mdash; Show as a drop-down box. 

                              * `false` &mdash; Do not show as a drop-down box. 


                              This value defaults to `false`.
                            example: false
                            default: false
                          type:
                            type: string
                            description: |-
                              The poll's question and answer type: 
                              * `single` &mdash; Single choice. 
                              * `multiple` &mdash; Multiple choice. 
                              * `matching` &mdash; Matching. 
                              * `rank_order` &mdash; Rank order. 
                              * `short_answer` &mdash; Short answer. 
                              * `long_answer` &mdash; Long answer. 
                              * `fill_in_the_blank` &mdash; Fill in the blank. 
                              * `rating_scale` &mdash; Rating scale.
                            example: single
                            extensions:
                              x-enum-descriptions:
                                - Single choice
                                - Multiple choice
                                - Matching
                                - Rank order
                                - Short answer
                                - Long answer
                                - Fill in the blank
                                - Rating scale
                            enum:
                              - single
                              - multiple
                              - matching
                              - rank_order
                              - short_answer
                              - long_answer
                              - fill_in_the_blank
                              - rating_scale
                    title:
                      maxLength: 64
                      type: string
                      description: The poll's title, up to 64 characters.
                      example: Learn something new
                  title: Meeting and Webinar Polling Object
                  description: Information about meeting and webinar polling.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `4400` <br>
               Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:poll
            - webinar:read:poll:admin
      put:
        tags:
          - Webinars
        summary: Update a webinar poll
        description: >-
          Update a webinar's
          [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  
             
           


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:** `webinar:update:poll`,`webinar:update:poll:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarPollUpdate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: pollId
            in: path
            description: The poll ID
            required: true
            schema:
              type: string
              example: QalIoKWLTJehBJ8e1xRrbQ
        requestBody:
          description: Webinar Poll
          content:
            application/json:
              schema:
                title: Meeting and Webinar Polling Object
                type: object
                properties:
                  anonymous:
                    type: boolean
                    description: >-
                      Allow meeting participants to answer poll questions
                      anonymously. 


                      This value defaults to `false`.
                    example: true
                    default: false
                  poll_type:
                    type: integer
                    description: >-
                      The type of poll: 

                      * `1` &mdash; Poll. 

                      * `2` &mdash; Advanced Poll. This feature must be enabled in
                      your Zoom account. 

                      * `3` &mdash; Quiz. This feature must be enabled in your
                      Zoom account. 

                       This value defaults to `1`.
                    example: 2
                    enum:
                      - 1
                      - 2
                      - 3
                  questions:
                    type: array
                    description: Information about the poll's questions.
                    items:
                      type: object
                      properties:
                        answer_max_character:
                          type: integer
                          description: >-
                            The allowed maximum number of characters. This field
                            only applies to `short_answer` and `long_answer`
                            polls: 

                            * For `short_answer` polls, a maximum of 500
                            characters. 

                            * For `long_answer` polls, a maximum of 2,000
                            characters.
                          example: 200
                        answer_min_character:
                          minimum: 1
                          type: integer
                          description: >-
                            The allowed minimum number of characters. This field
                            only applies to `short_answer` and `long_answer`
                            polls. You must provide at least a **one** character
                            minimum value.
                          example: 1
                        answer_required:
                          type: boolean
                          description: >-
                            Whether participants must answer the question: 

                            * `true` &mdash; The participant must answer the
                            question. 

                            * `false` &mdash; The participant does not need to
                            answer the question. 


                            **Note:** 

                            * When the poll's `type` value is `1` (Poll), this
                            value defaults to `true`. 

                            * When the poll's `type` value is the `2` (Advanced
                            Poll) or `3` (Quiz) values, this value defaults to
                            `false`.
                          example: false
                          default: false
                        answers:
                          minItems: 2
                          type: array
                          description: >-
                            The poll question's available answers. This field
                            requires a **minimum** of two answers. 


                            * For `single` and `multiple` polls, you can only
                            provide a maximum of 10 answers. 

                            * For `matching` polls, you can only provide a maximum
                            of 16 answers. 

                            * For `rank_order` polls, you can only provide a
                            maximum of seven answers.
                          items:
                            type: string
                            example: Extremely useful
                        case_sensitive:
                          type: boolean
                          description: >-
                            Whether the correct answer is case sensitive. This
                            field only applies to `fill_in_the_blank` polls: 

                            * `true` &mdash; The answer is case-sensitive. 

                            * `false` &mdash; The answer is not case-sensitive. 


                            This value defaults to `false`.
                          example: false
                          default: false
                        name:
                          maxLength: 255
                          type: string
                          description: >-
                            The poll question, up to 255 characters. 


                            For `fill_in_the_blank` polls, this field is the
                            poll's question. For each value that the user must
                            fill in, ensure that there are the same number of
                            `right_answers` values.
                          example: How useful was this meeting?
                        prompts:
                          type: array
                          description: >-
                            Information about the prompt questions. This field
                            only applies to `matching` and `rank_order` polls. You
                            **must** provide a minimum of two prompts, up to a
                            maximum of 10 prompts.
                          items:
                            type: object
                            properties:
                              prompt_question:
                                type: string
                                description: The question prompt's title.
                                example: How are you?
                              prompt_right_answers:
                                type: array
                                description: >-
                                  The question prompt's correct answers: 

                                  * For `matching` polls, you must provide a
                                  minimum of two correct answers, up to a maximum
                                  of 10 correct answers. 

                                  * For `rank_order` polls, you can only provide
                                  one correct answer.
                                items:
                                  type: string
                                  example: Good
                        rating_max_label:
                          type: string
                          description: >-
                            The high score label used for the `rating_max_value`
                            field. 


                            This field only applies to the `rating_scale` poll.
                          example: Extremely Likely
                        rating_max_value:
                          maximum: 10
                          type: integer
                          description: >-
                            The rating scale's maximum value, up to a maximum
                            value of 10. 


                            This field only applies to the `rating_scale` poll.
                          example: 4
                        rating_min_label:
                          type: string
                          description: >-
                            The low score label used for the `rating_min_value`
                            field. 


                            This field only applies to the `rating_scale` poll.
                          example: Not likely
                        rating_min_value:
                          minimum: 0
                          type: integer
                          description: >-
                            The rating scale's minimum value. This value cannot be
                            less than zero. 


                            This field only applies to the `rating_scale` poll.
                          example: 0
                        right_answers:
                          minItems: 1
                          type: array
                          description: >-
                            The poll question's correct answer(s). This field is
                            **required** if the poll's `type` value is `3`
                            (Quiz). 

                             For `single` and `matching` polls, this field only accepts one answer.
                          items:
                            type: string
                            example: Good
                        show_as_dropdown:
                          type: boolean
                          description: >-
                            Whether to display the radio selection as a drop-down
                            box: 

                            * `true` &mdash; Show as a drop-down box. 

                            * `false` &mdash; Do not show as a drop-down box. 


                            This value defaults to `false`.
                          example: false
                          default: false
                        type:
                          type: string
                          description: |-
                            The poll's question and answer type: 
                            * `single` &mdash; Single choice. 
                            * `multiple` &mdash; Multiple choice. 
                            * `matching` &mdash; Matching. 
                            * `rank_order` &mdash; Rank order. 
                            * `short_answer` &mdash; Short answer. 
                            * `long_answer` &mdash; Long answer. 
                            * `fill_in_the_blank` &mdash; Fill in the blank. 
                            * `rating_scale` &mdash; Rating scale.
                          example: single
                          extensions:
                            x-enum-descriptions:
                              - Single choice
                              - Multiple choice
                              - Matching
                              - Rank order
                              - Short answer
                              - Long answer
                              - Fill in the blank
                              - Rating scale
                          enum:
                            - single
                            - multiple
                            - matching
                            - rank_order
                            - short_answer
                            - long_answer
                            - fill_in_the_blank
                            - rating_scale
                  title:
                    maxLength: 64
                    type: string
                    description: The poll's title, up to 64 characters.
                    example: Learn something new
                description: Information about meeting and webinar polling.
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Webinar Poll Updated
          '400':
            description: >
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `4400` <br>
               * Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. 
              * Advanced webinar polls disabled. To enable this feature, enable
              the "Allow host to create advanced polls and quizzes" setting in the
              Zoom web portal's "Settings" interface. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:update:poll
            - webinar:update:poll:admin
      delete:
        tags:
          - Webinars
        summary: Delete a webinar poll
        description: >-
          Delete a webinar's
          [poll](https://support.zoom.us/hc/en-us/articles/203749865-Polling-for-Webinars).  
             
           


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:** `webinar:delete:poll`,`webinar:delete:poll:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarPollDelete
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: pollId
            in: path
            description: The poll ID
            required: true
            schema:
              type: string
              example: QalIoKWLTJehBJ8e1xRrbQ
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`  
               
              Webinar Poll deleted
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `4400` <br>
               Webinar polls disabled. To enable this feature, enable the "Webinar Polls/Quizzes" setting in the Zoom web portal's "Settings" interface. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:delete:poll
            - webinar:delete:poll:admin
    /webinars/{webinarId}/registrants:
      get:
        tags:
          - Webinars
        summary: List webinar registrants
        description: >-
          List all users that have registered for a given webinar. Zoom users with
          a [webinar plan](https://zoom.us/webinar) have access to creating and
          managing webinars. The webinar functionality lets a host broadcast a
          Zoom meeting to up to 10,000 attendees. Scheduling a [webinar with
          registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
          requires your registrants to complete a brief form before receiving the
          link to join the webinar.  



          **Prerequisites**

          * Pro or higher plan with a Webinar Add-on.  
           


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_registrants`,`webinar:read:list_registrants:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: webinarRegistrants
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: occurrence_id
            in: query
            description: The meeting or webinar occurrence ID.
            required: false
            schema:
              type: string
              example: '1648194360000'
          - name: status
            in: query
            description: |-
              Query by the registrant's status. 
              * `pending` - The registration is pending. 
              * `approved` - The registrant is approved. 
              * `denied` - The registration is denied.
            required: false
            schema:
              type: string
              example: pending
              default: approved
              enum:
                - pending
                - approved
                - denied
          - name: tracking_source_id
            in: query
            description: >-
              The tracking source ID for the registrants. Useful if you share the
              webinar registration page in multiple locations. See [Creating
              source tracking links for webinar
              registration](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-source-tracking-links-for-webinar-registration)
              for details.
            required: false
            schema:
              type: string
              example: '5516482804110'
          - name: page_size
            in: query
            description: The number of records returned within a single API call.
            required: false
            schema:
              maximum: 300
              type: integer
              example: 30
              default: 30
          - name: page_number
            in: query
            description: >-
              **Deprecated** This field will be deprecated. We will no longer
              support this field in a future release. Instead, use the
              `next_page_token` for pagination.
            required: false
            schema:
              type: integer
              example: 1
              default: 1
          - name: next_page_token
            in: query
            description: >-
              Use the next page token to paginate through large result sets. A
              next page token is returned whenever the set of available results
              exceeds the current page size. This token's expiration period is 15
              minutes.
            required: false
            schema:
              type: string
              example: IAfJX3jsOLW7w3dokmFl84zOa0MAVGyMEB2
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200`  
               
              Webinar plan subscription is missing. Enable webinar for this user
              once the subscription is added:{userId}.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    next_page_token:
                      type: string
                      description: >-
                        Use the next page token to paginate through large result
                        sets. A next page token is returned whenever the set of
                        available results exceeds the current page size. This
                        token's expiration period is 15 minutes.
                      example: w7587w4eiyfsudgf
                    page_count:
                      type: integer
                      description: The number of pages returned for the request made.
                      example: 1
                    page_number:
                      type: integer
                      description: >-
                        **Deprecated** This field will be deprecated. We will no
                        longer support this field in a future release. Instead,
                        use `next_page_token` for pagination.
                      example: 1
                      deprecated: true
                      default: 1
                    page_size:
                      maximum: 300
                      type: integer
                      description: The number of records returned with a single API call.
                      example: 30
                      default: 30
                    total_records:
                      type: integer
                      description: >-
                        The total number of all the records available across
                        pages.
                      example: 20
                    registrants:
                      type: array
                      description: List of registrant objects.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Registrant ID.
                            example: 9tboDiHUQAeOnbmudzWa5g
                          address:
                            type: string
                            description: The registrant's address.
                            example: 1800 Amphibious Blvd.
                          city:
                            type: string
                            description: The registrant's city.
                            example: Mountain View
                          comments:
                            type: string
                            description: The registrant's questions and comments.
                            example: Looking forward to the discussion.
                          country:
                            type: string
                            description: >-
                              The registrant's two-letter ISO [country
                              code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
                            example: US
                          custom_questions:
                            type: array
                            description: Information about custom questions.
                            items:
                              type: object
                              properties:
                                title:
                                  type: string
                                  description: The title of the custom question.
                                  example: What do you hope to learn from this?
                                value:
                                  maxLength: 128
                                  type: string
                                  description: >-
                                    The custom question's response value. This has
                                    a limit of 128 characters.
                                  example: >-
                                    Look forward to learning how you come up with
                                    new recipes and what other services you offer.
                              description: Information about custom questions.
                          email:
                            maxLength: 128
                            type: string
                            description: >-
                              The registrant's email address. See [Email address
                              display
                              rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                              for return value details.
                            format: email
                            example: jchill@example.com
                          first_name:
                            maxLength: 64
                            type: string
                            description: The registrant's first name.
                            example: Jill
                          industry:
                            type: string
                            description: The registrant's industry.
                            example: Food
                          job_title:
                            type: string
                            description: The registrant's job title.
                            example: Chef
                          last_name:
                            maxLength: 64
                            type: string
                            description: The registrant's last name.
                            example: Chill
                          no_of_employees:
                            type: string
                            description: |-
                              The registrant's number of employees. 
                              * `1-20` 
                              * `21-50` 
                              * `51-100` 
                              * `101-250` 
                              * `251-500` 
                              * `501-1,000` 
                              * `1,001-5,000` 
                              * `5,001-10,000` 
                              * `More than 10,000`
                            example: 1-20
                            enum:
                              - ''
                              - 1-20
                              - 21-50
                              - 51-100
                              - 101-250
                              - 251-500
                              - 501-1,000
                              - 1,001-5,000
                              - 5,001-10,000
                              - More than 10,000
                          org:
                            type: string
                            description: The registrant's organization.
                            example: Cooking Org
                          phone:
                            type: string
                            description: The registrant's phone number.
                            example: '5550100'
                          purchasing_time_frame:
                            type: string
                            description: |-
                              The registrant's purchasing time frame. 
                              * `Within a month.` 
                              * `1-3 months.` 
                              * `4-6 months.` 
                              * `More than 6 months.` 
                              * `No timeframe.`
                            example: 1-3 months
                            enum:
                              - ''
                              - Within a month
                              - 1-3 months
                              - 4-6 months
                              - More than 6 months
                              - No timeframe
                          role_in_purchase_process:
                            type: string
                            description: |-
                              The registrant's role in the purchase process. 
                              * `Decision maker` 
                              * `Evaluator/Recommender.` 
                              * `Influencer.` 
                              * `Not involved.`
                            example: Influencer
                            enum:
                              - ''
                              - Decision Maker
                              - Evaluator/Recommender
                              - Influencer
                              - Not involved
                          state:
                            type: string
                            description: The registrant's state or province.
                            example: CA
                          status:
                            type: string
                            description: |-
                              The status of the registrant's registration.   
                                `approved` - User has been successfully approved for the webinar.  
                                `pending` -  The registration is still pending.  
                                `denied` - User has been denied from joining the webinar.
                            example: approved
                            enum:
                              - approved
                              - denied
                              - pending
                          zip:
                            type: string
                            description: The registrant's ZIP or postal code.
                            example: '94045'
                          create_time:
                            type: string
                            description: The time when the registrant registered.
                            format: date-time
                            example: '2022-03-22T05:59:09Z'
                          join_url:
                            type: string
                            description: >-
                              The URL that an approved registrant can use to join
                              the meeting or webinar.
                            format: string
                            example: https://example.com/j/11111
                        required:
                          - email
                          - first_name
                        description: ' Registrant.'
                  description: List of users.
                  title: Registration list
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account.<br> <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_registrants
            - webinar:read:list_registrants:admin
      post:
        tags:
          - Webinars
        summary: Add a webinar registrant
        description: >-
          Create and submit a user's registration for a webinar. Zoom users with a
          [Webinar plan](https://zoom.us/webinar) have access to creating and
          managing webinars. Webinars allow hosts to broadcast a Zoom meeting to
          up to 10,000 attendees. Scheduling a [webinar with
          registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
          requires your registrants to complete a brief form before receiving the
          link to join the webinar. 


          **Prerequisites:** 

          * A Pro or higher plan with the Webinar add-on.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:write:registrant`,`webinar:write:registrant:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarRegistrantCreate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: occurrence_ids
            in: query
            description: >-
              A comma-separated list of webinar occurrence IDs. Get this value
              with the [Get a webinar](https://developers.zoom.us) API. Make sure
              the `registration_type` is 3 if updating multiple occurrences with
              this API.
            required: false
            schema:
              type: string
              example: '1648538280000'
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - email
                  - first_name
                type: object
                properties:
                  first_name:
                    maxLength: 64
                    type: string
                    description: The registrant's first name.
                    example: Jill
                  last_name:
                    maxLength: 64
                    type: string
                    description: The registrant's last name.
                    example: Chill
                  email:
                    maxLength: 128
                    type: string
                    description: The registrant's email address.
                    format: email
                    example: jchill@example.com
                  address:
                    type: string
                    description: The registrant's address.
                    example: 1800 Amphibious Blvd.
                  city:
                    type: string
                    description: The registrant's city.
                    example: Mountain View
                  state:
                    type: string
                    description: The registrant's state or province.
                    example: CA
                  zip:
                    type: string
                    description: The registrant's ZIP or postal code.
                    example: '94045'
                  country:
                    type: string
                    description: >-
                      The registrant's two-letter [country
                      code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
                    example: US
                  phone:
                    type: string
                    description: The registrant's phone number.
                    example: '5550100'
                  comments:
                    type: string
                    description: The registrant's questions and comments.
                    example: Looking forward to the discussion.
                  custom_questions:
                    type: array
                    description: Information about custom questions.
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: The custom question's title.
                          example: What do you hope to learn from this?
                        value:
                          maxLength: 128
                          type: string
                          description: >-
                            The custom question's response value. This has a limit
                            of 128 characters.
                          example: >-
                            Look forward to learning how you come up with new
                            recipes and what other services you offer.
                      description: Information about custom questions.
                  industry:
                    type: string
                    description: The registrant's industry.
                    example: Food
                  job_title:
                    type: string
                    description: The registrant's job title.
                    example: Chef
                  no_of_employees:
                    type: string
                    description: |-
                      The registrant's number of employees: 
                      * `1-20` 
                      * `21-50` 
                      * `51-100` 
                      * `101-500` 
                      * `500-1,000` 
                      * `1,001-5,000` 
                      * `5,001-10,000` 
                      * `More than 10,000`
                    example: 1-20
                    enum:
                      - ''
                      - 1-20
                      - 21-50
                      - 51-100
                      - 101-500
                      - 500-1,000
                      - 1,001-5,000
                      - 5,001-10,000
                      - More than 10,000
                  org:
                    type: string
                    description: The registrant's organization.
                    example: Cooking Org
                  purchasing_time_frame:
                    type: string
                    description: |-
                      The registrant's purchasing time frame: 
                      * `Within a month` 
                      * `1-3 months` 
                      * `4-6 months` 
                      * `More than 6 months` 
                      * `No timeframe`
                    example: 1-3 months
                    enum:
                      - ''
                      - Within a month
                      - 1-3 months
                      - 4-6 months
                      - More than 6 months
                      - No timeframe
                  role_in_purchase_process:
                    type: string
                    description: |-
                      The registrant's role in the purchase process: 
                      * `Decision Maker` 
                      * `Evaluator/Recommender` 
                      * `Influencer` 
                      * `Not involved`
                    example: Influencer
                    enum:
                      - ''
                      - Decision Maker
                      - Evaluator/Recommender
                      - Influencer
                      - Not involved
                  language:
                    type: string
                    description: >-
                      The registrant's language preference for confirmation
                      emails: 

                      * `en-US` - English (US) 

                      * `de-DE` - German (Germany) 

                      * `es-ES` - Spanish (Spain) 

                      * `fr-FR` - French (France) 

                      * `jp-JP` - Japanese 

                      * `pt-PT` - Portuguese (Portugal) 

                      * `ru-RU` - Russian 

                      * `zh-CN` - Chinese (PRC) 

                      * `zh-TW` - Chinese (Taiwan) 

                      * `ko-KO` - Korean 

                      * `it-IT` - Italian (Italy) 

                      * `vi-VN` - Vietnamese 

                      * `pl-PL` - Polish 

                      * `Tr-TR` - Turkish
                    example: en-US
                    enum:
                      - en-US
                      - de-DE
                      - es-ES
                      - fr-FR
                      - jp-JP
                      - pt-PT
                      - ru-RU
                      - zh-CN
                      - zh-TW
                      - ko-KO
                      - it-IT
                      - vi-VN
                      - pl-PL
                      - Tr-TR
                  source_id:
                    type: string
                    description: The tracking source's unique identifier.
                    example: '4816766181770'
                description: Information about the webinar registrant.
        responses:
          '201':
            description: |-
              **HTTP Status Code:** `201`   
               
              Webinar registration created.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The webinar's ID.
                      format: int64
                      example: 92674392836
                    join_url:
                      type: string
                      description: The URL the registrant can use to join the webinar.
                      example: https://example.com/j/22222
                    registrant_id:
                      type: string
                      description: The registrant's ID.
                      example: fdgsfh2ey82fuh
                    start_time:
                      type: string
                      description: The webinar's start time.
                      format: date-time
                      example: '2021-07-13T21:44:51Z'
                    topic:
                      maxLength: 200
                      type: string
                      description: The webinar's topic.
                      example: My Webinar
                    occurrences:
                      type: array
                      description: Array of occurrence objects.
                      items:
                        type: object
                        properties:
                          duration:
                            type: integer
                            description: Duration.
                            example: 60
                          occurrence_id:
                            type: string
                            description: >-
                              Occurrence ID: Unique identifier that identifies an
                              occurrence of a recurring webinar. [Recurring
                              webinars](https://support.zoom.us/hc/en-us/articles/216354763-How-to-Schedule-A-Recurring-Webinar)
                              can have a maximum of 50 occurrences.
                            example: '1648194360000'
                          start_time:
                            type: string
                            description: Start time.
                            format: date-time
                            example: '2022-03-25T07:46:00Z'
                          status:
                            type: string
                            description: Occurrence status.
                            example: available
                        description: >-
                          Occurrence object. This object is only returned for
                          recurring webinars.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account: {accountId} <br>
              **Error Code:** `3000` <br>
               This webinar does not have registration as required: {webinarId}. <br>
              **Error Code:** `3027` <br>
               Host cannot register. <br>
              **Error Code:** `3034` <br>
               If you have been invited, please input your work email address. <br>
              **Error Code:** `3038` <br>
               Webinar is over, you cannot register now. If you have any questions, contact the webinar host. <br>
              **Error Code:** `3000` <br>
               You have reached the limit for the number of attendees you can add. Contact Zoom Support for more information. <br>
              **Error Code:** `3000` <br>
               The Zoom REST API does not support paid registration. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User "{userId}" does not exist or does not belong to this account. <br>
              **Error Code:** `3001` <br>
               Webinar "{webinarId}" not found or has expired. <br>
          '429':
            description: |-
              **HTTP Status Code:** `429` <br>
               Too Many Requests 

               
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:write:registrant
            - webinar:write:registrant:admin
    /webinars/{webinarId}/registrants/questions:
      get:
        tags:
          - Webinars
        summary: List registration questions
        description: >-
          List registration questions and fields that are to be answered by users
          while registering for a webinar. 

           Scheduling a [webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form with fields and questions before they can receive the link to join the webinar.  
            
          **Prerequisites:**  
            
          * Pro or higher plan with the webinar add-on.



          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_registration_questions`,`webinar:read:list_registration_questions:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarRegistrantsQuestionsGet
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '200':
            description: >-
              **HTTP Status Code:** `200`   Webinar registrant question object
              returned.
            content:
              application/json:
                schema:
                  title: Webinar Registrant Questions
                  type: object
                  properties:
                    custom_questions:
                      type: array
                      description: Array of Registrant Custom Questions.
                      items:
                        type: object
                        properties:
                          answers:
                            type: array
                            description: >-
                              An array of answer choices. Can't be used for short
                              answer type.
                            items:
                              type: string
                              example: Good
                          required:
                            type: boolean
                            description: >-
                              State whether or not the custom question is required
                              to be answered by a registrant.
                            example: true
                          title:
                            type: string
                            description: Custom question.
                            example: How are you?
                          type:
                            type: string
                            description: The question-answer type.
                            example: short
                            extensions:
                              x-enum-descriptions:
                                - Short Answer
                                - Single Radio Answer
                                - Single Dropdown Answer
                                - Multiple Answer
                            enum:
                              - short
                              - single_radio
                              - single_dropdown
                              - multiple
                    questions:
                      type: array
                      description: >-
                        Array of registration fields whose values should be
                        provided by registrants during registration.
                      items:
                        type: object
                        properties:
                          field_name:
                            type: string
                            description: Field name
                            example: last_name
                            extensions:
                              x-enum-descriptions:
                                - Last Name
                                - Address
                                - City
                                - Country/Region
                                - Zip/Postal Code
                                - State/Province
                                - Phone
                                - Industry
                                - Organization
                                - Job Title
                                - Purchasing Time Frame
                                - Role in Purchase Process
                                - Number of Employees
                                - Questions & Comments
                            enum:
                              - last_name
                              - address
                              - city
                              - country
                              - zip
                              - state
                              - phone
                              - industry
                              - org
                              - job_title
                              - purchasing_time_frame
                              - role_in_purchase_process
                              - no_of_employees
                              - comments
                          required:
                            type: boolean
                            description: >-
                              State whether the selected fields are required or
                              optional.
                            example: true
                  description: Webinar Registrant Questions
          '404':
            description: |-
              **HTTP Status Code:** `404` <br>
               Not Found 

               
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_registration_questions
            - webinar:read:list_registration_questions:admin
      patch:
        tags:
          - Webinars
        summary: Update registration questions
        description: >-
          Update registration questions and fields of a scheduled webinar for
          users to answer during webinar registration. Scheduling a [webinar with
          registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
          requires your registrants to complete a brief form with fields and
          questions before they can receive the link to join the webinar.  
             
           
          **Prerequisites:**  
             
          * Pro or higher plan with a Webinar Add-on.

          * Registration option for Webinar should be set as required to use this
          API. 



          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:update:registration_question`,`webinar:update:registration_question:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarRegistrantQuestionUpdate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          description: Webinar registrant questions
          content:
            application/json:
              schema:
                title: Webinar registrant questions
                type: object
                properties:
                  custom_questions:
                    type: array
                    description: Array of custom questions for registrants.
                    items:
                      type: object
                      properties:
                        answers:
                          type: array
                          description: >-
                            An array of answer choices. Can't be used for short
                            answer type.
                          items:
                            type: string
                            example: Good
                        required:
                          type: boolean
                          description: >-
                            State whether or not a registrant is required to
                            answer the custom question.
                          example: true
                        title:
                          type: string
                          description: Custom question.
                          example: How are you?
                        type:
                          type: string
                          description: The question-answer type.
                          example: short
                          extensions:
                            x-enum-descriptions:
                              - Short Answer
                              - Single Radio Answer
                              - Single Dropdown Answer
                              - Multiple Answer
                          enum:
                            - short
                            - single_radio
                            - single_dropdown
                            - multiple
                  questions:
                    type: array
                    description: >-
                      Array of registration fields whose values should be provided
                      by registrants.
                    items:
                      type: object
                      properties:
                        field_name:
                          type: string
                          description: Field name
                          example: last_name
                          extensions:
                            x-enum-descriptions:
                              - Last name
                              - Address
                              - City
                              - Country/Region
                              - Zip/Postal code
                              - State/Province
                              - Phone
                              - Industry
                              - Organization
                              - Job title
                              - Purchasing time frame
                              - Role in purchase process
                              - Number of employees
                              - Questions & comments
                          enum:
                            - last_name
                            - address
                            - city
                            - country
                            - zip
                            - state
                            - phone
                            - industry
                            - org
                            - job_title
                            - purchasing_time_frame
                            - role_in_purchase_process
                            - no_of_employees
                            - comments
                        required:
                          type: boolean
                          description: >-
                            State whether the selected fields are required or
                            optional.
                          example: true
                description: Webinar registrant questions.
        responses:
          '204':
            description: '**HTTP Status Code:** `204`   Webinar registrant questions updated.'
          '404':
            description: |-
              **HTTP Status Code:** `404` <br>
               Not Found 

               
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:update:registration_question
            - webinar:update:registration_question:admin
    /webinars/{webinarId}/registrants/status:
      put:
        tags:
          - Webinars
        summary: Update registrant's status
        description: >-
          Update webinar registrants' registration status. You can approve or deny
          a registrant, or revoke a registrant's approval. 


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:update:registrant_status`,`webinar:update:registrant_status:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: webinarRegistrantStatus
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: occurrence_id
            in: query
            description: The meeting or webinar occurrence ID.
            required: false
            schema:
              type: string
              example: '1648194360000'
        requestBody:
          content:
            application/json:
              schema:
                required:
                  - action
                type: object
                properties:
                  action:
                    type: string
                    description: |-
                      The registration action to perform. 
                      * `approve` - Approve the registrant. 
                      * `deny` - Reject the registrant. 
                      * `cancel` - Cancel the registrant's approval.
                    example: approve
                    extensions:
                      x-enum-descriptions:
                        - Approve
                        - Deny
                        - Cancel
                    enum:
                      - approve
                      - deny
                      - cancel
                  registrants:
                    maximum: 30
                    type: array
                    description: The registrant information.
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: The registrant's email address.
                          format: email
                          example: jchill@example.com
                        id:
                          type: string
                          description: The registrant's ID.
                          example: 9tboDiHUQAeOnbmudzWa5g
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204` <br>
               Registrant status updated.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account: {accountId}. <br>
              **Error Code:** `3035` <br>
               Webinar has reached maximum attendee capacity. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account. <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired. <br>
          '429':
            description: |-
              **HTTP Status Code:** `429` <br>
               Too Many Requests 

               
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:update:registrant_status
            - webinar:update:registrant_status:admin
    /webinars/{webinarId}/registrants/{registrantId}:
      get:
        tags:
          - Webinars
        summary: Get a webinar registrant
        description: >-
          Zoom users with a [webinar plan](https://zoom.us/webinar) have access to
          creating and managing webinars. The webinar feature lets a host
          broadcast a Zoom meeting to up to 10,000 attendees. Scheduling a
          [webinar with
          registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration)
          requires your registrants to complete a brief form before receiving the
          link to join the webinar.  
           Use this API to get details on a specific user who has registered for the webinar.  
             
           
          **Prerequisites:**  
           
          * The account must have a webinar plan.


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:registrant`,`webinar:read:registrant:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarRegistrantGet
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: registrantId
            in: path
            description: The registrant ID.
            required: true
            schema:
              type: string
              example: 9tboDiHUQAeOnbmudzWa5g
          - name: occurrence_id
            in: query
            description: The meeting or webinar occurrence ID.
            required: false
            schema:
              type: string
              example: '1648194360000'
        responses:
          '200':
            description: Success.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: string
                      example: '95204914252'
                    address:
                      type: string
                      description: The registrant's address.
                      example: 1800 Amphibious Blvd.
                    city:
                      type: string
                      description: The registrant's city.
                      example: Mountain View
                    comments:
                      type: string
                      description: The registrant's questions and comments.
                      example: Looking forward to the discussion.
                    country:
                      type: string
                      description: >-
                        The registrant's two-letter ISO [country
                        code](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries).
                      example: US
                    custom_questions:
                      type: array
                      description: Information about custom questions.
                      items:
                        type: object
                        properties:
                          title:
                            type: string
                            description: The title of the custom question.
                            example: What do you hope to learn from this?
                          value:
                            maxLength: 128
                            type: string
                            description: >-
                              The custom question's response value. This has a
                              limit of 128 characters.
                            example: >-
                              Look forward to learning how you come up with new
                              recipes and what other services you offer.
                        description: Information about custom questions.
                    email:
                      maxLength: 128
                      type: string
                      description: >-
                        The registrant's email address. See [Email address display
                        rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules)
                        for return value details.
                      format: email
                      example: jchill@example.com
                    first_name:
                      maxLength: 64
                      type: string
                      description: The registrant's first name.
                      example: Jill
                    industry:
                      type: string
                      description: The registrant's industry.
                      example: Food
                    job_title:
                      type: string
                      description: The registrant's job title.
                      example: Chef
                    last_name:
                      maxLength: 64
                      type: string
                      description: The registrant's last name.
                      example: Chill
                    no_of_employees:
                      type: string
                      description: |-
                        The registrant's number of employees: 
                        * `1-20` 
                        * `21-50` 
                        * `51-100` 
                        * `101-250` 
                        * `251-500` 
                        * `501-1,000` 
                        * `1,001-5,000` 
                        * `5,001-10,000` 
                        * `More than 10,000`
                      example: 1-20
                      enum:
                        - ''
                        - 1-20
                        - 21-50
                        - 51-100
                        - 101-250
                        - 251-500
                        - 501-1,000
                        - 1,001-5,000
                        - 5,001-10,000
                        - More than 10,000
                    org:
                      type: string
                      description: The registrant's organization.
                      example: Cooking Org
                    phone:
                      type: string
                      description: The registrant's phone number.
                      example: '5550100'
                    purchasing_time_frame:
                      type: string
                      description: |-
                        The registrant's purchasing time frame: 
                        * `Within a month` 
                        * `1-3 months` 
                        * `4-6 months` 
                        * `More than 6 months` 
                        * `No timeframe`
                      example: 1-3 months
                      enum:
                        - ''
                        - Within a month
                        - 1-3 months
                        - 4-6 months
                        - More than 6 months
                        - No timeframe
                    role_in_purchase_process:
                      type: string
                      description: |-
                        The registrant's role in the purchase process: 
                        * `Decision Maker` 
                        * `Evaluator/Recommender` 
                        * `Influencer` 
                        * `Not involved`
                      example: Influencer
                      enum:
                        - ''
                        - Decision Maker
                        - Evaluator/Recommender
                        - Influencer
                        - Not involved
                    state:
                      type: string
                      description: The registrant's state or province.
                      example: CA
                    status:
                      type: string
                      description: |-
                        The registrant's status: 
                        * `approved` &mdash; Registrant is approved. 
                        * `denied` &mdash; Registrant is denied. 
                        * `pending` &mdash; Registrant is waiting for approval.
                      example: approved
                      enum:
                        - approved
                        - denied
                        - pending
                    zip:
                      type: string
                      description: The registrant's ZIP or postal code.
                      example: '94045'
                    language:
                      type: string
                      description: >-
                        The registrant's language preference for confirmation
                        emails: 

                        * `en-US` &mdash; English (US) 

                        * `de-DE` &mdash; German (Germany) 

                        * `es-ES` &mdash; Spanish (Spain) 

                        * `fr-FR` &mdash; French (France) 

                        * `jp-JP` &mdash; Japanese 

                        * `pt-PT` &mdash; Portuguese (Portugal) 

                        * `ru-RU` &mdash; Russian 

                        * `zh-CN` &mdash; Chinese (PRC) 

                        * `zh-TW` &mdash; Chinese (Taiwan) 

                        * `ko-KO` &mdash; Korean 

                        * `it-IT` &mdash; Italian (Italy) 

                        * `vi-VN` &mdash; Vietnamese 

                        * `pl-PL` &mdash; Polish 

                        * `Tr-TR` &mdash; Turkish
                      example: en-US
                      enum:
                        - en-US
                        - de-DE
                        - es-ES
                        - fr-FR
                        - jp-JP
                        - pt-PT
                        - ru-RU
                        - zh-CN
                        - zh-TW
                        - ko-KO
                        - it-IT
                        - vi-VN
                        - pl-PL
                        - Tr-TR
                    create_time:
                      type: string
                      format: date-time
                      example: '2022-03-26T06:44:14Z'
                    join_url:
                      type: string
                      format: string
                      example: https://example.com/j/11111
                  required:
                    - email
                    - first_name
                  description: Webinar registrant.
                  title: Webinar Registrant
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account.<br> <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:registrant
            - webinar:read:registrant:admin
      delete:
        tags:
          - Webinars
        summary: Delete a webinar registrant
        description: >-
          Delete a webinar registrant.  
             
           


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:delete:registrant`,`webinar:delete:registrant:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: deleteWebinarRegistrant
        parameters:
          - name: webinarId
            in: path
            description: The webinar ID.
            required: true
            schema:
              type: integer
              example: 95204914252
          - name: registrantId
            in: path
            description: The registrant ID.
            required: true
            schema:
              type: string
              example: 9tboDiHUQAeOnbmudzWa5g
          - name: occurrence_id
            in: query
            description: The webinar occurrence ID.
            required: false
            schema:
              type: string
              example: '1648538280000'
        responses:
          '204':
            description: |-
              **HTTP status code:** `204`   
               
              OK
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `200` <br>
               Webinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {0}.<br> <br>
              **Error Code:** `300` <br>
               The value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br> <br>
              **Error Code:** `404` <br>
               Registration has not been enabled for this webinar: {0}.<br> <br>
              **Error Code:** `3000` <br>
               Registrant {0} was not found.<br> <br>
              **Error Code:** `3001` <br>
               Webinar does not exist: {0}. <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:delete:registrant
            - webinar:delete:registrant:admin
    /webinars/{webinarId}/sip_dialing:
      post:
        tags:
          - Webinars
        summary: Get a webinar SIP URI with Passcode
        description: >-
          Get a webinar's SIP URI. The URI consists of the webinar ID, an optional
          user-supplied passcode, and participant identifier code. The API return
          data also includes additional fields to indicate whether the API caller
          has a valid Cloud Room Connector subscription, the participant
          identifier code from the URI, and the SIP URI validity period in
          seconds. 


          **Scopes:**
          `webinar:write:admin:sip_dialing`,`webinar:write:sip_dialing`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: getWebinarSipDialingWithPasscode
        parameters:
          - name: webinarId
            in: path
            description: |-
              The webinar's ID. 

               When storing this value in your database, store it as a long format integer and **not** an integer. Webinar IDs can exceed 10 digits.
            required: true
            schema:
              type: integer
              format: int64
              example: 85746065
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  passcode:
                    type: string
                    description: >-
                      If customers want a passcode to be embedded in the SIP URI
                      dial string, they must supply the passcode. Zoom will not
                      validate the passcode.
                    example: xxxx
        responses:
          '201':
            description: '**HTTP Status Code:** `201`  Webinar''s encoded SIP URI returned.'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    sip_dialing:
                      type: string
                      description: The webinar's encoded SIP URI.
                      example: 9678722567.xxxx....30qonrvgy@zoomcrc.com
                    paid_crc_plan_participant:
                      type: boolean
                      description: >-
                        Whether the API caller has a Conference Room Connector
                        (CRC) plan.
                      example: true
                    participant_identifier_code:
                      type: string
                      description: >-
                        This value identifies the webinar participant. It is
                        automatically embedded in the SIP URI if the API caller
                        has a CRC plan.
                      example: 30qonrvgy
                    expire_in:
                      type: integer
                      description: >-
                        The number of seconds the encoded SIP URI is valid before
                        it expires.
                      format: int64
                      example: 7200
                  description: Information about the webinar's encoded SIP URI.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               Webinar Id does not exist. <br>
              **Error Code:** `300` <br>
               Invalid Webinar Id. <br>
              **Error Code:** `3000` <br>
               Cannot access meeting info. <br>
              **Error Code:** `3000` <br>
               The webinar's SIP URI does not exist: {webinarId}. <br>
        security:
          - openapi_oauth:
              - webinar:write:admin:sip_dialing
              - webinar:write:sip_dialing
            openapi_authorization: []
        extensions:
          x-permissions: []
          x-macro-scopes:
            - webinar:write:admin:sip_dialing
            - webinar:write:sip_dialing
    /webinars/{webinarId}/status:
      put:
        tags:
          - Webinars
        summary: Update webinar status
        description: >-
          Update a webinar's status. Use this API to end an ongoing webinar.  
             
           
          **Prerequisites:**  
           
          * The account must hold a valid [Webinar plan](https://zoom.us/webinar).


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:update:status`,`webinar:update:status:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarStatus
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: string
                    example: end
                    extensions:
                      x-enum-descriptions:
                        - end a webinar
                    enum:
                      - end
        responses:
          '200':
            description: >-
              Webinar plan subscription is missing. Enable webinar for this user
              once the subscription is added:{userId}.
            content:
              application/json:
                schema:
                  type: object
                  properties: {}
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `1010` <br>
               User does not belong to this account:{accountId}.<br> <br>
              **Error Code:** `3003` <br>
               You are not the meeting host.<br> <br>
              **Error Code:** `3063` <br>
               Can not end on-premise user's meeting:{meetingId}.<br> <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `1001` <br>
               User {userId} does not exist or does not belong to this account.<br> <br>
              **Error Code:** `3001` <br>
               Webinar {webinarId} not found or has expired.<br> <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:update:status
            - webinar:update:status:admin
    /webinars/{webinarId}/survey:
      get:
        tags:
          - Webinars
        summary: Get a webinar survey
        description: >-
          Return information about a [webinar
          survey](https://support.zoom.us/hc/en-us/articles/360048745651). 

           **Prerequisites:** 
          * A Pro or higher plan with the Webinar add-on. 

          * The [**Webinar
          Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey)
          feature enabled in the host's account.


          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:** `webinar:read:survey`,`webinar:read:survey:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarSurveyGet
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
               Webinar survey object returned.
            content:
              application/json:
                schema:
                  title: Webinar survey object
                  type: object
                  properties:
                    custom_survey:
                      type: object
                      properties:
                        title:
                          maxLength: 64
                          type: string
                          description: The survey's title, up to 64 characters.
                          example: Learn something new
                        anonymous:
                          type: boolean
                          description: >-
                            Allow participants to anonymously answer survey
                            questions. 

                            * `true` - Anonymous survey enabled. 

                            * `false` - Participants cannot answer survey
                            questions anonymously. 

                             This value defaults to `true`.
                          example: false
                          default: false
                        numbered_questions:
                          type: boolean
                          description: |-
                            Whether to display the number in the question name. 

                             This value defaults to `true`.
                          example: false
                          default: false
                        show_question_type:
                          type: boolean
                          description: >-
                            Whether to display the question type in the question
                            name. 

                             This value defaults to `false`.
                          example: false
                          default: false
                        feedback:
                          maxLength: 320
                          type: string
                          description: |-
                            The survey's feedback, up to 320 characters. 

                             This value defaults to `Thank you so much for taking the time to complete the survey, your feedback really makes a difference.`.
                          example: >-
                            Thank you so much for taking the time to complete the
                            survey. Your feedback really makes a difference.
                        questions:
                          maxItems: 100
                          minItems: 1
                          type: array
                          description: Information about the webinar survey's questions.
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: The survey question, up to 420 characters.
                                example: How useful was this webinar?
                              type:
                                type: string
                                description: |-
                                  The survey's question and answer type. 
                                  * `single` - Single choice. 
                                  * `multiple` - Multiple choice. 
                                  * `matching` - Matching. 
                                  * `rank_order` - Rank order 
                                  * `short_answer` - Short answer 
                                  * `long_answer` - Long answer. 
                                  * `fill_in_the_blank` - Fill in the blank 
                                  * `rating_scale` - Rating scale.
                                example: single
                                extensions:
                                  x-enum-descriptions:
                                    - Single choice
                                    - Multiple choice
                                    - Matching
                                    - Rank order
                                    - Short answer
                                    - Long answer
                                    - Fill in the blank
                                    - Rating scale
                                enum:
                                  - single
                                  - multiple
                                  - matching
                                  - rank_order
                                  - short_answer
                                  - long_answer
                                  - fill_in_the_blank
                                  - rating_scale
                              answer_required:
                                type: boolean
                                description: >-
                                  Whether participants must answer the question. 

                                  * `true` - The participant must answer the
                                  question. 

                                  * `false` - The participant does not need to
                                  answer the question. 

                                   This value defaults to `false`.
                                example: false
                                default: false
                              show_as_dropdown:
                                type: boolean
                                description: >-
                                  Whether to display the radio selection as a
                                  drop-down box. 

                                  * `true` - Show as a drop-down box. 

                                  * `false` - Do not show as a drop-down box. 

                                   This value defaults to `false`.
                                example: false
                                default: false
                              answers:
                                minItems: 2
                                type: array
                                description: >-
                                  The survey question's available answers. This
                                  field requires a **minimum** of two answers. 


                                  * For `single` and `multiple` questions, you can
                                  only provide a maximum of 50 answers. 

                                  * For `matching` polls, you can only provide a
                                  maximum of 16 answers. 

                                  * For `rank_order` polls, you can only provide a
                                  maximum of seven answers.
                                items:
                                  maxLength: 200
                                  type: string
                                  example: Extremely useful
                              prompts:
                                maxItems: 10
                                minItems: 2
                                type: array
                                description: >-
                                  Information about the prompt questions. This
                                  field only applies to `matching` and
                                  `rank_order` questions. You **must** provide a
                                  minimum of two prompts, up to a maximum of 10
                                  prompts.
                                items:
                                  type: object
                                  properties:
                                    prompt_question:
                                      maxLength: 200
                                      type: string
                                      description: The question prompt's title.
                                      example: How are you?
                              answer_min_character:
                                minimum: 1
                                type: integer
                                description: >-
                                  The allowed minimum number of characters. This
                                  field only applies to `short_answer` and
                                  `long_answer` questions. You must provide at
                                  least a **one** character minimum value.
                                example: 1
                              answer_max_character:
                                type: integer
                                description: >-
                                  The allowed maximum number of characters. This
                                  field only applies to `short_answer` and
                                  `long_answer` questions. 

                                  * For `short_answer` question, a maximum of 500
                                  characters. 

                                  * For `long_answer` question, a maximum of 2,000
                                  characters.
                                example: 200
                              rating_min_value:
                                minimum: 0
                                type: integer
                                description: >-
                                  The rating scale's minimum value. This value
                                  cannot be less than zero. 

                                   This field only applies to the `rating_scale` survey.
                                example: 1
                              rating_max_value:
                                maximum: 10
                                type: integer
                                description: >-
                                  The rating scale's maximum value, up to a
                                  maximum value of 10. 

                                   This field only applies to the `rating_scale` survey.
                                example: 4
                              rating_min_label:
                                maxLength: 50
                                type: string
                                description: >-
                                  The low score label used for the
                                  `rating_min_value` field, up to 50 characters. 

                                   This field only applies to the `rating_scale` survey.
                                example: Not likely
                              rating_max_label:
                                maxLength: 50
                                type: string
                                description: >-
                                  The high score label used for the
                                  `rating_max_value` field, up to 50 characters. 

                                   This field only applies to the `rating_scale` survey.
                                example: Extremely Likely
                      description: Information about the customized webinar survey.
                    show_in_the_browser:
                      type: boolean
                      description: >-
                        Whether the **Show in the browser when the webinar ends**
                        option is enabled. 

                        * `true` - Enabled. 

                        * `false` - Disabled. 

                         This value defaults to `true`.
                      example: true
                      default: true
                    show_in_the_follow_up_email:
                      type: boolean
                      description: >-
                        Whether the **Show the link on the follow-up email**
                        option is enabled. 

                        * `true` - Enabled. 

                        * `false` - Disabled. 

                         This value defaults to `false`.
                      example: false
                      default: false
                    third_party_survey:
                      maxLength: 64
                      type: string
                      description: The link to the third party webinar survey.
                      example: https://example.com
                  description: Information about the webinar survey.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               Invalid webinar ID. <br>
              **Error Code:** `3000` <br>
               Webinar survey disabled. To enable this feature, enable the "Webinar Survey" setting in the Zoom web portal's "Settings" interface. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `300` <br>
               Webinar ID does not exist. <br>
              **Error Code:** `3001` <br>
               Webinar does not exist: {webinarId}. <br>
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:survey
            - webinar:read:survey:admin
      delete:
        tags:
          - Webinars
        summary: Delete a webinar survey
        description: >-
          Use this API to delete a [webinar
          survey](https://support.zoom.us/hc/en-us/articles/360048745651). 

           **Prerequisites:** 
          * A Pro or higher plan with the Webinar Add-on. 

          * The [**Webinar
          Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey)
          feature enabled in the host's account.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:delete:survey`,`webinar:delete:survey:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarSurveyDelete
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
               Webinar survey deleted.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               Invalid webinar ID. <br>
              **Error Code:** `3000` <br>
               Webinar survey disabled. To enable this feature, enable the "Webinar Survey" setting in the Zoom web portal's "Settings" interface. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `300` <br>
               Webinar ID does not exist. <br>
              **Error Code:** `3001` <br>
               Webinar does not exist: {webinarId}. <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:delete:survey
            - webinar:delete:survey:admin
      patch:
        tags:
          - Webinars
        summary: Update a webinar survey
        description: >-
          Update a [webinar
          survey](https://support.zoom.us/hc/en-us/articles/360048745651). 
          **Prerequisites:** * A Pro or higher plan with the Webinar add-on. *
          Enable the [**Webinar
          Survey**](https://support.zoom.us/hc/en-us/articles/360061293191-Enabling-webinar-survey)
          feature in the host's account.


          **Scopes:** `webinar:write`,`webinar:write:admin`


          **Granular Scopes:**
          `webinar:update:survey`,`webinar:update:survey:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `LIGHT`
        operationId: webinarSurveyUpdate
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        requestBody:
          content:
            application/json:
              schema:
                title: Webinar survey object
                type: object
                properties:
                  custom_survey:
                    type: object
                    properties:
                      title:
                        maxLength: 64
                        type: string
                        description: The survey's title, up to 64 characters.
                        example: Learn something new
                      anonymous:
                        type: boolean
                        description: >-
                          Allow participants to anonymously answer survey
                          questions. 

                          * `true` - Anonymous survey enabled. 

                          * `false` - Participants cannot answer survey questions
                          anonymously. 

                           This value defaults to `true`.
                        example: false
                        default: false
                      numbered_questions:
                        type: boolean
                        description: |-
                          Whether to display the number in the question name. 

                           This value defaults to `true`.
                        example: false
                        default: false
                      show_question_type:
                        type: boolean
                        description: >-
                          Whether to display the question type in the question
                          name. 

                           This value defaults to `false`.
                        example: false
                        default: false
                      feedback:
                        maxLength: 320
                        type: string
                        description: |-
                          The survey's feedback, up to 320 characters. 

                           This value defaults to `Thank you so much for taking the time to complete the survey, your feedback really makes a difference.`.
                        example: >-
                          Thank you so much for taking the time to complete the
                          survey. Your feedback really makes a difference.
                      questions:
                        maxItems: 100
                        minItems: 1
                        type: array
                        description: Information about the webinar survey's questions.
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The survey question, up to 420 characters.
                              example: How useful was this webinar?
                            type:
                              type: string
                              description: |-
                                The survey's question and answer type. 
                                * `single` - Single choice. 
                                * `multiple` - Multiple choice. 
                                * `matching` - Matching. 
                                * `rank_order` - Rank order 
                                * `short_answer` - Short answer 
                                * `long_answer` - Long answer. 
                                * `fill_in_the_blank` - Fill in the blank 
                                * `rating_scale` - Rating scale.
                              example: single
                              extensions:
                                x-enum-descriptions:
                                  - Single choice
                                  - Multiple choice
                                  - Matching
                                  - Rank order
                                  - Short answer
                                  - Long answer
                                  - Fill in the blank
                                  - Rating scale
                              enum:
                                - single
                                - multiple
                                - matching
                                - rank_order
                                - short_answer
                                - long_answer
                                - fill_in_the_blank
                                - rating_scale
                            answer_required:
                              type: boolean
                              description: >-
                                Whether participants must answer the question. 

                                * `true` - The participant must answer the
                                question. 

                                * `false` - The participant does not need to
                                answer the question. 

                                 This value defaults to `false`.
                              example: false
                              default: false
                            show_as_dropdown:
                              type: boolean
                              description: >-
                                Whether to display the radio selection as a
                                drop-down box. 

                                * `true` - Show as a drop-down box. 

                                * `false` - Do not show as a drop-down box. 

                                 This value defaults to `false`.
                              example: false
                              default: false
                            answers:
                              minItems: 2
                              type: array
                              description: >-
                                The survey question's available answers. This
                                field requires a **minimum** of two answers. 


                                * For `single` and `multiple` questions, you can
                                only provide a maximum of 50 answers. 

                                * For `matching` polls, you can only provide a
                                maximum of 16 answers. 

                                * For `rank_order` polls, you can only provide a
                                maximum of seven answers.
                              items:
                                maxLength: 200
                                type: string
                                example: Extremely useful
                            prompts:
                              maxItems: 10
                              minItems: 2
                              type: array
                              description: >-
                                Information about the prompt questions. This field
                                only applies to `matching` and `rank_order`
                                questions. You **must** provide a minimum of two
                                prompts, up to a maximum of 10 prompts.
                              items:
                                type: object
                                properties:
                                  prompt_question:
                                    maxLength: 200
                                    type: string
                                    description: The question prompt's title.
                                    example: How are you?
                            answer_min_character:
                              minimum: 1
                              type: integer
                              description: >-
                                The allowed minimum number of characters. This
                                field only applies to `short_answer` and
                                `long_answer` questions. You must provide at least
                                a **one** character minimum value.
                              example: 1
                            answer_max_character:
                              type: integer
                              description: >-
                                The allowed maximum number of characters. This
                                field only applies to `short_answer` and
                                `long_answer` questions. 

                                * For `short_answer` question, a maximum of 500
                                characters. 

                                * For `long_answer` question, a maximum of 2,000
                                characters.
                              example: 200
                            rating_min_value:
                              minimum: 0
                              type: integer
                              description: >-
                                The rating scale's minimum value. This value can't
                                be less than zero. 

                                 This field only applies to the `rating_scale` survey.
                              example: 1
                            rating_max_value:
                              maximum: 10
                              type: integer
                              description: >-
                                The rating scale's maximum value, up to a maximum
                                value of 10. 

                                 This field only applies to the `rating_scale` survey.
                              example: 4
                            rating_min_label:
                              maxLength: 50
                              type: string
                              description: >-
                                The low score label used for the
                                `rating_min_value` field, up to 50 characters. 

                                 This field only applies to the `rating_scale` survey.
                              example: Not likely
                            rating_max_label:
                              maxLength: 50
                              type: string
                              description: >-
                                The high score label used for the
                                `rating_max_value` field, up to 50 characters. 

                                 This field only applies to the `rating_scale` survey.
                              example: Extremely Likely
                    description: Information about the customized webinar survey.
                  show_in_the_browser:
                    type: boolean
                    description: >-
                      Whether the **Show in the browser when the webinar ends**
                      option is enabled. 

                      * `true` - Enabled. 

                      * `false` - Disabled. 

                       This value defaults to `true`.
                    example: true
                    default: true
                  show_in_the_follow_up_email:
                    type: boolean
                    description: >-
                      Whether the **Show the link on the follow-up email** option
                      is enabled. 

                      * `true` - Enabled. 

                      * `false` - Disabled. 

                       This value defaults to `false`.
                    example: false
                    default: false
                  third_party_survey:
                    maxLength: 64
                    type: string
                    description: The link to the third party webinar survey.
                    example: https://example.com
                description: Information about the webinar survey.
        responses:
          '204':
            description: |-
              **HTTP Status Code:** `204`   
               
               Webinar survey updated.
          '400':
            description: |
              **HTTP Status Code:** `400` <br>
               Bad Request 

               **Error Code:** `300` <br>
               Invalid webinar ID. <br>
              **Error Code:** `300` <br>
               Invalid third party survey: {third_party_survey}. <br>
              **Error Code:** `3000` <br>
               Webinar survey disabled. To use this feature, enable the "Webinar Survey" setting in the Zoom web portal's "Settings" interface. <br>
              **Error Code:** `3000` <br>
               The host isn't allowed to use a third party survey link. To use this feature, enable the "Allow host to use a 3rd-party survey link" setting in the "Account Settings" page of the Zoom web portal. <br>
          '404':
            description: |
              **HTTP Status Code:** `404` <br>
               Not Found 

               **Error Code:** `300` <br>
               Webinar ID does not exist. <br>
              **Error Code:** `3001` <br>
               Webinar does not exist: {webinarId}. <br>
        security:
          - openapi_oauth:
              - webinar:write
              - webinar:write:admin
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Edit
          x-macro-scopes:
            - webinar:write
            - webinar:write:admin
          x-granular-scopes:
            - webinar:update:survey
            - webinar:update:survey:admin
    /webinars/{webinarId}/token:
      get:
        tags:
          - Webinars
        summary: Get webinar's token
        description: >-
          Use this API to get a webinar's [closed caption token (caption
          URL)](https://support.zoom.us/hc/en-us/articles/115002212983-Using-a-third-party-closed-captioning-service).
          This token lets you use a third-party service to stream text to their
          closed captioning software to the Zoom webinar. 


          **Prerequisites:** 

          * A Pro or higher plan with the Webinar add-on. 

          * The **Closed captioning** setting enabled in the Zoom web portal. 

          * 

          * The **Allow use of caption API Token to integrate with 3rd-party
          Closed Captioning services** setting enabled.


          **Scopes:** `webinar:read`,`webinar:read:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `Light`
        operationId: webinarToken
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
          - name: type
            in: query
            description: >-
              The webinar token type: 

              * `closed_caption_token` &mdash; The third-party closed caption API
              token. 


              This defaults to `closed_caption_token`.
            required: false
            schema:
              type: string
              example: closed_caption_token
              default: closed_caption_token
              enum:
                - closed_caption_token
        responses:
          '200':
            description: |-
              **HTTP Status Code:** `200`   
               
              Webinar token returned.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
                      description: The generated webinar token.
                      example: >-
                        https://example.com/closedcaption?id=200610693&ns=GZHkEA==&expire=86400&spparams=id%2Cns%2Cexpire&signature=nYtXJqRKCW
                  description: Information about the webinar token.
          '400':
            description: >+
              **HTTP Status Code:** `400` <br>
               Bad Request

              **Error Code:** `300` <br>

              Invalid webinar ID.


              **Error Code:** `3000` <br>

              Closed captioning disabled. To enable this feature, enable the
              "Closed captioning" and "Allow use of caption API Token to integrate
              with 3rd-party Closed Captioning services" settings in the Zoom web
              portal's "Settings" interface.


              **Error Code:** `3000` <br>

              Webinar {webinarId} has not started.

          '404':
            description: |+
              **HTTP Status Code:** `404` <br>
               Not Found

              **Error Code:** `300` <br>
              Webinar ID does not exist.

              **Error Code:** `3001` <br>
              Webinar does not exist: {webinarId}

        security:
          - openapi_oauth:
              - webinar:read
              - webinar:read:admin
            openapi_authorization: []
        extensions:
          x-macro-scopes:
            - webinar:read
            - webinar:read:admin
    /webinars/{webinarId}/tracking_sources:
      get:
        tags:
          - Webinars
        summary: Get webinar tracking sources
        description: >-
          [Webinar Registration Tracking
          Sources](https://support.zoom.us/hc/en-us/articles/360000315683-Webinar-Registration-Source-Tracking)
          allow you to see where your registrants are coming from if you share the
          webinar registration page in multiple platforms. You can then use the
          source tracking to see the number of registrants generated from each
          platform.  
            Use this API to list information on all the tracking sources of a Webinar.  
           
          **Prerequisites**:  
           
          * [Webinar license](https://zoom.us/webinar).

          * Registration must be required for the Webinar.



          **Scopes:** `webinar:read:admin`,`webinar:read`


          **Granular Scopes:**
          `webinar:read:list_tracking_sources`,`webinar:read:list_tracking_sources:admin`


          **[Rate Limit
          Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):**
          `MEDIUM`
        operationId: getTrackingSources
        parameters:
          - name: webinarId
            in: path
            description: The webinar's ID.
            required: true
            schema:
              type: integer
              format: int64
              example: 99289110036
        responses:
          '200':
            description: '**HTTP Status Code:** `200`'
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    total_records:
                      type: integer
                      description: The total number of registration records for this Webinar.
                      example: 1
                    tracking_sources:
                      type: array
                      description: Tracking Sources object.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            description: Unique Identifier of the tracking source.
                            example: '5516482804110'
                          registration_count:
                            type: integer
                            description: Number of registrations made from this source.
                            example: 1
                          source_name:
                            type: string
                            description: >-
                              Name of the source (platform) where the registration
                              URL was shared.
                            example: https://example.com
                          tracking_url:
                            type: string
                            description: >-
                              Tracking URL. The URL that was shared for the
                              registration.
                            example: >-
                              https://example.com/webinar/register/5516482804110/WN_juM2BGyLQMyQ_ZrqiGRhLg
                          visitor_count:
                            type: integer
                            description: >-
                              Number of visitors who visited the registration page
                              from this source.
                            example: 1
        security:
          - openapi_oauth:
              - webinar:read:admin
              - webinar:read
            openapi_authorization: []
        extensions:
          x-permissions:
            - User:Read
          x-macro-scopes:
            - webinar:read:admin
            - webinar:read
          x-granular-scopes:
            - webinar:read:list_tracking_sources
            - webinar:read:list_tracking_sources:admin
  components:
    securitySchemes:
      openapi_authorization:
        type: apiKey
        name: Authorization
        in: HEADER
      openapi_oauth:
        type: oauth2
        flows:
          authorizationCode:
            authorizationUrl: /
            tokenUrl: ''
            refreshUrl: ''
            scopes:
              recording:read:admin: recording:read:admin
              recording:write: recording:write
              recording:write:admin: recording:write:admin
              recording:read: recording:read
              phone_recording:read:admin: phone_recording:read:admin
              device:write:admin: device:write:admin
              device:read:admin: device:read:admin
              h323:write:admin: h323:write:admin
              h323:read:admin: h323:read:admin
              meeting:write: meeting:write
              meeting:write:admin: meeting:write:admin
              meeting:master: meeting:master
              meeting_summary:read:admin: meeting_summary:read:admin
              meeting:read: meeting:read
              meeting:read:admin: meeting:read:admin
              meeting_token:read:admin:live_streaming: meeting_token:read:admin:live_streaming
              meeting_token:read:live_streaming: meeting_token:read:live_streaming
              meeting_token:read:admin:local_archiving: meeting_token:read:admin:local_archiving
              meeting_token:read:local_recording: meeting_token:read:local_recording
              meeting_token:read:admin:local_recording: meeting_token:read:admin:local_recording
              meeting_summary:read: meeting_summary:read
              meeting:write:sip_dialing: meeting:write:sip_dialing
              meeting:write:admin:sip_dialing: meeting:write:admin:sip_dialing
              pac:read:admin: pac:read:admin
              pac:read: pac:read
              report:read:admin: report:read:admin
              sip_phone:write:admin: sip_phone:write:admin
              sip_phone:read:admin: sip_phone:read:admin
              tsp:read:admin: tsp:read:admin
              tsp:write:admin: tsp:write:admin
              tsp:read: tsp:read
              tsp:write: tsp:write
              tracking_fields:write:admin: tracking_fields:write:admin
              tracking_fields:read:admin: tracking_fields:read:admin
              webinar:write: webinar:write
              webinar:write:admin: webinar:write:admin
              webinar:read:admin: webinar:read:admin
              webinar:read: webinar:read
              webinar_token:read:admin:live_streaming: webinar_token:read:admin:live_streaming
              webinar_token:read:live_streaming: webinar_token:read:live_streaming
              webinar_token:read:admin:local_archiving: webinar_token:read:admin:local_archiving
              webinar_token:read:admin:local_recording: webinar_token:read:admin:local_recording
              webinar_token:read:local_recording: webinar_token:read:local_recording
              webinar:write:admin:sip_dialing: webinar:write:admin:sip_dialing
              webinar:write:sip_dialing: webinar:write:sip_dialing
            extensions: {}
konfigCliVersion: 1.38.37
