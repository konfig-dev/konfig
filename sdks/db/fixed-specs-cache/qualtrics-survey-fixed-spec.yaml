publishJson:
  company: Qualtrics
  serviceName: Survey
  sdkName: qualtrics-survey-{language}-sdk
  clientName: Qualtrics
  metaDescription: >-
    Know what your customers and employees need, when they need it, and deliver
    it every time with powerful, AI driven Experience Management (XM) software.
  homepage: api.qualtrics.com
  categories:
    - survey
rawSpecString: |
  x-sap-api-type: REST
  x-sap-shortText: >-
    The Survey Definition API is an advanced API that allows you to modify your
    surveys. 
  x-sap-stateInfo:
    state: Active
  openapi: 3.0.0
  tags:
    - name: Surveys
      description: ''
    - name: Survey Blocks
      description: ''
    - name: Survey Questions
      description: ''
    - name: Survey Flows
      description: ''
    - name: Survey Options
      description: ''
    - name: Survey Versions
      description: ''
    - name: Survey Quotas
      description: ''
    - name: Survey Languages
      description: ''
    - name: Survey Translations
      description: ''
    - name: Schemas
      description: ''
  info:
    title: Qualtrics Survey API
    description: >-
      The Qualtrics Survey endpoints give you access to the structure of the
      surveys you create. 


      Surveys have a complex structure, and you are encouraged to become familiar
      with the structure using your brand's Qualtrics page to build surveys at
      first. Then you can query those surveys using these endpoints. 


      Once you are familiar, you can use this API to create surveys on the fly, or
      modify existing surveys in your library. 
    contact:
      name: Support
      url: https://www.qualtrics.com/support/
    license:
      name: Apache 2.0
      url: http://www.apache.org/licenses/LICENSE-2.0.html
    version: 3.0.0
  servers:
    - url: https://yul1.qualtrics.com/API/v3
      description: Canadian Data Center
    - url: https://iad1.qualtrics.com/API/v3
      description: Washington, DC Area Data Center (previously CO1)
    - url: https://sjc1.qualtrics.com/API/v3
      description: San Jose, California Data Center (previously AZ)
    - url: https://fra1.qualtrics.com/API/v3
      description: European Union Data Center (previously EU2 or EU)
    - url: https://lhr1.qualtrics.com/API/v3
      description: London, United Kingdom Data Center
    - url: https://syd1.qualtrics.com/API/v3
      description: Sydney, Australia Data Center (previously AU1)
    - url: https://sin1.qualtrics.com/API/v3
      description: Singapore Data Center
    - url: https://hnd1.qualtrics.com/API/v3
      description: Tokyo, Japan Data Center
    - url: https://gov1.qualtrics.com/API/v3
      description: US Government Data Center
  security:
    - api_token: []
    - public_oauth2: []
  paths:
    /survey-definitions:
      post:
        description: >-
          Create a new
          [survey](https://api.qualtrics.com/ZG9jOjg3NzY4Mg-survey-api-introduction).
        summary: Create Survey
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: createSurvey
        requestBody:
          description: Create or import a survey request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSurveyRequest'
        responses:
          '200':
            description: Successful create survey response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateSurveyResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Surveys
    /survey-definitions/{surveyId}:
      get:
        description: >-
          Retrieve the
          [survey](https://api.qualtrics.com/ZG9jOjg3NzY4Mg-survey-api-introduction#survey-definition-api-tenets)
          definition or a specified survey format.
        summary: Get Survey
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getSurvey
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: format
            in: query
            schema:
              description: The format of the survey
              type: string
              enum:
                - qsf
        responses:
          '200':
            description: Retrieve the survey definition or a specified survey format.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetSurveyResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Surveys
      delete:
        description: >-
          Delete a
          [survey](https://api.qualtrics.com/ZG9jOjg3NzY4Mg-survey-api-introduction).
        summary: Delete Survey
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: deleteSurvey
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        responses:
          '200':
            description: Delete survey successful.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/DeleteSurveyResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Surveys
    /survey-definitions/{surveyId}/metadata:
      get:
        description: >-
          Retrieve
          [survey](https://api.qualtrics.com/ZG9jOjg3NzY4Mg-survey-api-introduction)
          metadata.
        summary: Get Survey Metadata
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getSurveyMetadata
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        responses:
          '200':
            description: Survey metadata
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MetadataResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Surveys
      put:
        description: >-
          Update
          [survey](https://api.qualtrics.com/ZG9jOjg3NzY4Mg-survey-api-introduction)
          metadata.


          <!-- theme: warning -->

          >### Date fields in this API use MySQL DateTime instead of ISO-8601.
        summary: Update Metadata
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateSurveyMetadata
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        requestBody:
          description: Update metadata request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMetadataRequest'
        responses:
          '200':
            description: Survey metadata updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Surveys
    /survey-definitions/{surveyId}/blocks:
      post:
        description: >-
          Create a new
          [block](https://www.qualtrics.com/support/survey-platform/survey-module/block-options/block-options-overview/).
        summary: Create Block
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: createBlock
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        requestBody:
          description: Create block request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBlockRequest'
              example:
                Type: Standard
                Description: My Block Name
                ID: BL_fakeblockid1234
                BlockElements:
                  - Type: Question
                    QuestionID: QID1
                Options:
                  BlockLocking: 'false'
                  RandomizeQuestions: 'false'
                  BlockVisibility: Collapsed
        responses:
          '200':
            description: Successful create block response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateBlockResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Blocks
    /survey-definitions/{surveyId}/blocks/{blockId}:
      get:
        description: >-
          Retrieve a
          [block](https://www.qualtrics.com/support/survey-platform/survey-module/block-options/block-options-overview/)
          definition.
        summary: Get Block
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getBlock
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: blockId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/BlockID'
        responses:
          '200':
            description: Get block response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetBlockResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Blocks
      put:
        description: >-
          Update a
          [block](https://www.qualtrics.com/support/survey-platform/survey-module/block-options/block-options-overview/)
          definition.
        summary: Update Block
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateBlock
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: blockId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/BlockID'
        requestBody:
          description: Update block request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBlockRequest'
        responses:
          '200':
            description: Block definition updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Blocks
      delete:
        description: >-
          Delete a
          [block](https://www.qualtrics.com/support/survey-platform/survey-module/block-options/block-options-overview/)
          from the survey.
        summary: Delete Block
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: deleteBlock
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: blockId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/BlockID'
        responses:
          '200':
            description: Delete block successful
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Blocks
    /survey-definitions/{surveyId}/questions:
      get:
        summary: Get Questions
        description: >-
          Return a list of a [survey
          questions](https://api.qualtrics.com/ZG9jOjg3NzY4Mw-example-use-cases-walkthrough#add-question-to-survey).
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getQuestions
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        responses:
          '200':
            description: Get questions response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetQuestionsResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Questions
      post:
        description: >-
          Create a new question in the specified
          [block](https://www.qualtrics.com/support/survey-platform/survey-module/block-options/block-options-overview/)
          or the default block if not specified.
        summary: Create Question
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: createQuestion
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: blockId
            in: query
            schema:
              $ref: '#/components/schemas/BlockID'
        requestBody:
          description: Create question request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuestionRequest'
        responses:
          '200':
            description: Successful create question response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateQuestionResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Questions
    /survey-definitions/{surveyId}/questions/{questionId}:
      get:
        description: >-
          Retrieve a
          [question](https://api.qualtrics.com/ZG9jOjg3NzY4Mw-example-use-cases-walkthrough#add-question-to-survey)
          definition.
        summary: Get Question
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getQuestion
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: questionId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/QuestionID'
        responses:
          '200':
            description: Get question response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetQuestionResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Questions
      put:
        description: >-
          Update a
          [question](https://api.qualtrics.com/ZG9jOjg3NzY4Mw-example-use-cases-walkthrough#add-question-to-survey)
          definition.
        summary: Update Question
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateQuestion
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: questionId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/QuestionID'
        requestBody:
          description: Update question request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateQuestionRequest'
        responses:
          '200':
            description: Question definition updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Questions
      delete:
        description: >-
          Delete a
          [question](https://api.qualtrics.com/ZG9jOjg3NzY4Mw-example-use-cases-walkthrough#add-question-to-survey)
          from a survey.
        summary: Delete Question
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: deleteQuestion
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: questionId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/QuestionID'
        responses:
          '200':
            description: Delete question successful
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Questions
    /survey-definitions/{surveyId}/flow:
      get:
        description: >-
          Retrieve a
          [flow](https://www.qualtrics.com/support/survey-platform/survey-module/survey-flow/survey-flow-overview/)
          definition.
        summary: Get Flow
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getFlow
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        responses:
          '200':
            description: Get flow response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetFlowResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Flows
      put:
        description: >-
          Update a
          [flow](https://www.qualtrics.com/support/survey-platform/survey-module/survey-flow/survey-flow-overview/)
          definition.
        summary: Update Flow
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateFlow
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        requestBody:
          description: Update flow request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowRequest'
        responses:
          '200':
            description: Flow definition updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Flows
    /survey-definitions/{surveyId}/flow/{flowId}:
      put:
        summary: Updates Flow Element Definition
        description: >
          Update
          [flow](https://www.qualtrics.com/support/survey-platform/survey-module/survey-flow/survey-flow-overview/)
          by ID.


          If you're having trouble capturing single sign-on (SSO) information,
          make sure you've included all fields within the `Options` object. See
          this example:


          ```JSON

          "Options": {
           "maxAttempts": 3,
           "authenticationError": {
           "SystemMessage": {
           "Section": "Message example",
           "Message": "Test System Message"
           }
           } 
           "failedAuthenticationError": {
           "SystemMessage": {
           "Section": "Message example",
           "Message": "Test System Message"
           }
           } 
           "questionText": "{
           "SystemMessage": {
           "Section": "Question Text section example",
           "Message": "Question Text message example"
           }
           } 
           "allowRetake": "true",
           "loadExistingSession": "false"
          }
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateFlowElement
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: flowId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/FlowID'
        requestBody:
          description: Update flow element request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFlowElementRequest'
        responses:
          '200':
            description: Update flow element response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Flows
    /survey-definitions/{surveyId}/options:
      get:
        description: >-
          Retrieve [survey
          options](https://www.qualtrics.com/support/survey-platform/survey-module/survey-options/survey-options-overview/)
          for a survey with the `surveyId`.
        summary: Get Options
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getSurveyOptions
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        responses:
          '200':
            description: The survey options
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetSurveyOptionsResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Options
      put:
        summary: Update Options
        description: >-
          Update [survey
          options](https://www.qualtrics.com/support/survey-platform/survey-module/survey-options/survey-options-overview/)
          for a survey with the `surveyId`.
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateSurveyOptions
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        requestBody:
          description: Survey Options
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSurveyOptionsRequest'
        responses:
          '200':
            description: Options updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
                examples: {}
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Options
    /survey-definitions/{surveyId}/versions:
      get:
        description: >-
          Return a list of all [versions of a
          survey](https://www.qualtrics.com/support/survey-platform/survey-module/survey-publishing-versions/),
          including survey metadata.
        summary: List Survey Versions
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: listSurveyVersions
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        responses:
          '200':
            description: List of all versions of a survey, with metadata
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ListSurveyVersionsResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Versions
      post:
        description: >-
          Create a new [survey
          version](https://www.qualtrics.com/support/survey-platform/survey-module/survey-publishing-versions/).
        summary: Create Survey Version
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: createSurveyVersion
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        requestBody:
          description: Create new survey version request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSurveyVersionRequest'
              examples: {}
        responses:
          '200':
            description: Create new survey version response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateSurveyVersionResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Versions
    /survey-definitions/{surveyId}/versions/{versionId}:
      get:
        description: >-
          Retrieve a [survey
          version](https://www.qualtrics.com/support/survey-platform/survey-module/survey-publishing-versions/)
          definition.
        summary: Get Survey Version
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getSurveyVersion
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: versionId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/VersionID'
          - name: format
            in: query
            schema:
              description: The format of the survey export
              type: string
              enum:
                - qsf
        responses:
          '200':
            description: Get survey version definition
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetSurveyVersionResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Versions
    /survey-definitions/{surveyId}/quotas:
      get:
        description: >-
          Retrieve all
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/)
          definitions for a survey.
        summary: Get Quotas for Survey
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: getQuotas
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: pageSize
            in: query
            schema:
              description: The number of quotas to be returned in a page
              type: integer
              minimum: 1
              maximum: 50
          - name: skipToken
            in: query
            schema:
              description: Token to tell the api which page to fetch
              type: string
        responses:
          '200':
            description: Get all quota definitions for a survey
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetQuotasResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
      post:
        description: >-
          Create a new
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/).
        summary: Create Quota
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: createQuota
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: quotaGroupId
            in: query
            schema:
              $ref: '#/components/schemas/QuotaGroupID'
        requestBody:
          description: Create quota request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuotaRequest'
        responses:
          '200':
            description: Successful create quota response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateQuotaResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
    /survey-definitions/{surveyId}/quotas/{quotaId}:
      get:
        description: >-
          Retrieve a specific
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/)
          definition.
        summary: Get Quota for Survey
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getQuota
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: quotaId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/QuotaID'
        responses:
          '200':
            description: Get specific quota definition
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetQuotaResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
      put:
        description: >-
          Update a
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/)
          definition.
        summary: Update Quota in the Given Survey
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateQuota
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: quotaId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/QuotaID'
        requestBody:
          description: Update quota request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateQuotaRequest'
        responses:
          '200':
            description: Quota definition updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
      delete:
        description: >-
          Delete a
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/)
          from a survey.
        summary: Delete Quota
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: deleteQuota
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: quotaId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/QuotaID'
        responses:
          '200':
            description: Delete quota successful
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
    /survey-definitions/{surveyId}/quotagroups:
      get:
        description: >-
          Return a list of
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/)
          group definitions for a survey.
        summary: Get Quota Groups for Survey
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getQuotaGroups
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: pageSize
            in: query
            schema:
              description: The number of quota groups to be returned in a page
              type: integer
              minimum: 1
              maximum: 100
          - name: skipToken
            in: query
            schema:
              description: Token to tell the api which page to fetch
              type: string
        responses:
          '200':
            description: Get all quota group definitions for a survey
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetQuotaGroupsResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
      post:
        description: >-
          Create a new
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/)
          group.
        summary: Create Quota Group
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: createQuotaGroup
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
        requestBody:
          description: Create quota group request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuotaGroupRequest'
        responses:
          '200':
            description: Successful create quota group response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateQuotaGroupResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
    /survey-definitions/{surveyId}/quotagroups/{quotaGroupId}:
      get:
        description: >-
          Retrieve a specific
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/)
          group definition.
        summary: Get Quota Group for Survey
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getQuotaGroup
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: quotaGroupId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/QuotaGroupID'
        responses:
          '200':
            description: Get specific quota group definition
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GetQuotaGroupResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
      put:
        description: >-
          Update a
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/)
          group definition.
        summary: Update Quota Group
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateQuotaGroup
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: quotaGroupId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/QuotaGroupID'
        requestBody:
          description: Update quota group request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateQuotaGroupRequest'
        responses:
          '200':
            description: Quota group definition updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
      delete:
        description: >-
          Delete a
          [quota](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/quotas/)
          group and all its quotas from a survey.
        summary: Delete Quota Group
        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: deleteQuotaGroup
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/SurveyID'
          - name: quotaGroupId
            in: path
            required: true
            schema:
              $ref: '#/components/schemas/QuotaGroupID'
        responses:
          '200':
            description: Delete quota group and all its quotas successful
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '404':
            description: Resource not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotFoundErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Quotas
    /surveys/{surveyId}/languages:
      get:
        description: >-
          Returns a list of available
          [languages](https://www.qualtrics.com/support/survey-platform/getting-started/languages-in-qualtrics/)
          for a survey given the `surveyId`.
        summary: Get Languages
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getSurveyLanguages
        parameters:
          - name: surveyId
            in: path
            required: true
            description: The unique identifier of the survey.
            schema:
              title: SurveyId
              type: string
        responses:
          '200':
            description: The languages enabled for the survey
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LanguagesResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Languages
      put:
        summary: Update Languages
        description: >+
          Updates enabled
          [languages](https://www.qualtrics.com/support/survey-platform/getting-started/languages-in-qualtrics/)
          given the `surveyId`.

          <!--From Readme-->

          For more information about using the survey APIs, see [Managing
          Surveys](../../../../docs/Guides/Common%20Tasks/managing-surveys.md).

          <!-- theme: info -->


          >### Permissions

          >**Set Survey Options** permission must be enabled for the user to
          update survey languages.

        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateSurveyLanguages
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              title: SurveyId
              type: string
        requestBody:
          description: >-
            All languages to be enabled for the survey. Must include existing
            languages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSurveyLanguagesBody'
        responses:
          '200':
            description: Languages updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Languages
    /surveys/{surveyId}/translations/{languageCode}:
      get:
        summary: Get Survey Translations JSON
        description: >
          Return a list of all fields in a survey that can be
          [translated](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/translate-survey/)
          and their existing translations given a `surveyId` and `languageCode`.

          <!--From Readme-->

          For more information about using the survey APIs, see [Managing
          Surveys](../../../../docs/Guides/Common%20Tasks/managing-surveys.md).
        security:
          - api_token: []
          - public_oauth2:
              - read:surveys
        operationId: getSurveyTranslations
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              title: SurveyId
              type: string
          - name: languageCode
            in: path
            required: true
            schema:
              title: LanguageCode
              type: string
        responses:
          '200':
            description: The translations for the given survey and language code
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TranslationsResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Translations
      put:
        summary: Update Survey Translations
        description: >+
          Update a [survey
          translations](https://www.qualtrics.com/support/survey-platform/survey-module/survey-tools/translate-survey/)
          for a given `surveyId` and `language code`. Must include existing
          translations.

          <!--From Readme-->

          For more information about using the survey APIs, see [Managing
          Surveys](../../../../docs/Guides/Common%20Tasks/managing-surveys.md).

          <!-- theme: info -->


          >### Permissions

          >**Translate Surveys** permission must be enabled for the user to update
          survey languages.

        security:
          - api_token: []
          - public_oauth2:
              - write:surveys
        operationId: updateSurveyTranslations
        parameters:
          - name: surveyId
            in: path
            required: true
            schema:
              title: SurveyId
              type: string
          - name: languageCode
            in: path
            required: true
            schema:
              title: LanguageCode
              type: string
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyTranslations'
        responses:
          '200':
            description: Survey translations updated successfully.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/RequestSuccessfulResponse'
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InvalidRequestErrorResponse'
          '401':
            description: Unauthorized request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnauthorizedRequestErrorResponse'
                examples:
                  Invalid Client:
                    value:
                      meta:
                        httpStatus: 401 - Unauthorized
                        error:
                          errorMessage: invalid_client
                          errorCode: AUTH_6.0
                        requestId: ba475bf2-3a9e-4895-9674-d44a2ea3bc20
          '403':
            description: Operation is forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ForbiddenRequestErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/InternalServerErrorResponse'
        tags:
          - Survey Translations
  components:
    schemas:
      CreateSurveyRequest:
        oneOf:
          - $ref: '#/components/schemas/CreateNewSurveyRequest'
          - $ref: '#/components/schemas/ImportSurveyRequest'
      CreateNewSurveyRequest:
        title: Create survey request body
        type: object
        x-examples:
          example:
            SurveyName: My cool survey
            Language: EN
            ProjectCategory: CORE
        x-tags:
          - Schemas
        properties:
          SurveyName:
            description: The name of the survey.
            type: string
          Language:
            $ref: '#/components/schemas/LanguageCode'
          ProjectCategory:
            $ref: '#/components/schemas/ProjectCategory'
        required:
          - SurveyName
          - Language
          - ProjectCategory
      CreateSurveyResponse:
        title: Create survey response
        type: object
        required:
          - meta
          - result
        properties:
          result:
            title: Create survey result
            type: object
            required:
              - SurveyID
            properties:
              SurveyID:
                $ref: '#/components/schemas/SurveyID'
              DefaultBlockID:
                $ref: '#/components/schemas/BlockID'
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
        x-examples:
          example:
            SurveyID: SV_5vaK6JpGtrf2Ldz
            DefaultBlockID: BL_0Di21uQq3eUD1D7
        x-tags:
          - Schemas
      GetSurveyResponse:
        title: Get survey response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/SurveyDefinition'
        x-tags:
          - Schemas
      DeleteSurveyResponse:
        title: Get survey response
        type: object
        x-examples:
          example:
            DeletedDate: 2018-02-22 16:21:211
        x-tags:
          - Schemas
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            title: Delete survey result
            type: object
            required:
              - DeletedDate
            properties:
              DeletedDate:
                type: string
                description: Date of deletion.
        required:
          - meta
          - result
      ImportSurveyRequest:
        $ref: '#/components/schemas/SurveyQSF'
      CreateSurveyVersionRequest:
        title: Create survey version request body
        type: object
        x-examples:
          example:
            Description: 2018 Phone Launch
            Published: true
        x-tags:
          - Schemas
        properties:
          Description:
            description: A user-provided description of the survey version.
            type: string
          Published:
            description: When true, mark the survey version as published.
            type: boolean
        required:
          - Description
          - Published
      SurveyVersionMetadata:
        title: Version Metadata
        type: object
        x-tags:
          - Schemas
        properties:
          surveyID:
            $ref: '#/components/schemas/SurveyID'
          versionID:
            title: Version Id
            type: string
            description: The unique identifier for this survey version.
          versionNumber:
            title: Version number
            type: integer
            description: The version number of this survey.
          description:
            title: Version description
            type: string
            description: A user-provided description of the survey version.
          userID:
            $ref: '#/components/schemas/UserID'
          creationDate:
            title: Version creation date
            type: string
            format: date-time
            description: >-
              The creation date of survey version expressed as an [ISO
              8601](https://www.iso.org/iso-8601-date-and-time-format.html) value.
          published:
            title: Published
            type: boolean
            description: When true, publish the new version.
          wasPublished:
            title: Was published
            type: boolean
            description: Filter surveys by the publication status.
          publishEvents:
            title: Version publish events
            type: array
            items:
              title: Publish Event
              type: object
              additionalProperties: true
              properties:
                date:
                  type: string
                  format: date-time
                  description: >-
                    The publication date of the survey expressed as an [ISO
                    8601](https://www.iso.org/iso-8601-date-and-time-format.html)
                    value.
                userID:
                  $ref: '#/components/schemas/UserID'
              required:
                - date
                - userID
        required:
          - surveyID
          - versionID
          - versionNumber
          - description
          - userID
          - creationDate
          - published
          - wasPublished
          - publishEvents
      UpdateMetadataRequest:
        title: Update Metadata Request
        type: object
        minProperties: 1
        properties:
          SurveyName:
            title: Survey Name
            type: string
            description: The name of the survey.
          SurveyDescription:
            title: Survey Description
            type: string
            description: A user-provided description of the survey.
            nullable: true
          SurveyStatus:
            $ref: '#/components/schemas/SurveyStatusPutMetadata'
          SurveyStartDate:
            title: Survey Start Date
            type: string
            pattern: ^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
            description: >-
              The start date of the survey expressed as a [MySQL
              datetime](https://dev.mysql.com/doc/refman/8.0/en/datetime.html)
              value.
          SurveyExpirationDate:
            title: Survey Expiration Date
            type: string
            pattern: ^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$
            description: >-
              The expiration date of the survey expressed as a [MySQL
              datetime](https://dev.mysql.com/doc/refman/8.0/en/datetime.html)
              value.
      CreateSurveyVersionResponse:
        title: Create survey version response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            title: Create survey version result
            type: object
            required:
              - metadata
            properties:
              metadata:
                $ref: '#/components/schemas/SurveyVersionMetadata'
        x-examples:
          example:
            metadata:
              surveyID: SV_6yhT1nisH1SoMzX
              versionID: '9223370503198924109'
              versionNumber: 2
              description: User-published version
              userID: UR_3pHAmw5pZqDN4VL
              creationDate: '2019-03-15T00:35:58Z'
              published: true
              wasPublished: true
              publishEvents:
                - date: '2019-03-15T00:44:10Z'
                  userID: UR_3pHAmw5pZqDN4VL
        x-tags:
          - Schemas
      ListSurveyVersionsResponse:
        title: List survey versions response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            type: object
            required:
              - elements
            properties:
              elements:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyVersionMetadata'
        x-examples:
          example:
            elements:
              - surveyID: SV_6yhT1nisH1SoMzX
                versionID: '9223370503198923603'
                versionNumber: 2
                description: User-published version
                userID: UR_3pHAmw5pZqDN4VL
                creationDate: '2019-03-15T00:35:58Z'
                published: true
                wasPublished: true
                publishEvents:
                  - date: '2019-03-15T00:44:10Z'
                    userID: UR_3pHAmw5pZqDN4VL
              - surveyID: SV_6yhT1nisH1SoMzX
                versionID: '9223370503198924109'
                versionNumber: 1
                description: User-published version
                userID: UR_3pHAmw5pZqDN4VL
                creationDate: '2019-03-15T00:35:58Z'
                published: false
                wasPublished: true
                publishEvents:
                  - date: '2019-03-15T00:44:10Z'
                    userID: UR_3pHAmw5pZqDN4VL
        x-tags:
          - Schemas
      GetSurveyVersionResponse:
        title: Get survey version response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/SurveyDefinition'
        x-tags:
          - Schemas
      CreateBlockRequest:
        $ref: '#/components/schemas/BlockDefinition'
      CreateBlockResponse:
        title: Create block response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            title: Create block result
            type: object
            required:
              - BlockID
              - FlowID
            properties:
              BlockID:
                $ref: '#/components/schemas/BlockID'
              FlowID:
                $ref: '#/components/schemas/FlowID'
        x-examples:
          example:
            BlockID: BL_3gAZPwnLtmDuv3f
            FlowID: FL_4
        x-tags:
          - Schemas
      GetQuotaResponse:
        title: Get quota response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/Quota'
        x-examples:
          example:
            meta:
              httpStatus: 200 - OK
              requestId: 314c6686-12bd-4d77-ae3f-5a044f4eeda7
            result:
              Name: Test Quota
              Occurrences: 1000
              Logic:
                '0':
                  '0':
                    LogicType: Question
                    QuestionID: QID1
                    QuestionIsInLoop: 'no'
                    ChoiceLocator: q://QID1/SelectableChoice/1
                    Operator: Selected
                    QuestionIDFromLocator: QID1
                    LeftOperand: q://QID1/SelectableChoice/1
                    Type: Expression
                    Description: >-
                      <span class="ConjDesc">If</span> <span
                      class="QuestionDesc">What is your quest?</span> <span
                      class="LeftOpDesc">To seek the holy grail</span> <span
                      class="OpDesc">Is Selected</span>
                  Type: If
                Type: BooleanExpression
              LogicType: Simple
              QuotaAction: EndCurrentSurvey
              ActionInfo:
                '0':
                  '0':
                    ActionType: EndCurrentSurvey
                    Type: Expression
                    LogicType: QuotaAction
                  Type: If
                Type: BooleanExpression
              ID: QO_abcdefghijklmno
              QuotaRealm: Survey
              QuotaSchedule: null
              EndSurveyOptions:
                EndingType: Default
                ResponseFlag: QuotaMet
                SurveyTermination: DefaultMessage
        x-tags:
          - Schemas
      GetQuotasResponse:
        title: Get quotas response
        type: object
        x-examples:
          example:
            meta:
              httpStatus: 200 - OK
              requestId: 2771b1b0-f0a7-4619-9dc8-046c5bf6f1a3
            result:
              elements:
                - Name: New Quota
                  Occurrences: 100
                  Logic:
                    '0':
                      '0':
                        LogicType: Question
                        QuestionID: QID1
                        QuestionIsInLoop: 'yes'
                        LoopAndMergeLoops: BL_dj3gtMBWkzXmo7j,6
                        LoopTarget: none
                        ChoiceLocator: q://QID1/SelectableChoice/1
                        Operator: Selected
                        QuestionIDFromLocator: QID1
                        LeftOperand: q://6_QID1/SelectableChoice/1
                        Type: Expression
                        Description: >-
                          <span class="ConjDesc">If</span> <span
                          class="QuestionDesc">What is your quest? (Loop 6: 42,
                          )</span> <span class="LeftOpDesc">To seek the holy
                          grail</span> <span class="OpDesc">Is Selected</span> 
                      Type: If
                    Type: BooleanExpression
                  LogicType: Simple
                  QuotaAction: EndCurrentSurvey
                  ActionInfo:
                    '0':
                      '0':
                        ActionType: EndCurrentSurvey
                        Type: Expression
                        LogicType: QuotaAction
                      Type: If
                    Type: BooleanExpression
                  ID: QO_EI9KoaKyVNqatAd
                  QuotaRealm: Survey
                  QuotaSchedule: null
                  EndSurveyOptions:
                    EndingType: Default
                    ResponseFlag: QuotaMet
                    SurveyTermination: DefaultMessage
                - Name: Simple quota
                  Occurrences: 1000
                  Logic:
                    '0':
                      '0':
                        LogicType: Question
                        QuestionID: QID1
                        QuestionIsInLoop: 'no'
                        ChoiceLocator: q://QID1/SelectableChoice/1
                        Operator: Selected
                        QuestionIDFromLocator: QID1
                        LeftOperand: q://QID1/SelectableChoice/1
                        Type: Expression
                        Description: >-
                          <span class="ConjDesc">If</span> <span
                          class="QuestionDesc">What is your quest?</span> <span
                          class="LeftOpDesc">To seek the holy grail</span> <span
                          class="OpDesc">Is Selected</span> 
                      Type: If
                    Type: BooleanExpression
                  LogicType: Simple
                  QuotaAction: EndCurrentSurvey
                  ActionInfo:
                    '0':
                      '0':
                        ActionType: EndCurrentSurvey
                        Type: Expression
                        LogicType: QuotaAction
                      Type: If
                    Type: BooleanExpression
                  ID: QO_hmezLihVIbqWQks
                  QuotaRealm: Survey
                  QuotaSchedule: null
                  EndSurveyOptions:
                    EndingType: Default
                    ResponseFlag: QuotaMet
                    SurveyTermination: DefaultMessage
                - Name: Scheduled quota
                  Occurrences: 1000
                  Logic:
                    '0':
                      '0':
                        LogicType: EmbeddedField
                        LeftOperand: RecipientLastName
                        Operator: EqualTo
                        RightOperand: Vader
                        Type: Expression
                        Description: >-
                          <span class="ConjDesc">If</span>  <span
                          class="LeftOpDesc">RecipientLastName</span> <span
                          class="OpDesc">Is Equal to</span> <span
                          class="RightOpDesc"> Vader </span>
                      Type: If
                    Type: BooleanExpression
                  LogicType: Simple
                  QuotaAction: EndCurrentSurvey
                  ActionInfo:
                    '0':
                      '0':
                        ActionType: EndCurrentSurvey
                        Type: Expression
                        LogicType: QuotaAction
                      Type: If
                    Type: BooleanExpression
                  ID: QO_L6PPxGneqqJFlId
                  QuotaRealm: Survey
                  QuotaSchedule:
                    QuotaStart: '2019-01-01'
                    QuotaPeriodLength: '3'
                    QuotaNumPeriods: '5'
                    StartTimezone: America/Denver
                  EndSurveyOptions:
                    EndingType: Default
                    ResponseFlag: QuotaMet
                    SurveyTermination: DefaultMessage
        x-tags:
          - Schemas
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            title: Get quotas
            type: object
            required:
              - elements
            properties:
              elements:
                type: array
                items:
                  $ref: '#/components/schemas/Quota'
              nextPage:
                description: >-
                  A URL with the parameters required to access the next page of
                  quotas.
                type: string
        required:
          - meta
          - result
      UpdateQuotaRequest:
        $ref: '#/components/schemas/Quota'
      CreateQuotaRequest:
        $ref: '#/components/schemas/Quota'
      CreateQuotaResponse:
        title: Create quota response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            title: Create quota result
            type: object
            required:
              - QuotaID
              - QuotaGroupID
            properties:
              QuotaID:
                $ref: '#/components/schemas/QuotaID'
              QuotaGroupID:
                $ref: '#/components/schemas/QuotaGroupID'
        x-tags:
          - Schemas
      UpdateQuotaGroupRequest:
        $ref: '#/components/schemas/QuotaGroup'
      GetQuotaGroupResponse:
        title: Get quota group response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/QuotaGroup'
        x-examples:
          example:
            meta:
              httpStatus: 200 - OK
              requestId: 17eca504-5c96-45ee-9868-099746a2431d
            result:
              ID: QG_2Ds3413oqlm1sIH
              Name: Quota Group 2
              Selected: false
              MultipleMatch: ReverseOrder
              Public: false
              Quotas:
                - QO_4G2c2sS0P2pzaFW
        x-tags:
          - Schemas
      CreateQuotaGroupRequest:
        $ref: '#/components/schemas/QuotaGroup'
      CreateQuotaGroupResponse:
        title: Create quota group response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            title: Create quota group result
            type: object
            required:
              - QuotaGroupID
            properties:
              QuotaGroupID:
                $ref: '#/components/schemas/QuotaGroupID'
        x-tags:
          - Schemas
      GetQuotaGroupsResponse:
        title: Get quota groups response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            title: Get quota groups
            type: object
            required:
              - elements
            properties:
              elements:
                type: array
                items:
                  $ref: '#/components/schemas/QuotaGroup'
              nextPage:
                description: >-
                  A url containing the parameters required to access the next page
                  of quota groups
                type: string
        x-examples:
          example:
            meta:
              httpStatus: 200 - OK
              requestId: 48718ead-782d-4184-9241-f739543b5d22
            result:
              elements:
                - ID: QG_AQLG9E6J1aK4i7l
                  Name: Quota Group 2
                  Selected: false
                  MultipleMatch: ReverseOrder
                  Public: false
                  Quotas:
                    - QO_HdEBAA2mkFJA3sB
                    - QO_gaCzAsVQD1n3okL
                - ID: QG_NjQyHmg3bpNHlEl
                  Name: Quota Group 1
                  Selected: true
                  MultipleMatch: PlaceInAll
                  Public: false
                  Quotas:
                    - QO_CJuQTePP7hDwgC2
                    - QO_toOxdekfSwrWfQQ
        x-tags:
          - Schemas
      BlockDefinition:
        anyOf:
          - $ref: '#/components/schemas/ReferenceBlock'
          - $ref: '#/components/schemas/StandardBlock'
          - $ref: '#/components/schemas/TrashBlock'
          - $ref: '#/components/schemas/ConjointBlock'
        x-tags:
          - Schemas
      ConjointBlock:
        description: Experience blocks limit the editable fields on the block.
        title: Conjoint Block
        type: object
        additionalProperties: true
        required:
          - Type
          - SubType
        properties:
          Type:
            type: string
            enum:
              - ExperienceBlock
          SubType:
            description: >-
              Choice Based Conjoint Blocks hide their elements from editing using
              the Group Flow element and ViewFlow: false
            type: string
            enum:
              - CBConjoint
              - MaxDiff
        x-examples:
          example:
            Type: ExperienceBlock
            SubType: CBConjoint
            Description: Conjoint Block
            ID: BL_dia0gxVQsvJa0UR
            BlockElements: []
        x-tags:
          - Schemas
      ReferenceBlock:
        description: Saved survey in the library that can be referenced by other surveys
        title: Reference Block
        type: object
        additionalProperties: true
        required:
          - Description
          - Type
          - SubType
          - ID
          - LibraryID
          - ReferencedBlockID
        properties:
          BlockElements:
            type: array
            items:
              $ref: '#/components/schemas/BlockElements'
            nullable: true
          Type:
            type: string
            enum:
              - Standard
          SubType:
            type: string
            enum:
              - Reference
          ID:
            $ref: '#/components/schemas/BlockID'
          Description:
            type: string
            nullable: true
          LibraryID:
            $ref: '#/components/schemas/LibraryID'
          ReferencedBlockID:
            $ref: '#/components/schemas/ReferencedBlockID'
          Options:
            $ref: '#/components/schemas/BlockOptions'
        x-examples:
          example:
            Type: Standard
            SubType: Reference
            Description: null
            ID: BL_d7tGuyhg0ec00PH
            LibraryID: GR_9NzndCXq4GkdUwJ
            ReferencedBlockID: LB_39jTPoKafNaUF9z
            BlockElements: null
        x-tags:
          - Schemas
      StandardBlock:
        description: >-
          A logical grouping of questions, split by pages, with configuration on
          how to control the flow and visibility of each question. The original
          block's type is "Default"
        title: Standard Block
        type: object
        additionalProperties: true
        required:
          - Description
          - Type
        properties:
          Type:
            type: string
            enum:
              - Standard
              - Default
          BlockElements:
            $ref: '#/components/schemas/BlockElements'
          ID:
            $ref: '#/components/schemas/BlockID'
          Description:
            type: string
            maxLength: 100
        x-examples:
          example:
            Type: Standard
            Description: My Block Name
            ID: BL_fakeblockid1234
            BlockElements:
              - Type: Question
                QuestionID: QID1
            Options:
              BlockLocking: 'false'
              RandomizeQuestions: 'false'
              BlockVisibility: Collapsed
        x-tags:
          - Schemas
      TrashBlock:
        description: >-
          Exactly one Trash block per survey. Questions deleted from the UI are
          stored here for resuscitation
        title: Trash Block
        type: object
        additionalProperties: true
        required:
          - Description
          - Type
        properties:
          Type:
            type: string
            enum:
              - Trash
          BlockElements:
            $ref: '#/components/schemas/BlockElements'
          ID:
            $ref: '#/components/schemas/BlockID'
          Description:
            type: string
            maxLength: 100
        x-examples:
          example:
            Type: Trash
            Description: My Trash Block Name
            ID: BL_fakeblockid1234
            BlockElements:
              - Type: Question
                QuestionID: QID1
        x-tags:
          - Schemas
      GetBlockResponse:
        title: Get block response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/BlockDefinition'
        x-tags:
          - Schemas
      UpdateBlockRequest:
        $ref: '#/components/schemas/BlockDefinition'
      UpdateQuestionRequest:
        $ref: '#/components/schemas/QuestionDefinition'
      MetadataResponse:
        title: Get metadata response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/SurveyMetadata'
        x-tags:
          - Schemas
      CreateQuestionRequest:
        $ref: '#/components/schemas/QuestionDefinition'
      CreateQuestionResponse:
        title: Get question response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            title: Create question result
            type: object
            required:
              - QuestionID
            properties:
              QuestionID:
                $ref: '#/components/schemas/QuestionID'
        x-examples: {}
        x-tags:
          - Schemas
      GetQuestionsResponse:
        title: Get questions response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            title: Get questions response
            type: object
            required:
              - elements
            properties:
              elements:
                type: array
                items:
                  $ref: '#/components/schemas/QuestionDefinition'
        x-tags:
          - Schemas
      GetQuestionResponse:
        $ref: '#/components/schemas/QuestionDefinition'
      GetFlowResponse:
        title: Get flow response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/FlowDefinition'
        x-tags:
          - Schemas
      LanguagesResponse:
        title: Get languages response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/SurveyLanguages'
        x-tags:
          - Schemas
      TranslationsResponse:
        title: Get survey translations response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/SurveyTranslations'
        x-tags:
          - Schemas
      RequestSuccessfulResponse:
        title: Request successful response
        description: The request was successful and there's no additional result to return
        type: object
        required:
          - meta
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
        x-examples:
          example:
            meta:
              httpStatus: 200 - OK
              requestId: 05d50259-e7cb-4501-b0d3-8b4f1678e882
        x-tags:
          - Schemas
      InvalidRequestErrorResponse:
        title: Invalid request error response
        type: object
        required:
          - meta
        properties:
          meta:
            $ref: '#/components/schemas/ErrorMeta'
        x-examples:
          example:
            meta:
              error:
                errorCode: MSTC_1
                errorMessage: Invalid survey ID
        x-tags:
          - Schemas
      UnauthorizedRequestErrorResponse:
        title: Unauthorized request error response
        type: object
        required:
          - meta
        properties:
          meta:
            $ref: '#/components/schemas/ErrorMeta'
        x-examples:
          example:
            meta:
              error:
                errorCode: DCD_7
                errorMessage: Unrecognized X-API-TOKEN.
        x-tags:
          - Schemas
      ForbiddenRequestErrorResponse:
        title: Forbidden request error response
        type: object
        required:
          - meta
        properties:
          meta:
            $ref: '#/components/schemas/ErrorMeta'
        x-examples:
          example:
            meta:
              error:
                errorCode: MSTC_3
                errorMessage: Operation is forbidden
        x-tags:
          - Schemas
      NotFoundErrorResponse:
        title: Resource not found error response
        type: object
        required:
          - meta
        properties:
          meta:
            $ref: '#/components/schemas/ErrorMeta'
        x-examples:
          example:
            meta:
              error:
                errorCode: QMST_2.2
                errorMessage: The requested resource could not be found
        x-tags:
          - Schemas
      InternalServerErrorResponse:
        title: Internal server error response
        type: object
        required:
          - meta
        properties:
          meta:
            $ref: '#/components/schemas/ErrorMeta'
        x-examples:
          example:
            meta:
              error:
                errorCode: MSTC_1
                errorMessage: Internal server error
        x-tags:
          - Schemas
      SuccessfulMeta:
        title: Meta without error
        type: object
        x-tags:
          - Schemas
        properties:
          httpStatus:
            $ref: '#/components/schemas/HttpStatus'
          requestId:
            title: requestId
            type: string
            description: The unique identifier of the associated request.
          notice:
            title: An informational string about the request.
            type: string
            description: Additional information about this response.
        required:
          - httpStatus
          - requestId
      ErrorMeta:
        title: Meta with error
        type: object
        required:
          - httpStatus
          - requestId
          - error
        properties:
          httpStatus:
            $ref: '#/components/schemas/HttpStatus'
          requestId:
            $ref: '#/components/schemas/RequestId'
          notice:
            title: An informational string about the request.
            type: string
          error:
            $ref: '#/components/schemas/ErrorMessage'
        x-tags:
          - Schemas
      SurveyDefinition:
        title: Survey definition
        type: object
        additionalProperties: true
        x-examples:
          example:
            QuestionCount: '1'
            SurveyOptions:
              BackButton: 'false'
              SaveAndContinue: 'true'
              SurveyProtection: PublicSurvey
              BallotBoxStuffingPrevention: 'false'
              NoIndex: 'Yes'
              SecureResponseFiles: 'true'
              SurveyExpiration: None
              SurveyTermination: DefaultMessage
              Header: ''
              Footer: ''
              ProgressBarDisplay: None
              PartialData: +1 week
              ValidationMessage: ''
              PreviousButton: ' ← '
              NextButton: ' → '
              SkinLibrary: myoungldev
              SkinType: templated
              Skin:
                brandingId: null
                templateId: '*base'
                overrides: null
              NewScoring: 1
              SurveyLanguage: EN
              ActiveResponseSet: RS_9StC05LnuKmpcI5
              SurveyStartDate: null
              SurveyExpirationDate: null
              SurveyCreationDate: '2018-10-29T12:14:05Z'
            SurveyID: SV_0ODVm59K4i9tjcp
            SurveyName: new prooooooject
            SurveyStatus: Inactive
            LastModified: '2018-10-29T12:36:12Z'
            BrandID: myoungldev
            OwnerID: UR_3Cz41f8fIqINzaR
            DivisionID: DV_7WEhUEQlbizXLvf
            LastAccessed: null
            CreatorID: UR_3Cz41f8fIqINzaR
            LastActivated: null
            Questions:
              QID1:
                QuestionText: Click to write the question text
                DataExportTag: Q1
                QuestionType: MC
                Selector: SAVR
                SubSelector: TX
                Configuration:
                  QuestionDescriptionOption: UseText
                QuestionDescription: Click to write the question text
                Choices:
                  '1':
                    Display: Click to write Choice 1
                  '2':
                    Display: Click to write Choice 2
                  '3':
                    Display: Click to write Choice 3
                ChoiceOrder:
                  - '1'
                  - '2'
                  - '3'
                Validation:
                  Settings:
                    ForceResponse: 'OFF'
                    ForceResponseType: 'ON'
                    Type: None
                Language: []
                NextChoiceId: 4
                NextAnswerId: 1
                QuestionID: QID1
                QuestionText_Unsafe: Click to write the question text
            Blocks:
              BL_3rC3WnIo3l3cryt:
                Type: Default
                Description: Default Question Block
                ID: BL_3rC3WnIo3l3cryt
                BlockElements:
                  - Type: Question
                    QuestionID: QID1
              BL_8eugjlkTG4F1zWl:
                Type: Trash
                Description: Trash / Unused Questions
                ID: BL_8eugjlkTG4F1zWl
            ResponseSets:
              RS_9StC05LnuKmpcI5: Default Response Set
            SurveyFlow:
              Flow:
                - ID: BL_3rC3WnIo3l3cryt
                  Type: Block
                  FlowID: FL_2
              Properties:
                Count: 2
              FlowID: FL_1
              Type: Root
            Scoring:
              ScoringCategories: []
              ScoringCategoryGroups: []
              ScoringSummaryCategory: null
              ScoringSummaryAfterQuestions: 0
              ScoringSummaryAfterSurvey: 0
              DefaultScoringCategory: null
              AutoScoringCategory: null
            ProjectInfo:
              SurveyID: SV_0ODVm59K4i9tjcp
              ProjectCategory: CORE
              ProjectType: null
              CompositionType: null
              ContentBundle: null
            BrandBaseURL: https://myoungldev.b1-prv.qualtrics.com
        x-tags:
          - Schemas
        properties:
          QuestionCount:
            description: Number of questions in the survey
            type: string
          SurveyOptions:
            $ref: '#/components/schemas/SurveyOptions'
          SurveyID:
            $ref: '#/components/schemas/SurveyID'
          SurveyName:
            type: string
          SurveyStatus:
            $ref: '#/components/schemas/SurveyStatus'
          LastModified:
            type: string
            format: date-time
          BrandID:
            type: string
          OwnerID:
            $ref: '#/components/schemas/UserID'
          DivisionID:
            $ref: '#/components/schemas/DivisionID'
          LastAccessed:
            type: string
            format: date-time
            description: 'The date the survey was last accessed '
          CreatorID:
            $ref: '#/components/schemas/UserID'
          LastActivated:
            type: string
            format: date-time
          Questions:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/QuestionDefinition'
            description: Survey questions.
          Blocks:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/BlockDefinition'
            description: Survey blocks.
          ResponseSets:
            type: object
            additionalProperties:
              type: string
            description: Survey response sets.
          SurveyFlow:
            $ref: '#/components/schemas/FlowDefinition'
          Scoring:
            $ref: '#/components/schemas/ScoringDefinition'
          ProjectInfo:
            $ref: '#/components/schemas/ProjectInfoDefinition'
          BrandBaseURL:
            type: string
            format: uri
        required:
          - SurveyOptions
          - SurveyID
          - SurveyName
          - SurveyStatus
          - LastModified
          - BrandID
          - OwnerID
          - LastAccessed
          - CreatorID
          - LastActivated
          - Questions
          - Blocks
          - ResponseSets
          - SurveyFlow
          - Scoring
          - ProjectInfo
          - BrandBaseURL
      Quota:
        title: Survey Quota
        type: object
        description: Keep track of how many respondents meet a condition in the survey
        required:
          - Name
          - Occurrences
          - Logic
          - QuotaAction
          - ID
          - QuotaRealm
        properties:
          Name:
            description: Quota Name
            type: string
          Occurrences:
            description: 'Quota Limit. Default: 100'
            type: integer
          Count:
            description: 'Quota Count. Default: 0'
            type: integer
          CountForUndo:
            description: For restoring quota count
            type: integer
          Logic:
            description: Logic of when to increment the quota
            oneOf:
              - $ref: '#/components/schemas/LogicObject'
              - type: array
                items:
                  $ref: '#/components/schemas/LogicObject'
          LogicType:
            description: One of Simple or Cross Logic Quota
            oneOf:
              - type: string
                enum:
                  - Simple
                  - Cross
          QuotaAction:
            $ref: '#/components/schemas/QuotaAction'
          ActionElement:
            description: >-
              The element corresponding to the `QuotaAction` when `QuotaAction` is
              one of `DontDisplaySurvey`, `DontDisplayQuestion`, or
              `DontDisplayBlock`. See `QuotaAction`
            anyOf:
              - $ref: '#/components/schemas/SurveyID'
              - $ref: '#/components/schemas/QuestionID'
              - $ref: '#/components/schemas/BlockID'
              - type: string
          ActionInfo:
            $ref: '#/components/schemas/ActionInfo'
          ActionLogic:
            $ref: '#/components/schemas/ActionInfo'
          ID:
            $ref: '#/components/schemas/QuotaID'
          QuotaRealm:
            description: One of Survey or ResponseSet
            type: string
            enum:
              - Survey
              - ResponseSet
          QuotaSchedule:
            $ref: '#/components/schemas/QuotaSchedule'
          EndSurveyOptions:
            $ref: '#/components/schemas/EndSurveyOptions'
          WebServiceOptions:
            $ref: '#/components/schemas/WebServiceOptions'
          CrossLogicDef:
            description: Definition for the cross logic quota
            type: array
            items:
              $ref: '#/components/schemas/CrossLogicDefEntry'
          PerformActionOnUser:
            $ref: '#/components/schemas/PerformActionOnUser'
        x-tags:
          - Schemas
      QuotaGroup:
        description: Survey definition for Quota Groups
        type: object
        additionalProperties: false
        properties:
          ID:
            $ref: '#/components/schemas/QuotaGroupID'
          Id:
            $ref: '#/components/schemas/QuotaGroupID'
          MultipleMatch:
            type: string
            enum:
              - PlaceInAll
              - LeastFilled
              - MostFilled
              - LeastFilledPercent
              - MostFilledPercent
              - ReverseOrder
              - CurrentDefinedOrder
            description: >-
              Determines behavior when a single response matches multiple quotas
              within the group. One of `PlaceInAll`, `LeastFilled`, `MostFilled`,
              `LeastFilledPercent`, `MostFilledPercent`, `ReverseOrder`, or
              `CurrentDefinedOrder`
          Name:
            type: string
            description: Name of the quota group
          Public:
            type: boolean
            description: >-
              `Public` refers to whether or not the Public Quota Dashboard is
              enabled. Enabling the Public Quota Dashboard will provide a public
              page where anyone can view the quotas in that group.
          Quotas:
            description: A list of all the quotas in the group
            type: array
            maxItems: 5000
            items:
              $ref: '#/components/schemas/QuotaID'
          Selected:
            type: boolean
            description: Input will not be persisted. It is only used by the Quota Editor UI
        required:
          - ID
        x-tags:
          - Schemas
      LogicObject:
        type: object
        additionalProperties: true
        x-tags:
          - Schemas
      QuotaAction:
        description: >-
          Specify the action to take once the quota has been met for the
          respondent. Default: `EndCurrentSurvey`. See `ActionInfo` and
          `ActionElement`
        type: string
        enum:
          - EndCurrentSurvey
          - DontDisplaySurvey
          - DontDisplayQuestion
          - DontDisplayBlock
          - CallWebService
          - ForBranching
          - SiteIntercept
        x-tags:
          - Schemas
      ActionInfo:
        description: Additional info for `QuotaAction`. See `QuotaAction`
        type: object
        additionalProperties: true
        x-tags:
          - Schemas
      QuotaSchedule:
        oneOf:
          - type: object
            additionalProperties: false
            required:
              - QuotaStart
              - QuotaPeriodLength
              - QuotaNumPeriods
            properties:
              QuotaStart:
                type: string
                pattern: >-
                  ^(20[0-9][0-9])-((0[1-9])|(1[0-2]))-((0[1-9])|([1-2][0-9])|(3[0-1]))$
              QuotaPeriodLength:
                $ref: '#/components/schemas/QuotaPeriodLength'
              QuotaNumPeriods:
                $ref: '#/components/schemas/QuotaPeriodLength'
              StartTimezone:
                $ref: '#/components/schemas/TimeZone'
              QuotaCounts:
                type: array
                maxItems: 0
                items:
                  type: integer
        x-tags:
          - Schemas
      TimeZone:
        type: string
        enum:
          - Africa/Bangui
          - Africa/Harare
          - Africa/Nairobi
          - America/Anchorage
          - America/Argentina/Buenos_Aires
          - America/Chicago
          - America/Denver
          - America/La_Paz
          - America/Los_Angeles
          - America/Montevideo
          - America/New_York
          - America/Noronha
          - America/Phoenix
          - America/Rio_Branco
          - Asia/Baku
          - Asia/Bangkok
          - Asia/Calcutta
          - Asia/Dhaka
          - Asia/Hong_Kong
          - Asia/Irkutsk
          - Asia/Kabul
          - Asia/Karachi
          - Asia/Katmandu
          - Asia/Krasnoyarsk
          - Asia/Tehran
          - Asia/Magadan
          - Asia/Muscat
          - Asia/Novosibirsk
          - Asia/Rangoon
          - Asia/Seoul
          - Asia/Yakutsk
          - Asia/Yekaterinburg
          - Atlantic/Azores
          - Atlantic/Cape_Verde
          - Atlantic/Reykjavik
          - Australia/Adelaide
          - Australia/Brisbane
          - Australia/Canberra
          - Australia/Darwin
          - Canada/Atlantic
          - Canada/East-Saskatchewan
          - Canada/Newfoundland
          - Europe/Athens
          - Europe/Berlin
          - Europe/London
          - Europe/Moscow
          - Pacific/Auckland
          - Pacific/Fiji
          - Pacific/Honolulu
          - Pacific/Midway
          - Pacific/Tongatapu
        x-tags:
          - Schemas
      QuotaPeriodLength:
        type: integer
        minimum: 0
        maximum: 1000
        x-tags:
          - Schemas
      EndSurveyOptions:
        type: object
        additionalProperties: false
        required:
          - EndingType
        properties:
          EndingType:
            description: Whether to use the default ending options or advanced (custom)
            type: string
            enum:
              - Default
              - Advanced
          ResponseFlag:
            description: How to mark the response. Default `QuotaMet`
            type: string
            enum:
              - QuotaMet
          SurveyTermination:
            $ref: '#/components/schemas/SurveyTermination'
          EOSRedirectURL:
            $ref: '#/components/schemas/EOSRedirectURL'
          EOSMessageLibrary:
            $ref: '#/components/schemas/EOSMessageLibrary'
          EOSMessage:
            $ref: '#/components/schemas/EOSMessage'
          EmailThankYou:
            $ref: '#/components/schemas/EmailThankYou'
          ThankYouEmailMessageLibrary:
            $ref: '#/components/schemas/ThankYouEmailMessageLibrary'
          ThankYouEmailMessage:
            $ref: '#/components/schemas/ThankYouEmailMessage'
          ResponseSummary:
            $ref: '#/components/schemas/ResponseSummary'
          ConfirmResponseSummary:
            description: Show response summary before completing the survey
            type: string
            enum:
              - 'Yes'
              - ''
          ConfirmMessageLibrary:
            $ref: '#/components/schemas/MessageLibraryID'
          ConfirmMessage:
            $ref: '#/components/schemas/MessageID'
          CountQuotas:
            $ref: '#/components/schemas/YesNoEmptyString'
          Screenout:
            $ref: '#/components/schemas/YesNoEmptyString'
          ScreenOutName:
            type: string
          AnonymizeResponse:
            $ref: '#/components/schemas/YesNoEmptyString'
          IgnoreResponse:
            $ref: '#/components/schemas/YesNoEmptyString'
        x-tags:
          - Schemas
      WebServiceOptions:
        type: object
        additionalProperties: false
        required:
          - url
          - params
        properties:
          url:
            $ref: '#/components/schemas/httpUrlString'
          params:
            type: array
            items:
              type: object
              additionalProperties: false
              required:
                - key
                - value
              properties:
                key:
                  type: string
                value:
                  type: string
            maxItems: 1000
        x-tags:
          - Schemas
      CrossLogicDefEntry:
        type: object
        additionalProperties: false
        required:
          - Occurrences
          - Logic
          - Description
          - ID
        properties:
          Occurrences:
            type: number
          Description:
            type: string
          ID:
            type: integer
            minimum: 0
            maximum: 1000
          Logic:
            $ref: '#/components/schemas/LogicObject'
          Count:
            type: integer
          OverrideOccurrences:
            type: integer
        x-tags:
          - Schemas
      PerformActionOnUser:
        type: boolean
        x-tags:
          - Schemas
      SurveyQSF:
        title: Survey QSF
        type: object
        required:
          - SurveyEntry
          - SurveyElements
        properties:
          SurveyEntry:
            $ref: '#/components/schemas/SurveyMetadata'
          SurveyElements:
            title: Survey elements
            type: array
            items:
              $ref: '#/components/schemas/SurveyElement'
        x-examples:
          example:
            SurveyEntry:
              SurveyID: SV_3h2aj5oftWHRcB7
              SurveyName: new sooorvey
              SurveyDescription: null
              SurveyOwnerID: UR_cOpsQDbPJqbyNw1
              SurveyBrandID: dpatty
              DivisionID: null
              SurveyLanguage: EN
              SurveyActiveResponseSet: RS_6LLLLDaFHwxSe3z
              SurveyStatus: Inactive
              SurveyStartDate: '0000-00-00 00:00:00'
              SurveyExpirationDate: '0000-00-00 00:00:00'
              SurveyCreationDate: '2018-11-20 12:44:33'
              CreatorID: UR_cOpsQDbPJqbyNw1
              LastModified: '2018-11-20 12:44:39'
              LastAccessed: '0000-00-00 00:00:00'
              LastActivated: '0000-00-00 00:00:00'
              Deleted: null
            SurveyElements:
              - SurveyID: SV_3h2aj5oftWHRcB7
                Element: BL
                PrimaryAttribute: Survey Blocks
                SecondaryAttribute: null
                TertiaryAttribute: null
                Payload:
                  - Type: Default
                    Description: Default Question Block
                    ID: BL_aVv5pylxPcQRq3X
                    BlockElements:
                      - Type: Question
                        QuestionID: QID1
                  - Type: Trash
                    Description: Trash / Unused Questions
                    ID: BL_4Sjdei8f8WjCywJ
              - SurveyID: SV_3h2aj5oftWHRcB7
                Element: FL
                PrimaryAttribute: Survey Flow
                SecondaryAttribute: null
                TertiaryAttribute: null
                Payload:
                  Flow:
                    - ID: BL_aVv5pylxPcQRq3X
                      Type: Block
                      FlowID: FL_2
                  Properties:
                    Count: 2
                  FlowID: FL_1
                  Type: Root
              - SurveyID: SV_3h2aj5oftWHRcB7
                Element: SO
                PrimaryAttribute: Survey Options
                SecondaryAttribute: null
                TertiaryAttribute: null
                Payload:
                  BackButton: 'false'
                  SaveAndContinue: 'true'
                  SurveyProtection: PublicSurvey
                  BallotBoxStuffingPrevention: 'false'
                  NoIndex: 'Yes'
                  SecureResponseFiles: 'true'
                  SurveyExpiration: None
                  SurveyTermination: DefaultMessage
                  Header: ''
                  Footer: ''
                  ProgressBarDisplay: None
                  PartialData: +1 week
                  ValidationMessage: ''
                  PreviousButton: ' ← '
                  NextButton: ' → '
                  SkinLibrary: dpatty
                  SkinType: MQ
                  Skin: globallyshared1
                  NewScoring: 1
              - SurveyID: SV_3h2aj5oftWHRcB7
                Element: SCO
                PrimaryAttribute: Scoring
                SecondaryAttribute: null
                TertiaryAttribute: null
                Payload:
                  ScoringCategories: []
                  ScoringCategoryGroups: []
                  ScoringSummaryCategory: null
                  ScoringSummaryAfterQuestions: 0
                  ScoringSummaryAfterSurvey: 0
                  DefaultScoringCategory: null
                  AutoScoringCategory: null
              - SurveyID: SV_3h2aj5oftWHRcB7
                Element: PROJ
                PrimaryAttribute: CORE
                SecondaryAttribute: null
                TertiaryAttribute: 1.1.0
                Payload:
                  ProjectCategory: CORE
                  SchemaVersion: 1.1.0
              - SurveyID: SV_3h2aj5oftWHRcB7
                Element: STAT
                PrimaryAttribute: Survey Statistics
                SecondaryAttribute: null
                TertiaryAttribute: null
                Payload:
                  MobileCompatible: true
                  ID: Survey Statistics
              - SurveyID: SV_3h2aj5oftWHRcB7
                Element: QC
                PrimaryAttribute: Survey Question Count
                SecondaryAttribute: '1'
                TertiaryAttribute: null
                Payload: null
              - SurveyID: SV_3h2aj5oftWHRcB7
                Element: SQ
                PrimaryAttribute: QID1
                SecondaryAttribute: Click to write the question text
                TertiaryAttribute: null
                Payload:
                  QuestionText: Click to write the question text
                  DataExportTag: Q1
                  QuestionType: MC
                  Selector: SAVR
                  SubSelector: TX
                  Configuration:
                    QuestionDescriptionOption: UseText
                  QuestionDescription: Click to write the question text
                  Choices:
                    '1':
                      Display: Click to write Choice 1
                    '2':
                      Display: Click to write Choice 2
                    '3':
                      Display: Click to write Choice 3
                  ChoiceOrder:
                    - '1'
                    - '2'
                    - '3'
                  Validation:
                    Settings:
                      ForceResponse: 'OFF'
                      ForceResponseType: 'ON'
                      Type: None
                  Language: []
                  NextChoiceId: 4
                  NextAnswerId: 1
                  QuestionID: QID1
              - SurveyID: SV_3h2aj5oftWHRcB7
                Element: RS
                PrimaryAttribute: RS_6LLLLDaFHwxSe3z
                SecondaryAttribute: Default Response Set
                TertiaryAttribute: null
                Payload: null
        x-tags:
          - Schemas
      SurveyElement:
        title: Survey element
        description: >-
          One of block, flow, options, scoring, question, proj info, statistics,
          etc
        type: object
        additionalProperties: true
        x-examples:
          example:
            SurveyID: SV_3h2aj5oftWHRcB7
            Element: BL
            PrimaryAttribute: Survey Blocks
            SecondaryAttribute: null
            TertiaryAttribute: null
            Payload:
              - Type: Default
                Description: Default Question Block
                ID: BL_aVv5pylxPcQRq3X
                BlockElements:
                  - Type: Question
                    QuestionID: QID1
              - Type: Trash
                Description: Trash / Unused Questions
                ID: BL_4Sjdei8f8WjCywJ
        x-tags:
          - Schemas
      SurveyMetadata:
        title: Metadata
        type: object
        x-examples:
          example:
            SurveyID: SV_8CdZHh2KP0q6mWh
            SurveyName: Test survey
            SurveyDescription: null
            SurveyOwnerID: UR_bEj1Bo5f8OQ9A33
            SurveyBrandID: jiajunl
            DivisionID: null
            SurveyLanguage: EN
            SurveyActiveResponseSet: RS_9S4J7ZNLyTNgvyZ
            SurveyStatus: Active
            SurveyStartDate: null
            SurveyExpirationDate: null
            SurveyCreationDate: '2018-01-15T13:47:30Z'
            CreatorID: UR_bEj1Bo5f8OQ9A33
            LastModified: '2018-03-13T10:07:30Z'
            LastAccessed: null
            LastActivated: '2018-02-26T16:47:19Z'
            Deleted: null
        properties:
          SurveyID:
            $ref: '#/components/schemas/SurveyID'
          SurveyName:
            type: string
            description: 'The name of the survey. '
          SurveyDescription:
            type: string
            nullable: true
            description: 'The description of the survey. '
          SurveyOwnerID:
            $ref: '#/components/schemas/UserID'
          SurveyBrandID:
            type: string
            description: 'The brand ID associated with the survey. '
          DivisionID:
            type: string
            nullable: true
          SurveyLanguage:
            type: string
            description: 'The default language of the survey. '
          SurveyActiveResponseSet:
            $ref: '#/components/schemas/ResponseSetID'
          SurveyStatus:
            $ref: '#/components/schemas/SurveyStatus'
          SurveyStartDate:
            type: string
            format: date-time
            nullable: true
            description: 'The date and time the survey starts. '
          SurveyExpirationDate:
            type: string
            format: date-time
            nullable: true
            description: 'The date and time the survey ex '
          SurveyCreationDate:
            type: string
            format: date-time
            nullable: true
            description: 'The date and time the survey was created. '
          CreatorID:
            $ref: '#/components/schemas/UserID'
          LastModified:
            type: string
            format: date-time
            description: The date and time of the last survey modification.
          LastAccessed:
            type: string
            format: date-time
            nullable: true
            description: 'The date and time the survey was last accessed. '
          LastActivated:
            type: string
            format: date-time
            nullable: true
          Deleted:
            type: string
            format: date-time
            nullable: true
        required:
          - SurveyID
          - SurveyName
          - SurveyDescription
          - SurveyOwnerID
          - SurveyBrandID
          - DivisionID
          - SurveyLanguage
          - SurveyActiveResponseSet
          - SurveyStatus
          - SurveyStartDate
          - SurveyExpirationDate
          - SurveyCreationDate
          - CreatorID
          - LastModified
          - LastAccessed
          - LastActivated
          - Deleted
        x-tags:
          - Schemas
      SurveyLanguages:
        title: LanguagesResult
        type: object
        additionalProperties: true
        required:
          - AvailableLanguages
        properties:
          AvailableLanguages:
            $ref: '#/components/schemas/SurveyLanguageElements'
        x-examples:
          example:
            AvailableLanguages:
              - EN
              - ES
              - FR
        x-tags:
          - Schemas
      UpdateSurveyLanguagesBody:
        $ref: '#/components/schemas/SurveyLanguages'
      SurveyLanguageElements:
        title: SurveyLanguageElements
        type: array
        x-examples:
          example:
            AvailableLanguages:
              - EN
              - ES
              - FR
        description: Array of language codes to enable.
        items:
          description: Language code
          type: string
        x-tags:
          - Schemas
      SurveyTranslations:
        title: SurveyTranslations
        type: object
        additionalProperties:
          type: string
          minLength: 0
          maxLength: 10000
        minProperties: 0
        maxProperties: 1000
        x-examples:
          example:
            QID1_QuestionText: Which is your favorite fruit?
            QID1_Choice1: Bananas
            QID1_Choice2: Oranges
            QID1_Choice3: Apples
        x-tags:
          - Schemas
        description: Survey translations.
      HttpStatus:
        title: Http status code
        type: string
        x-tags:
          - Schemas
        description: HTTP status code.
      RequestId:
        title: Request Id
        type: string
        x-tags:
          - Schemas
      ErrorMessage:
        title: Error message
        type: object
        additionalProperties: true
        required:
          - errorCode
          - errorMessage
        properties:
          errorCode:
            title: errorCode
            type: string
          errorMessage:
            title: errorMessage
            type: string
        x-tags:
          - Schemas
      ProjectCategory:
        description: Project category of the survey
        type: string
        enum:
          - CORE
          - CX
          - EX
          - BX
          - PX
        x-tags:
          - Schemas
      SurveyStatus:
        title: Survey status
        description: >-
          The distribution status of the survey, or a flag indicating that it's a
          library block
        type: string
        enum:
          - Inactive
          - Active
          - Pending
          - LibBlock
          - Deactive
          - Temporary
        x-tags:
          - Schemas
      SurveyStatusPutMetadata:
        title: Survey status
        description: The distribution status of the survey Active or Inactive
        type: string
        enum:
          - Inactive
          - Active
        x-tags:
          - Schemas
      GetSurveyOptionsResponse:
        title: Get survey options response
        type: object
        required:
          - meta
          - result
        properties:
          meta:
            $ref: '#/components/schemas/SuccessfulMeta'
          result:
            $ref: '#/components/schemas/SurveyOptions'
        x-tags:
          - Schemas
      UpdateSurveyOptionsRequest:
        $ref: '#/components/schemas/SurveyOptions'
      SurveyOptions:
        title: Survey Options
        type: object
        additionalProperties: true
        required:
          - BackButton
          - BallotBoxStuffingPrevention
          - Header
          - Footer
          - NextButton
          - NoIndex
          - PartialData
          - PreviousButton
          - ProgressBarDisplay
          - SaveAndContinue
          - SecureResponseFiles
          - Skin
          - SkinLibrary
          - SkinType
          - SurveyProtection
          - SurveyExpiration
          - SurveyTermination
          - ValidationMessage
        properties:
          AnonymizeResponse:
            $ref: '#/components/schemas/AnonymizeResponse'
          Autofocus:
            $ref: '#/components/schemas/Autofocus'
          Autoadvance:
            $ref: '#/components/schemas/Autoadvance'
          AutoadvancePages:
            $ref: '#/components/schemas/AutoadvancePages'
          AvailableLanguages:
            $ref: '#/components/schemas/AvailableLanguages'
          BackButton:
            $ref: '#/components/schemas/BackButton'
          BallotBoxStuffingPrevention:
            $ref: '#/components/schemas/BallotBoxStuffingPrevention'
          BallotBoxStuffingPreventionBehavior:
            $ref: '#/components/schemas/BallotBoxStuffingPreventionBehavior'
          BallotBoxStuffingPreventionMessage:
            $ref: '#/components/schemas/BallotBoxStuffingPreventionMessage'
          BallotBoxStuffingPreventionMessageLibrary:
            $ref: '#/components/schemas/BallotBoxStuffingPreventionMessageLibrary'
          BallotBoxStuffingPreventionURL:
            $ref: '#/components/schemas/BallotBoxStuffingPreventionURL'
          CollectGeoLocation:
            $ref: '#/components/schemas/CollectGeoLocation'
          CustomStyles:
            $ref: '#/components/schemas/CustomStyles'
          CustomLanguages:
            $ref: '#/components/schemas/CustomLanguages'
          EmailThankYou:
            $ref: '#/components/schemas/EmailThankYou'
          EOSMessage:
            $ref: '#/components/schemas/EOSMessage'
          EOSRedirectURL:
            $ref: '#/components/schemas/EOSRedirectURL'
          ExternalCSS:
            $ref: '#/components/schemas/ExternalCSS'
          headerMid:
            $ref: '#/components/schemas/headerMid'
          Header:
            $ref: '#/components/schemas/Header'
          footerMid:
            $ref: '#/components/schemas/footerMid'
          Footer:
            $ref: '#/components/schemas/Footer'
          InactiveSurvey:
            $ref: '#/components/schemas/InactiveSurvey'
          InactiveMessage:
            $ref: '#/components/schemas/InactiveMessage'
          InactiveMessageLibrary:
            $ref: '#/components/schemas/InactiveMessageLibrary'
          NoIndex:
            $ref: '#/components/schemas/NoIndex'
          nextButtonMid:
            $ref: '#/components/schemas/nextButtonMid'
          NextButton:
            $ref: '#/components/schemas/NextButton'
          PageTransition:
            $ref: '#/components/schemas/PageTransition'
          PartialData:
            $ref: '#/components/schemas/PartialData'
          PartialDataCloseAfter:
            $ref: '#/components/schemas/PartialDataCloseAfter'
          Password:
            $ref: '#/components/schemas/Password'
          PasswordProtection:
            $ref: '#/components/schemas/PasswordProtection'
          previousButtonMid:
            $ref: '#/components/schemas/previousButtonMid'
          PreviousButton:
            $ref: '#/components/schemas/PreviousButton'
          ProgressBarDisplay:
            $ref: '#/components/schemas/ProgressBarDisplay'
          QuestionsPerPage:
            $ref: '#/components/schemas/QuestionsPerPage'
          RecaptchaV3:
            $ref: '#/components/schemas/RecaptchaV3'
          RefererCheck:
            $ref: '#/components/schemas/RefererCheck'
          RefererURL:
            $ref: '#/components/schemas/RefererURL'
          ResponseSummary:
            $ref: '#/components/schemas/ResponseSummary'
          SaveAndContinue:
            $ref: '#/components/schemas/SaveAndContinue'
          SecureResponseFiles:
            $ref: '#/components/schemas/SecureResponseFiles'
          Skin:
            $ref: '#/components/schemas/Skin'
          SurveyExpiration:
            $ref: '#/components/schemas/SurveyExpiration'
          SurveyExpirationDate:
            $ref: '#/components/schemas/SurveyExpirationDate'
          SurveyMetaDescription:
            $ref: '#/components/schemas/SurveyMetaDescription'
          SurveyLanguage:
            $ref: '#/components/schemas/SurveyLanguage'
          SurveyName:
            $ref: '#/components/schemas/SurveyName'
          SurveyProtection:
            $ref: '#/components/schemas/SurveyProtection'
          SurveyStartDate:
            $ref: '#/components/schemas/SurveyStartDate'
          SurveyTermination:
            $ref: '#/components/schemas/SurveyTermination'
          SurveyTitle:
            $ref: '#/components/schemas/SurveyTitle'
          ThankYouEmailMessage:
            $ref: '#/components/schemas/ThankYouEmailMessage'
          ThankYouEmailMessageLibrary:
            $ref: '#/components/schemas/ThankYouEmailMessageLibrary'
          ValidateMessage:
            $ref: '#/components/schemas/ValidateMessage'
          ValidationMessage:
            $ref: '#/components/schemas/ValidationMessage'
          ValidationMessageLibrary:
            $ref: '#/components/schemas/ValidationMessageLibrary'
        x-examples:
          example:
            ActiveResponseSet: RS_elnA4pEPIOXsQ3H
            BackButton: 'false'
            BallotBoxStuffingPrevention: 'false'
            CustomStyles: []
            Footer: ''
            Header: ''
            NewScoring: 1
            NextButton: ' → '
            NoIndex: 'Yes'
            PartialData: +1 week
            PreviousButton: ' ← '
            ProgressBarDisplay: None
            SaveAndContinue: 'true'
            SecureResponseFiles: 'true'
            Skin:
              brandingId: null
              overrides: null
              templateId: '*base'
            SkinLibrary: myoungldev
            SkinType: templated
            SurveyCreationDate: '2019-02-08T17:59:17Z'
            SurveyExpiration: None
            SurveyExpirationDate: null
            SurveyLanguage: EN
            SurveyProtection: PublicSurvey
            SurveyStartDate: null
            SurveyTermination: DefaultMessage
            ValidationMessage: ''
        x-tags:
          - Schemas
      LanguageCode:
        type: string
        enum:
          - AR
          - ASM
          - AZ-AZ
          - BEL
          - BG
          - BN
          - BS
          - CA
          - CEB
          - CH
          - CS
          - CY
          - DA
          - DE
          - EL
          - EN_GB
          - EN-US
          - EN
          - EO
          - ES-ES
          - ES
          - ET
          - FA
          - FI
          - FR-CA
          - FR
          - GU
          - HE
          - HE-ZA
          - HI
          - HIL
          - HR
          - HU
          - HYE
          - ID
          - ISL
          - IT
          - JA
          - KAN
          - KAT
          - KAZ
          - KM
          - KO
          - LT
          - LV
          - MAL
          - MAR
          - MK
          - MN
          - MS
          - MY
          - NL
          - 'NO'
          - ORI
          - PA-IN
          - PL
          - PT-BR
          - PT
          - RO
          - RU
          - SIN
          - SK
          - SL
          - SQI
          - SR-ME
          - SR
          - SV
          - SW
          - TA
          - TEL
          - TGL
          - TH
          - TR
          - UK
          - UR
          - VI
          - ZH-S
          - ZH-T
        description: The default language of the survey.
        x-tags:
          - Schemas
      QuestionDefinition:
        title: Question definition
        anyOf:
          - title: Multiple Choice question definition
            additionalProperties: true
            properties:
              ChoiceOrder:
                $ref: '#/components/schemas/ChoiceOrder'
              Choices:
                $ref: '#/components/schemas/QuestionChoices'
              Configuration:
                $ref: '#/components/schemas/QuestionConfiguration'
              DataExportTag:
                $ref: '#/components/schemas/DataExportTag'
              Language:
                $ref: '#/components/schemas/Language'
              NextAnswerId:
                type: integer
              NextChoiceId:
                type: integer
              QuestionDescription:
                type: string
                description: Label to identify the question
              QuestionID:
                $ref: '#/components/schemas/QuestionID'
              QuestionText:
                $ref: '#/components/schemas/QuestionText'
              QuestionType:
                type: string
                enum:
                  - MC
              Randomization:
                $ref: '#/components/schemas/Randomization'
              RecodeValues:
                $ref: '#/components/schemas/RecodeValues'
              Selector:
                type: string
                enum:
                  - DL
                  - GRB
                  - MACOL
                  - MAHR
                  - MAVR
                  - MSB
                  - NPS
                  - SACOL
                  - SAHR
                  - SAVR
                  - SB
                  - TB
                  - TXOT
                  - PTB
                description: >-
                  How answers are selected such as single answer, multiple answer,
                  etc. One of `DL`, `GRB`, `MACOL`, `MAHR`, `MAVR`, `MSB`, `NPS`,
                  `SACOL`, `SAHR`, `SAVR`, `SB`, `TB`, `TXOT`, `PTB`
              SubSelector:
                type: string
                enum:
                  - GR
                  - TX
                  - TXOT
                  - WOTXB
                  - WTXB
              Validation:
                $ref: '#/components/schemas/Validation'
            required:
              - ChoiceOrder
              - Choices
              - Configuration
              - Language
              - QuestionDescription
              - QuestionText
              - QuestionType
              - Selector
              - SubSelector
              - Validation
          - title: Matrix question definition
            additionalProperties: true
            properties:
              AnswerOrder:
                $ref: '#/components/schemas/ChoiceOrder'
              Answers:
                $ref: '#/components/schemas/QuestionChoices'
              AnswerRandomization:
                $ref: '#/components/schemas/AnswerRandomization'
              ChoiceDataExportTags:
                type: boolean
              ChoiceOrder:
                $ref: '#/components/schemas/ChoiceOrder'
              Choices:
                $ref: '#/components/schemas/QuestionChoices'
              Configuration:
                $ref: '#/components/schemas/QuestionConfiguration'
              DataExportTag:
                $ref: '#/components/schemas/DataExportTag'
              DefaultChoices:
                type: boolean
              Language:
                $ref: '#/components/schemas/Language'
              NextAnswerId:
                type: integer
              NextChoiceId:
                type: integer
              QuestionDescription:
                type: string
                maxLength: 100
              QuestionID:
                $ref: '#/components/schemas/QuestionID'
              QuestionText:
                $ref: '#/components/schemas/QuestionText'
              QuestionType:
                type: string
                enum:
                  - Matrix
              Randomization:
                $ref: '#/components/schemas/Randomization'
              RecodeValues:
                $ref: '#/components/schemas/RecodeValues'
              Selector:
                type: string
                enum:
                  - Bipolar
                  - Likert
                  - TE
                  - Profile
                  - CS
                  - RO
                  - MaxDiff
              SubSelector:
                type: string
                enum:
                  - DL
                  - DND
                  - Long
                  - Medium
                  - MultipleAnswer
                  - Short
                  - SingleAnswer
                  - WOTB
                  - WTB
                  - WVTB
                  - WTXB
                  - Essay
              Validation:
                $ref: '#/components/schemas/Validation'
            required:
              - AnswerOrder
              - Answers
              - ChoiceDataExportTags
              - ChoiceOrder
              - Choices
              - Configuration
              - DataExportTag
              - DefaultChoices
              - Language
              - QuestionDescription
              - QuestionText
              - QuestionType
              - Selector
              - SubSelector
              - Validation
          - title: Text Entry question definition
            additionalProperties: true
            properties:
              Configuration:
                $ref: '#/components/schemas/QuestionConfiguration'
              DataExportTag:
                $ref: '#/components/schemas/DataExportTag'
              DefaultChoices:
                type: boolean
              Language:
                $ref: '#/components/schemas/Language'
              NextAnswerId:
                type: integer
              NextChoiceId:
                type: integer
              QuestionDescription:
                type: string
                maxLength: 100
              QuestionID:
                $ref: '#/components/schemas/QuestionID'
              QuestionText:
                $ref: '#/components/schemas/QuestionText'
              QuestionType:
                $ref: '#/components/schemas/QuestionType'
              Selector:
                title: Single Line, Multi Line, Essay Text Box, Form, Password
                type: string
                enum:
                  - SL
                  - ML
                  - ESTB
                  - FORM
                  - PW
              Validation:
                $ref: '#/components/schemas/Validation'
            required:
              - Configuration
              - DataExportTag
              - DefaultChoices
              - Language
              - QuestionDescription
              - QuestionText
              - QuestionType
              - Selector
              - Validation
          - title: Slider question definition
            additionalProperties: true
            properties:
              ChoiceOrder:
                $ref: '#/components/schemas/ChoiceOrder'
              Choices:
                $ref: '#/components/schemas/QuestionChoices'
              Configuration:
                $ref: '#/components/schemas/QuestionConfiguration'
              DataExportTag:
                $ref: '#/components/schemas/DataExportTag'
              Labels:
                $ref: '#/components/schemas/Selection'
              Language:
                $ref: '#/components/schemas/Language'
              NextAnswerId:
                type: integer
              NextChoiceId:
                type: integer
              QuestionDescription:
                type: string
                maxLength: 100
              QuestionID:
                $ref: '#/components/schemas/QuestionID'
              QuestionText:
                $ref: '#/components/schemas/QuestionText'
              QuestionType:
                type: string
                enum:
                  - Slider
              RecodeValues:
                $ref: '#/components/schemas/RecodeValues'
              Selector:
                title: Draggable bars, draggable sliders, stars
                type: string
                enum:
                  - HBAR
                  - HSLIDER
                  - STAR
              SubSelector:
                $ref: '#/components/schemas/QuestionSubSelector'
              Validation:
                $ref: '#/components/schemas/Validation'
            required:
              - ChoiceOrder
              - Choices
              - Configuration
              - DataExportTag
              - Labels
              - Language
              - NextAnswerId
              - NextChoiceId
              - QuestionDescription
              - QuestionText
              - QuestionType
              - Selector
              - SubSelector
              - Validation
          - title: Descriptive Text question definition
            additionalProperties: true
            properties:
              Configuration:
                $ref: '#/components/schemas/QuestionConfiguration'
              DataExportTag:
                $ref: '#/components/schemas/DataExportTag'
              DefaultChoices:
                type: boolean
              Language:
                $ref: '#/components/schemas/Language'
              NextAnswerId:
                type: integer
              NextChoiceId:
                type: integer
              QuestionDescription:
                type: string
                maxLength: 100
              QuestionID:
                $ref: '#/components/schemas/QuestionID'
              QuestionText:
                $ref: '#/components/schemas/QuestionText'
              QuestionType:
                type: string
                enum:
                  - DB
              Selector:
                type: string
                enum:
                  - TB
              Validation:
                $ref: '#/components/schemas/Validation'
            required:
              - Configuration
              - DataExportTag
              - DefaultChoices
              - Language
              - QuestionDescription
              - QuestionText
              - QuestionType
              - Selector
              - Validation
          - title: Graphic question definition
            additionalProperties: true
            properties:
              Configuration:
                $ref: '#/components/schemas/QuestionConfiguration'
              DataExportTag:
                $ref: '#/components/schemas/DataExportTag'
              DefaultChoices:
                type: boolean
              Graphics:
                $ref: '#/components/schemas/ImageID'
              GraphicsDescription:
                type: string
                maxLength: 100
              Language:
                $ref: '#/components/schemas/Language'
              NextAnswerId:
                type: integer
              NextChoiceId:
                type: integer
              QuestionDescription:
                type: string
                maxLength: 100
              QuestionID:
                $ref: '#/components/schemas/QuestionID'
              QuestionText:
                $ref: '#/components/schemas/QuestionText'
              QuestionType:
                type: string
                enum:
                  - DB
              Selector:
                type: string
                enum:
                  - GRB
              Validation:
                $ref: '#/components/schemas/Validation'
            required:
              - Configuration
              - DataExportTag
              - DefaultChoices
              - Graphics
              - GraphicsDescription
              - Language
              - QuestionDescription
              - QuestionText
              - QuestionType
              - Selector
              - Validation
        x-examples:
          Multiple Choice:
            QuestionText: What is your favorite color?
            DataExportTag: Q1
            QuestionType: MC
            Selector: SAVR
            SubSelector: TX
            Configuration:
              QuestionDescriptionOption: UseText
            QuestionDescription: What is your favorite color?
            Choices:
              '1':
                Display: Choice created using Survey API!
              '2':
                Display: green
              '3':
                Display: blue
            ChoiceOrder:
              - '1'
              - '2'
              - '3'
            Validation:
              Settings:
                ForceResponse: 'OFF'
                ForceResponseType: 'ON'
                Type: None
            Language: []
            QuestionID: QID1
          Graphic:
            QuestionText: Click to write the question text
            DefaultChoices: false
            DataExportTag: Q6
            QuestionType: DB
            Selector: GRB
            Configuration:
              QuestionDescriptionOption: UseText
            QuestionDescription: Click to write the question text
            Validation:
              Settings:
                Type: None
            Language: []
            NextChoiceId: 4
            NextAnswerId: 1
            QuestionID: QID6
          Text Entry:
            QuestionText: Click to write the question text
            DefaultChoices: false
            DataExportTag: Q3
            QuestionType: TE
            Selector: SL
            Configuration:
              QuestionDescriptionOption: UseText
              AllowFreeResponse: 'false'
            QuestionDescription: Click to write the question text
            Validation:
              Settings:
                ForceResponse: 'OFF'
                ForceResponseType: 'ON'
                Type: None
            Language: []
            NextChoiceId: 4
            NextAnswerId: 1
            QuestionID: QID3
          Descriptive Text:
            QuestionText: Click to write the question text
            DefaultChoices: false
            DataExportTag: Q5
            QuestionType: DB
            Selector: TB
            Configuration:
              QuestionDescriptionOption: UseText
            QuestionDescription: Click to write the question text
            Validation:
              Settings:
                Type: None
            Language: []
            NextChoiceId: 4
            NextAnswerId: 1
            QuestionID: QID5
          Slider:
            QuestionText: Click to write the question text
            DefaultChoices: false
            DataExportTag: Q4
            QuestionType: Slider
            Selector: HSLIDER
            Configuration:
              QuestionDescriptionOption: UseText
              CSSliderMin: 0
              CSSliderMax: 100
              GridLines: 10
              SnapToGrid: false
              NumDecimals: '0'
              ShowValue: true
              CustomStart: false
              NotApplicable: false
              MobileFirst: true
            QuestionDescription: Click to write the question text
            Choices:
              '1':
                Display: Click to write Choice 1
              '2':
                Display: Click to write Choice 2
              '3':
                Display: Click to write Choice 3
            ChoiceOrder:
              - '1'
              - '2'
              - '3'
            Validation:
              Settings:
                ForceResponse: 'OFF'
                ForceResponseType: 'ON'
                Type: None
            Language: []
            NextChoiceId: 4
            NextAnswerId: 1
            Labels: []
            QuestionID: QID4
          Matrix:
            QuestionText: Click to write the question text
            DefaultChoices: false
            DataExportTag: Q2
            QuestionType: Matrix
            Selector: Likert
            SubSelector: SingleAnswer
            Configuration:
              QuestionDescriptionOption: UseText
              TextPosition: inline
              ChoiceColumnWidth: 25
              RepeatHeaders: none
              WhiteSpace: 'OFF'
              MobileFirst: true
            QuestionDescription: Click to write the question text
            Choices:
              '1':
                Display: Click to write Statement 1
              '2':
                Display: Click to write Statement 2
              '3':
                Display: Click to write Statement 3
            ChoiceOrder:
              - '1'
              - '2'
              - '3'
            Validation:
              Settings:
                ForceResponse: 'OFF'
                ForceResponseType: 'ON'
                Type: None
            GradingData: []
            Language: []
            NextChoiceId: 4
            NextAnswerId: 4
            Answers:
              '1':
                Display: Click to write Scale point 1
              '2':
                Display: Click to write Scale point 2
              '3':
                Display: Click to write Scale point 3
            AnswerOrder:
              - '1'
              - '2'
              - '3'
            ChoiceDataExportTags: false
            QuestionID: QID2
        type: object
        x-tags:
          - Schemas
      UpdateFlowRequest:
        $ref: '#/components/schemas/FlowDefinition'
      FlowDefinition:
        title: Flow definition
        type: object
        additionalProperties: true
        required:
          - FlowID
          - Type
          - Flow
          - Properties
        properties:
          FlowID:
            $ref: '#/components/schemas/FlowID'
          Type:
            $ref: '#/components/schemas/FlowType'
          Flow:
            $ref: '#/components/schemas/Flow'
          Properties:
            $ref: '#/components/schemas/FlowProperties'
        x-examples:
          example:
            FlowID: FL_1
            Type: Root
            Flow:
              - ID: BL_fakeblockid1234
                Type: Block
                FlowID: FL_2
            Properties:
              Count: 2
        x-tags:
          - Schemas
      ScoringDefinition:
        title: Scoring definition
        type: object
        additionalProperties: true
        x-examples:
          example:
            ScoringCategories:
              - ID: SC_cT0X8utcTBtf20R
                Name: Score
                Description: ''
              - ID: SC_24cCruBibYfas9T
                Name: Qualtrics score
                Description: ''
            ScoringCategoryGroups: []
            DefaultScoringCategory: SC_cT0X8utcTBtf20R
            ScoringSummaryCategory: SC_cT0X8utcTBtf20R
            ScoringSummaryAfterQuestions: true
            ScoringSummaryAfterSurvey: true
            AutoScoringCategory: null
            IgnoreNullValues: true
        x-tags:
          - Schemas
        properties:
          ScoringCategories:
            type: array
            description: Scoring categories.
            items:
              type: object
              additionalProperties: true
              description: Scoring categories.
              properties:
                Description:
                  type: string
                  description: A user-provided description of the survey scoring.
                ID:
                  $ref: '#/components/schemas/ScoringID'
                Name:
                  type: string
                  description: The names of the scoring categories.
              required:
                - Description
                - ID
                - Name
          ScoringCategoryGroups:
            type: array
            items:
              type: object
              additionalProperties: true
              properties:
                Categories:
                  type: array
                  description: The scoring categories.
                  items:
                    $ref: '#/components/schemas/ScoringID'
                ID:
                  $ref: '#/components/schemas/ScoringGroupID'
                Name:
                  type: string
                  description: The names of the scoring category groups.
              required:
                - Categories
                - ID
                - Name
          ScoringSummaryCategory:
            $ref: '#/components/schemas/ScoringID'
          ScoringSummaryAfterQuestions:
            type: boolean
            description: If scoring summary is after questions.
          ScoringSummaryAfterSurvey:
            type: boolean
            description: If scoring summary is after survey.
          DefaultScoringCategory:
            $ref: '#/components/schemas/ScoringID'
          AutoScoringCategory:
            type: string
            description: The automated scoring category.
        required:
          - ScoringCategories
          - ScoringCategoryGroups
          - ScoringSummaryCategory
          - ScoringSummaryAfterQuestions
          - ScoringSummaryAfterSurvey
          - DefaultScoringCategory
          - AutoScoringCategory
      ProjectInfoDefinition:
        title: Project info definition
        type: object
        additionalProperties: true
        required:
          - SurveyID
          - ProjectCategory
          - ProjectType
          - SchemaVersion
          - CompositionType
        properties:
          SurveyID:
            $ref: '#/components/schemas/SurveyID'
          ProjectCategory:
            $ref: '#/components/schemas/ProjectCategory'
          ProjectType:
            type: string
            pattern: ^[a-zA-Z]+$
            minLength: 5
            maxLength: 50
            nullable: true
          SchemaVersion:
            type: string
            enum:
              - 1.1.0
          CompositionType:
            type: string
            nullable: true
          ContentBundle:
            type: object
            additionalProperties: true
            required:
              - BundleShortName
              - RegistrySha
              - RegistryVersion
              - SurveyInputVariables
            properties:
              BundleShortName:
                type: string
                maxLength: 100
              RegistrySha:
                type: string
                maxLength: 100
              RegistryVersion:
                type: string
                maxLength: 100
              SurveyInputVariables:
                type: array
                items:
                  type: object
                  additionalProperties: true
        x-tags:
          - Schemas
      BlockType:
        title: Block type
        type: string
        enum:
          - Standard
          - Default
          - Trash
        x-tags:
          - Schemas
      BlockOptions:
        title: Block options
        type: object
        additionalProperties: true
        properties:
          BlockLocking:
            description: Prevents modification of the block and its contents
            type: string
            enum:
              - 'true'
              - 'false'
          BlockPassword:
            description: Authorization to modify the block
            type: string
          BlockVisiblity:
            type: string
            enum:
              - Collapsed
              - Expanded
          RandomizeQuestions:
            type: string
            enum:
              - 'false'
              - RandomWithXPerPage
              - RandomWithOnlyX
              - Advanced
          Looping:
            description: Loop & Merge type
            enum:
              - None
              - Static
              - Question
          LoopingOptions:
            description: >-
              Options and configuration for Loop & Merge. Includes input fields
              and randomization
            type: object
            additionalProperties: true
            properties:
              ChoiceGroupLocator:
                $ref: '#/components/schemas/Locator'
              Locator:
                $ref: '#/components/schemas/Locator'
              QID:
                $ref: '#/components/schemas/QuestionID'
              Randomization:
                description: Type of randomization to apply to the loop ordering
                type: string
                enum:
                  - None
                  - Subset
                  - All
              Static:
                description: The (static) fields in the Loop & Merge
                type: object
                additionalProperties:
                  type: object
          Randomization:
            description: >-
              The configuration for the type of Randomization to apply. Many
              options based on 3 types of Randomization in RandomizeQuestions
            additionalProperties: true
            properties:
              Advanced:
                description: contains related configuartions for Randomization options
                type: object
                additionalProperties: true
                required:
                  - QuestionsPerPage
                properties:
                  QuestionsPerPage:
                    $ref: '#/components/schemas/QuestionsPerPage'
                  FixedOrder:
                    description: Questions to display in a fixed order
                    type: array
                    items:
                      $ref: '#/components/schemas/RandomizationElement'
                  RandomizeAll:
                    description: Questions to display in a randomized order
                    type: array
                    items:
                      $ref: '#/components/schemas/RandomizationElement'
                  RandomSubSet:
                    description: Subset of questions to display in a randomized order
                    type: array
                    items:
                      $ref: '#/components/schemas/RandomizationElement'
                  TotalRandSubset:
                    description: >-
                      How many of the RandomSubSet questions to show in aggregate
                      for a given respondent
                    type: string
                    pattern: '[\d]{1,3}'
                  Undisplayed:
                    type: array
                    items:
                      $ref: '#/components/schemas/RandomizationElement'
              EvenPresentation:
                description: >-
                  Whether or not to balance the number of times each
                  Randomization.Advanced.RandomSubSet question is displayed across
                  all respondents
                type: boolean
          NextButton:
            description: >-
              The text on the next button at preview and runtime, or if
              nextButtonMID is set, the name of the message referred to there
            type: string
          PreviousButton:
            description: >-
              The text on the previous button at preview and runtime, or if
              previousButtonMID is set, the name of the message referred to there
            type: string
          nextButtonLibraryID:
            $ref: '#/components/schemas/LibraryID'
          nextButtonMID:
            $ref: '#/components/schemas/MessageID'
          previousButtonLibraryID:
            $ref: '#/components/schemas/MessageID'
        x-examples:
          example:
            BlockLocking: 'true'
            BlockPassword: 6dca3fa58e4c508071ecef74d4c9b06bd6879529
            BlockVisibility: Collapsed
            Looping: Question
            LoopingOptions:
              ChoiceGroupLocator: q://QID1/ChoiceGroup/AllChoices?displayLogic=0
              Locator: q://QID1/ChoiceGroup/AllChoices?displayLogic=0
              QID: QID1
              Randomization: All
              Static:
                '1':
                  '2': Some Text
                '2':
                  '2': Some Text
                '3':
                  '2': Some Text
            NextButton: Some Text Here
            PreviousButton: ''
            Randomization:
              Advanced:
                QuestionsPerPage: 0
            RandomizeQuestions: RandomWithXPerPage
            nextButtonLibraryID: UR_3Cz41f8fIqINzaR
            nextButtonMID: ''
            previousButtonLibraryID: UR_3Cz41f8fIqINzaR
            previousButtonMID: MS_9yonPbwVkXaC14p
        x-tags:
          - Schemas
      BlockElements:
        description: All of the elements contained by the block
        type: array
        items:
          oneOf:
            - description: Question block element
              title: Question block element
              type: object
              additionalProperties: true
              required:
                - Type
                - QuestionID
              properties:
                Type:
                  type: string
                  enum:
                    - Question
                QuestionID:
                  $ref: '#/components/schemas/QuestionID'
                SkipLogic:
                  $ref: '#/components/schemas/SkipLogic'
            - description: Page break element
              title: Page break element
              type: object
              additionalProperties: true
              required:
                - Type
              properties:
                Type:
                  type: string
                  enum:
                    - Page Break
        x-tags:
          - Schemas
      UpdateFlowElementRequest:
        $ref: '#/components/schemas/Flow'
      FlowType:
        title: Flow type
        description: >-
          Type of flow element. One of `Authenticator`, `Block`,
          `BlockRandomizer`, `Branch`, `Conjoint`, `EmbeddedData`, `EndSurvey`,
          `Group`, `QuotaCheck`, `ReferenceSurvey`, `Root`, `Standard`,
          `SupplementalData`, `TableOfContents`, `WebService`
        type: string
        enum:
          - Authenticator
          - Block
          - BlockRandomizer
          - Branch
          - Conjoint
          - EmbeddedData
          - EndSurvey
          - Group
          - QuotaCheck
          - ReferenceSurvey
          - Root
          - Standard
          - SupplementalData
          - TableOfContents
          - WebService
        x-tags:
          - Schemas
      QuestionChoices:
        description: Selections for a question
        type: object
        example:
          '1':
            Display: choice 1
          '2':
            Display: choice 2
        additionalProperties:
          type: object
          additionalProperties: true
          properties:
            Display:
              type: string
        x-tags:
          - Schemas
      QuestionType:
        title: Question type
        description: The type of question.
        type: string
        enum:
          - MC
          - Matrix
          - Captcha
          - CS
          - DB
          - DD
          - Draw
          - DynamicMatrix
          - FileUpload
          - GAP
          - HeatMap
          - HL
          - HotSpot
          - Meta
          - PGR
          - RO
          - SBS
          - Slider
          - SS
          - TE
          - Timing
          - TreeSelect
        x-tags:
          - Schemas
      QuestionSelector:
        title: Question selector
        type: string
        enum:
          - Bipolar
          - Browser
          - Captcha
          - CompactView
          - CS
          - D
          - DL
          - DND
          - DragAndDrop
          - ESTB
          - FORM
          - FileUpload
          - GRB
          - HBAR
          - HR
          - HSLIDER
          - I
          - Image
          - LikeDislike
          - Likert
          - MACOL
          - MAHR
          - MAVR
          - ML
          - MSB
          - MaxDiff
          - NPS
          - OH
          - OnOff
          - POS
          - PTB
          - PW
          - PageTimer
          - Profile
          - RB
          - RO
          - SACOL
          - SAHR
          - SAVR
          - SB
          - SBSMatrix
          - SL
          - STAR
          - ScreenCapture
          - SearchOnly
          - Signature
          - TA
          - TB
          - TBelow
          - TE
          - TL
          - TRight
          - Text
          - V1
          - V2
          - VR
          - VRTL
          - WTXB
        x-tags:
          - Schemas
        description: Question selector.
      QuestionSubSelector:
        title: Question SubSelector
        type: string
        enum:
          - SingleAnswer
          - DL
          - GR
          - DND
          - Long
          - Medium
          - MultipleAnswer
          - Columns
          - NoColumns
          - Short
          - TX
          - TXOT
          - WOTXB
          - WOTB
          - WTB
          - WTXB
          - WVTB
        x-tags:
          - Schemas
        description: Question SubSelector.
      SurveyID:
        title: Survey Id
        type: string
        pattern: ^SV_[a-zA-Z0-9]{11,15}$
        description: >-
          The [unique
          identifier](https://api.qualtrics.com/ZG9jOjg3NjYzNQ-finding-your-qualtrics-i-ds)
          for this survey.
        x-tags:
          - Schemas
      BlockID:
        title: Block Id
        type: string
        pattern: ^BL_[a-zA-Z0-9]{11,15}$
        description: The ID of the survey's default block.
        x-tags:
          - Schemas
      UserID:
        title: User Id
        type: string
        pattern: ^UR_[a-zA-Z0-9]{11,15}$
        description: The unique identifier for a specific user.
        x-tags:
          - Schemas
      ResponseSetID:
        title: Response Set Id
        type: string
        pattern: ^RS_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: A unique identifier for the response set.
      FlowID:
        title: Flow Id
        type: string
        pattern: ^FL_[1-9][0-9]*$
        description: Unique identifier. Should be of form `FL_1`
        x-tags:
          - Schemas
      QuestionID:
        description: The unique identifier for the question.
        title: Question Id
        type: string
        pattern: ^QID[a-zA-Z0-9]+$
        x-tags:
          - Schemas
      DivisionID:
        title: Division Id
        type: string
        pattern: ^DV_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the Division ID.
      ScoringID:
        title: Scoring Id
        type: string
        pattern: ^SC_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the scoring.
      ScoringGroupID:
        title: Scoring Group Id
        type: string
        pattern: ^SCG_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the scoring group.
      PanelID:
        title: Panel Id
        type: string
        pattern: ^CG_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the Panel.
      GroupID:
        title: Group Id
        type: string
        pattern: ^GR_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the group.
      ImageID:
        title: Image Id
        type: string
        pattern: ^IM_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the image.
      LibrarySurveyID:
        title: Library Survey Id
        type: string
        pattern: ^LS_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the survey library.
      OrgHierarchyID:
        title: Organization Hierarchy Id
        type: string
        pattern: ^OH_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the Organization Hierarchy.
      OrgHierarchyUnitID:
        title: Org Hierarchy Unit Id
        type: string
        pattern: ^OHU_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the Org Hierarchy Unit.
      QuotaID:
        title: Quota Id
        type: string
        pattern: ^QO_[0-9a-zA-Z]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the quota.
      QuotaGroupID:
        title: Quota Group Id
        type: string
        pattern: ^QG_[0-9a-zA-Z]{11,15}$
        description: The unique identifier of the Quota Group.
        x-tags:
          - Schemas
      LibraryID:
        anyOf:
          - $ref: '#/components/schemas/UserID'
          - $ref: '#/components/schemas/GroupID'
        x-tags:
          - Schemas
      MessageID:
        title: Message Id
        type: string
        pattern: ^MS_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the message.
      ReferencedBlockID:
        type: string
        pattern: ^LB_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the Reference Block.
      VersionID:
        title: Survey Version ID
        type: string
        pattern: ^[\d]+$
        x-tags:
          - Schemas
        description: The unique identifier for the survey version.
      MessageLibraryID:
        type: string
        pattern: ^ML_[a-zA-Z0-9]{11,15}$
        x-tags:
          - Schemas
        description: The unique identifier for the message library.
      YesNoEmptyString:
        type: string
        enum:
          - 'Yes'
          - 'No'
          - ''
        x-tags:
          - Schemas
        description: Yes/No/Empty String.
      httpUrlString:
        type: string
        format: uri-reference
        pattern: >-
          https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)
        x-tags:
          - Schemas
        description: The HTTP URL of a string.
      ChoiceOrder:
        description: The order the choices are to be displayed in.
        type: array
        example:
          - '1'
          - '2'
        x-tags:
          - Schemas
        items:
          type: string
          pattern: ^[\d]+$
      QuestionConfiguration:
        description: Configurations for how the question should be displayed
        type: object
        additionalProperties: true
        x-examples:
          example:
            QuestionDescriptionOption: UseText
            CSSliderMin: 0
            CSSliderMax: 100
            GridLines: 10
            SnapToGrid: false
            NumDecimals: '0'
            ShowValue: true
            CustomStart: false
            NotApplicable: false
            MobileFirst: true
        x-tags:
          - Schemas
        properties:
          QuestionDescriptionOption:
            type: string
            enum:
              - UseText
              - SpecifyLabel
            description: An optional user-provided field for question descriptions.
          TextPosition:
            type: string
            enum:
              - inline
            description: Text position.
          ChoiceColumnWidth:
            type: integer
            enum:
              - 25
            description: Value of column width.
          RepeatHeaders:
            type: string
            enum:
              - none
            description: Repeating of headers.
          WhiteSpace:
            type: string
            enum:
              - 'ON'
              - 'OFF'
            description: If white space is allowed.
          LabelPosition:
            type: string
            enum:
              - BELOW
              - SIDE
            description: Position of label.
          NumColumns:
            type: integer
            description: Number of columns.
          MobileFirst:
            type: boolean
            description: If questions should be formatted for use on a mobile device.
      DataExportTag:
        description: The tag to identify the question in exported data.
        type: string
        x-tags:
          - Schemas
      Language:
        description: Question translations
        oneOf:
          - type: array
            maxItems: 0
            description: Translations of questions.
            items:
              type: string
          - type: object
            additionalProperties:
              type: object
              additionalProperties: true
              properties:
                QuestionText:
                  type: string
                Choices:
                  $ref: '#/components/schemas/QuestionChoices'
        x-examples:
          example:
            ES-ES:
              Choices:
                '1':
                  Display: Prueba 1
                '2':
                  Display: Prueba 2
                '3':
                  Display: Prueba 3
              QuestionText: Pregunta
        x-tags:
          - Schemas
      QuestionText:
        type: string
        minLength: 0
        maxLength: 1000
        description: Text for the question.
        x-tags:
          - Schemas
      Validation:
        description: >-
          Force respondents to answer a question or request that they consider
          answering the question before leaving the page
        type: object
        additionalProperties: true
        x-examples:
          example:
            Settings:
              CustomValidation:
                Logic:
                  '0':
                    '0':
                      ChoiceLocator: q://QID9/SelectableChoice/1
                      Description: >-
                        <span class="ConjDesc">If</span> <span
                        class="QuestionDesc">Test Question</span> <span
                        class="LeftOpDesc">Test 1</span> <span class="OpDesc">Is
                        Not Selected</span> 
                      LeftOperand: q://QID9/SelectableChoice/1
                      LogicType: Question
                      Operator: NotSelected
                      QuestionID: QID9
                      QuestionIDFromLocator: QID9
                      QuestionIsInLoop: 'no'
                      Type: Expression
                    Type: If
                  Type: BooleanExpression
                Message:
                  description: Error Text
                  libraryID: UR_3Cz41f8fIqINzaR
                  messageID: MS_elWHOi9OXxXvaSN
                  subMessageID: VE_ERROR
              ForceResponse: RequestResponse
              ForceResponseType: RequestResponse
              Type: CustomValidation
        x-tags:
          - Schemas
        properties:
          Settings:
            type: object
            additionalProperties: true
            properties:
              CustomValidation:
                $ref: '#/components/schemas/CustomValidation'
              ForceResponse:
                type: string
                description: The forced response.
              ForceResponseType:
                type: string
                description: The type of forced response.
              Type:
                type: string
                description: Settings type.
        required:
          - Settings
      Flow:
        type: array
        x-examples:
          example:
            Type: EmbeddedData
            EmbeddedData:
              - Description: Q_TotalDuration
                Type: Recipient
                Field: Q_TotalDuration
                VariableType: Nominal
        description: Definition of the inner flow elements (maximum of 5000)
        items:
          anyOf:
            - $ref: '#/components/schemas/AuthenticatorFlowElement'
            - $ref: '#/components/schemas/BlockStandardFlowElement'
            - $ref: '#/components/schemas/BlockRandomizerFlowElement'
            - $ref: '#/components/schemas/BranchFlowElement'
            - $ref: '#/components/schemas/EmbeddedDataFlowElement'
            - $ref: '#/components/schemas/EndSurveyFlowElement'
            - $ref: '#/components/schemas/GroupFlowElement'
            - $ref: '#/components/schemas/ReferenceSurveyFlowElement'
            - $ref: '#/components/schemas/TableOfContentsFlowElement'
            - $ref: '#/components/schemas/WebServiceFlowElement'
        x-tags:
          - Schemas
      AuthenticatorFlowElement:
        description: Require respondents to authenticate (login)
        type: object
        additionalProperties: true
        x-examples:
          example:
            FieldData:
              '0':
                '0':
                  Description: >-
                    <span class="ConjDesc">If</span>  <span
                    class="LeftOpDesc">undefined</span> <span
                    class="OpDesc">#</span> 
                  LogicType: EmbeddedField
                  PanelField: RecipientEmail1
                  Type: Expression
                  fieldLabel: Label here
                Type: If
              Type: BooleanExpression
            FilterDataFields: true
            FlowID: FL_3
            Options:
              allowRetake: false
              authenticationError:
                SystemMessage:
                  Message: EAUTH02
                  Section: ErrorCodes
              failedAuthenticationError:
                SystemMessage:
                  Message: EAUTH05
                  Section: ErrorCodes
              loadExistingSession: false
              maxAttempts: 3
              questionText:
                SystemMessage:
                  Message: EAUTH04
                  Section: ErrorCodes
            PanelData:
              LibraryID: UR_3Cz41f8fIqINzaR
              LogicType: Panel
              PanelID: CG_0jjTqUJhwxz7KU5
              Type: Expression
            SSOOptions:
              CaptureRespondentInfo: 'No'
              Type: Token
              UsePanel: 'Yes'
              UseSSO: ''
              cas: []
              ldap:
                EmailField: mail
                ExternalDataReferenceField: ''
                Filter: (sAMAccountName=%1)
                FirstNameField: givenname
                Hostname: ldap://
                LastNameField: sn
                Port: '389'
              respondentMap: []
              token:
                EncryptionMethod: 3DES
                Leeway: 300
                MacMethod: MD5
            Type: Authenticator
        x-tags:
          - Schemas
        properties:
          Type:
            type: string
            enum:
              - Authenticator
          FlowID:
            $ref: '#/components/schemas/FlowID'
          PanelData:
            type: object
            additionalProperties: true
            properties:
              LibraryID:
                $ref: '#/components/schemas/UserID'
              PanelID:
                $ref: '#/components/schemas/PanelID'
              Type:
                type: string
                enum:
                  - Expression
                description: Type of SSO option.
              LogicType:
                type: string
                enum:
                  - Panel
                description: Logic type.
          FieldData:
            $ref: '#/components/schemas/BranchLogic'
          FilterDataFields:
            type: boolean
            description: If true, filter data fields.
          SSOOptions:
            type: object
            additionalProperties: true
            required:
              - Type
            description: SSO options.
            properties:
              CaptureRespondentInfo:
                type: string
                enum:
                  - 'Yes'
                  - 'No'
                description: Capture respondent info.
              cas:
                type: array
                maxItems: 0
                description: Central Authentication Service.
                items:
                  type: string
              ldap:
                type: object
                additionalProperties: true
                description: ' Lightweight Directory Access Protocol'
                properties:
                  Hostname:
                    type: string
                    maxLength: 100
                    description: Hostname.
                  Port:
                    type: string
                    maxLength: 100
                    description: Port.
                  EmailField:
                    type: string
                    maxLength: 100
                    description: Email field.
                  ExternalDataReferenceField:
                    type: string
                    maxLength: 100
                    description: External data reference field.
                  Filter:
                    type: string
                    maxLength: 100
                    description: Filter.
                  FirstNameField:
                    type: string
                    maxLength: 100
                    description: Field for first name.
                  LastNameField:
                    type: string
                    maxLength: 100
                    description: Field for last name.
              respondentMap:
                type: array
                minItems: 0
                maxItems: 100
                description: Respondent map.
                items:
                  type: object
                  additionalProperties: true
                  description: Object.
                  properties:
                    key:
                      type: string
                      description: A unique identifier for a `value`.
                    value:
                      type: string
                      description: An attribute associated with `key`.
              token:
                type: object
                additionalProperties: true
                description: Token.
                properties:
                  EncryptionMethod:
                    type: string
                    enum:
                      - 3DES
                      - AES128
                      - BLOWFISH
                    description: Encryption method for the token.
                  Key:
                    type: string
                    description: Token key.
                  Leeway:
                    type: integer
                    description: Leeway.
                  MacMethod:
                    type: string
                    enum:
                      - md5
                      - MD5
                      - sha1
                      - sha256
                      - sha512
                    description: MacMethod.
                  BlockCipher:
                    type: string
                    enum:
                      - CBC
                      - ECB
                    description: Block Cipher.
              Type:
                type: string
                enum:
                  - Token
                  - CAS
                  - LDAP
                  - LTI
                  - Shibboleth
                  - UseBrandSettings
                  - GoogleOpenID
                  - Facebook
                description: SSO option type.
              UsePanel:
                type: string
                enum:
                  - 'Yes'
                  - 'No'
                description: Use Panel.
              UsePerson:
                type: string
                enum:
                  - 'Yes'
                  - 'No'
                description: Use person.
              UseSSO:
                type: string
                enum:
                  - 'Yes'
                  - 'No'
                description: Use SSO.
          Options:
            type: object
            additionalProperties: true
            description: SSO options.
            properties:
              maxAttempts:
                type: integer
                description: Maximum number of attempts allowed.
              authenticationError:
                $ref: '#/components/schemas/AuthenticatorMessage'
              failedAuthenticationError:
                $ref: '#/components/schemas/AuthenticatorMessage'
              questionText:
                $ref: '#/components/schemas/AuthenticatorMessage'
              allowRetake:
                type: boolean
                description: If true, allow retake.
              loadExistingSession:
                type: boolean
                description: If true, load existing session.
          Flow:
            $ref: '#/components/schemas/Flow'
        required:
          - Type
          - PanelData
          - FieldData
          - FilterDataFields
          - SSOOptions
          - Options
      AuthenticatorMessage:
        type: object
        additionalProperties: true
        x-tags:
          - Schemas
        description: Authenticator message.
        properties:
          SystemMessage:
            type: object
            additionalProperties: true
            description: System message.
            properties:
              Section:
                type: string
                enum:
                  - ErrorCodes
                description: Section of system message.
              Message:
                type: string
                pattern: ^EAUTH\d+$
                description: System message.
      BlockStandardFlowElement:
        type: object
        additionalProperties: true
        x-examples:
          example:
            FlowID: FL_2
            ID: BL_2glfgqNFhydpGeN
            Type: Block
        x-tags:
          - Schemas
        description: Block standard flow element.
        properties:
          ID:
            $ref: '#/components/schemas/BlockID'
          Type:
            type: string
            enum:
              - Block
              - Standard
            description: The type of block.
          FlowID:
            $ref: '#/components/schemas/FlowID'
      BlockRandomizerFlowElement:
        type: object
        additionalProperties: true
        x-examples:
          example:
            EvenPresentation: true
            Flow:
              - FlowID: FL_7
                ID: BL_2glfgqNFhydpGeN
                Type: Block
              - FlowID: FL_8
                ID: BL_8nXdbHPMV8Y5GpT
                Type: Block
            FlowID: FL_6
            SubSet: 2
            Type: BlockRandomizer
        x-tags:
          - Schemas
        description: Block randomizer flow.
        properties:
          Type:
            type: string
            enum:
              - BlockRandomizer
            description: Type of block randomizer.
          FlowID:
            $ref: '#/components/schemas/FlowID'
          SubSet:
            type: integer
            description: Subset number.
          EvenPresentation:
            type: boolean
            description: If true, provide even presentation.
          Flow:
            $ref: '#/components/schemas/Flow'
      BranchFlowElement:
        type: object
        additionalProperties: true
        x-examples:
          example:
            BranchLogic:
              '0':
                '0':
                  ChoiceLocator: q://QID2/SelectableChoice/1
                  Description: >-
                    <span class="ConjDesc">If</span> <span
                    class="QuestionDesc">Which branch would you like to
                    take?</span> <span class="LeftOpDesc">That one</span> <span
                    class="OpDesc">Is Selected</span> 
                  LeftOperand: q://QID2/SelectableChoice/1
                  LogicType: Question
                  Operator: Selected
                  QuestionID: QID2
                  QuestionIDFromLocator: QID2
                  QuestionIsInLoop: 'no'
                  Type: Expression
                Type: If
              Type: BooleanExpression
            Description: New Branch
            Flow:
              - FlowID: FL_11
                ID: BL_eJ85btkKBACZM7r
                Type: Block
            FlowID: FL_10
            Type: Branch
        x-tags:
          - Schemas
        description: Branch flow element.
        properties:
          Type:
            type: string
            enum:
              - Branch
            description: Type of branch flow.
          FlowID:
            $ref: '#/components/schemas/FlowID'
          Description:
            type: string
            maxLength: 100
            description: A user-provided description of the block flow element.
          BranchLogic:
            $ref: '#/components/schemas/BranchLogic'
      EmbeddedDataFlowElement:
        type: object
        additionalProperties: true
        x-examples:
          example:
            Type: EmbeddedData
            FlowID: FL_3
            EmbeddedData:
              - Description: edField
                Type: Recipient
                Field: edField
                VariableType: Nominal
                DataVisibility: []
        x-tags:
          - Schemas
        description: Embedded data flow element.
        properties:
          Type:
            type: string
            enum:
              - EmbeddedData
            description: Type of embedded data flow element.
          FlowID:
            $ref: '#/components/schemas/FlowID'
          EmbeddedData:
            type: array
            description: Embedded data.
            items:
              type: object
              additionalProperties: true
              properties:
                Description:
                  type: string
                  maxLength: 100
                  description: A user-provided description of the embedded data.
                Type:
                  type: string
                  enum:
                    - Recipient
                    - Custom
                    - EmbeddedData
                  description: The type of embedded data.
                Field:
                  type: string
                  maxLength: 100
                  description: Field for embedded data.
                VariableType:
                  type: string
                  enum:
                    - Nominal
                    - MultiValueNominal
                    - Ordinal
                    - Scale
                    - String
                    - Date
                    - FilterOnly
                    - Filter Only
                  description: Variable type.
                DataVisibility:
                  type: object
                  description: Visibility of data.
                  properties:
                    Private:
                      type: boolean
                      description: If true, data is private.
                    Hidden:
                      type: boolean
                      description: If true, data is hidden.
                AnalyzeText:
                  type: boolean
                  description: If true, analyze embedded data text.
                Value:
                  type: string
                  maxLength: 100
                  description: An attribute associated with `key`.
              required:
                - Description
                - Type
                - Field
      EndSurveyFlowElement:
        type: object
        additionalProperties: true
        x-examples:
          example:
            Type: EndSurvey
            FlowID: FL_999999
            EndingType: Default
            Options: {}
        x-tags:
          - Schemas
        description: End of survey flow element.
        properties:
          Type:
            type: string
            enum:
              - EndSurvey
            description: Type of end survey flow element.
          FlowID:
            $ref: '#/components/schemas/FlowID'
      GroupFlowElement:
        type: object
        additionalProperties: true
        x-examples:
          example:
            Description: My flow group
            Flow:
              - FlowID: FL_13
                ID: BL_8nXdbHPMV8Y5GpT
                Type: Block
              - FlowID: FL_14
                ID: BL_2glfgqNFhydpGeN
                Type: Block
            FlowID: FL_12
            Type: Group
        x-tags:
          - Schemas
        description: Group flow element.
        properties:
          Type:
            type: string
            enum:
              - Group
            description: Type of group flow element.
          FlowID:
            $ref: '#/components/schemas/FlowID'
          Description:
            type: string
            maxLength: 100
            description: A user-provided description of the group flow element.
          Flow:
            $ref: '#/components/schemas/Flow'
      ReferenceSurveyFlowElement:
        type: object
        additionalProperties: true
        x-examples:
          example:
            Type: ReferenceSurvey
            ID: LS_5n0oPAgaZHHqZsV
            FlowID: FL_3
            Description: My survey - Copy
            LibraryID: UR_do0D090gG6afU3j
        x-tags:
          - Schemas
        description: Reference survey flow element.
        properties:
          Type:
            type: string
            enum:
              - ReferenceSurvey
            description: The type of reference survey flow element.
          ID:
            $ref: '#/components/schemas/LibrarySurveyID'
          FlowID:
            $ref: '#/components/schemas/FlowID'
          Description:
            type: string
            maxLength: 100
            description: A user-provided description of the reference survey flow element.
          LibraryID:
            $ref: '#/components/schemas/GroupID'
      TableOfContentsFlowElement:
        type: object
        additionalProperties: true
        x-examples:
          example:
            Description: Why Survey API
            Flow:
              - FlowID: FL_16
                ID: BL_2glfgqNFhydpGeN
                Type: Block
              - FlowID: FL_17
                ID: BL_8nXdbHPMV8Y5GpT
                Type: Block
            FlowID: FL_15
            Options:
              ShowSidebar: 'Yes'
              TocConclusion: 'Yes'
              UseHeaderLibrary: ''
            Type: TableOfContents
        x-tags:
          - Schemas
        description: The table of contents flow element.
        properties:
          Type:
            type: string
            enum:
              - TableOfContents
            description: The type of table of contents flow element.
          FlowID:
            $ref: '#/components/schemas/FlowID'
          Description:
            type: string
            maxLength: 100
            description: A user-provided description of the table of contents flow element.
          Options:
            type: object
            additionalProperties: true
            description: Options for the table of contents flow element.
            properties:
              ShowSidebar:
                type: string
                enum:
                  - 'Yes'
                  - 'No'
                description: If `Yes`, show sidebar.
              TocConclusion:
                type: string
                enum:
                  - 'Yes'
                  - 'No'
                description: If `Yes`, show table of contents conclusion.
          Flow:
            $ref: '#/components/schemas/Flow'
      WebServiceFlowElement:
        type: object
        x-examples:
          example:
            Type: WebService
            FlowID: FL_42156782
            URL: http://
            Method: GET
            RequestParams: []
            EditBodyParams: []
            Body: []
            ContentType: application/x-www-form-urlencoded
            Headers: []
            ResponseMap: []
            FireAndForget: false
            StringifyValues: true
        x-tags:
          - Schemas
        description: Web service flow element.
        properties:
          Type:
            type: string
            enum:
              - WebService
            description: The type of web service flow element.
          FlowID:
            $ref: '#/components/schemas/FlowID'
          URL:
            type: string
            minLength: 0
            maxLength: 1000
            description: The URL of the web service flow element.
          Method:
            type: string
            enum:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
            description: The method of the web service flow element.
          RequestParams:
            $ref: '#/components/schemas/KeyValuePairArray'
          EditBodyParams:
            $ref: '#/components/schemas/KeyValuePairArray'
          Body:
            $ref: '#/components/schemas/KeyValuePairArray'
          ContentType:
            type: string
            enum:
              - application/x-www-form-urlencoded
              - application/json
            description: The content type of the web service flow element.
          Headers:
            $ref: '#/components/schemas/KeyValuePairArray'
          ResponseMap:
            $ref: '#/components/schemas/KeyValuePairArray'
          FireAndForget:
            type: boolean
            description: If true, "fire and forget."
          StringifyValues:
            type: boolean
            description: If true, stringify values.
      FlowProperties:
        type: object
        additionalProperties: true
        description: >-
          Provides information to describe the flow structure such as `Count`,
          which is the total number of flow elements.
        x-tags:
          - Schemas
        properties:
          Count:
            type: integer
            description: The total number of flow element.
      Locator:
        anyOf:
          - title: >-
              Classic locator, begins with two alpha characters followed by a |
              and any combination of alpha and | characaters
            pattern: ^(Locator:)?\w\w\|(-|\w| |\||#)+$
            description: An user-provided field.
          - title: Current url locator regex pattern, matching entire string
            pattern: >-
              ^(Locator:)?(q|e|m|r|lm|qo|cj|l|u|s|p|sd|gr|ev|ed|sbj|bl|ts|rrt|rp|ws|top|fd|date|loc|scs|sed|ced|sie|sied|rand|refl):\/\/(([\w\p{L}
              \-\.:\@&=+\$,!~\*\'\(\)#%]*\/?)*)(\?.*)?$
            description: An user-provided field.
          - title: >-
              Current url locator regex pattern, matching the entire string, allow
              no white space, this should mirror the above* regex but allow no
              white space
            pattern: >-
              ^(Locator:)?(q|e|m|r|lm|qo|cj|l|u|s|p|sd|gr|ev|ed|sbj|bl|ts|rrt|rp|ws|top|fd|date|loc|scs|sed|ced|sie|sied|rand|refl):\/\/(([\w\p{L}\-\.:\@&=+\$,!~\*\'\(\)#%]*\/?)*)(\?[^\s]*)?$
            description: An user-provided field.
        x-tags:
          - Schemas
        description: Locator.
        type: string
        x-examples:
          example-1: string
      Labels:
        type: object
        additionalProperties:
          $ref: '#/components/schemas/Selection'
        x-tags:
          - Schemas
        description: Labels.
        properties:
          NA:
            $ref: '#/components/schemas/Selection'
      AnonymizeResponse:
        description: >-
          Scrub all respondent identifying information such as IP or location
          data.
        default: 'No'
        type: string
        enum:
          - 'No'
          - 'Yes'
        x-tags:
          - Schemas
      Autofocus:
        description: If true, provide autofocus for questions.
        type: boolean
        x-tags:
          - Schemas
      Autoadvance:
        description: Enables autoadvance on questions
        type: boolean
        x-tags:
          - Schemas
      AutoadvancePages:
        description: >-
          Enables autoadvance on pages. This requires `Autoadvance` to be anbled
          as well
        type: boolean
        x-tags:
          - Schemas
      AvailableLanguages:
        description: The languages the survey supports.
        type: object
        additionalProperties:
          type: array
          maxItems: 0
          items:
            type: string
        maxProperties: 100
        minProperties: 1
        x-examples:
          example:
            EN: []
            ES: []
        x-tags:
          - Schemas
      BackButton:
        description: If true, display the back button
        default: false
        type: boolean
        x-tags:
          - Schemas
      BallotBoxStuffingPrevention:
        description: If true, prevent respondents from taking the survey multiple times.
        type: boolean
        default: false
        x-tags:
          - Schemas
      BallotBoxStuffingPreventionBehavior:
        type: string
        default: default
        enum:
          - default
          - DefaultMessage
          - DisplayMessage
          - Redirect
          - Continue
        x-tags:
          - Schemas
        description: Ballot box stuffing prevention behavior.
        nullable: true
      BallotBoxStuffingPreventionMessage:
        description: >-
          ID of the library message shown to prevent ballot box stuffing. See
          `BallotBoxStuffingPrevention` and
          `BallotBoxStuffingPreventionMessageLibrary`.
        type: string
        nullable: true
        pattern: ^(MS_[a-zA-Z0-9]{11,15})?$
        example: MS_abcdefg12345
        x-tags:
          - Schemas
      BallotBoxStuffingPreventionMessageLibrary:
        description: >-
          Library ID associated with the Message ID in
          `BallotBoxStuffingPreventionMessage`.
        type: string
        pattern: ^(UR|GR)_[a-zA-Z0-9]{11,15}$
        example: UR_SomeUserId001
        x-tags:
          - Schemas
      BallotBoxStuffingPreventionURL:
        type: string
        x-tags:
          - Schemas
        description: Ballot Box stuffing prevention URL.
      BooleanExpression:
        type: object
        additionalProperties:
          $ref: '#/components/schemas/AnonymizeResponse'
        x-tags:
          - Schemas
        description: Boolean expression.
        properties:
          Type:
            type: string
            enum:
              - If
              - AndIf
              - ElseIf
            description: Type of boolean expression.
        required:
          - Type
      BranchLogic:
        description: >-
          Send respondents down different paths in the survey. See Qualtics
          Documentation for more information on [Branch
          Logic](https://www.qualtrics.com/support/survey-platform/survey-module/survey-flow/standard-elements/branch-logic/)
        type: object
        additionalProperties:
          oneOf:
            - $ref: '#/components/schemas/QuestionExpression'
            - $ref: '#/components/schemas/EmbeddedDataExpression'
            - $ref: '#/components/schemas/DeviceTypeExpression'
            - $ref: '#/components/schemas/QuotaExpression'
            - $ref: '#/components/schemas/GeoIPExpression'
            - $ref: '#/components/schemas/EvaluatorMetadataExpression'
            - $ref: '#/components/schemas/PanelDataExpression'
            - $ref: '#/components/schemas/LoopAndMergeExpression'
            - $ref: '#/components/schemas/RelationshipExpression'
            - $ref: '#/components/schemas/SubjectMetadataExpression'
            - $ref: '#/components/schemas/OrgHierarchyUnitsExpression'
            - $ref: '#/components/schemas/OrgHierarchyMetadataExpression'
        x-examples:
          example:
            '0':
              '0':
                ChoiceLocator: q://QID2/SelectableChoice/2
                Description: >-
                  <span class="ConjDesc">If</span> <span
                  class="QuestionDesc">Welcome Stranger</span> <span
                  class="LeftOpDesc">What are you buying?</span> <span
                  class="OpDesc">Is Selected</span> 
                LeftOperand: q://QID2/SelectableChoice/2
                LogicType: Question
                Operator: Selected
                QuestionID: QID2
                QuestionIDFromLocator: QID2
                QuestionIsInLoop: 'no'
                Type: Expression
              Type: If
            Type: BooleanExpression
        x-tags:
          - Schemas
        properties:
          Type:
            type: string
            enum:
              - BooleanExpression
            description: Type of branch logic.
        required:
          - Type
      CollectGeoLocation:
        description: Collect respondents Geo Location. Default `false`.
        type: string
        default: 'true'
        enum:
          - 'true'
          - 'false'
        x-tags:
          - Schemas
      ComparisonOperators:
        type: string
        enum:
          - EqualTo
          - NotEqualTo
          - Empty
          - NotEmpty
          - GreaterThan
          - GreaterThanOrEqual
          - LessThan
          - LessThanOrEqual
          - Contains
          - DoesNotContain
          - MatchesRegex
          - Is
          - IsNot
          - In
          - InOrBelow
          - SameAsSubject
        x-tags:
          - Schemas
        description: Comparison operators.
      CustomStyles:
        description: Custom CSS to load when survey taking. See also `ExternalCSS`.
        type: string
        x-tags:
          - Schemas
      CustomLanguages:
        description: The custom languages the survey supports.
        type: object
        additionalProperties:
          type: object
          required:
            - DisplayName
            - ErrorMessages
          properties:
            DisplayName:
              description: Name of the custom language
              type: string
            ErrorMessages:
              description: Base language for the custom language
              type: string
        x-examples:
          example:
            FR-CA:
              DisplayName: French-Canada
              ErrorMessages: FR
        x-tags:
          - Schemas
      CustomValidation:
        description: >-
          Additional validation to direct respondents to answer questions in a
          certain way.
        additionalProperties: true
        x-tags:
          - Schemas
        type: object
        properties:
          Logic:
            $ref: '#/components/schemas/BranchLogic'
          Message:
            description: Message to display when respondents don't fulfill the validation
            type: object
            additionalProperties: true
            required:
              - libraryID
              - messageID
              - subMessageID
            properties:
              description:
                type: string
                description: A user-provided description of the custom validation.
              libraryID:
                $ref: '#/components/schemas/LibraryID'
              messageID:
                $ref: '#/components/schemas/MessageID'
              subMessageID:
                type: string
                enum:
                  - VE_FORCE_RESPONSE
                  - VE_FORCE_RESPONSE_PLURAL
                  - VE_FORCE_RESPONSE_MORE
                  - VE_FORCE_RESPONSE_OTHER
                  - VE_MIN_CHOICES
                  - VE_MAX_CHOICES
                  - VE_MAX_CHOICES_PGR
                  - VE_MIN_CHOICES_MATRIX
                  - VE_MAX_CHOICES_MATRIX
                  - VE_MIN_CHOICES_HLText
                  - VE_MAX_CHOICES_HLText
                  - VE_INCORRECT_TOTAL
                  - VE_TOO_MANY_CHARACTERS
                  - VE_TOO_MANY_CHARACTERS_PLURAL
                  - VE_TOO_FEW_CHARACTERS
                  - VE_TOO_FEW_CHARACTERS_PLURAL
                  - VE_NOT_CONSECUTIVE
                  - VE_NOT_CONSECUTIVE_RANGE
                  - VE_VALIDATION_FAILED
                  - VE_VALIDUSSTATE
                  - VE_VALIDCAPHONE
                  - VE_VALIDUKPHONE
                  - VE_VALIDUKZIP
                  - VE_VALIDAUPHONE
                  - VE_VALIDNLPHONE
                  - VE_VALIDNZPHONE
                  - VE_VALIDAUZIP
                  - VE_VALIDNZZIP
                  - VE_VALIDNLZIP
                  - VE_VALIDUSZIP
                  - VE_VALIDCAZIP
                  - VE_VALIDDATE
                  - VE_VALIDALTDATE
                  - VE_VALIDINTLDATE
                  - VE_VALIDNUMBER
                  - VE_VALIDTEXTONLY
                  - VE_VALIDUSSTATE_PLURAL
                  - VE_VALIDEMAIL_PLURAL
                  - VE_VALIDUSPHONE_PLURAL
                  - VE_VALIDUSZIP_PLURAL
                  - VE_VALIDDATE_PLURAL
                  - VE_VALIDNUMBER_PLURAL
                  - VE_VALIDTEXTONLY_PLURAL
                  - VE_VALIDEXTENSIONS
                  - VE_VALIDPDF
                  - VE_VALIDDOCUMENT
                  - VE_VALIDEMAIL
                  - VE_VALIDSPREADSHEET
                  - VE_VALIDGRAPHIC
                  - VE_VALIDUPLOAD
                  - VE_VALIDSCREENCAPTURE
                  - VE_TEXT_ENTRY_HAS_VALUE_BUT_NOT_CHECKED
                  - VE_TEXT_ENTRY_HAS_VALUE_BUT_NOT_RANKED
                  - VE_SELECT_LEAST_MOST_PREFERRED
                  - VE_SELECT_LEAST_MOST_LEVEL
                  - VE_SELECT_MOST_VALUE_UPGRADE
                  - VE_SELECT_VALUABLE_LEVEL
                  - VE_IMPORTANCE_TOTAL
                  - VE_MIN_GROUP_CHOICES
                  - VE_MAX_GROUP_CHOICES
                  - VE_VALIDNUMBER_MIN
                  - VE_VALIDNUMBER_MAX
                  - VE_VALIDMIN_PLURAL
                  - VE_VALIDMAX_PLURAL
                  - VE_VALIDNUMBER_NUM_DECIMALS
                  - VE_FORCE_OTHER_RESPONSE
                  - VE_HEADER_VALIDATION_MESSAGE
                  - VE_CUSTOM_VALIDATION_NO_MESSAGE
                  - VE_CUSTOM_VALIDATION_NOT_APPLIED
                  - VE_QUESTION
                  - VE_ERROR
                  - VE_INCORRECT_CAPTCHA_RESPONSE
                  - VE_MULTIPLE_CHOICES
                description: The unique identifier for the `subMessageID`.
        required:
          - Logic
          - Message
      DeviceTypeExpression:
        description: Logic expression for a Device Type
        type: object
        additionalProperties: true
        x-examples:
          example:
            LogicType: DeviceType
            Description: My DT Expression
            LeftOperand: mobile
            Operator: Is
            Type: Expression
        x-tags:
          - Schemas
        properties:
          LogicType:
            type: string
            enum:
              - DeviceType
            description: Logic type of the device type expression.
          LeftOperand:
            type: string
            enum:
              - mobile
              - Mobile
              - blackberry
              - android
              - ipad
              - iphone
              - ipod
              - opera
              - palm
              - windows
              - generic
            description: Operation.
          Operator:
            type: string
            enum:
              - Is
              - IsNot
            description: Operator.
          Type:
            type: string
            enum:
              - Expression
            description: The type of device type expression.
          Description:
            type: string
            description: A user-provided description field.
        required:
          - LogicType
          - LeftOperand
          - Type
          - Description
      EmailThankYou:
        description: Send an email thank you message after survey completion
        type: string
        default: 'false'
        enum:
          - 'true'
          - 'false'
        x-tags:
          - Schemas
      EmbeddedDataExpression:
        description: Logic expression for a Embedded Data type
        type: object
        additionalProperties: true
        x-examples:
          example:
            LogicType: EmbeddedField
            Description: My ED Expression
            Operator: EqualTo
            LeftOperand: e://Field/1
            RightOperand: SomeValue
            Type: Expression
        x-tags:
          - Schemas
        properties:
          LogicType:
            type: string
            enum:
              - EmbeddedField
            description: Logic type of the embedded data expression.
          Description:
            type: string
            description: A user-provided description field.
          Operator:
            $ref: '#/components/schemas/ComparisonOperators'
          LeftOperand:
            $ref: '#/components/schemas/Locator'
          RightOperand:
            type: string
            description: Operation.
          Type:
            type: string
            enum:
              - Expression
            description: Type of embedded data expression.
        required:
          - LogicType
          - Type
      EOSMessage:
        title: End of Survey Message
        description: ID of the message to be displayed at the end of the survey
        type: string
        nullable: true
        pattern: ^(MS_[a-zA-Z0-9]{11,15})?$
        example: MS_abcdefg12345
        x-tags:
          - Schemas
      EOSRedirectURL:
        description: >-
          The URL to redirect respondents to at the end of the survey used when
          `SurveyTermination` is set to `Redirect`.
        type: string
        x-tags:
          - Schemas
      EOSMessageLibrary:
        description: >-
          End of survey message library used when `SurveyTermination` is set to
          `DisplayMessage`. See `SurveyTermination` and `EOSMessage`.
        type: string
        x-tags:
          - Schemas
      EvaluatorMetadataExpression:
        description: Logic expression for a Evaluator Metadata type
        type: object
        additionalProperties: true
        x-examples:
          example:
            LogicType: EvaluatorMetadata
            Description: My Evaluator Metadata expression
            LeftOperand: e://Field/Manager%20Level%202
            Operator: SameAsSubject
            PersonMeta: Manager Level 2
            RightOperand: Some person's name here
            SameAsSubjectRightOperand: e://Field/Manager
            Type: Expression
        x-tags:
          - Schemas
        properties:
          LogicType:
            type: string
            enum:
              - EvaluatorMetadata
            description: Logic type of the evaluator metadata expression.
          Description:
            type: string
            description: A user-provided description field.
          LeftOperand:
            type: string
            pattern: ^e://Field/.*$
            description: Operation.
          Operator:
            $ref: '#/components/schemas/ComparisonOperators'
          PersonMeta:
            type: string
            maxLength: 100
            description: Person meta data.
          RightOperand:
            type: string
            description: Operation.
          SameAsSubjectRightOperand:
            type: string
            pattern: ^e://Field/.*$
            description: Same as subject.
          Type:
            type: string
            enum:
              - Expression
            description: Type of evaluator metadata expression.
        required:
          - LogicType
          - Description
          - LeftOperand
          - PersonMeta
          - Type
      ExternalCSS:
        description: CSS URL to load when survey taking. See also `CustomStyles`.
        type: string
        x-tags:
          - Schemas
      GeoIPExpression:
        description: Logic expression for a Geo IP type.
        type: object
        additionalProperties: true
        x-examples:
          example:
            LogicType: GeoIP
            Description: My Geo IP expression
            LeftOperand: loc://AreaCode
            Operator: EqualTo
            RightOperand: '84604'
            Type: Expression
        x-tags:
          - Schemas
        properties:
          LogicType:
            type: string
            enum:
              - GeoIP
            description: The logic type of the Geo IP expression.
          Description:
            type: string
            description: A user-provided description field.
          LeftOperand:
            type: string
            enum:
              - loc://PostalCode
              - loc://City
              - loc://Region
              - loc://AreaCode
              - loc://CountryName
              - loc://CountryCode
              - LocationMap
            description: Operation.
          Operator:
            $ref: '#/components/schemas/ComparisonOperators'
          RightOperand:
            type: string
            description: Operation.
          Type:
            type: string
            enum:
              - Expression
            description: The type of Geo IP expression.
        required:
          - LogicType
          - Description
          - Type
      headerMid:
        description: >-
          ID of the library message to display in the header. Do not use in
          conjunction with `Header`.
        type: string
        nullable: true
        pattern: ^(MS_[a-zA-Z0-9]{11,15})?$
        example: MS_abcdefg12345
        x-tags:
          - Schemas
      Header:
        description: >-
          Header to display on each page such as a logo. Do not use in conjunction
          with `headerMid`.
        type: string
        x-tags:
          - Schemas
      footerMid:
        description: >-
          ID of the library message to display in the footer. Do not use in
          conjunction with `Footer`.
        type: string
        nullable: true
        pattern: ^(MS_[a-zA-Z0-9]{11,15})?$
        example: MS_abcdefg12345
        x-tags:
          - Schemas
      Footer:
        description: >-
          Footer to display on each page such as a logo. Do not use in conjunction
          with `footerMid`.
        type: string
        x-tags:
          - Schemas
      InactiveSurvey:
        description: >-
          Whether or not to use a custom validation message. See `InactiveMessage`
          and `InactiveMessageLibrary`.
        type: string
        nullable: true
        enum:
          - DefaultMessage
          - DisplayMessage
        x-tags:
          - Schemas
      InactiveMessage:
        description: >-
          ID of the library message to use when `InactiveSurvey` is set to
          `DisplayMessage`. See `InactiveSurvey` and `InactiveMessageLibrary`.
        type: string
        nullable: true
        pattern: ^(MS_[a-zA-Z0-9]{11,15})?$
        example: MS_abcdefg12345
        x-tags:
          - Schemas
      InactiveMessageLibrary:
        description: Library ID associated with the Message ID in `InactiveMessage`.
        type: string
        pattern: ^(UR|GR)_[a-zA-Z0-9]{11,15}$
        example: UR_SomeUserId001
        x-tags:
          - Schemas
      LoopAndMergeExpression:
        description: Logic expression for a Loop & Merge type.
        type: object
        additionalProperties: true
        x-examples:
          example:
            LogicType: LoopAndMerge
            Description: My Loop & Merge expression
            LeftOperand: BL_abcdefg12345
            Operator: EqualTo
            RightOperand: lm://CurrentLoop
            Type: Expression
        x-tags:
          - Schemas
        properties:
          LogicType:
            type: string
            enum:
              - LoopAndMerge
            description: The logic type of the loop and merge expression.
          Description:
            type: string
            description: A user-provided description field.
          LeftOperand:
            $ref: '#/components/schemas/BlockID'
          Operator:
            $ref: '#/components/schemas/ComparisonOperators'
          RightOperand:
            type: string
            enum:
              - lm://CurrentLoop
              - lm://CurrentLoopNumber
              - lm://CurrentLoopById
            description: Operation.
          Type:
            type: string
            enum:
              - Expression
            description: The type of loop and merge expression.
        required:
          - LogicType
          - Description
          - Type
      NoIndex:
        description: Prevent search engines from indexing the survey.
        type: string
        default: 'Yes'
        enum:
          - 'Yes'
          - 'No'
        x-tags:
          - Schemas
      nextButtonMid:
        description: >-
          ID of the library message to display in the "next" button. Do not use in
          conjunction with `NextButton`.
        type: string
        nullable: true
        pattern: ^(MS_[a-zA-Z0-9]{11,15})?$
        example: MS_abcdefg12345
        x-tags:
          - Schemas
      NextButton:
        description: >-
          The text to use as the "next" Button. Note that `BackButton` should be
          enabled for this property to be used. See `nextButtonMid` and
          `BackButton`.
        default: ' ← '
        type: string
        x-tags:
          - Schemas
      OrgHierarchyMetadataExpression:
        description: Logic expression for a Org Hierarchy Metadata type.
        type: object
        additionalProperties: true
        x-examples:
          example:
            Description: OrgHierarchyMetadata Description
            Field: TeamLead
            LogicType: OrgHierarchyMetadata
            Operator: ArrayContains
            OrgHierarchyDef:
              Fields:
                Division:
                  OH_abcdefgh1234567: OrgUnitMetadata0
                TeamLead:
                  OH_abcdefgh1234567: ManagerField
              ID: OH_abcdefgh1234567
              Type: ParentChild
            OrgHierarchyID: OH_abcdefgh1234567
            Type: Expression
            Value: test_value+random@qualtrics.com
        x-tags:
          - Schemas
        properties:
          Description:
            type: string
            description: A user-provided description field.
          Field:
            type: string
            maxLength: 100
            description: Text field for the Org Hierarchy Metadata type.
          LogicType:
            type: string
            enum:
              - OrgHierarchyMetadata
            description: The logic type of the Org Hierarchy Metadata type.
          Operator:
            type: string
            enum:
              - ArrayContains
            description: Operator for the Org Hierarchy Metadata type.
          OrgHierarchyDef:
            type: object
            additionalProperties: true
            description: Org hierarchy definition.
          OrgHierarchyID:
            $ref: '#/components/schemas/OrgHierarchyID'
          Type:
            type: string
            enum:
              - Expression
            description: The type of org hierarchy metadata expression.
          Value:
            type: string
            maxLength: 100
            description: An attribute associated with `key`.
        required:
          - Description
          - LogicType
          - Type
      OrgHierarchyUnitsExpression:
        description: Logic expression for a Org Hierarchy Units type.
        type: object
        additionalProperties: true
        x-examples:
          example:
            Description: OrgHierarchyUnits Description
            LogicType: OrgHierarchyUnits
            Operator: InOrBelow
            OrgHierarchyID: OH_abcdefgh1234567
            Type: Expression
            UnitID: OHU_abcdefgh1234567
            UnitName: OrgHierarchyUnit Name
        x-tags:
          - Schemas
        properties:
          Description:
            type: string
            description: A user-provided description field.
          LogicType:
            type: string
            enum:
              - OrgHierarchyUnits
            description: The logic type for a Org Hierarchy Units type.
          Operator:
            $ref: '#/components/schemas/ComparisonOperators'
          OrgHierarchyID:
            $ref: '#/components/schemas/OrgHierarchyID'
          UnitID:
            $ref: '#/components/schemas/OrgHierarchyUnitID'
          UnitName:
            type: string
            maxLength: 100
            description: The name of the unit.
        required:
          - Description
          - LogicType
          - OrgHierarchyID
      PageTransition:
        description: Transition between page navigation.
        type: string
        default: None
        enum:
          - None
          - Slide
          - Fade
          - Flip
          - Barrel
        x-tags:
          - Schemas
      PanelDataExpression:
        description: Logic expression for a Panel Data type.
        type: object
        additionalProperties: true
        x-examples:
          example:
            Description: >-
              <span class="ConjDesc">If</span><span class="schema_desc">Contact
              List</span><span class="select_val_desc LeftOperand_desc">First
              Name</span><span class="select_val_desc Operator_desc">Is Equal
              to</span><span class="textbox_val_desc RightOperand_desc">Bob</span>
            LeftOperand: m://FirstName
            LogicType: PanelData
            Operator: EqualTo
            RightOperand: Bob
            Type: Expression
        x-tags:
          - Schemas
        properties:
          Description:
            type: string
            description: A user-provided description field.
          LeftOperand:
            type: string
            enum:
              - m://FirstName
              - m://LastName
              - m://ContactPoint
              - m://ExternalDataReference
              - m://Email
            description: Operation.
          LogicType:
            type: string
            enum:
              - PanelData
            description: The logic type of the Panel data expression.
          Operator:
            $ref: '#/components/schemas/ComparisonOperators'
          RightOperand:
            type: string
            description: Operation.
          Type:
            type: string
            enum:
              - Expression
            description: The type of the Panel data expression.
        required:
          - Description
          - LeftOperand
          - LogicType
          - Type
      PartialData:
        description: >-
          Specify how long a respondent can leave a survey unfinished before that
          survey automatically closes. A value of `No` specifies to delete partial
          completion data. See also `PartialDataCloseAfter`.
        type: string
        default: +1 week
        enum:
          - 'No'
          - +1 hour
          - +4 hour
          - +1 day
          - +2 days
          - +3 days
          - +1 week
          - +2 weeks
          - +1 month
          - +3 months
          - +6 months
          - +1 year
        x-tags:
          - Schemas
      PartialDataCloseAfter:
        description: >-
          When the partial data deadline starts, either by LastActivity or
          SurveyStart. See `PartialData`.
        type: string
        enum:
          - ''
          - LastActivity
          - SurveyStart
        x-tags:
          - Schemas
      Password:
        description: The password to take the survey. See `PasswordProtection`.
        type: string
        x-tags:
          - Schemas
      PasswordProtection:
        description: Require a password to take the survey. See `Password`.
        default: 'No'
        type: string
        nullable: true
        enum:
          - 'No'
          - 'Yes'
        x-tags:
          - Schemas
      previousButtonMid:
        description: >-
          ID of the library message to display in the "previous" button. Do not
          use in conjunction with `PreviousButton`.
        type: string
        nullable: true
        pattern: ^(MS_[a-zA-Z0-9]{11,15})?$
        example: MS_abcdefg12345
        x-tags:
          - Schemas
      PreviousButton:
        description: >-
          The text to use as the "previous" Button. Note that `BackButton` should
          be enabled for this property to be used. See `previousButtonMid` and
          `BackButton`.
        default: ' ← '
        type: string
        x-tags:
          - Schemas
      ProgressBarDisplay:
        description: Shows participants a progress bar.
        type: string
        default: None
        enum:
          - None
          - Text
          - NoText
          - VerboseText
        x-tags:
          - Schemas
      QuestionExpression:
        description: Logic expression for a question type.
        type: object
        additionalProperties: true
        x-examples:
          example:
            LogicType: Question
            ChoiceLocator: q://QID1/SelectableChoice/1
            LeftOperand: q://QID1/SelectableChoice/1
            Operator: Selected
            QuestionID: QID1
            QuestionIDFromLocator: QID1
            Type: Expression
        x-tags:
          - Schemas
        properties:
          ChoiceLocator:
            $ref: '#/components/schemas/Locator'
          LogicType:
            type: string
            enum:
              - Question
            description: The logic type of a question expression.
          Operator:
            type: string
            enum:
              - Selected
              - NotSelected
              - EqualTo
              - NotEqualTo
              - Empty
              - NotEmpty
              - Displayed
              - NotDisplayed
              - GreaterThan
              - GreaterThanOrEqual
              - LessThan
              - LessThanOrEqual
              - Contains
              - DoesNotContain
              - MatchesRegex
              - IsNot
              - Uploaded
              - NotUploaded
              - PDF
              - Document
              - ClickedIn
              - NotClickedIn
              - Extensions
              - Graphic
              - Spreadsheet
            description: Operator.
          QuestionID:
            $ref: '#/components/schemas/QuestionID'
          QuestionIsInLoop:
            type: string
            enum:
              - 'yes'
              - 'no'
            description: If yes, question is in loop.
          Type:
            type: string
            enum:
              - Expression
            description: The type of question expression.
        required:
          - ChoiceLocator
          - LogicType
          - Operator
          - QuestionID
          - QuestionIsInLoop
          - Type
      QuestionsPerPage:
        description: Number of questions to display per page.
        type: string
        pattern: ^[\d]+$
        x-tags:
          - Schemas
      QuotaExpression:
        description: Logic expression for a quota type.
        type: object
        additionalProperties: true
        x-examples:
          example:
            LogicType: Quota
            Description: My Quota expression
            LeftOperand: qo://QO_5EWOT1L7FhSGolu/QuotaMet
            Operator: QuotaMet
            QuotaID: QO_5EWOT1L7FhSGolu
            QuotaName: Q1.S1 Quota
            QuotaType: Simple
            SubQuotaID: '0'
            Type: Expression
        x-tags:
          - Schemas
        properties:
          LogicType:
            type: string
            enum:
              - Quota
            description: The logic type of the quota expression.
          Description:
            type: string
            description: A user-provided description field.
          LeftOperand:
            type: string
            pattern: ^qo://QO_[0-9a-zA-Z]{11,15}/Quota(Count|Met|NotMet)$
            description: Operator.
          Operator:
            type: string
            enum:
              - QuotaMet
              - QuotaNotMet
              - GreaterThan
              - GreaterThanOrEqual
              - LessThan
              - LessThanOrEqual
              - EqualTo
              - NotEqualTo
            description: Operator.
          QuotaID:
            $ref: '#/components/schemas/QuotaID'
          QuotaName:
            type: string
            description: The name of the quota.
          QuotaType:
            type: string
            enum:
              - Simple
              - Cross
              - NoLogic
            description: The type of quota.
          SubQuotaID:
            type: string
            pattern: ^\d+$
            description: A unique identifier for the `SubQuotaID`.
          Type:
            type: string
            enum:
              - Expression
            description: The type of quota expression.
        required:
          - LogicType
          - Description
          - LeftOperand
          - QuotaID
          - QuotaType
          - Type
      Randomization:
        description: Randomize choices within a question.
        oneOf:
          - type: string
          - type: object
        x-tags:
          - Schemas
      RandomizationElement:
        description: >-
          Either a specific `QuestionID` from `BlockElements`, or a the set of
          randomized Questions from `Randomization.Advanced.RandomizeAll` or
          `Randomization.Advanced.RandomSubSet`.
        oneOf:
          - $ref: '#/components/schemas/QuestionID'
          - type: string
            enum:
              - '{~Randomized~}'
              - '{~SubSet~}'
        x-tags:
          - Schemas
      AnswerRandomization:
        description: Randomize Answers within a Question.
        oneOf:
          - type: string
          - type: object
        x-tags:
          - Schemas
      RecaptchaV3:
        description: Apply bot detection on the survey taking experience.
        type: string
        enum:
          - 'true'
          - 'false'
        x-tags:
          - Schemas
      RecodeValues:
        description: Numeric mapping of question choices.
        type: object
        additionalProperties:
          type: string
        example:
          '1': '1'
          '2': '2'
          '3': '-1000'
        x-tags:
          - Schemas
      RefererCheck:
        description: >-
          Whether or not to restrict the URL respondents must come from to access
          the survey. See `RefererURL`.
        type: string
        default: 'No'
        enum:
          - 'No'
          - 'Yes'
        x-tags:
          - Schemas
      RefererURL:
        description: >-
          The URL respondents must come from to access the survey. See
          `RefererCheck`.
        type: string
        x-tags:
          - Schemas
      RelationshipExpression:
        description: Logic expression for a relationship type.
        type: object
        additionalProperties: true
        x-examples:
          example:
            LogicType: Relationship
            Description: My Relationship expression
            LeftOperand: e://Field/Relationship
            Operator: EqualTo
            RightOperand: Manager
            Type: Expression
        x-tags:
          - Schemas
        properties:
          Description:
            type: string
            description: A user-provided description field
          LeftOperand:
            type: string
            enum:
              - e://Field/Relationship
            description: Operation.
          LogicType:
            type: string
            enum:
              - Relationship
            description: The logic type of the relationship expression.
          Operator:
            $ref: '#/components/schemas/ComparisonOperators'
          RightOperand:
            type: string
            description: Operation.
          Type:
            type: string
            enum:
              - Expression
            description: The type of relationship expression.
        required:
          - Description
          - LeftOperand
          - LogicType
          - Type
      ResponseSummary:
        description: >-
          Shows the response summary at the end of the survey used when
          `SurveyTermination` is set to `ResponseSummary`.
        type: string
        default: 'No'
        enum:
          - 'Yes'
          - 'No'
        x-tags:
          - Schemas
      SaveAndContinue:
        description: If true, allow respondents to save and continue later.
        default: true
        type: boolean
        x-tags:
          - Schemas
      SecureResponseFiles:
        description: >-
          If true, uploaded files by respondents can only be viewed by the survey
          owner.
        type: string
        default: 'true'
        enum:
          - 'true'
          - 'false'
        x-tags:
          - Schemas
      Skin:
        description: The skin definition.
        type: object
        additionalProperties: true
        x-tags:
          - Schemas
        properties:
          brandingId:
            type: string
            description: A unique identifier for the brand.
            nullable: true
          templateId:
            description: The unique identifier for this template.
            type: string
            nullable: true
          overrides:
            description: The overrides property.
            type: object
            additionalProperties: true
            nullable: true
      SkipLogic:
        description: >-
          Defines how flow skips to a question, the end of block or end of survey
          based on logic
        type: array
        x-tags:
          - Schemas
        items:
          type: object
          additionalProperties: true
          x-examples:
            example:
              ChoiceLocator: q://QID2/SelectableChoice/2
              Condition: Selected
              Description: >-
                Condition: <strong title="What are you buying?">What are you
                buying?</strong> <strong>Is Selected</strong>. Skip To:
                <strong>End of Survey</strong>.
              Locator: q://QID2/SelectableChoice/2
              QuestionID: QID2
              SkipLogicID: 1
              SkipToDescription: >-
                Welcome Stranger <strong>What are you buying?</strong>  <strong>Is
                Selected</strong>
              SkipToDestination: ENDOFSURVEY
          properties:
            SkipLogicID:
              description: The ID of the logic.
              type: string
              pattern: '[0-9]{1,3}'
            ChoiceID:
              description: The ID of the choice.
              type: string
              pattern: '[0-9]{1,3}'
            ChoiceLocator:
              $ref: '#/components/schemas/Locator'
            Condition:
              description: All the possible skip logic conditions
              type: string
              enum:
                - Selected
                - NotSelected
                - Displayed
                - NotDisplayed
                - GreaterThan
                - LessThan
                - GreaterThanOrEqual
                - LessThanOrEqual
                - EqualTo
                - NotEqualTo
                - Empty
                - NotEmpty
                - ClickedIn
                - NotClickedIn
                - Uploaded
                - NotUploaded
                - Contains
                - DoesNotContain
                - MatchesRegex
            Description:
              type: string
              description: a user-provided description field.
            Locator:
              $ref: '#/components/schemas/Locator'
            QuestionID:
              $ref: '#/components/schemas/QuestionID'
            SkipToDescription:
              description: The text description of the skip condition
              type: string
            SkipToDestination:
              description: Where to send respondents when the condition is satisfied
              oneOf:
                - type: string
                  enum:
                    - ENDOFBLOCK
                    - ENDOFSURVEY
                - $ref: '#/components/schemas/SurveyID'
          required:
            - ChoiceLocator
            - Condition
            - QuestionID
      SubjectMetadataExpression:
        description: Logic expression for a Subject Metadata type
        type: object
        additionalProperties: true
        x-examples:
          example:
            LogicType: SubjectMetadata
            Description: >-
              <span class="ConjDesc">And</span> <span class="QuestionDesc"></span>
              <span class="LeftOpDesc">Subject's Metadata Field+ with
              pluses</span> Is <span class="OpDesc">Equal to</span> <span
              class="RightOpDesc"> a plus space and 2 spaces </span>
            LeftOperand: e://Field/SubjectField%2B%20with%20pluses
            Operator: EqualTo
            PersonMeta: Field+ with pluses
            RightOperand: a plus space and 2 spaces
            Type: Expression
        x-tags:
          - Schemas
        properties:
          LogicType:
            type: string
            enum:
              - SubjectMetadata
            description: The logic type of the expression.
          Description:
            type: string
            description: A user-provided description field.
          LeftOperand:
            type: string
            pattern: ^e://Field/.*$
          Operator:
            $ref: '#/components/schemas/ComparisonOperators'
          PersonMeta:
            type: string
            description: Personal metadata.
          RightOperand:
            type: string
            description: Operation.
          Type:
            type: string
            enum:
              - Expression
            description: The type of expression.
        required:
          - LogicType
          - Description
          - LeftOperand
          - PersonMeta
          - Type
      SurveyExpiration:
        description: >-
          Sets the survey to be available during a specified time period. See
          `SurveyStartDate` and `SurveyExpirationDate`.
        type: string
        nullable: true
        default: null
        enum:
          - 'on'
          - DateRange
          - None
        x-tags:
          - Schemas
      SurveyExpirationDate:
        description: When respondents can no longer take the survey.
        type: string
        format: date-time
        nullable: true
        x-tags:
          - Schemas
      SurveyMetaDescription:
        description: Meta description for the survey, used by search engines and so forth.
        type: string
        maxLength: 100
        x-tags:
          - Schemas
      SurveyLanguage:
        $ref: '#/components/schemas/LanguageCode'
      SurveyName:
        description: Name of the survey
        type: string
        maxLength: 100
        x-tags:
          - Schemas
      SurveyProtection:
        description: Survey is either publicly available or restricted by invitation only
        type: string
        default: PublicSurvey
        enum:
          - PublicSurvey
          - ByInvitation
          - PasswordProtected
        x-tags:
          - Schemas
      SurveyStartDate:
        description: When respondents can start taking the survey
        type: string
        format: date-time
        nullable: true
        x-tags:
          - Schemas
      SurveyTermination:
        description: >-
          End of survey action such as showing respondents a response summary. See
          `EOSMessageLibrary`, `EOSMessage`, `ResponseSummary`, and
          `EOSRedirectURL`.
        type: string
        nullable: true
        default: DefaultMessage
        enum:
          - DefaultMessage
          - DisplayMessage
          - DisplayResult
          - ResponseSummary
          - Redirect
        x-tags:
          - Schemas
      SurveyTitle:
        description: Title of the survey, displayed to users on the browser window/tab.
        type: string
        maxLength: 100
        x-tags:
          - Schemas
      ThankYouEmailMessage:
        description: >-
          ID of the library message to use for the thank you email. See
          `EmailThankYou` and `ThankYouEmailMessage`.
        type: string
        nullable: true
        pattern: ^(MS_[a-zA-Z0-9]{11,15})?$
        example: MS_abcdefg12345
        x-tags:
          - Schemas
      ThankYouEmailMessageLibrary:
        description: Library ID associated with the Message ID in `ThankYouEmailMessage`.
        type: string
        pattern: ^(UR|GR)_[a-zA-Z0-9]{11,15}$
        example: UR_SomeUserId001
        x-tags:
          - Schemas
      ValidateMessage:
        description: >-
          Whether or not to use a custom validation message. See
          `ValidationMessage` and `ValidationMessageLibrary`.
        type: string
        default: 'false'
        enum:
          - 'true'
          - 'false'
        x-tags:
          - Schemas
      ValidationMessage:
        description: >-
          ID of the library message to use for the custom validation message. See
          `ValidateMessage` and `ValidationMessageLibrary`.
        type: string
        nullable: true
        pattern: ^(MS_[a-zA-Z0-9]{11,15})?$
        example: MS_abcdefg12345
        x-tags:
          - Schemas
      ValidationMessageLibrary:
        description: Library ID associated with the Message ID in `ValidationMessage`.
        type: string
        pattern: ^(UR|GR)_[a-zA-Z0-9]{11,15}$
        example: UR_SomeUserId001
        x-tags:
          - Schemas
      Selection:
        type: object
        additionalProperties: true
        properties:
          Display:
            type: string
        x-tags:
          - Schemas
        description: Selection.
      KeyValuePairArrayItem:
        type: object
        additionalProperties: true
        x-tags:
          - Schemas
        properties:
          key:
            type: string
            maxLength: 100
            description: A unique identifier for a `value`.
          value:
            type: string
            maxLength: 100
            description: An attribute associated with a `key`.
        required:
          - key
          - value
      KeyValuePairArray:
        type: array
        maxItems: 100
        items:
          $ref: '#/components/schemas/KeyValuePairArrayItem'
        x-tags:
          - Schemas
    securitySchemes:
      api_token:
        type: apiKey
        description: This is a schema for x-api-token header authentication.
        name: X-API-TOKEN
        in: header
      public_oauth2:
        type: oauth2
        description: Public oauth2 schema.
        flows:
          clientCredentials:
            tokenUrl: https://{env}.qualtrics.com/api/oauth/token
            scopes:
              read:surveys: Access your surveys and survey definitions.
              write:surveys: >-
                Create or import new surveys on your behalf, or modify or delete
                your existing surveys.
          authorizationCode:
            tokenUrl: https://{env}.qualtrics.com/api/oauth/token
            scopes:
              read:surveys: Access your surveys and survey definitions.
              write:surveys: >-
                Create or import new surveys on your behalf, or modify or delete
                your existing surveys.
konfigCliVersion: 1.38.29
