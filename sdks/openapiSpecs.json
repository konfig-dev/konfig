[
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Products",
      "description": "",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "To prepare for an upcoming product launch, use the products API to create a set of products to represent your new offerings. Sales reps can then use these products when creating payment links, invoices, and more.",
      "x-hubspot-related-documentation": [
        {
          "name": "Products Guide",
          "url": "https://hubspot.dev/guides/api/crm/products"
        }
      ],
      "x-hubspot-introduction": "Use the products API to create and manage your product library, which is the collection of goods and services that your company offers. Products in your product library can be used as line items when creating deals, payment links, invoices, and quotes."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Basic"
      },
      {
        "name": "Public_Object"
      },
      {
        "name": "GDPR"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/objects/products/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of products by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/products/batch/read_read",
          "parameters": [
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/products/{productId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read an Object identified by `{productId}`. `{productId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/products/{productId}_getById",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Basic"
          ],
          "summary": "Archive",
          "description": "Move an Object identified by `{productId}` to the recycling bin.",
          "operationId": "delete-/crm/v3/objects/products/{productId}_archive",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{productId}`. `{productId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
          "operationId": "patch-/crm/v3/objects/products/{productId}_update",
          "parameters": [
            {
              "name": "productId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/products/merge": {
        "post": {
          "tags": [
            "Public_Object"
          ],
          "summary": "Merge two products with same type",
          "operationId": "post-/crm/v3/objects/products/merge_merge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMergeInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/products/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of products by ID",
          "operationId": "post-/crm/v3/objects/products/batch/archive_archive",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/products/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of products",
          "operationId": "post-/crm/v3/objects/products/batch/create_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/products/batch/update": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Update a batch of products",
          "operationId": "post-/crm/v3/objects/products/batch/update_update",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/products/gdpr-delete": {
        "post": {
          "tags": [
            "GDPR"
          ],
          "summary": "GDPR DELETE",
          "description": "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
          "operationId": "post-/crm/v3/objects/products/gdpr-delete_purge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGdprDeleteInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/products": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "List",
          "description": "Read a page of products. Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/products_getPage",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 10
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        },
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a product with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard products is provided.",
          "operationId": "post-/crm/v3/objects/products_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/products/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "post-/crm/v3/objects/products/search_doSearch",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": []
            }
          ],
          "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "BatchResponseSimplePublicObject": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "SimplePublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "BatchReadInputSimplePublicObjectId": {
          "required": [
            "inputs",
            "properties",
            "propertiesWithHistory"
          ],
          "type": "object",
          "properties": {
            "propertiesWithHistory": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "idProperty": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectId": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "name": "Implementation Service",
                "price": "6000.00",
                "hs_sku": "191902",
                "description": "Onboarding service for data product",
                "hs_cost_of_goods_sold": "600.00",
                "hs_recurring_billing_period": "P12M"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "createdate": "2019-10-30T03:30:17.883Z",
              "description": "Onboarding service for data product",
              "hs_cost_of_goods_sold": "600.00",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hs_recurring_billing_period": "12",
              "hs_sku": "191902",
              "name": "Implementation Service",
              "price": "6000.00"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "required": [
            "after",
            "filterGroups",
            "limit",
            "properties",
            "sorts"
          ],
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "BatchResponseSimplePublicObjectWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "PublicGdprDeleteInput": {
          "required": [
            "objectId"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectInput": {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "",
              "example": {
                "name": "Implementation Service",
                "price": "7000.00",
                "description": "A new product description",
                "hs_cost_of_goods_sold": "700.00"
              }
            }
          },
          "example": {
            "properties": {
              "name": "Implementation Service",
              "price": "6000.00",
              "hs_sku": "191902",
              "description": "Onboarding service for data product",
              "hs_cost_of_goods_sold": "600.00",
              "hs_recurring_billing_period": "12"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        },
        "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
              }
            }
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "PublicMergeInput": {
          "required": [
            "objectIdToMerge",
            "primaryObjectId"
          ],
          "type": "object",
          "properties": {
            "objectIdToMerge": {
              "type": "string"
            },
            "primaryObjectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "name": "Implementation Service",
                "price": "7000.00",
                "description": "A new product description",
                "hs_cost_of_goods_sold": "700.00"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "properties": {
              "createdate": "2019-10-30T03:30:17.883Z",
              "description": "Onboarding service for data product",
              "hs_cost_of_goods_sold": "600.00",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hs_recurring_billing_period": "12",
              "hs_sku": "191902",
              "name": "Implementation Service",
              "price": "6000.00"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInput": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInput"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectInputForCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectBatchInput": {
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "example": "my_unique_property_name"
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "name": "Implementation Service",
                "price": "6000.00",
                "hs_sku": "191902",
                "description": "Onboarding service for data product",
                "hs_cost_of_goods_sold": "600.00",
                "hs_recurring_billing_period": "P12M"
              }
            }
          },
          "example": {
            "id": "1",
            "properties": {
              "name": "Implementation Service",
              "price": "6000.00",
              "hs_sku": "191902",
              "description": "Onboarding service for data product",
              "hs_cost_of_goods_sold": "600.00",
              "hs_recurring_billing_period": "12"
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "",
              "example": {
                "name": "Implementation Service",
                "price": "6000.00",
                "hs_sku": "191902",
                "description": "Onboarding service for data product",
                "hs_cost_of_goods_sold": "600.00",
                "hs_recurring_billing_period": "P12M"
              }
            }
          },
          "example": {
            "properties": {
              "name": "Implementation Service",
              "price": "6000.00",
              "hs_sku": "191902",
              "description": "Onboarding service for data product",
              "hs_cost_of_goods_sold": "600.00",
              "hs_recurring_billing_period": "12"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "media_bridge.read": "Read media and media events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.custom.read": "View custom object records",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.deals.read": " ",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.deals.write": " ",
                "crm.objects.quotes.read": "Quotes",
                "crm.objects.line_items.write": "Line Items",
                "crm.objects.companies.read": " ",
                "crm.objects.companies.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.objects.contacts.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "CRM Pipelines",
      "description": "Pipelines represent distinct stages in a workflow, like closing a deal or servicing a support ticket. These endpoints provide access to read and modify pipelines in HubSpot. Pipelines support `deals` and `tickets` object types.\n\n## Pipeline ID validation\n\nWhen calling endpoints that take pipelineId as a parameter, that ID must correspond to an existing, un-archived pipeline. Otherwise the request will fail with a `404 Not Found` response.",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "STARTER"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "To streamline customer support processes, use this API to retrieve your existing ticket pipelines and add new stages based on your business needs. Support reps can then assign tickets to those pipeline stages to track progress on customer issues.",
      "x-hubspot-related-documentation": [
        {
          "name": "Pipelines Guide",
          "url": "https://developers.hubspot.com/beta-docs/guides/api/crm/pipelines"
        }
      ],
      "x-hubspot-introduction": "Use the pipelines API to create and manage deal and ticket pipelines. Pipelines enable you to track the status or progress of deals and tickets, such as closing deals and opening support tickets."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Pipeline Stage Audits"
      },
      {
        "name": "Pipelines"
      },
      {
        "name": "Pipeline Audits"
      },
      {
        "name": "Pipeline Stages"
      }
    ],
    "paths": {
      "/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}/audit": {
        "get": {
          "tags": [
            "Pipeline Stage Audits"
          ],
          "summary": "Return an audit of all changes to the pipeline stage",
          "description": "Return a reverse chronological list of all mutations that have occurred on the pipeline stage identified by `{stageId}`.",
          "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}/audit_getAudit",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "stageId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponsePublicAuditInfoNoPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/pipelines/{objectType}/{pipelineId}": {
        "get": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Return a pipeline by ID",
          "description": "Return a single pipeline object identified by its unique `{pipelineId}`.",
          "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}_getById",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Pipeline"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "put": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Replace a pipeline",
          "description": "Replace all the properties of an existing pipeline with the values provided. This will overwrite any existing pipeline stages. The updated pipeline will be returned in the response.",
          "operationId": "put-/crm/v3/pipelines/{objectType}/{pipelineId}_replace",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "validateReferencesBeforeDelete",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "validateDealStageUsagesBeforeDelete",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Pipeline"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Delete a pipeline",
          "description": "Delete the pipeline identified by `{pipelineId}`.",
          "operationId": "delete-/crm/v3/pipelines/{objectType}/{pipelineId}_archive",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "validateReferencesBeforeDelete",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "validateDealStageUsagesBeforeDelete",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Update a pipeline",
          "description": "Perform a partial update of the pipeline identified by `{pipelineId}`. The updated pipeline will be returned in the response.",
          "operationId": "patch-/crm/v3/pipelines/{objectType}/{pipelineId}_update",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "validateReferencesBeforeDelete",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "validateDealStageUsagesBeforeDelete",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelinePatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Pipeline"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/pipelines/{objectType}/{pipelineId}/audit": {
        "get": {
          "tags": [
            "Pipeline Audits"
          ],
          "summary": "Return an audit of all changes to the pipeline",
          "description": "Return a reverse chronological list of all mutations that have occurred on the pipeline identified by `{pipelineId}`.",
          "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/audit_getAudit",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponsePublicAuditInfoNoPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/pipelines/{objectType}/{pipelineId}/stages": {
        "get": {
          "tags": [
            "Pipeline Stages"
          ],
          "summary": "Return all stages of a pipeline",
          "description": "Return all the stages associated with the pipeline identified by `{pipelineId}`.",
          "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/stages_getAll",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponsePipelineStageNoPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Pipeline Stages"
          ],
          "summary": "Create a pipeline stage",
          "description": "Create a new stage associated with the pipeline identified by `{pipelineId}`. The entire stage object, including its unique ID, will be returned in the response.",
          "operationId": "post-/crm/v3/pipelines/{objectType}/{pipelineId}/stages_create",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineStageInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PipelineStage"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/pipelines/{objectType}": {
        "get": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Retrieve all pipelines",
          "description": "Return all pipelines for the object type specified by `{objectType}`.",
          "operationId": "get-/crm/v3/pipelines/{objectType}_getAll",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponsePipelineNoPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Pipelines"
          ],
          "summary": "Create a pipeline",
          "description": "Create a new pipeline with the provided property values. The entire pipeline object, including its unique ID, will be returned in the response.",
          "operationId": "post-/crm/v3/pipelines/{objectType}_create",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Pipeline"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}": {
        "get": {
          "tags": [
            "Pipeline Stages"
          ],
          "summary": "Return a pipeline stage by ID",
          "description": "Return the stage identified by `{stageId}` associated with the pipeline identified by `{pipelineId}`.",
          "operationId": "get-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_getById",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "stageId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PipelineStage"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "put": {
          "tags": [
            "Pipeline Stages"
          ],
          "summary": "Replace a pipeline stage",
          "description": "Replace all the properties of an existing pipeline stage with the values provided. The updated stage will be returned in the response.",
          "operationId": "put-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_replace",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "stageId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineStageInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PipelineStage"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Pipeline Stages"
          ],
          "summary": "Delete a pipeline stage",
          "description": "Delete the pipeline stage identified by `{stageId}` associated with the pipeline identified by `{pipelineId}`.",
          "operationId": "delete-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_archive",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "stageId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Pipeline Stages"
          ],
          "summary": "Update a pipeline stage",
          "description": "Perform a partial update of the pipeline stage identified by `{stageId}` associated with the pipeline identified by `{pipelineId}`. Any properties not included in this update will keep their existing values. The updated stage will be returned in the response.",
          "operationId": "patch-/crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}_update",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "pipelineId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "stageId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineStagePatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PipelineStage"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "PipelineStagePatchInput": {
          "required": [
            "metadata"
          ],
          "type": "object",
          "properties": {
            "archived": {
              "type": "boolean",
              "description": "Whether the pipeline is archived."
            },
            "metadata": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.",
              "example": {
                "ticketState": "CLOSED"
              }
            },
            "displayOrder": {
              "type": "integer",
              "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
              "format": "int32",
              "example": 1
            },
            "label": {
              "type": "string",
              "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline.",
              "example": "Done"
            }
          },
          "description": "An input used to update some properties on a pipeline definition.",
          "example": {
            "label": "Done",
            "displayOrder": 1,
            "metadata": {
              "ticketState": "CLOSED"
            }
          }
        },
        "PipelinePatchInput": {
          "type": "object",
          "properties": {
            "archived": {
              "type": "boolean",
              "description": "Whether the pipeline is archived. This property should only be provided when restoring an archived pipeline. If it's provided in any other call, the request will fail and a `400 Bad Request` will be returned."
            },
            "displayOrder": {
              "type": "integer",
              "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
              "format": "int32",
              "example": 0
            },
            "label": {
              "type": "string",
              "description": "A unique label used to organize pipelines in HubSpot's UI",
              "example": "My updated pipeline"
            }
          },
          "description": "An input used to update some properties on a pipeline definition.",
          "example": {
            "label": "My updated pipeline",
            "displayOrder": 0
          }
        },
        "PipelineStage": {
          "required": [
            "archived",
            "createdAt",
            "displayOrder",
            "id",
            "label",
            "metadata",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "description": "The date the pipeline stage was created. The stages on default pipelines will have createdAt = 0.",
              "format": "date-time"
            },
            "archivedAt": {
              "type": "string",
              "description": "The date the pipeline was archived. `archivedAt` will only be present if the pipeline is archived.",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "description": "Whether the pipeline is archived.",
              "example": false
            },
            "metadata": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.",
              "example": {
                "ticketState": "OPEN"
              }
            },
            "displayOrder": {
              "type": "integer",
              "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
              "format": "int32",
              "example": 0
            },
            "writePermissions": {
              "type": "string",
              "enum": [
                "CRM_PERMISSIONS_ENFORCEMENT",
                "READ_ONLY",
                "INTERNAL_ONLY"
              ]
            },
            "label": {
              "type": "string",
              "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline.",
              "example": "In Progress"
            },
            "id": {
              "type": "string",
              "description": "A unique identifier generated by HubSpot that can be used to retrieve and update the pipeline stage.",
              "example": "1234912"
            },
            "updatedAt": {
              "type": "string",
              "description": "The date the pipeline stage was last updated.",
              "format": "date-time"
            }
          },
          "description": "A pipeline stage definition.",
          "example": {
            "label": "In Progress",
            "displayOrder": 0,
            "metadata": {
              "ticketState": "OPEN"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false,
            "id": "1234912"
          }
        },
        "CollectionResponsePipelineStageNoPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PipelineStage"
              }
            }
          }
        },
        "PipelineStageInput": {
          "required": [
            "displayOrder",
            "label",
            "metadata"
          ],
          "type": "object",
          "properties": {
            "metadata": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A JSON object containing properties that are not present on all object pipelines.\n\nFor `deals` pipelines, the `probability` field is required (`{ \"probability\": 0.5 }`), and represents the likelihood a deal will close. Possible values are between 0.0 and 1.0 in increments of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket remains open or has been closed by a member of your Support team. Possible values are `OPEN` or `CLOSED`.",
              "example": {
                "ticketState": "CLOSED"
              }
            },
            "displayOrder": {
              "type": "integer",
              "description": "The order for displaying this pipeline stage. If two pipeline stages have a matching `displayOrder`, they will be sorted alphabetically by label.",
              "format": "int32",
              "example": 1
            },
            "label": {
              "type": "string",
              "description": "A label used to organize pipeline stages in HubSpot's UI. Each pipeline stage's label must be unique within that pipeline.",
              "example": "Done"
            }
          },
          "description": "An input used to create or replace a pipeline stage's definition.",
          "example": {
            "label": "Done",
            "displayOrder": 1,
            "metadata": {
              "ticketState": "CLOSED"
            }
          }
        },
        "PublicAuditInfo": {
          "required": [
            "action",
            "identifier",
            "portalId"
          ],
          "type": "object",
          "properties": {
            "identifier": {
              "type": "string"
            },
            "rawObject": {
              "type": "object",
              "properties": {}
            },
            "fromUserId": {
              "type": "integer",
              "format": "int32"
            },
            "portalId": {
              "type": "integer",
              "format": "int32"
            },
            "action": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponsePipelineNoPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Pipeline"
              }
            }
          }
        },
        "PipelineInput": {
          "required": [
            "displayOrder",
            "label",
            "stages"
          ],
          "type": "object",
          "properties": {
            "displayOrder": {
              "type": "integer",
              "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
              "format": "int32",
              "example": 0
            },
            "stages": {
              "type": "array",
              "description": "Pipeline stage inputs used to create the new or replacement pipeline.",
              "example": [
                {
                  "label": "In Progress",
                  "metadata": {
                    "ticketState": "OPEN"
                  },
                  "displayOrder": 0
                },
                {
                  "label": "Done",
                  "metadata": {
                    "ticketState": "CLOSED"
                  },
                  "displayOrder": 1
                }
              ],
              "items": {
                "$ref": "#/components/schemas/PipelineStageInput"
              }
            },
            "label": {
              "type": "string",
              "description": "A unique label used to organize pipelines in HubSpot's UI",
              "example": "My replaced pipeline"
            }
          },
          "description": "An input used to create or replace a pipeline's definition.",
          "example": {
            "label": "My replaced pipeline",
            "displayOrder": 0,
            "stages": [
              {
                "label": "In Progress",
                "displayOrder": 0,
                "metadata": {
                  "ticketState": "OPEN"
                }
              },
              {
                "label": "Done",
                "displayOrder": 1,
                "metadata": {
                  "ticketState": "CLOSED"
                }
              }
            ]
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "CollectionResponsePublicAuditInfoNoPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAuditInfo"
              }
            }
          }
        },
        "Pipeline": {
          "required": [
            "archived",
            "createdAt",
            "displayOrder",
            "id",
            "label",
            "stages",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "description": "The date the pipeline was created. The default pipelines will have createdAt = 0.",
              "format": "date-time"
            },
            "archivedAt": {
              "type": "string",
              "description": "The date the pipeline was archived. `archivedAt` will only be present if the pipeline is archived.",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "description": "Whether the pipeline is archived.",
              "example": false
            },
            "displayOrder": {
              "type": "integer",
              "description": "The order for displaying this pipeline. If two pipelines have a matching `displayOrder`, they will be sorted alphabetically by label.",
              "format": "int32",
              "example": 0
            },
            "stages": {
              "type": "array",
              "description": "The stages associated with the pipeline. They can be retrieved and updated via the pipeline stages endpoints.",
              "example": [
                {
                  "id": "1234912",
                  "label": "In Progress",
                  "archived": false,
                  "metadata": {
                    "ticketState": "OPEN"
                  },
                  "createdAt": "2019-10-30T03:30:17.883Z",
                  "updatedAt": "2019-12-07T16:50:06.678Z",
                  "displayOrder": 0
                },
                {
                  "id": "1234914",
                  "label": "Done",
                  "archived": false,
                  "metadata": {
                    "ticketState": "CLOSED"
                  },
                  "createdAt": "2019-10-30T03:30:17.883Z",
                  "updatedAt": "2019-12-07T16:50:06.678Z",
                  "displayOrder": 0
                }
              ],
              "items": {
                "$ref": "#/components/schemas/PipelineStage"
              }
            },
            "label": {
              "type": "string",
              "description": "A unique label used to organize pipelines in HubSpot's UI",
              "example": "My ticket pipeline"
            },
            "id": {
              "type": "string",
              "description": "A unique identifier generated by HubSpot that can be used to retrieve and update the pipeline.",
              "example": "812723471"
            },
            "updatedAt": {
              "type": "string",
              "description": "The date the pipeline was last updated.",
              "format": "date-time"
            }
          },
          "description": "A pipeline definition.",
          "example": {
            "label": "My ticket pipeline",
            "displayOrder": 0,
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false,
            "id": "812723471",
            "stages": [
              {
                "label": "In Progress",
                "displayOrder": 0,
                "metadata": {
                  "ticketState": "OPEN"
                },
                "createdAt": "2019-10-30T03:30:17.883Z",
                "updatedAt": "2019-12-07T16:50:06.678Z",
                "archived": false,
                "id": "1234912"
              },
              {
                "label": "Done",
                "displayOrder": 0,
                "metadata": {
                  "ticketState": "CLOSED"
                },
                "createdAt": "2019-10-30T03:30:17.883Z",
                "updatedAt": "2019-12-07T16:50:06.678Z",
                "archived": false,
                "id": "1234914"
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.custom.read": "View custom object records",
                "crm.objects.feedback_submissions.read": "View feedback survey submissions",
                "timeline": "Create timeline events",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records",
                "crm.objects.marketing_events.write": "Write marketing events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.marketing_events.read": "Read marketing events",
                "crm.schemas.custom.read": "View custom object definitions",
                "crm.pipelines.orders.read": "View details about your cart pipelines including pipeline stage information",
                "media_bridge.read": "Read media and media events",
                "crm.pipelines.orders.write": "Create, delete, or make to your order pipelines or their respective stages"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.contacts.read": " ",
                "crm.objects.subscriptions.read": "Read Commerce Subscriptions",
                "crm.schemas.deals.read": " ",
                "crm.objects.leads.read": "Read lead objects",
                "crm.objects.quotes.read": "Quotes",
                "crm.schemas.commercepayments.read": "Read the COMMERCE_PAYMENT properties.",
                "crm.schemas.companies.read": " ",
                "crm.schemas.quotes.read": "Quotes schemas",
                "crm.objects.orders.read": "Read Orders",
                "crm.schemas.contacts.read": " ",
                "crm.objects.companies.write": " ",
                "crm.schemas.orders.read": "Read order property settings",
                "crm.objects.carts.read": "Read carts",
                "crm.objects.deals.write": " ",
                "crm.objects.leads.write": "Modify lead objects",
                "crm.schemas.carts.read": "Read cart property settings",
                "crm.objects.contacts.write": " ",
                "crm.objects.users.read": "Read User CRM objects",
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.companies.read": " ",
                "crm.objects.invoices.read": "Read invoices objects",
                "crm.objects.line_items.write": "Line Items",
                "crm.schemas.subscriptions.read": "Read subscriptions schema",
                "crm.schemas.line_items.read": "Line Items schemas",
                "crm.objects.deals.read": " ",
                "crm.objects.owners.read": " ",
                "crm.schemas.invoices.read": "Read invoices schema",
                "crm.schemas.carts.write": "Write cart property settings",
                "crm.objects.carts.write": "Write cart",
                "crm.schemas.deals.write": " ",
                "crm.objects.users.write": "Write User CRM objects",
                "crm.objects.orders.write": "Write orders",
                "crm.schemas.contacts.write": " ",
                "crm.schemas.orders.write": "Write order property settings",
                "crm.schemas.companies.write": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "STARTER"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Companies",
      "description": "",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "When a new customer signs up on your website with their business email address, create a company record to represent the relationship between the customer and the company they work for. A sales rep can later use this company record for outreach to find other potential sales opportunities. ",
      "x-hubspot-related-documentation": [
        {
          "name": "Companies Guide",
          "url": "https://hubspot.dev/guides/api/crm/companies"
        }
      ],
      "x-hubspot-introduction": "Use the companies API to create and manage CRM records that represent the companies and organizations that interact with your business."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Basic"
      },
      {
        "name": "Public_Object"
      },
      {
        "name": "GDPR"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/objects/companies/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of companies by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/companies/batch/read_read",
          "parameters": [
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies/{companyId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read an Object identified by `{companyId}`. `{companyId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/companies/{companyId}_getById",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Basic"
          ],
          "summary": "Archive",
          "description": "Move an Object identified by `{companyId}` to the recycling bin.",
          "operationId": "delete-/crm/v3/objects/companies/{companyId}_archive",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{companyId}`. `{companyId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
          "operationId": "patch-/crm/v3/objects/companies/{companyId}_update",
          "parameters": [
            {
              "name": "companyId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies/merge": {
        "post": {
          "tags": [
            "Public_Object"
          ],
          "summary": "Merge two companies with same type",
          "operationId": "post-/crm/v3/objects/companies/merge_merge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMergeInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of companies by ID",
          "operationId": "post-/crm/v3/objects/companies/batch/archive_archive",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of companies",
          "operationId": "post-/crm/v3/objects/companies/batch/create_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies/batch/update": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Update a batch of companies",
          "operationId": "post-/crm/v3/objects/companies/batch/update_update",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies/gdpr-delete": {
        "post": {
          "tags": [
            "GDPR"
          ],
          "summary": "GDPR DELETE",
          "description": "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
          "operationId": "post-/crm/v3/objects/companies/gdpr-delete_purge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGdprDeleteInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "List",
          "description": "Read a page of companies. Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/companies_getPage",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 10
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a company with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard companies is provided.",
          "operationId": "post-/crm/v3/objects/companies_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/companies/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "post-/crm/v3/objects/companies/search_doSearch",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            }
          ],
          "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "BatchResponseSimplePublicObject": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "SimplePublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "BatchReadInputSimplePublicObjectId": {
          "required": [
            "inputs",
            "properties",
            "propertiesWithHistory"
          ],
          "type": "object",
          "properties": {
            "propertiesWithHistory": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "idProperty": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectId": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "city": "Cambridge",
              "createdate": "2019-10-30T03:30:17.883Z",
              "domain": "biglytics.net",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "industry": "Technology",
              "name": "Biglytics",
              "phone": "(877) 929-0687",
              "state": "Massachusetts"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "required": [
            "after",
            "filterGroups",
            "limit",
            "properties",
            "sorts"
          ],
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "BatchResponseSimplePublicObjectWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "PublicGdprDeleteInput": {
          "required": [
            "objectId"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectInput": {
          "required": [
            "properties"
          ],
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            }
          },
          "example": {
            "properties": {
              "city": "Cambridge",
              "name": "Biglytics",
              "phone": "(877) 929-0687",
              "state": "Massachusetts",
              "domain": "biglytics.net",
              "industry": "Technology"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        },
        "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
              }
            }
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "PublicMergeInput": {
          "required": [
            "objectIdToMerge",
            "primaryObjectId"
          ],
          "type": "object",
          "properties": {
            "objectIdToMerge": {
              "type": "string"
            },
            "primaryObjectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "city": "Cambridge",
                "name": "Biglytics",
                "phone": "(877) 929-0687",
                "state": "Massachusetts",
                "domain": "biglytics.net",
                "industry": "Technology"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "properties": {
              "city": "Cambridge",
              "createdate": "2019-10-30T03:30:17.883Z",
              "domain": "biglytics.net",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "industry": "Technology",
              "name": "Biglytics",
              "phone": "(877) 929-0687",
              "state": "Massachusetts"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInput": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInput"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectInputForCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectBatchInput": {
          "required": [
            "id",
            "properties"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "example": "my_unique_property_name"
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "city": "Cambridge",
                "name": "Biglytics",
                "phone": "(877) 929-0687",
                "state": "Massachusetts",
                "domain": "biglytics.net",
                "industry": "Technology"
              }
            }
          },
          "example": {
            "id": "1",
            "properties": {
              "city": "Cambridge",
              "name": "Biglytics",
              "phone": "(877) 929-0687",
              "state": "Massachusetts",
              "domain": "biglytics.net",
              "industry": "Technology"
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "required": [
            "associations",
            "properties"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "city": "Cambridge",
                "name": "Biglytics",
                "phone": "(877) 929-0687",
                "state": "Massachusetts",
                "domain": "biglytics.net",
                "industry": "Technology"
              }
            }
          },
          "example": {
            "properties": {
              "city": "Cambridge",
              "name": "Biglytics",
              "phone": "(877) 929-0687",
              "state": "Massachusetts",
              "domain": "biglytics.net",
              "industry": "Technology"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "media_bridge.read": "Read media and media events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.custom.read": "View custom object records",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.deals.read": " ",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.deals.write": " ",
                "crm.objects.quotes.read": "Quotes",
                "crm.objects.line_items.write": "Line Items",
                "crm.objects.companies.read": " ",
                "crm.objects.companies.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.objects.contacts.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "CRM Calling Extensions",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "sales": "STARTER",
        "service": "STARTER"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "Create an integration for a third-party calling service that your company uses, rather than using HubSpot's native calling tool.",
      "x-hubspot-related-documentation": [
        {
          "name": "Call SDK Guide",
          "url": "https://developers.hubspot.com/beta-docs/guides/api/crm/extensions/calling-sdk"
        }
      ],
      "x-hubspot-introduction": "Use the calling extensions SDK to provide HubSpot users with custom calling options on CRM records."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Settings"
      },
      {
        "name": "Recording settings"
      }
    ],
    "paths": {
      "/crm/v3/extensions/calling/{appId}/settings": {
        "get": {
          "tags": [
            "Settings"
          ],
          "summary": "Get calling settings",
          "description": "Returns the calling extension settings configured for your app.",
          "operationId": "get-/crm/v3/extensions/calling/{appId}/settings_getById",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SettingsResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "post": {
          "tags": [
            "Settings"
          ],
          "summary": "Configure a calling extension",
          "description": "Used to set the menu label, target iframe URL, and dimensions for your calling extension.",
          "operationId": "post-/crm/v3/extensions/calling/{appId}/settings_create",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SettingsResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Settings"
          ],
          "summary": "Delete calling settings",
          "description": "Deletes this calling extension. This will remove your service as an option for all connected accounts.",
          "operationId": "delete-/crm/v3/extensions/calling/{appId}/settings_archive",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "patch": {
          "tags": [
            "Settings"
          ],
          "summary": "Update settings",
          "description": "Updates existing calling extension settings.",
          "operationId": "patch-/crm/v3/extensions/calling/{appId}/settings_update",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsPatchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SettingsResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        }
      },
      "/crm/v3/extensions/calling/{appId}/settings/recording": {
        "get": {
          "tags": [
            "Recording settings"
          ],
          "summary": "Read calling app recording settings",
          "description": "Retrieve the recording endpoint configured for a calling extension app.",
          "operationId": "get-/crm/v3/extensions/calling/{appId}/settings/recording_getUrlFormat",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RecordingSettingsResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "post": {
          "tags": [
            "Recording settings"
          ],
          "summary": "Register calling app for recording",
          "description": "Configure a calling extension app with an external URL that HubSpot will use to retrieve call recordings.",
          "operationId": "post-/crm/v3/extensions/calling/{appId}/settings/recording_registerUrlFormat",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingSettingsRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RecordingSettingsResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "patch": {
          "tags": [
            "Recording settings"
          ],
          "summary": "Update calling app's recording settings",
          "description": "Update the URL that HubSpot will use to retrieve call recordings for a calling extension app.",
          "operationId": "patch-/crm/v3/extensions/calling/{appId}/settings/recording_updateUrlFormat",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordingSettingsPatchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RecordingSettingsResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        }
      },
      "/crm/v3/extensions/calling/recordings/ready": {
        "post": {
          "tags": [
            "Recording settings"
          ],
          "summary": "Mark recording as ready for transcription",
          "description": "Mark a call recording as ready for transcription, specifying the call by its ID (`engagementid`).",
          "operationId": "post-/crm/v3/extensions/calling/recordings/ready",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkRecordingAsReadyRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "RecordingSettingsResponse": {
          "required": [
            "urlToRetrieveAuthedRecording"
          ],
          "type": "object",
          "properties": {
            "urlToRetrieveAuthedRecording": {
              "type": "string"
            }
          }
        },
        "SettingsResponse": {
          "required": [
            "createdAt",
            "height",
            "isReady",
            "name",
            "supportsCustomObjects",
            "supportsInboundCalling",
            "updatedAt",
            "url",
            "width"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "description": "When this calling extension was created.",
              "format": "date-time"
            },
            "supportsCustomObjects": {
              "type": "boolean",
              "description": "When true, you are indicating that your service is compatible with engagement v2 service and can be used with custom objects."
            },
            "isReady": {
              "type": "boolean",
              "description": "When true, your service will appear as an option under the *Call* action in contact records of connected accounts."
            },
            "name": {
              "type": "string",
              "description": "The name of your calling service to display to users."
            },
            "width": {
              "type": "integer",
              "description": "The target width of the iframe that will contain your phone/calling UI.",
              "format": "int32"
            },
            "supportsInboundCalling": {
              "type": "boolean"
            },
            "url": {
              "type": "string",
              "description": "The URL to your phone/calling UI, built with the [Calling SDK](#)."
            },
            "height": {
              "type": "integer",
              "description": "The target height of the iframe that will contain your phone/calling UI.",
              "format": "int32"
            },
            "updatedAt": {
              "type": "string",
              "description": "The last time the settings for this calling extension were modified.",
              "format": "date-time"
            }
          }
        },
        "RecordingSettingsPatchRequest": {
          "type": "object",
          "properties": {
            "urlToRetrieveAuthedRecording": {
              "type": "string"
            }
          }
        },
        "RecordingSettingsRequest": {
          "required": [
            "urlToRetrieveAuthedRecording"
          ],
          "type": "object",
          "properties": {
            "urlToRetrieveAuthedRecording": {
              "type": "string"
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "MarkRecordingAsReadyRequest": {
          "required": [
            "engagementId"
          ],
          "type": "object",
          "properties": {
            "engagementId": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "SettingsPatchRequest": {
          "type": "object",
          "properties": {
            "supportsCustomObjects": {
              "type": "boolean",
              "description": "When true, you are indicating that your service is compatible with engagement v2 service and can be used with custom objects."
            },
            "isReady": {
              "type": "boolean",
              "description": "When true, your service will appear as an option under the *Call* action in contact records of connected accounts."
            },
            "name": {
              "type": "string",
              "description": "The name of your calling service to display to users."
            },
            "width": {
              "type": "integer",
              "description": "The target width of the iframe that will contain your phone/calling UI.",
              "format": "int32"
            },
            "supportsInboundCalling": {
              "type": "boolean"
            },
            "url": {
              "type": "string",
              "description": "The URL to your phone/calling UI, built with the [Calling SDK](#)."
            },
            "height": {
              "type": "integer",
              "description": "The target height of the iframe that will contain your phone/calling UI.",
              "format": "int32"
            }
          }
        },
        "SettingsRequest": {
          "required": [
            "name",
            "supportsInboundCalling",
            "url"
          ],
          "type": "object",
          "properties": {
            "supportsCustomObjects": {
              "type": "boolean",
              "description": "When true, you are indicating that your service is compatible with engagement v2 service and can be used with custom objects.",
              "example": true
            },
            "isReady": {
              "type": "boolean",
              "description": "When true, your service will appear as an option under the *Call* action in contact records of connected accounts.",
              "example": true
            },
            "name": {
              "type": "string",
              "description": "The name of your calling service to display to users.",
              "example": "HubPhone"
            },
            "width": {
              "type": "integer",
              "description": "The target width of the iframe that will contain your phone/calling UI.",
              "format": "int32",
              "example": 200
            },
            "supportsInboundCalling": {
              "type": "boolean"
            },
            "url": {
              "type": "string",
              "description": "The URL to your phone/calling UI, built with the [Calling SDK](#).",
              "example": "https://www.example.com/hubspot/iframe"
            },
            "height": {
              "type": "integer",
              "description": "The target height of the iframe that will contain your phone/calling UI.",
              "format": "int32",
              "example": 350
            }
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "developer_hapikey": {
          "type": "apiKey",
          "name": "hapikey",
          "in": "query"
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.schemas.contacts.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.objects.contacts.read": " ",
                "crm.schemas.contacts.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "sales": "STARTER",
      "service": "STARTER"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Quotes",
      "description": "",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "You need to create a contract proposal for a customer who is interested in signing up for one of your annual SEO auditing service packages.",
      "x-hubspot-related-documentation": [
        {
          "name": "Quotes guide",
          "url": "https://hubspot.dev/guides/api/crm/quotes"
        }
      ],
      "x-hubspot-introduction": "Use the quotes API to create and manage sales quotes for sharing pricing information with potential buyers."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Basic"
      },
      {
        "name": "Public_Object"
      },
      {
        "name": "GDPR"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/objects/quotes/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of quotes by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/quotes/batch/read_read",
          "parameters": [
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/quotes/{quoteId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read an Object identified by `{quoteId}`. `{quoteId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/quotes/{quoteId}_getById",
          "parameters": [
            {
              "name": "quoteId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Basic"
          ],
          "summary": "Archive",
          "description": "Move an Object identified by `{quoteId}` to the recycling bin.",
          "operationId": "delete-/crm/v3/objects/quotes/{quoteId}_archive",
          "parameters": [
            {
              "name": "quoteId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{quoteId}`. `{quoteId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
          "operationId": "patch-/crm/v3/objects/quotes/{quoteId}_update",
          "parameters": [
            {
              "name": "quoteId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/quotes/merge": {
        "post": {
          "tags": [
            "Public_Object"
          ],
          "summary": "Merge two quotes with same type",
          "operationId": "post-/crm/v3/objects/quotes/merge_merge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMergeInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/quotes/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of quotes by ID",
          "operationId": "post-/crm/v3/objects/quotes/batch/archive_archive",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/quotes/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of quotes",
          "operationId": "post-/crm/v3/objects/quotes/batch/create_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/quotes/batch/update": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Update a batch of quotes",
          "operationId": "post-/crm/v3/objects/quotes/batch/update_update",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/quotes/gdpr-delete": {
        "post": {
          "tags": [
            "GDPR"
          ],
          "summary": "GDPR DELETE",
          "description": "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
          "operationId": "post-/crm/v3/objects/quotes/gdpr-delete_purge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGdprDeleteInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/quotes": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "List",
          "description": "Read a page of quotes. Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/quotes_getPage",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 10
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a quote with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard quotes is provided.",
          "operationId": "post-/crm/v3/objects/quotes_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/quotes/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "post-/crm/v3/objects/quotes/search_doSearch",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ],
          "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "BatchResponseSimplePublicObject": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "SimplePublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "BatchReadInputSimplePublicObjectId": {
          "required": [
            "inputs",
            "properties",
            "propertiesWithHistory"
          ],
          "type": "object",
          "properties": {
            "propertiesWithHistory": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "idProperty": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectId": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "hs_createdate": "2019-10-30T03:30:17.883Z",
              "hs_expiration_date": "2020-09-06T02:43:14.491Z",
              "hs_quote_amount": "3000.00",
              "hs_quote_number": "20200916-092813983",
              "hs_status": "PENDING_APPROVAL",
              "hs_terms": "discount provided, two year term with customer",
              "hs_title": "Services Proposal",
              "hubspot_owner_id": "910901"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "required": [
            "after",
            "filterGroups",
            "limit",
            "properties",
            "sorts"
          ],
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "BatchResponseSimplePublicObjectWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "PublicGdprDeleteInput": {
          "required": [
            "objectId"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectInput": {
          "required": [
            "properties"
          ],
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            }
          },
          "example": {
            "properties": {
              "hs_title": "Pawnee Paper Deal",
              "hs_status": "PENDING_APPROVAL"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        },
        "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
              }
            }
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "PublicMergeInput": {
          "required": [
            "objectIdToMerge",
            "primaryObjectId"
          ],
          "type": "object",
          "properties": {
            "objectIdToMerge": {
              "type": "string"
            },
            "primaryObjectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "properties": {
              "hs_createdate": "2019-10-30T03:30:17.883Z",
              "hs_expiration_date": "2020-09-06T02:43:14.491Z",
              "hs_quote_amount": "3000.00",
              "hs_quote_number": "20200916-092813983",
              "hs_status": "PENDING_APPROVAL",
              "hs_terms": "discount provided, two year term with customer",
              "hs_title": "Services Proposal",
              "hubspot_owner_id": "910901"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInput": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInput"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectInputForCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectBatchInput": {
          "required": [
            "id",
            "properties"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "example": "my_unique_property_name"
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "example": {
            "id": "1",
            "properties": {
              "hs_title": "Pawnee Paper Deal",
              "hs_status": "PENDING_APPROVAL"
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "required": [
            "associations",
            "properties"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "example": {
            "properties": {
              "hs_title": "Pawnee Paper Deal",
              "hs_status": "PENDING_APPROVAL"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "media_bridge.read": "Read media and media events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.custom.read": "View custom object records",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.deals.read": " ",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.deals.write": " ",
                "crm.objects.quotes.read": "Quotes",
                "crm.objects.line_items.write": "Line Items",
                "crm.objects.companies.read": " ",
                "crm.objects.companies.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.objects.contacts.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Deals",
      "description": "",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "When a sales rep is negotiating a potential purchase with a prospective customer, create a deal record to track the negotiation process. When the customer later makes their purchase, you can update the deal to a closed stage.",
      "x-hubspot-related-documentation": [
        {
          "name": "Deals Guide",
          "url": "https://hubspot.dev/guides/api/crm/deals"
        }
      ],
      "x-hubspot-introduction": "Use the deals API to create and manage CRM records that represent transactions with contacts and/or companies. Deals progress through pipeline stages to reflect whether the transaction has been completed, is active, or has otherwise been lost."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Basic"
      },
      {
        "name": "Public_Object"
      },
      {
        "name": "GDPR"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/objects/deals/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of deals by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/deals/batch/read_read",
          "parameters": [
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals/{dealId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read an Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/deals/{dealId}_getById",
          "parameters": [
            {
              "name": "dealId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Basic"
          ],
          "summary": "Archive",
          "description": "Move an Object identified by `{dealId}` to the recycling bin.",
          "operationId": "delete-/crm/v3/objects/deals/{dealId}_archive",
          "parameters": [
            {
              "name": "dealId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
          "operationId": "patch-/crm/v3/objects/deals/{dealId}_update",
          "parameters": [
            {
              "name": "dealId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals/merge": {
        "post": {
          "tags": [
            "Public_Object"
          ],
          "summary": "Merge two deals with same type",
          "operationId": "post-/crm/v3/objects/deals/merge_merge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMergeInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of deals by ID",
          "operationId": "post-/crm/v3/objects/deals/batch/archive_archive",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of deals",
          "operationId": "post-/crm/v3/objects/deals/batch/create_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals/batch/update": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Update a batch of deals",
          "operationId": "post-/crm/v3/objects/deals/batch/update_update",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals/gdpr-delete": {
        "post": {
          "tags": [
            "GDPR"
          ],
          "summary": "GDPR DELETE",
          "description": "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
          "operationId": "post-/crm/v3/objects/deals/gdpr-delete_purge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGdprDeleteInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "List",
          "description": "Read a page of deals. Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/deals_getPage",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 10
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a deal with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard deals is provided.",
          "operationId": "post-/crm/v3/objects/deals_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/deals/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "post-/crm/v3/objects/deals/search_doSearch",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            }
          ],
          "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "BatchResponseSimplePublicObject": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "SimplePublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "BatchReadInputSimplePublicObjectId": {
          "required": [
            "inputs",
            "properties",
            "propertiesWithHistory"
          ],
          "type": "object",
          "properties": {
            "propertiesWithHistory": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "idProperty": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectId": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "amount": "1500.00",
              "closedate": "2019-12-07T16:50:06.678Z",
              "createdate": "2019-10-30T03:30:17.883Z",
              "dealname": "Custom data integrations",
              "dealstage": "presentationscheduled",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hubspot_owner_id": "910901",
              "pipeline": "default"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "required": [
            "after",
            "filterGroups",
            "limit",
            "properties",
            "sorts"
          ],
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "BatchResponseSimplePublicObjectWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "PublicGdprDeleteInput": {
          "required": [
            "objectId"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectInput": {
          "required": [
            "properties"
          ],
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            }
          },
          "example": {
            "properties": {
              "amount": "1500.00",
              "dealname": "Custom data integrations",
              "pipeline": "default",
              "closedate": "2019-12-07T16:50:06.678Z",
              "dealstage": "presentationscheduled",
              "hubspot_owner_id": "910901"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        },
        "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
              }
            }
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "PublicMergeInput": {
          "required": [
            "objectIdToMerge",
            "primaryObjectId"
          ],
          "type": "object",
          "properties": {
            "objectIdToMerge": {
              "type": "string"
            },
            "primaryObjectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "amount": "1500.00",
                "dealname": "Custom data integrations",
                "pipeline": "default",
                "closedate": "2019-12-07T16:50:06.678Z",
                "dealstage": "presentationscheduled",
                "hubspot_owner_id": "910901"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "properties": {
              "amount": "1500.00",
              "closedate": "2019-12-07T16:50:06.678Z",
              "createdate": "2019-10-30T03:30:17.883Z",
              "dealname": "Custom data integrations",
              "dealstage": "presentationscheduled",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hubspot_owner_id": "910901",
              "pipeline": "default"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInput": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInput"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectInputForCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectBatchInput": {
          "required": [
            "id",
            "properties"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "example": "my_unique_property_name"
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "amount": "1500.00",
                "dealname": "Custom data integrations",
                "pipeline": "default",
                "closedate": "2019-12-07T16:50:06.678Z",
                "dealstage": "presentationscheduled",
                "hubspot_owner_id": "910901"
              }
            }
          },
          "example": {
            "id": "1",
            "properties": {
              "amount": "1500.00",
              "dealname": "Custom data integrations",
              "pipeline": "default",
              "closedate": "2019-12-07T16:50:06.678Z",
              "dealstage": "presentationscheduled",
              "hubspot_owner_id": "910901"
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "required": [
            "associations",
            "properties"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "amount": "1500.00",
                "dealname": "Custom data integrations",
                "pipeline": "default",
                "closedate": "2019-12-07T16:50:06.678Z",
                "dealstage": "presentationscheduled",
                "hubspot_owner_id": "910901"
              }
            }
          },
          "example": {
            "properties": {
              "amount": "1500.00",
              "dealname": "Custom data integrations",
              "pipeline": "default",
              "closedate": "2019-12-07T16:50:06.678Z",
              "dealstage": "presentationscheduled",
              "hubspot_owner_id": "910901"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "media_bridge.read": "Read media and media events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.custom.read": "View custom object records",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.deals.read": " ",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.deals.write": " ",
                "crm.objects.quotes.read": "Quotes",
                "crm.objects.line_items.write": "Line Items",
                "crm.objects.companies.read": " ",
                "crm.objects.companies.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.objects.contacts.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "CRM Imports",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "After a successful in-person webinar, use this API to import a set of contacts based on who signed up during the event.",
      "x-hubspot-related-documentation": [
        {
          "name": "Import CRM Guide",
          "url": "https://developers.hubspot.com/beta-docs/guides/api/crm/imports"
        }
      ],
      "x-hubspot-introduction": "Use the imports API to import CRM records and activities, such as contacts, companies, and notes, into your HubSpot account."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Core"
      },
      {
        "name": "Public_Imports"
      }
    ],
    "paths": {
      "/crm/v3/imports/{importId}/cancel": {
        "post": {
          "tags": [
            "Core"
          ],
          "summary": "Cancel an active import",
          "description": "This allows a developer to cancel an active import.",
          "operationId": "post-/crm/v3/imports/{importId}/cancel_cancel",
          "parameters": [
            {
              "name": "importId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ActionResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "crm.import"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.import"
              ]
            }
          ]
        }
      },
      "/crm/v3/imports/{importId}": {
        "get": {
          "tags": [
            "Core"
          ],
          "summary": "Get the information on any import",
          "description": "A complete summary of an import record, including any updates.",
          "operationId": "get-/crm/v3/imports/{importId}_getById",
          "parameters": [
            {
              "name": "importId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PublicImportResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "crm.import"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.import"
              ]
            }
          ]
        }
      },
      "/crm/v3/imports/{importId}/errors": {
        "get": {
          "tags": [
            "Public_Imports"
          ],
          "operationId": "get-/crm/v3/imports/{importId}/errors_getErrors",
          "parameters": [
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "importId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponsePublicImportErrorForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "crm.import"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.import"
              ]
            }
          ]
        }
      },
      "/crm/v3/imports/": {
        "get": {
          "tags": [
            "Core"
          ],
          "summary": "Get active imports",
          "description": "Returns a paged list of active imports for this account.",
          "operationId": "get-/crm/v3/imports/_getPage",
          "parameters": [
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponsePublicImportResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "crm.import"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.import"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Core"
          ],
          "summary": "Start a new import",
          "description": "Begins importing data from the specified file resources. This uploads the corresponding file and uses the import request object to convert rows in the files to objects.",
          "operationId": "post-/crm/v3/imports/_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "string",
                      "description": "A list of files containing the data to import",
                      "format": "binary"
                    },
                    "importRequest": {
                      "type": "string",
                      "description": "JSON formatted metadata about the import. This includes a name for the import and the column mappings for each file. See the overview tab for more on the required format."
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PublicImportResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "crm.import"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.import"
              ]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "CollectionResponsePublicImportResponse": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicImportResponse"
              }
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectListRecord": {
          "required": [
            "listId",
            "objectType"
          ],
          "type": "object",
          "properties": {
            "listId": {
              "type": "string",
              "description": "The ID of the list containing the imported objects.",
              "example": "3"
            },
            "objectType": {
              "type": "string",
              "description": "The type of object contained in the list.",
              "example": "contacts"
            }
          },
          "description": "A summary detailing which list contains the imported objects.",
          "example": {
            "objectType": "contacts",
            "listId": "3"
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "ImportRowCore": {
          "required": [
            "fileId",
            "lineNumber",
            "rowData"
          ],
          "type": "object",
          "properties": {
            "rowData": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "lineNumber": {
              "type": "integer",
              "format": "int32"
            },
            "pageName": {
              "type": "string"
            },
            "fileId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "ImportTemplate": {
          "required": [
            "templateId",
            "templateType"
          ],
          "type": "object",
          "properties": {
            "templateType": {
              "type": "string",
              "enum": [
                "admin_defined",
                "previous_import",
                "user_file"
              ]
            },
            "templateId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "ActionResponse": {
          "required": [
            "completedAt",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "PublicImportError": {
          "required": [
            "createdAt",
            "errorType",
            "id",
            "sourceData"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "integer",
              "format": "int32"
            },
            "extraContext": {
              "type": "string"
            },
            "objectTypeId": {
              "type": "string"
            },
            "errorType": {
              "type": "string",
              "enum": [
                "INCORRECT_NUMBER_OF_COLUMNS",
                "INVALID_OBJECT_ID",
                "INVALID_ASSOCIATION_IDENTIFIER",
                "NO_OBJECT_ID_FROM_ASSOCIATION_IDENTIFIER",
                "MULTIPLE_COMPANIES_WITH_THIS_DOMAIN",
                "PROPERTY_DEFINITION_NOT_FOUND",
                "PROPERTY_VALUE_NOT_FOUND",
                "COULD_NOT_FIND_OWNER",
                "MULTIPLE_OWNERS_FOUND",
                "COULD_NOT_FIND_BUSINESS_UNIT",
                "COULD_NOT_PARSE_NUMBER",
                "COULD_NOT_PARSE_DATE",
                "COULD_NOT_PARSE_TERM",
                "OUTSIDE_VALID_TIME_RANGE",
                "OUTSIDE_VALID_TERM_RANGE",
                "COULD_NOT_PARSE_ROW",
                "INVALID_ENUMERATION_OPTION",
                "AMBIGUOUS_ENUMERATION_OPTION",
                "FAILED_VALIDATION",
                "FAILED_TO_CREATE_ASSOCIATION",
                "FILE_NOT_FOUND",
                "INVALID_COLUMN_CONFIGURATION",
                "INVALID_FILE_TYPE",
                "INVALID_SPREADSHEET",
                "INVALID_SHEET_COUNT",
                "FAILED_TO_PROCESS_OBJECT_WITH_EMPTY_PROPERTY_VALUES",
                "UNKNOWN_BAD_REQUEST",
                "GDPR_BLACKLISTED_EMAIL",
                "DUPLICATE_ASSOCIATION_ID",
                "LIMIT_EXCEEDED",
                "PORTAL_WIDE_CUSTOM_OBJECT_LIMIT_EXCEEDED",
                "INVALID_ALTERNATE_ID",
                "INVALID_EMAIL",
                "INVALID_DOMAIN",
                "DUPLICATE_ROW_CONTENT",
                "INVALID_NUMBER_SIZE",
                "UNKNOWN_ERROR",
                "FAILED_TO_OPT_OUT_CONTACT",
                "INVALID_REQUIRED_PROPERTY",
                "MISSING_REQUIRED_PROPERTY",
                "DUPLICATE_ALTERNATE_ID",
                "DUPLICATE_OBJECT_ID",
                "DUPLICATE_UNIQUE_PROPERTY_VALUE",
                "BLANK_VALUE_PROVIDED",
                "UNKNOWN_ASSOCIATION_RECORD_ID",
                "INVALID_RECORD_ID",
                "DUPLICATE_RECORD_ID",
                "INVALID_CUSTOM_PROPERTY_VALIDATION",
                "CREATE_ONLY_IMPORT",
                "UPDATE_ONLY_IMPORT",
                "COLUMN_TOO_LARGE",
                "ROW_DATA_TOO_LARGE",
                "INVALID_EVENT_TIMESTAMP",
                "INVALID_EVENT",
                "DUPLICATE_EVENT",
                "MISSING_EVENT_DEFINITION"
              ]
            },
            "knownColumnNumber": {
              "type": "integer",
              "format": "int32"
            },
            "id": {
              "type": "string"
            },
            "sourceData": {
              "$ref": "#/components/schemas/ImportRowCore"
            },
            "objectType": {
              "type": "string",
              "enum": [
                "CONTACT",
                "COMPANY",
                "DEAL",
                "ENGAGEMENT",
                "TICKET",
                "OWNER",
                "PRODUCT",
                "LINE_ITEM",
                "BET_DELIVERABLE_SERVICE",
                "CONTENT",
                "CONVERSATION",
                "BET_ALERT",
                "PORTAL",
                "QUOTE",
                "FORM_SUBMISSION_INBOUNDDB",
                "QUOTA",
                "UNSUBSCRIBE",
                "COMMUNICATION",
                "FEEDBACK_SUBMISSION",
                "ATTRIBUTION",
                "SALESFORCE_SYNC_ERROR",
                "RESTORABLE_CRM_OBJECT",
                "HUB",
                "LANDING_PAGE",
                "PRODUCT_OR_FOLDER",
                "TASK",
                "FORM",
                "MARKETING_EMAIL",
                "AD_ACCOUNT",
                "AD_CAMPAIGN",
                "AD_GROUP",
                "AD",
                "KEYWORD",
                "CAMPAIGN",
                "SOCIAL_CHANNEL",
                "SOCIAL_POST",
                "SITE_PAGE",
                "BLOG_POST",
                "IMPORT",
                "EXPORT",
                "CTA",
                "TASK_TEMPLATE",
                "AUTOMATION_PLATFORM_FLOW",
                "OBJECT_LIST",
                "NOTE",
                "MEETING_EVENT",
                "CALL",
                "EMAIL",
                "PUBLISHING_TASK",
                "CONVERSATION_SESSION",
                "CONTACT_CREATE_ATTRIBUTION",
                "INVOICE",
                "MARKETING_EVENT",
                "CONVERSATION_INBOX",
                "CHATFLOW",
                "MEDIA_BRIDGE",
                "SEQUENCE",
                "SEQUENCE_STEP",
                "FORECAST",
                "SNIPPET",
                "TEMPLATE",
                "DEAL_CREATE_ATTRIBUTION",
                "QUOTE_TEMPLATE",
                "QUOTE_MODULE",
                "QUOTE_MODULE_FIELD",
                "QUOTE_FIELD",
                "SEQUENCE_ENROLLMENT",
                "SUBSCRIPTION",
                "ACCEPTANCE_TEST",
                "SOCIAL_BROADCAST",
                "DEAL_SPLIT",
                "DEAL_REGISTRATION",
                "GOAL_TARGET",
                "GOAL_TARGET_GROUP",
                "PORTAL_OBJECT_SYNC_MESSAGE",
                "FILE_MANAGER_FILE",
                "FILE_MANAGER_FOLDER",
                "SEQUENCE_STEP_ENROLLMENT",
                "APPROVAL",
                "APPROVAL_STEP",
                "CTA_VARIANT",
                "SALES_DOCUMENT",
                "DISCOUNT",
                "FEE",
                "TAX",
                "MARKETING_CALENDAR",
                "PERMISSIONS_TESTING",
                "PRIVACY_SCANNER_COOKIE",
                "DATA_SYNC_STATE",
                "WEB_INTERACTIVE",
                "PLAYBOOK",
                "FOLDER",
                "PLAYBOOK_QUESTION",
                "PLAYBOOK_SUBMISSION",
                "PLAYBOOK_SUBMISSION_ANSWER",
                "COMMERCE_PAYMENT",
                "GSC_PROPERTY",
                "SOX_PROTECTED_DUMMY_TYPE",
                "BLOG_LISTING_PAGE",
                "QUARANTINED_SUBMISSION",
                "PAYMENT_SCHEDULE",
                "PAYMENT_SCHEDULE_INSTALLMENT",
                "MARKETING_CAMPAIGN_UTM",
                "DISCOUNT_TEMPLATE",
                "DISCOUNT_CODE",
                "FEEDBACK_SURVEY",
                "CMS_URL",
                "SALES_TASK",
                "SALES_WORKLOAD",
                "USER",
                "POSTAL_MAIL",
                "SCHEMAS_BACKEND_TEST",
                "PAYMENT_LINK",
                "SUBMISSION_TAG",
                "CAMPAIGN_STEP",
                "SCHEDULING_PAGE",
                "SOX_PROTECTED_TEST_TYPE",
                "ORDER",
                "MARKETING_SMS",
                "PARTNER_ACCOUNT",
                "CAMPAIGN_TEMPLATE",
                "CAMPAIGN_TEMPLATE_STEP",
                "PLAYLIST",
                "CLIP",
                "CAMPAIGN_BUDGET_ITEM",
                "CAMPAIGN_SPEND_ITEM",
                "MIC",
                "CONTENT_AUDIT",
                "CONTENT_AUDIT_PAGE",
                "PLAYLIST_FOLDER",
                "LEAD",
                "ABANDONED_CART",
                "EXTERNAL_WEB_URL",
                "VIEW",
                "VIEW_BLOCK",
                "ROSTER",
                "CART",
                "AUTOMATION_PLATFORM_FLOW_ACTION",
                "SOCIAL_PROFILE",
                "PARTNER_CLIENT",
                "ROSTER_MEMBER",
                "MARKETING_EVENT_ATTENDANCE",
                "ALL_PAGES",
                "AI_FORECAST",
                "CRM_PIPELINES_DUMMY_TYPE",
                "UNKNOWN"
              ]
            },
            "invalidValue": {
              "type": "string"
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "PublicImportMetadata": {
          "required": [
            "counters",
            "fileIds",
            "objectLists"
          ],
          "type": "object",
          "properties": {
            "counters": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              },
              "description": "Summarized outcomes of each row a developer attempted to import into HubSpot.",
              "example": {
                "TOTAL_ROWS": 2,
                "CREATED_OBJECTS": 1,
                "UPDATED_OBJECTS": 1,
                "UNIQUE_OBJECTS_WRITTEN": 2,
                "PROPERTY_VALUES_EMITTED": 2
              }
            },
            "fileIds": {
              "type": "array",
              "description": "The IDs of files uploaded in the File Manager API.",
              "example": [
                "3579849"
              ],
              "items": {
                "type": "string"
              }
            },
            "objectLists": {
              "type": "array",
              "description": "The lists containing the imported objects.",
              "example": [
                {
                  "listId": "3",
                  "objectType": "contacts"
                }
              ],
              "items": {
                "$ref": "#/components/schemas/PublicObjectListRecord"
              }
            }
          },
          "description": "An object detailing a summary of the import record outputs",
          "example": {
            "objectLists": [
              {
                "objectType": "contacts",
                "listId": "3"
              }
            ],
            "counters": {
              "TOTAL_ROWS": 2,
              "PROPERTY_VALUES_EMITTED": 2,
              "CREATED_OBJECTS": 1,
              "UPDATED_OBJECTS": 1,
              "UNIQUE_OBJECTS_WRITTEN": 2
            },
            "fileIds": [
              "3579849"
            ]
          }
        },
        "CollectionResponsePublicImportErrorForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicImportError"
              }
            }
          }
        },
        "PublicImportResponse": {
          "required": [
            "createdAt",
            "id",
            "metadata",
            "optOutImport",
            "state",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "importTemplate": {
              "$ref": "#/components/schemas/ImportTemplate"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "metadata": {
              "$ref": "#/components/schemas/PublicImportMetadata"
            },
            "importRequestJson": {
              "type": "object",
              "properties": {}
            },
            "importSource": {
              "type": "string",
              "enum": [
                "API",
                "CRM_UI",
                "IMPORT",
                "MOBILE_ANDROID",
                "MOBILE_IOS",
                "SALESFORCE"
              ]
            },
            "importName": {
              "type": "string"
            },
            "state": {
              "type": "string",
              "description": "The status of the import.",
              "example": "DONE",
              "enum": [
                "STARTED",
                "PROCESSING",
                "DONE",
                "FAILED",
                "CANCELED",
                "DEFERRED",
                "REVERTED"
              ]
            },
            "id": {
              "type": "string",
              "example": "1471"
            },
            "optOutImport": {
              "type": "boolean",
              "description": "Whether or not the import is a list of people disqualified from receiving emails.",
              "example": false
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "description": "A current summary of the import, whether complete or not.",
          "example": {
            "id": "1471",
            "createdAt": "2020-01-14T22:45:00.153Z",
            "updatedAt": "2020-01-14T22:45:00.153Z",
            "state": "DONE",
            "optOutImport": false,
            "metadata": {
              "objectLists": [
                {
                  "objectType": "contacts",
                  "listId": "3"
                }
              ],
              "counters": {
                "TOTAL_ROWS": 1000,
                "PROPERTY_VALUES_EMITTED": 1000,
                "CREATED_OBJECTS": 1000,
                "UNIQUE_OBJECTS_WRITTEN": 1000
              },
              "fileIds": [
                "32938649"
              ]
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string"
            },
            "after": {
              "type": "string"
            }
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.import": "Create or modify all your CRM data through bulk imports"
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Schemas",
      "description": "The CRM uses schemas to define how custom objects should store and represent information in the HubSpot CRM. Schemas define details about an object's type, properties, and associations. The schema can be uniquely identified by its **object type ID**.",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "Create a new object for storing information about cars at a car dealership. Your object definition could include properties to store information as well as the filters available on the custom object index page.",
      "x-hubspot-related-documentation": [
        {
          "name": "Custom Object Guide",
          "url": "https://developers.hubspot.com/beta-docs/guides/api/crm/objects/crm-custom-objects"
        }
      ],
      "x-hubspot-introduction": "Use the custom objects schema API to define new types of CRM records in your account. After setting up an object schema, you'll then be able to create custom records under that object both in HubSpot and using the custom object records API."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Core"
      },
      {
        "name": "Public_Object_Schemas"
      }
    ],
    "paths": {
      "/crm-object-schemas/v3/schemas": {
        "get": {
          "tags": [
            "Core"
          ],
          "summary": "Get all schemas",
          "description": "Returns all object schemas that have been defined for your account.",
          "operationId": "get-/crm-object-schemas/v3/schemas_getAll",
          "parameters": [
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseObjectSchemaNoPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Core"
          ],
          "summary": "Create a new schema",
          "description": "Define a new object schema, along with custom properties and associations. The entire object schema, including its object type ID, properties, and associations will be returned in the response.",
          "operationId": "post-/crm-object-schemas/v3/schemas_create",
          "parameters": [],
          "requestBody": {
            "description": "Object schema definition, including properties and associations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectSchemaEgg"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectSchema"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            }
          ]
        }
      },
      "/crm-object-schemas/v3/schemas/{objectType}/purge": {
        "delete": {
          "tags": [
            "Public_Object_Schemas"
          ],
          "operationId": "delete-/crm-object-schemas/v3/schemas/{objectType}/purge_purge",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "deprecated": true,
          "security": [
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            }
          ]
        }
      },
      "/crm-object-schemas/v3/schemas/{objectType}": {
        "get": {
          "tags": [
            "Core"
          ],
          "summary": "Get an existing schema",
          "description": "Returns an existing object schema.",
          "operationId": "get-/crm-object-schemas/v3/schemas/{objectType}_getById",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "description": "Fully qualified name or object type ID of your schema.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectSchema"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Core"
          ],
          "summary": "Delete a schema",
          "description": "Deletes a schema. Any existing records of this schema must be deleted **first**. Otherwise this call will fail.",
          "operationId": "delete-/crm-object-schemas/v3/schemas/{objectType}_archive",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "description": "Fully qualified name or object type ID of your schema.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Core"
          ],
          "summary": "Update a schema",
          "description": "Update the details for an existing object schema.",
          "operationId": "patch-/crm-object-schemas/v3/schemas/{objectType}_update",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "description": "Fully qualified name or object type ID of your schema.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Attributes to update in your schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectTypeDefinitionPatch"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ObjectTypeDefinition"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            }
          ]
        }
      },
      "/crm-object-schemas/v3/schemas/{objectType}/associations": {
        "post": {
          "tags": [
            "Core"
          ],
          "summary": "Create an association",
          "description": "Defines a new association between the primary schema's object type and other object types.",
          "operationId": "post-/crm-object-schemas/v3/schemas/{objectType}/associations_createAssociation",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "description": "Fully qualified name or object type ID of your schema.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Attributes that define the association.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociationDefinitionEgg"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AssociationDefinition"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            }
          ]
        }
      },
      "/crm-object-schemas/v3/schemas/{objectType}/associations/{associationIdentifier}": {
        "delete": {
          "tags": [
            "Core"
          ],
          "summary": "Remove an association",
          "description": "Removes an existing association from a schema.",
          "operationId": "delete-/crm-object-schemas/v3/schemas/{objectType}/associations/{associationIdentifier}_archiveAssociation",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "description": "Fully qualified name or object type ID of your schema.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "associationIdentifier",
              "in": "path",
              "description": "Unique ID of the association to remove.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "ObjectTypeDefinitionPatch": {
          "type": "object",
          "properties": {
            "secondaryDisplayProperties": {
              "type": "array",
              "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
              "items": {
                "type": "string"
              }
            },
            "requiredProperties": {
              "type": "array",
              "description": "The names of properties that should be **required** when creating an object of this type.",
              "example": [
                "my_object_property"
              ],
              "items": {
                "type": "string"
              }
            },
            "searchableProperties": {
              "type": "array",
              "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
              "example": [
                "my_object_property"
              ],
              "items": {
                "type": "string"
              }
            },
            "clearDescription": {
              "type": "boolean"
            },
            "primaryDisplayProperty": {
              "type": "string",
              "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.",
              "example": "my_object_property"
            },
            "description": {
              "type": "string"
            },
            "restorable": {
              "type": "boolean"
            },
            "labels": {
              "$ref": "#/components/schemas/ObjectTypeDefinitionLabels"
            }
          },
          "description": "Defines attributes to update on an object type.",
          "example": {
            "primaryDisplayProperty": "my_object_property",
            "requiredProperties": [
              "my_object_property"
            ],
            "searchableProperties": [
              "my_object_property"
            ]
          }
        },
        "CollectionResponseObjectSchemaNoPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ObjectSchema"
              }
            }
          }
        },
        "ObjectTypeDefinition": {
          "required": [
            "id",
            "labels",
            "name",
            "requiredProperties"
          ],
          "type": "object",
          "properties": {
            "secondaryDisplayProperties": {
              "type": "array",
              "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
              "items": {
                "type": "string"
              }
            },
            "objectTypeId": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "fullyQualifiedName": {
              "type": "string"
            },
            "labels": {
              "$ref": "#/components/schemas/ObjectTypeDefinitionLabels"
            },
            "archived": {
              "type": "boolean"
            },
            "createdAt": {
              "type": "string",
              "description": "When the object type was created.",
              "format": "date-time"
            },
            "requiredProperties": {
              "type": "array",
              "description": "The names of properties that should be **required** when creating an object of this type.",
              "example": [
                "my_object_property"
              ],
              "items": {
                "type": "string"
              }
            },
            "searchableProperties": {
              "type": "array",
              "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
              "example": [
                "my_object_property"
              ],
              "items": {
                "type": "string"
              }
            },
            "portalId": {
              "type": "integer",
              "description": "The ID of the account that this object type is specific to.",
              "format": "int32",
              "example": 12345678
            },
            "primaryDisplayProperty": {
              "type": "string",
              "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.",
              "example": "my_object_property"
            },
            "name": {
              "type": "string",
              "description": "A unique name for this object. For internal use only.",
              "example": "my_object"
            },
            "id": {
              "type": "string",
              "description": "A unique ID for this object type. Will be defined as {meta-type}-{unique ID}.",
              "example": "123456"
            },
            "updatedAt": {
              "type": "string",
              "description": "When the object type was last updated.",
              "format": "date-time"
            }
          },
          "description": "Defines an object type.",
          "example": {
            "id": "123456",
            "createdAt": "2020-02-20T18:07:11.390Z",
            "updatedAt": "2020-02-21T14:13:28.818002Z",
            "labels": {
              "singular": "My object",
              "plural": "My objects"
            },
            "requiredProperties": [
              "my_object_property"
            ],
            "searchableProperties": [
              "my_object_property"
            ],
            "primaryDisplayProperty": "my_object_property",
            "portalId": 12345678,
            "metaType": "PORTAL_SPECIFIC",
            "name": "my_object"
          }
        },
        "OptionInput": {
          "required": [
            "displayOrder",
            "hidden",
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "hidden": {
              "type": "boolean",
              "description": "Hidden options won't be shown in HubSpot.",
              "example": false
            },
            "displayOrder": {
              "type": "integer",
              "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
              "format": "int32",
              "example": 1
            },
            "description": {
              "type": "string",
              "description": "A description of the option.",
              "example": "Choice number one"
            },
            "label": {
              "type": "string",
              "description": "A human-readable option label that will be shown in HubSpot.",
              "example": "Option A"
            },
            "value": {
              "type": "string",
              "description": "The internal value of the option, which must be used when setting the property value through the API.",
              "example": "A"
            }
          },
          "description": "Defines a enumeration property option",
          "example": {
            "label": "Option A",
            "description": "Choice number one",
            "value": "A",
            "displayOrder": 1,
            "hidden": false
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ObjectTypePropertyCreate": {
          "required": [
            "fieldType",
            "label",
            "name",
            "type"
          ],
          "type": "object",
          "properties": {
            "hidden": {
              "type": "boolean"
            },
            "optionSortStrategy": {
              "type": "string",
              "description": "Controls how the property options will be sorted in the HubSpot UI.",
              "enum": [
                "DISPLAY_ORDER",
                "ALPHABETICAL"
              ]
            },
            "displayOrder": {
              "type": "integer",
              "description": "The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values.",
              "format": "int32",
              "example": 2
            },
            "description": {
              "type": "string",
              "description": "A description of the property that will be shown as help text in HubSpot."
            },
            "showCurrencySymbol": {
              "type": "boolean",
              "description": "Whether the property will display the currency symbol in the HubSpot UI."
            },
            "label": {
              "type": "string",
              "description": "A human-readable property label that will be shown in HubSpot.",
              "example": "My object property"
            },
            "type": {
              "type": "string",
              "description": "The data type of the property.",
              "example": "enumeration",
              "enum": [
                "string",
                "number",
                "date",
                "datetime",
                "enumeration",
                "bool"
              ]
            },
            "formField": {
              "type": "boolean",
              "description": "Whether the property can be used in a HubSpot form."
            },
            "groupName": {
              "type": "string",
              "description": "The name of the group this property belongs to.",
              "example": "my_object_information"
            },
            "referencedObjectType": {
              "type": "string",
              "description": "Defines the options this property will return, e.g. OWNER would return name of users on the portal."
            },
            "textDisplayHint": {
              "type": "string",
              "description": "Controls how text properties are formatted in the HubSpot UI",
              "enum": [
                "unformatted_single_line",
                "multi_line",
                "email",
                "phone_number",
                "domain_name",
                "ip_address",
                "physical_address",
                "postal_code"
              ]
            },
            "name": {
              "type": "string",
              "description": "The internal property name, which must be used when referencing the property from the API."
            },
            "options": {
              "type": "array",
              "description": "A list of available options for the property. This field is only required for enumerated properties.",
              "example": [
                {
                  "label": "Option A",
                  "value": "A",
                  "description": "Choice number one",
                  "displayOrder": 1
                },
                {
                  "label": "Option B",
                  "value": "B",
                  "description": "Choice number two",
                  "displayOrder": 2
                }
              ],
              "items": {
                "$ref": "#/components/schemas/OptionInput"
              }
            },
            "searchableInGlobalSearch": {
              "type": "boolean",
              "description": "Allow users to search for information entered to this field (limited to 3 properties)"
            },
            "numberDisplayHint": {
              "type": "string",
              "description": "Controls how numeric properties are formatted in the HubSpot UI",
              "enum": [
                "unformatted",
                "formatted",
                "currency",
                "percentage",
                "duration",
                "probability"
              ]
            },
            "hasUniqueValue": {
              "type": "boolean",
              "description": "Whether or not the property's value must be unique. Once set, this can't be changed.",
              "example": false
            },
            "fieldType": {
              "type": "string",
              "description": "Controls how the property appears in HubSpot.",
              "example": "select"
            }
          },
          "description": "Defines a property to create.",
          "example": {
            "label": "My object property",
            "type": "enumeration",
            "fieldType": "select",
            "groupName": "my_object_information",
            "displayOrder": 2,
            "hasUniqueValue": false,
            "options": [
              {
                "label": "Option A",
                "description": "Choice number one",
                "value": "A",
                "displayOrder": 1
              },
              {
                "label": "Option B",
                "description": "Choice number two",
                "value": "B",
                "displayOrder": 2
              }
            ]
          }
        },
        "PropertyModificationMetadata": {
          "required": [
            "archivable",
            "readOnlyDefinition",
            "readOnlyValue"
          ],
          "type": "object",
          "properties": {
            "readOnlyOptions": {
              "type": "boolean",
              "description": ""
            },
            "readOnlyValue": {
              "type": "boolean",
              "description": ""
            },
            "readOnlyDefinition": {
              "type": "boolean",
              "description": ""
            },
            "archivable": {
              "type": "boolean",
              "description": ""
            }
          }
        },
        "AssociationDefinitionEgg": {
          "required": [
            "fromObjectTypeId",
            "toObjectTypeId"
          ],
          "type": "object",
          "properties": {
            "fromObjectTypeId": {
              "type": "string",
              "description": "ID of the primary object type to link from.",
              "example": "2-123456"
            },
            "name": {
              "type": "string",
              "description": "A unique name for this association.",
              "example": "my_object_to_contact"
            },
            "toObjectTypeId": {
              "type": "string",
              "description": "ID of the target object type to link to.",
              "example": "contact"
            }
          },
          "description": "Defines an association between two object types.",
          "example": {
            "fromObjectTypeId": "2-123456",
            "toObjectTypeId": "contact",
            "name": "my_object_to_contact"
          }
        },
        "AssociationDefinition": {
          "required": [
            "fromObjectTypeId",
            "id",
            "toObjectTypeId"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "description": "When the association was defined.",
              "format": "date-time"
            },
            "fromObjectTypeId": {
              "type": "string",
              "description": "ID of the primary object type to link from.",
              "example": "2-123456"
            },
            "name": {
              "type": "string",
              "description": "A unique name for this association.",
              "example": "my_object_to_contact"
            },
            "id": {
              "type": "string",
              "description": "A unique ID for this association.",
              "example": "105"
            },
            "toObjectTypeId": {
              "type": "string",
              "description": "ID of the target object type to link to.",
              "example": "0-1"
            },
            "updatedAt": {
              "type": "string",
              "description": "When the association was last updated.",
              "format": "date-time"
            }
          },
          "description": "Defines an association between two object types.",
          "example": {
            "id": "105",
            "fromObjectTypeId": "2-123456",
            "toObjectTypeId": "0-1",
            "name": "my_object_to_contact"
          }
        },
        "ObjectSchema": {
          "required": [
            "associations",
            "id",
            "labels",
            "name",
            "properties",
            "requiredProperties"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "description": "Associations defined for a given object type.",
              "example": [
                {
                  "id": "123",
                  "name": "my_object_to_contact",
                  "toObjectTypeId": "0-1",
                  "fromObjectTypeId": "2-123456"
                }
              ],
              "items": {
                "$ref": "#/components/schemas/AssociationDefinition"
              }
            },
            "secondaryDisplayProperties": {
              "type": "array",
              "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
              "items": {
                "type": "string"
              }
            },
            "createdByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "objectTypeId": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "fullyQualifiedName": {
              "type": "string",
              "description": "An assigned unique ID for the object, including portal ID and object name.",
              "example": "p7878787_my_object\""
            },
            "labels": {
              "$ref": "#/components/schemas/ObjectTypeDefinitionLabels"
            },
            "archived": {
              "type": "boolean"
            },
            "createdAt": {
              "type": "string",
              "description": "When the object schema was created.",
              "format": "date-time"
            },
            "requiredProperties": {
              "type": "array",
              "description": "The names of properties that should be **required** when creating an object of this type.",
              "example": [
                "my_object_property"
              ],
              "items": {
                "type": "string"
              }
            },
            "searchableProperties": {
              "type": "array",
              "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
              "example": [
                "my_object_property"
              ],
              "items": {
                "type": "string"
              }
            },
            "primaryDisplayProperty": {
              "type": "string",
              "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.",
              "example": "my_object_property"
            },
            "name": {
              "type": "string",
              "description": "A unique name for the schema's object type.",
              "example": "my_object"
            },
            "id": {
              "type": "string",
              "description": "A unique ID for this schema's object type. Will be defined as {meta-type}-{unique ID}.",
              "example": "123456"
            },
            "properties": {
              "type": "array",
              "description": "Properties defined for this object type.",
              "example": [
                {
                  "name": "my_object_property",
                  "type": "string",
                  "label": "My object property",
                  "archived": false,
                  "createdAt": "2020-02-20T18:07:11.802Z",
                  "fieldType": "text",
                  "groupName": "my_object_information",
                  "updatedAt": "2020-02-20T18:07:11.802Z",
                  "calculated": false,
                  "displayOrder": -1,
                  "hasUniqueValue": false,
                  "externalOptions": false
                }
              ],
              "items": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "updatedAt": {
              "type": "string",
              "description": "When the object schema was last updated.",
              "format": "date-time"
            }
          },
          "description": "Defines an object schema, including its properties and associations.",
          "example": {
            "id": "123456",
            "createdAt": "2020-02-20T18:07:11.390Z",
            "updatedAt": "2020-02-20T18:09:07.555Z",
            "properties": [
              {
                "updatedAt": "2020-02-20T18:07:11.802Z",
                "createdAt": "2020-02-20T18:07:11.802Z",
                "name": "my_object_property",
                "label": "My object property",
                "type": "string",
                "fieldType": "text",
                "groupName": "my_object_information",
                "displayOrder": -1,
                "calculated": false,
                "externalOptions": false,
                "archived": false,
                "hasUniqueValue": false
              }
            ],
            "associations": [
              {
                "id": "123",
                "fromObjectTypeId": "2-123456",
                "toObjectTypeId": "0-1",
                "name": "my_object_to_contact"
              }
            ],
            "labels": {
              "singular": "My object",
              "plural": "My objects"
            },
            "requiredProperties": [
              "my_object_property"
            ],
            "searchableProperties": [
              "my_object_property"
            ],
            "primaryDisplayProperty": "my_object_property",
            "metaType": "PORTAL_SPECIFIC",
            "fullyQualifiedName": "p7878787_my_object\"",
            "name": "my_object"
          }
        },
        "ObjectSchemaEgg": {
          "required": [
            "associatedObjects",
            "labels",
            "name",
            "properties",
            "requiredProperties"
          ],
          "type": "object",
          "properties": {
            "secondaryDisplayProperties": {
              "type": "array",
              "description": "The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.",
              "items": {
                "type": "string"
              }
            },
            "requiredProperties": {
              "type": "array",
              "description": "The names of properties that should be **required** when creating an object of this type.",
              "example": [
                "my_object_property"
              ],
              "items": {
                "type": "string"
              }
            },
            "searchableProperties": {
              "type": "array",
              "description": "Names of properties that will be indexed for this object type in by HubSpot's product search.",
              "items": {
                "type": "string"
              }
            },
            "primaryDisplayProperty": {
              "type": "string",
              "description": "The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.",
              "example": "my_object_property"
            },
            "name": {
              "type": "string",
              "description": "A unique name for this object. For internal use only.",
              "example": "my_object"
            },
            "description": {
              "type": "string"
            },
            "associatedObjects": {
              "type": "array",
              "description": "Associations defined for this object type.",
              "example": [
                "CONTACT"
              ],
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "description": "Properties defined for this object type.",
              "example": [
                {
                  "name": "my_object_property",
                  "label": "My object property",
                  "isPrimaryDisplayLabel": true
                }
              ],
              "items": {
                "$ref": "#/components/schemas/ObjectTypePropertyCreate"
              }
            },
            "labels": {
              "$ref": "#/components/schemas/ObjectTypeDefinitionLabels"
            }
          },
          "description": "Defines a new object type, its properties, and associations.",
          "example": {
            "name": "my_object",
            "labels": {
              "singular": "My object",
              "plural": "My objects"
            },
            "primaryDisplayProperty": "my_object_property",
            "requiredProperties": [
              "my_object_property"
            ],
            "properties": [
              {
                "name": "my_object_property",
                "label": "My object property",
                "isPrimaryDisplayLabel": true
              }
            ],
            "associatedObjects": [
              "CONTACT"
            ],
            "metaType": "PORTAL_SPECIFIC"
          }
        },
        "ObjectTypeDefinitionLabels": {
          "type": "object",
          "properties": {
            "plural": {
              "type": "string",
              "description": "The word for multiple objects. (There’s no way to change this later.)",
              "example": "My objects"
            },
            "singular": {
              "type": "string",
              "description": "The word for one object. (There’s no way to change this later.)",
              "example": "My object"
            }
          },
          "description": "Singular and plural labels for the object. Used in CRM display.",
          "example": {
            "singular": "My object",
            "plural": "My objects"
          }
        },
        "Option": {
          "required": [
            "hidden",
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "hidden": {
              "type": "boolean",
              "description": "Hidden options will not be displayed in HubSpot.",
              "example": false
            },
            "displayOrder": {
              "type": "integer",
              "description": "Options are displayed in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
              "format": "int32",
              "example": 1
            },
            "description": {
              "type": "string",
              "description": "A description of the option.",
              "example": "Choice number one"
            },
            "label": {
              "type": "string",
              "description": "A human-readable option label that will be shown in HubSpot.",
              "example": "Option A"
            },
            "value": {
              "type": "string",
              "description": "The internal value of the option, which must be used when setting the property value through the API.",
              "example": "A"
            }
          },
          "description": "The options available when a property is an enumeration",
          "example": {
            "label": "Option A",
            "description": "Choice number one",
            "value": "A",
            "displayOrder": 1,
            "hidden": false
          }
        },
        "Property": {
          "required": [
            "description",
            "fieldType",
            "groupName",
            "label",
            "name",
            "options",
            "type"
          ],
          "type": "object",
          "properties": {
            "hidden": {
              "type": "boolean"
            },
            "displayOrder": {
              "type": "integer",
              "description": "The order that this property should be displayed in the HubSpot UI relative to other properties for this object type. Properties are displayed in order starting with the lowest positive integer value. A value of -1 will cause the property to be displayed **after** any positive values.",
              "format": "int32",
              "example": 2
            },
            "description": {
              "type": "string",
              "description": "A description of the property that will be shown as help text in HubSpot."
            },
            "showCurrencySymbol": {
              "type": "boolean",
              "description": "Whether the property will display the currency symbol set in the account settings."
            },
            "type": {
              "type": "string",
              "description": "The property data type.",
              "example": "enumeration"
            },
            "hubspotDefined": {
              "type": "boolean",
              "description": "This will be true for default object properties built into HubSpot."
            },
            "createdAt": {
              "type": "string",
              "description": "When the property was created",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "description": "Whether or not the property is archived."
            },
            "options": {
              "type": "array",
              "description": "A list of valid options for the property. This field is required for enumerated properties, but will be empty for other property types.",
              "example": [
                {
                  "label": "Option A",
                  "value": "A",
                  "hidden": false,
                  "description": "Choice number one",
                  "displayOrder": 1
                },
                {
                  "label": "Option B",
                  "value": "B",
                  "hidden": false,
                  "description": "Choice number two",
                  "displayOrder": 2
                }
              ],
              "items": {
                "$ref": "#/components/schemas/Option"
              }
            },
            "hasUniqueValue": {
              "type": "boolean",
              "description": "Whether or not the property's value must be unique. Once set, this can't be changed.",
              "example": false
            },
            "calculated": {
              "type": "boolean",
              "description": "For default properties, true indicates that the property is calculated by a HubSpot process. It has no effect for custom properties."
            },
            "externalOptions": {
              "type": "boolean",
              "description": "For default properties, true indicates that the options are stored externally to the property settings."
            },
            "updatedAt": {
              "type": "string",
              "description": "",
              "format": "date-time"
            },
            "createdUserId": {
              "type": "string",
              "description": "The internal ID of the user who created the property in HubSpot. This field may not exist if the property was created outside of HubSpot."
            },
            "modificationMetadata": {
              "$ref": "#/components/schemas/PropertyModificationMetadata"
            },
            "sensitiveDataCategories": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "label": {
              "type": "string",
              "description": "A human-readable property label that will be shown in HubSpot.",
              "example": "My object property"
            },
            "formField": {
              "type": "boolean",
              "description": "Whether or not the property can be used in a HubSpot form."
            },
            "dataSensitivity": {
              "type": "string",
              "enum": [
                "non_sensitive",
                "sensitive",
                "highly_sensitive"
              ]
            },
            "archivedAt": {
              "type": "string",
              "description": "When the property was archived.",
              "format": "date-time"
            },
            "groupName": {
              "type": "string",
              "description": "The name of the property group the property belongs to.",
              "example": "my_object_information"
            },
            "referencedObjectType": {
              "type": "string",
              "description": "If this property is related to other object(s), they'll be listed here."
            },
            "name": {
              "type": "string",
              "description": "The internal property name, which must be used when referencing the property via the API.",
              "example": "my_object_property"
            },
            "calculationFormula": {
              "type": "string"
            },
            "fieldType": {
              "type": "string",
              "description": "Controls how the property appears in HubSpot.",
              "example": "select"
            },
            "updatedUserId": {
              "type": "string",
              "description": "The internal user ID of the user who updated the property in HubSpot. This field may not exist if the property was updated outside of HubSpot."
            }
          },
          "description": "Defines a property",
          "example": {
            "name": "my_object_property",
            "label": "My object property",
            "type": "enumeration",
            "fieldType": "select",
            "groupName": "my_object_information",
            "displayOrder": 2,
            "hasUniqueValue": false,
            "modificationMetadata": {
              "readOnlyOptions": false,
              "readOnlyValue": false,
              "readOnlyDefinition": false,
              "archivable": true
            },
            "options": [
              {
                "label": "Option A",
                "description": "Choice number one",
                "value": "A",
                "displayOrder": 1,
                "hidden": false
              },
              {
                "label": "Option B",
                "description": "Choice number two",
                "value": "B",
                "displayOrder": 2,
                "hidden": false
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.custom.read": "View custom object records",
                "crm.schemas.custom.read": "View custom object definitions"
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Properties",
      "description": "All HubSpot objects store data in default and custom properties. These endpoints provide access to read and modify object properties in HubSpot.",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "STARTER"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "Create a set of new custom multi-select properties for storing contract data on company records.",
      "x-hubspot-related-documentation": [
        {
          "name": "Properties Guide",
          "url": "https://developers.hubspot.com/beta-docs/guides/api/crm/properties"
        }
      ],
      "x-hubspot-introduction": "Use the properties API to store information in fields on individual contact records. You can use this API to manage existing default and custom properties, create new custom properties, and more."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Groups"
      },
      {
        "name": "Core"
      }
    ],
    "paths": {
      "/crm/v3/properties/{objectType}/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of properties",
          "description": "Archive a provided list of properties. This method will return a 204 No Content response on success regardless of the initial state of the property (e.g. active, already archived, non-existent).",
          "operationId": "post-/crm/v3/properties/{objectType}/batch/archive_archive",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputPropertyName"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/properties/{objectType}/groups/{groupName}": {
        "get": {
          "tags": [
            "Groups"
          ],
          "summary": "Read a property group",
          "description": "Read a property group identified by {groupName}.",
          "operationId": "get-/crm/v3/properties/{objectType}/groups/{groupName}_getByName",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupName",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PropertyGroup"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Groups"
          ],
          "summary": "Archive a property group",
          "description": "Move a property group identified by {groupName} to the recycling bin.",
          "operationId": "delete-/crm/v3/properties/{objectType}/groups/{groupName}_archive",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupName",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Groups"
          ],
          "summary": "Update a property group",
          "description": "Perform a partial update of a property group identified by {groupName}. Provided fields will be overwritten.",
          "operationId": "patch-/crm/v3/properties/{objectType}/groups/{groupName}_update",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "groupName",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroupUpdate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PropertyGroup"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/properties/{objectType}/{propertyName}": {
        "get": {
          "tags": [
            "Core"
          ],
          "summary": "Read a property",
          "description": "Read a property identified by {propertyName}.",
          "operationId": "get-/crm/v3/properties/{objectType}/{propertyName}_getByName",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "propertyName",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "properties",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Property"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Core"
          ],
          "summary": "Archive a property",
          "description": "Move a property identified by {propertyName} to the recycling bin.",
          "operationId": "delete-/crm/v3/properties/{objectType}/{propertyName}_archive",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "propertyName",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Core"
          ],
          "summary": "Update a property",
          "description": "Perform a partial update of a property identified by {propertyName}. Provided fields will be overwritten.",
          "operationId": "patch-/crm/v3/properties/{objectType}/{propertyName}_update",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "propertyName",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyUpdate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Property"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/properties/{objectType}/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of properties",
          "description": "Read a provided list of properties.",
          "operationId": "post-/crm/v3/properties/{objectType}/batch/read_read",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputPropertyName"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseProperty"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponsePropertyWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/properties/{objectType}/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of properties",
          "description": "Create a batch of properties using the same rules as when creating an individual property.",
          "operationId": "post-/crm/v3/properties/{objectType}/batch/create_create",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputPropertyCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseProperty"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponsePropertyWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/properties/{objectType}": {
        "get": {
          "tags": [
            "Core"
          ],
          "summary": "Read all properties",
          "description": "Read all existing properties for the specified object type and HubSpot account.",
          "operationId": "get-/crm/v3/properties/{objectType}_getAll",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "properties",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponsePropertyNoPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Core"
          ],
          "summary": "Create a property",
          "description": "Create and return a copy of a new property for the specified object type.",
          "operationId": "post-/crm/v3/properties/{objectType}_create",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Property"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/properties/{objectType}/groups": {
        "get": {
          "tags": [
            "Groups"
          ],
          "summary": "Read all property groups",
          "description": "Read all existing property groups for the specified object type and HubSpot account.",
          "operationId": "get-/crm/v3/properties/{objectType}/groups_getAll",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponsePropertyGroupNoPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.marketing_events.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.marketing_events.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.feedback_submissions.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.commercepayments.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Groups"
          ],
          "summary": "Create a property group",
          "description": "Create and return a copy of a new property group.",
          "operationId": "post-/crm/v3/properties/{objectType}/groups_create",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroupCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PropertyGroup"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.pipelines.orders.write"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.schemas.custom.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "PropertyName": {
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the property to read or modify.",
              "example": "my_custom_property"
            }
          },
          "example": {
            "name": "my_custom_property"
          }
        },
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "BatchResponseProperty": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "PropertyGroup": {
          "required": [
            "archived",
            "displayOrder",
            "label",
            "name"
          ],
          "type": "object",
          "properties": {
            "archived": {
              "type": "boolean"
            },
            "name": {
              "type": "string",
              "description": "The internal property group name, which must be used when referencing the property group via the API.",
              "example": "mypropertygroup"
            },
            "displayOrder": {
              "type": "integer",
              "description": "Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
              "format": "int32",
              "example": -1
            },
            "label": {
              "type": "string",
              "description": "A human-readable label that will be shown in HubSpot.",
              "example": "My Property Group"
            }
          },
          "description": "An ID for a group of properties",
          "example": {
            "name": "mypropertygroup",
            "label": "My Property Group",
            "displayOrder": -1
          }
        },
        "CollectionResponsePropertyGroupNoPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PropertyGroup"
              }
            }
          }
        },
        "PropertyCreate": {
          "required": [
            "fieldType",
            "groupName",
            "label",
            "name",
            "type"
          ],
          "type": "object",
          "properties": {
            "hidden": {
              "type": "boolean",
              "description": "If true, the property won't be visible and can't be used in HubSpot.",
              "example": false
            },
            "displayOrder": {
              "type": "integer",
              "description": "Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property to be displayed after any positive values.",
              "format": "int32",
              "example": 2
            },
            "description": {
              "type": "string",
              "description": "A description of the property that will be shown as help text in HubSpot."
            },
            "label": {
              "type": "string",
              "description": "A human-readable property label that will be shown in HubSpot.",
              "example": "My Contact Property"
            },
            "type": {
              "type": "string",
              "description": "The data type of the property.",
              "example": "enumeration",
              "enum": [
                "string",
                "number",
                "date",
                "datetime",
                "enumeration",
                "bool"
              ]
            },
            "formField": {
              "type": "boolean",
              "description": "Whether or not the property can be used in a HubSpot form.",
              "example": true
            },
            "groupName": {
              "type": "string",
              "description": "The name of the property group the property belongs to.",
              "example": "contactinformation"
            },
            "referencedObjectType": {
              "type": "string",
              "description": "Should be set to 'OWNER' when 'externalOptions' is true, which causes the property to dynamically pull option values from the current HubSpot users."
            },
            "name": {
              "type": "string",
              "description": "The internal property name, which must be used when referencing the property via the API."
            },
            "options": {
              "type": "array",
              "description": "A list of valid options for the property. This field is required for enumerated properties.",
              "example": [
                {
                  "label": "Option A",
                  "value": "A",
                  "hidden": false,
                  "description": "Choice number one",
                  "displayOrder": 1
                },
                {
                  "label": "Option B",
                  "value": "B",
                  "hidden": false,
                  "description": "Choice number two",
                  "displayOrder": 2
                }
              ],
              "items": {
                "$ref": "#/components/schemas/OptionInput"
              }
            },
            "calculationFormula": {
              "type": "string",
              "description": "Represents a formula that is used to compute a calculated property."
            },
            "hasUniqueValue": {
              "type": "boolean",
              "description": "Whether or not the property's value must be unique. Once set, this can't be changed.",
              "example": false
            },
            "fieldType": {
              "type": "string",
              "description": "Controls how the property appears in HubSpot.",
              "example": "select",
              "enum": [
                "textarea",
                "text",
                "date",
                "file",
                "number",
                "select",
                "radio",
                "checkbox",
                "booleancheckbox",
                "calculation_equation"
              ]
            },
            "externalOptions": {
              "type": "boolean",
              "description": "Applicable only for 'enumeration' type properties.  Should be set to true in conjunction with a 'referencedObjectType' of 'OWNER'.  Otherwise false."
            }
          },
          "example": {
            "label": "My Contact Property",
            "type": "enumeration",
            "fieldType": "select",
            "groupName": "contactinformation",
            "hidden": false,
            "displayOrder": 2,
            "hasUniqueValue": false,
            "formField": true,
            "options": [
              {
                "label": "Option A",
                "description": "Choice number one",
                "value": "A",
                "displayOrder": 1,
                "hidden": false
              },
              {
                "label": "Option B",
                "description": "Choice number two",
                "value": "B",
                "displayOrder": 2,
                "hidden": false
              }
            ]
          }
        },
        "OptionInput": {
          "required": [
            "hidden",
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "hidden": {
              "type": "boolean",
              "description": "Hidden options won't be shown in HubSpot.",
              "example": false
            },
            "displayOrder": {
              "type": "integer",
              "description": "Options are shown in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
              "format": "int32",
              "example": 1
            },
            "description": {
              "type": "string",
              "description": "A description of the option.",
              "example": "Choice number one"
            },
            "label": {
              "type": "string",
              "description": "A human-readable option label that will be shown in HubSpot.",
              "example": "Option A"
            },
            "value": {
              "type": "string",
              "description": "The internal value of the option, which must be used when setting the property value through the API.",
              "example": "A"
            }
          },
          "example": {
            "label": "Option A",
            "description": "Choice number one",
            "value": "A",
            "displayOrder": 1,
            "hidden": false
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "BatchInputPropertyCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PropertyCreate"
              }
            }
          }
        },
        "CollectionResponsePropertyNoPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Property"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "PropertyUpdate": {
          "type": "object",
          "properties": {
            "groupName": {
              "type": "string",
              "description": "The name of the property group the property belongs to.",
              "example": "contactinformation"
            },
            "hidden": {
              "type": "boolean",
              "description": "If true, the property won't be visible and can't be used in HubSpot.",
              "example": false
            },
            "options": {
              "type": "array",
              "description": "A list of valid options for the property.",
              "example": [
                {
                  "label": "Option A",
                  "value": "A",
                  "hidden": false,
                  "description": "Choice number one",
                  "displayOrder": 1
                },
                {
                  "label": "Option B",
                  "value": "B",
                  "hidden": false,
                  "description": "Choice number two",
                  "displayOrder": 2
                }
              ],
              "items": {
                "$ref": "#/components/schemas/OptionInput"
              }
            },
            "displayOrder": {
              "type": "integer",
              "description": "Properties are displayed in order starting with the lowest positive integer value. Values of -1 will cause the Property to be displayed after any positive values.",
              "format": "int32",
              "example": 2
            },
            "description": {
              "type": "string",
              "description": "A description of the property that will be shown as help text in HubSpot."
            },
            "calculationFormula": {
              "type": "string",
              "description": "Represents a formula that is used to compute a calculated property."
            },
            "label": {
              "type": "string",
              "description": "A human-readable property label that will be shown in HubSpot.",
              "example": "My Contact Property"
            },
            "type": {
              "type": "string",
              "description": "The data type of the property.",
              "example": "enumeration",
              "enum": [
                "string",
                "number",
                "date",
                "datetime",
                "enumeration",
                "bool"
              ]
            },
            "fieldType": {
              "type": "string",
              "description": "Controls how the property appears in HubSpot.",
              "example": "select",
              "enum": [
                "textarea",
                "text",
                "date",
                "file",
                "number",
                "select",
                "radio",
                "checkbox",
                "booleancheckbox",
                "calculation_equation"
              ]
            },
            "formField": {
              "type": "boolean",
              "description": "Whether or not the property can be used in a HubSpot form.",
              "example": true
            }
          },
          "example": {
            "label": "My Contact Property",
            "type": "enumeration",
            "fieldType": "select",
            "groupName": "contactinformation",
            "hidden": false,
            "displayOrder": 2,
            "formField": true,
            "options": [
              {
                "label": "Option A",
                "description": "Choice number one",
                "value": "A",
                "displayOrder": 1,
                "hidden": false
              },
              {
                "label": "Option B",
                "description": "Choice number two",
                "value": "B",
                "displayOrder": 2,
                "hidden": false
              }
            ]
          }
        },
        "BatchReadInputPropertyName": {
          "required": [
            "archived",
            "inputs"
          ],
          "type": "object",
          "properties": {
            "archived": {
              "type": "boolean"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PropertyName"
              }
            }
          }
        },
        "PropertyGroupCreate": {
          "required": [
            "label",
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The internal property group name, which must be used when referencing the property group via the API.",
              "example": "mypropertygroup"
            },
            "displayOrder": {
              "type": "integer",
              "description": "Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
              "format": "int32",
              "example": -1
            },
            "label": {
              "type": "string",
              "description": "A human-readable label that will be shown in HubSpot.",
              "example": "My Property Group"
            }
          },
          "example": {
            "name": "mypropertygroup",
            "label": "My Property Group",
            "displayOrder": -1
          }
        },
        "PropertyModificationMetadata": {
          "required": [
            "archivable",
            "readOnlyDefinition",
            "readOnlyValue"
          ],
          "type": "object",
          "properties": {
            "readOnlyOptions": {
              "type": "boolean"
            },
            "readOnlyValue": {
              "type": "boolean"
            },
            "readOnlyDefinition": {
              "type": "boolean"
            },
            "archivable": {
              "type": "boolean"
            }
          }
        },
        "BatchInputPropertyName": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PropertyName"
              }
            }
          }
        },
        "BatchResponsePropertyWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Property"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "Option": {
          "required": [
            "hidden",
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "hidden": {
              "type": "boolean",
              "description": "Hidden options will not be displayed in HubSpot.",
              "example": false
            },
            "displayOrder": {
              "type": "integer",
              "description": "Options are displayed in order starting with the lowest positive integer value. Values of -1 will cause the option to be displayed after any positive values.",
              "format": "int32",
              "example": 1
            },
            "description": {
              "type": "string",
              "description": "A description of the option.",
              "example": "Choice number one"
            },
            "label": {
              "type": "string",
              "description": "A human-readable option label that will be shown in HubSpot.",
              "example": "Option A"
            },
            "value": {
              "type": "string",
              "description": "The internal value of the option, which must be used when setting the property value through the API.",
              "example": "A"
            }
          },
          "example": {
            "label": "Option A",
            "description": "Choice number one",
            "value": "A",
            "displayOrder": 1,
            "hidden": false
          }
        },
        "PropertyGroupUpdate": {
          "type": "object",
          "properties": {
            "displayOrder": {
              "type": "integer",
              "description": "Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.",
              "format": "int32",
              "example": -1
            },
            "label": {
              "type": "string",
              "description": "A human-readable label that will be shown in HubSpot.",
              "example": "My Property Group"
            }
          },
          "example": {
            "label": "My Property Group",
            "displayOrder": -1
          }
        },
        "Property": {
          "required": [
            "description",
            "fieldType",
            "groupName",
            "label",
            "name",
            "options",
            "type"
          ],
          "type": "object",
          "properties": {
            "createdUserId": {
              "type": "string",
              "description": "The internal user ID of the user who created the property in HubSpot. This field may not exist if the property was created outside of HubSpot."
            },
            "hidden": {
              "type": "boolean",
              "description": "Whether or not the property will be hidden from the HubSpot UI. It's recommended this be set to false for custom properties.",
              "example": false
            },
            "modificationMetadata": {
              "$ref": "#/components/schemas/PropertyModificationMetadata"
            },
            "displayOrder": {
              "type": "integer",
              "description": "Properties are shown in order, starting with the lowest positive integer value.",
              "format": "int32",
              "example": 2
            },
            "description": {
              "type": "string",
              "description": "A description of the property that will be shown as help text in HubSpot."
            },
            "showCurrencySymbol": {
              "type": "boolean",
              "description": "Whether or not the property will display the currency symbol set in the account settings."
            },
            "label": {
              "type": "string",
              "description": "A human-readable property label that will be shown in HubSpot.",
              "example": "My Contact Property"
            },
            "type": {
              "type": "string",
              "description": "The property data type.",
              "example": "enumeration"
            },
            "hubspotDefined": {
              "type": "boolean",
              "description": "This will be true for default object properties built into HubSpot."
            },
            "formField": {
              "type": "boolean",
              "description": "Whether or not the property can be used in a HubSpot form.",
              "example": true
            },
            "createdAt": {
              "type": "string",
              "description": "",
              "format": "date-time"
            },
            "archivedAt": {
              "type": "string",
              "description": "When the property was archived.",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "description": "Whether or not the property is archived."
            },
            "groupName": {
              "type": "string",
              "description": "The name of the property group the property belongs to.",
              "example": "contactinformation"
            },
            "referencedObjectType": {
              "type": "string",
              "description": "If this property is related to other object(s), they'll be listed here."
            },
            "name": {
              "type": "string",
              "description": "The internal property name, which must be used when referencing the property via the API.",
              "example": "my_contact_property"
            },
            "options": {
              "type": "array",
              "description": "A list of valid options for the property. This field is required for enumerated properties, but will be empty for other property types.",
              "example": [
                {
                  "label": "Option A",
                  "value": "A",
                  "hidden": false,
                  "description": "Choice number one",
                  "displayOrder": 1
                },
                {
                  "label": "Option B",
                  "value": "B",
                  "hidden": false,
                  "description": "Choice number two",
                  "displayOrder": 2
                }
              ],
              "items": {
                "$ref": "#/components/schemas/Option"
              }
            },
            "calculationFormula": {
              "type": "string",
              "description": "Represents a formula that is used to compute a calculated property."
            },
            "hasUniqueValue": {
              "type": "boolean",
              "description": "Whether or not the property's value must be unique. Once set, this can't be changed.",
              "example": false
            },
            "fieldType": {
              "type": "string",
              "description": "Controls how the property appears in HubSpot.",
              "example": "select"
            },
            "updatedUserId": {
              "type": "string",
              "description": "The internal user ID of the user who updated the property in HubSpot. This field may not exist if the property was updated outside of HubSpot."
            },
            "calculated": {
              "type": "boolean",
              "description": "For default properties, true indicates that the property is calculated by a HubSpot process. It has no effect for custom properties."
            },
            "externalOptions": {
              "type": "boolean",
              "description": "For default properties, true indicates that the options are stored externally to the property settings."
            },
            "updatedAt": {
              "type": "string",
              "description": "",
              "format": "date-time"
            }
          },
          "example": {
            "name": "my_contact_property",
            "label": "My Contact Property",
            "type": "enumeration",
            "fieldType": "select",
            "groupName": "contactinformation",
            "hidden": false,
            "displayOrder": 2,
            "hasUniqueValue": false,
            "formField": true,
            "modificationMetadata": {
              "readOnlyOptions": false,
              "readOnlyValue": false,
              "readOnlyDefinition": false,
              "archivable": true
            },
            "options": [
              {
                "label": "Option A",
                "description": "Choice number one",
                "value": "A",
                "displayOrder": 1,
                "hidden": false
              },
              {
                "label": "Option B",
                "description": "Choice number two",
                "value": "B",
                "displayOrder": 2,
                "hidden": false
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "tickets": "Read and write tickets",
                "crm.objects.marketing_events.read": "Read marketing events",
                "crm.schemas.custom.read": "View custom object definitions",
                "crm.pipelines.orders.read": "View details about your cart pipelines including pipeline stage information",
                "media_bridge.read": "Read media and media events",
                "crm.objects.custom.read": "View custom object records",
                "crm.objects.feedback_submissions.read": "View feedback survey submissions",
                "timeline": "Create timeline events",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records",
                "crm.objects.marketing_events.write": "Write marketing events",
                "crm.objects.goals.read": "Read goals",
                "crm.pipelines.orders.write": "Create, delete, or make to your order pipelines or their respective stages"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.schemas.carts.read": "Read cart property settings",
                "crm.objects.contacts.write": " ",
                "crm.objects.users.read": "Read User CRM objects",
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.companies.read": " ",
                "crm.objects.invoices.read": "Read invoices objects",
                "crm.objects.line_items.write": "Line Items",
                "crm.schemas.subscriptions.read": "Read subscriptions schema",
                "crm.schemas.line_items.read": "Line Items schemas",
                "crm.objects.deals.read": " ",
                "crm.objects.owners.read": " ",
                "crm.schemas.invoices.read": "Read invoices schema",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.contacts.read": " ",
                "crm.objects.subscriptions.read": "Read Commerce Subscriptions",
                "crm.schemas.deals.read": " ",
                "crm.objects.leads.read": "Read lead objects",
                "crm.objects.quotes.read": "Quotes",
                "crm.schemas.commercepayments.read": "Read the COMMERCE_PAYMENT properties.",
                "crm.schemas.companies.read": " ",
                "crm.schemas.quotes.read": "Quotes schemas",
                "crm.objects.orders.read": "Read Orders",
                "crm.schemas.contacts.read": " ",
                "crm.objects.companies.write": " ",
                "crm.schemas.orders.read": "Read order property settings",
                "crm.objects.carts.read": "Read carts",
                "crm.objects.deals.write": " ",
                "crm.objects.leads.write": "Modify lead objects",
                "crm.objects.orders.write": "Write orders",
                "crm.schemas.contacts.write": " ",
                "crm.schemas.orders.write": "Write order property settings",
                "crm.schemas.companies.write": " ",
                "crm.schemas.carts.write": "Write cart property settings",
                "crm.objects.carts.write": "Write cart",
                "crm.schemas.deals.write": " ",
                "crm.objects.users.write": "Write User CRM objects"
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "STARTER"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Crm Owners",
      "description": "HubSpot uses **owners** to assign CRM objects to specific people in your organization. The endpoints described here are used to get a list of the owners that are available for an account. To assign an owner to an object, set the hubspot_owner_id property using the appropriate CRM object update or create a request.\n\nIf teams are available for your HubSpot tier, these endpoints will also indicate which team(s) an owner can access, as well as which team is the owner's primary team.",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "STARTER"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "Retrieve the owner IDs for all users in the account to later assign CRM records across the team.",
      "x-hubspot-related-documentation": [
        {
          "name": "Owners Guide",
          "url": "https://developers.hubspot.com/beta-docs/guides/api/crm/owners"
        }
      ],
      "x-hubspot-introduction": "Each user in a HubSpot account is assigned an owner ID, which HubSpot uses to map the user to their assigned CRM records, activities, and more. Use the owners API to retrieve owner IDs and other related information for users in the account. To assign an owner to a CRM record, you can use the properties API to set the hubspot_owner_id property."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Owners"
      }
    ],
    "paths": {
      "/crm/v3/owners/": {
        "get": {
          "tags": [
            "Owners"
          ],
          "summary": "Get a page of owners",
          "operationId": "get-/crm/v3/owners/_getPage",
          "parameters": [
            {
              "name": "email",
              "in": "query",
              "description": "Filter by email address (optional)",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 100
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponsePublicOwnerForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/owners/{ownerId}": {
        "get": {
          "tags": [
            "Owners"
          ],
          "summary": "Read an owner by given `id` or `userId`",
          "operationId": "get-/crm/v3/owners/{ownerId}_getById",
          "parameters": [
            {
              "name": "ownerId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string",
                "default": "id",
                "enum": [
                  "id",
                  "userId"
                ]
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PublicOwner"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.objects.owners.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.owners.read"
              ]
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "PublicOwner": {
          "required": [
            "archived",
            "createdAt",
            "id",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string",
              "example": "John"
            },
            "lastName": {
              "type": "string",
              "example": "Smith"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "teams": {
              "type": "array",
              "example": [
                {
                  "id": "178588",
                  "name": "West Coast Sales",
                  "primary": true
                },
                {
                  "id": "178590",
                  "name": "California Sales",
                  "primary": false
                }
              ],
              "items": {
                "$ref": "#/components/schemas/PublicTeam"
              }
            },
            "id": {
              "type": "string",
              "example": "6166860"
            },
            "userId": {
              "type": "integer",
              "format": "int32",
              "example": 1296619
            },
            "email": {
              "type": "string",
              "example": "jsmith@example.com"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "6166860",
            "email": "jsmith@example.com",
            "firstName": "John",
            "lastName": "Smith",
            "userId": 1296619,
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false,
            "teams": [
              {
                "id": "178588",
                "name": "West Coast Sales",
                "primary": true
              },
              {
                "id": "178590",
                "name": "California Sales",
                "primary": false
              }
            ]
          }
        },
        "PublicTeam": {
          "required": [
            "id",
            "name",
            "primary"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "primary": {
              "type": "boolean"
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "CollectionResponsePublicOwnerForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicOwner"
              }
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string"
            },
            "after": {
              "type": "string"
            }
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.owners.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "STARTER"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Timeline",
      "description": "This feature allows an app to create and configure custom events that can show up in the timelines of certain CRM objects like contacts, companies, tickets, or deals. You'll find multiple use cases for this API in the sections below.",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "STARTER"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "After setting up a new set of sign-up flows on your website, update contact timelines to indicate which flow they completed. In each event, you could also include a link to open an iframe that displays additional external data about the event.",
      "x-hubspot-related-documentation": [
        {
          "name": "Timeline Events Guide",
          "url": "https://developers.hubspot.com/beta-docs/guides/api/crm/extensions/timeline"
        }
      ],
      "x-hubspot-introduction": "Use the timeline events API to add custom event information to CRM record timelines. You'll first need to create a public app, then an event template to display event data. "
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Events"
      },
      {
        "name": "Tokens"
      },
      {
        "name": "Templates"
      }
    ],
    "paths": {
      "/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/detail": {
        "get": {
          "tags": [
            "Events"
          ],
          "summary": "Gets the detailTemplate as rendered",
          "description": "This will take the `detailTemplate` from the event template and return an object rendering the specified event. If the template references `extraData` that isn't found in the event, it will be ignored and we'll render without it.",
          "operationId": "get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/detail",
          "parameters": [
            {
              "name": "eventTemplateId",
              "in": "path",
              "description": "The event template ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "eventId",
              "in": "path",
              "description": "The event ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EventDetail"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            }
          ]
        }
      },
      "/integrators/timeline/v3/events": {
        "post": {
          "tags": [
            "Events"
          ],
          "summary": "Create a single event",
          "description": "Creates an instance of a timeline event based on an event template. Once created, this event is immutable on the object timeline and cannot be modified. If the event template was configured to update object properties via `objectPropertyName`, this call will also attempt to updates those properties, or add them if they don't exist.",
          "operationId": "post-/integrators/timeline/v3/events",
          "parameters": [],
          "requestBody": {
            "description": "The timeline event definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineEvent"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimelineEventResponse"
                  },
                  "example": {
                    "objectType": "contacts",
                    "id": "petspot:1001298:art3mis-pup@petspot.com-004",
                    "eventTemplateId": "1001298",
                    "email": "art3mis-pup@petspot.com",
                    "objectId": "28001",
                    "timestamp": "2020-01-30T17:42:10.276Z",
                    "tokens": {
                      "petName": "Art3mis",
                      "petColor": "black",
                      "petAge": "3"
                    },
                    "extraData": {
                      "questions": [
                        {
                          "question": "Who's a good girl?",
                          "answer": "Bark!"
                        },
                        {
                          "question": "Do you wanna go on a walk?",
                          "answer": "Woof!"
                        }
                      ]
                    },
                    "timelineIFrame": {
                      "linkLabel": "View Art3mis",
                      "headerLabel": "Art3mis dog",
                      "url": "https://my.petspot.com/pets/Art3mis",
                      "width": 600,
                      "height": 400
                    }
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}": {
        "put": {
          "tags": [
            "Tokens"
          ],
          "summary": "Updates an existing token on an event template",
          "description": "This will update the existing token on an event template. Name and type can't be changed on existing tokens.",
          "operationId": "put-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}",
          "parameters": [
            {
              "name": "eventTemplateId",
              "in": "path",
              "description": "The event template ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tokenName",
              "in": "path",
              "description": "The token name.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the target app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "The updated token definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineEventTemplateTokenUpdateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimelineEventTemplateToken"
                  },
                  "example": {
                    "name": "petType",
                    "type": "enumeration",
                    "createdAt": "2020-02-12T20:58:26Z",
                    "updatedAt": "2020-02-12T20:58:26Z",
                    "label": "Pet Type",
                    "options": [
                      {
                        "value": "dog",
                        "label": "Dog"
                      },
                      {
                        "value": "cat",
                        "label": "Cat"
                      },
                      {
                        "value": "bird",
                        "label": "Bird"
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Tokens"
          ],
          "summary": "Removes a token from the event template",
          "description": "This will remove the token from an existing template. Existing events and CRM objects will still retain the token and its mapped object properties, but new ones will not.\n\nThe timeline will still display this property for older CRM objects if it's still referenced in the template `Markdown`. New events will not.\n\nAny lists or reports referencing deleted tokens will no longer return new contacts, but old ones will still exist in the lists.",
          "operationId": "delete-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens/{tokenName}",
          "parameters": [
            {
              "name": "eventTemplateId",
              "in": "path",
              "description": "The event template ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "tokenName",
              "in": "path",
              "description": "The token name.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the target app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        }
      },
      "/integrators/timeline/v3/events/{eventTemplateId}/{eventId}": {
        "get": {
          "tags": [
            "Events"
          ],
          "summary": "Gets the event",
          "description": "This returns the previously created event. It contains all existing info for the event, but not necessarily the CRM object.",
          "operationId": "get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}",
          "parameters": [
            {
              "name": "eventTemplateId",
              "in": "path",
              "description": "The event template ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "eventId",
              "in": "path",
              "description": "The event ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimelineEventResponse"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            }
          ]
        }
      },
      "/integrators/timeline/v3/events/batch/create": {
        "post": {
          "tags": [
            "Events"
          ],
          "summary": "Creates multiple events",
          "description": "Creates multiple instances of timeline events based on an event template. Once created, these event are immutable on the object timeline and cannot be modified. If the event template was configured to update object properties via `objectPropertyName`, this call will also attempt to updates those properties, or add them if they don't exist.",
          "operationId": "post-/integrators/timeline/v3/events/batch/create",
          "parameters": [],
          "requestBody": {
            "description": "The timeline event definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputTimelineEvent"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "example": {
                    "results": [
                      {
                        "objectType": "contacts",
                        "id": "petspot:1001298:art3mis-pup@petspot.com-b9d73144-41bb-46c8-9a3f-f0849c1ad7e6",
                        "eventTemplateId": "1001298",
                        "email": "art3mis-pup@petspot.com",
                        "objectId": "28001",
                        "timestamp": "2020-01-30T18:10:17.057Z",
                        "tokens": {
                          "petName": "Art3mis",
                          "petColor": "black",
                          "petAge": "3"
                        },
                        "extraData": {
                          "questions": [
                            {
                              "question": "Who's a good girl?",
                              "answer": "Bark!"
                            },
                            {
                              "question": "Do you wanna go on a walk?",
                              "answer": "Woof!"
                            }
                          ]
                        },
                        "timelineIFrame": {
                          "linkLabel": "View Art3mis",
                          "headerLabel": "Art3mis dog",
                          "url": "https://my.petspot.com/pets/Art3mis",
                          "width": 600,
                          "height": 400
                        }
                      },
                      {
                        "objectType": "contacts",
                        "id": "petspot:1001298:pocket-tiger@petspot.com-c09a620f-60a4-46a8-be9f-fe0609fc3f0e",
                        "eventTemplateId": "1001298",
                        "email": "pocket-tiger@petspot.com",
                        "objectId": "28651",
                        "timestamp": "2020-01-30T18:10:17.057Z",
                        "tokens": {
                          "petName": "Pocket",
                          "petColor": "yellow",
                          "petAge": "3"
                        },
                        "extraData": {
                          "questions": [
                            {
                              "question": "Who's a good kitty?",
                              "answer": "Purr..."
                            },
                            {
                              "question": "Will you stop playing with that?",
                              "answer": "Meow!"
                            }
                          ]
                        },
                        "timelineIFrame": {
                          "linkLabel": "View Pocket",
                          "headerLabel": "Pocket Tiger",
                          "url": "https://my.petspot.com/pets/Pocket",
                          "width": 600,
                          "height": 400
                        }
                      }
                    ],
                    "status": "COMPLETE",
                    "startedAt": "2020-01-30T18:10:16.478734Z",
                    "completedAt": "2020-01-30T18:10:17.793206Z"
                  }
                }
              }
            },
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseTimelineEventResponse"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseTimelineEventResponseWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            }
          ]
        }
      },
      "/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/render": {
        "get": {
          "tags": [
            "Events"
          ],
          "summary": "Renders the header or detail as HTML",
          "description": "This will take either the `headerTemplate` or `detailTemplate` from the event template and render for the specified event as HTML. If the template references `extraData` that isn't found in the event, it will be ignored and we'll render without it.",
          "operationId": "get-/integrators/timeline/v3/events/{eventTemplateId}/{eventId}/render",
          "parameters": [
            {
              "name": "eventTemplateId",
              "in": "path",
              "description": "The event template ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "eventId",
              "in": "path",
              "description": "The event ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "detail",
              "in": "query",
              "description": "Set to 'true', we want to render the `detailTemplate` instead of the `headerTemplate`.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "text/html": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.contacts.read"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "timeline"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2": [
                "crm.schemas.deals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "timeline"
              ]
            }
          ]
        }
      },
      "/integrators/timeline/v3/{appId}/event-templates": {
        "get": {
          "tags": [
            "Templates"
          ],
          "summary": "List all event templates for your app",
          "description": "Use this to list all event templates owned by your app.",
          "operationId": "get-/integrators/timeline/v3/{appId}/event-templates",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the target app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseTimelineEventTemplateNoPaging"
                  },
                  "example": {
                    "results": [
                      {
                        "id": "15758",
                        "objectType": "companies",
                        "name": "company test",
                        "headerTemplate": "abcde",
                        "tokens": []
                      },
                      {
                        "id": "1000151",
                        "objectType": "deals",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "name": "deal test",
                        "headerTemplate": "deal",
                        "detailTemplate": "Deal occurred at {{#formatDate timestamp}}{{/formatDate}}\n\ntest",
                        "tokens": [
                          {
                            "name": "test",
                            "type": "string",
                            "createdAt": "2020-02-12T20:58:26Z",
                            "updatedAt": "2020-02-12T20:58:26Z",
                            "label": "test",
                            "objectPropertyName": "test",
                            "options": []
                          }
                        ]
                      },
                      {
                        "id": "1001298",
                        "objectType": "contacts",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "name": "PetSpot Registration",
                        "headerTemplate": "Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})",
                        "detailTemplate": "Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n#### Questions\n{{#each extraData.questions}}\n  **{{question}}**: {{answer}}\n{{/each}}\n\nEDIT",
                        "tokens": [
                          {
                            "name": "petAge",
                            "type": "number",
                            "createdAt": "2020-02-12T20:58:26Z",
                            "updatedAt": "2020-02-12T20:58:26Z",
                            "label": "Pet Age",
                            "options": []
                          },
                          {
                            "name": "petColor",
                            "type": "enumeration",
                            "createdAt": "2020-02-12T20:58:26Z",
                            "updatedAt": "2020-02-12T20:58:26Z",
                            "label": "Pet Color",
                            "options": [
                              {
                                "value": "black",
                                "label": "Black"
                              },
                              {
                                "value": "brown",
                                "label": "Brown"
                              },
                              {
                                "value": "other",
                                "label": "Other"
                              },
                              {
                                "value": "white",
                                "label": "White"
                              },
                              {
                                "value": "yellow",
                                "label": "Yellow"
                              }
                            ]
                          },
                          {
                            "name": "petName",
                            "type": "string",
                            "createdAt": "2020-02-12T20:58:26Z",
                            "updatedAt": "2020-02-12T20:58:26Z",
                            "label": "Pet Name",
                            "options": []
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "post": {
          "tags": [
            "Templates"
          ],
          "summary": "Create an event template for your app",
          "description": "Event templates define the general structure for a custom timeline event. This includes formatted copy for its heading and details, as well as any custom property definitions. The event could be something like viewing a video, registering for a webinar, or filling out a survey. A single app can define multiple event templates.\n\nEvent templates will be created for contacts by default, but they can be created for companies, tickets, and deals as well.\n\nEach event template contains its own set of tokens and `Markdown` templates. These tokens can be associated with any CRM object properties via the `objectPropertyName` field to fully build out CRM objects.\n\nYou must create an event template before you can create events.",
          "operationId": "post-/integrators/timeline/v3/{appId}/event-templates",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the target app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "The new event template definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineEventTemplateCreateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimelineEventTemplate"
                  },
                  "example": {
                    "id": "1001298",
                    "objectType": "contacts",
                    "createdAt": "2020-02-12T20:58:26Z",
                    "updatedAt": "2020-02-12T20:58:26Z",
                    "name": "PetSpot Registration",
                    "headerTemplate": "Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})",
                    "detailTemplate": "Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n#### Questions\n{{#each extraData.questions}}\n  **{{question}}**: {{answer}}\n{{/each}}",
                    "tokens": [
                      {
                        "name": "petName",
                        "type": "string",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "label": "Pet Name",
                        "options": []
                      },
                      {
                        "name": "petAge",
                        "type": "number",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "label": "Pet Age",
                        "options": []
                      },
                      {
                        "name": "petColor",
                        "type": "enumeration",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "label": "Pet Color",
                        "options": [
                          {
                            "value": "white",
                            "label": "White"
                          },
                          {
                            "value": "black",
                            "label": "Black"
                          },
                          {
                            "value": "brown",
                            "label": "Brown"
                          },
                          {
                            "value": "other",
                            "label": "Other"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        }
      },
      "/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}": {
        "get": {
          "tags": [
            "Templates"
          ],
          "summary": "Gets a specific event template for your app",
          "description": "View the current state of a specific template and its tokens.",
          "operationId": "get-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}",
          "parameters": [
            {
              "name": "eventTemplateId",
              "in": "path",
              "description": "The event template ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the target app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimelineEventTemplate"
                  },
                  "example": {
                    "id": "1001298",
                    "objectType": "contacts",
                    "createdAt": "2020-02-12T20:58:26Z",
                    "updatedAt": "2020-02-12T20:58:26Z",
                    "name": "PetSpot Registration",
                    "headerTemplate": "Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})",
                    "detailTemplate": "Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n#### Questions\n{{#each extraData.questions}}\n  **{{question}}**: {{answer}}\n{{/each}}\n\nEDIT",
                    "tokens": [
                      {
                        "name": "petAge",
                        "type": "number",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "label": "Pet Age",
                        "options": []
                      },
                      {
                        "name": "petColor",
                        "type": "enumeration",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "label": "Pet Color",
                        "options": [
                          {
                            "value": "black",
                            "label": "Black"
                          },
                          {
                            "value": "brown",
                            "label": "Brown"
                          },
                          {
                            "value": "other",
                            "label": "Other"
                          },
                          {
                            "value": "white",
                            "label": "White"
                          },
                          {
                            "value": "yellow",
                            "label": "Yellow"
                          }
                        ]
                      },
                      {
                        "name": "petName",
                        "type": "string",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "label": "Pet Name",
                        "options": []
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "put": {
          "tags": [
            "Templates"
          ],
          "summary": "Update an existing event template",
          "description": "Updates an existing template and its tokens. This is primarily used to update the headerTemplate/detailTemplate, and those changes will take effect for existing events.\n\nYou can also update or replace all the tokens in the template here instead of doing individual API calls on the `/tokens` endpoint.",
          "operationId": "put-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}",
          "parameters": [
            {
              "name": "eventTemplateId",
              "in": "path",
              "description": "The event template ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the target app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "The updated event template definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineEventTemplateUpdateRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimelineEventTemplate"
                  },
                  "example": {
                    "id": "1001298",
                    "objectType": "contacts",
                    "createdAt": "2020-02-12T20:58:26Z",
                    "updatedAt": "2020-02-12T20:58:26Z",
                    "name": "PetSpot Registration",
                    "headerTemplate": "Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})",
                    "detailTemplate": "Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n#### Questions\n{{#each extraData.questions}}\n  **{{question}}**: {{answer}}\n{{/each}}\n\nEDIT",
                    "tokens": [
                      {
                        "name": "petAge",
                        "type": "number",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "label": "Pet Age",
                        "options": []
                      },
                      {
                        "name": "petColor",
                        "type": "enumeration",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "label": "Pet Color",
                        "options": [
                          {
                            "value": "white",
                            "label": "White"
                          },
                          {
                            "value": "black",
                            "label": "Black"
                          },
                          {
                            "value": "brown",
                            "label": "Brown"
                          },
                          {
                            "value": "yellow",
                            "label": "Yellow"
                          },
                          {
                            "value": "other",
                            "label": "Other"
                          }
                        ]
                      },
                      {
                        "name": "petName",
                        "type": "string",
                        "createdAt": "2020-02-12T20:58:26Z",
                        "updatedAt": "2020-02-12T20:58:26Z",
                        "label": "Pet Name",
                        "objectPropertyName": "firstname",
                        "options": []
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Templates"
          ],
          "summary": "Deletes an event template for the app",
          "description": "This will delete the event template. All associated events will be removed from search results and the timeline UI.\n\nThis action can't be undone, so it's highly recommended that you stop using any associated events before deleting a template.",
          "operationId": "delete-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}",
          "parameters": [
            {
              "name": "eventTemplateId",
              "in": "path",
              "description": "The event template ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the target app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        }
      },
      "/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens": {
        "post": {
          "tags": [
            "Tokens"
          ],
          "summary": "Adds a token to an existing event template",
          "description": "Once you've defined an event template, it's likely that you'll want to define tokens for it as well. You can do this on the event template itself or update individual tokens here.\n\nEvent type tokens allow you to attach custom data to events displayed in a timeline or used for list segmentation.\n\nYou can also use `objectPropertyName` to associate any CRM object properties. This will allow you to fully build out CRM objects.\n\nToken names should be unique across the template.",
          "operationId": "post-/integrators/timeline/v3/{appId}/event-templates/{eventTemplateId}/tokens",
          "parameters": [
            {
              "name": "eventTemplateId",
              "in": "path",
              "description": "The event template ID.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the target app.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "description": "The new token definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimelineEventTemplateToken"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimelineEventTemplateToken"
                  },
                  "example": {
                    "name": "petType",
                    "type": "enumeration",
                    "createdAt": "2020-02-12T20:58:26Z",
                    "updatedAt": "2020-02-12T20:58:26Z",
                    "label": "Pet Type",
                    "options": [
                      {
                        "value": "dog",
                        "label": "Dog"
                      },
                      {
                        "value": "cat",
                        "label": "Cat"
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "TimelineEvent": {
          "required": [
            "eventTemplateId",
            "tokens"
          ],
          "type": "object",
          "properties": {
            "eventTemplateId": {
              "type": "string",
              "description": "The event template ID.",
              "example": "1001298"
            },
            "extraData": {
              "type": "object",
              "properties": {},
              "description": "Additional event-specific data that can be interpreted by the template's markdown.",
              "example": {
                "questions": [
                  {
                    "answer": "Bark!",
                    "question": "Who's a good girl?"
                  },
                  {
                    "answer": "Woof!",
                    "question": "Do you wanna go on a walk?"
                  }
                ]
              }
            },
            "timelineIFrame": {
              "$ref": "#/components/schemas/TimelineEventIFrame"
            },
            "domain": {
              "type": "string",
              "description": "The event domain (often paired with utk)."
            },
            "tokens": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A collection of token keys and values associated with the template tokens.",
              "example": {
                "petAge": 3,
                "petName": "Art3mis",
                "petColor": "black"
              }
            },
            "id": {
              "type": "string",
              "description": "Identifier for the event. This is optional, and we recommend you do not pass this in. We will create one for you if you omit this. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness."
            },
            "utk": {
              "type": "string",
              "description": "Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie."
            },
            "email": {
              "type": "string",
              "description": "The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`).",
              "example": "art3mis-pup@petspot.com"
            },
            "objectId": {
              "type": "string",
              "description": "The CRM object identifier. This is required for every event other than contacts (where utk or email can be used)."
            },
            "timestamp": {
              "type": "string",
              "description": "The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline.",
              "format": "date-time"
            }
          },
          "description": "The state of the timeline event.",
          "example": {
            "eventTemplateId": "1001298",
            "email": "art3mis-pup@petspot.com",
            "tokens": {
              "petName": "Art3mis",
              "petAge": 3,
              "petColor": "black"
            },
            "extraData": {
              "questions": [
                {
                  "question": "Who's a good girl?",
                  "answer": "Bark!"
                },
                {
                  "question": "Do you wanna go on a walk?",
                  "answer": "Woof!"
                }
              ]
            },
            "timelineIFrame": {
              "linkLabel": "View Art3mis",
              "headerLabel": "Art3mis dog",
              "url": "https://my.petspot.com/pets/Art3mis",
              "width": 600,
              "height": 400
            }
          }
        },
        "TimelineEventIFrame": {
          "required": [
            "headerLabel",
            "height",
            "linkLabel",
            "url",
            "width"
          ],
          "type": "object",
          "properties": {
            "linkLabel": {
              "type": "string",
              "description": "The text displaying the link that will display the iframe.",
              "example": "View Art3mis"
            },
            "headerLabel": {
              "type": "string",
              "description": "The label of the modal window that displays the iframe contents.",
              "example": "Art3mis dog"
            },
            "width": {
              "type": "integer",
              "description": "The width of the modal window in pixels.",
              "format": "int32",
              "example": 600
            },
            "url": {
              "type": "string",
              "description": "The URI of the iframe contents.",
              "example": "https://my.petspot.com/pets/Art3mis"
            },
            "height": {
              "type": "integer",
              "description": "The height of the modal window in pixels.",
              "format": "int32",
              "example": 400
            }
          },
          "example": {
            "linkLabel": "View Art3mis",
            "headerLabel": "Art3mis dog",
            "url": "https://my.petspot.com/pets/Art3mis",
            "width": 600,
            "height": 400
          }
        },
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "EventDetail": {
          "required": [
            "details"
          ],
          "type": "object",
          "properties": {
            "details": {
              "type": "string",
              "description": "The details Markdown rendered as HTML.",
              "example": "<p>Registration occurred at Jan 30, 2020, 1:13:25 PM</p><h4>Questions</h4><p><strong>Who&#x27;s a good kitty?</strong>: Purr...</p><p><strong>Will you stop playing with that?</strong>: Meow!</p><p>EDIT</p>"
            }
          },
          "description": "The details Markdown rendered as HTML.",
          "example": {
            "details": "<p>Registration occurred at Jan 30, 2020, 1:13:25 PM</p><h4>Questions</h4><p><strong>Who&#x27;s a good kitty?</strong>: Purr...</p><p><strong>Will you stop playing with that?</strong>: Meow!</p><p>EDIT</p>"
          }
        },
        "TimelineEventTemplateCreateRequest": {
          "required": [
            "name",
            "objectType",
            "tokens"
          ],
          "type": "object",
          "properties": {
            "detailTemplate": {
              "type": "string",
              "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details.",
              "example": "Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n#### Questions\n{{#each extraData.questions}}\n  **{{question}}**: {{answer}}\n{{/each}}"
            },
            "name": {
              "type": "string",
              "description": "The template name.",
              "example": "PetSpot Registration"
            },
            "tokens": {
              "type": "array",
              "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.",
              "example": [
                {
                  "name": "petName",
                  "type": "string",
                  "label": "Pet Name"
                },
                {
                  "name": "petAge",
                  "type": "number",
                  "label": "Pet Age"
                },
                {
                  "name": "petColor",
                  "type": "enumeration",
                  "label": "Pet Color",
                  "options": [
                    {
                      "label": "White",
                      "value": "white"
                    },
                    {
                      "label": "Black",
                      "value": "black"
                    },
                    {
                      "label": "Brown",
                      "value": "brown"
                    },
                    {
                      "label": "Other",
                      "value": "other"
                    }
                  ]
                }
              ],
              "items": {
                "$ref": "#/components/schemas/TimelineEventTemplateToken"
              }
            },
            "headerTemplate": {
              "type": "string",
              "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header.",
              "example": "Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})"
            },
            "objectType": {
              "type": "string",
              "description": "The type of CRM object this template is for. [Contacts, companies, tickets, and deals] are supported.",
              "example": "contacts"
            }
          },
          "description": "State of the template definition being created.",
          "example": {
            "name": "PetSpot Registration",
            "objectType": "contacts",
            "headerTemplate": "Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})",
            "detailTemplate": "Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n#### Questions\n{{#each extraData.questions}}\n  **{{question}}**: {{answer}}\n{{/each}}",
            "tokens": [
              {
                "name": "petName",
                "label": "Pet Name",
                "type": "string"
              },
              {
                "name": "petAge",
                "label": "Pet Age",
                "type": "number"
              },
              {
                "name": "petColor",
                "label": "Pet Color",
                "type": "enumeration",
                "options": [
                  {
                    "value": "white",
                    "label": "White"
                  },
                  {
                    "value": "black",
                    "label": "Black"
                  },
                  {
                    "value": "brown",
                    "label": "Brown"
                  },
                  {
                    "value": "other",
                    "label": "Other"
                  }
                ]
              }
            ]
          }
        },
        "TimelineEventTemplateUpdateRequest": {
          "required": [
            "id",
            "name",
            "tokens"
          ],
          "type": "object",
          "properties": {
            "detailTemplate": {
              "type": "string",
              "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details.",
              "example": "Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n#### Questions\n{{#each extraData.questions}}\n  **{{question}}**: {{answer}}\n{{/each}}\n\nEDIT"
            },
            "name": {
              "type": "string",
              "description": "The template name.",
              "example": "PetSpot Registration"
            },
            "tokens": {
              "type": "array",
              "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.",
              "example": [
                {
                  "name": "petName",
                  "type": "string",
                  "label": "Pet Name",
                  "objectPropertyName": "firstname"
                },
                {
                  "name": "petAge",
                  "type": "number",
                  "label": "Pet Age"
                },
                {
                  "name": "petColor",
                  "type": "enumeration",
                  "label": "Pet Color",
                  "options": [
                    {
                      "label": "White",
                      "value": "white"
                    },
                    {
                      "label": "Black",
                      "value": "black"
                    },
                    {
                      "label": "Brown",
                      "value": "brown"
                    },
                    {
                      "label": "Yellow",
                      "value": "yellow"
                    },
                    {
                      "label": "Other",
                      "value": "other"
                    }
                  ]
                }
              ],
              "items": {
                "$ref": "#/components/schemas/TimelineEventTemplateToken"
              }
            },
            "id": {
              "type": "string",
              "description": "The template ID.",
              "example": "1001298"
            },
            "headerTemplate": {
              "type": "string",
              "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header.",
              "example": "Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})"
            }
          },
          "description": "State of the template definition being updated.",
          "example": {
            "id": "1001298",
            "name": "PetSpot Registration",
            "headerTemplate": "Registered for [{{petName}}](https://my.petspot.com/pets/{{petName}})",
            "detailTemplate": "Registration occurred at {{#formatDate timestamp}}{{/formatDate}}\n\n#### Questions\n{{#each extraData.questions}}\n  **{{question}}**: {{answer}}\n{{/each}}\n\nEDIT",
            "tokens": [
              {
                "name": "petName",
                "label": "Pet Name",
                "type": "string",
                "objectPropertyName": "firstname"
              },
              {
                "name": "petAge",
                "label": "Pet Age",
                "type": "number"
              },
              {
                "name": "petColor",
                "label": "Pet Color",
                "type": "enumeration",
                "options": [
                  {
                    "value": "white",
                    "label": "White"
                  },
                  {
                    "value": "black",
                    "label": "Black"
                  },
                  {
                    "value": "brown",
                    "label": "Brown"
                  },
                  {
                    "value": "yellow",
                    "label": "Yellow"
                  },
                  {
                    "value": "other",
                    "label": "Other"
                  }
                ]
              }
            ]
          }
        },
        "CollectionResponseTimelineEventTemplateNoPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TimelineEventTemplate"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "BatchResponseTimelineEventResponse": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "description": "The time the request was completed.",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "description": "The time the request occurred.",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "description": "The time the request began processing.",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "description": "Successfully created events.",
              "example": [
                {
                  "id": "petspot:1001298:art3mis-pup@petspot.com-6edaa73d-d734-404d-908f-74774d58ac2b",
                  "email": "art3mis-pup@petspot.com",
                  "tokens": {
                    "petAge": "3",
                    "petName": "Art3mis",
                    "petColor": "black"
                  },
                  "objectId": "28001",
                  "extraData": {
                    "questions": [
                      {
                        "answer": "Bark!",
                        "question": "Who's a good girl?"
                      },
                      {
                        "answer": "Woof!",
                        "question": "Do you wanna go on a walk?"
                      }
                    ]
                  },
                  "timestamp": "2020-01-30T18:13:25.665Z",
                  "objectType": "contacts",
                  "timelineIFrame": {
                    "url": "https://my.petspot.com/pets/Art3mis",
                    "width": 600,
                    "height": 400,
                    "linkLabel": "View Art3mis",
                    "headerLabel": "Art3mis dog"
                  },
                  "eventTemplateId": "1001298"
                },
                {
                  "id": "petspot:1001298:pocket-tiger@petspot.com-0df6277b-6eba-4d1f-8c19-1994cbfaa4ca",
                  "email": "pocket-tiger@petspot.com",
                  "tokens": {
                    "petAge": "3",
                    "petName": "Pocket",
                    "petColor": "yellow"
                  },
                  "objectId": "28651",
                  "extraData": {
                    "questions": [
                      {
                        "answer": "Purr...",
                        "question": "Who's a good kitty?"
                      },
                      {
                        "answer": "Meow!",
                        "question": "Will you stop playing with that?"
                      }
                    ]
                  },
                  "timestamp": "2020-01-30T18:13:25.665Z",
                  "objectType": "contacts",
                  "timelineIFrame": {
                    "url": "https://my.petspot.com/pets/Pocket",
                    "width": 600,
                    "height": 400,
                    "linkLabel": "View Pocket",
                    "headerLabel": "Pocket Tiger"
                  },
                  "eventTemplateId": "1001298"
                }
              ],
              "items": {
                "$ref": "#/components/schemas/TimelineEventResponse"
              }
            },
            "status": {
              "type": "string",
              "description": "The status of the batch response. Should always be COMPLETED if processed.",
              "example": "COMPLETE",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          },
          "description": "The state of the batch event request.",
          "example": {
            "results": [
              {
                "objectType": "contacts",
                "id": "petspot:1001298:art3mis-pup@petspot.com-6edaa73d-d734-404d-908f-74774d58ac2b",
                "eventTemplateId": "1001298",
                "email": "art3mis-pup@petspot.com",
                "objectId": "28001",
                "timestamp": "2020-01-30T18:13:25.665Z",
                "tokens": {
                  "petName": "Art3mis",
                  "petColor": "black",
                  "petAge": "3"
                },
                "extraData": {
                  "questions": [
                    {
                      "question": "Who's a good girl?",
                      "answer": "Bark!"
                    },
                    {
                      "question": "Do you wanna go on a walk?",
                      "answer": "Woof!"
                    }
                  ]
                },
                "timelineIFrame": {
                  "linkLabel": "View Art3mis",
                  "headerLabel": "Art3mis dog",
                  "url": "https://my.petspot.com/pets/Art3mis",
                  "width": 600,
                  "height": 400
                }
              },
              {
                "objectType": "contacts",
                "id": "petspot:1001298:pocket-tiger@petspot.com-0df6277b-6eba-4d1f-8c19-1994cbfaa4ca",
                "eventTemplateId": "1001298",
                "email": "pocket-tiger@petspot.com",
                "objectId": "28651",
                "timestamp": "2020-01-30T18:13:25.665Z",
                "tokens": {
                  "petName": "Pocket",
                  "petColor": "yellow",
                  "petAge": "3"
                },
                "extraData": {
                  "questions": [
                    {
                      "question": "Who's a good kitty?",
                      "answer": "Purr..."
                    },
                    {
                      "question": "Will you stop playing with that?",
                      "answer": "Meow!"
                    }
                  ]
                },
                "timelineIFrame": {
                  "linkLabel": "View Pocket",
                  "headerLabel": "Pocket Tiger",
                  "url": "https://my.petspot.com/pets/Pocket",
                  "width": 600,
                  "height": 400
                }
              }
            ],
            "status": "COMPLETE",
            "startedAt": "2020-01-30T18:13:24.974023Z",
            "completedAt": "2020-01-30T18:13:26.227559Z"
          }
        },
        "BatchInputTimelineEvent": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "description": "A collection of timeline events we want to create.",
              "example": [
                {
                  "email": "art3mis-pup@petspot.com",
                  "tokens": {
                    "petAge": 3,
                    "petName": "Art3mis",
                    "petColor": "black"
                  },
                  "extraData": {
                    "questions": [
                      {
                        "answer": "Bark!",
                        "question": "Who's a good girl?"
                      },
                      {
                        "answer": "Woof!",
                        "question": "Do you wanna go on a walk?"
                      }
                    ]
                  },
                  "timelineIFrame": {
                    "url": "https://my.petspot.com/pets/Art3mis",
                    "width": 600,
                    "height": 400,
                    "linkLabel": "View Art3mis",
                    "headerLabel": "Art3mis dog"
                  },
                  "eventTemplateId": "1001298"
                },
                {
                  "email": "pocket-tiger@petspot.com",
                  "tokens": {
                    "petAge": 3,
                    "petName": "Pocket",
                    "petColor": "yellow"
                  },
                  "extraData": {
                    "questions": [
                      {
                        "answer": "Purr...",
                        "question": "Who's a good kitty?"
                      },
                      {
                        "answer": "Meow!",
                        "question": "Will you stop playing with that?"
                      }
                    ]
                  },
                  "timelineIFrame": {
                    "url": "https://my.petspot.com/pets/Pocket",
                    "width": 600,
                    "height": 400,
                    "linkLabel": "View Pocket",
                    "headerLabel": "Pocket Tiger"
                  },
                  "eventTemplateId": "1001298"
                }
              ],
              "items": {
                "$ref": "#/components/schemas/TimelineEvent"
              }
            }
          },
          "description": "Used to create timeline events in batches.",
          "example": {
            "inputs": [
              {
                "eventTemplateId": "1001298",
                "email": "art3mis-pup@petspot.com",
                "tokens": {
                  "petName": "Art3mis",
                  "petAge": 3,
                  "petColor": "black"
                },
                "extraData": {
                  "questions": [
                    {
                      "question": "Who's a good girl?",
                      "answer": "Bark!"
                    },
                    {
                      "question": "Do you wanna go on a walk?",
                      "answer": "Woof!"
                    }
                  ]
                },
                "timelineIFrame": {
                  "linkLabel": "View Art3mis",
                  "headerLabel": "Art3mis dog",
                  "url": "https://my.petspot.com/pets/Art3mis",
                  "width": 600,
                  "height": 400
                }
              },
              {
                "eventTemplateId": "1001298",
                "email": "pocket-tiger@petspot.com",
                "tokens": {
                  "petName": "Pocket",
                  "petAge": 3,
                  "petColor": "yellow"
                },
                "extraData": {
                  "questions": [
                    {
                      "question": "Who's a good kitty?",
                      "answer": "Purr..."
                    },
                    {
                      "question": "Will you stop playing with that?",
                      "answer": "Meow!"
                    }
                  ]
                },
                "timelineIFrame": {
                  "linkLabel": "View Pocket",
                  "headerLabel": "Pocket Tiger",
                  "url": "https://my.petspot.com/pets/Pocket",
                  "width": 600,
                  "height": 400
                }
              }
            ]
          }
        },
        "TimelineEventTemplate": {
          "required": [
            "id",
            "name",
            "objectType",
            "tokens"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "description": "The date and time that the Event Template was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
              "format": "date-time"
            },
            "detailTemplate": {
              "type": "string",
              "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details."
            },
            "name": {
              "type": "string",
              "description": "The template name."
            },
            "tokens": {
              "type": "array",
              "description": "A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.",
              "items": {
                "$ref": "#/components/schemas/TimelineEventTemplateToken"
              }
            },
            "id": {
              "type": "string",
              "description": "The template ID."
            },
            "headerTemplate": {
              "type": "string",
              "description": "This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header."
            },
            "objectType": {
              "type": "string",
              "description": "The type of CRM object this template is for. [Contacts, companies, tickets, and deals] are supported."
            },
            "updatedAt": {
              "type": "string",
              "description": "The date and time that the Event Template was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
              "format": "date-time"
            }
          },
          "description": "The current state of the template definition."
        },
        "TimelineEventTemplateTokenOption": {
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "TimelineEventTemplateToken": {
          "required": [
            "label",
            "name",
            "type"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "description": "The date and time that the Event Template Token was created, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
              "format": "date-time"
            },
            "options": {
              "type": "array",
              "description": "If type is `enumeration`, we should have a list of options to choose from.",
              "example": [
                {
                  "label": "Dog",
                  "value": "dog"
                },
                {
                  "label": "Cat",
                  "value": "cat"
                }
              ],
              "items": {
                "$ref": "#/components/schemas/TimelineEventTemplateTokenOption"
              }
            },
            "name": {
              "type": "string",
              "description": "The name of the token referenced in the templates. This must be unique for the specific template. It may only contain alphanumeric characters, periods, dashes, or underscores (. - _).",
              "example": "petType"
            },
            "label": {
              "type": "string",
              "description": "Used for list segmentation and reporting.",
              "example": "Pet Type"
            },
            "objectPropertyName": {
              "type": "string",
              "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API.",
              "example": "customPropertyPetType"
            },
            "type": {
              "type": "string",
              "description": "The data type of the token. You can currently choose from [string, number, date, enumeration].",
              "example": "enumeration",
              "enum": [
                "date",
                "enumeration",
                "number",
                "string"
              ]
            },
            "updatedAt": {
              "type": "string",
              "description": "The date and time that the Event Template Token was last updated, as an ISO 8601 timestamp. Will be null if the template was created before Feb 18th, 2020.",
              "format": "date-time"
            }
          },
          "description": "State of the token definition.",
          "example": {
            "name": "petType",
            "label": "Pet Type",
            "type": "enumeration",
            "createdAt": "2020-02-12T20:58:26Z",
            "updatedAt": "2020-02-12T20:58:26Z",
            "objectPropertyName": "customPropertyPetType",
            "options": [
              {
                "value": "dog",
                "label": "Dog"
              },
              {
                "value": "cat",
                "label": "Cat"
              }
            ]
          }
        },
        "TimelineEventResponse": {
          "required": [
            "eventTemplateId",
            "id",
            "objectType",
            "tokens"
          ],
          "type": "object",
          "properties": {
            "eventTemplateId": {
              "type": "string",
              "description": "The event template ID.",
              "example": "1001298"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "extraData": {
              "type": "object",
              "properties": {},
              "description": "Additional event-specific data that can be interpreted by the template's markdown.",
              "example": {
                "questions": [
                  {
                    "answer": "Bark!",
                    "question": "Who's a good girl?"
                  },
                  {
                    "answer": "Woof!",
                    "question": "Do you wanna go on a walk?"
                  }
                ]
              }
            },
            "timelineIFrame": {
              "$ref": "#/components/schemas/TimelineEventIFrame"
            },
            "domain": {
              "type": "string",
              "description": "The event domain (often paired with utk)."
            },
            "tokens": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A collection of token keys and values associated with the template tokens.",
              "example": {
                "petAge": "3",
                "petName": "Art3mis",
                "petColor": "black"
              }
            },
            "id": {
              "type": "string",
              "description": "Identifier for the event. This should be unique to the app and event template. If you use the same ID for different CRM objects, the last to be processed will win and the first will not have a record. You can also use `{{uuid}}` anywhere in the ID to generate a unique string, guaranteeing uniqueness.",
              "example": "petspot:1001298:art3mis-pup@petspot.com-004-invalid"
            },
            "utk": {
              "type": "string",
              "description": "Use the `utk` parameter to associate an event with a contact by `usertoken`. This is recommended if you don't know a user's email, but have an identifying user token in your cookie."
            },
            "email": {
              "type": "string",
              "description": "The email address used for contact-specific events. This can be used to identify existing contacts, create new ones, or change the email for an existing contact (if paired with the `objectId`).",
              "example": "art3mis-pup@petspot.com"
            },
            "objectId": {
              "type": "string",
              "description": "The CRM object identifier. This is required for every event other than contacts (where utk or email can be used).",
              "example": "28001"
            },
            "timestamp": {
              "type": "string",
              "description": "The time the event occurred. If not passed in, the curren time will be assumed. This is used to determine where an event is shown on a CRM object's timeline.",
              "format": "date-time"
            },
            "objectType": {
              "type": "string",
              "description": "The ObjectType associated with the EventTemplate.",
              "example": "contacts"
            }
          },
          "description": "The current state of the timeline event.",
          "example": {
            "objectType": "contacts",
            "id": "petspot:1001298:art3mis-pup@petspot.com-004-invalid",
            "eventTemplateId": "1001298",
            "email": "art3mis-pup@petspot.com",
            "objectId": "28001",
            "timestamp": "2020-01-30T18:37:15.569Z",
            "tokens": {
              "petName": "Art3mis",
              "petColor": "black",
              "petAge": "3"
            },
            "extraData": {
              "questions": [
                {
                  "question": "Who's a good girl?",
                  "answer": "Bark!"
                },
                {
                  "question": "Do you wanna go on a walk?",
                  "answer": "Woof!"
                }
              ]
            },
            "timelineIFrame": {
              "linkLabel": "View Art3mis",
              "headerLabel": "Art3mis dog",
              "url": "https://my.petspot.com/pets/Art3mis",
              "width": 600,
              "height": 400
            }
          }
        },
        "TimelineEventTemplateTokenUpdateRequest": {
          "required": [
            "label"
          ],
          "type": "object",
          "properties": {
            "options": {
              "type": "array",
              "description": "If type is `enumeration`, we should have a list of options to choose from.",
              "example": [
                {
                  "label": "Dog",
                  "value": "dog"
                },
                {
                  "label": "Cat",
                  "value": "cat"
                },
                {
                  "label": "Bird",
                  "value": "bird"
                }
              ],
              "items": {
                "$ref": "#/components/schemas/TimelineEventTemplateTokenOption"
              }
            },
            "label": {
              "type": "string",
              "description": "Used for list segmentation and reporting.",
              "example": "petType edit"
            },
            "objectPropertyName": {
              "type": "string",
              "description": "The name of the CRM object property. This will populate the CRM object property associated with the event. With enough of these, you can fully build CRM objects via the Timeline API."
            }
          },
          "description": "State of the token definition for update requests.",
          "example": {
            "label": "petType edit",
            "options": [
              {
                "value": "dog",
                "label": "Dog"
              },
              {
                "value": "cat",
                "label": "Cat"
              },
              {
                "value": "bird",
                "label": "Bird"
              }
            ]
          }
        },
        "BatchResponseTimelineEventResponseWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TimelineEventResponse"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "tickets": "Read and write tickets",
                "timeline": "Create timeline events"
              }
            }
          }
        },
        "developer_hapikey": {
          "type": "apiKey",
          "name": "hapikey",
          "in": "query"
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.schemas.contacts.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.schemas.companies.write": " ",
                "crm.objects.companies.write": " ",
                "crm.objects.deals.write": " ",
                "crm.schemas.deals.write": " ",
                "crm.objects.contacts.read": " ",
                "crm.schemas.contacts.read": " ",
                "crm.schemas.companies.read": " ",
                "crm.objects.companies.read": " ",
                "crm.schemas.deals.read": " ",
                "crm.objects.deals.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "STARTER"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Contacts",
      "description": "",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "Retrieve a contact list by ID to bring that contact data into your external system.",
      "x-hubspot-related-documentation": [
        {
          "name": "Contacts Guide",
          "url": "https://hubspot.dev/guides/api/crm/contacts"
        }
      ],
      "x-hubspot-introduction": "Use the contact lists API to create and manage contact lists."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Basic"
      },
      {
        "name": "Public_Object"
      },
      {
        "name": "GDPR"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/objects/contacts/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of contacts by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/contacts/batch/read_read",
          "parameters": [
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts/{contactId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read an Object identified by `{contactId}`. `{contactId}` refers to the internal object ID.  Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/contacts/{contactId}_getById",
          "parameters": [
            {
              "name": "contactId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Basic"
          ],
          "summary": "Archive",
          "description": "Move an Object identified by `{contactId}` to the recycling bin.",
          "operationId": "delete-/crm/v3/objects/contacts/{contactId}_archive",
          "parameters": [
            {
              "name": "contactId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{contactId}`. `{contactId}` refers to the internal object ID. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
          "operationId": "patch-/crm/v3/objects/contacts/{contactId}_update",
          "parameters": [
            {
              "name": "contactId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts/merge": {
        "post": {
          "tags": [
            "Public_Object"
          ],
          "summary": "Merge two contacts with same type",
          "operationId": "post-/crm/v3/objects/contacts/merge_merge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMergeInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of contacts by ID",
          "operationId": "post-/crm/v3/objects/contacts/batch/archive_archive",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of contacts",
          "operationId": "post-/crm/v3/objects/contacts/batch/create_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts/batch/update": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Update a batch of contacts",
          "operationId": "post-/crm/v3/objects/contacts/batch/update_update",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts/gdpr-delete": {
        "post": {
          "tags": [
            "GDPR"
          ],
          "summary": "GDPR DELETE",
          "description": "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
          "operationId": "post-/crm/v3/objects/contacts/gdpr-delete_purge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGdprDeleteInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "List",
          "description": "Read a page of contacts. Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/contacts_getPage",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 10
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a contact with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard contacts is provided.",
          "operationId": "post-/crm/v3/objects/contacts_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/contacts/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "post-/crm/v3/objects/contacts/search_doSearch",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            }
          ],
          "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "BatchResponseSimplePublicObject": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "SimplePublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "BatchReadInputSimplePublicObjectId": {
          "required": [
            "inputs",
            "properties",
            "propertiesWithHistory"
          ],
          "type": "object",
          "properties": {
            "propertiesWithHistory": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "idProperty": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectId": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "company": "Biglytics",
              "createdate": "2019-10-30T03:30:17.883Z",
              "email": "bcooper@biglytics.net",
              "firstname": "Bryan",
              "lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "lastname": "Cooper",
              "phone": "(877) 929-0687",
              "website": "biglytics.net"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "required": [
            "after",
            "filterGroups",
            "limit",
            "properties",
            "sorts"
          ],
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "BatchResponseSimplePublicObjectWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "PublicGdprDeleteInput": {
          "required": [
            "objectId"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectInput": {
          "required": [
            "properties"
          ],
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            }
          },
          "example": {
            "properties": {
              "email": "bcooper@biglytics.net",
              "phone": "(877) 929-0687",
              "company": "Biglytics",
              "website": "biglytics.net",
              "lastname": "Cooper",
              "firstname": "Bryan"
            },
            "associations": []
          }
        },
        "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
              }
            }
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "PublicMergeInput": {
          "required": [
            "objectIdToMerge",
            "primaryObjectId"
          ],
          "type": "object",
          "properties": {
            "objectIdToMerge": {
              "type": "string"
            },
            "primaryObjectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "email": "bcooper@biglytics.net",
                "phone": "(877) 929-0687",
                "company": "Biglytics",
                "website": "biglytics.net",
                "lastname": "Cooper",
                "firstname": "Bryan"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "properties": {
              "company": "Biglytics",
              "createdate": "2019-10-30T03:30:17.883Z",
              "email": "bcooper@biglytics.net",
              "firstname": "Bryan",
              "lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "lastname": "Cooper",
              "phone": "(877) 929-0687",
              "website": "biglytics.net"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInput": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInput"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectInputForCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectBatchInput": {
          "required": [
            "id",
            "properties"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "example": "my_unique_property_name"
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "email": "bcooper@biglytics.net",
                "phone": "(877) 929-0687",
                "company": "Biglytics",
                "website": "biglytics.net",
                "lastname": "Cooper",
                "firstname": "Bryan"
              }
            }
          },
          "example": {
            "id": "1",
            "properties": {
              "email": "bcooper@biglytics.net",
              "phone": "(877) 929-0687",
              "company": "Biglytics",
              "website": "biglytics.net",
              "lastname": "Cooper",
              "firstname": "Bryan"
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "required": [
            "associations",
            "properties"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "email": "bcooper@biglytics.net",
                "phone": "(877) 929-0687",
                "company": "Biglytics",
                "website": "biglytics.net",
                "lastname": "Cooper",
                "firstname": "Bryan"
              }
            }
          },
          "example": {
            "properties": {
              "email": "bcooper@biglytics.net",
              "phone": "(877) 929-0687",
              "company": "Biglytics",
              "website": "biglytics.net",
              "lastname": "Cooper",
              "firstname": "Bryan"
            },
            "associations": []
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "media_bridge.read": "Read media and media events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.custom.read": "View custom object records",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.deals.read": " ",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.deals.write": " ",
                "crm.objects.quotes.read": "Quotes",
                "crm.objects.line_items.write": "Line Items",
                "crm.objects.companies.read": " ",
                "crm.objects.companies.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.objects.contacts.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Feedback Submissions",
      "description": "",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "To prepare for an upcoming product redesign, programmatically retrieve all feedback survey responses to better understand customer sentiment.",
      "x-hubspot-related-documentation": [
        {
          "name": "Feedback Submissions Guide",
          "url": "https://hubspot.dev/guides/api/crm/feedback-submissions"
        }
      ],
      "x-hubspot-introduction": "Use the feedback submissions API to retrieve information submitted to your NPS, CSAT, CES, and custom feedback surveys."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Basic"
      },
      {
        "name": "Public_Object"
      },
      {
        "name": "GDPR"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/objects/feedback_submissions/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of feedback submissions by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/feedback_submissions/batch/read_read",
          "parameters": [
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        }
      },
      "/crm/v3/objects/feedback_submissions/{feedbackSubmissionId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read an Object identified by `{feedbackSubmissionId}`. `{feedbackSubmissionId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/feedback_submissions/{feedbackSubmissionId}_getById",
          "parameters": [
            {
              "name": "feedbackSubmissionId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Basic"
          ],
          "summary": "Archive",
          "description": "Move an Object identified by `{feedbackSubmissionId}` to the recycling bin.",
          "operationId": "delete-/crm/v3/objects/feedback_submissions/{feedbackSubmissionId}_archive",
          "parameters": [
            {
              "name": "feedbackSubmissionId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{feedbackSubmissionId}`. `{feedbackSubmissionId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
          "operationId": "patch-/crm/v3/objects/feedback_submissions/{feedbackSubmissionId}_update",
          "parameters": [
            {
              "name": "feedbackSubmissionId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        }
      },
      "/crm/v3/objects/feedback_submissions/merge": {
        "post": {
          "tags": [
            "Public_Object"
          ],
          "summary": "Merge two feedback submissions with same type",
          "operationId": "post-/crm/v3/objects/feedback_submissions/merge_merge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMergeInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        }
      },
      "/crm/v3/objects/feedback_submissions/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of feedback submissions by ID",
          "operationId": "post-/crm/v3/objects/feedback_submissions/batch/archive_archive",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        }
      },
      "/crm/v3/objects/feedback_submissions/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of feedback submissions",
          "operationId": "post-/crm/v3/objects/feedback_submissions/batch/create_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        }
      },
      "/crm/v3/objects/feedback_submissions/batch/update": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Update a batch of feedback submissions",
          "operationId": "post-/crm/v3/objects/feedback_submissions/batch/update_update",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        }
      },
      "/crm/v3/objects/feedback_submissions/gdpr-delete": {
        "post": {
          "tags": [
            "GDPR"
          ],
          "summary": "GDPR DELETE",
          "description": "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
          "operationId": "post-/crm/v3/objects/feedback_submissions/gdpr-delete_purge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGdprDeleteInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        }
      },
      "/crm/v3/objects/feedback_submissions": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "List",
          "description": "Read a page of feedback submissions. Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/feedback_submissions_getPage",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 10
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        },
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a feedback submission with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard feedback submissions is provided.",
          "operationId": "post-/crm/v3/objects/feedback_submissions_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ]
        }
      },
      "/crm/v3/objects/feedback_submissions/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "post-/crm/v3/objects/feedback_submissions/search_doSearch",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": []
            },
            {
              "private_apps_legacy": []
            }
          ],
          "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "BatchResponseSimplePublicObject": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "SimplePublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "BatchReadInputSimplePublicObjectId": {
          "required": [
            "inputs",
            "properties",
            "propertiesWithHistory"
          ],
          "type": "object",
          "properties": {
            "propertiesWithHistory": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "idProperty": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectId": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "hs_content": "What a great product!",
              "hs_ingestion_id": "fd61286d-102b-4fcc-b486-3486b4ceafc2",
              "hs_response_group": "PROMOTER",
              "hs_submission_name": "Customer Satisfaction Survey - bcooper@biglytics.net",
              "hs_survey_channel": "EMAIL",
              "hs_survey_id": "5",
              "hs_survey_name": "Customer Satisfaction Survey",
              "hs_survey_type": "CSAT",
              "hs_value": "2"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "required": [
            "after",
            "filterGroups",
            "limit",
            "properties",
            "sorts"
          ],
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "BatchResponseSimplePublicObjectWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "PublicGdprDeleteInput": {
          "required": [
            "objectId"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectInput": {
          "required": [
            "properties"
          ],
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            }
          },
          "example": {
            "properties": {
              "property_string": "value",
              "property_number": "17",
              "property_date": "1572480000000",
              "property_radio": "option_1",
              "property_dropdown": "choice_b",
              "property_checkbox": "false",
              "property_multiple_checkboxes": "chocolate;strawberry"
            }
          }
        },
        "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
              }
            }
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "PublicMergeInput": {
          "required": [
            "objectIdToMerge",
            "primaryObjectId"
          ],
          "type": "object",
          "properties": {
            "objectIdToMerge": {
              "type": "string"
            },
            "primaryObjectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "properties": {
              "hs_content": "What a great product!",
              "hs_ingestion_id": "fd61286d-102b-4fcc-b486-3486b4ceafc2",
              "hs_response_group": "PROMOTER",
              "hs_submission_name": "Customer Satisfaction Survey - bcooper@biglytics.net",
              "hs_survey_channel": "EMAIL",
              "hs_survey_id": "5",
              "hs_survey_name": "Customer Satisfaction Survey",
              "hs_survey_type": "CSAT",
              "hs_value": "2"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInput": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInput"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectInputForCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectBatchInput": {
          "required": [
            "id",
            "properties"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "example": "my_unique_property_name"
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "required": [
            "associations",
            "properties"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "media_bridge.read": "Read media and media events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.custom.read": "View custom object records",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.deals.read": " ",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.deals.write": " ",
                "crm.objects.quotes.read": "Quotes",
                "crm.objects.line_items.write": "Line Items",
                "crm.objects.companies.read": " ",
                "crm.objects.companies.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.objects.contacts.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "CRM Objects",
      "description": "CRM objects such as companies, contacts, deals, line items, products, tickets, and quotes are standard objects in HubSpot’s CRM. These core building blocks support custom properties, store critical information, and play a central role in the HubSpot application.\n\n## Supported Object Types\n\nThis API provides access to collections of CRM objects, which return a map of property names to values. Each object type has its own set of default properties, which can be found by exploring the [CRM Object Properties API](https://developers.hubspot.com/docs/methods/crm-properties/crm-properties-overview).\n\n|Object Type |Properties returned by default |\n|--|--|\n| `companies` | `name`, `domain` |\n| `contacts` | `firstname`, `lastname`, `email` |\n| `deals` | `dealname`, `amount`, `closedate`, `pipeline`, `dealstage` |\n| `products` | `name`, `description`, `price` |\n| `tickets` | `content`, `hs_pipeline`, `hs_pipeline_stage`, `hs_ticket_category`, `hs_ticket_priority`, `subject` |\n\nFind a list of all properties for an object type using the [CRM Object Properties](https://developers.hubspot.com/docs/methods/crm-properties/get-properties) API. e.g. `GET https://api.hubapi.com/properties/v2/companies/properties`. Change the properties returned in the response using the `properties` array in the request body.",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "After creating a Cars custom object, you can create a CRM record for each car, then associate it with the contact who bought it.",
      "x-hubspot-related-documentation": [
        {
          "name": "Custom Objects Guide",
          "url": "https://developers.hubspot.com/beta-docs/guides/api/crm/objects/crm-custom-objects"
        }
      ],
      "x-hubspot-introduction": "Use the custom object records API to create individual CRM records under a custom object. You can then manage these records like you would other CRM records, such as contacts and companies."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Basic"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/objects/{objectType}/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of objects by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/{objectType}/batch/read_read",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/{objectType}/{objectId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read an Object identified by `{objectId}`. `{objectId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/{objectType}/{objectId}_getById",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objectId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Basic"
          ],
          "summary": "Archive",
          "description": "Move an Object identified by `{objectId}` to the recycling bin.",
          "operationId": "delete-/crm/v3/objects/{objectType}/{objectId}_archive",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objectId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{objectId}`or optionally a unique property value as specified by the `idProperty` query param. `{objectId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
          "operationId": "patch-/crm/v3/objects/{objectType}/{objectId}_update",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "objectId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/{objectType}/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of objects by ID",
          "operationId": "post-/crm/v3/objects/{objectType}/batch/archive_archive",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/{objectType}/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of objects",
          "operationId": "post-/crm/v3/objects/{objectType}/batch/create_create",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/{objectType}/batch/update": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Update a batch of objects by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/{objectType}/batch/update_update",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/{objectType}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "List",
          "description": "Read a page of objects. Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/{objectType}_getPage",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 10
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a CRM object with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard objects is provided.",
          "operationId": "post-/crm/v3/objects/{objectType}_create",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/{objectType}/batch/upsert": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create or update a batch of objects by unique property values",
          "description": "Create or update records identified by a unique property value as specified by the `idProperty` query param. `idProperty` query param refers to a property whose values are unique for the object.",
          "operationId": "post-/crm/v3/objects/{objectType}/batch/upsert",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInputUpsert"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/{objectType}/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "post-/crm/v3/objects/{objectType}/search_doSearch",
          "parameters": [
            {
              "name": "objectType",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.read"
              ]
            },
            {
              "private_apps_legacy": [
                "contacts"
              ]
            },
            {
              "oauth2": [
                "crm.objects.subscriptions.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "media_bridge.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.companies.write"
              ]
            },
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": [
                "crm.objects.users.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.users.write"
              ]
            },
            {
              "private_apps_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.write"
              ]
            },
            {
              "oauth2_legacy": [
                "e-commerce"
              ]
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.goals.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.orders.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.commercepayments.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.deals.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.invoices.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.leads.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.contacts.write"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.leads.read"
              ]
            },
            {
              "oauth2_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "private_apps_legacy": [
                "crm.objects.custom.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.carts.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.quotes.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "oauth2": [
                "crm.objects.carts.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.partner-clients.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.quotes.read"
              ]
            }
          ],
          "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "BatchResponseSimplePublicObject": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "SimplePublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "BatchReadInputSimplePublicObjectId": {
          "required": [
            "inputs",
            "properties",
            "propertiesWithHistory"
          ],
          "type": "object",
          "properties": {
            "propertiesWithHistory": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "idProperty": {
              "type": "string",
              "description": "The name of a property whose values are unique for this object"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectId": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInputUpsert": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInputUpsert"
              }
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "property_string": "value",
              "property_number": "17",
              "property_date": "1572480000000",
              "property_radio": "option_1",
              "property_dropdown": "choice_b",
              "property_checkbox": "false",
              "property_multiple_checkboxes": "chocolate;strawberry"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "required": [
            "after",
            "filterGroups",
            "limit",
            "properties",
            "sorts"
          ],
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "SimplePublicObjectBatchInputUpsert": {
          "required": [
            "id",
            "properties"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "description": "The name of a property whose values are unique for this object"
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "BatchResponseSimplePublicObjectWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "SimplePublicObjectInput": {
          "required": [
            "properties"
          ],
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            }
          },
          "example": {
            "properties": {
              "property_string": "value",
              "property_number": "17",
              "property_date": "1572480000000",
              "property_radio": "option_1",
              "property_dropdown": "choice_b",
              "property_checkbox": "false",
              "property_multiple_checkboxes": "chocolate;strawberry"
            }
          }
        },
        "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
              }
            }
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInput": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInput"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectInputForCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectBatchInput": {
          "required": [
            "id",
            "properties"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "description": "The name of a property whose values are unique for this object",
              "example": "my_unique_property_name"
            },
            "id": {
              "type": "string",
              "description": "The id to be updated. This can be the object id, or the unique property value of the idProperty property"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "required": [
            "associations",
            "properties"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records",
                "media_bridge.read": "Read media and media events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.custom.read": "View custom object records"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.companies.write": " ",
                "crm.objects.users.read": "Read User CRM objects",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.leads.write": "Modify lead objects",
                "crm.objects.contacts.read": " ",
                "crm.objects.invoices.read": "Read invoices objects",
                "crm.objects.quotes.read": "Quotes",
                "crm.objects.partner-clients.write": "Modify Partner Client CRM objects",
                "crm.objects.partner-clients.read": "View Partner Client CRM objects",
                "crm.objects.deals.read": " ",
                "crm.objects.carts.read": "Read carts",
                "crm.objects.commercepayments.read": "Read the COMMERCE_PAYMENT object.",
                "crm.objects.contacts.write": " ",
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.companies.read": " ",
                "crm.objects.carts.write": "Write cart",
                "crm.objects.deals.write": " ",
                "crm.objects.users.write": "Write User CRM objects",
                "crm.objects.orders.read": "Read Orders",
                "crm.objects.leads.read": "Read lead objects",
                "crm.objects.orders.write": "Write orders",
                "crm.objects.subscriptions.read": "Read Commerce Subscriptions",
                "crm.objects.line_items.write": "Line Items"
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Video Conferencing Extension",
      "description": "These APIs allow you to specify URLs that can be used to interact with a video conferencing application, to allow HubSpot to add video conference links to meeting requests with contacts.",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "STARTER"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "If your company often conducts meetings over Zoom, use this API to enable users to add Zoom information to meeting invitations when schedule meetings in HubSpot.",
      "x-hubspot-related-documentation": [
        {
          "name": "Video Conference Guide",
          "url": "https://developers.hubspot.com/beta-docs/guides/api/crm/extensions/video-conferencing"
        }
      ],
      "x-hubspot-introduction": "Use the video conference API to add video conferencing options when scheduling a meeting in HubSpot."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Settings"
      }
    ],
    "paths": {
      "/crm/v3/extensions/videoconferencing/settings/{appId}": {
        "get": {
          "tags": [
            "Settings"
          ],
          "summary": "Get settings",
          "description": "Return the settings for a video conference application with the specified ID.",
          "operationId": "get-/crm/v3/extensions/videoconferencing/settings/{appId}_getById",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the video conference application. This is the identifier of the application created in your HubSpot developer portal.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExternalSettings"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "put": {
          "tags": [
            "Settings"
          ],
          "summary": "Update settings",
          "description": "Updates the settings for a video conference application with the specified ID.",
          "operationId": "put-/crm/v3/extensions/videoconferencing/settings/{appId}_replace",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the video conference application. This is the identifier of the application created in your HubSpot developer portal.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalSettings"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExternalSettings"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Settings"
          ],
          "summary": "Delete settings",
          "description": "Deletes the settings for a video conference application with the specified ID.",
          "operationId": "delete-/crm/v3/extensions/videoconferencing/settings/{appId}_archive",
          "parameters": [
            {
              "name": "appId",
              "in": "path",
              "description": "The ID of the video conference application. This is the identifier of the application created in your HubSpot developer portal.",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "developer_hapikey": []
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ExternalSettings": {
          "required": [
            "createMeetingUrl"
          ],
          "type": "object",
          "properties": {
            "userVerifyUrl": {
              "type": "string",
              "description": "The URL that HubSpot will use to verify that a user exists in the video conference application.",
              "example": "https://example.com/user-verify"
            },
            "fetchAccountsUri": {
              "type": "string"
            },
            "createMeetingUrl": {
              "type": "string",
              "description": "The URL that HubSpot will send requests to create a new video conference.",
              "example": "https://example.com/create-meeting"
            },
            "updateMeetingUrl": {
              "type": "string",
              "description": "The URL that HubSpot will send updates to existing meetings. Typically called when the user changes the topic or times of a meeting.",
              "example": "https://example.com/update-meeting"
            },
            "deleteMeetingUrl": {
              "type": "string",
              "description": "The URL that HubSpot will send notifications of meetings that have been deleted in HubSpot.",
              "example": "https://example.com/delete-meeting"
            }
          },
          "description": "The URLs of the various actions provided by the video conferencing application. All URLs must use the `https` protocol.",
          "example": {
            "createMeetingUrl": "https://example.com/create-meeting",
            "updateMeetingUrl": "https://example.com/update-meeting",
            "deleteMeetingUrl": "https://example.com/delete-meeting",
            "userVerifyUrl": "https://example.com/user-verify"
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "developer_hapikey": {
          "type": "apiKey",
          "name": "hapikey",
          "in": "query"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "STARTER"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Tickets",
      "description": "",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "When a customer contacts your support team to request help with an issue, create a ticket to track that request and keep a record of it for future reference.",
      "x-hubspot-related-documentation": [
        {
          "name": "Tickets Guide",
          "url": "https://hubspot.dev/guides/api/crm/tickets"
        }
      ],
      "x-hubspot-introduction": "Use the tickets API to create and manage CRM records that represent customer service requests in your CRM."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Basic"
      },
      {
        "name": "Public_Object"
      },
      {
        "name": "GDPR"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/objects/tickets/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of tickets by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/tickets/batch/read_read",
          "parameters": [
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/tickets/{ticketId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read an Object identified by `{ticketId}`. `{ticketId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/tickets/{ticketId}_getById",
          "parameters": [
            {
              "name": "ticketId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        },
        "delete": {
          "tags": [
            "Basic"
          ],
          "summary": "Archive",
          "description": "Move an Object identified by `{ticketId}` to the recycling bin.",
          "operationId": "delete-/crm/v3/objects/tickets/{ticketId}_archive",
          "parameters": [
            {
              "name": "ticketId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{ticketId}`. `{ticketId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
          "operationId": "patch-/crm/v3/objects/tickets/{ticketId}_update",
          "parameters": [
            {
              "name": "ticketId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/tickets/merge": {
        "post": {
          "tags": [
            "Public_Object"
          ],
          "summary": "Merge two tickets with same type",
          "operationId": "post-/crm/v3/objects/tickets/merge_merge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMergeInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/tickets/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of tickets by ID",
          "operationId": "post-/crm/v3/objects/tickets/batch/archive_archive",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/tickets/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of tickets",
          "operationId": "post-/crm/v3/objects/tickets/batch/create_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/tickets/batch/update": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Update a batch of tickets",
          "operationId": "post-/crm/v3/objects/tickets/batch/update_update",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/tickets/gdpr-delete": {
        "post": {
          "tags": [
            "GDPR"
          ],
          "summary": "GDPR DELETE",
          "description": "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
          "operationId": "post-/crm/v3/objects/tickets/gdpr-delete_purge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGdprDeleteInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/tickets": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "List",
          "description": "Read a page of tickets. Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/tickets_getPage",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 10
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        },
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a ticket with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard tickets is provided.",
          "operationId": "post-/crm/v3/objects/tickets_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ]
        }
      },
      "/crm/v3/objects/tickets/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "post-/crm/v3/objects/tickets/search_doSearch",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2_legacy": [
                "tickets"
              ]
            },
            {
              "oauth2": []
            },
            {
              "private_apps_legacy": [
                "tickets"
              ]
            },
            {
              "private_apps": []
            }
          ],
          "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "BatchResponseSimplePublicObject": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "SimplePublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "BatchReadInputSimplePublicObjectId": {
          "required": [
            "inputs",
            "properties",
            "propertiesWithHistory"
          ],
          "type": "object",
          "properties": {
            "propertiesWithHistory": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "idProperty": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectId": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "createdate": "2019-10-30T03:30:17.883Z",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hs_pipeline": "support_pipeline",
              "hs_pipeline_stage": "open",
              "hs_ticket_priority": "HIGH",
              "hubspot_owner_id": "910901",
              "subject": "troubleshoot report"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "required": [
            "after",
            "filterGroups",
            "limit",
            "properties",
            "sorts"
          ],
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "BatchResponseSimplePublicObjectWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "PublicGdprDeleteInput": {
          "required": [
            "objectId"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectInput": {
          "required": [
            "properties"
          ],
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "property_date": "1572480000000",
                "property_radio": "option_1",
                "property_number": "17",
                "property_string": "value",
                "property_checkbox": "false",
                "property_dropdown": "choice_b",
                "property_multiple_checkboxes": "chocolate;strawberry"
              }
            }
          },
          "example": {
            "properties": {
              "subject": "troubleshoot report",
              "hs_pipeline": "support_pipeline",
              "hubspot_owner_id": "910901",
              "hs_pipeline_stage": "open",
              "hs_ticket_priority": "HIGH"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        },
        "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
              }
            }
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "PublicMergeInput": {
          "required": [
            "objectIdToMerge",
            "primaryObjectId"
          ],
          "type": "object",
          "properties": {
            "objectIdToMerge": {
              "type": "string"
            },
            "primaryObjectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "subject": "troubleshoot report",
                "hs_pipeline": "support_pipeline",
                "hubspot_owner_id": "910901",
                "hs_pipeline_stage": "open",
                "hs_ticket_priority": "HIGH"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "properties": {
              "createdate": "2019-10-30T03:30:17.883Z",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hs_pipeline": "support_pipeline",
              "hs_pipeline_stage": "open",
              "hs_ticket_priority": "HIGH",
              "hubspot_owner_id": "910901",
              "subject": "troubleshoot report"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInput": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInput"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectInputForCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectBatchInput": {
          "required": [
            "id",
            "properties"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "example": "my_unique_property_name"
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "subject": "troubleshoot report",
                "hs_pipeline": "support_pipeline",
                "hubspot_owner_id": "910901",
                "hs_pipeline_stage": "open",
                "hs_ticket_priority": "HIGH"
              }
            }
          },
          "example": {
            "id": "1",
            "properties": {
              "subject": "troubleshoot report",
              "hs_pipeline": "support_pipeline",
              "hubspot_owner_id": "910901",
              "hs_pipeline_stage": "open",
              "hs_ticket_priority": "HIGH"
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "required": [
            "associations",
            "properties"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "subject": "troubleshoot report",
                "hs_pipeline": "support_pipeline",
                "hubspot_owner_id": "910901",
                "hs_pipeline_stage": "open",
                "hs_ticket_priority": "HIGH"
              }
            }
          },
          "example": {
            "properties": {
              "subject": "troubleshoot report",
              "hs_pipeline": "support_pipeline",
              "hubspot_owner_id": "910901",
              "hs_pipeline_stage": "open",
              "hs_ticket_priority": "HIGH"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "media_bridge.read": "Read media and media events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.custom.read": "View custom object records",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.deals.read": " ",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.deals.write": " ",
                "crm.objects.quotes.read": "Quotes",
                "crm.objects.line_items.write": "Line Items",
                "crm.objects.companies.read": " ",
                "crm.objects.companies.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.objects.contacts.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  },
  {
    "openapi": "3.0.1",
    "info": {
      "title": "Line Items",
      "description": "",
      "version": "v3",
      "x-hubspot-product-tier-requirements": {
        "marketing": "FREE",
        "sales": "FREE",
        "service": "FREE",
        "cms": "FREE"
      },
      "x-hubspot-documentation-banner": "NONE",
      "x-hubspot-api-use-case": "When creating a set of quotes for sales reps to send to potential buyers, use this API to add goods and services to the quotes.",
      "x-hubspot-related-documentation": [
        {
          "name": "Line Items Guide",
          "url": "https://hubspot.dev/guides/api/crm/line-items"
        }
      ],
      "x-hubspot-introduction": "Use the line items API to add instances of products to deals and quotes. You can create line items from existing products or create them as custom line items with no product attached."
    },
    "servers": [
      {
        "url": "https://api.hubapi.com"
      }
    ],
    "tags": [
      {
        "name": "Batch"
      },
      {
        "name": "Basic"
      },
      {
        "name": "Public_Object"
      },
      {
        "name": "GDPR"
      },
      {
        "name": "Search"
      }
    ],
    "paths": {
      "/crm/v3/objects/line_items/batch/read": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Read a batch of line items by internal ID, or unique property values",
          "operationId": "post-/crm/v3/objects/line_items/batch/read_read",
          "parameters": [
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchReadInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/line_items/{lineItemId}": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "Read",
          "description": "Read an Object identified by `{lineItemId}`. `{lineItemId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/line_items/{lineItemId}_getById",
          "parameters": [
            {
              "name": "lineItemId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            }
          ]
        },
        "delete": {
          "tags": [
            "Basic"
          ],
          "summary": "Archive",
          "description": "Move an Object identified by `{lineItemId}` to the recycling bin.",
          "operationId": "delete-/crm/v3/objects/line_items/{lineItemId}_archive",
          "parameters": [
            {
              "name": "lineItemId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            }
          ]
        },
        "patch": {
          "tags": [
            "Basic"
          ],
          "summary": "Update",
          "description": "Perform a partial update of an Object identified by `{lineItemId}`. `{lineItemId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
          "operationId": "patch-/crm/v3/objects/line_items/{lineItemId}_update",
          "parameters": [
            {
              "name": "lineItemId",
              "in": "path",
              "required": true,
              "style": "simple",
              "explode": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "idProperty",
              "in": "query",
              "description": "The name of a property whose values are unique for this object type",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/line_items/merge": {
        "post": {
          "tags": [
            "Public_Object"
          ],
          "summary": "Merge two line items with same type",
          "operationId": "post-/crm/v3/objects/line_items/merge_merge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMergeInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/line_items/batch/archive": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Archive a batch of line items by ID",
          "operationId": "post-/crm/v3/objects/line_items/batch/archive_archive",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectId"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/line_items/batch/create": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Create a batch of line items",
          "operationId": "post-/crm/v3/objects/line_items/batch/create_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/line_items/batch/update": {
        "post": {
          "tags": [
            "Batch"
          ],
          "summary": "Update a batch of line items",
          "operationId": "post-/crm/v3/objects/line_items/batch/update_update",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObject"
                  }
                }
              }
            },
            "207": {
              "description": "multiple statuses",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/line_items/gdpr-delete": {
        "post": {
          "tags": [
            "GDPR"
          ],
          "summary": "GDPR DELETE",
          "description": "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
          "operationId": "post-/crm/v3/objects/line_items/gdpr-delete_purge",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGdprDeleteInput"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "No content",
              "content": {}
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/line_items": {
        "get": {
          "tags": [
            "Basic"
          ],
          "summary": "List",
          "description": "Read a page of line items. Control what is returned via the `properties` query param.",
          "operationId": "get-/crm/v3/objects/line_items_getPage",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "The maximum number of results to display per page.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 10
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "properties",
              "in": "query",
              "description": "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "propertiesWithHistory",
              "in": "query",
              "description": "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "associations",
              "in": "query",
              "description": "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "archived",
              "in": "query",
              "description": "Whether to return only results that have been archived.",
              "required": false,
              "style": "form",
              "explode": true,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            }
          ]
        },
        "post": {
          "tags": [
            "Basic"
          ],
          "summary": "Create",
          "description": "Create a line item with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard line items is provided.",
          "operationId": "post-/crm/v3/objects/line_items_create",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SimplePublicObject"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.write"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.write"
              ]
            }
          ]
        }
      },
      "/crm/v3/objects/line_items/search": {
        "post": {
          "tags": [
            "Search"
          ],
          "operationId": "post-/crm/v3/objects/line_items/search_doSearch",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicObjectSearchRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                  }
                }
              }
            },
            "default": {
              "$ref": "#/components/responses/Error"
            }
          },
          "security": [
            {
              "oauth2": [
                "crm.objects.line_items.read"
              ]
            },
            {
              "private_apps": [
                "crm.objects.line_items.read"
              ]
            }
          ],
          "x-hubspot-rate-limit-exemptions": [
            "ten-secondly"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "StandardError": {
          "required": [
            "category",
            "context",
            "errors",
            "links",
            "message",
            "status"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "object",
              "properties": {}
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            },
            "status": {
              "type": "string"
            }
          }
        },
        "CollectionResponseAssociatedId": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/Paging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociatedId"
              }
            }
          }
        },
        "PublicAssociationsForObject": {
          "required": [
            "to",
            "types"
          ],
          "type": "object",
          "properties": {
            "types": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AssociationSpec"
              }
            },
            "to": {
              "$ref": "#/components/schemas/PublicObjectId"
            }
          }
        },
        "BatchResponseSimplePublicObject": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "FilterGroup": {
          "required": [
            "filters"
          ],
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            }
          }
        },
        "ErrorDetail": {
          "required": [
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "code": {
              "type": "string",
              "description": "The status code associated with the error detail"
            },
            "in": {
              "type": "string",
              "description": "The name of the field or parameter in which the error was found."
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ]
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate"
            }
          }
        },
        "ForwardPaging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            }
          }
        },
        "SimplePublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "BatchReadInputSimplePublicObjectId": {
          "required": [
            "inputs",
            "properties",
            "propertiesWithHistory"
          ],
          "type": "object",
          "properties": {
            "propertiesWithHistory": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "idProperty": {
              "type": "string"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectId": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectId"
              }
            }
          }
        },
        "ValueWithTimestamp": {
          "required": [
            "sourceType",
            "timestamp",
            "value"
          ],
          "type": "object",
          "properties": {
            "sourceId": {
              "type": "string"
            },
            "sourceType": {
              "type": "string"
            },
            "sourceLabel": {
              "type": "string"
            },
            "updatedByUserId": {
              "type": "integer",
              "format": "int32"
            },
            "value": {
              "type": "string"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "CollectionResponseWithTotalSimplePublicObjectForwardPaging": {
          "required": [
            "results",
            "total"
          ],
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int32"
            },
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            }
          }
        },
        "SimplePublicObject": {
          "required": [
            "createdAt",
            "id",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean",
              "example": false
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string",
              "example": "512"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "name": "1 year implementation consultation",
                "price": "6000.00",
                "quantity": "2",
                "hs_product_id": "191902",
                "recurringbillingfrequency": "monthly",
                "hs_recurring_billing_period": "P24M"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "id": "512",
            "properties": {
              "createdate": "2019-10-30T03:30:17.883Z",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hs_product_id": "191902",
              "hs_recurring_billing_period": "24",
              "name": "1 year implementation consultation",
              "price": "6000.00",
              "quantity": "2",
              "recurringbillingfrequency": "monthly"
            },
            "createdAt": "2019-10-30T03:30:17.883Z",
            "updatedAt": "2019-12-07T16:50:06.678Z",
            "archived": false
          }
        },
        "PublicObjectId": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            }
          }
        },
        "Paging": {
          "type": "object",
          "properties": {
            "next": {
              "$ref": "#/components/schemas/NextPage"
            },
            "prev": {
              "$ref": "#/components/schemas/PreviousPage"
            }
          }
        },
        "PublicObjectSearchRequest": {
          "required": [
            "after",
            "filterGroups",
            "limit",
            "properties",
            "sorts"
          ],
          "type": "object",
          "properties": {
            "query": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "int32"
            },
            "after": {
              "type": "string"
            },
            "sorts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filterGroups": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FilterGroup"
              }
            }
          }
        },
        "Error": {
          "required": [
            "category",
            "correlationId",
            "message"
          ],
          "type": "object",
          "properties": {
            "subCategory": {
              "type": "string",
              "description": "A specific category that contains more specific detail about the error"
            },
            "context": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "description": "Context about the error condition",
              "example": {
                "missingScopes": [
                  "scope1",
                  "scope2"
                ],
                "invalidPropertyName": [
                  "propertyValue"
                ]
              }
            },
            "correlationId": {
              "type": "string",
              "description": "A unique identifier for the request. Include this value with any error reports or support tickets",
              "format": "uuid",
              "example": "aeb5f871-7f07-4993-9211-075dc63e7cbf"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
              "example": {
                "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
              }
            },
            "message": {
              "type": "string",
              "description": "A human readable message describing the error along with remediation steps where appropriate",
              "example": "Invalid input (details will vary based on the error)"
            },
            "category": {
              "type": "string",
              "description": "The error category",
              "example": "VALIDATION_ERROR"
            },
            "errors": {
              "type": "array",
              "description": "further information about the error",
              "items": {
                "$ref": "#/components/schemas/ErrorDetail"
              }
            }
          },
          "example": {
            "message": "Invalid input (details will vary based on the error)",
            "correlationId": "aeb5f871-7f07-4993-9211-075dc63e7cbf",
            "category": "VALIDATION_ERROR",
            "links": {
              "knowledge-base": "https://www.hubspot.com/products/service/knowledge-base"
            }
          }
        },
        "BatchResponseSimplePublicObjectWithErrors": {
          "required": [
            "completedAt",
            "results",
            "startedAt",
            "status"
          ],
          "type": "object",
          "properties": {
            "completedAt": {
              "type": "string",
              "format": "date-time"
            },
            "numErrors": {
              "type": "integer",
              "format": "int32"
            },
            "requestedAt": {
              "type": "string",
              "format": "date-time"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "links": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObject"
              }
            },
            "errors": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StandardError"
              }
            },
            "status": {
              "type": "string",
              "enum": [
                "PENDING",
                "PROCESSING",
                "CANCELED",
                "COMPLETE"
              ]
            }
          }
        },
        "PublicGdprDeleteInput": {
          "required": [
            "objectId"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectInput": {
          "type": "object",
          "properties": {
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "name": "1 year implementation consultation",
                "price": "6000.00",
                "quantity": "2",
                "hs_product_id": "191902",
                "recurringbillingfrequency": "monthly",
                "hs_recurring_billing_period": "P24M"
              }
            }
          },
          "example": {
            "properties": {
              "name": "1 year implementation consultation",
              "price": "6000.00",
              "quantity": "2",
              "hs_product_id": "191902",
              "recurringbillingfrequency": "monthly",
              "hs_recurring_billing_period": "24"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        },
        "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging": {
          "required": [
            "results"
          ],
          "type": "object",
          "properties": {
            "paging": {
              "$ref": "#/components/schemas/ForwardPaging"
            },
            "results": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectWithAssociations"
              }
            }
          }
        },
        "AssociationSpec": {
          "required": [
            "associationCategory",
            "associationTypeId"
          ],
          "type": "object",
          "properties": {
            "associationCategory": {
              "type": "string",
              "enum": [
                "HUBSPOT_DEFINED",
                "USER_DEFINED",
                "INTEGRATOR_DEFINED"
              ]
            },
            "associationTypeId": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "PublicMergeInput": {
          "required": [
            "objectIdToMerge",
            "primaryObjectId"
          ],
          "type": "object",
          "properties": {
            "objectIdToMerge": {
              "type": "string"
            },
            "primaryObjectId": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectWithAssociations": {
          "required": [
            "createdAt",
            "id",
            "properties",
            "updatedAt"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CollectionResponseAssociatedId"
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "archived": {
              "type": "boolean"
            },
            "archivedAt": {
              "type": "string",
              "format": "date-time"
            },
            "propertiesWithHistory": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValueWithTimestamp"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              },
              "example": {
                "name": "1 year implementation consultation",
                "price": "6000.00",
                "quantity": "2",
                "hs_product_id": "191902",
                "recurringbillingfrequency": "monthly",
                "hs_recurring_billing_period": "P24M"
              }
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "example": {
            "properties": {
              "createdate": "2019-10-30T03:30:17.883Z",
              "hs_lastmodifieddate": "2019-12-07T16:50:06.678Z",
              "hs_product_id": "191902",
              "hs_recurring_billing_period": "24",
              "name": "1 year implementation consultation",
              "price": "6000.00",
              "quantity": "2",
              "recurringbillingfrequency": "monthly"
            }
          }
        },
        "Filter": {
          "required": [
            "operator",
            "propertyName"
          ],
          "type": "object",
          "properties": {
            "highValue": {
              "type": "string"
            },
            "propertyName": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "value": {
              "type": "string"
            },
            "operator": {
              "type": "string",
              "description": "null",
              "enum": [
                "EQ",
                "NEQ",
                "LT",
                "LTE",
                "GT",
                "GTE",
                "BETWEEN",
                "IN",
                "NOT_IN",
                "HAS_PROPERTY",
                "NOT_HAS_PROPERTY",
                "CONTAINS_TOKEN",
                "NOT_CONTAINS_TOKEN"
              ]
            }
          }
        },
        "BatchInputSimplePublicObjectBatchInput": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectBatchInput"
              }
            }
          }
        },
        "BatchInputSimplePublicObjectInputForCreate": {
          "required": [
            "inputs"
          ],
          "type": "object",
          "properties": {
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          }
        },
        "PreviousPage": {
          "required": [
            "before"
          ],
          "type": "object",
          "properties": {
            "before": {
              "type": "string"
            },
            "link": {
              "type": "string"
            }
          }
        },
        "SimplePublicObjectBatchInput": {
          "required": [
            "id"
          ],
          "type": "object",
          "properties": {
            "idProperty": {
              "type": "string",
              "example": "my_unique_property_name"
            },
            "id": {
              "type": "string"
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "name": "1 year implementation consultation",
                "price": "6000.00",
                "quantity": "2",
                "hs_product_id": "191902",
                "recurringbillingfrequency": "monthly",
                "hs_recurring_billing_period": "P24M"
              }
            }
          },
          "example": {
            "id": "1",
            "properties": {
              "name": "1 year implementation consultation",
              "price": "6000.00",
              "quantity": "2",
              "hs_product_id": "191902",
              "recurringbillingfrequency": "monthly",
              "hs_recurring_billing_period": "24"
            }
          }
        },
        "AssociatedId": {
          "required": [
            "id",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "NextPage": {
          "required": [
            "after"
          ],
          "type": "object",
          "properties": {
            "link": {
              "type": "string",
              "example": "?after=NTI1Cg%3D%3D"
            },
            "after": {
              "type": "string",
              "example": "NTI1Cg%3D%3D"
            }
          },
          "example": {
            "after": "NTI1Cg%3D%3D",
            "link": "?after=NTI1Cg%3D%3D"
          }
        },
        "SimplePublicObjectInputForCreate": {
          "required": [
            "associations"
          ],
          "type": "object",
          "properties": {
            "associations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PublicAssociationsForObject"
              }
            },
            "properties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "example": {
                "name": "1 year implementation consultation",
                "price": "6000.00",
                "quantity": "2",
                "hs_product_id": "191902",
                "recurringbillingfrequency": "monthly",
                "hs_recurring_billing_period": "P24M"
              }
            }
          },
          "example": {
            "properties": {
              "name": "1 year implementation consultation",
              "price": "6000.00",
              "quantity": "2",
              "hs_product_id": "191902",
              "recurringbillingfrequency": "monthly",
              "hs_recurring_billing_period": "24"
            },
            "associations": [
              {
                "to": {
                  "id": "101"
                },
                "types": [
                  {
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 2
                  }
                ]
              }
            ]
          }
        }
      },
      "responses": {
        "Error": {
          "description": "An error occurred.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "securitySchemes": {
        "oauth2_legacy": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "media_bridge.read": "Read media and media events",
                "crm.objects.goals.read": "Read goals",
                "tickets": "Read and write tickets",
                "crm.objects.custom.read": "View custom object records",
                "e-commerce": "e-commerce",
                "crm.objects.custom.write": "Change custom object records"
              }
            }
          }
        },
        "oauth2": {
          "type": "oauth2",
          "flows": {
            "authorizationCode": {
              "authorizationUrl": "https://app.hubspot.com/oauth/authorize",
              "tokenUrl": "https://api.hubapi.com/oauth/v1/token",
              "scopes": {
                "crm.objects.quotes.write": "Quotes",
                "crm.objects.deals.read": " ",
                "crm.objects.line_items.read": "Line Items",
                "crm.objects.deals.write": " ",
                "crm.objects.quotes.read": "Quotes",
                "crm.objects.line_items.write": "Line Items",
                "crm.objects.companies.read": " ",
                "crm.objects.companies.write": " ",
                "crm.objects.contacts.write": " ",
                "crm.objects.contacts.read": " "
              }
            }
          }
        },
        "private_apps_legacy": {
          "type": "apiKey",
          "name": "private-app-legacy",
          "in": "header"
        },
        "private_apps": {
          "type": "apiKey",
          "name": "private-app",
          "in": "header"
        }
      }
    },
    "x-hubspot-available-client-libraries": [
      "PHP",
      "Node",
      "Ruby",
      "Python"
    ],
    "x-hubspot-product-tier-requirements": {
      "marketing": "FREE",
      "sales": "FREE",
      "service": "FREE",
      "cms": "FREE"
    },
    "x-hubspot-documentation-banner": "NONE"
  }
]