#####
# Documentation
# Redwood: https://render.com/docs/deploy-redwood
# YAML (all config values): https://render.com/docs/yaml-spec
#####

services:
  - name: splitit-web-polling
    type: cron
    env: node
    schedule: "*/30 * * * *"
    buildCommand: npm init -y; npm install konfig-cli
    repo: https://github.com/konfig-dev/splitit-web-sdks
    startCommand: ./node_modules/.bin/konfig pull && ./node_modules/.bin/konfig push -o konfig-dev -r splitit-web-sdks -s swagger.json
  - name: leap-polling
    type: cron
    env: node
    schedule: "*/30 * * * *"
    buildCommand: npm init -y; npm install konfig-cli
    repo: https://github.com/leap-ai/leap-sdks
    startCommand: ./node_modules/.bin/konfig pull && ./node_modules/.bin/konfig push -o leap-ai -r leap-sdks -s api.json
  - name: leap-workflows-polling
    type: cron
    env: node
    schedule: "*/30 * * * *"
    buildCommand: npm init -y; npm install konfig-cli
    repo: https://github.com/leap-ai/workflows-sdks
    startCommand: ./node_modules/.bin/konfig pull && ./node_modules/.bin/konfig push -o leap-ai -r workflows-sdks -s api.json
  - name: humanloop-polling-v4
    type: cron
    schedule: "*/30 * * * *"
    buildCommand: npm init -y; npm install konfig-cli
    env: node
    repo: https://github.com/konfig-dev/konfig
    startCommand: ./node_modules/.bin/konfig pull -i https://api.humanloop.com/v4/openapi.json -o openapi.json && ./node_modules/.bin/konfig push -o humanloop -r humanloop-sdks -s openapi.json -x v4
  - name: humanloop-polling-v4-alpha
    type: cron
    env: node
    schedule: "*/30 * * * *"
    buildCommand: npm init -y; npm install konfig-cli
    repo: https://github.com/konfig-dev/konfig
    startCommand: ./node_modules/.bin/konfig pull -i https://neostaging.humanloop.ml/v4/openapi.json -o openapi.json && ./node_modules/.bin/konfig push -o humanloop -r humanloop-sdks -s openapi.json -x v4-alpha

  - name: konfigthis.com
    type: web
    env: static
    buildCommand: yarn; yarn export
    staticPublishPath: ./out
    repo: https://github.com/konfig-dev/konfig
    rootDir: konfigthis.com
    routes:
      - type: rewrite
        source: /*
        destination: https://docs.konfigthis.com/*

  - name: konfig-demo-product-landing-page
    type: web
    env: static
    buildCommand: yarn; yarn build; yarn next export
    staticPublishPath: ./out
    repo: https://github.com/konfig-dev/konfig
    rootDir: misc/konfig-demo-product-landing-page
    domains:
      - apidemo.konfigthis.com

  - type: redis
    name: github-api-cache
    ipAllowList: [] # only allow internal connections
    plan: free

  - name: konfig-demo-portal
    type: web
    env: node
    buildCommand: yarn; yarn build;
    startCommand: yarn start;
    repo: https://github.com/konfig-dev/konfig
    rootDir: generator/konfig-next-app
    plan: standard
    buildFilter:
      paths:
      - generator/konfig-dash/**/*
    domains:
      - demo.konfigthis.com
    envVars:
      - key: GITHUB_API_REDIS_CACHE
        fromService:
          name: github-api-cache
          type: redis
          property: connectionString
      - key: PYTHON_RCE_API_HOST_PORT
        fromService:
          name: konfig-python-remote-code-executor
          type: pserv
          property: hostport
      - fromGroup: github
      - key: NPM_TOKEN
        value: DUMMY_VALUE
      - key: PORT
        value: 10000

  # - name: konfig-dash
  #   type: web
  #   env: static
  #   buildCommand: yarn install && yarn build && yarn rw deploy render web
  #   staticPublishPath: ./web/dist
  #   repo: https://github.com/konfig-dev/konfig
  #   rootDir: generator/konfig-dash
  #   domains:
  #     - dash.konfigthis.com
  #   envVars:
  #     - key: NODE_VERSION
  #       value: 16
  #     - key: SKIP_INSTALL_DEPS
  #       value: true
  #     - fromGroup: npm
  #   routes:
  #     - type: rewrite
  #       source: /.redwood/functions/*
  #       #####
  #       # NOTE: replace destination api url after first deploy to Render
  #       # example:
  #       #   destination: https://myredwoodproject-api.onrender.com/*
  #       #####
  #       destination: https://api.konfigthis.com/*
  #     - type: rewrite
  #       source: /*
  #       destination: /index.html

  - name: konfig-changeset-bot
    type: web
    plan: free
    env: node
    region: oregon
    repo: https://github.com/konfig-dev/konfig
    rootDir: generator/konfig-changeset-bot
    domains:
      - changeset-bot.konfigthis.com
    buildCommand: yarn; yarn next build
    startCommand: yarn next start
    envVars:
      - fromGroup: konfig-changeset-bot

  - name: konfig-api-sales
    type: web
    plan: starter
    env: node
    region: oregon
    repo: https://github.com/konfig-dev/konfig
    rootDir: generator/konfig-dash
    buildCommand: yarn && yarn build && yarn rw build api
    startCommand: yarn rw deploy render api --prisma=false --data-migrate=false
    autoDeploy: false
    envVars:
      - fromGroup: npm
      - fromGroup: aws
      - fromGroup: github
      - key: SESSION_SECRET
        generateValue: true
      - key: SKIP_INSTALL_DEPS
        value: true
      - key: NODE_VERSION
        value: 16
      - key: DATABASE_URL
        fromDatabase:
          name: konfig-db
          property: connectionString
      - key: GENERATOR_API_HOST_PORT
        fromService:
          name: konfig-openapi-generator-api-sales
          type: pserv
          property: hostport
      - key: BLACKD_API_HOST_PORT
        fromService:
          name: konfig-python-formatter
          type: pserv
          property: hostport
      - key: PYTHON_RCE_API_HOST_PORT
        fromService:
          name: konfig-python-remote-code-executor
          type: pserv
          property: hostport

  - type: pserv
    name: konfig-openapi-generator-api-sales
    env: docker
    rootDir: generator/konfig-generator-api
    repo: https://github.com/konfig-dev/konfig
    autoDeploy: false
    envVars:
      - fromGroup: aws
      - key: PORT
        value: 8080

  - name: konfig-api
    type: web
    plan: starter
    env: node
    region: oregon
    repo: https://github.com/konfig-dev/konfig
    rootDir: generator/konfig-dash
    domains:
      - api.konfigthis.com
    buildCommand: yarn && yarn build && yarn rw build api
    startCommand: yarn rw deploy render api --prisma=false --data-migrate=false
    envVars:
      - fromGroup: npm
      - fromGroup: aws
      - fromGroup: github
      - key: NOTION_API_KEY
        sync: false
      - key: SESSION_SECRET
        generateValue: true
      - key: SKIP_INSTALL_DEPS
        value: true
      - key: NODE_VERSION
        value: 16
      - key: DATABASE_URL
        fromDatabase:
          name: konfig-db
          property: connectionString
      - key: GENERATOR_API_HOST_PORT
        fromService:
          name: konfig-openapi-generator-api
          type: pserv
          property: hostport
      - key: BLACKD_API_HOST_PORT
        fromService:
          name: konfig-python-formatter
          type: pserv
          property: hostport
      - key: PYTHON_RCE_API_HOST_PORT
        fromService:
          name: konfig-python-remote-code-executor
          type: pserv
          property: hostport

  - type: pserv
    name: konfig-python-remote-code-executor
    env: python
    buildCommand: ./build-render.sh
    startCommand: ./start.sh
    repo: https://github.com/konfig-dev/konfig
    rootDir: generator/konfig-python-remote-code-executor
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.16
      - key: PORT
        value: 8000

  - type: pserv
    name: konfig-python-formatter
    env: python
    buildCommand: ./build.sh
    startCommand: ./start.sh
    repo: https://github.com/konfig-dev/konfig
    rootDir: generator/konfig-python-formatter-server-blackd

  - type: pserv
    name: konfig-openapi-generator-api
    env: docker
    rootDir: generator/konfig-generator-api
    repo: https://github.com/konfig-dev/konfig
    envVars:
      - fromGroup: aws
      - key: PORT
        value: 8080

  - type: web
    env: node
    name: konfig-docs
    rootDir: generator/konfig-docs
    buildCommand: yarn install; yarn build
    startCommand: yarn serve;
    plan: starter
    repo: https://github.com/konfig-dev/konfig
    domains:
      - docs.konfigthis.com
    envVars:
      - key: NODE_VERSION
        value: 18.18.0

databases:
  - name: konfig-db
    region: oregon
    plan: starter

envVarGroups:
  - name: konfig-changeset-bot
    envVars:
      - key: APP_ID
        sync: false
      - key: GITHUB_CLIENT_ID
        sync: false
      - key: GITHUB_CLIENT_SECRET
        sync: false
      - key: PRIVATE_KEY
        sync: false
      - key: WEBHOOK_SECRET
        sync: false
  - name: npm
    envVars:
      - key: NPM_TOKEN
        sync: false
  - name: aws
    envVars:
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
