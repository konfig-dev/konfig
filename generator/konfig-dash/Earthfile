VERSION 0.7
FROM node:18-bullseye
WORKDIR /konfig-dash

konfig-test-dependencies:
  # TODO: Once we figure out how to better package/extract konfig-cli from konfig-dash, move this to
  #       generator/konfig-integration-tests/Earthfile as the base image for +integration-tests
  ENV PYTHONDONTWRITEBYTECODE=1 # Don't write .pyc files, which are not needed in a container
  ENV PIP_DEFAULT_TIMEOUT=100 # Increase pip timeout to avoid timeouts when installing python packages
  ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=true # Avoids error when running dotnet
  # lsof: used by konfig test
  # openssl: used by prisma
  # wget: used to get C# install script
  RUN apt-get update
  RUN apt-get install -y lsof python3 python3-pip openssl wget
  ## node comes from base image
  ## csharp
  RUN wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
  RUN chmod +x ./dotnet-install.sh
  RUN ./dotnet-install.sh --channel 7.0
  RUN ./dotnet-install.sh --channel 5.0
  RUN ./dotnet-install.sh --channel 3.1
  ENV PATH=$PATH:/root/.dotnet
  ## python
  RUN pip3 install --upgrade pip
  RUN pip3 install poetry
  # Clean up
  RUN apt-get clean && rm -rf /var/lib/apt/lists/*

build-konfig-dash:
  FROM +konfig-test-dependencies
  # Copy everything we need to run `yarn` without copying the source code so that dependencies are cached
  COPY package.json yarn.lock .yarnrc.yml redwood.toml .
  COPY .yarn .yarn
  COPY api/package.json api/package.json
  COPY web/package.json web/package.json
  COPY packages/konfig-cli/package.json packages/konfig-cli/package.json
  COPY packages/konfig-kill-port/package.json packages/konfig-kill-port/package.json
  COPY packages/konfig-lib/package.json packages/konfig-lib/package.json
  COPY packages/konfig-openapi-spec/package.json packages/konfig-openapi-spec/package.json
  COPY packages/konfig-postman-to-openapi/package.json packages/konfig-postman-to-openapi/package.json
  COPY packages/konfig-release-it/package.json packages/konfig-release-it/package.json
  COPY packages/konfig-spectral-ruleset/package.json packages/konfig-spectral-ruleset/package.json
  COPY packages/konfig-swagger2openapi/package.json packages/konfig-swagger2openapi/package.json
  COPY packages/konfig-typescript-sdk/package.json packages/konfig-typescript-sdk/package.json
  COPY packages/konfig-zod-to-openapi/package.json packages/konfig-zod-to-openapi/package.json
  RUN --secret NPM_TOKEN yarn
  # Now that dependencies are installed, copy the source code and build
  COPY api api
  COPY web web
  COPY packages packages
  COPY bash-scripts/build.sh bash-scripts/build.sh
  RUN --secret NPM_TOKEN yarn build

run-konfig-api:
  FROM +build-konfig-dash
  ENTRYPOINT ["yarn", "rw", "deploy", "render", "api"]
  EXPOSE 8911
  SAVE IMAGE konfig-api:latest
