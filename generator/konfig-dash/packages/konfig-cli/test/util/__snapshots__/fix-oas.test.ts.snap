// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fix-oas array schema with missing "items" property items propety is added 1`] = `
{
  "components": {
    "schemas": {
      "MyArraySchema": {
        "items": {
          "description": "WARNING: Missing items property in array schema. Missing items property has been filled with this AnyType schema.",
        },
        "type": "array",
      },
      "TagGetRequest": {
        "properties": {
          "arrayProp": {
            "items": {
              "description": "WARNING: Missing items property in array schema. Missing items property has been filled with this AnyType schema.",
            },
            "type": "array",
          },
        },
        "type": "object",
      },
      "TagGetResponse": {
        "type": "string",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "description": "Test",
        "operationId": "Tag_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGetRequest",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas broken markdown links with whitespace between the [text] and (link) the whitespace is removed 1`] = `
{
  "components": {
    "schemas": {
      "TagGetResponse": {
        "type": "string",
      },
      "Test": {
        "description": "Test [link](https://example.com)",
      },
    },
  },
  "info": {
    "description": "Test [link](https://example.com)",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "description": "Test [link](https://example.com). Then [another link](https://example.com)",
        "operationId": "Tag_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas custom modifications simple 1`] = `
{
  "components": {},
  "info": {
    "description": "New Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {},
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas disallowed-header-names request 1`] = `
{
  "components": {
    "schemas": {
      "TagGetResponse": {
        "type": "string",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "Tag_get",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
        "tags": [
          "Tag",
        ],
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas disallowed-header-names response 1`] = `
{
  "components": {},
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "Tag_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Authorization": {},
            },
          },
        },
        "tags": [
          "Tag",
        ],
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas duplicate-tag-names deduplicate 1`] = `
{
  "components": {
    "schemas": {
      "TagDeleteResponse": {
        "type": "string",
      },
      "TagGetResponse": {
        "type": "string",
      },
      "TagHead200Response": {
        "type": "string",
      },
      "TagHeadResponse": {
        "type": "string",
      },
      "TagOptionsResponse": {
        "type": "string",
      },
      "TagPostResponse": {
        "type": "string",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "delete": {
        "operationId": "Tag_delete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDeleteResponse",
                },
              },
            },
            "description": "OK",
          },
        },
        "tags": [
          "tag with space",
        ],
      },
      "get": {
        "operationId": "Tag_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
        "tags": [
          "Tag",
        ],
      },
      "head": {
        "operationId": "Tag_head",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagHeadResponse",
                },
              },
            },
            "description": "OK",
          },
        },
        "tags": [
          "Tag",
        ],
      },
      "options": {
        "operationId": "Tag_options",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagOptionsResponse",
                },
              },
            },
            "description": "OK",
          },
        },
        "tags": [
          "tag with space",
        ],
      },
      "patch": {
        "operationId": "Tag_head",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagHead200Response",
                },
              },
            },
            "description": "OK",
          },
        },
        "tags": [
          "tag with space",
        ],
      },
      "post": {
        "operationId": "Tag_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagPostResponse",
                },
              },
            },
            "description": "OK",
          },
        },
        "tags": [
          "Tag",
        ],
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
    {
      "name": "tag with space",
    },
  ],
}
`;

exports[`fix-oas ignore potential-incorrect-type updates spec in place 1`] = `
{
  "components": {
    "schemas": {
      "TagGetRequest": {
        "example": "2",
        "type": "string",
      },
      "TagGetResponse": {
        "type": "string",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
    "x-konfig-ignore": {
      "potential-incorrect-type": true,
    },
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "Tag_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGetRequest",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas oas3-schema fix mutual exclusiveness of example & examples field on media object 1`] = `
{
  "components": {
    "schemas": {
      "TagGetRequest": {
        "type": "string",
      },
      "TagGetResponse": {
        "type": "string",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "Tag_get",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "example-0": {
                  "value": "1",
                },
                "example-1": {
                  "value": "2",
                },
                "example-2": {
                  "value": "3",
                },
              },
              "schema": {
                "$ref": "#/components/schemas/TagGetRequest",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
        "tags": [
          "Tag",
        ],
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas oas3-valid-media-example fix-number-example 1`] = `
{
  "components": {
    "schemas": {
      "TagGetRequest": {
        "example": 100,
        "type": "number",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "Tag_get",
        "parameters": [
          {
            "example": -115.16988,
            "in": "query",
            "name": "lat",
            "schema": {
              "type": "number",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGetRequest",
              },
            },
          },
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Authorization": {},
            },
          },
        },
        "tags": [
          "Tag",
        ],
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas object-with-no-properties generate schemas if ignored 1`] = `
{
  "components": {
    "schemas": {
      "TagGetRequest": {
        "example": {
          "hello": "world",
          "onePlus": 2,
        },
        "properties": {
          "hello": {
            "example": "world",
            "type": "string",
          },
          "onePlus": {
            "example": 2,
            "type": "number",
          },
        },
        "type": "object",
      },
      "TagGetResponse": {
        "example": {
          "hello": "world",
          "onePlus": 1,
        },
        "type": "object",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
    "x-konfig-ignore": {
      "object-with-no-properties": true,
    },
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "Tag_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGetRequest",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas object-with-no-properties generate schemas if not ignored 1`] = `
{
  "components": {
    "schemas": {
      "TagGetRequest": {
        "example": {
          "hello": "world",
          "onePlus": 2,
        },
        "properties": {
          "hello": {
            "example": "world",
            "type": "string",
          },
          "onePlus": {
            "example": 2,
            "type": "number",
          },
        },
        "type": "object",
      },
      "TagGetResponse": {
        "example": {
          "hello": "world",
          "onePlus": 1,
        },
        "properties": {
          "hello": {
            "example": "world",
            "type": "string",
          },
          "onePlus": {
            "example": 1,
            "type": "number",
          },
        },
        "type": "object",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "Tag_get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGetRequest",
              },
            },
          },
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas request media type objects with missing "schema" property are fixed 1`] = `
{
  "components": {
    "requestBodies": {
      "TagRequestBody": {
        "content": {
          "application/json": {
            "example": "Should have a schema",
            "schema": {
              "description": "WARNING: Missing schema in media type object. Missing schema has been filled with this AnyType schema.",
            },
          },
        },
      },
    },
    "schemas": {
      "TagGetResponse": {
        "type": "string",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "description": "Test",
        "operationId": "Tag_get",
        "requestBody": {
          "$ref": "#/components/requestBodies/TagRequestBody",
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;

exports[`fix-oas security.in fields with uppercase characters are lowercased 1`] = `
{
  "components": {
    "schemas": {
      "TagGetResponse": {
        "type": "string",
      },
    },
    "securitySchemes": {
      "openapi_authorization": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
      },
    },
  },
  "info": {
    "description": "Test",
    "title": "Test API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "description": "Test",
        "operationId": "Tag_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGetResponse",
                },
              },
            },
            "description": "OK",
          },
        },
      },
    },
  },
  "tags": [
    {
      "name": "Tag",
    },
  ],
}
`;
