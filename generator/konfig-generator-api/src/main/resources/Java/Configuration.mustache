{{>licenseInfo}}

package {{invokerPackage}};

{{>generatedAnnotation}}
public class Configuration {
    private static ApiClient defaultApiClient = new ApiClient();
    public boolean verifyingSsl = true;
    public String host = "{{{basePath}}}";
{{#hasOAuthMethods}}
{{#oauthMethods}}
{{#-first}}
    public String tokenUrl = "{{{tokenUrl}}}";
{{/-first}}
{{/oauthMethods}}
{{/hasOAuthMethods}}
{{#authMethods}}
{{#isApiKey}}
    public String {{keyParamName}};
{{/isApiKey}}
{{#isOAuth}}
{{#isApplication}}
    public String clientId;
    public String clientSecret;
{{/isApplication}}
{{^isApplication}}
    public String accessToken;
{{/isApplication}}
{{/isOAuth}}
{{#isBasic}}
{{#isBasicBasic}}
    public String username;
    public String password;
{{/isBasicBasic}}
{{#isBasicBearer}}
    public String token;
{{/isBasicBearer}}
{{/isBasic}}
{{/authMethods}}
{{#clientState}}
    public String {{{.}}};
{{/clientState}}

    /**
     * Get the default API client, which would be used when creating API
     * instances without providing an API client.
     *
     * @return Default API client
     */
    public static ApiClient getDefaultApiClient() {
        return defaultApiClient;
    }

    /**
     * Set the default API client, which would be used when creating API
     * instances without providing an API client.
     *
     * @param apiClient API client
     */
    public static void setDefaultApiClient(ApiClient apiClient) {
        defaultApiClient = apiClient;
    }
}
