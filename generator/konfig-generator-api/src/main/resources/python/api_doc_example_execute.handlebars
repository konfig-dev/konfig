try:
    {{#if summary}}
    # {{{summary}}}
    {{/if}}
    {{> api_doc_example_execute_call}}
{{#if returnModel}}
{{#with returnModel}}
{{#if pydantic}}
    print({{operationId}}_response)
{{else}}
    pprint({{operationId}}_response.body)
{{#each vars}}
    pprint({{operationId}}_response.body["{{{name}}}"])
{{/each}}
{{/if}}
{{/with}}
{{/if}}
{{#unless pydantic}}
{{#if returnType}}
    pprint({{operationId}}_response.headers)
    pprint({{operationId}}_response.status)
    pprint({{operationId}}_response.round_trip_time)
{{/if}}
{{/unless}}
except ApiException as e:
    print("Exception when calling {{classname}}.{{operationId}}: %s\n" % e)
    pprint(e.body)
{{#each errorReturnModels}}{{#unless this.anyOf.length}}{{#unless this.isArray}}{{#unless this.composedSchemas.allOf.length}}
    if e.status == {{@key}}:
    {{#each this.vars}}
        pprint(e.body["{{{name}}}"])
    {{/each}}
{{/unless}}{{/unless}}{{/unless}}{{/each}}
    pprint(e.headers)
    pprint(e.status)
    pprint(e.reason)
    pprint(e.round_trip_time)
