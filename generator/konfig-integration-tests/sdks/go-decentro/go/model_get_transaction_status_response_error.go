/*
decentro-in-collections

Collections

API version: 1.0.0
Contact: admin@decentro.tech
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package decentro_in_collections

import (
	"encoding/json"
)

// GetTransactionStatusResponseError struct for GetTransactionStatusResponseError
type GetTransactionStatusResponseError struct {
	Message *string `json:"message,omitempty"`
	ResponseCode *string `json:"response_code,omitempty"`
}

// NewGetTransactionStatusResponseError instantiates a new GetTransactionStatusResponseError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTransactionStatusResponseError() *GetTransactionStatusResponseError {
	this := GetTransactionStatusResponseError{}
	return &this
}

// NewGetTransactionStatusResponseErrorWithDefaults instantiates a new GetTransactionStatusResponseError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTransactionStatusResponseErrorWithDefaults() *GetTransactionStatusResponseError {
	this := GetTransactionStatusResponseError{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetTransactionStatusResponseError) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTransactionStatusResponseError) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetTransactionStatusResponseError) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetTransactionStatusResponseError) SetMessage(v string) {
	o.Message = &v
}

// GetResponseCode returns the ResponseCode field value if set, zero value otherwise.
func (o *GetTransactionStatusResponseError) GetResponseCode() string {
	if o == nil || isNil(o.ResponseCode) {
		var ret string
		return ret
	}
	return *o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTransactionStatusResponseError) GetResponseCodeOk() (*string, bool) {
	if o == nil || isNil(o.ResponseCode) {
    return nil, false
	}
	return o.ResponseCode, true
}

// HasResponseCode returns a boolean if a field has been set.
func (o *GetTransactionStatusResponseError) HasResponseCode() bool {
	if o != nil && !isNil(o.ResponseCode) {
		return true
	}

	return false
}

// SetResponseCode gets a reference to the given string and assigns it to the ResponseCode field.
func (o *GetTransactionStatusResponseError) SetResponseCode(v string) {
	o.ResponseCode = &v
}

func (o GetTransactionStatusResponseError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.ResponseCode) {
		toSerialize["response_code"] = o.ResponseCode
	}
	return json.Marshal(toSerialize)
}

type NullableGetTransactionStatusResponseError struct {
	value *GetTransactionStatusResponseError
	isSet bool
}

func (v NullableGetTransactionStatusResponseError) Get() *GetTransactionStatusResponseError {
	return v.value
}

func (v *NullableGetTransactionStatusResponseError) Set(val *GetTransactionStatusResponseError) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTransactionStatusResponseError) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTransactionStatusResponseError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTransactionStatusResponseError(val *GetTransactionStatusResponseError) *NullableGetTransactionStatusResponseError {
	return &NullableGetTransactionStatusResponseError{value: val, isSet: true}
}

func (v NullableGetTransactionStatusResponseError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTransactionStatusResponseError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


