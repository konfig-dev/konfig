/*
decentro-in-collections

Collections

API version: 1.0.0
Contact: admin@decentro.tech
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package decentro_in_collections

import (
	"encoding/json"
)

// IssueCollectRequestResponseData struct for IssueCollectRequestResponseData
type IssueCollectRequestResponseData struct {
	TransactionId *string `json:"transactionId,omitempty"`
	TransactionStatus *string `json:"transactionStatus,omitempty"`
	TransactionStatusDescription *string `json:"transactionStatusDescription,omitempty"`
	BankReferenceNumber *string `json:"bankReferenceNumber,omitempty"`
	NpciTransactionId *string `json:"npciTransactionId,omitempty"`
}

// NewIssueCollectRequestResponseData instantiates a new IssueCollectRequestResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueCollectRequestResponseData() *IssueCollectRequestResponseData {
	this := IssueCollectRequestResponseData{}
	return &this
}

// NewIssueCollectRequestResponseDataWithDefaults instantiates a new IssueCollectRequestResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueCollectRequestResponseDataWithDefaults() *IssueCollectRequestResponseData {
	this := IssueCollectRequestResponseData{}
	return &this
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *IssueCollectRequestResponseData) GetTransactionId() string {
	if o == nil || isNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueCollectRequestResponseData) GetTransactionIdOk() (*string, bool) {
	if o == nil || isNil(o.TransactionId) {
    return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *IssueCollectRequestResponseData) HasTransactionId() bool {
	if o != nil && !isNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *IssueCollectRequestResponseData) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetTransactionStatus returns the TransactionStatus field value if set, zero value otherwise.
func (o *IssueCollectRequestResponseData) GetTransactionStatus() string {
	if o == nil || isNil(o.TransactionStatus) {
		var ret string
		return ret
	}
	return *o.TransactionStatus
}

// GetTransactionStatusOk returns a tuple with the TransactionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueCollectRequestResponseData) GetTransactionStatusOk() (*string, bool) {
	if o == nil || isNil(o.TransactionStatus) {
    return nil, false
	}
	return o.TransactionStatus, true
}

// HasTransactionStatus returns a boolean if a field has been set.
func (o *IssueCollectRequestResponseData) HasTransactionStatus() bool {
	if o != nil && !isNil(o.TransactionStatus) {
		return true
	}

	return false
}

// SetTransactionStatus gets a reference to the given string and assigns it to the TransactionStatus field.
func (o *IssueCollectRequestResponseData) SetTransactionStatus(v string) {
	o.TransactionStatus = &v
}

// GetTransactionStatusDescription returns the TransactionStatusDescription field value if set, zero value otherwise.
func (o *IssueCollectRequestResponseData) GetTransactionStatusDescription() string {
	if o == nil || isNil(o.TransactionStatusDescription) {
		var ret string
		return ret
	}
	return *o.TransactionStatusDescription
}

// GetTransactionStatusDescriptionOk returns a tuple with the TransactionStatusDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueCollectRequestResponseData) GetTransactionStatusDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.TransactionStatusDescription) {
    return nil, false
	}
	return o.TransactionStatusDescription, true
}

// HasTransactionStatusDescription returns a boolean if a field has been set.
func (o *IssueCollectRequestResponseData) HasTransactionStatusDescription() bool {
	if o != nil && !isNil(o.TransactionStatusDescription) {
		return true
	}

	return false
}

// SetTransactionStatusDescription gets a reference to the given string and assigns it to the TransactionStatusDescription field.
func (o *IssueCollectRequestResponseData) SetTransactionStatusDescription(v string) {
	o.TransactionStatusDescription = &v
}

// GetBankReferenceNumber returns the BankReferenceNumber field value if set, zero value otherwise.
func (o *IssueCollectRequestResponseData) GetBankReferenceNumber() string {
	if o == nil || isNil(o.BankReferenceNumber) {
		var ret string
		return ret
	}
	return *o.BankReferenceNumber
}

// GetBankReferenceNumberOk returns a tuple with the BankReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueCollectRequestResponseData) GetBankReferenceNumberOk() (*string, bool) {
	if o == nil || isNil(o.BankReferenceNumber) {
    return nil, false
	}
	return o.BankReferenceNumber, true
}

// HasBankReferenceNumber returns a boolean if a field has been set.
func (o *IssueCollectRequestResponseData) HasBankReferenceNumber() bool {
	if o != nil && !isNil(o.BankReferenceNumber) {
		return true
	}

	return false
}

// SetBankReferenceNumber gets a reference to the given string and assigns it to the BankReferenceNumber field.
func (o *IssueCollectRequestResponseData) SetBankReferenceNumber(v string) {
	o.BankReferenceNumber = &v
}

// GetNpciTransactionId returns the NpciTransactionId field value if set, zero value otherwise.
func (o *IssueCollectRequestResponseData) GetNpciTransactionId() string {
	if o == nil || isNil(o.NpciTransactionId) {
		var ret string
		return ret
	}
	return *o.NpciTransactionId
}

// GetNpciTransactionIdOk returns a tuple with the NpciTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueCollectRequestResponseData) GetNpciTransactionIdOk() (*string, bool) {
	if o == nil || isNil(o.NpciTransactionId) {
    return nil, false
	}
	return o.NpciTransactionId, true
}

// HasNpciTransactionId returns a boolean if a field has been set.
func (o *IssueCollectRequestResponseData) HasNpciTransactionId() bool {
	if o != nil && !isNil(o.NpciTransactionId) {
		return true
	}

	return false
}

// SetNpciTransactionId gets a reference to the given string and assigns it to the NpciTransactionId field.
func (o *IssueCollectRequestResponseData) SetNpciTransactionId(v string) {
	o.NpciTransactionId = &v
}

func (o IssueCollectRequestResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !isNil(o.TransactionStatus) {
		toSerialize["transactionStatus"] = o.TransactionStatus
	}
	if !isNil(o.TransactionStatusDescription) {
		toSerialize["transactionStatusDescription"] = o.TransactionStatusDescription
	}
	if !isNil(o.BankReferenceNumber) {
		toSerialize["bankReferenceNumber"] = o.BankReferenceNumber
	}
	if !isNil(o.NpciTransactionId) {
		toSerialize["npciTransactionId"] = o.NpciTransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableIssueCollectRequestResponseData struct {
	value *IssueCollectRequestResponseData
	isSet bool
}

func (v NullableIssueCollectRequestResponseData) Get() *IssueCollectRequestResponseData {
	return v.value
}

func (v *NullableIssueCollectRequestResponseData) Set(val *IssueCollectRequestResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueCollectRequestResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueCollectRequestResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueCollectRequestResponseData(val *IssueCollectRequestResponseData) *NullableIssueCollectRequestResponseData {
	return &NullableIssueCollectRequestResponseData{value: val, isSet: true}
}

func (v NullableIssueCollectRequestResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueCollectRequestResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


