/*
 * NewsCatcher-V3 Production API
 *
 * <img src='https://uploads-ssl.webflow.com/6429857b17973b636c2195c5/646c6f1eb774ff2f2997bec5_newscatcher_.svg' width='286' height='35' /> <br>  <br>Visit our website  <a href='https://newscatcherapi.com'>https://newscatcherapi.com</a>
 *
 * The version of the OpenAPI document: Beta-3.0.0
 * Contact: maksym@newscatcherapi.com
 * Generated by: https://konfigthis.com
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Newscatcherapi.Net.Api;
using Newscatcherapi.Net.Model;
using Newscatcherapi.Net.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Newscatcherapi.Net.Test.Model
{
    /// <summary>
    ///  Class for testing LatestHeadlinesRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Konfig (https://konfigthis.com).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class LatestHeadlinesRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for LatestHeadlinesRequest
        //private LatestHeadlinesRequest instance;

        public LatestHeadlinesRequestTests()
        {
            // TODO uncomment below to create an instance of LatestHeadlinesRequest
            //instance = new LatestHeadlinesRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LatestHeadlinesRequest
        /// </summary>
        [Fact]
        public void LatestHeadlinesRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" LatestHeadlinesRequest
            //Assert.IsType<LatestHeadlinesRequest>(instance);
        }


        /// <summary>
        /// Test the property 'When'
        /// </summary>
        [Fact]
        public void WhenTest()
        {
            // TODO unit test for the property 'When'
        }
        /// <summary>
        /// Test the property 'ByParseDate'
        /// </summary>
        [Fact]
        public void ByParseDateTest()
        {
            // TODO unit test for the property 'ByParseDate'
        }
        /// <summary>
        /// Test the property 'Lang'
        /// </summary>
        [Fact]
        public void LangTest()
        {
            // TODO unit test for the property 'Lang'
        }
        /// <summary>
        /// Test the property 'NotLang'
        /// </summary>
        [Fact]
        public void NotLangTest()
        {
            // TODO unit test for the property 'NotLang'
        }
        /// <summary>
        /// Test the property 'Countries'
        /// </summary>
        [Fact]
        public void CountriesTest()
        {
            // TODO unit test for the property 'Countries'
        }
        /// <summary>
        /// Test the property 'NotCountries'
        /// </summary>
        [Fact]
        public void NotCountriesTest()
        {
            // TODO unit test for the property 'NotCountries'
        }
        /// <summary>
        /// Test the property 'Sources'
        /// </summary>
        [Fact]
        public void SourcesTest()
        {
            // TODO unit test for the property 'Sources'
        }
        /// <summary>
        /// Test the property 'PredefinedSources'
        /// </summary>
        [Fact]
        public void PredefinedSourcesTest()
        {
            // TODO unit test for the property 'PredefinedSources'
        }
        /// <summary>
        /// Test the property 'NotSources'
        /// </summary>
        [Fact]
        public void NotSourcesTest()
        {
            // TODO unit test for the property 'NotSources'
        }
        /// <summary>
        /// Test the property 'RankedOnly'
        /// </summary>
        [Fact]
        public void RankedOnlyTest()
        {
            // TODO unit test for the property 'RankedOnly'
        }
        /// <summary>
        /// Test the property 'IsHeadline'
        /// </summary>
        [Fact]
        public void IsHeadlineTest()
        {
            // TODO unit test for the property 'IsHeadline'
        }
        /// <summary>
        /// Test the property 'IsPaidContent'
        /// </summary>
        [Fact]
        public void IsPaidContentTest()
        {
            // TODO unit test for the property 'IsPaidContent'
        }
        /// <summary>
        /// Test the property 'ParentUrl'
        /// </summary>
        [Fact]
        public void ParentUrlTest()
        {
            // TODO unit test for the property 'ParentUrl'
        }
        /// <summary>
        /// Test the property 'Theme'
        /// </summary>
        [Fact]
        public void ThemeTest()
        {
            // TODO unit test for the property 'Theme'
        }
        /// <summary>
        /// Test the property 'AllLinks'
        /// </summary>
        [Fact]
        public void AllLinksTest()
        {
            // TODO unit test for the property 'AllLinks'
        }
        /// <summary>
        /// Test the property 'AllDomainLinks'
        /// </summary>
        [Fact]
        public void AllDomainLinksTest()
        {
            // TODO unit test for the property 'AllDomainLinks'
        }
        /// <summary>
        /// Test the property 'WordCountMin'
        /// </summary>
        [Fact]
        public void WordCountMinTest()
        {
            // TODO unit test for the property 'WordCountMin'
        }
        /// <summary>
        /// Test the property 'WordCountMax'
        /// </summary>
        [Fact]
        public void WordCountMaxTest()
        {
            // TODO unit test for the property 'WordCountMax'
        }
        /// <summary>
        /// Test the property 'Page'
        /// </summary>
        [Fact]
        public void PageTest()
        {
            // TODO unit test for the property 'Page'
        }
        /// <summary>
        /// Test the property 'PageSize'
        /// </summary>
        [Fact]
        public void PageSizeTest()
        {
            // TODO unit test for the property 'PageSize'
        }
        /// <summary>
        /// Test the property 'ClusteringEnabled'
        /// </summary>
        [Fact]
        public void ClusteringEnabledTest()
        {
            // TODO unit test for the property 'ClusteringEnabled'
        }
        /// <summary>
        /// Test the property 'ClusteringThreshold'
        /// </summary>
        [Fact]
        public void ClusteringThresholdTest()
        {
            // TODO unit test for the property 'ClusteringThreshold'
        }
        /// <summary>
        /// Test the property 'ClusteringVariable'
        /// </summary>
        [Fact]
        public void ClusteringVariableTest()
        {
            // TODO unit test for the property 'ClusteringVariable'
        }
        /// <summary>
        /// Test the property 'IncludeNlpData'
        /// </summary>
        [Fact]
        public void IncludeNlpDataTest()
        {
            // TODO unit test for the property 'IncludeNlpData'
        }
        /// <summary>
        /// Test the property 'HasNlp'
        /// </summary>
        [Fact]
        public void HasNlpTest()
        {
            // TODO unit test for the property 'HasNlp'
        }
        /// <summary>
        /// Test the property 'ORGEntityName'
        /// </summary>
        [Fact]
        public void ORGEntityNameTest()
        {
            // TODO unit test for the property 'ORGEntityName'
        }
        /// <summary>
        /// Test the property 'PEREntityName'
        /// </summary>
        [Fact]
        public void PEREntityNameTest()
        {
            // TODO unit test for the property 'PEREntityName'
        }
        /// <summary>
        /// Test the property 'LOCEntityName'
        /// </summary>
        [Fact]
        public void LOCEntityNameTest()
        {
            // TODO unit test for the property 'LOCEntityName'
        }
        /// <summary>
        /// Test the property 'MISCEntityName'
        /// </summary>
        [Fact]
        public void MISCEntityNameTest()
        {
            // TODO unit test for the property 'MISCEntityName'
        }
        /// <summary>
        /// Test the property 'TitleSentimentMin'
        /// </summary>
        [Fact]
        public void TitleSentimentMinTest()
        {
            // TODO unit test for the property 'TitleSentimentMin'
        }
        /// <summary>
        /// Test the property 'TitleSentimentMax'
        /// </summary>
        [Fact]
        public void TitleSentimentMaxTest()
        {
            // TODO unit test for the property 'TitleSentimentMax'
        }
        /// <summary>
        /// Test the property 'ContentSentimentMin'
        /// </summary>
        [Fact]
        public void ContentSentimentMinTest()
        {
            // TODO unit test for the property 'ContentSentimentMin'
        }
        /// <summary>
        /// Test the property 'ContentSentimentMax'
        /// </summary>
        [Fact]
        public void ContentSentimentMaxTest()
        {
            // TODO unit test for the property 'ContentSentimentMax'
        }

    }

}
