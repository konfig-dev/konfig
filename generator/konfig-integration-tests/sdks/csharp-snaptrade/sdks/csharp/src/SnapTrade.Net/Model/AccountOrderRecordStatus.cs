/*
 * SnapTrade
 *
 * Connect brokerage accounts to your app for live positions and trading
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@snaptrade.com
 * Generated by: https://konfigthis.com
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = SnapTrade.Net.Client.OpenAPIDateConverter;

namespace SnapTrade.Net.Model
{
    /// <summary>
    /// Defines AccountOrderRecordStatus
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AccountOrderRecordStatus
    {
        /// <summary>
        /// Enum NONE for value: NONE
        /// </summary>
        [EnumMember(Value = "NONE")]
        NONE = 1,

        /// <summary>
        /// Enum PENDING for value: PENDING
        /// </summary>
        [EnumMember(Value = "PENDING")]
        PENDING = 2,

        /// <summary>
        /// Enum ACCEPTED for value: ACCEPTED
        /// </summary>
        [EnumMember(Value = "ACCEPTED")]
        ACCEPTED = 3,

        /// <summary>
        /// Enum FAILED for value: FAILED
        /// </summary>
        [EnumMember(Value = "FAILED")]
        FAILED = 4,

        /// <summary>
        /// Enum REJECTED for value: REJECTED
        /// </summary>
        [EnumMember(Value = "REJECTED")]
        REJECTED = 5,

        /// <summary>
        /// Enum CANCELED for value: CANCELED
        /// </summary>
        [EnumMember(Value = "CANCELED")]
        CANCELED = 6,

        /// <summary>
        /// Enum PARTIALCANCELED for value: PARTIAL_CANCELED
        /// </summary>
        [EnumMember(Value = "PARTIAL_CANCELED")]
        PARTIALCANCELED = 7,

        /// <summary>
        /// Enum CANCELPENDING for value: CANCEL_PENDING
        /// </summary>
        [EnumMember(Value = "CANCEL_PENDING")]
        CANCELPENDING = 8,

        /// <summary>
        /// Enum EXECUTED for value: EXECUTED
        /// </summary>
        [EnumMember(Value = "EXECUTED")]
        EXECUTED = 9,

        /// <summary>
        /// Enum PARTIAL for value: PARTIAL
        /// </summary>
        [EnumMember(Value = "PARTIAL")]
        PARTIAL = 10,

        /// <summary>
        /// Enum REPLACEPENDING for value: REPLACE_PENDING
        /// </summary>
        [EnumMember(Value = "REPLACE_PENDING")]
        REPLACEPENDING = 11,

        /// <summary>
        /// Enum REPLACED for value: REPLACED
        /// </summary>
        [EnumMember(Value = "REPLACED")]
        REPLACED = 12,

        /// <summary>
        /// Enum STOPPED for value: STOPPED
        /// </summary>
        [EnumMember(Value = "STOPPED")]
        STOPPED = 13,

        /// <summary>
        /// Enum SUSPENDED for value: SUSPENDED
        /// </summary>
        [EnumMember(Value = "SUSPENDED")]
        SUSPENDED = 14,

        /// <summary>
        /// Enum EXPIRED for value: EXPIRED
        /// </summary>
        [EnumMember(Value = "EXPIRED")]
        EXPIRED = 15,

        /// <summary>
        /// Enum QUEUED for value: QUEUED
        /// </summary>
        [EnumMember(Value = "QUEUED")]
        QUEUED = 16,

        /// <summary>
        /// Enum TRIGGERED for value: TRIGGERED
        /// </summary>
        [EnumMember(Value = "TRIGGERED")]
        TRIGGERED = 17,

        /// <summary>
        /// Enum ACTIVATED for value: ACTIVATED
        /// </summary>
        [EnumMember(Value = "ACTIVATED")]
        ACTIVATED = 18,

        /// <summary>
        /// Enum PENDINGRISKREVIEW for value: PENDING_RISK_REVIEW
        /// </summary>
        [EnumMember(Value = "PENDING_RISK_REVIEW")]
        PENDINGRISKREVIEW = 19,

        /// <summary>
        /// Enum CONTINGENTORDER for value: CONTINGENT_ORDER
        /// </summary>
        [EnumMember(Value = "CONTINGENT_ORDER")]
        CONTINGENTORDER = 20

    }

}
