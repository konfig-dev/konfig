/*
 * SnapTrade
 *
 * Connect brokerage accounts to your app for live positions and trading
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@snaptrade.com
 * Generated by: https://konfigthis.com
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using SnapTrade.Net.Client;
using SnapTrade.Net.Api;
using SnapTrade.Net.Model;

namespace SnapTrade.Net.Test.Api
{
    /// <summary>
    ///  Class for testing ErrorLogsApi
    /// </summary>
    public class ErrorLogsApiTests : IDisposable
    {
        private Snaptrade client;

        public ErrorLogsApiTests()
        {
            client = new Snaptrade();
            client.SetBasePath("http://127.0.0.1:4032");
            // Configure custom BasePath if desired
            // client.SetBasePath("https://api.snaptrade.com/api/v1");
            client.SetClientId("test");
            client.SetConsumerKey("test");

        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test ListUserErrors
        /// </summary>
        [Fact]
        public void ListUserErrorsTest()
        {
            var userId = "userId_example";
            var userSecret = "userSecret_example";
            
            try
            {
                // Retrieve error logs on behalf of your SnapTrade users
                List<UserErrorLog> result = client.ErrorLogs.ListUserErrors(userId, userSecret);
                Console.WriteLine(result);
            }
            catch (ApiException e)
            {
                Console.WriteLine("Exception when calling ErrorLogsApi.ListUserErrors: " + e.Message);
                Console.WriteLine("Status Code: "+ e.ErrorCode);
                Console.WriteLine(e.StackTrace);
            }
            catch (ClientException e)
            {
                Console.WriteLine(e.Response.StatusCode);
                Console.WriteLine(e.Response.RawContent);
                Console.WriteLine(e.InnerException);
            }
        }
    }
}
