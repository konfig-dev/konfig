/*
Humanloop API

The Humanloop API allows you to interact with Humanloop from your product or service.

You can do this through HTTP requests from any language or via our official Python or TypeScript SDK.

To install the official [Python SDK](https://pypi.org/project/humanloop/), run the following command:

```bash
pip install humanloop
```

To install the official [TypeScript SDK](https://www.npmjs.com/package/humanloop), run the following command:

```bash
npm i humanloop
```

---

Guides and further details about key concepts can be found in [our docs](https://docs.humanloop.com/).

The version of the OpenAPI document: 4.0.1


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ActiveConfigProperty } from './active-config-property';
import { ActiveExperimentProperty } from './active-experiment-property';
import { ConfigType } from './config-type';
import { EvaluatorResponse } from './evaluator-response';
import { FeedbackTypeModel } from './feedback-type-model';
import { ProjectResponse } from './project-response';
import { ProjectUserResponse } from './project-user-response';

/**
 * The project where the evaluator logs are stored.
 * @export
 * @interface LoggingProjectProperty
 */
export interface LoggingProjectProperty {
    /**
     * Project ID
     * @type {string}
     * @memberof LoggingProjectProperty
     */
    'id': string;
    /**
     * Unique project name.
     * @type {string}
     * @memberof LoggingProjectProperty
     */
    'name': string;
    /**
     * 
     * @type {ActiveExperimentProperty}
     * @memberof LoggingProjectProperty
     */
    'active_experiment'?: ActiveExperimentProperty;
    /**
     * 
     * @type {ActiveConfigProperty}
     * @memberof LoggingProjectProperty
     */
    'active_config'?: ActiveConfigProperty;
    /**
     * Users associated to the project.
     * @type {Array<ProjectUserResponse>}
     * @memberof LoggingProjectProperty
     */
    'users': Array<ProjectUserResponse>;
    /**
     * The count of datapoints that have been logged to the project.
     * @type {number}
     * @memberof LoggingProjectProperty
     */
    'data_count': number;
    /**
     * 
     * @type {Array<FeedbackTypeModel>}
     * @memberof LoggingProjectProperty
     */
    'feedback_types': Array<FeedbackTypeModel>;
    /**
     * Unique ID of the team the project belongs to. Starts with `tm_`.
     * @type {string}
     * @memberof LoggingProjectProperty
     */
    'team_id': string;
    /**
     * 
     * @type {ConfigType}
     * @memberof LoggingProjectProperty
     */
    'config_type'?: ConfigType;
    /**
     * Evaluators that have been set as active for the project.
     * @type {Array<EvaluatorResponse>}
     * @memberof LoggingProjectProperty
     */
    'active_evaluators'?: Array<EvaluatorResponse>;
    /**
     * String ID of the directory the project belongs to. Starts with `dir_`.
     * @type {string}
     * @memberof LoggingProjectProperty
     */
    'directory_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof LoggingProjectProperty
     */
    'created_at': string;
    /**
     * 
     * @type {string}
     * @memberof LoggingProjectProperty
     */
    'updated_at': string;
}

