//
// Status.swift
//
// Generated by Konfig
// https://konfigthis.com
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Status of API */
public struct Status: Codable, JSONEncodable, Hashable {

    public var version: Int?
    public var timestamp: String?
    public var online: Bool?

    public init(version: Int? = nil, timestamp: String? = nil, online: Bool? = nil) {
        self.version = version
        self.timestamp = timestamp
        self.online = online
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case version
        case timestamp
        case online
    }

    public var additionalProperties: [String: AnyCodable] = [:]

    public subscript(key: String) -> AnyCodable? {
        get {
            if let value = additionalProperties[key] {
                return value
            }
            return nil
        }

        set {
            additionalProperties[key] = newValue
        }
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(version, forKey: .version)
        try container.encodeIfPresent(timestamp, forKey: .timestamp)
        try container.encodeIfPresent(online, forKey: .online)
        var additionalPropertiesContainer = encoder.container(keyedBy: String.self)
        try additionalPropertiesContainer.encodeMap(additionalProperties)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        version = try container.decodeIfPresent(Int.self, forKey: .version)
        timestamp = try container.decodeIfPresent(String.self, forKey: .timestamp)
        online = try container.decodeIfPresent(Bool.self, forKey: .online)
        var nonAdditionalPropertyKeys = Set<String>()
        nonAdditionalPropertyKeys.insert("version")
        nonAdditionalPropertyKeys.insert("timestamp")
        nonAdditionalPropertyKeys.insert("online")
        let additionalPropertiesContainer = try decoder.container(keyedBy: String.self)
        additionalProperties = try additionalPropertiesContainer.decodeMap(AnyCodable.self, excludedKeys: nonAdditionalPropertyKeys)
    }
}

