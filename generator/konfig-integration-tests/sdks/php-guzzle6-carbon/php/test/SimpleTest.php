<?php

/**
 * SimpleTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Carbon
 * @author   Konfig
 * @link     https://konfigthis.com
 */

/**
 * Carbon
 *
 * Connect external data to LLMs, no matter the source.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://konfigthis.com
 */


namespace Carbon\Test\Api;

use PHPUnit\Framework\TestCase;

class SimpleTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * test initialization of clinet
     */
    public function testAuthSchemes()
    {
        $carbon = new \Carbon\Client(
            apiKey: "API_KEY",
            customerId: "CUSTOMER_ID",
            host: "http://127.0.0.1:4067"
        );
        $token = $carbon->auth->getAccessToken();
        $this->assertNotEmpty($token);
        $carbon = new \Carbon\Client(
            accessToken: $token->getAccessToken(),
            host: "http://127.0.0.1:4067"
        );
        $whiteLabeling = $carbon->auth->getWhiteLabeling();
        $this->assertNotEmpty($whiteLabeling);
    }

    public function testSnippets()
    {
        $carbon = new \Carbon\Client(
            apiKey: "API_KEY",
            customerId: "CUSTOMER_ID",
            host: "http://127.0.0.1:4067"
        );
        $result = $carbon->utilities->fetchYoutubeTranscripts(
            id: "id_example",
            raw: False
        );
        $this->assertNotEmpty($result);

        $result = $carbon->files->queryUserFiles(
            pagination: [
                "limit" => 10,
                "offset" => 0,
            ],
            order_by: "created_at",
            order_dir: "desc",
            filters: [],
            include_raw_file: True,
            include_parsed_text_file: True,
            include_additional_files: True
        );
        $this->assertNotEmpty($result);

        $result = $carbon->utilities->searchUrls(
            query: "query_example"
        );
        $this->assertNotEmpty($result);

        $result = $carbon->files->deleteFileTags(
            tags: [
                "string_example"
            ],
            organization_user_file_id: 1
        );
        $this->assertNotEmpty($result);

        $result = $carbon->dataSources->queryUserDataSources(
            pagination: [
                "limit" => 10,
                "offset" => 0,
            ],
            order_by: "created_at",
            order_dir: "desc",
            filters: [
                "source" => "GOOGLE_DRIVE",
            ]
        );
        $this->assertNotEmpty($result);

        $carbon->health->check();

        $result = $carbon->utilities->scrapeWeb(
            body: [
                [
                    "url" => "url_example",
                    "recursion_depth" => 3,
                    "max_pages_to_scrape" => 100,
                    "chunk_size" => 1500,
                    "chunk_overlap" => 20,
                    "skip_embedding_generation" => False,
                    "enable_auto_sync" => False,
                    "generate_sparse_vectors" => False,
                    "prepend_filename_to_chunks" => False,
                    "html_tags_to_skip" => [],
                    "css_classes_to_skip" => [],
                    "css_selectors_to_skip" => [],
                ]
            ],
        );
    }
}
