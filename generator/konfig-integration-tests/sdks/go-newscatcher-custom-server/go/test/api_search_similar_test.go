/*
NewsCatcher-V3 Production API

Testing SearchSimilarApiService

*/

// Code generated by Konfig (https://konfigthis.com);

package newscatcherapi

import (
    "testing"
    "github.com/stretchr/testify/assert"
    "github.com/konfig-dev/newscatcher-go-sdk/go"
)

func Test_newscatcherapi_SearchSimilarApiService(t *testing.T) {

    configuration := newscatcherapi.NewConfiguration()
    configuration.SetHost("http://127.0.0.1:4121") 
    configuration.SetApiKey("X_API_TOKEN")
    client := newscatcherapi.NewAPIClient(configuration)

    t.Run("Test SearchSimilarApiService Get", func(t *testing.T) {
        request := client.SearchSimilarApi.Get(
            "q_example",
        )
        request.PublishedDatePrecision("publishedDatePrecision_example")
        request.SortBy("sortBy_example")
        request.NerName("nerName_example")
        request.SearchIn("searchIn_example")
        request.IncludeSimilarDocuments(true)
        request.SimilarDocumentsNumber(100)
        request.SimilarDocumentsFields("similarDocumentsFields_example")

        res := request.ExecuteAll()
        assert.Equal(t, 6, len(res))
    })

    t.Run("Test SearchSimilarApiService Post", func(t *testing.T) {
        searchSimilarRequest := *newscatcherapi.NewMoreLikeThisRequest(
            "q_example",
        )
        searchSimilarRequest.SetPublishedDatePrecision("publishedDatePrecision_example")
        searchSimilarRequest.SetSortBy("sortBy_example")
        searchSimilarRequest.SetNerName("nerName_example")
        searchSimilarRequest.SetSearchIn("searchIn_example")
        searchSimilarRequest.SetIncludeSimilarDocuments(true)
        searchSimilarRequest.SetSimilarDocumentsNumber(100)
        searchSimilarRequest.SetSimilarDocumentsFields("similarDocumentsFields_example")

        request := client.SearchSimilarApi.Post(
            searchSimilarRequest,
        )
        res := request.ExecuteAll()
        assert.Equal(t, 6, len(res))
    })
}