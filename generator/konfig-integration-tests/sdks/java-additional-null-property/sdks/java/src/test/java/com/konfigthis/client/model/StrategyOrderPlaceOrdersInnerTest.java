/*
 * SnapTrade
 * Connect brokerage accounts to your app for live positions and trading
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@snaptrade.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.StrategyOrderPlaceOrdersInnerLegsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for StrategyOrderPlaceOrdersInner
 */
public class StrategyOrderPlaceOrdersInnerTest {
    private final StrategyOrderPlaceOrdersInner model = new StrategyOrderPlaceOrdersInner();

    /**
     * Model tests for StrategyOrderPlaceOrdersInner
     */
    @Test
    public void testStrategyOrderPlaceOrdersInner() {
        // TODO: test StrategyOrderPlaceOrdersInner
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'symbol'
     */
    @Test
    public void symbolTest() {
        // TODO: test symbol
    }

    /**
     * Test the property 'symbolId'
     */
    @Test
    public void symbolIdTest() {
        // TODO: test symbolId
    }

    /**
     * Test the property 'totalQuantity'
     */
    @Test
    public void totalQuantityTest() {
        // TODO: test totalQuantity
    }

    /**
     * Test the property 'openQuantity'
     */
    @Test
    public void openQuantityTest() {
        // TODO: test openQuantity
    }

    /**
     * Test the property 'filledQuantity'
     */
    @Test
    public void filledQuantityTest() {
        // TODO: test filledQuantity
    }

    /**
     * Test the property 'canceledQuantity'
     */
    @Test
    public void canceledQuantityTest() {
        // TODO: test canceledQuantity
    }

    /**
     * Test the property 'side'
     */
    @Test
    public void sideTest() {
        // TODO: test side
    }

    /**
     * Test the property 'orderType'
     */
    @Test
    public void orderTypeTest() {
        // TODO: test orderType
    }

    /**
     * Test the property 'limitPrice'
     */
    @Test
    public void limitPriceTest() {
        // TODO: test limitPrice
    }

    /**
     * Test the property 'stopPrice'
     */
    @Test
    public void stopPriceTest() {
        // TODO: test stopPrice
    }

    /**
     * Test the property 'isAllOrNone'
     */
    @Test
    public void isAllOrNoneTest() {
        // TODO: test isAllOrNone
    }

    /**
     * Test the property 'isAnonymous'
     */
    @Test
    public void isAnonymousTest() {
        // TODO: test isAnonymous
    }

    /**
     * Test the property 'icebergQuantity'
     */
    @Test
    public void icebergQuantityTest() {
        // TODO: test icebergQuantity
    }

    /**
     * Test the property 'minQuantity'
     */
    @Test
    public void minQuantityTest() {
        // TODO: test minQuantity
    }

    /**
     * Test the property 'avgExecPrice'
     */
    @Test
    public void avgExecPriceTest() {
        // TODO: test avgExecPrice
    }

    /**
     * Test the property 'lastExecPrice'
     */
    @Test
    public void lastExecPriceTest() {
        // TODO: test lastExecPrice
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'timeInForce'
     */
    @Test
    public void timeInForceTest() {
        // TODO: test timeInForce
    }

    /**
     * Test the property 'gtdDate'
     */
    @Test
    public void gtdDateTest() {
        // TODO: test gtdDate
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'rejectionReason'
     */
    @Test
    public void rejectionReasonTest() {
        // TODO: test rejectionReason
    }

    /**
     * Test the property 'chainId'
     */
    @Test
    public void chainIdTest() {
        // TODO: test chainId
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'primaryRoute'
     */
    @Test
    public void primaryRouteTest() {
        // TODO: test primaryRoute
    }

    /**
     * Test the property 'secondaryRoute'
     */
    @Test
    public void secondaryRouteTest() {
        // TODO: test secondaryRoute
    }

    /**
     * Test the property 'orderRoute'
     */
    @Test
    public void orderRouteTest() {
        // TODO: test orderRoute
    }

    /**
     * Test the property 'venueHoldingOrder'
     */
    @Test
    public void venueHoldingOrderTest() {
        // TODO: test venueHoldingOrder
    }

    /**
     * Test the property 'comissionCharged'
     */
    @Test
    public void comissionChargedTest() {
        // TODO: test comissionCharged
    }

    /**
     * Test the property 'exchangeOrderId'
     */
    @Test
    public void exchangeOrderIdTest() {
        // TODO: test exchangeOrderId
    }

    /**
     * Test the property 'isSignificantShareHolder'
     */
    @Test
    public void isSignificantShareHolderTest() {
        // TODO: test isSignificantShareHolder
    }

    /**
     * Test the property 'isInsider'
     */
    @Test
    public void isInsiderTest() {
        // TODO: test isInsider
    }

    /**
     * Test the property 'isLimitOffsetInDollar'
     */
    @Test
    public void isLimitOffsetInDollarTest() {
        // TODO: test isLimitOffsetInDollar
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'placementCommission'
     */
    @Test
    public void placementCommissionTest() {
        // TODO: test placementCommission
    }

    /**
     * Test the property 'legs'
     */
    @Test
    public void legsTest() {
        // TODO: test legs
    }

    /**
     * Test the property 'strategyType'
     */
    @Test
    public void strategyTypeTest() {
        // TODO: test strategyType
    }

    /**
     * Test the property 'triggerStopPrice'
     */
    @Test
    public void triggerStopPriceTest() {
        // TODO: test triggerStopPrice
    }

    /**
     * Test the property 'orderGroupId'
     */
    @Test
    public void orderGroupIdTest() {
        // TODO: test orderGroupId
    }

    /**
     * Test the property 'orderClass'
     */
    @Test
    public void orderClassTest() {
        // TODO: test orderClass
    }

    /**
     * Test the property 'isCrossZero'
     */
    @Test
    public void isCrossZeroTest() {
        // TODO: test isCrossZero
    }

}
