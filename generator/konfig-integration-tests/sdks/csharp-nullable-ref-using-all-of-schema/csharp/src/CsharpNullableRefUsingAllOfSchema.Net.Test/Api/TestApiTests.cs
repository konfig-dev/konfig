/*
 * csharp-nullable-ref-using-all-of-schema API
 *
 * A simple API based for testing csharp-nullable-ref-using-all-of-schema.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 * Generated by: https://konfigthis.com
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CsharpNullableRefUsingAllOfSchema.Net.Client;
using CsharpNullableRefUsingAllOfSchema.Net.Api;
using CsharpNullableRefUsingAllOfSchema.Net.Model;

namespace CsharpNullableRefUsingAllOfSchema.Net.Test.Api
{
    /// <summary>
    ///  Class for testing TestApi
    /// </summary>
    public class TestApiTests : IDisposable
    {
        private CsharpNullableRefUsingAllOfSchemaClient client;

        public TestApiTests()
        {
            client = new CsharpNullableRefUsingAllOfSchemaClient();
            client.SetBasePath("http://127.0.0.1:4010");
            // Configure API key authorization: ApiKey
            client.SetApiKey("YOUR_API_KEY");

        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test Fetch
        /// </summary>
        [Fact]
        public void FetchTest()
        {
            var input = default(double?);
            
            var testFetchRequestWithAllOf = new TestFetchRequestWithAllOf(
                input
            );
            
            try
            {
                // Fetches a JSON value based on input parameter
                Object result = client.Test.Fetch(testFetchRequestWithAllOf);
                Console.WriteLine(result);
            }
            catch (ApiException e)
            {
                Console.WriteLine("Exception when calling TestApi.Fetch: " + e.Message);
                Console.WriteLine("Status Code: "+ e.ErrorCode);
                Console.WriteLine(e.StackTrace);
            }
            catch (ClientException e)
            {
                Console.WriteLine(e.Response.StatusCode);
                Console.WriteLine(e.Response.RawContent);
                Console.WriteLine(e.InnerException);
            }
        }
    }
}
