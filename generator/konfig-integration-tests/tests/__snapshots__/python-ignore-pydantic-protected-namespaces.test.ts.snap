// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`python-ignore-pydantic-protected-namespaces 1`] = `
"# python-ignore-pydantic-protected-namespaces<a id="python-ignore-pydantic-protected-namespaces"></a>

A simple API based for testing python-ignore-pydantic-protected-namespaces.


[![PyPI](https://img.shields.io/badge/PyPI-v1.0.0-blue)](https://pypi.org/project/python-ignore-pydantic-protected-namespaces/1.0.0)
[![README.md](https://img.shields.io/badge/README-Click%20Here-green)](https://github.com/konfig-dev/konfig/tree/main/python#readme)
[![More Info](https://img.shields.io/badge/More%20Info-Click%20Here-orange)](http://example.com/support)

## Table of Contents<a id="table-of-contents"></a>

<!-- toc -->

- [Requirements](#requirements)
- [Installation](#installation)
- [Getting Started](#getting-started)
- [Async](#async)
- [Raw HTTP Response](#raw-http-response)
- [Reference](#reference)
  * [\`pythonignorepydanticprotectednamespacesclient.test.fetch\`](#pythonignorepydanticprotectednamespacesclienttestfetch)

<!-- tocstop -->

## Requirements<a id="requirements"></a>

Python >=3.7

## Installation<a id="installation"></a>

\`\`\`sh
pip install python-ignore-pydantic-protected-namespaces==1.0.0
\`\`\`

## Getting Started<a id="getting-started"></a>

\`\`\`python
from pprint import pprint
from python_ignore_pydantic_protected_namespaces import (
    PythonIgnorePydanticProtectedNamespacesClient,
    ApiException,
)

pythonignorepydanticprotectednamespacesclient = (
    PythonIgnorePydanticProtectedNamespacesClient(
        api_key="YOUR_API_KEY",
    )
)

try:
    # Fetches a JSON value based on input parameter
    fetch_response = pythonignorepydanticprotectednamespacesclient.test.fetch()
    print(fetch_response)
except ApiException as e:
    print("Exception when calling TestApi.fetch: %s\\n" % e)
    pprint(e.body)
    pprint(e.headers)
    pprint(e.status)
    pprint(e.reason)
    pprint(e.round_trip_time)
\`\`\`

## Async<a id="async"></a>

\`async\` support is available by prepending \`a\` to any method.

\`\`\`python
import asyncio
from pprint import pprint
from python_ignore_pydantic_protected_namespaces import (
    PythonIgnorePydanticProtectedNamespacesClient,
    ApiException,
)

pythonignorepydanticprotectednamespacesclient = (
    PythonIgnorePydanticProtectedNamespacesClient(
        api_key="YOUR_API_KEY",
    )
)


async def main():
    try:
        # Fetches a JSON value based on input parameter
        fetch_response = (
            await pythonignorepydanticprotectednamespacesclient.test.afetch()
        )
        print(fetch_response)
    except ApiException as e:
        print("Exception when calling TestApi.fetch: %s\\n" % e)
        pprint(e.body)
        pprint(e.headers)
        pprint(e.status)
        pprint(e.reason)
        pprint(e.round_trip_time)


asyncio.run(main())
\`\`\`

## Raw HTTP Response<a id="raw-http-response"></a>

To access raw HTTP response values, use the \`.raw\` namespace.

\`\`\`python
from pprint import pprint
from python_ignore_pydantic_protected_namespaces import (
    PythonIgnorePydanticProtectedNamespacesClient,
    ApiException,
)

pythonignorepydanticprotectednamespacesclient = (
    PythonIgnorePydanticProtectedNamespacesClient(
        api_key="YOUR_API_KEY",
    )
)

try:
    # Fetches a JSON value based on input parameter
    fetch_response = pythonignorepydanticprotectednamespacesclient.test.raw.fetch()
    pprint(fetch_response.body)
    pprint(fetch_response.body["model_config_name"])
    pprint(fetch_response.headers)
    pprint(fetch_response.status)
    pprint(fetch_response.round_trip_time)
except ApiException as e:
    print("Exception when calling TestApi.fetch: %s\\n" % e)
    pprint(e.body)
    pprint(e.headers)
    pprint(e.status)
    pprint(e.reason)
    pprint(e.round_trip_time)
\`\`\`


## Reference<a id="reference"></a>
### \`pythonignorepydanticprotectednamespacesclient.test.fetch\`<a id="pythonignorepydanticprotectednamespacesclienttestfetch"></a>

Provide an input parameter to receive a JSON value with properties.

#### üõ†Ô∏è Usage<a id="üõ†Ô∏è-usage"></a>

\`\`\`python
fetch_response = pythonignorepydanticprotectednamespacesclient.test.fetch()
\`\`\`

#### üîÑ Return<a id="üîÑ-return"></a>

[\`TestFetchResponse\`](./python_ignore_pydantic_protected_namespaces/pydantic/test_fetch_response.py)

#### üåê Endpoint<a id="üåê-endpoint"></a>

\`/simple-endpoint\` \`get\`

[üîô **Back to Table of Contents**](#table-of-contents)

---


## Author<a id="author"></a>
This Python package is automatically generated by [Konfig](https://konfigthis.com)
"
`;
