// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`python-pydantic-enum-str 1`] = `
"# python-pydantic-enum-str<a id=\\"python-pydantic-enum-str\\"></a>

A simple API based for testing python-pydantic-enum-str.


[![PyPI](https://img.shields.io/badge/PyPI-v1.0.0-blue)](https://pypi.org/project/python-pydantic-enum-str/1.0.0)
[![README.md](https://img.shields.io/badge/README-Click%20Here-green)](https://github.com/konfig-dev/konfig/tree/main/python#readme)
[![More Info](https://img.shields.io/badge/More%20Info-Click%20Here-orange)](http://example.com/support)

## Table of Contents<a id=\\"table-of-contents\\"></a>

<!-- toc -->

- [Requirements](#requirements)
- [Installing](#installing)
- [Getting Started](#getting-started)
- [Async](#async)
- [Raw HTTP Response](#raw-http-response)
- [Reference](#reference)
  * [\`pythonpydanticenumstrclient.test.fetch\`](#pythonpydanticenumstrclienttestfetch)

<!-- tocstop -->

## Requirements<a id=\\"requirements\\"></a>

Python >=3.7

## Installing<a id=\\"installing\\"></a>

\`\`\`sh
pip install python-pydantic-enum-str==1.0.0
\`\`\`

## Getting Started<a id=\\"getting-started\\"></a>

\`\`\`python
from pprint import pprint
from python_pydantic_enum_str import PythonPydanticEnumStrClient, ApiException

pythonpydanticenumstrclient = PythonPydanticEnumStrClient(
    api_key=\\"YOUR_API_KEY\\",
)

try:
    # Fetches a JSON value based on input parameter
    fetch_response = pythonpydanticenumstrclient.test.fetch()
    print(fetch_response)
except ApiException as e:
    print(\\"Exception when calling TestApi.fetch: %s\\\\n\\" % e)
    pprint(e.body)
    pprint(e.headers)
    pprint(e.status)
    pprint(e.reason)
    pprint(e.round_trip_time)
\`\`\`

## Async<a id=\\"async\\"></a>

\`async\` support is available by prepending \`a\` to any method.

\`\`\`python
import asyncio
from pprint import pprint
from python_pydantic_enum_str import PythonPydanticEnumStrClient, ApiException

pythonpydanticenumstrclient = PythonPydanticEnumStrClient(
    api_key=\\"YOUR_API_KEY\\",
)


async def main():
    try:
        # Fetches a JSON value based on input parameter
        fetch_response = await pythonpydanticenumstrclient.test.afetch()
        print(fetch_response)
    except ApiException as e:
        print(\\"Exception when calling TestApi.fetch: %s\\\\n\\" % e)
        pprint(e.body)
        pprint(e.headers)
        pprint(e.status)
        pprint(e.reason)
        pprint(e.round_trip_time)


asyncio.run(main())
\`\`\`

## Raw HTTP Response<a id=\\"raw-http-response\\"></a>

To access raw HTTP response values, use the \`.raw\` namespace.

\`\`\`python
from pprint import pprint
from python_pydantic_enum_str import PythonPydanticEnumStrClient, ApiException

pythonpydanticenumstrclient = PythonPydanticEnumStrClient(
    api_key=\\"YOUR_API_KEY\\",
)

try:
    # Fetches a JSON value based on input parameter
    fetch_response = pythonpydanticenumstrclient.test.raw.fetch()
    pprint(fetch_response.body)
    pprint(fetch_response.body[\\"value\\"])
    pprint(fetch_response.headers)
    pprint(fetch_response.status)
    pprint(fetch_response.round_trip_time)
except ApiException as e:
    print(\\"Exception when calling TestApi.fetch: %s\\\\n\\" % e)
    pprint(e.body)
    pprint(e.headers)
    pprint(e.status)
    pprint(e.reason)
    pprint(e.round_trip_time)
\`\`\`


## Reference<a id=\\"reference\\"></a>
### \`pythonpydanticenumstrclient.test.fetch\`<a id=\\"pythonpydanticenumstrclienttestfetch\\"></a>

Provide an input parameter to receive a JSON value with properties.

#### üõ†Ô∏è Usage<a id=\\"üõ†Ô∏è-usage\\"></a>

\`\`\`python
fetch_response = pythonpydanticenumstrclient.test.fetch()
\`\`\`

#### üîÑ Return<a id=\\"üîÑ-return\\"></a>

[\`TestFetchResponse\`](./python_pydantic_enum_str/pydantic/test_fetch_response.py)

#### üåê Endpoint<a id=\\"üåê-endpoint\\"></a>

\`/simple-endpoint\` \`get\`

[üîô **Back to Table of Contents**](#table-of-contents)

---


## Author<a id=\\"author\\"></a>
This Python package is automatically generated by [Konfig](https://konfigthis.com)
"
`;
