import React from "react";
import { HttpMethodsEnum } from "konfig-lib/dist/forEachOperation";
// @ts-ignore
import Description from "./_description.mdx";
// @ts-ignore
import GettingStarted from "./_getting-started.mdx";
import { Sdk } from "@site/src/components/Sdk";

export default function MailchimpTypeScriptSdk() {
  return (
    <Sdk
      sdkName="mailchimp-typescript-sdk"
      metaDescription="Mailchimp is a marketing platform for small businesses. It offers an all-in-one marketing solution that includes email marketing, ads, landing pages, and automation. With Mailchimp, businesses can design and send targeted campaigns, analyze their performance, and grow their audience."
      company="Mailchimp"
      doesNotHaveApiDescription={true}
      // Missing serviceName
      logo="https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/mailchimp/logo.png"
      clientNameCamelCase="mailchimp"
      homepage="mailchimp.com/"
      lastUpdated={new Date("2024-03-07T08:55:03.100Z")}
      faviconUrl="https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/mailchimp/favicon.png"
      // Missing contactUrl
      contactEmail="apihelp@mailchimp.com"
      previewLinkImage="https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/mailchimp/imagePreview.png"
      GettingStarted={GettingStarted}
      Description={Description}
      methods={[
  {
    "url": "/",
    "method": "listResources",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "root",
    "typeScriptTag": "root",
    "description": "List api root resources",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The API root resource links to all other resources available in the API."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/activity-feed/chimp-chatter",
    "method": "getLatestChimpChatter",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "activityFeed",
    "typeScriptTag": "activityFeed",
    "description": "Get latest chimp chatter",
    "parameters": [
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An array of Chimp Chatter messages. There's a maximum of 200 messages present for an account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/account-exports",
    "method": "listForGivenAccount",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "accountExports",
    "typeScriptTag": "accountExports",
    "description": "List account exports",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An array of objects, each representing an account export."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/account-exports",
    "method": "createNewExport",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "accountExports",
    "typeScriptTag": "accountExports",
    "description": "Add export",
    "parameters": [
      {
        "name": "include_stages",
        "schema": "array",
        "required": true,
        "description": ""
      },
      {
        "name": "since_timestamp",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An account export."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/account-exports/{export_id}",
    "method": "info",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "accountExport",
    "typeScriptTag": "accountExport",
    "description": "Get account export info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "exportId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the account export."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An account export."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/authorized-apps",
    "method": "listConnectedApplications",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "authorizedApps",
    "typeScriptTag": "authorizedApps",
    "description": "List authorized apps",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An array of objects, each representing an authorized application."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/authorized-apps/{app_id}",
    "method": "getInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "authorizedApps",
    "typeScriptTag": "authorizedApps",
    "description": "Get authorized app info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "appId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the connected authorized application."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An authorized app."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations",
    "method": "listSummary",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "List automations",
    "parameters": [
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "beforeCreateTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to automations created before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceCreateTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to automations created after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "beforeStartTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to automations started before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceStartTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to automations started after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "status",
        "schema": "string",
        "required": false,
        "description": "Restrict the results to automations with the specified status."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An array of objects, each representing an Automation workflow."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations",
    "method": "createClassic",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Add automation",
    "parameters": [
      {
        "name": "recipients",
        "schema": "object",
        "required": true,
        "description": ""
      },
      {
        "name": "settings",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "trigger_settings",
        "schema": "object",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual Automation workflow's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}",
    "method": "getClassicWorkflowInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Get automation info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual Automation workflow's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/actions/pause-all-emails",
    "method": "pauseWorkflowEmails",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Pause automation emails",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/actions/start-all-emails",
    "method": "startAllEmails",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Start automation emails",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/actions/archive",
    "method": "archiveAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Archive automation",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/emails",
    "method": "getClassicWorkflowEmails",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "List automated emails",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of the emails in an Automation workflow."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/emails/{workflow_email_id}",
    "method": "deleteWorkflowEmail",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Delete workflow email",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "workflowEmailId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow email."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/emails/{workflow_email_id}",
    "method": "getEmailInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Get workflow email info",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "workflowEmailId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow email."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual Automation workflow email."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/emails/{workflow_email_id}",
    "method": "updateWorkflowEmail",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Update workflow email",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "workflowEmailId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow email."
      },
      {
        "name": "settings",
        "schema": "object",
        "description": ""
      },
      {
        "name": "delay",
        "schema": "object",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual Automation workflow email."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/emails/{workflow_email_id}/queue",
    "method": "listQueueEmails",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "List automated email subscribers",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "workflowEmailId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow email."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An automation workflow"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/emails/{workflow_email_id}/queue",
    "method": "addSubscriberToWorkflowEmail",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Add subscriber to workflow email",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "workflowEmailId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow email."
      },
      {
        "name": "email_address",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about subscribers in an Automation email queue."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}",
    "method": "classicAutomationSubscriberInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Get automated email subscriber",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "workflowEmailId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow email."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about subscribers in an Automation email queue."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/emails/{workflow_email_id}/actions/pause",
    "method": "pauseAutomatedEmail",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Pause automated email",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "workflowEmailId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow email."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/emails/{workflow_email_id}/actions/start",
    "method": "startAutomatedEmail",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Start automated email",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "workflowEmailId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow email."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/removed-subscribers",
    "method": "getRemovedSubscribers",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "List subscribers removed from workflow",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of the subscribers who were removed from an Automation workflow."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/removed-subscribers",
    "method": "removeSubscriberFromWorkflow",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Remove subscriber from workflow",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "email_address",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of a subscriber removed from an Automation workflow."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/automations/{workflow_id}/removed-subscribers/{subscriber_hash}",
    "method": "getRemovedSubscriberInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "automations",
    "typeScriptTag": "automations",
    "description": "Get subscriber removed from workflow",
    "parameters": [
      {
        "name": "workflowId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the Automation workflow."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of a subscriber removed from an Automation workflow."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/batches",
    "method": "listRequestsSummary",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "batches",
    "typeScriptTag": "batches",
    "description": "List batch requests",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of batch requests that have been made."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/batches",
    "method": "startOperationProcess",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "batches",
    "typeScriptTag": "batches",
    "description": "Start batch operation",
    "parameters": [
      {
        "name": "operations",
        "schema": "array",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The status of a batch request"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/batches/{batch_id}",
    "method": "stopRequest",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "batches",
    "typeScriptTag": "batches",
    "description": "Delete batch request",
    "parameters": [
      {
        "name": "batchId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the batch operation."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/batches/{batch_id}",
    "method": "getOperationStatus",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "batches",
    "typeScriptTag": "batches",
    "description": "Get batch operation status",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "batchId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the batch operation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The status of a batch request"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/batch-webhooks",
    "method": "listWebhooks",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "batchWebhooks",
    "typeScriptTag": "batchWebhooks",
    "description": "List batch webhooks",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Manage webhooks for batch requests."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/batch-webhooks",
    "method": "addWebhook",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "batchWebhooks",
    "typeScriptTag": "batchWebhooks",
    "description": "Add batch webhook",
    "parameters": [
      {
        "name": "url",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "enabled",
        "schema": "boolean",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A webhook configured for batch status updates."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/batch-webhooks/{batch_webhook_id}",
    "method": "removeWebhook",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "batchWebhooks",
    "typeScriptTag": "batchWebhooks",
    "description": "Delete batch webhook",
    "parameters": [
      {
        "name": "batchWebhookId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the batch webhook."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/batch-webhooks/{batch_webhook_id}",
    "method": "getInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "batchWebhooks",
    "typeScriptTag": "batchWebhooks",
    "description": "Get batch webhook info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "batchWebhookId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the batch webhook."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A webhook configured for batch status updates."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/batch-webhooks/{batch_webhook_id}",
    "method": "updateWebhook",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "batchWebhooks",
    "typeScriptTag": "batchWebhooks",
    "description": "Update batch webhook",
    "parameters": [
      {
        "name": "batchWebhookId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the batch webhook."
      },
      {
        "name": "url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "enabled",
        "schema": "boolean",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A webhook configured for batch status updates."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/template-folders",
    "method": "listFolders",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "templateFolders",
    "typeScriptTag": "templateFolders",
    "description": "List template folders",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of template folders"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/template-folders",
    "method": "addNewFolder",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "templateFolders",
    "typeScriptTag": "templateFolders",
    "description": "Add template folder",
    "parameters": [
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A folder used to organize templates."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/template-folders/{folder_id}",
    "method": "deleteSpecificFolder",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "templateFolders",
    "typeScriptTag": "templateFolders",
    "description": "Delete template folder",
    "parameters": [
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the template folder."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/template-folders/{folder_id}",
    "method": "getInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "templateFolders",
    "typeScriptTag": "templateFolders",
    "description": "Get template folder",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the template folder."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A folder used to organize templates."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/template-folders/{folder_id}",
    "method": "updateSpecificFolder",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "templateFolders",
    "typeScriptTag": "templateFolders",
    "description": "Update template folder",
    "parameters": [
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the template folder."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A folder used to organize templates."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaign-folders",
    "method": "listCampaignFolders",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "campaignFolders",
    "typeScriptTag": "campaignFolders",
    "description": "List campaign folders",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of campaign folders"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaign-folders",
    "method": "addNewFolder",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaignFolders",
    "typeScriptTag": "campaignFolders",
    "description": "Add campaign folder",
    "parameters": [
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A folder used to organize campaigns."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaign-folders/{folder_id}",
    "method": "deleteFolder",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "campaignFolders",
    "typeScriptTag": "campaignFolders",
    "description": "Delete campaign folder",
    "parameters": [
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign folder."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaign-folders/{folder_id}",
    "method": "getFolderInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "campaignFolders",
    "typeScriptTag": "campaignFolders",
    "description": "Get campaign folder",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign folder."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A folder used to organize campaigns."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaign-folders/{folder_id}",
    "method": "updateSpecificFolder",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "campaignFolders",
    "typeScriptTag": "campaignFolders",
    "description": "Update campaign folder",
    "parameters": [
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign folder."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A folder used to organize campaigns."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns",
    "method": "getAll",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "List campaigns",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "type",
        "schema": "string",
        "required": false,
        "description": "The campaign type."
      },
      {
        "name": "status",
        "schema": "string",
        "required": false,
        "description": "The status of the campaign."
      },
      {
        "name": "beforeSendTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceSendTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "beforeCreateTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to campaigns created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceCreateTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to campaigns created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": false,
        "description": "The unique id for the list."
      },
      {
        "name": "folderId",
        "schema": "string",
        "required": false,
        "description": "The unique folder id."
      },
      {
        "name": "memberId",
        "schema": "string",
        "required": false,
        "description": "Retrieve campaigns sent to a particular list member. Member ID is The MD5 hash of the lowercase version of the list member’s email address."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      },
      {
        "name": "includeResendShortcutEligibility",
        "schema": "boolean",
        "required": false,
        "description": "Return the `resend_shortcut_eligibility` field in the response, which tells you if the campaign is eligible for the various Campaign Resend Shortcuts offered."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An array of campaigns."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns",
    "method": "createNewMailchimpCampaign",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Add campaign",
    "parameters": [
      {
        "name": "type",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "recipients",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "settings",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "variate_settings",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "tracking",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "rss_opts",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "social_card",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "content_type",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual campaign's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}",
    "method": "removeCampaign",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Delete campaign",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}",
    "method": "getInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Get campaign info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "includeResendShortcutEligibility",
        "schema": "boolean",
        "required": false,
        "description": "Return the `resend_shortcut_eligibility` field in the response, which tells you if the campaign is eligible for the various Campaign Resend Shortcuts offered."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual campaign's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}",
    "method": "updateSettings",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Update campaign settings",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "recipients",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "settings",
        "schema": "object",
        "required": true,
        "description": ""
      },
      {
        "name": "variate_settings",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "tracking",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "rss_opts",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "social_card",
        "schema": "object",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual campaign's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/actions/cancel-send",
    "method": "cancelSendAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Cancel campaign",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/actions/replicate",
    "method": "replicateAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Replicate campaign",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual campaign's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/actions/send",
    "method": "sendAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Send campaign",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/actions/schedule",
    "method": "scheduleDelivery",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Schedule campaign",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "schedule_time",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "timewarp",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "batch_delivery",
        "schema": "object",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/actions/unschedule",
    "method": "unscheduleAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Unschedule campaign",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/actions/test",
    "method": "sendTestEmail",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Send test email",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "test_emails",
        "schema": "array",
        "required": true,
        "description": ""
      },
      {
        "name": "send_type",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/actions/pause",
    "method": "pauseRssCampaign",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Pause rss campaign",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/actions/resume",
    "method": "resumeRssCampaign",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Resume rss campaign",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/actions/create-resend",
    "method": "resendAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Resend campaign",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "shortcut_type",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual campaign's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/content",
    "method": "getContent",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Get campaign content",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The HTML and plain-text content for a campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/content",
    "method": "setContent",
    "httpMethod": HttpMethodsEnum.PUT,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Set campaign content",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "plain_text",
        "schema": "string",
        "description": ""
      },
      {
        "name": "html",
        "schema": "string",
        "description": ""
      },
      {
        "name": "url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "template",
        "schema": "object",
        "description": ""
      },
      {
        "name": "archive",
        "schema": "object",
        "description": ""
      },
      {
        "name": "variate_contents",
        "schema": "array",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The HTML and plain-text content for a campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/feedback",
    "method": "listFeedback",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "List campaign feedback",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of the comment feedback for a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/feedback",
    "method": "addFeedback",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Add campaign feedback",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "block_id",
        "schema": "integer",
        "required": false,
        "description": ""
      },
      {
        "name": "message",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "is_complete",
        "schema": "boolean",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A specific feedback message from a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/feedback/{feedback_id}",
    "method": "removeFeedbackMessage",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Delete campaign feedback message",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "feedbackId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the feedback message."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/feedback/{feedback_id}",
    "method": "getFeedbackMessage",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Get campaign feedback message",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "feedbackId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the feedback message."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A specific feedback message from a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/feedback/{feedback_id}",
    "method": "updateFeedbackMessage",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Update campaign feedback message",
    "parameters": [
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "feedbackId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the feedback message."
      },
      {
        "name": "block_id",
        "schema": "integer",
        "description": ""
      },
      {
        "name": "message",
        "schema": "string",
        "description": ""
      },
      {
        "name": "is_complete",
        "schema": "boolean",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A specific feedback message from a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/campaigns/{campaign_id}/send-checklist",
    "method": "getSendChecklist",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "campaigns",
    "typeScriptTag": "campaigns",
    "description": "Get campaign send checklist",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The send checklist for the campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/connected-sites",
    "method": "listAll",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "connectedSites",
    "typeScriptTag": "connectedSites",
    "description": "List connected sites",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of connected sites in the account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/connected-sites",
    "method": "createNewMailchimpSite",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "connectedSites",
    "typeScriptTag": "connectedSites",
    "description": "Add connected site",
    "parameters": [
      {
        "name": "foreign_id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "domain",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific connected site."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/connected-sites/{connected_site_id}",
    "method": "removeSite",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "connectedSites",
    "typeScriptTag": "connectedSites",
    "description": "Delete connected site",
    "parameters": [
      {
        "name": "connectedSiteId",
        "schema": "string",
        "required": true,
        "description": "The unique identifier for the site."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/connected-sites/{connected_site_id}",
    "method": "getInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "connectedSites",
    "typeScriptTag": "connectedSites",
    "description": "Get connected site",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "connectedSiteId",
        "schema": "string",
        "required": true,
        "description": "The unique identifier for the site."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific connected site."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/connected-sites/{connected_site_id}/actions/verify-script-installation",
    "method": "verifyScriptInstallation",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "connectedSites",
    "typeScriptTag": "connectedSites",
    "description": "Verify connected site script",
    "parameters": [
      {
        "name": "connectedSiteId",
        "schema": "string",
        "required": true,
        "description": "The unique identifier for the site."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/conversations",
    "method": "getAllConversations",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "conversations",
    "typeScriptTag": "conversations",
    "description": "List conversations",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "hasUnreadMessages",
        "schema": "string",
        "required": false,
        "description": "Whether the conversation has any unread messages."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": false,
        "description": "The unique id for the list."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": false,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of this account's tracked conversations."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/conversations/{conversation_id}",
    "method": "getById",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "conversations",
    "typeScriptTag": "conversations",
    "description": "Get conversation",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "conversationId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the conversation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Details about an individual conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your Mailchimp account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/conversations/{conversation_id}/messages",
    "method": "listMessagesFromConversation",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "conversations",
    "typeScriptTag": "conversations",
    "description": "List messages",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "conversationId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the conversation."
      },
      {
        "name": "isRead",
        "schema": "string",
        "required": false,
        "description": "Whether a conversation message has been marked as read."
      },
      {
        "name": "beforeTimestamp",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to messages created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceTimestamp",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to messages created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Messages from a specific conversation."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/conversations/{conversation_id}/messages/{message_id}",
    "method": "getMessageById",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "conversations",
    "typeScriptTag": "conversations",
    "description": "Get message",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "conversationId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the conversation."
      },
      {
        "name": "messageId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the conversation message."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual message in a conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your Mailchimp account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger",
    "method": "triggerStepAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "customerJourneys",
    "typeScriptTag": "customerJourneys",
    "description": "Customer Journeys API trigger for a contact",
    "parameters": [
      {
        "name": "journeyId",
        "schema": "integer",
        "required": true,
        "description": "The id for the Journey."
      },
      {
        "name": "stepId",
        "schema": "integer",
        "required": true,
        "description": "The id for the Step."
      },
      {
        "name": "email_address",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/files",
    "method": "listStoredFiles",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "List stored files",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "type",
        "schema": "string",
        "required": false,
        "description": "The file type for the File Manager file."
      },
      {
        "name": "createdBy",
        "schema": "string",
        "required": false,
        "description": "The Mailchimp account user who created the File Manager file."
      },
      {
        "name": "beforeCreatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceCreatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of available images and files stored in the File Manager for the account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/files",
    "method": "uploadFile",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "Add file",
    "parameters": [
      {
        "name": "folder_id",
        "schema": "integer",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "file_data",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual file listed in the File Manager."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/files/{file_id}",
    "method": "removeFileById",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "Delete file",
    "parameters": [
      {
        "name": "fileId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the File Manager file."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/files/{file_id}",
    "method": "getFile",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "Get file",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "fileId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the File Manager file."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual file listed in the File Manager."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/files/{file_id}",
    "method": "updateFile",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "Update file",
    "parameters": [
      {
        "name": "fileId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the File Manager file."
      },
      {
        "name": "folder_id",
        "schema": "integer",
        "description": ""
      },
      {
        "name": "name",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual file listed in the File Manager."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/folders",
    "method": "getFolderList",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "List folders",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "createdBy",
        "schema": "string",
        "required": false,
        "description": "The Mailchimp account user who created the File Manager file."
      },
      {
        "name": "beforeCreatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceCreatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of all folders in the File Manager."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/folders",
    "method": "addNewFolder",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "Add folder",
    "parameters": [
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual folder listed in the File Manager."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/folders/{folder_id}",
    "method": "deleteFolderById",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "Delete folder",
    "parameters": [
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the File Manager folder."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/folders/{folder_id}",
    "method": "getFolderInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "Get folder",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the File Manager folder."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual folder listed in the File Manager."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/folders/{folder_id}",
    "method": "updateSpecificFolder",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "Update folder",
    "parameters": [
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the File Manager folder."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual folder listed in the File Manager."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/file-manager/folders/{folder_id}/files",
    "method": "listStoredFiles",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "fileManager",
    "typeScriptTag": "fileManager",
    "description": "List stored files",
    "parameters": [
      {
        "name": "folderId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the File Manager folder."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "type",
        "schema": "string",
        "required": false,
        "description": "The file type for the File Manager file."
      },
      {
        "name": "createdBy",
        "schema": "string",
        "required": false,
        "description": "The Mailchimp account user who created the File Manager file."
      },
      {
        "name": "beforeCreatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceCreatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of available images and files stored in the File Manager for the account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists",
    "method": "getAllInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get lists info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "beforeDateCreated",
        "schema": "string",
        "required": false,
        "description": "Restrict response to lists created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceDateCreated",
        "schema": "string",
        "required": false,
        "description": "Restrict results to lists created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "beforeCampaignLastSent",
        "schema": "string",
        "required": false,
        "description": "Restrict results to lists created before the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceCampaignLastSent",
        "schema": "string",
        "required": false,
        "description": "Restrict results to lists created after the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "email",
        "schema": "string",
        "required": false,
        "description": "Restrict results to lists that include a specific subscriber's email address."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      },
      {
        "name": "hasEcommerceStore",
        "schema": "boolean",
        "required": false,
        "description": "Restrict results to lists that contain an active, connected, undeleted ecommerce store."
      },
      {
        "name": "includeTotalContacts",
        "schema": "boolean",
        "required": false,
        "description": "Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of subscriber lists for this account. Lists contain subscribers who have opted-in to receive correspondence from you or your organization."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists",
    "method": "createNewList",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add list",
    "parameters": [
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "contact",
        "schema": "object",
        "required": true,
        "description": ""
      },
      {
        "name": "permission_reminder",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "use_archive_bar",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "campaign_defaults",
        "schema": "object",
        "required": true,
        "description": ""
      },
      {
        "name": "notify_on_subscribe",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "notify_on_unsubscribe",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "email_type_option",
        "schema": "boolean",
        "required": true,
        "description": ""
      },
      {
        "name": "double_optin",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "marketing_permissions",
        "schema": "boolean",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}",
    "method": "deleteList",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Delete list",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}",
    "method": "getListInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get list info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "includeTotalContacts",
        "schema": "boolean",
        "required": false,
        "description": "Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}",
    "method": "updateSettings",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Update lists",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "contact",
        "schema": "object",
        "required": true,
        "description": ""
      },
      {
        "name": "permission_reminder",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "use_archive_bar",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "campaign_defaults",
        "schema": "object",
        "required": true,
        "description": ""
      },
      {
        "name": "notify_on_subscribe",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "notify_on_unsubscribe",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "email_type_option",
        "schema": "boolean",
        "required": true,
        "description": ""
      },
      {
        "name": "double_optin",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "marketing_permissions",
        "schema": "boolean",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}",
    "method": "batchSubscribeOrUnsubscribe",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Batch subscribe or unsubscribe",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "skipMergeValidation",
        "schema": "boolean",
        "required": false,
        "description": "If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false."
      },
      {
        "name": "skipDuplicateCheck",
        "schema": "boolean",
        "required": false,
        "description": "If skip_duplicate_check is true, we will ignore duplicates sent in the request when using the batch sub/unsub on the lists endpoint. The status of the first appearance in the request will be saved. This defaults to false."
      },
      {
        "name": "members",
        "schema": "array",
        "required": true,
        "description": ""
      },
      {
        "name": "sync_tags",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "update_existing",
        "schema": "boolean",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Batch update list members."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/abuse-reports",
    "method": "getAllAbuseReports",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List abuse reports",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/abuse-reports/{report_id}",
    "method": "getAbuseReport",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get abuse report",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "reportId",
        "schema": "string",
        "required": true,
        "description": "The id for the abuse report."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Details of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/activity",
    "method": "getRecentActivityStats",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List recent activity",
    "parameters": [
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Up to the previous 180 days of daily detailed aggregated activity stats for a specific list. Does not include AutoResponder or Automation activity."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/clients",
    "method": "listTopEmailClients",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List top email clients",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The top email clients based on user-agent strings."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/growth-history",
    "method": "getGrowthHistoryData",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List growth history data",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A month-by-month summary of a specific list's growth activity."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/growth-history/{month}",
    "method": "getGrowthHistoryByMonth",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get growth history by month",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "month",
        "schema": "string",
        "required": true,
        "description": "A specific month of list growth history."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of a specific list's growth activity for a specific month and year."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories",
    "method": "listInterestCategories",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List interest categories",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "type",
        "schema": "string",
        "required": false,
        "description": "Restrict results a type of interest group"
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about this list's interest categories."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories",
    "method": "addInterestCategory",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add interest category",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "title",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "display_order",
        "schema": "integer",
        "required": false,
        "description": ""
      },
      {
        "name": "type",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories/{interest_category_id}",
    "method": "deleteInterestCategory",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Delete interest category",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "interestCategoryId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the interest category."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories/{interest_category_id}",
    "method": "getInterestCategoryInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get interest category info",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "interestCategoryId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the interest category."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories/{interest_category_id}",
    "method": "updateInterestCategory",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Update interest category",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "interestCategoryId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the interest category."
      },
      {
        "name": "title",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "display_order",
        "schema": "integer",
        "required": false,
        "description": ""
      },
      {
        "name": "type",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests",
    "method": "listCategoryInterests",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List interests in category",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "interestCategoryId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the interest category."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of this category's interests"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests",
    "method": "addInterestInCategory",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add interest in category",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "interestCategoryId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the interest category."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "display_order",
        "schema": "integer",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the Mailchimp application."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}",
    "method": "deleteInterestInCategory",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Delete interest in category",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "interestCategoryId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the interest category."
      },
      {
        "name": "interestId",
        "schema": "string",
        "required": true,
        "description": "The specific interest or 'group name'."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}",
    "method": "getInterestInCategory",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get interest in category",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "interestCategoryId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the interest category."
      },
      {
        "name": "interestId",
        "schema": "string",
        "required": true,
        "description": "The specific interest or 'group name'."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the Mailchimp application."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}",
    "method": "updateInterestCategoryInterest",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Update interest in category",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "interestCategoryId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the interest category."
      },
      {
        "name": "interestId",
        "schema": "string",
        "required": true,
        "description": "The specific interest or 'group name'."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "display_order",
        "schema": "integer",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the Mailchimp application."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/segments",
    "method": "getSegmentsInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List segments",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "type",
        "schema": "string",
        "required": false,
        "description": "Limit results based on segment type."
      },
      {
        "name": "sinceCreatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict results to segments created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "beforeCreatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict results to segments created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "includeCleaned",
        "schema": "boolean",
        "required": false,
        "description": "Include cleaned members in response"
      },
      {
        "name": "includeTransactional",
        "schema": "boolean",
        "required": false,
        "description": "Include transactional members in response"
      },
      {
        "name": "includeUnsubscribed",
        "schema": "boolean",
        "required": false,
        "description": "Include unsubscribed members in response"
      },
      {
        "name": "sinceUpdatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict results to segments update after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "beforeUpdatedAt",
        "schema": "string",
        "required": false,
        "description": "Restrict results to segments update before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of available segments."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/segments",
    "method": "addNewSegment",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add segment",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "static_segment",
        "schema": "array",
        "required": false,
        "description": ""
      },
      {
        "name": "options",
        "schema": "object",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific segment."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/segments/{segment_id}",
    "method": "deleteSegment",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Delete segment",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "segmentId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the segment."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/segments/{segment_id}",
    "method": "getSegmentInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get segment info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "segmentId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the segment."
      },
      {
        "name": "includeCleaned",
        "schema": "boolean",
        "required": false,
        "description": "Include cleaned members in response"
      },
      {
        "name": "includeTransactional",
        "schema": "boolean",
        "required": false,
        "description": "Include transactional members in response"
      },
      {
        "name": "includeUnsubscribed",
        "schema": "boolean",
        "required": false,
        "description": "Include unsubscribed members in response"
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific segment."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/segments/{segment_id}",
    "method": "updateSegmentById",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Update segment",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "segmentId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the segment."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "static_segment",
        "schema": "array",
        "required": false,
        "description": ""
      },
      {
        "name": "options",
        "schema": "object",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific segment."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/segments/{segment_id}",
    "method": "batchAddRemoveMembers",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Batch add or remove members",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "segmentId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the segment."
      },
      {
        "name": "members_to_add",
        "schema": "array",
        "description": ""
      },
      {
        "name": "members_to_remove",
        "schema": "array",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Batch add/remove List members to/from static segment"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/segments/{segment_id}/members",
    "method": "getSegmentMembers",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List members in segment",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "segmentId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the segment."
      },
      {
        "name": "includeCleaned",
        "schema": "boolean",
        "required": false,
        "description": "Include cleaned members in response"
      },
      {
        "name": "includeTransactional",
        "schema": "boolean",
        "required": false,
        "description": "Include transactional members in response"
      },
      {
        "name": "includeUnsubscribed",
        "schema": "boolean",
        "required": false,
        "description": "Include unsubscribed members in response"
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "View members in a specific list segment."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/segments/{segment_id}/members",
    "method": "addMemberToSegment",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add member to segment",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "segmentId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the segment."
      },
      {
        "name": "email_address",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}",
    "method": "removeMemberFromSegment",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Remove list member from segment",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "segmentId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the segment."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/tag-search",
    "method": "searchTagsByName",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Search for tags on a list by name.",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "name",
        "schema": "string",
        "required": false,
        "description": "The search query used to filter tags.  The search query will be compared to each tag as a prefix, so all tags that have a name starting with this field will be returned."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of tags matching the input query."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members",
    "method": "getMembersInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List members info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "emailType",
        "schema": "string",
        "required": false,
        "description": "The email type."
      },
      {
        "name": "status",
        "schema": "string",
        "required": false,
        "description": "The subscriber's status."
      },
      {
        "name": "sinceTimestampOpt",
        "schema": "string",
        "required": false,
        "description": "Restrict results to subscribers who opted-in after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "beforeTimestampOpt",
        "schema": "string",
        "required": false,
        "description": "Restrict results to subscribers who opted-in before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceLastChanged",
        "schema": "string",
        "required": false,
        "description": "Restrict results to subscribers whose information changed after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "beforeLastChanged",
        "schema": "string",
        "required": false,
        "description": "Restrict results to subscribers whose information changed before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "uniqueEmailId",
        "schema": "string",
        "required": false,
        "description": "A unique identifier for the email address across all Mailchimp lists."
      },
      {
        "name": "vipOnly",
        "schema": "boolean",
        "required": false,
        "description": "A filter to return only the list's VIP members. Passing `true` will restrict results to VIP list members, passing `false` will return all list members."
      },
      {
        "name": "interestCategoryId",
        "schema": "string",
        "required": false,
        "description": "The unique id for the interest category."
      },
      {
        "name": "interestIds",
        "schema": "string",
        "required": false,
        "description": "Used to filter list members by interests. Must be accompanied by interest_category_id and interest_match. The value must be a comma separated list of interest ids present for any supplied interest categories."
      },
      {
        "name": "interestMatch",
        "schema": "string",
        "required": false,
        "description": "Used to filter list members by interests. Must be accompanied by interest_category_id and interest_ids. \"any\" will match a member with any of the interest supplied, \"all\" will only match members with every interest supplied, and \"none\" will match members without any of the interest supplied."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      },
      {
        "name": "sinceLastCampaign",
        "schema": "boolean",
        "required": false,
        "description": "Filter subscribers by those subscribed/unsubscribed/pending/cleaned since last email campaign send. Member status is required to use this filter."
      },
      {
        "name": "unsubscribedSince",
        "schema": "string",
        "required": false,
        "description": "Filter subscribers by those unsubscribed since a specific date. Using any status other than unsubscribed with this filter will result in an error."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Manage members of a specific Mailchimp list, including currently subscribed, unsubscribed, and bounced members."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members",
    "method": "addMemberToList",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add member to list",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "skipMergeValidation",
        "schema": "boolean",
        "required": false,
        "description": "If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false."
      },
      {
        "name": "tags",
        "schema": "array",
        "required": false,
        "description": ""
      },
      {
        "name": "email_address",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "email_type",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "status",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "merge_fields",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "interests",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "language",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "vip",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "location",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "marketing_permissions",
        "schema": "array",
        "required": false,
        "description": ""
      },
      {
        "name": "ip_signup",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "timestamp_signup",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "ip_opt",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "timestamp_opt",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}",
    "method": "archiveMember",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Archive list member",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}",
    "method": "getMemberInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get member info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}",
    "method": "updateMember",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Update list member",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "skipMergeValidation",
        "schema": "boolean",
        "required": false,
        "description": "If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false."
      },
      {
        "name": "email_address",
        "schema": "string",
        "description": ""
      },
      {
        "name": "email_type",
        "schema": "string",
        "description": ""
      },
      {
        "name": "status",
        "schema": "string",
        "description": ""
      },
      {
        "name": "merge_fields",
        "schema": "object",
        "description": ""
      },
      {
        "name": "interests",
        "schema": "object",
        "description": ""
      },
      {
        "name": "language",
        "schema": "string",
        "description": ""
      },
      {
        "name": "vip",
        "schema": "boolean",
        "description": ""
      },
      {
        "name": "location",
        "schema": "object",
        "description": ""
      },
      {
        "name": "marketing_permissions",
        "schema": "array",
        "description": ""
      },
      {
        "name": "ip_signup",
        "schema": "string",
        "description": ""
      },
      {
        "name": "timestamp_signup",
        "schema": "string",
        "description": ""
      },
      {
        "name": "ip_opt",
        "schema": "string",
        "description": ""
      },
      {
        "name": "timestamp_opt",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}",
    "method": "addOrUpdateMember",
    "httpMethod": HttpMethodsEnum.PUT,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add or update list member",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "skipMergeValidation",
        "schema": "boolean",
        "required": false,
        "description": "If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false."
      },
      {
        "name": "email_address",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "status_if_new",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "email_type",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "status",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "merge_fields",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "interests",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "language",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "vip",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "location",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "marketing_permissions",
        "schema": "array",
        "required": false,
        "description": ""
      },
      {
        "name": "ip_signup",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "timestamp_signup",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "ip_opt",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "timestamp_opt",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/activity",
    "method": "viewRecentActivityEvents",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "View recent activity 50",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "action",
        "schema": "array",
        "required": false,
        "description": "A comma seperated list of actions to return."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The last 50 member events for a list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/activity-feed",
    "method": "viewRecentActivity",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "View recent activity",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "activityFilters",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of activity filters that correspond to a set of activity types, e.g \"?activity_filters=open,bounce,click\"."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The member activity events for a given member."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/tags",
    "method": "getMemberTags",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List member tags",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of tags assigned to a list member."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/tags",
    "method": "addMemberTags",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add or remove member tags",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      },
      {
        "name": "tags",
        "schema": "array",
        "required": true,
        "description": ""
      },
      {
        "name": "is_syncing",
        "schema": "boolean",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/events",
    "method": "getMemberEvents",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List member events",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of events for a given contact"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/events",
    "method": "addMemberEvent",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add event",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "properties",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "is_syncing",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "occurred_at",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/goals",
    "method": "getMemberGoals",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List member goal events",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The last 50 Goal events for a member on a specific list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/notes",
    "method": "getMemberNotes",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List recent member notes",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns notes sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The last 10 notes for a specific list member, based on date created."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/notes",
    "method": "addMemberNote",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add member note",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      },
      {
        "name": "note",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A specific note for a specific member."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}",
    "method": "deleteNote",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Delete note",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "noteId",
        "schema": "string",
        "required": true,
        "description": "The id for the note."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}",
    "method": "getMemberNote",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get member note",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "noteId",
        "schema": "string",
        "required": true,
        "description": "The id for the note."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A specific note for a specific member."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}",
    "method": "updateNoteSpecificListMember",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Update note",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id."
      },
      {
        "name": "noteId",
        "schema": "string",
        "required": true,
        "description": "The id for the note."
      },
      {
        "name": "note",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A specific note for a specific member."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent",
    "method": "removeMemberPermanent",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Delete list member",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/merge-fields",
    "method": "listMergeFields",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List merge fields",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "type",
        "schema": "string",
        "required": false,
        "description": "The merge field type."
      },
      {
        "name": "required",
        "schema": "boolean",
        "required": false,
        "description": "Whether it's a required merge field."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The [merge fields](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/merge-fields",
    "method": "addMergeField",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add merge field",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "tag",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "type",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "required",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "default_value",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "public",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "display_order",
        "schema": "integer",
        "required": false,
        "description": ""
      },
      {
        "name": "options",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "help_text",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/merge-fields/{merge_id}",
    "method": "deleteMergeField",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Delete merge field",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "mergeId",
        "schema": "string",
        "required": true,
        "description": "The id for the merge field."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/merge-fields/{merge_id}",
    "method": "getMergeFieldInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get merge field",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "mergeId",
        "schema": "string",
        "required": true,
        "description": "The id for the merge field."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/merge-fields/{merge_id}",
    "method": "updateMergeField",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Update merge field",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "mergeId",
        "schema": "string",
        "required": true,
        "description": "The id for the merge field."
      },
      {
        "name": "tag",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "required",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "default_value",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "public",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "display_order",
        "schema": "integer",
        "required": false,
        "description": ""
      },
      {
        "name": "options",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "help_text",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/webhooks",
    "method": "getWebhooksInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List webhooks",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Manage webhooks for a specific list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/webhooks",
    "method": "createWebhook",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Add webhook",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "events",
        "schema": "object",
        "description": ""
      },
      {
        "name": "sources",
        "schema": "object",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Webhook configured for the given list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/webhooks/{webhook_id}",
    "method": "deleteWebhook",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Delete webhook",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "webhookId",
        "schema": "string",
        "required": true,
        "description": "The webhook's id."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/webhooks/{webhook_id}",
    "method": "getWebhookInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get webhook info",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "webhookId",
        "schema": "string",
        "required": true,
        "description": "The webhook's id."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Webhook configured for the given list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/webhooks/{webhook_id}",
    "method": "updateWebhookSettings",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Update webhook",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "webhookId",
        "schema": "string",
        "required": true,
        "description": "The webhook's id."
      },
      {
        "name": "url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "events",
        "schema": "object",
        "description": ""
      },
      {
        "name": "sources",
        "schema": "object",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Webhook configured for the given list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/signup-forms",
    "method": "getSignupForms",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List signup forms",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "List Signup Forms."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/signup-forms",
    "method": "customizeSignupForm",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Customize signup form",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "header",
        "schema": "object",
        "description": ""
      },
      {
        "name": "contents",
        "schema": "array",
        "description": ""
      },
      {
        "name": "styles",
        "schema": "array",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "List signup form."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/locations",
    "method": "getLocations",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "List locations",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of List's locations."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/surveys",
    "method": "getSurveysInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get information about all surveys for a list",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/surveys/{survey_id}",
    "method": "getSurveyDetails",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "lists",
    "typeScriptTag": "lists",
    "description": "Get survey",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/surveys/{survey_id}/actions/publish",
    "method": "publishSurveyAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "Surveys",
    "typeScriptTag": "surveys",
    "description": "Publish a Survey",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Survey Published"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/surveys/{survey_id}/actions/unpublish",
    "method": "unpublishSurveyAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "Surveys",
    "typeScriptTag": "surveys",
    "description": "Unpublish a Survey",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Survey Instance"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/lists/{list_id}/surveys/{survey_id}/actions/create-email",
    "method": "generateCampaign",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "Surveys",
    "typeScriptTag": "surveys",
    "description": "Create a Survey Campaign",
    "parameters": [
      {
        "name": "listId",
        "schema": "string",
        "required": true,
        "description": "The unique ID for the list."
      },
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual campaign's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/landing-pages",
    "method": "list",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "landingPages",
    "typeScriptTag": "landingPages",
    "description": "List landing pages",
    "parameters": [
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      },
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of landing pages."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/landing-pages",
    "method": "createNewMailchimpLandingPage",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "landingPages",
    "typeScriptTag": "landingPages",
    "description": "Add landing page",
    "parameters": [
      {
        "name": "useDefaultList",
        "schema": "boolean",
        "required": false,
        "description": "Will create the Landing Page using the account's Default List instead of requiring a list_id."
      },
      {
        "name": "title",
        "schema": "string",
        "description": ""
      },
      {
        "name": "description",
        "schema": "string",
        "description": ""
      },
      {
        "name": "name",
        "schema": "string",
        "description": ""
      },
      {
        "name": "store_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "list_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "type",
        "schema": "string",
        "description": ""
      },
      {
        "name": "template_id",
        "schema": "integer",
        "description": ""
      },
      {
        "name": "tracking",
        "schema": "object",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual landing page's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/landing-pages/{page_id}",
    "method": "deletePage",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "landingPages",
    "typeScriptTag": "landingPages",
    "description": "Delete landing page",
    "parameters": [
      {
        "name": "pageId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the page."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/landing-pages/{page_id}",
    "method": "getPageInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "landingPages",
    "typeScriptTag": "landingPages",
    "description": "Get landing page info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "pageId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the page."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual landing page's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/landing-pages/{page_id}",
    "method": "updatePageById",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "landingPages",
    "typeScriptTag": "landingPages",
    "description": "Update landing page",
    "parameters": [
      {
        "name": "pageId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the page."
      },
      {
        "name": "title",
        "schema": "string",
        "description": ""
      },
      {
        "name": "description",
        "schema": "string",
        "description": ""
      },
      {
        "name": "name",
        "schema": "string",
        "description": ""
      },
      {
        "name": "store_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "list_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "tracking",
        "schema": "object",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual landing page's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/landing-pages/{page_id}/actions/publish",
    "method": "publishAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "landingPages",
    "typeScriptTag": "landingPages",
    "description": "Publish landing page",
    "parameters": [
      {
        "name": "pageId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the page."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/landing-pages/{page_id}/actions/unpublish",
    "method": "unpublishAction",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "landingPages",
    "typeScriptTag": "landingPages",
    "description": "Unpublish landing page",
    "parameters": [
      {
        "name": "pageId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the page."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/landing-pages/{page_id}/content",
    "method": "getContent",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "landingPages",
    "typeScriptTag": "landingPages",
    "description": "Get landing page content",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "pageId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the page."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The HTML content for a landing page."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports",
    "method": "listCampaignReports",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List campaign reports",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "type",
        "schema": "string",
        "required": false,
        "description": "The campaign type."
      },
      {
        "name": "beforeSendTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sinceSendTime",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of reports containing campaigns marked as Sent."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}",
    "method": "specificCampaignReport",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "Get campaign report",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Report details about a sent campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/abuse-reports",
    "method": "listAbuseReports",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List abuse reports",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of abuse complaints for a specific list."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/abuse-reports/{report_id}",
    "method": "getAbuseReport",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "Get abuse report",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "reportId",
        "schema": "string",
        "required": true,
        "description": "The id for the abuse report."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Details of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/advice",
    "method": "listCampaignFeedback",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List campaign feedback",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of feedback based on a campaign's statistics."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/click-details",
    "method": "getCampaignClickDetails",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List campaign details",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns click reports sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of URLs and unique IDs included in HTML and plain-text versions of a campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/click-details/{link_id}",
    "method": "specificLinkDetails",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "Get campaign link details",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "linkId",
        "schema": "string",
        "required": true,
        "description": "The id for the link."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A report of links clicked in a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/click-details/{link_id}/members",
    "method": "listClickedLinkSubscribers",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List clicked link subscribers",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "linkId",
        "schema": "string",
        "required": true,
        "description": "The id for the link."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of members who clicked on a specific link within a campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}",
    "method": "specificLinkSubscriber",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "Get clicked link subscriber",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "linkId",
        "schema": "string",
        "required": true,
        "description": "The id for the link."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A subscriber who clicked a specific URL in a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/open-details",
    "method": "listCampaignOpenDetails",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List campaign open details",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "since",
        "schema": "string",
        "required": false,
        "description": "Restrict results to campaign open events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns open reports sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A detailed report of any campaign emails that were opened by a list member."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/open-details/{subscriber_hash}",
    "method": "openSubscriberDetails",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "Get opened campaign subscriber",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of a member's opens activity in a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/domain-performance",
    "method": "listDomainPerformanceStats",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List domain performance stats",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Statistics for the top-performing email domains in a campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/eepurl",
    "method": "listEepurlActivity",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List EepURL activity",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of social activity for the campaign, tracked by EepURL."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/email-activity",
    "method": "listEmailActivity",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List email activity",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "since",
        "schema": "string",
        "required": false,
        "description": "Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of member's subscriber activity in a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/email-activity/{subscriber_hash}",
    "method": "getSubscriberActivity",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "Get subscriber email activity",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      },
      {
        "name": "since",
        "schema": "string",
        "required": false,
        "description": "Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of a member's subscriber activity in a specific campaign, including opens, clicks, and bounces."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/locations",
    "method": "listTopOpenLocations",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List top open activities",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Top open locations for a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/sent-to",
    "method": "listCampaignRecipients",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List campaign recipients",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of subscribers who were sent a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/sent-to/{subscriber_hash}",
    "method": "campaignRecipientInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "Get campaign recipient info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A subscriber's status for a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/sub-reports",
    "method": "listChildCampaignReports",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List child campaign reports",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of reports containing child campaigns for a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/unsubscribed",
    "method": "listUnsubscribedMembers",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List unsubscribed members",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list of members who have unsubscribed from a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/unsubscribed/{subscriber_hash}",
    "method": "getUnsubscribedMemberInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "Get unsubscribed member",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "subscriberHash",
        "schema": "string",
        "required": true,
        "description": "The MD5 hash of the lowercase version of the list member's email address."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A member who unsubscribed from a specific campaign."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reports/{campaign_id}/ecommerce-product-activity",
    "method": "getCampaignProductActivity",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reports",
    "typeScriptTag": "reports",
    "description": "List campaign product activity",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the campaign."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of ecommerce products."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/templates",
    "method": "listAvailableTemplates",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "templates",
    "typeScriptTag": "templates",
    "description": "List templates",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "createdBy",
        "schema": "string",
        "required": false,
        "description": "The Mailchimp account user who created the template."
      },
      {
        "name": "sinceDateCreated",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to templates created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "beforeDateCreated",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to templates created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00."
      },
      {
        "name": "type",
        "schema": "string",
        "required": false,
        "description": "Limit results based on template type."
      },
      {
        "name": "category",
        "schema": "string",
        "required": false,
        "description": "Limit results based on category."
      },
      {
        "name": "folderId",
        "schema": "string",
        "required": false,
        "description": "The unique folder id."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns user templates sorted by the specified field."
      },
      {
        "name": "contentType",
        "schema": "string",
        "required": false,
        "description": "Limit results based on how the template's content is put together. Only templates of type `user` can be filtered by `content_type`. If you want to retrieve saved templates created with the legacy email editor, then filter `content_type` to `template`. If you'd rather pull your saved templates for the new editor, filter to `multichannel`. For code your own templates, filter to `html`."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A list an account's available templates."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/templates",
    "method": "createNewTemplate",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "templates",
    "typeScriptTag": "templates",
    "description": "Add template",
    "parameters": [
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "folder_id",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "html",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific template."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/templates/{template_id}",
    "method": "deleteSpecificTemplate",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "templates",
    "typeScriptTag": "templates",
    "description": "Delete template",
    "parameters": [
      {
        "name": "templateId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the template."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/templates/{template_id}",
    "method": "getInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "templates",
    "typeScriptTag": "templates",
    "description": "Get template info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "templateId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the template."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific template."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/templates/{template_id}",
    "method": "updateTemplateById",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "templates",
    "typeScriptTag": "templates",
    "description": "Update template",
    "parameters": [
      {
        "name": "templateId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the template."
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "folder_id",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "html",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific template."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/templates/{template_id}/default-content",
    "method": "viewDefaultContent",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "templates",
    "typeScriptTag": "templates",
    "description": "View default content",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "templateId",
        "schema": "string",
        "required": true,
        "description": "The unique id for the template."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Default content for a template."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/orders",
    "method": "listAccountOrders",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List account orders",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": false,
        "description": "Restrict results to orders with a specific `campaign_id` value."
      },
      {
        "name": "outreachId",
        "schema": "string",
        "required": false,
        "description": "Restrict results to orders with a specific `outreach_id` value."
      },
      {
        "name": "customerId",
        "schema": "string",
        "required": false,
        "description": "Restrict results to orders made by a specific customer."
      },
      {
        "name": "hasOutreach",
        "schema": "boolean",
        "required": false,
        "description": "Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of orders in an account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores",
    "method": "listStores",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List stores",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of stores in the account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores",
    "method": "addStoreToMailchimpAccount",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add store",
    "parameters": [
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "list_id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "name",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "platform",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "domain",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "is_syncing",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "email_address",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "currency_code",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "money_format",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "primary_locale",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "timezone",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "phone",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "address",
        "schema": "object",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual store in an account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}",
    "method": "deleteStore",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete store",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}",
    "method": "getStoreInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get store info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual store in an account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}",
    "method": "updateStore",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update store",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "name",
        "schema": "string",
        "description": ""
      },
      {
        "name": "platform",
        "schema": "string",
        "description": ""
      },
      {
        "name": "domain",
        "schema": "string",
        "description": ""
      },
      {
        "name": "is_syncing",
        "schema": "boolean",
        "description": ""
      },
      {
        "name": "email_address",
        "schema": "string",
        "description": ""
      },
      {
        "name": "currency_code",
        "schema": "string",
        "description": ""
      },
      {
        "name": "money_format",
        "schema": "string",
        "description": ""
      },
      {
        "name": "primary_locale",
        "schema": "string",
        "description": ""
      },
      {
        "name": "timezone",
        "schema": "string",
        "description": ""
      },
      {
        "name": "phone",
        "schema": "string",
        "description": ""
      },
      {
        "name": "address",
        "schema": "object",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "An individual store in an account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts",
    "method": "getStoreCarts",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List carts",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of a store's carts."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts",
    "method": "addCartToStore",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add cart",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "customer",
        "schema": "object",
        "required": true,
        "description": ""
      },
      {
        "name": "campaign_id",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "checkout_url",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "currency_code",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "order_total",
        "schema": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "tax_total",
        "schema": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "lines",
        "schema": "array",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific cart."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts/{cart_id}",
    "method": "removeCart",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete cart",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "cartId",
        "schema": "string",
        "required": true,
        "description": "The id for the cart."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts/{cart_id}",
    "method": "getCartInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get cart info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "cartId",
        "schema": "string",
        "required": true,
        "description": "The id for the cart."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific cart."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts/{cart_id}",
    "method": "updateCartById",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update cart",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "cartId",
        "schema": "string",
        "required": true,
        "description": "The id for the cart."
      },
      {
        "name": "customer",
        "schema": "object",
        "description": ""
      },
      {
        "name": "campaign_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "checkout_url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "currency_code",
        "schema": "string",
        "description": ""
      },
      {
        "name": "order_total",
        "schema": "number",
        "description": ""
      },
      {
        "name": "tax_total",
        "schema": "number",
        "description": ""
      },
      {
        "name": "lines",
        "schema": "array",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific cart."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines",
    "method": "listCartLines",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List cart line items",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "cartId",
        "schema": "string",
        "required": true,
        "description": "The id for the cart."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of a cart's line items."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines",
    "method": "addCartLineItem",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add cart line item",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "cartId",
        "schema": "string",
        "required": true,
        "description": "The id for the cart."
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "product_id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "product_variant_id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "quantity",
        "schema": "integer",
        "required": true,
        "description": ""
      },
      {
        "name": "price",
        "schema": "number",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific cart line item."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}",
    "method": "deleteCartLineItem",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete cart line item",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "cartId",
        "schema": "string",
        "required": true,
        "description": "The id for the cart."
      },
      {
        "name": "lineId",
        "schema": "string",
        "required": true,
        "description": "The id for the line item of a cart."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}",
    "method": "getCartLineItem",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get cart line item",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "cartId",
        "schema": "string",
        "required": true,
        "description": "The id for the cart."
      },
      {
        "name": "lineId",
        "schema": "string",
        "required": true,
        "description": "The id for the line item of a cart."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific cart line item."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}",
    "method": "updateCartLineItem",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update cart line item",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "cartId",
        "schema": "string",
        "required": true,
        "description": "The id for the cart."
      },
      {
        "name": "lineId",
        "schema": "string",
        "required": true,
        "description": "The id for the line item of a cart."
      },
      {
        "name": "product_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "product_variant_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "quantity",
        "schema": "integer",
        "description": ""
      },
      {
        "name": "price",
        "schema": "number",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific cart line item."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/customers",
    "method": "getStoreCustomers",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List customers",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "emailAddress",
        "schema": "string",
        "required": false,
        "description": "Restrict the response to customers with the email address."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of the store's customers."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/customers",
    "method": "addCustomerToStore",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add customer",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "email_address",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "opt_in_status",
        "schema": "boolean",
        "required": true,
        "description": ""
      },
      {
        "name": "company",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "first_name",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "last_name",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "address",
        "schema": "object",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific customer."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/customers/{customer_id}",
    "method": "removeCustomer",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete customer",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "customerId",
        "schema": "string",
        "required": true,
        "description": "The id for the customer of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/customers/{customer_id}",
    "method": "getCustomerInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get customer info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "customerId",
        "schema": "string",
        "required": true,
        "description": "The id for the customer of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific customer."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/customers/{customer_id}",
    "method": "updateCustomer",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update customer",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "customerId",
        "schema": "string",
        "required": true,
        "description": "The id for the customer of a store."
      },
      {
        "name": "opt_in_status",
        "schema": "boolean",
        "description": ""
      },
      {
        "name": "company",
        "schema": "string",
        "description": ""
      },
      {
        "name": "first_name",
        "schema": "string",
        "description": ""
      },
      {
        "name": "last_name",
        "schema": "string",
        "description": ""
      },
      {
        "name": "address",
        "schema": "object",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific customer."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/customers/{customer_id}",
    "method": "addOrUpdateCustomer",
    "httpMethod": HttpMethodsEnum.PUT,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add or update customer",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "customerId",
        "schema": "string",
        "required": true,
        "description": "The id for the customer of a store."
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "email_address",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "opt_in_status",
        "schema": "boolean",
        "required": true,
        "description": ""
      },
      {
        "name": "company",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "first_name",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "last_name",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "address",
        "schema": "object",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific customer."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules",
    "method": "getStorePromoRules",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List promo rules",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of the store's promo rules."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules",
    "method": "addPromoRule",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add promo rule",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "title",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "description",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "starts_at",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "ends_at",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "amount",
        "schema": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "type",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "target",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "enabled",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "created_at_foreign",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "updated_at_foreign",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about an Ecommerce Store's specific Promo Rule"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}",
    "method": "deletePromoRule",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete promo rule",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "promoRuleId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo rule of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}",
    "method": "getStorePromoRule",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get promo rule",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "promoRuleId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo rule of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about an Ecommerce Store's specific Promo Rule"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}",
    "method": "updatePromoRule",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update promo rule",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "promoRuleId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo rule of a store."
      },
      {
        "name": "title",
        "schema": "string",
        "description": ""
      },
      {
        "name": "description",
        "schema": "string",
        "description": ""
      },
      {
        "name": "starts_at",
        "schema": "string",
        "description": ""
      },
      {
        "name": "ends_at",
        "schema": "string",
        "description": ""
      },
      {
        "name": "amount",
        "schema": "number",
        "description": ""
      },
      {
        "name": "type",
        "schema": "string",
        "description": ""
      },
      {
        "name": "target",
        "schema": "string",
        "description": ""
      },
      {
        "name": "enabled",
        "schema": "boolean",
        "description": ""
      },
      {
        "name": "created_at_foreign",
        "schema": "string",
        "description": ""
      },
      {
        "name": "updated_at_foreign",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about an Ecommerce Store's specific Promo Rule"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes",
    "method": "getStorePromoCodes",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List promo codes",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "promoRuleId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo rule of a store."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of the store's promo codes."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes",
    "method": "addPromoCode",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add promo code",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "promoRuleId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo rule of a store."
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "code",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "redemption_url",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "usage_count",
        "schema": "integer",
        "required": false,
        "description": ""
      },
      {
        "name": "enabled",
        "schema": "boolean",
        "required": false,
        "description": ""
      },
      {
        "name": "created_at_foreign",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "updated_at_foreign",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about an Ecommerce Store's specific Promo Code"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}",
    "method": "deletePromoCode",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete promo code",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "promoRuleId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo rule of a store."
      },
      {
        "name": "promoCodeId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo code of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}",
    "method": "getPromoCode",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get promo code",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "promoRuleId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo rule of a store."
      },
      {
        "name": "promoCodeId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo code of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about an Ecommerce Store's specific Promo Code"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}",
    "method": "updatePromoCode",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update promo code",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "promoRuleId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo rule of a store."
      },
      {
        "name": "promoCodeId",
        "schema": "string",
        "required": true,
        "description": "The id for the promo code of a store."
      },
      {
        "name": "code",
        "schema": "string",
        "description": ""
      },
      {
        "name": "redemption_url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "usage_count",
        "schema": "integer",
        "description": ""
      },
      {
        "name": "enabled",
        "schema": "boolean",
        "description": ""
      },
      {
        "name": "created_at_foreign",
        "schema": "string",
        "description": ""
      },
      {
        "name": "updated_at_foreign",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about an Ecommerce Store's specific Promo Code"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders",
    "method": "listStoreOrders",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List orders",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "customerId",
        "schema": "string",
        "required": false,
        "description": "Restrict results to orders made by a specific customer."
      },
      {
        "name": "hasOutreach",
        "schema": "boolean",
        "required": false,
        "description": "Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad."
      },
      {
        "name": "campaignId",
        "schema": "string",
        "required": false,
        "description": "Restrict results to orders with a specific `campaign_id` value."
      },
      {
        "name": "outreachId",
        "schema": "string",
        "required": false,
        "description": "Restrict results to orders with a specific `outreach_id` value."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of orders in a store."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders",
    "method": "addOrderToStore",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add order",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "customer",
        "schema": "object",
        "required": true,
        "description": ""
      },
      {
        "name": "campaign_id",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "landing_site",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "financial_status",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "fulfillment_status",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "currency_code",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "order_total",
        "schema": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "order_url",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "discount_total",
        "schema": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "tax_total",
        "schema": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "shipping_total",
        "schema": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "tracking_code",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "processed_at_foreign",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "cancelled_at_foreign",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "updated_at_foreign",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "shipping_address",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "billing_address",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "promos",
        "schema": "array",
        "required": false,
        "description": ""
      },
      {
        "name": "lines",
        "schema": "array",
        "required": true,
        "description": ""
      },
      {
        "name": "outreach",
        "schema": "object",
        "required": false,
        "description": ""
      },
      {
        "name": "tracking_number",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "tracking_carrier",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "tracking_url",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific order."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders/{order_id}",
    "method": "deleteOrder",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete order",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "orderId",
        "schema": "string",
        "required": true,
        "description": "The id for the order in a store."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders/{order_id}",
    "method": "getStoreOrderInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get order info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "orderId",
        "schema": "string",
        "required": true,
        "description": "The id for the order in a store."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific order."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders/{order_id}",
    "method": "updateSpecificOrder",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update order",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "orderId",
        "schema": "string",
        "required": true,
        "description": "The id for the order in a store."
      },
      {
        "name": "customer",
        "schema": "object",
        "description": ""
      },
      {
        "name": "campaign_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "landing_site",
        "schema": "string",
        "description": ""
      },
      {
        "name": "financial_status",
        "schema": "string",
        "description": ""
      },
      {
        "name": "fulfillment_status",
        "schema": "string",
        "description": ""
      },
      {
        "name": "currency_code",
        "schema": "string",
        "description": ""
      },
      {
        "name": "order_total",
        "schema": "number",
        "description": ""
      },
      {
        "name": "order_url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "discount_total",
        "schema": "number",
        "description": ""
      },
      {
        "name": "tax_total",
        "schema": "number",
        "description": ""
      },
      {
        "name": "shipping_total",
        "schema": "number",
        "description": ""
      },
      {
        "name": "tracking_code",
        "schema": "string",
        "description": ""
      },
      {
        "name": "processed_at_foreign",
        "schema": "string",
        "description": ""
      },
      {
        "name": "cancelled_at_foreign",
        "schema": "string",
        "description": ""
      },
      {
        "name": "updated_at_foreign",
        "schema": "string",
        "description": ""
      },
      {
        "name": "shipping_address",
        "schema": "object",
        "description": ""
      },
      {
        "name": "billing_address",
        "schema": "object",
        "description": ""
      },
      {
        "name": "promos",
        "schema": "array",
        "description": ""
      },
      {
        "name": "lines",
        "schema": "array",
        "description": ""
      },
      {
        "name": "outreach",
        "schema": "object",
        "description": ""
      },
      {
        "name": "tracking_number",
        "schema": "string",
        "description": ""
      },
      {
        "name": "tracking_carrier",
        "schema": "string",
        "description": ""
      },
      {
        "name": "tracking_url",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific order."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines",
    "method": "getStoreOrderLines",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List order line items",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "orderId",
        "schema": "string",
        "required": true,
        "description": "The id for the order in a store."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of an order's line items."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines",
    "method": "addOrderLineItem",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add order line item",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "orderId",
        "schema": "string",
        "required": true,
        "description": "The id for the order in a store."
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "product_id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "product_variant_id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "quantity",
        "schema": "integer",
        "required": true,
        "description": ""
      },
      {
        "name": "price",
        "schema": "number",
        "required": true,
        "description": ""
      },
      {
        "name": "discount",
        "schema": "number",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific order line."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}",
    "method": "deleteOrderLine",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete order line item",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "orderId",
        "schema": "string",
        "required": true,
        "description": "The id for the order in a store."
      },
      {
        "name": "lineId",
        "schema": "string",
        "required": true,
        "description": "The id for the line item of an order."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}",
    "method": "getOrderLineItem",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get order line item",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "orderId",
        "schema": "string",
        "required": true,
        "description": "The id for the order in a store."
      },
      {
        "name": "lineId",
        "schema": "string",
        "required": true,
        "description": "The id for the line item of an order."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific order line."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}",
    "method": "updateOrderLine",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update order line item",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "orderId",
        "schema": "string",
        "required": true,
        "description": "The id for the order in a store."
      },
      {
        "name": "lineId",
        "schema": "string",
        "required": true,
        "description": "The id for the line item of an order."
      },
      {
        "name": "product_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "product_variant_id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "quantity",
        "schema": "integer",
        "description": ""
      },
      {
        "name": "price",
        "schema": "number",
        "description": ""
      },
      {
        "name": "discount",
        "schema": "number",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific order line."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products",
    "method": "getStoreProducts",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List product",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of a store's products."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products",
    "method": "addProductToStore",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add product",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "title",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "description",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "handle",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "url",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "type",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "vendor",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "image_url",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "variants",
        "schema": "array",
        "required": true,
        "description": ""
      },
      {
        "name": "images",
        "schema": "array",
        "required": false,
        "description": ""
      },
      {
        "name": "published_at_foreign",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}",
    "method": "deleteProduct",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete product",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}",
    "method": "getStoreProductInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get product info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}",
    "method": "updateProduct",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update product",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "title",
        "schema": "string",
        "description": ""
      },
      {
        "name": "description",
        "schema": "string",
        "description": ""
      },
      {
        "name": "handle",
        "schema": "string",
        "description": ""
      },
      {
        "name": "url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "type",
        "schema": "string",
        "description": ""
      },
      {
        "name": "vendor",
        "schema": "string",
        "description": ""
      },
      {
        "name": "image_url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "variants",
        "schema": "array",
        "description": ""
      },
      {
        "name": "images",
        "schema": "array",
        "description": ""
      },
      {
        "name": "published_at_foreign",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants",
    "method": "listProductVariants",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List product variants",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of a product's variants."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants",
    "method": "addProductVariant",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add product variant",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "title",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "url",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "sku",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "price",
        "schema": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "inventory_quantity",
        "schema": "integer",
        "required": false,
        "description": ""
      },
      {
        "name": "image_url",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "backorders",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "visibility",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product variant."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}",
    "method": "deleteProductVariant",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete product variant",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "variantId",
        "schema": "string",
        "required": true,
        "description": "The id for the product variant."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}",
    "method": "getProductVariantInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get product variant info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "variantId",
        "schema": "string",
        "required": true,
        "description": "The id for the product variant."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product variant."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}",
    "method": "updateProductVariant",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update product variant",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "variantId",
        "schema": "string",
        "required": true,
        "description": "The id for the product variant."
      },
      {
        "name": "title",
        "schema": "string",
        "description": ""
      },
      {
        "name": "url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "sku",
        "schema": "string",
        "description": ""
      },
      {
        "name": "price",
        "schema": "number",
        "description": ""
      },
      {
        "name": "inventory_quantity",
        "schema": "integer",
        "description": ""
      },
      {
        "name": "image_url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "backorders",
        "schema": "string",
        "description": ""
      },
      {
        "name": "visibility",
        "schema": "string",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product variant."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}",
    "method": "addOrUpdateProductVariant",
    "httpMethod": HttpMethodsEnum.PUT,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add or update product variant",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "variantId",
        "schema": "string",
        "required": true,
        "description": "The id for the product variant."
      },
      {
        "name": "title",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "url",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "sku",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "price",
        "schema": "number",
        "required": false,
        "description": ""
      },
      {
        "name": "inventory_quantity",
        "schema": "integer",
        "required": false,
        "description": ""
      },
      {
        "name": "image_url",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "backorders",
        "schema": "string",
        "required": false,
        "description": ""
      },
      {
        "name": "visibility",
        "schema": "string",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product variant."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/images",
    "method": "getProductImages",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "List product images",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of a product's images."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/images",
    "method": "addProductImage",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Add product image",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "id",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "url",
        "schema": "string",
        "required": true,
        "description": ""
      },
      {
        "name": "variant_ids",
        "schema": "array",
        "required": false,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product image."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}",
    "method": "deleteProductImage",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Delete product image",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "imageId",
        "schema": "string",
        "required": true,
        "description": "The id for the product image."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}",
    "method": "getProductImageInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Get product image info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "imageId",
        "schema": "string",
        "required": true,
        "description": "The id for the product image."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product image."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}",
    "method": "updateProductImage",
    "httpMethod": HttpMethodsEnum.PATCH,
    "tag": "ecommerce",
    "typeScriptTag": "ecommerce",
    "description": "Update product image",
    "parameters": [
      {
        "name": "storeId",
        "schema": "string",
        "required": true,
        "description": "The store id."
      },
      {
        "name": "productId",
        "schema": "string",
        "required": true,
        "description": "The id for the product of a store."
      },
      {
        "name": "imageId",
        "schema": "string",
        "required": true,
        "description": "The id for the product image."
      },
      {
        "name": "id",
        "schema": "string",
        "description": ""
      },
      {
        "name": "url",
        "schema": "string",
        "description": ""
      },
      {
        "name": "variant_ids",
        "schema": "array",
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Information about a specific product image."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/search-campaigns",
    "method": "byQueryTerms",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "searchCampaigns",
    "typeScriptTag": "searchCampaigns",
    "description": "Search campaigns",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "query",
        "schema": "string",
        "required": true,
        "description": "The search query used to filter results."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Campaigns and Snippets found for given search term."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/search-members",
    "method": "listMembers",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "searchMembers",
    "typeScriptTag": "searchMembers",
    "description": "Search members",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "query",
        "schema": "string",
        "required": true,
        "description": "The search query used to filter results. Query should be a valid email, or a string representing a contact's first or last name."
      },
      {
        "name": "listId",
        "schema": "string",
        "required": false,
        "description": "The unique id for the list."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Members found for given search term"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/ping",
    "method": "healthCheck",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "ping",
    "typeScriptTag": "ping",
    "description": "Ping",
    "parameters": [],
    "responses": [
      {
        "statusCode": "200",
        "description": "API health status."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/facebook-ads",
    "method": "listAds",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "facebookAds",
    "typeScriptTag": "facebookAds",
    "description": "List facebook ads",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "Contains an array of facebook ads."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/facebook-ads/{outreach_id}",
    "method": "getInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "facebookAds",
    "typeScriptTag": "facebookAds",
    "description": "Get facebook ad info",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "outreachId",
        "schema": "string",
        "required": true,
        "description": "The outreach id."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/facebook-ads",
    "method": "listFacebookAdsReports",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "List facebook ads reports",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      },
      {
        "name": "sortDir",
        "schema": "string",
        "required": false,
        "description": "Determines the order direction for sorted results."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of Facebook ads."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/facebook-ads/{outreach_id}",
    "method": "facebookAdReport",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "Get facebook ad report",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "outreachId",
        "schema": "string",
        "required": true,
        "description": "The outreach id."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/facebook-ads/{outreach_id}/ecommerce-product-activity",
    "method": "listFacebookEcommerceReport",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "List facebook ecommerce report",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      },
      {
        "name": "outreachId",
        "schema": "string",
        "required": true,
        "description": "The outreach id."
      },
      {
        "name": "sortField",
        "schema": "string",
        "required": false,
        "description": "Returns files sorted by the specified field."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of ecommerce products."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/landing-pages/{outreach_id}",
    "method": "getLandingPageReport",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "Get landing page report",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "outreachId",
        "schema": "string",
        "required": true,
        "description": "The outreach id."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A summary of an individual landing page's settings and content."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/landing-pages",
    "method": "listLandingPagesReports",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "List landing pages reports",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A collection of landing pages."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/surveys",
    "method": "listSurveyReports",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "List survey reports",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "count",
        "schema": "integer",
        "required": false,
        "description": "The number of records to return. Default value is 10. Maximum value is 1000"
      },
      {
        "name": "offset",
        "schema": "integer",
        "required": false,
        "description": "Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/surveys/{survey_id}",
    "method": "getSurveyReport",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "Get survey report",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The report for a survey."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/surveys/{survey_id}/questions",
    "method": "listSurveyQuestionsReports",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "List survey question reports",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/surveys/{survey_id}/questions/{question_id}",
    "method": "surveyQuestionReport",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "Get survey question report",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      },
      {
        "name": "questionId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey question."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The details of a survey question's report."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/surveys/{survey_id}/questions/{question_id}/answers",
    "method": "surveyQuestionAnswersList",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "List answers for question",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      },
      {
        "name": "questionId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey question."
      },
      {
        "name": "respondentFamiliarityIs",
        "schema": "string",
        "required": false,
        "description": "Filter survey responses by familiarity of the respondents."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/surveys/{survey_id}/responses",
    "method": "surveyResponsesList",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "List survey responses",
    "parameters": [
      {
        "name": "fields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "excludeFields",
        "schema": "array",
        "required": false,
        "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation."
      },
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      },
      {
        "name": "answeredQuestion",
        "schema": "integer",
        "required": false,
        "description": "The ID of the question that was answered."
      },
      {
        "name": "choseAnswer",
        "schema": "string",
        "required": false,
        "description": "The ID of the option chosen to filter responses on."
      },
      {
        "name": "respondentFamiliarityIs",
        "schema": "string",
        "required": false,
        "description": "Filter survey responses by familiarity of the respondents."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": ""
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/reporting/surveys/{survey_id}/responses/{response_id}",
    "method": "singleSurveyResponse",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "reporting",
    "typeScriptTag": "reporting",
    "description": "Get survey response",
    "parameters": [
      {
        "name": "surveyId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey."
      },
      {
        "name": "responseId",
        "schema": "string",
        "required": true,
        "description": "The ID of the survey response."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "A single survey response."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/verified-domains/{domain_name}",
    "method": "deleteDomain",
    "httpMethod": HttpMethodsEnum.DELETE,
    "tag": "verifiedDomains",
    "typeScriptTag": "verifiedDomains",
    "description": "Delete domain",
    "parameters": [
      {
        "name": "domainName",
        "schema": "string",
        "required": true,
        "description": "The domain name."
      }
    ],
    "responses": [
      {
        "statusCode": "204",
        "description": "Empty Response"
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/verified-domains/{domain_name}",
    "method": "getInfo",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "verifiedDomains",
    "typeScriptTag": "verifiedDomains",
    "description": "Get domain info",
    "parameters": [
      {
        "name": "domainName",
        "schema": "string",
        "required": true,
        "description": "The domain name."
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The verified domains currently on the account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/verified-domains/{domain_name}/actions/verify",
    "method": "verifyDomainForSending",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "verifiedDomains",
    "typeScriptTag": "verifiedDomains",
    "description": "Verify domain",
    "parameters": [
      {
        "name": "domainName",
        "schema": "string",
        "required": true,
        "description": "The domain name."
      },
      {
        "name": "code",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The verified domains currently on the account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/verified-domains",
    "method": "listSendingDomains",
    "httpMethod": HttpMethodsEnum.GET,
    "tag": "verifiedDomains",
    "typeScriptTag": "verifiedDomains",
    "description": "List sending domains",
    "parameters": [],
    "responses": [
      {
        "statusCode": "200",
        "description": "The verified domains currently on the account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  },
  {
    "url": "/verified-domains",
    "method": "addDomainToAccount",
    "httpMethod": HttpMethodsEnum.POST,
    "tag": "verifiedDomains",
    "typeScriptTag": "verifiedDomains",
    "description": "Add domain to account",
    "parameters": [
      {
        "name": "verification_email",
        "schema": "string",
        "required": true,
        "description": ""
      }
    ],
    "responses": [
      {
        "statusCode": "200",
        "description": "The verified domains currently on the account."
      },
      {
        "statusCode": "default",
        "description": "An error generated by the Mailchimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'."
      }
    ]
  }
]
    }
      language="TypeScript"
      apiTitle="Mailchimp Marketing API"
      apiBaseUrl="https://server.api.mailchimp.com/3.0"
      apiVersion="3.0.55"
      endpoints={166}
      sdkMethods={272}
      schemas={0}
      parameters={1276}
      difficulty="Very Hard"
      openApiRaw="https://raw.githubusercontent.com/konfig-sdks/openapi-examples/HEAD/mailchimp/openapi.yaml"
    />
  );
}
  